id HKMHUIMentalHealthUIFrameworkBundle()
{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t vars8;

  v0 = (void *)HKMHUIMentalHealthUIFrameworkBundle___ClassBundle;
  if (!HKMHUIMentalHealthUIFrameworkBundle___ClassBundle)
  {
    v1 = [MEMORY[0x263F086E0] bundleForClass:objc_opt_class()];
    v2 = (void *)HKMHUIMentalHealthUIFrameworkBundle___ClassBundle;
    HKMHUIMentalHealthUIFrameworkBundle___ClassBundle = v1;

    v0 = (void *)HKMHUIMentalHealthUIFrameworkBundle___ClassBundle;
  }

  return v0;
}

double FkH_regionOf(uint64_t a1, float32x4_t a2, double a3, float a4)
{
  float32x4_t v4 = vaddq_f32(a2, (float32x4_t)COERCE_UNSIGNED_INT(-a4));
  if (a1) {
    v4.i64[0] = vaddq_f32(v4, (float32x4_t)xmmword_256179AA0).u64[0];
  }
  return *(double *)v4.i64;
}

double FkV_regionOf(uint64_t a1, float32x4_t a2, double a3, float a4)
{
  LODWORD(v4) = 0;
  *((float *)&v4 + 1) = -a4;
  float32x4_t v5 = vaddq_f32(a2, (float32x4_t)v4);
  if (a1) {
    v5.i64[0] = vaddq_f32(v5, (float32x4_t)xmmword_256179AA0).u64[0];
  }
  return *(double *)v5.i64;
}

double DkH_regionOf(uint64_t a1, float32x4_t a2, double a3, float a4, float a5)
{
  float32x4_t v5 = vaddq_f32((float32x4_t)COERCE_UNSIGNED_INT(-(float)(a4 - (float)(a5 * 0.5))), vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)LODWORD(a5), a2.f32[0]), (float32x4_t)xmmword_256179AC0, *(float32x2_t *)a2.f32, 1), (float32x4_t)xmmword_256179AD0, a2, 2));
  if (a1) {
    v5.i64[0] = vaddq_f32(v5, (float32x4_t)xmmword_256179AA0).u64[0];
  }
  return *(double *)v5.i64;
}

double DkV_regionOf(uint64_t a1, float32x4_t a2, double a3, float a4, float a5)
{
  LODWORD(v5) = 0;
  LODWORD(v6) = 0;
  *((float *)&v6 + 1) = a5;
  *((float *)&v5 + 1) = -(float)(a4 - (float)(a5 * 0.5));
  float32x4_t v7 = vaddq_f32((float32x4_t)v5, vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)COERCE_UNSIGNED_INT(1.0), a2.f32[0]), (float32x4_t)v6, *(float32x2_t *)a2.f32, 1), (float32x4_t)xmmword_256179AD0, a2, 2));
  if (a1) {
    v7.i64[0] = vaddq_f32(v7, (float32x4_t)xmmword_256179AA0).u64[0];
  }
  return *(double *)v7.i64;
}

double Dp_regionOf(uint64_t a1, float32x4_t a2, double a3, float a4, float a5)
{
  LODWORD(v5) = 0;
  *((float *)&v5 + 1) = a5;
  *(float *)&unint64_t v6 = -a4;
  *((float *)&v6 + 1) = -a4;
  float32x4_t v7 = vaddq_f32((float32x4_t)v6, vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)LODWORD(a5), a2.f32[0]), (float32x4_t)v5, *(float32x2_t *)a2.f32, 1), (float32x4_t)xmmword_256179AD0, a2, 2));
  if (a1) {
    v7.i64[0] = vaddq_f32(v7, (float32x4_t)xmmword_256179AA0).u64[0];
  }
  return *(double *)v7.i64;
}

double UkH_regionOf(uint64_t a1, float32x4_t a2, double a3, double a4, float a5)
{
  float32x4_t v5 = vaddq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)COERCE_UNSIGNED_INT(1.0 / a5), a2.f32[0]), (float32x4_t)xmmword_256179AC0, *(float32x2_t *)a2.f32, 1), (float32x4_t)xmmword_256179AD0, a2, 2), (float32x4_t)xmmword_256179AE0);
  if (a1) {
    v5.i64[0] = vaddq_f32(v5, (float32x4_t)xmmword_256179AA0).u64[0];
  }
  return *(double *)v5.i64;
}

double UkV_regionOf(uint64_t a1, float32x4_t a2, double a3, double a4, float a5)
{
  LODWORD(v5) = 0;
  *((float *)&v5 + 1) = 1.0 / a5;
  float32x4_t v6 = vaddq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)COERCE_UNSIGNED_INT(1.0), a2.f32[0]), (float32x4_t)v5, *(float32x2_t *)a2.f32, 1), (float32x4_t)xmmword_256179AD0, a2, 2), (float32x4_t)xmmword_256179B00);
  if (a1) {
    v6.i64[0] = vaddq_f32(v6, (float32x4_t)xmmword_256179AA0).u64[0];
  }
  return *(double *)v6.i64;
}

double Up_regionOf(uint64_t a1, float32x4_t a2, double a3, float a4, float a5)
{
  LODWORD(v5) = 0;
  *((float *)&v5 + 1) = 1.0 / a5;
  float32x4_t v6 = vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)COERCE_UNSIGNED_INT(1.0 / a5), a2.f32[0]), (float32x4_t)v5, *(float32x2_t *)a2.f32, 1), (float32x4_t)xmmword_256179AD0, a2, 2);
  *(float *)&unint64_t v7 = -a4;
  *((float *)&v7 + 1) = -a4;
  float32x4_t v8 = vaddq_f32((float32x4_t)v7, v6);
  if (a1) {
    v8.i64[0] = vaddq_f32(v8, (float32x4_t)xmmword_256179AA0).u64[0];
  }
  return *(double *)v8.i64;
}

uint64_t initFilterInfo(uint64_t result, float a2)
{
  uint64_t v2 = result;
  *(_OWORD *)(result + 20) = 0u;
  uint64_t v3 = result + 20;
  *(_OWORD *)(result + 36) = 0u;
  if (a2 >= 1.0)
  {
    int GaussianBlurPlanIndex = getGaussianBlurPlanIndex(a2);
    GaussianBlurPlan = getGaussianBlurPlan(GaussianBlurPlanIndex);
    uint64_t v4 = 0;
    int v7 = 0;
    if ((int)GaussianBlurPlan[1] <= 1) {
      int v8 = 1;
    }
    else {
      int v8 = (int)GaussianBlurPlan[1];
    }
    do
    {
      uint64_t v9 = v4;
      int v10 = GaussianBlurPlan[v7 + 2];
      result = getGaussianBlurKernelSize(v10);
      uint64_t v4 = v9 + 1;
      *(_DWORD *)(v3 + 4 * v9) = v10;
      v7 += result;
    }
    while (v7 < v8);
  }
  else
  {
    uint64_t v4 = 0;
    GaussianBlurPlan = 0;
  }
  *(void *)uint64_t v2 = GaussianBlurPlan;
  *(void *)(v2 + 8) = v4;
  *(_DWORD *)(v2 + 16) = 1065353216;
  return result;
}

uint64_t GetPixelInfo()
{
  return 0x1800010B14112073;
}

id GetSampler(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id result = objc_alloc_init(MEMORY[0x263F129F8]);
  if (result)
  {
    uint64_t v9 = result;
    uint64_t v10 = 4 * (a2 == 0);
    BOOL v11 = a3 == 1;
    BOOL v12 = a4 == 1;
    [result setSAddressMode:v10];
    [v9 setTAddressMode:v10];
    [v9 setRAddressMode:v10];
    [v9 setMinFilter:v11];
    [v9 setMagFilter:v11];
    [v9 setNormalizedCoordinates:v12];
    [v9 setMipFilter:v12];
    uint64_t v13 = [a1 newSamplerStateWithDescriptor:v9];

    return (id)v13;
  }
  return result;
}

uint64_t WMPSConvolutionGetIntermediateTexture(void *a1, void *a2, void *a3, uint64_t a4)
{
  int v8 = objc_opt_new();
  [v8 setPixelFormat:*a2 & 0x3FFLL];
  [v8 setWidth:*a3];
  [v8 setHeight:a3[1]];
  [v8 setArrayLength:a3[2]];
  if (a3[2] == 1) {
    uint64_t v9 = 2;
  }
  else {
    uint64_t v9 = 3;
  }
  [v8 setTextureType:v9];
  [v8 setStorageMode:2];
  [v8 setCpuCacheMode:0];
  [v8 setUsage:3];
  [v8 setProtectionOptions:a4];
  uint64_t v10 = [a1 newTextureWithDescriptor:v8];

  return v10;
}

uint64_t NewComputePipelineState(void *a1, uint64_t a2)
{
  v10[1] = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v4 = objc_msgSend(a1, "newFunctionWithName:");
  unint64_t v5 = (void *)[a1 device];
  id v6 = objc_alloc_init(MEMORY[0x263F12850]);
  [v6 setComputeFunction:v4];
  if (a2)
  {
    v10[0] = a2;
    objc_msgSend(v6, "setBinaryArchives:", objc_msgSend(MEMORY[0x263EFF8C0], "arrayWithObjects:count:", v10, 1));
  }
  [v6 setThreadGroupSizeIsMultipleOfThreadExecutionWidth:1];
  uint64_t v7 = [v5 newComputePipelineStateWithDescriptor:v6 error:&v9];

  if (v9) {
    return 0;
  }
  else {
    return v7;
  }
}

uint64_t getGaussianBlurKernelSize(int a1)
{
  if (a1 > 25) {
    return 0xFFFFFFFFLL;
  }
  else {
    return getGaussianBlurKernelSize::s[a1];
  }
}

uint64_t getGaussianBlurKernelBorderScaleData(unsigned int a1)
{
  if (a1 > 0x19) {
    return 0;
  }
  else {
    return getGaussianBlurKernelBorderScaleData::data[a1];
  }
}

uint64_t getGaussianBlurPlanIndex(double a1)
{
  int v1 = 0;
  int v2 = 256;
  do
  {
    if (v2 + v1 <= 820 && kGaussianBlurPlans[kGaussianBlurPlanIndex[v2 + v1]] <= a1) {
      v1 += v2;
    }
    else {
      int v2 = v2 >> 1;
    }
  }
  while (v2 > 0);
  if (v1 >= 820)
  {
    uint64_t v3 = v1;
  }
  else
  {
    uint64_t v3 = v1;
    if (vabdd_f64(kGaussianBlurPlans[kGaussianBlurPlanIndex[v1 + 1]], a1) < vabdd_f64(kGaussianBlurPlans[kGaussianBlurPlanIndex[v1]], a1))uint64_t v3 = v1 + 1; {
  }
    }
  return kGaussianBlurPlanIndex[v3];
}

double *getGaussianBlurPlan(int a1)
{
  return &kGaussianBlurPlans[a1];
}

uint64_t HKMHUIActivePairedWatchProductType()
{
  return 0;
}

uint64_t HKMHUIActivePairedWatchBuildVersion()
{
  return 0;
}

uint64_t BundleNameProviding.bundleName.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 8))();
  unint64_t v2 = sub_255F5CE90();
  uint64_t v3 = (void *)MEMORY[0x25A2A0F30](46, 0xE100000000000000, 1, 1, MEMORY[0x263F8D310], v2);
  swift_bridgeObjectRelease();
  if (v3[2])
  {
    uint64_t v4 = v3[4];
    uint64_t v5 = v3[5];
    uint64_t v6 = v3[6];
    uint64_t v7 = v3[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v8 = MEMORY[0x25A2A09B0](v4, v5, v6, v7);
    swift_bridgeObjectRelease();
    return v8;
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  return result;
}

unint64_t sub_255F5CE90()
{
  unint64_t result = qword_269F42378;
  if (!qword_269F42378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F42378);
  }
  return result;
}

uint64_t sub_255F5CEE4()
{
  return swift_getOpaqueTypeMetadata2();
}

uint64_t sub_255F5CF78()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_255F5D008()
{
  if (!qword_269F42380)
  {
    sub_255F5D06C();
    sub_255F5D1A8();
    unint64_t v0 = sub_2561775E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F42380);
    }
  }
}

void sub_255F5D06C()
{
  if (!qword_269F42388)
  {
    sub_255F5D0D4();
    sub_255F5D150();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F42388);
    }
  }
}

void sub_255F5D0D4()
{
  if (!qword_269F42390)
  {
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F42390);
    }
  }
}

void sub_255F5D150()
{
  if (!qword_269F42398)
  {
    sub_256177518();
    unint64_t v0 = sub_256176D28();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F42398);
    }
  }
}

unint64_t sub_255F5D1A8()
{
  unint64_t result = qword_269F423A0;
  if (!qword_269F423A0)
  {
    sub_255F5D06C();
    swift_getOpaqueTypeConformance2();
    sub_255F5D2E8((unint64_t *)&qword_269F423A8, (void (*)(uint64_t))sub_255F5D150);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F423A0);
  }
  return result;
}

void sub_255F5D280()
{
  if (!qword_269F423B0)
  {
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F423B0);
    }
  }
}

uint64_t sub_255F5D2E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t dispatch thunk of BundleNameProviding.bundleNameAndExtension.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_255F5D354(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

__n128 __swift_memcpy48_16(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_255F5D3A8(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_255F5D3C8(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 48) = v3;
  return result;
}

void type metadata accessor for HKCVLight(uint64_t a1)
{
}

__n128 __swift_memcpy64_16(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s9PlacementVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s9PlacementVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 64) = v3;
  return result;
}

void type metadata accessor for simd_float4x4(uint64_t a1)
{
}

void type metadata accessor for HKCVAnimationModeType(uint64_t a1)
{
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for TagLayout(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TagLayout(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for ValenceClassification(uint64_t a1)
{
}

void type metadata accessor for CGColor(uint64_t a1)
{
}

void type metadata accessor for __HKStateOfMindReflectiveInterval(uint64_t a1)
{
}

void type metadata accessor for __HKStateOfMindDomain(uint64_t a1)
{
}

void type metadata accessor for Label(uint64_t a1)
{
}

uint64_t sub_255F5D578()
{
  return sub_255F5D2E8(&qword_269F42830, type metadata accessor for Label);
}

uint64_t sub_255F5D5C8()
{
  return sub_256178928();
}

uint64_t sub_255F5D610()
{
  return sub_2561788F8();
}

uint64_t sub_255F5D63C()
{
  return sub_256178928();
}

void sub_255F5D680(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_255F5D68C(uint64_t a1, uint64_t a2)
{
  return sub_255F5DCC8(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_255F5D6B0(uint64_t a1, id *a2)
{
  uint64_t result = sub_256177EC8();
  *a2 = 0;
  return result;
}

uint64_t sub_255F5D728(uint64_t a1, id *a2)
{
  char v3 = sub_256177ED8();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_255F5D7A8@<X0>(uint64_t *a1@<X8>)
{
  sub_256177EE8();
  uint64_t v2 = sub_256177EA8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_255F5D7EC(uint64_t a1, uint64_t a2)
{
  return sub_255F5DCC8(a1, a2, MEMORY[0x263F8D308]);
}

_DWORD *sub_255F5D80C@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

void sub_255F5D81C(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_255F5D828(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

BOOL sub_255F5D83C(void *a1, void *a2)
{
  return *a1 == *a2;
}

void *sub_255F5D850@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_255F5D860()
{
  return sub_255F5D2E8(&qword_269F42838, type metadata accessor for __HKStateOfMindDomain);
}

uint64_t sub_255F5D8B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_256177EE8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_255F5D8DC(uint64_t a1)
{
  uint64_t v2 = sub_255F5D2E8((unint64_t *)&qword_269F47410, type metadata accessor for Option);
  uint64_t v3 = sub_255F5D2E8((unint64_t *)&unk_269F429D0, type metadata accessor for Option);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_255F5D998@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_256177EA8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_255F5D9E0(uint64_t a1)
{
  uint64_t v2 = sub_255F5D2E8(&qword_269F429B8, type metadata accessor for CubeLayout);
  uint64_t v3 = sub_255F5D2E8((unint64_t *)&unk_269F429C0, type metadata accessor for CubeLayout);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t initializeBufferWithCopyOfBuffer for StateOfMindEntryView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy32_16(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_255F5DADC(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

void type metadata accessor for HKCVVertex(uint64_t a1)
{
}

void type metadata accessor for CubeLayout(uint64_t a1)
{
}

void type metadata accessor for Option(uint64_t a1)
{
}

void type metadata accessor for MTLPixelFormat(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void sub_255F5DB60(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_255F5DBA8()
{
  return sub_255F5D2E8(&qword_269F42988, type metadata accessor for Option);
}

uint64_t sub_255F5DBF0()
{
  return sub_255F5D2E8(&qword_269F42990, type metadata accessor for Option);
}

uint64_t sub_255F5DC38()
{
  return sub_255F5D2E8(&qword_269F42998, type metadata accessor for CubeLayout);
}

uint64_t sub_255F5DC80()
{
  return sub_255F5D2E8(&qword_269F429A0, type metadata accessor for CubeLayout);
}

uint64_t sub_255F5DCC8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_256177EE8();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_255F5DD0C()
{
  sub_256177EE8();
  sub_256177F38();

  return swift_bridgeObjectRelease();
}

uint64_t sub_255F5DD60()
{
  sub_256177EE8();
  sub_2561788E8();
  sub_256177F38();
  uint64_t v0 = sub_256178928();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_255F5DDD4()
{
  uint64_t v0 = sub_256177EE8();
  uint64_t v2 = v1;
  if (v0 == sub_256177EE8() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_256178828();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_255F5DE60()
{
  return sub_255F5D2E8(&qword_269F429A8, type metadata accessor for CubeLayout);
}

uint64_t sub_255F5DEA8()
{
  return sub_255F5D2E8(&qword_269F429B0, type metadata accessor for Option);
}

ValueMetadata *type metadata accessor for StateOfMindCalendarMomentariesView()
{
  return &type metadata for StateOfMindCalendarMomentariesView;
}

uint64_t sub_255F5DF28()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_255F5DF44@<D0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(self, sel_systemGray3Color);
  uint64_t v5 = MEMORY[0x25A29FE80](v4);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_256178678();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v6) {
    double v7 = 1.0;
  }
  else {
    double v7 = 0.0;
  }
  sub_2561778E8();
  sub_256175F38();
  *(void *)a2 = v5;
  *(_WORD *)(a2 + 8) = 256;
  *(double *)(a2 + 16) = v7;
  *(void *)(a2 + 24) = v9;
  *(unsigned char *)(a2 + 32) = v10;
  *(void *)(a2 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v11;
  *(unsigned char *)(a2 + 48) = v12;
  double result = *(double *)&v13;
  *(_OWORD *)(a2 + 56) = v13;
  return result;
}

uint64_t sub_255F5E058()
{
  return sub_256177108();
}

double sub_255F5E074@<D0>(uint64_t a1@<X8>)
{
  return sub_255F5DF44(*v1, a1);
}

uint64_t sub_255F5E07C()
{
  return sub_255F5E28C(&qword_269F42AA0, sub_255F5E0CC, (void (*)(void))sub_255F5E250);
}

void sub_255F5E0CC(uint64_t a1)
{
}

void sub_255F5E0F4(uint64_t a1)
{
}

void sub_255F5E11C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_255F5E180()
{
  if (!qword_269F42AB8)
  {
    sub_255F5E1FC();
    unint64_t v0 = sub_256175D78();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F42AB8);
    }
  }
}

unint64_t sub_255F5E1FC()
{
  unint64_t result = qword_269F42AC0;
  if (!qword_269F42AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F42AC0);
  }
  return result;
}

uint64_t sub_255F5E250()
{
  return sub_255F5E28C(&qword_269F42AC8, sub_255F5E0F4, (void (*)(void))sub_255F5E30C);
}

uint64_t sub_255F5E28C(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_255F5E30C()
{
  unint64_t result = qword_269F42AD0;
  if (!qword_269F42AD0)
  {
    sub_255F5E180();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F42AD0);
  }
  return result;
}

uint64_t *sub_255F5E364(uint64_t *a1, uint64_t *a2)
{
  sub_255F63580(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_256176AA8();
      uint64_t v7 = *(void *)(v6 - 8);
      v81 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48);
      if (v81(a2, 1, v6))
      {
        sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      char v10 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v11 = v10[5];
      char v12 = (char *)a1 + v11;
      long long v13 = (char *)a2 + v11;
      uint64_t v14 = sub_256176158();
      v15 = (void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      v80 = *v15;
      (*v15)(v12, v13, v14);
      *((unsigned char *)a1 + v10[6]) = *((unsigned char *)a2 + v10[6]);
      uint64_t v16 = v10[7];
      v17 = (char *)a1 + v16;
      v18 = (char *)a2 + v16;
      uint64_t v19 = sub_256175D98();
      v78 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
      v78(v17, v18, v19);
      uint64_t v20 = v10[8];
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      if (v81((uint64_t *)((char *)a2 + v20), 1, v6))
      {
        sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v21, v22, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v21, 0, 1, v6);
      }
      uint64_t v24 = _s6StylesV8TimelineVMa(0);
      v80(&v21[*(int *)(v24 + 20)], &v22[*(int *)(v24 + 20)], v14);
      uint64_t v25 = v10[9];
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      uint64_t v79 = v7;
      if (v81((uint64_t *)((char *)a2 + v25), 1, v6))
      {
        sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v26, v27, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v26, 0, 1, v6);
      }
      uint64_t v29 = _s6StylesV6NoDataVMa(0);
      v80(&v26[*(int *)(v29 + 20)], &v27[*(int *)(v29 + 20)], v14);
      v26[*(int *)(v29 + 24)] = v27[*(int *)(v29 + 24)];
      uint64_t v30 = v10[10];
      v31 = (char *)a1 + v30;
      v32 = (char *)a2 + v30;
      if (v81((uint64_t *)((char *)a2 + v30), 1, v6))
      {
        sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
        uint64_t v34 = v79;
      }
      else
      {
        uint64_t v34 = v79;
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v31, v32, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v31, 0, 1, v6);
      }
      uint64_t v35 = _s6StylesV11PlaceholderVMa(0);
      v80(&v31[*(int *)(v35 + 20)], &v32[*(int *)(v35 + 20)], v14);
      uint64_t v36 = v10[11];
      v37 = (char *)a1 + v36;
      v38 = (char *)a2 + v36;
      if (v81((uint64_t *)((char *)a2 + v36), 1, v6))
      {
        sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v37, v38, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v37, 0, 1, v6);
      }
      uint64_t v40 = _s6StylesV6SymbolVMa(0);
      v80(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v14);
      uint64_t v41 = v10[12];
      v42 = (char *)a1 + v41;
      v43 = (char *)a2 + v41;
      if (v81((uint64_t *)((char *)a2 + v41), 1, v6))
      {
        sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v42, v43, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v42, 0, 1, v6);
      }
      v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v80(&v42[v45[5]], &v43[v45[5]], v14);
      v42[v45[6]] = v43[v45[6]];
      v78(&v42[v45[7]], &v43[v45[7]], v19);
      uint64_t v46 = v10[13];
      v47 = (char *)a1 + v46;
      v48 = (char *)a2 + v46;
      if (v81((uint64_t *)((char *)a2 + v46), 1, v6))
      {
        sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
        uint64_t v50 = v79;
      }
      else
      {
        uint64_t v50 = v79;
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v47, v48, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v47, 0, 1, v6);
      }
      uint64_t v51 = _s6StylesV5EmptyVMa(0);
      v80(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v14);
      v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
      uint64_t v52 = v10[14];
      v53 = (char *)a1 + v52;
      v54 = (char *)a2 + v52;
      if (v81((uint64_t *)((char *)a2 + v52), 1, v6))
      {
        sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v53, v54, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v6);
      }
      uint64_t v56 = _s6StylesV5DailyVMa(0);
      v80(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v14);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      uint64_t v57 = v10[15];
      v58 = (char *)a1 + v57;
      v59 = (char *)a2 + v57;
      if (v81((uint64_t *)((char *)a2 + v57), 1, v6))
      {
        sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v58, v59, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v6);
      }
      uint64_t v61 = _s6StylesV9MomentaryVMa(0);
      v80(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v14);
      uint64_t v62 = v10[16];
      v63 = (char *)a1 + v62;
      v64 = (char *)a2 + v62;
      if (v81((uint64_t *)((char *)a2 + v62), 1, v6))
      {
        sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v63, v64, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v6);
      }
      uint64_t v66 = _s6StylesV6HeaderVMa(0);
      v80(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v14);
      uint64_t v67 = v10[17];
      v68 = (char *)a1 + v67;
      v69 = (char *)a2 + v67;
      if (v81((uint64_t *)((char *)a2 + v67), 1, v6))
      {
        sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v68, v69, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v6);
      }
      uint64_t v71 = _s6StylesV11ChartButtonVMa(0);
      v80(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v14);
      uint64_t v72 = v10[18];
      v73 = (char *)a1 + v72;
      v74 = (char *)a2 + v72;
      if (v81((uint64_t *)v74, 1, v6))
      {
        sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v73, v74, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v6);
      }
      uint64_t v76 = _s6StylesV15LogButtonFooterVMa(0);
      v80(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v14);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_255F5F13C(uint64_t a1)
{
  sub_255F63580(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_256176AA8();
    uint64_t v3 = *(void *)(v2 - 8);
    uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
    if (!v4(a1, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    }
    int v5 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v6 = a1 + v5[5];
    uint64_t v7 = sub_256176158();
    uint64_t v34 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    v34(v6, v7);
    uint64_t v8 = a1 + v5[7];
    uint64_t v9 = sub_256175D98();
    uint64_t v33 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    v33(v8, v9);
    uint64_t v10 = a1 + v5[8];
    if (!v4(v10, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v10, v2);
    }
    uint64_t v11 = _s6StylesV8TimelineVMa(0);
    v34(v10 + *(int *)(v11 + 20), v7);
    uint64_t v12 = a1 + v5[9];
    if (!v4(v12, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v12, v2);
    }
    uint64_t v13 = _s6StylesV6NoDataVMa(0);
    v34(v12 + *(int *)(v13 + 20), v7);
    uint64_t v14 = a1 + v5[10];
    if (!v4(v14, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v14, v2);
    }
    uint64_t v15 = _s6StylesV11PlaceholderVMa(0);
    v34(v14 + *(int *)(v15 + 20), v7);
    uint64_t v16 = a1 + v5[11];
    if (!v4(v16, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v16, v2);
    }
    uint64_t v17 = _s6StylesV6SymbolVMa(0);
    v34(v16 + *(int *)(v17 + 20), v7);
    uint64_t v18 = a1 + v5[12];
    if (!v4(v18, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v18, v2);
    }
    uint64_t v19 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v34(v18 + *(int *)(v19 + 20), v7);
    v33(v18 + *(int *)(v19 + 28), v9);
    uint64_t v20 = a1 + v5[13];
    if (!v4(v20, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v20, v2);
    }
    uint64_t v21 = _s6StylesV5EmptyVMa(0);
    v34(v20 + *(int *)(v21 + 20), v7);
    uint64_t v22 = a1 + v5[14];
    if (!v4(v22, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v22, v2);
    }
    uint64_t v23 = _s6StylesV5DailyVMa(0);
    v34(v22 + *(int *)(v23 + 20), v7);
    uint64_t v24 = a1 + v5[15];
    if (!v4(v24, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v24, v2);
    }
    uint64_t v25 = _s6StylesV9MomentaryVMa(0);
    v34(v24 + *(int *)(v25 + 20), v7);
    uint64_t v26 = a1 + v5[16];
    if (!v4(v26, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v26, v2);
    }
    uint64_t v27 = _s6StylesV6HeaderVMa(0);
    v34(v26 + *(int *)(v27 + 20), v7);
    uint64_t v28 = a1 + v5[17];
    if (!v4(v28, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v28, v2);
    }
    uint64_t v29 = _s6StylesV11ChartButtonVMa(0);
    v34(v28 + *(int *)(v29 + 20), v7);
    uint64_t v30 = a1 + v5[18];
    if (!v4(v30, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v30, v2);
    }
    uint64_t v31 = v30 + *(int *)(_s6StylesV15LogButtonFooterVMa(0) + 20);
    return ((uint64_t (*)(uint64_t, uint64_t))v34)(v31, v7);
  }
  else
  {
    return swift_release();
  }
}

void *sub_255F5F7A0(void *a1, void *a2)
{
  sub_255F63580(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256176AA8();
    uint64_t v5 = *(void *)(v4 - 8);
    v78 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
    if (v78((char *)a2, 1, v4))
    {
      sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, v4);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
    }
    uint64_t v7 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v8 = v7[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_256176158();
    uint64_t v12 = (void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    v77 = *v12;
    (*v12)(v9, v10, v11);
    *((unsigned char *)a1 + v7[6]) = *((unsigned char *)a2 + v7[6]);
    uint64_t v13 = v7[7];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_256175D98();
    uint64_t v75 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    v75(v14, v15, v16);
    uint64_t v17 = v7[8];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    if (v78((char *)a2 + v17, 1, v4))
    {
      sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v18, v19, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v18, 0, 1, v4);
    }
    uint64_t v21 = _s6StylesV8TimelineVMa(0);
    v77(&v18[*(int *)(v21 + 20)], &v19[*(int *)(v21 + 20)], v11);
    uint64_t v22 = v7[9];
    uint64_t v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v76 = v5;
    if (v78((char *)a2 + v22, 1, v4))
    {
      sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v23, v24, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v23, 0, 1, v4);
    }
    uint64_t v26 = _s6StylesV6NoDataVMa(0);
    v77(&v23[*(int *)(v26 + 20)], &v24[*(int *)(v26 + 20)], v11);
    v23[*(int *)(v26 + 24)] = v24[*(int *)(v26 + 24)];
    uint64_t v27 = v7[10];
    uint64_t v28 = (char *)a1 + v27;
    uint64_t v29 = (char *)a2 + v27;
    if (v78((char *)a2 + v27, 1, v4))
    {
      sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
      uint64_t v31 = v76;
    }
    else
    {
      uint64_t v31 = v76;
      (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v28, v29, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v28, 0, 1, v4);
    }
    uint64_t v32 = _s6StylesV11PlaceholderVMa(0);
    v77(&v28[*(int *)(v32 + 20)], &v29[*(int *)(v32 + 20)], v11);
    uint64_t v33 = v7[11];
    uint64_t v34 = (char *)a1 + v33;
    uint64_t v35 = (char *)a2 + v33;
    if (v78((char *)a2 + v33, 1, v4))
    {
      sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v34, v35, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v34, 0, 1, v4);
    }
    uint64_t v37 = _s6StylesV6SymbolVMa(0);
    v77(&v34[*(int *)(v37 + 20)], &v35[*(int *)(v37 + 20)], v11);
    uint64_t v38 = v7[12];
    uint64_t v39 = (char *)a1 + v38;
    uint64_t v40 = (char *)a2 + v38;
    if (v78((char *)a2 + v38, 1, v4))
    {
      sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v39, v40, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v39, 0, 1, v4);
    }
    v42 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v77(&v39[v42[5]], &v40[v42[5]], v11);
    v39[v42[6]] = v40[v42[6]];
    v75(&v39[v42[7]], &v40[v42[7]], v16);
    uint64_t v43 = v7[13];
    uint64_t v44 = (char *)a1 + v43;
    v45 = (char *)a2 + v43;
    if (v78((char *)a2 + v43, 1, v4))
    {
      sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
      uint64_t v47 = v76;
    }
    else
    {
      uint64_t v47 = v76;
      (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v44, v45, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v44, 0, 1, v4);
    }
    uint64_t v48 = _s6StylesV5EmptyVMa(0);
    v77(&v44[*(int *)(v48 + 20)], &v45[*(int *)(v48 + 20)], v11);
    v44[*(int *)(v48 + 24)] = v45[*(int *)(v48 + 24)];
    uint64_t v49 = v7[14];
    uint64_t v50 = (char *)a1 + v49;
    uint64_t v51 = (char *)a2 + v49;
    if (v78((char *)a2 + v49, 1, v4))
    {
      sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v50, v51, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v50, 0, 1, v4);
    }
    uint64_t v53 = _s6StylesV5DailyVMa(0);
    v77(&v50[*(int *)(v53 + 20)], &v51[*(int *)(v53 + 20)], v11);
    v50[*(int *)(v53 + 24)] = v51[*(int *)(v53 + 24)];
    uint64_t v54 = v7[15];
    uint64_t v55 = (char *)a1 + v54;
    uint64_t v56 = (char *)a2 + v54;
    if (v78((char *)a2 + v54, 1, v4))
    {
      sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v55, v56, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v55, 0, 1, v4);
    }
    uint64_t v58 = _s6StylesV9MomentaryVMa(0);
    v77(&v55[*(int *)(v58 + 20)], &v56[*(int *)(v58 + 20)], v11);
    uint64_t v59 = v7[16];
    uint64_t v60 = (char *)a1 + v59;
    uint64_t v61 = (char *)a2 + v59;
    if (v78((char *)a2 + v59, 1, v4))
    {
      sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v60, v61, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v60, 0, 1, v4);
    }
    uint64_t v63 = _s6StylesV6HeaderVMa(0);
    v77(&v60[*(int *)(v63 + 20)], &v61[*(int *)(v63 + 20)], v11);
    uint64_t v64 = v7[17];
    uint64_t v65 = (char *)a1 + v64;
    uint64_t v66 = (char *)a2 + v64;
    if (v78((char *)a2 + v64, 1, v4))
    {
      sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v65, v66, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v65, 0, 1, v4);
    }
    uint64_t v68 = _s6StylesV11ChartButtonVMa(0);
    v77(&v65[*(int *)(v68 + 20)], &v66[*(int *)(v68 + 20)], v11);
    uint64_t v69 = v7[18];
    uint64_t v70 = (char *)a1 + v69;
    uint64_t v71 = (char *)a2 + v69;
    if (v78(v71, 1, v4))
    {
      sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v70, v71, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v70, 0, 1, v4);
    }
    uint64_t v73 = _s6StylesV15LogButtonFooterVMa(0);
    v77(&v70[*(int *)(v73 + 20)], &v71[*(int *)(v73 + 20)], v11);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_255F60528(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_255F612BC((uint64_t)a1);
    sub_255F63580(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_256176AA8();
      uint64_t v5 = *(void *)(v4 - 8);
      v78 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
      if (v78((char *)a2, 1, v4))
      {
        sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, v4);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      }
      uint64_t v7 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v8 = v7[5];
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_256176158();
      uint64_t v12 = (void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
      v77 = *v12;
      (*v12)(v9, v10, v11);
      *((unsigned char *)a1 + v7[6]) = *((unsigned char *)a2 + v7[6]);
      uint64_t v13 = v7[7];
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = sub_256175D98();
      uint64_t v75 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
      v75(v14, v15, v16);
      uint64_t v17 = v7[8];
      uint64_t v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      if (v78((char *)a2 + v17, 1, v4))
      {
        sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v18, v19, v4);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v18, 0, 1, v4);
      }
      uint64_t v21 = _s6StylesV8TimelineVMa(0);
      v77(&v18[*(int *)(v21 + 20)], &v19[*(int *)(v21 + 20)], v11);
      uint64_t v22 = v7[9];
      uint64_t v23 = (char *)a1 + v22;
      uint64_t v24 = (char *)a2 + v22;
      uint64_t v76 = v5;
      if (v78((char *)a2 + v22, 1, v4))
      {
        sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v23, v24, v4);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v23, 0, 1, v4);
      }
      uint64_t v26 = _s6StylesV6NoDataVMa(0);
      v77(&v23[*(int *)(v26 + 20)], &v24[*(int *)(v26 + 20)], v11);
      v23[*(int *)(v26 + 24)] = v24[*(int *)(v26 + 24)];
      uint64_t v27 = v7[10];
      uint64_t v28 = (char *)a1 + v27;
      uint64_t v29 = (char *)a2 + v27;
      if (v78((char *)a2 + v27, 1, v4))
      {
        sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
        uint64_t v31 = v76;
      }
      else
      {
        uint64_t v31 = v76;
        (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v28, v29, v4);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v28, 0, 1, v4);
      }
      uint64_t v32 = _s6StylesV11PlaceholderVMa(0);
      v77(&v28[*(int *)(v32 + 20)], &v29[*(int *)(v32 + 20)], v11);
      uint64_t v33 = v7[11];
      uint64_t v34 = (char *)a1 + v33;
      uint64_t v35 = (char *)a2 + v33;
      if (v78((char *)a2 + v33, 1, v4))
      {
        sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v34, v35, v4);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v34, 0, 1, v4);
      }
      uint64_t v37 = _s6StylesV6SymbolVMa(0);
      v77(&v34[*(int *)(v37 + 20)], &v35[*(int *)(v37 + 20)], v11);
      uint64_t v38 = v7[12];
      uint64_t v39 = (char *)a1 + v38;
      uint64_t v40 = (char *)a2 + v38;
      if (v78((char *)a2 + v38, 1, v4))
      {
        sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v39, v40, v4);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v39, 0, 1, v4);
      }
      v42 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v77(&v39[v42[5]], &v40[v42[5]], v11);
      v39[v42[6]] = v40[v42[6]];
      v75(&v39[v42[7]], &v40[v42[7]], v16);
      uint64_t v43 = v7[13];
      uint64_t v44 = (char *)a1 + v43;
      v45 = (char *)a2 + v43;
      if (v78((char *)a2 + v43, 1, v4))
      {
        sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
        uint64_t v47 = v76;
      }
      else
      {
        uint64_t v47 = v76;
        (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v44, v45, v4);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v44, 0, 1, v4);
      }
      uint64_t v48 = _s6StylesV5EmptyVMa(0);
      v77(&v44[*(int *)(v48 + 20)], &v45[*(int *)(v48 + 20)], v11);
      v44[*(int *)(v48 + 24)] = v45[*(int *)(v48 + 24)];
      uint64_t v49 = v7[14];
      uint64_t v50 = (char *)a1 + v49;
      uint64_t v51 = (char *)a2 + v49;
      if (v78((char *)a2 + v49, 1, v4))
      {
        sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v50, v51, v4);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v50, 0, 1, v4);
      }
      uint64_t v53 = _s6StylesV5DailyVMa(0);
      v77(&v50[*(int *)(v53 + 20)], &v51[*(int *)(v53 + 20)], v11);
      v50[*(int *)(v53 + 24)] = v51[*(int *)(v53 + 24)];
      uint64_t v54 = v7[15];
      uint64_t v55 = (char *)a1 + v54;
      uint64_t v56 = (char *)a2 + v54;
      if (v78((char *)a2 + v54, 1, v4))
      {
        sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v55, v56, v4);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v55, 0, 1, v4);
      }
      uint64_t v58 = _s6StylesV9MomentaryVMa(0);
      v77(&v55[*(int *)(v58 + 20)], &v56[*(int *)(v58 + 20)], v11);
      uint64_t v59 = v7[16];
      uint64_t v60 = (char *)a1 + v59;
      uint64_t v61 = (char *)a2 + v59;
      if (v78((char *)a2 + v59, 1, v4))
      {
        sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v60, v61, v4);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v60, 0, 1, v4);
      }
      uint64_t v63 = _s6StylesV6HeaderVMa(0);
      v77(&v60[*(int *)(v63 + 20)], &v61[*(int *)(v63 + 20)], v11);
      uint64_t v64 = v7[17];
      uint64_t v65 = (char *)a1 + v64;
      uint64_t v66 = (char *)a2 + v64;
      if (v78((char *)a2 + v64, 1, v4))
      {
        sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v65, v66, v4);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v65, 0, 1, v4);
      }
      uint64_t v68 = _s6StylesV11ChartButtonVMa(0);
      v77(&v65[*(int *)(v68 + 20)], &v66[*(int *)(v68 + 20)], v11);
      uint64_t v69 = v7[18];
      uint64_t v70 = (char *)a1 + v69;
      uint64_t v71 = (char *)a2 + v69;
      if (v78(v71, 1, v4))
      {
        sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v70, v71, v4);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v70, 0, 1, v4);
      }
      uint64_t v73 = _s6StylesV15LogButtonFooterVMa(0);
      v77(&v70[*(int *)(v73 + 20)], &v71[*(int *)(v73 + 20)], v11);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_255F612BC(uint64_t a1)
{
  sub_255F63580(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_255F61348(char *a1, char *a2)
{
  sub_255F63580(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  uint64_t v5 = v4;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256176AA8();
    uint64_t v7 = *(void *)(v6 - 8);
    v80 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
    if (v80(a2, 1, v6))
    {
      sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    uint64_t v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v10 = v9[5];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = sub_256176158();
    uint64_t v14 = (void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32);
    uint64_t v79 = *v14;
    (*v14)(v11, v12, v13);
    a1[v9[6]] = a2[v9[6]];
    uint64_t v15 = v9[7];
    uint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    uint64_t v18 = sub_256175D98();
    v77 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32);
    v77(v16, v17, v18);
    uint64_t v19 = v9[8];
    uint64_t v20 = &a1[v19];
    uint64_t v21 = &a2[v19];
    if (v80(&a2[v19], 1, v6))
    {
      sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v20, v21, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v20, 0, 1, v6);
    }
    uint64_t v23 = _s6StylesV8TimelineVMa(0);
    v79(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
    uint64_t v24 = v9[9];
    uint64_t v25 = &a1[v24];
    uint64_t v26 = &a2[v24];
    uint64_t v78 = v7;
    if (v80(&a2[v24], 1, v6))
    {
      sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v25, v26, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v25, 0, 1, v6);
    }
    uint64_t v28 = _s6StylesV6NoDataVMa(0);
    v79(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
    v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
    uint64_t v29 = v9[10];
    uint64_t v30 = &a1[v29];
    uint64_t v31 = &a2[v29];
    if (v80(&a2[v29], 1, v6))
    {
      sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
      uint64_t v33 = v78;
    }
    else
    {
      uint64_t v33 = v78;
      (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v30, v31, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v30, 0, 1, v6);
    }
    uint64_t v34 = _s6StylesV11PlaceholderVMa(0);
    v79(&v30[*(int *)(v34 + 20)], &v31[*(int *)(v34 + 20)], v13);
    uint64_t v35 = v9[11];
    uint64_t v36 = &a1[v35];
    uint64_t v37 = &a2[v35];
    if (v80(&a2[v35], 1, v6))
    {
      sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v36, v37, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v36, 0, 1, v6);
    }
    uint64_t v39 = _s6StylesV6SymbolVMa(0);
    v79(&v36[*(int *)(v39 + 20)], &v37[*(int *)(v39 + 20)], v13);
    uint64_t v40 = v9[12];
    uint64_t v41 = &a1[v40];
    v42 = &a2[v40];
    if (v80(&a2[v40], 1, v6))
    {
      sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v41, v42, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v41, 0, 1, v6);
    }
    uint64_t v44 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v79(&v41[v44[5]], &v42[v44[5]], v13);
    v41[v44[6]] = v42[v44[6]];
    v77(&v41[v44[7]], &v42[v44[7]], v18);
    uint64_t v45 = v9[13];
    uint64_t v46 = &a1[v45];
    uint64_t v47 = &a2[v45];
    if (v80(&a2[v45], 1, v6))
    {
      sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
      uint64_t v49 = v78;
    }
    else
    {
      uint64_t v49 = v78;
      (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v46, v47, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v46, 0, 1, v6);
    }
    uint64_t v50 = _s6StylesV5EmptyVMa(0);
    v79(&v46[*(int *)(v50 + 20)], &v47[*(int *)(v50 + 20)], v13);
    v46[*(int *)(v50 + 24)] = v47[*(int *)(v50 + 24)];
    uint64_t v51 = v9[14];
    uint64_t v52 = &a1[v51];
    uint64_t v53 = &a2[v51];
    if (v80(&a2[v51], 1, v6))
    {
      sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v52, v53, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v52, 0, 1, v6);
    }
    uint64_t v55 = _s6StylesV5DailyVMa(0);
    v79(&v52[*(int *)(v55 + 20)], &v53[*(int *)(v55 + 20)], v13);
    v52[*(int *)(v55 + 24)] = v53[*(int *)(v55 + 24)];
    uint64_t v56 = v9[15];
    uint64_t v57 = &a1[v56];
    uint64_t v58 = &a2[v56];
    if (v80(&a2[v56], 1, v6))
    {
      sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v57, v58, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v57, 0, 1, v6);
    }
    uint64_t v60 = _s6StylesV9MomentaryVMa(0);
    v79(&v57[*(int *)(v60 + 20)], &v58[*(int *)(v60 + 20)], v13);
    uint64_t v61 = v9[16];
    uint64_t v62 = &a1[v61];
    uint64_t v63 = &a2[v61];
    if (v80(&a2[v61], 1, v6))
    {
      sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v62, v63, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v62, 0, 1, v6);
    }
    uint64_t v65 = _s6StylesV6HeaderVMa(0);
    v79(&v62[*(int *)(v65 + 20)], &v63[*(int *)(v65 + 20)], v13);
    uint64_t v66 = v9[17];
    uint64_t v67 = &a1[v66];
    uint64_t v68 = &a2[v66];
    if (v80(&a2[v66], 1, v6))
    {
      sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v67, v68, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v67, 0, 1, v6);
    }
    uint64_t v70 = _s6StylesV11ChartButtonVMa(0);
    v79(&v67[*(int *)(v70 + 20)], &v68[*(int *)(v70 + 20)], v13);
    uint64_t v71 = v9[18];
    uint64_t v72 = &a1[v71];
    uint64_t v73 = &a2[v71];
    if (v80(v73, 1, v6))
    {
      sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v72, v73, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v72, 0, 1, v6);
    }
    uint64_t v75 = _s6StylesV15LogButtonFooterVMa(0);
    v79(&v72[*(int *)(v75 + 20)], &v73[*(int *)(v75 + 20)], v13);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
  }
  return a1;
}

char *sub_255F620D8(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_255F612BC((uint64_t)a1);
    sub_255F63580(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    uint64_t v5 = v4;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_256176AA8();
      uint64_t v7 = *(void *)(v6 - 8);
      v80 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
      if (v80(a2, 1, v6))
      {
        sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      uint64_t v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v10 = v9[5];
      uint64_t v11 = &a1[v10];
      uint64_t v12 = &a2[v10];
      uint64_t v13 = sub_256176158();
      uint64_t v14 = (void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32);
      uint64_t v79 = *v14;
      (*v14)(v11, v12, v13);
      a1[v9[6]] = a2[v9[6]];
      uint64_t v15 = v9[7];
      uint64_t v16 = &a1[v15];
      uint64_t v17 = &a2[v15];
      uint64_t v18 = sub_256175D98();
      v77 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32);
      v77(v16, v17, v18);
      uint64_t v19 = v9[8];
      uint64_t v20 = &a1[v19];
      uint64_t v21 = &a2[v19];
      if (v80(&a2[v19], 1, v6))
      {
        sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v20, v21, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v20, 0, 1, v6);
      }
      uint64_t v23 = _s6StylesV8TimelineVMa(0);
      v79(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
      uint64_t v24 = v9[9];
      uint64_t v25 = &a1[v24];
      uint64_t v26 = &a2[v24];
      uint64_t v78 = v7;
      if (v80(&a2[v24], 1, v6))
      {
        sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v25, v26, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v25, 0, 1, v6);
      }
      uint64_t v28 = _s6StylesV6NoDataVMa(0);
      v79(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
      v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
      uint64_t v29 = v9[10];
      uint64_t v30 = &a1[v29];
      uint64_t v31 = &a2[v29];
      if (v80(&a2[v29], 1, v6))
      {
        sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
        uint64_t v33 = v78;
      }
      else
      {
        uint64_t v33 = v78;
        (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v30, v31, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v30, 0, 1, v6);
      }
      uint64_t v34 = _s6StylesV11PlaceholderVMa(0);
      v79(&v30[*(int *)(v34 + 20)], &v31[*(int *)(v34 + 20)], v13);
      uint64_t v35 = v9[11];
      uint64_t v36 = &a1[v35];
      uint64_t v37 = &a2[v35];
      if (v80(&a2[v35], 1, v6))
      {
        sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v36, v37, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v36, 0, 1, v6);
      }
      uint64_t v39 = _s6StylesV6SymbolVMa(0);
      v79(&v36[*(int *)(v39 + 20)], &v37[*(int *)(v39 + 20)], v13);
      uint64_t v40 = v9[12];
      uint64_t v41 = &a1[v40];
      v42 = &a2[v40];
      if (v80(&a2[v40], 1, v6))
      {
        sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v41, v42, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v41, 0, 1, v6);
      }
      uint64_t v44 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v79(&v41[v44[5]], &v42[v44[5]], v13);
      v41[v44[6]] = v42[v44[6]];
      v77(&v41[v44[7]], &v42[v44[7]], v18);
      uint64_t v45 = v9[13];
      uint64_t v46 = &a1[v45];
      uint64_t v47 = &a2[v45];
      if (v80(&a2[v45], 1, v6))
      {
        sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
        uint64_t v49 = v78;
      }
      else
      {
        uint64_t v49 = v78;
        (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v46, v47, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v46, 0, 1, v6);
      }
      uint64_t v50 = _s6StylesV5EmptyVMa(0);
      v79(&v46[*(int *)(v50 + 20)], &v47[*(int *)(v50 + 20)], v13);
      v46[*(int *)(v50 + 24)] = v47[*(int *)(v50 + 24)];
      uint64_t v51 = v9[14];
      uint64_t v52 = &a1[v51];
      uint64_t v53 = &a2[v51];
      if (v80(&a2[v51], 1, v6))
      {
        sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v52, v53, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v52, 0, 1, v6);
      }
      uint64_t v55 = _s6StylesV5DailyVMa(0);
      v79(&v52[*(int *)(v55 + 20)], &v53[*(int *)(v55 + 20)], v13);
      v52[*(int *)(v55 + 24)] = v53[*(int *)(v55 + 24)];
      uint64_t v56 = v9[15];
      uint64_t v57 = &a1[v56];
      uint64_t v58 = &a2[v56];
      if (v80(&a2[v56], 1, v6))
      {
        sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v57, v58, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v57, 0, 1, v6);
      }
      uint64_t v60 = _s6StylesV9MomentaryVMa(0);
      v79(&v57[*(int *)(v60 + 20)], &v58[*(int *)(v60 + 20)], v13);
      uint64_t v61 = v9[16];
      uint64_t v62 = &a1[v61];
      uint64_t v63 = &a2[v61];
      if (v80(&a2[v61], 1, v6))
      {
        sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v62, v63, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v62, 0, 1, v6);
      }
      uint64_t v65 = _s6StylesV6HeaderVMa(0);
      v79(&v62[*(int *)(v65 + 20)], &v63[*(int *)(v65 + 20)], v13);
      uint64_t v66 = v9[17];
      uint64_t v67 = &a1[v66];
      uint64_t v68 = &a2[v66];
      if (v80(&a2[v66], 1, v6))
      {
        sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v67, v68, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v67, 0, 1, v6);
      }
      uint64_t v70 = _s6StylesV11ChartButtonVMa(0);
      v79(&v67[*(int *)(v70 + 20)], &v68[*(int *)(v70 + 20)], v13);
      uint64_t v71 = v9[18];
      uint64_t v72 = &a1[v71];
      uint64_t v73 = &a2[v71];
      if (v80(v73, 1, v6))
      {
        sub_255F63580(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v72, v73, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v72, 0, 1, v6);
      }
      uint64_t v75 = _s6StylesV15LogButtonFooterVMa(0);
      v79(&v72[*(int *)(v75 + 20)], &v73[*(int *)(v75 + 20)], v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_255F62E78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255F62E8C);
}

uint64_t sub_255F62E8C(uint64_t a1, uint64_t a2)
{
  sub_255F63580(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_255F62F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255F62F3C);
}

uint64_t sub_255F62F3C(uint64_t a1, uint64_t a2)
{
  sub_255F63580(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t _s18EntrySeparatorViewVMa()
{
  uint64_t result = qword_269F42AF0;
  if (!qword_269F42AF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_255F63028()
{
  sub_255F63580(319, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_255F630E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255F63100@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_2561777B8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F636B8();
  uint64_t v7 = v6 - 8;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v27 - v11;
  uint64_t v13 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256119CA0((uint64_t)v15);
  sub_255F63718((uint64_t)v15, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2561778E8();
  sub_256175F38();
  uint64_t v33 = v34;
  int v32 = v35;
  uint64_t v31 = v36;
  int v30 = v37;
  uint64_t v29 = v38;
  uint64_t v28 = v39;
  sub_2561777A8();
  sub_256119CA0((uint64_t)v15);
  sub_255F63718((uint64_t)v15, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2561778E8();
  sub_256175F38();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v10, v5, v2);
  uint64_t v16 = &v10[*(int *)(v7 + 44)];
  long long v17 = v41;
  *(_OWORD *)uint64_t v16 = v40;
  *((_OWORD *)v16 + 1) = v17;
  *((_OWORD *)v16 + 2) = v42;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_255F63778((uint64_t)v10, (uint64_t)v12);
  sub_256119CA0((uint64_t)v15);
  sub_255F63718((uint64_t)v15, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2561778E8();
  sub_256175F38();
  uint64_t v18 = v43;
  LOBYTE(v5) = v44;
  uint64_t v19 = v45;
  LOBYTE(v15) = v46;
  uint64_t v20 = v47;
  uint64_t v21 = v48;
  sub_255F637DC((uint64_t)v12, (uint64_t)v10);
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  *(void *)(a1 + 16) = v33;
  *(unsigned char *)(a1 + 24) = v32;
  *(void *)(a1 + 32) = v31;
  *(unsigned char *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v30;
  uint64_t v22 = v28;
  *(void *)(a1 + 48) = v29;
  *(void *)(a1 + 56) = v22;
  sub_255F635E4();
  uint64_t v24 = v23;
  sub_255F637DC((uint64_t)v10, a1 + *(int *)(v23 + 48));
  uint64_t v25 = a1 + *(int *)(v24 + 64);
  *(void *)uint64_t v25 = 0;
  *(unsigned char *)(v25 + 8) = 1;
  *(void *)(v25 + 16) = v18;
  *(unsigned char *)(v25 + 24) = (_BYTE)v5;
  *(void *)(v25 + 32) = v19;
  *(unsigned char *)(v25 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = (_BYTE)v15;
  *(void *)(v25 + 48) = v20;
  *(void *)(v25 + 56) = v21;
  sub_255F63718((uint64_t)v12, (uint64_t (*)(void))sub_255F636B8);
  return sub_255F63718((uint64_t)v10, (uint64_t (*)(void))sub_255F636B8);
}

uint64_t sub_255F634A4@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_256176788();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  sub_255F634E8();
  return sub_255F63100(a1 + *(int *)(v2 + 44));
}

void sub_255F634E8()
{
  if (!qword_269F42B00)
  {
    sub_255F63580(255, &qword_269F42B08, (uint64_t (*)(uint64_t))sub_255F635E4, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_256176048();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F42B00);
    }
  }
}

void sub_255F63580(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_255F635E4()
{
  if (!qword_269F42B10)
  {
    sub_255F63658();
    sub_255F636B8();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_269F42B10);
    }
  }
}

void sub_255F63658()
{
  if (!qword_269F42B18)
  {
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F42B18);
    }
  }
}

void sub_255F636B8()
{
  if (!qword_269F42B20)
  {
    sub_2561777B8();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F42B20);
    }
  }
}

uint64_t sub_255F63718(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_255F63778(uint64_t a1, uint64_t a2)
{
  sub_255F636B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_255F637DC(uint64_t a1, uint64_t a2)
{
  sub_255F636B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_255F63844()
{
  unint64_t result = qword_269F42B28;
  if (!qword_269F42B28)
  {
    sub_255F6389C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F42B28);
  }
  return result;
}

void sub_255F6389C()
{
  if (!qword_269F42B30)
  {
    sub_255F63580(255, &qword_269F42B08, (uint64_t (*)(uint64_t))sub_255F635E4, MEMORY[0x263F1BAC8]);
    sub_255F63930();
    unint64_t v0 = sub_2561776F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F42B30);
    }
  }
}

unint64_t sub_255F63930()
{
  unint64_t result = qword_269F42B38;
  if (!qword_269F42B38)
  {
    sub_255F63580(255, &qword_269F42B08, (uint64_t (*)(uint64_t))sub_255F635E4, MEMORY[0x263F1BAC8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F42B38);
  }
  return result;
}

void *sub_255F639B8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = *(int *)(a3 + 28);
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    sub_255F63CB4(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = *(int *)(a3 + 32);
    uint64_t v15 = (void *)((char *)v4 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    sub_255F63CE8(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_256176AA8();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        sub_255F63D1C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v18 + 16))(v15, v16, v17);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      uint64_t v20 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
      uint64_t v21 = (char *)v15 + v20;
      uint64_t v22 = (char *)v16 + v20;
      uint64_t v23 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

void sub_255F63CB4(uint64_t a1)
{
}

void sub_255F63CE8(uint64_t a1)
{
}

void sub_255F63D1C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_255F63D80(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  sub_255F63CB4(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  sub_255F63CE8(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_256176AA8();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
    uint64_t v9 = v6 + *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
    uint64_t v10 = sub_256176158();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    return v11(v9, v10);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_255F63F48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  sub_255F63CB4(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_256175D98();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *uint64_t v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = *(int *)(a3 + 32);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  sub_255F63CE8(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_256176AA8();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      sub_255F63D1C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    uint64_t v18 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
    uint64_t v19 = (char *)v13 + v18;
    uint64_t v20 = (char *)v14 + v18;
    uint64_t v21 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  else
  {
    *uint64_t v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_255F641EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 28);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (void *)(a2 + v6);
    sub_255F644E8(a1 + v6, (uint64_t (*)(void))sub_255F63CB4);
    sub_255F63CB4(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = *(int *)(a3 + 32);
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (void *)(a2 + v10);
    sub_255F644E8(a1 + v10, (uint64_t (*)(void))sub_255F63CE8);
    sub_255F63CE8(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_256176AA8();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        sub_255F63D1C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
      uint64_t v16 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
      uint64_t v17 = (char *)v11 + v16;
      uint64_t v18 = (char *)v12 + v16;
      uint64_t v19 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_255F644E8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_255F64548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  sub_255F63CB4(0);
  uint64_t v11 = v10;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_256175D98();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v8, v9, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = *(int *)(a3 + 32);
  uint64_t v14 = (char *)(a1 + v13);
  uint64_t v15 = (char *)(a2 + v13);
  sub_255F63CE8(0);
  uint64_t v17 = v16;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = sub_256176AA8();
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18))
    {
      sub_255F63D1C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v14, v15, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v14, v15, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v14, 0, 1, v18);
    }
    uint64_t v21 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
    uint64_t v22 = &v14[v21];
    uint64_t v23 = &v15[v21];
    uint64_t v24 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  return a1;
}

uint64_t sub_255F647EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  if (a1 != a2)
  {
    uint64_t v8 = *(int *)(a3 + 28);
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (const void *)(a2 + v8);
    sub_255F644E8(a1 + v8, (uint64_t (*)(void))sub_255F63CB4);
    sub_255F63CB4(0);
    uint64_t v12 = v11;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_256175D98();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v9, v10, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    uint64_t v14 = *(int *)(a3 + 32);
    uint64_t v15 = (char *)(a1 + v14);
    uint64_t v16 = (char *)(a2 + v14);
    sub_255F644E8(a1 + v14, (uint64_t (*)(void))sub_255F63CE8);
    sub_255F63CE8(0);
    uint64_t v18 = v17;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_256176AA8();
      uint64_t v20 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v16, 1, v19))
      {
        sub_255F63D1C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v15, v16, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v15, v16, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v15, 0, 1, v19);
      }
      uint64_t v22 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
      uint64_t v23 = &v15[v22];
      uint64_t v24 = &v16[v22];
      uint64_t v25 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_255F64AE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255F64AFC);
}

uint64_t sub_255F64AFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_255F63D1C(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_255F63D1C(0, &qword_269F42B50, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, MEMORY[0x263F185D0]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_255F64C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255F64C9C);
}

uint64_t sub_255F64C9C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_255F63D1C(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_255F63D1C(0, &qword_269F42B50, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, MEMORY[0x263F185D0]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for IntroPhaseBulletView()
{
  uint64_t result = qword_269F42B58;
  if (!qword_269F42B58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_255F64E74()
{
  sub_255F63CB4(319);
  if (v0 <= 0x3F)
  {
    sub_255F63CE8(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_255F64F54()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255F64F70@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v3 = sub_256176BB8();
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v40 = v3;
  MEMORY[0x270FA5388](v3);
  unsigned __int8 v37 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F676CC(0);
  v36[1] = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F67618();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v38 = (char *)v36 - v14;
  uint64_t v15 = type metadata accessor for IntroPhaseSpecs();
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F66EB4(0);
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  uint64_t v21 = (char *)v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)v36 - v22;
  type metadata accessor for IntroPhaseBulletView();
  long long v42 = a1;
  sub_25611A408((uint64_t)v17);
  LOBYTE(a1) = sub_256176138();
  sub_255F644E8((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for IntroPhaseSpecs);
  if (a1)
  {
    sub_255F66EE8(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
  }
  else
  {
    *(void *)uint64_t v23 = sub_256176788();
    *((void *)v23 + 1) = 0;
    v23[16] = 1;
    sub_255F67A58(0, &qword_269F42C88, sub_255F66FB8);
    sub_255F654E4((uint64_t)&v23[*(int *)(v25 + 44)]);
    sub_255F66EE8(0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v23, 0, 1, v26);
  }
  uint64_t v27 = sub_256176798();
  sub_25611A408((uint64_t)v17);
  sub_255F644E8((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for IntroPhaseSpecs);
  *(void *)uint64_t v7 = v27;
  *((void *)v7 + 1) = 0x4008000000000000;
  v7[16] = 0;
  sub_255F67A58(0, &qword_269F42C90, sub_255F67708);
  sub_255F65BC0(v42, (uint64_t)&v7[*(int *)(v28 + 44)]);
  uint64_t v29 = v37;
  sub_256176B98();
  sub_255F675D0(&qword_269F42C68, sub_255F676CC);
  sub_256177208();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v29, v40);
  sub_255F644E8((uint64_t)v7, (uint64_t (*)(void))sub_255F676CC);
  int v30 = v38;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v38, v13, v9);
  sub_255F67AC4((uint64_t)v23, (uint64_t)v21, (uint64_t (*)(void))sub_255F66EB4);
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v31(v13, v30, v9);
  uint64_t v32 = v41;
  sub_255F67AC4((uint64_t)v21, v41, (uint64_t (*)(void))sub_255F66EB4);
  sub_255F66E44();
  v31((char *)(v32 + *(int *)(v33 + 48)), v13, v9);
  uint64_t v34 = *(void (**)(char *, uint64_t))(v10 + 8);
  v34(v30, v9);
  sub_255F644E8((uint64_t)v23, (uint64_t (*)(void))sub_255F66EB4);
  v34(v13, v9);
  return sub_255F644E8((uint64_t)v21, (uint64_t (*)(void))sub_255F66EB4);
}

uint64_t sub_255F654E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x263F1A470];
  sub_255F671A8(0, &qword_269F42BA0, sub_255F67084, MEMORY[0x263F1A470]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v12 - v7;
  sub_255F65640((uint64_t)&v12 - v7);
  sub_255F67D7C((uint64_t)v8, (uint64_t)v6, &qword_269F42BA0, sub_255F67084, v2);
  sub_255F67D7C((uint64_t)v6, a1, &qword_269F42BA0, sub_255F67084, v2);
  sub_255F66FEC();
  uint64_t v10 = a1 + *(int *)(v9 + 48);
  *(void *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 8) = 1;
  sub_255F67DEC((uint64_t)v8, &qword_269F42BA0, sub_255F67084, v2);
  return sub_255F67DEC((uint64_t)v6, &qword_269F42BA0, sub_255F67084, v2);
}

uint64_t sub_255F65640@<X0>(uint64_t a1@<X8>)
{
  uint64_t v44 = a1;
  uint64_t v39 = sub_256176EE8();
  uint64_t v2 = *(void *)(v39 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v39);
  unsigned __int8 v37 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v35 - v5;
  uint64_t v7 = type metadata accessor for IntroPhaseSpecs();
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v43 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v35 - v10;
  uint64_t v12 = sub_2561774F8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F670AC();
  uint64_t v41 = *(void *)(v16 - 8);
  uint64_t v42 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v38 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F67084(0);
  uint64_t v40 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v45) = *(unsigned char *)(v1 + 32);
  Symbol.image.getter();
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F1B4B8], v12);
  uint64_t v36 = sub_256177528();
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v21 = sub_256177438();
  type metadata accessor for IntroPhaseBulletView();
  sub_25611A408((uint64_t)v11);
  sub_256176E48();
  char v22 = sub_256176138();
  uint64_t v23 = (unsigned int *)MEMORY[0x263F1A680];
  if ((v22 & 1) == 0) {
    uint64_t v23 = (unsigned int *)MEMORY[0x263F1A688];
  }
  uint64_t v24 = v37;
  uint64_t v25 = v39;
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v37, *v23, v39);
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v6, v24, v25);
  uint64_t v26 = sub_256176F08();
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v6, v25);
  sub_255F644E8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for IntroPhaseSpecs);
  uint64_t KeyPath = swift_getKeyPath();
  long long v45 = (unint64_t)v36;
  LOWORD(v46) = 1;
  *((void *)&v46 + 1) = v21;
  *(void *)&long long v47 = KeyPath;
  *((void *)&v47 + 1) = v26;
  sub_255F67174(0);
  sub_255F673F0(&qword_269F42BE8, sub_255F67174, (void (*)(void))sub_255F673A8, (void (*)(void))sub_255F6759C);
  uint64_t v28 = v38;
  sub_256177298();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v29 = v43;
  sub_25611A408(v43);
  sub_255F644E8(v29, (uint64_t (*)(void))type metadata accessor for IntroPhaseSpecs);
  sub_2561778E8();
  sub_256175F38();
  uint64_t v31 = v41;
  uint64_t v30 = v42;
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v20, v28, v42);
  uint64_t v32 = &v20[*(int *)(v40 + 36)];
  long long v33 = v46;
  *(_OWORD *)uint64_t v32 = v45;
  *((_OWORD *)v32 + 1) = v33;
  *((_OWORD *)v32 + 2) = v47;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v30);
  sub_255F67C90();
  sub_2561771E8();
  return sub_255F644E8((uint64_t)v20, (uint64_t (*)(void))sub_255F67084);
}

uint64_t sub_255F65BC0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v196 = a2;
  uint64_t v3 = sub_2561762D8();
  MEMORY[0x270FA5388](v3 - 8);
  v206 = (char *)&v160 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v204 = sub_256175D98();
  uint64_t v208 = *(void *)(v204 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v204);
  v203 = (char *)&v160 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v202 = (uint64_t)&v160 - v7;
  uint64_t v205 = sub_256177958();
  uint64_t v209 = *(void *)(v205 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v205);
  v193 = (char *)&v160 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  v188 = (char *)&v160 - v10;
  uint64_t v197 = sub_256176EE8();
  uint64_t v207 = *(void *)(v197 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v197);
  v189 = (char *)&v160 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  v190 = (char *)&v160 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v160 - v16;
  MEMORY[0x270FA5388](v15);
  v175 = (uint64_t (*)())((char *)&v160 - v18);
  sub_255F671A8(0, &qword_269F42C40, sub_255F67868, MEMORY[0x263F190D8]);
  uint64_t v198 = v19;
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v195 = (uint64_t)&v160 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v194 = (uint64_t)&v160 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  v191 = (char *)&v160 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v192 = (uint64_t)&v160 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  v186 = (char *)&v160 - v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v201 = (uint64_t)&v160 - v30;
  uint64_t v31 = type metadata accessor for IntroPhaseSpecs();
  uint64_t v32 = MEMORY[0x270FA5388](v31);
  uint64_t v187 = (uint64_t)&v160 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v36 = (char *)&v160 - v35;
  MEMORY[0x270FA5388](v34);
  uint64_t v38 = (char *)&v160 - v37;
  sub_255F677E0();
  uint64_t v40 = MEMORY[0x270FA5388](v39 - 8);
  uint64_t v200 = (uint64_t)&v160 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v40);
  uint64_t v43 = (char *)&v160 - v42;
  uint64_t v174 = type metadata accessor for IntroPhaseBulletView();
  uint64_t v44 = a1;
  long long v45 = (char *)a1 + *(int *)(v174 + 32);
  sub_25611A408((uint64_t)v38);
  LOBYTE(a1) = sub_256176138();
  sub_255F644E8((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for IntroPhaseSpecs);
  v199 = v43;
  if (a1)
  {
    sub_255F65640((uint64_t)v43);
    sub_255F671A8(0, &qword_269F42BA0, sub_255F67084, MEMORY[0x263F1A470]);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v43, 0, 1, v46);
  }
  else
  {
    sub_255F671A8(0, &qword_269F42BA0, sub_255F67084, MEMORY[0x263F1A470]);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v43, 1, 1, v47);
  }
  v160 = v44;
  uint64_t v48 = v44[1];
  *(void *)&v231[0] = *v44;
  *((void *)&v231[0] + 1) = v48;
  unint64_t v185 = sub_255F5CE90();
  swift_bridgeObjectRetain();
  uint64_t v49 = sub_256177028();
  uint64_t v173 = v50;
  char v52 = v51 & 1;
  sub_25611A408((uint64_t)v36);
  sub_256176E18();
  v183 = v45;
  uint64_t v184 = v31;
  char v53 = sub_256176138();
  uint64_t v54 = (uint64_t)v36;
  uint64_t v55 = v207;
  uint64_t v56 = *(void (**)(char *, uint64_t, uint64_t))(v207 + 104);
  v180 = v56;
  uint64_t v182 = v207 + 104;
  unsigned int v57 = *MEMORY[0x263F1A680];
  unsigned int v179 = *MEMORY[0x263F1A680];
  unsigned int v58 = *MEMORY[0x263F1A688];
  unsigned int v181 = *MEMORY[0x263F1A688];
  if (v53) {
    uint64_t v59 = v57;
  }
  else {
    uint64_t v59 = v58;
  }
  uint64_t v60 = v17;
  uint64_t v61 = v17;
  uint64_t v62 = v197;
  ((void (*)(char *, uint64_t))v56)(v60, v59);
  uint64_t v63 = *(void (**)(char *, char *, uint64_t))(v55 + 32);
  uint64_t v177 = v55 + 32;
  v178 = v63;
  uint64_t v64 = v175;
  v63((char *)v175, v61, v62);
  sub_256176F08();
  swift_release();
  uint64_t v65 = *(void (**)(char *, uint64_t))(v55 + 8);
  uint64_t v207 = v55 + 8;
  v176 = v65;
  v65((char *)v64, v62);
  v175 = type metadata accessor for IntroPhaseSpecs;
  sub_255F644E8(v54, (uint64_t (*)(void))type metadata accessor for IntroPhaseSpecs);
  uint64_t v66 = v173;
  uint64_t v67 = sub_256176FD8();
  uint64_t v69 = v68;
  char v71 = v70 & 1;
  sub_255F67B2C(v49, v66, v52);
  swift_release();
  swift_bridgeObjectRelease();
  sub_256176E88();
  uint64_t v72 = sub_256176F88();
  uint64_t v74 = v73;
  char v76 = v75 & 1;
  sub_255F67B2C(v67, v69, v71);
  swift_bridgeObjectRelease();
  LODWORD(v231[0]) = sub_256176A48();
  uint64_t v77 = sub_256176FA8();
  uint64_t v79 = v78;
  uint64_t v81 = v80;
  char v83 = v82 & 1;
  sub_255F67B2C(v72, v74, v76);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v238 = v77;
  uint64_t v239 = v79;
  char v240 = v83;
  uint64_t v241 = v81;
  uint64_t v242 = KeyPath;
  char v243 = 0;
  sub_2561778F8();
  sub_256115E68(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v231, 0.0, 1, 0.0, 1);
  sub_255F67B2C(v77, v79, v83);
  swift_release();
  swift_bridgeObjectRelease();
  long long v227 = v231[6];
  long long v228 = v231[7];
  long long v229 = v231[8];
  long long v230 = v231[9];
  long long v223 = v231[2];
  long long v224 = v231[3];
  long long v225 = v231[4];
  long long v226 = v231[5];
  long long v221 = v231[0];
  long long v222 = v231[1];
  v85 = v160;
  uint64_t v174 = (uint64_t)v160 + *(int *)(v174 + 28);
  uint64_t v86 = v202;
  sub_25611A114(v202);
  LODWORD(v173) = *MEMORY[0x263F184F8];
  uint64_t v87 = v208;
  v88 = *(void (**)(void))(v208 + 104);
  uint64_t v171 = v208 + 104;
  v172 = (void (*)(char *, void, uint64_t))v88;
  v89 = v203;
  uint64_t v90 = v204;
  v88(v203);
  LOBYTE(v72) = sub_256175D88();
  v91 = *(void (**)(uint64_t, uint64_t))(v87 + 8);
  uint64_t v208 = v87 + 8;
  v170 = v91;
  v91((uint64_t)v89, v90);
  v91(v86, v90);
  uint64_t v92 = v209;
  v93 = *(void (**)(char *, uint64_t, uint64_t))(v209 + 104);
  v167 = v93;
  uint64_t v169 = v209 + 104;
  unsigned int v94 = *MEMORY[0x263F1B968];
  unsigned int v166 = *MEMORY[0x263F1B968];
  unsigned int v95 = *MEMORY[0x263F1B998];
  unsigned int v168 = *MEMORY[0x263F1B998];
  if (v72) {
    uint64_t v96 = v94;
  }
  else {
    uint64_t v96 = v95;
  }
  v97 = v188;
  uint64_t v98 = v205;
  v93(v188, v96, v205);
  uint64_t v99 = v92;
  v100 = *(void (**)(char *, char *, uint64_t))(v92 + 16);
  uint64_t v164 = v92 + 16;
  v165 = v100;
  uint64_t v101 = (uint64_t)v206;
  v100(v206, v97, v98);
  v102 = v186;
  uint64_t v103 = (uint64_t)&v186[*(int *)(v198 + 36)];
  v163 = (uint64_t (*)(void))MEMORY[0x263F190D8];
  sub_255F67AC4(v101, v103, MEMORY[0x263F190D8]);
  long long v104 = v228;
  v102[6] = v227;
  v102[7] = v104;
  long long v105 = v230;
  v102[8] = v229;
  v102[9] = v105;
  long long v106 = v224;
  v102[2] = v223;
  v102[3] = v106;
  long long v107 = v226;
  v102[4] = v225;
  v102[5] = v107;
  long long v108 = v222;
  _OWORD *v102 = v221;
  v102[1] = v108;
  sub_255F67B44((uint64_t)&v221);
  v162 = (uint64_t (*)(void))MEMORY[0x263F190D8];
  sub_255F644E8(v101, MEMORY[0x263F190D8]);
  v109 = *(void (**)(char *, uint64_t))(v99 + 8);
  uint64_t v209 = v99 + 8;
  v161 = v109;
  v109(v97, v98);
  sub_255F67BA4((uint64_t)&v221);
  sub_255F67BF4((uint64_t)v102, v201);
  uint64_t v110 = v85[3];
  *(void *)&v220[0] = v85[2];
  *((void *)&v220[0] + 1) = v110;
  swift_bridgeObjectRetain();
  uint64_t v111 = sub_256177028();
  uint64_t v113 = v112;
  char v115 = v114 & 1;
  uint64_t v116 = v187;
  sub_25611A408(v187);
  sub_256176E18();
  if (sub_256176138()) {
    uint64_t v117 = v179;
  }
  else {
    uint64_t v117 = v181;
  }
  v118 = v189;
  uint64_t v119 = v197;
  v180(v189, v117, v197);
  v120 = v190;
  v178(v190, v118, v119);
  sub_256176F08();
  swift_release();
  v176(v120, v119);
  sub_255F644E8(v116, (uint64_t (*)(void))v175);
  uint64_t v121 = sub_256176FD8();
  uint64_t v123 = v122;
  char v125 = v124 & 1;
  sub_255F67B2C(v111, v113, v115);
  swift_release();
  swift_bridgeObjectRelease();
  LODWORD(v220[0]) = sub_256176A58();
  uint64_t v126 = sub_256176FA8();
  uint64_t v128 = v127;
  uint64_t v130 = v129;
  char v132 = v131 & 1;
  sub_255F67B2C(v121, v123, v125);
  swift_bridgeObjectRelease();
  uint64_t v133 = swift_getKeyPath();
  uint64_t v232 = v126;
  uint64_t v233 = v128;
  char v234 = v132;
  uint64_t v235 = v130;
  uint64_t v236 = v133;
  char v237 = 0;
  sub_2561778F8();
  sub_256115E68(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v220, 0.0, 1, 0.0, 1);
  sub_255F67B2C(v126, v128, v132);
  swift_release();
  swift_bridgeObjectRelease();
  long long v216 = v220[6];
  long long v217 = v220[7];
  long long v218 = v220[8];
  long long v219 = v220[9];
  long long v212 = v220[2];
  long long v213 = v220[3];
  long long v214 = v220[4];
  long long v215 = v220[5];
  long long v210 = v220[0];
  long long v211 = v220[1];
  uint64_t v134 = v202;
  sub_25611A114(v202);
  v136 = v203;
  uint64_t v135 = v204;
  v172(v203, v173, v204);
  LOBYTE(v118) = sub_256175D88();
  v137 = v136;
  v138 = v170;
  v170((uint64_t)v137, v135);
  v138(v134, v135);
  if (v118) {
    uint64_t v139 = v166;
  }
  else {
    uint64_t v139 = v168;
  }
  v140 = v193;
  uint64_t v141 = v205;
  v167(v193, v139, v205);
  uint64_t v142 = (uint64_t)v206;
  v165(v206, v140, v141);
  v143 = v191;
  sub_255F67AC4(v142, (uint64_t)&v191[*(int *)(v198 + 36)], v163);
  long long v144 = v217;
  v143[6] = v216;
  v143[7] = v144;
  long long v145 = v219;
  v143[8] = v218;
  v143[9] = v145;
  long long v146 = v213;
  v143[2] = v212;
  v143[3] = v146;
  long long v147 = v215;
  v143[4] = v214;
  v143[5] = v147;
  long long v148 = v211;
  _OWORD *v143 = v210;
  v143[1] = v148;
  sub_255F67B44((uint64_t)&v210);
  sub_255F644E8(v142, v162);
  v161(v140, v141);
  sub_255F67BA4((uint64_t)&v210);
  uint64_t v149 = v192;
  sub_255F67BF4((uint64_t)v143, v192);
  uint64_t v150 = v200;
  sub_255F67AC4((uint64_t)v199, v200, (uint64_t (*)(void))sub_255F677E0);
  v151 = (void (*)(uint64_t))MEMORY[0x263F190D8];
  uint64_t v152 = v201;
  uint64_t v153 = v194;
  sub_255F67D7C(v201, v194, &qword_269F42C40, sub_255F67868, MEMORY[0x263F190D8]);
  uint64_t v154 = v195;
  sub_255F67D7C(v149, v195, &qword_269F42C40, sub_255F67868, v151);
  uint64_t v155 = v150;
  uint64_t v156 = v196;
  sub_255F67AC4(v155, v196, (uint64_t (*)(void))sub_255F677E0);
  sub_255F6773C();
  uint64_t v158 = v157;
  sub_255F67D7C(v153, v156 + *(int *)(v157 + 48), &qword_269F42C40, sub_255F67868, v151);
  sub_255F67D7C(v154, v156 + *(int *)(v158 + 64), &qword_269F42C40, sub_255F67868, v151);
  sub_255F67DEC(v149, &qword_269F42C40, sub_255F67868, v151);
  sub_255F67DEC(v152, &qword_269F42C40, sub_255F67868, v151);
  sub_255F644E8((uint64_t)v199, (uint64_t (*)(void))sub_255F677E0);
  sub_255F67DEC(v154, &qword_269F42C40, sub_255F67868, v151);
  sub_255F67DEC(v153, &qword_269F42C40, sub_255F67868, v151);
  return sub_255F644E8(v200, (uint64_t (*)(void))sub_255F677E0);
}

uint64_t sub_255F66BC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for IntroPhaseSpecs();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F66D7C();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25611A408((uint64_t)v5);
  sub_255F644E8((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for IntroPhaseSpecs);
  *(void *)uint64_t v8 = sub_256176678();
  *((void *)v8 + 1) = 0x402C000000000000;
  v8[16] = 0;
  sub_255F67A58(0, &qword_269F42C78, sub_255F66E10);
  sub_255F64F70(v1, (uint64_t)&v8[*(int *)(v9 + 44)]);
  id v10 = objc_msgSend(self, sel_labelColor);
  uint64_t v11 = MEMORY[0x25A29FE80](v10);
  sub_255F67AC4((uint64_t)v8, a1, (uint64_t (*)(void))sub_255F66D7C);
  sub_255F679C4();
  *(void *)(a1 + *(int *)(v12 + 36)) = v11;
  return sub_255F644E8((uint64_t)v8, (uint64_t (*)(void))sub_255F66D7C);
}

void sub_255F66D7C()
{
  if (!qword_269F42B68)
  {
    sub_255F66E10(255);
    sub_255F675D0(&qword_269F42C70, sub_255F66E10);
    unint64_t v0 = sub_2561775F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F42B68);
    }
  }
}

void sub_255F66E10(uint64_t a1)
{
}

void sub_255F66E44()
{
  if (!qword_269F42B78)
  {
    sub_255F66EB4(255);
    sub_255F67618();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F42B78);
    }
  }
}

void sub_255F66EB4(uint64_t a1)
{
}

void sub_255F66EE8(uint64_t a1)
{
}

void sub_255F66F24(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, void (*a5)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_255F675D0(a4, a5);
    unint64_t v8 = sub_2561776F8();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_255F66FB8(uint64_t a1)
{
}

void sub_255F66FEC()
{
  if (!qword_269F42B98)
  {
    sub_255F671A8(255, &qword_269F42BA0, sub_255F67084, MEMORY[0x263F1A470]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F42B98);
    }
  }
}

void sub_255F67084(uint64_t a1)
{
}

void sub_255F670AC()
{
  if (!qword_269F42BB0)
  {
    sub_255F67174(255);
    sub_255F673F0(&qword_269F42BE8, sub_255F67174, (void (*)(void))sub_255F673A8, (void (*)(void))sub_255F6759C);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F42BB0);
    }
  }
}

void sub_255F67174(uint64_t a1)
{
}

void sub_255F671A8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    unint64_t v6 = sub_2561761B8();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_255F6721C()
{
  if (!qword_269F42BC0)
  {
    sub_255F672DC(255, (unint64_t *)&qword_269F42BC8, MEMORY[0x263F1B570], MEMORY[0x263F19900], MEMORY[0x263F18E28]);
    sub_255F672DC(255, (unint64_t *)&qword_269F42BD0, MEMORY[0x263F1B440], MEMORY[0x263F1B420], MEMORY[0x263F1A180]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F42BC0);
    }
  }
}

void sub_255F672DC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_255F6732C()
{
  if (!qword_269F42BD8)
  {
    sub_255F67978(255, (unint64_t *)&qword_269F42BE0, MEMORY[0x263F1A738], MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_256176D28();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F42BD8);
    }
  }
}

uint64_t sub_255F673A8()
{
  return sub_255F673F0(&qword_269F42BF0, (void (*)(uint64_t))sub_255F6721C, (void (*)(void))sub_255F6747C, (void (*)(void))sub_255F67518);
}

uint64_t sub_255F673F0(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_255F6747C()
{
  unint64_t result = qword_269F42BF8;
  if (!qword_269F42BF8)
  {
    sub_255F672DC(255, (unint64_t *)&qword_269F42BC8, MEMORY[0x263F1B570], MEMORY[0x263F19900], MEMORY[0x263F18E28]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F42BF8);
  }
  return result;
}

unint64_t sub_255F67518()
{
  unint64_t result = qword_269F42C00;
  if (!qword_269F42C00)
  {
    sub_255F672DC(255, (unint64_t *)&qword_269F42BD0, MEMORY[0x263F1B440], MEMORY[0x263F1B420], MEMORY[0x263F1A180]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F42C00);
  }
  return result;
}

uint64_t sub_255F6759C()
{
  return sub_255F675D0(&qword_269F42C08, (void (*)(uint64_t))sub_255F6732C);
}

uint64_t sub_255F675D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_255F67618()
{
  if (!qword_269F42C18)
  {
    sub_255F676CC(255);
    sub_255F675D0(&qword_269F42C68, sub_255F676CC);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F42C18);
    }
  }
}

void sub_255F676CC(uint64_t a1)
{
}

void sub_255F67708(uint64_t a1)
{
}

void sub_255F6773C()
{
  if (!qword_269F42C30)
  {
    sub_255F677E0();
    sub_255F671A8(255, &qword_269F42C40, sub_255F67868, MEMORY[0x263F190D8]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_269F42C30);
    }
  }
}

void sub_255F677E0()
{
  if (!qword_269F42C38)
  {
    sub_255F671A8(255, &qword_269F42BA0, sub_255F67084, MEMORY[0x263F1A470]);
    unint64_t v0 = sub_256178448();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F42C38);
    }
  }
}

void sub_255F67868(uint64_t a1)
{
}

void sub_255F67890(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_255F678F4()
{
  if (!qword_269F42C50)
  {
    sub_255F67978(255, (unint64_t *)&qword_269F42C58, MEMORY[0x263F18968], MEMORY[0x263F1A418]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F42C50);
    }
  }
}

void sub_255F67978(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_255F679C4()
{
  if (!qword_269F42C80)
  {
    sub_255F66D7C();
    sub_255F672DC(255, (unint64_t *)&qword_269F42BD0, MEMORY[0x263F1B440], MEMORY[0x263F1B420], MEMORY[0x263F1A180]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F42C80);
    }
  }
}

void sub_255F67A58(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_256176048();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_255F67AC4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_255F67B2C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_255F67B44(uint64_t a1)
{
  return a1;
}

uint64_t sub_255F67B94(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_255F67BA4(uint64_t a1)
{
  return a1;
}

uint64_t sub_255F67BF4(uint64_t a1, uint64_t a2)
{
  sub_255F671A8(0, &qword_269F42C40, sub_255F67868, MEMORY[0x263F190D8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_255F67C90()
{
  unint64_t result = qword_269F42C98;
  if (!qword_269F42C98)
  {
    sub_255F67084(255);
    sub_255F67174(255);
    sub_255F673F0(&qword_269F42BE8, sub_255F67174, (void (*)(void))sub_255F673A8, (void (*)(void))sub_255F6759C);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F42C98);
  }
  return result;
}

uint64_t sub_255F67D7C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t), void (*a5)(uint64_t))
{
  sub_255F671A8(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_255F67DEC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  sub_255F671A8(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_255F67E48()
{
  return sub_255F673F0(&qword_269F42CA0, (void (*)(uint64_t))sub_255F679C4, (void (*)(void))sub_255F67EA4, (void (*)(void))sub_255F67518);
}

uint64_t sub_255F67EA4()
{
  return sub_255F675D0(&qword_269F42CA8, (void (*)(uint64_t))sub_255F66D7C);
}

ValueMetadata *type metadata accessor for BlurPipeline()
{
  return &type metadata for BlurPipeline;
}

uint64_t StateOfMindEntryView.init(model:presentationStyle:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v3 = *a2;
  *(void *)a3 = sub_255F67F50;
  *(void *)(a3 + 8) = result;
  *(unsigned char *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = nullsub_1;
  *(void *)(a3 + 32) = 0;
  *(unsigned char *)(a3 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v3;
  return result;
}

uint64_t StateOfMindEntryView.init(model:presentationStyle:onCompletion:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v5 = *a2;
  *(void *)a5 = sub_255F67F50;
  *(void *)(a5 + 8) = result;
  *(unsigned char *)(a5 + 16) = 0;
  *(void *)(a5 + 24) = a3;
  *(void *)(a5 + 32) = a4;
  *(unsigned char *)(a5 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v5;
  return result;
}

uint64_t sub_255F67F50()
{
  return swift_retain();
}

uint64_t StateOfMindEntryView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v3 = *(void *)(v1 + 32);
  char v5 = *(unsigned char *)(v1 + 40);
  sub_255F68064();
  type metadata accessor for StateOfMindEntryModel(0);
  sub_255F68430(&qword_269F42CB0, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel);
  swift_retain();
  uint64_t v6 = sub_256175E28();
  sub_255F6806C();
  swift_release();
  char v8 = v5;
  swift_retain();
  return sub_255FA34A8(v6, v4, v3, &v8, a1);
}

uint64_t sub_255F68064()
{
  return swift_retain();
}

uint64_t sub_255F6806C()
{
  return swift_release();
}

uint64_t sub_255F68074()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255F68090@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v3 = *(void *)(v1 + 32);
  char v5 = *(unsigned char *)(v1 + 40);
  sub_255F68064();
  type metadata accessor for StateOfMindEntryModel(0);
  sub_255F68430(&qword_269F42CB0, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel);
  swift_retain();
  uint64_t v6 = sub_256175E28();
  sub_255F6806C();
  swift_release();
  char v8 = v5;
  swift_retain();
  return sub_255FA34A8(v6, v4, v3, &v8, a1);
}

uint64_t destroy for StateOfMindEntryView()
{
  sub_255F6806C();

  return swift_release();
}

uint64_t initializeWithCopy for StateOfMindEntryView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_255F68064();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *((unsigned char *)a2 + 40);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for StateOfMindEntryView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_255F68064();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_255F6806C();
  uint64_t v7 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v7;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *((unsigned char *)a2 + 40);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for StateOfMindEntryView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_255F6806C();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(unsigned char *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for StateOfMindEntryView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StateOfMindEntryView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindEntryView()
{
  return &type metadata for StateOfMindEntryView;
}

uint64_t sub_255F683E8()
{
  return sub_255F68430(&qword_269F42CB8, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryView_iOS);
}

uint64_t sub_255F68430(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_255F68478(void *a1, void *a2, int *a3)
{
  long long v3 = a2;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    char v6 = a3;
    sub_255F72624(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, v3, v7);
    }
    else
    {
      *a1 = *v3;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = v6[5];
    id v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)v3 + v9);
    sub_255F72624(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      unsigned int v94 = v3;
      unsigned int v95 = v6;
      uint64_t v12 = sub_256176AA8();
      uint64_t v13 = *(void *)(v12 - 8);
      uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      uint64_t v96 = v13;
      if (v14((char *)v11, 1, v12))
      {
        sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      uint64_t v16 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v17 = v16[5];
      uint64_t v18 = (char *)v10 + v17;
      uint64_t v19 = (char *)v11 + v17;
      uint64_t v20 = sub_256176158();
      v97 = *(void (**)(char *, char *))(*(void *)(v20 - 8) + 16);
      uint64_t v98 = v20;
      v97(v18, v19);
      *((unsigned char *)v10 + v16[6]) = *((unsigned char *)v11 + v16[6]);
      uint64_t v21 = v16[7];
      uint64_t v22 = (char *)v10 + v21;
      uint64_t v23 = (char *)v11 + v21;
      uint64_t v24 = sub_256175D98();
      v93 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
      v93(v22, v23, v24);
      uint64_t v25 = v16[8];
      uint64_t v26 = (char *)v10 + v25;
      uint64_t v27 = (char *)v11 + v25;
      if (v14((char *)v11 + v25, 1, v12))
      {
        sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v26, v27, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v96 + 56))(v26, 0, 1, v12);
      }
      uint64_t v29 = _s6StylesV8TimelineVMa(0);
      ((void (*)(char *, char *, uint64_t))v97)(&v26[*(int *)(v29 + 20)], &v27[*(int *)(v29 + 20)], v98);
      uint64_t v30 = v16[9];
      uint64_t v31 = (char *)v10 + v30;
      uint64_t v32 = (char *)v11 + v30;
      if (v14((char *)v11 + v30, 1, v12))
      {
        sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v31, v32, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v96 + 56))(v31, 0, 1, v12);
      }
      uint64_t v34 = _s6StylesV6NoDataVMa(0);
      ((void (*)(char *, char *, uint64_t))v97)(&v31[*(int *)(v34 + 20)], &v32[*(int *)(v34 + 20)], v98);
      v31[*(int *)(v34 + 24)] = v32[*(int *)(v34 + 24)];
      uint64_t v35 = v16[10];
      uint64_t v36 = (char *)v10 + v35;
      uint64_t v37 = (char *)v11 + v35;
      if (v14((char *)v11 + v35, 1, v12))
      {
        sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v36, v37, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v96 + 56))(v36, 0, 1, v12);
      }
      uint64_t v39 = _s6StylesV11PlaceholderVMa(0);
      ((void (*)(char *, char *, uint64_t))v97)(&v36[*(int *)(v39 + 20)], &v37[*(int *)(v39 + 20)], v98);
      uint64_t v40 = v16[11];
      uint64_t v41 = (char *)v10 + v40;
      uint64_t v42 = (char *)v11 + v40;
      if (v14((char *)v11 + v40, 1, v12))
      {
        sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v41, v42, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v96 + 56))(v41, 0, 1, v12);
      }
      uint64_t v44 = _s6StylesV6SymbolVMa(0);
      ((void (*)(char *, char *, uint64_t))v97)(&v41[*(int *)(v44 + 20)], &v42[*(int *)(v44 + 20)], v98);
      uint64_t v45 = v16[12];
      uint64_t v46 = (char *)v10 + v45;
      uint64_t v47 = (char *)v11 + v45;
      if (v14((char *)v11 + v45, 1, v12))
      {
        sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v46, v47, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v96 + 56))(v46, 0, 1, v12);
      }
      uint64_t v49 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      ((void (*)(char *, char *, uint64_t))v97)(&v46[v49[5]], &v47[v49[5]], v98);
      v46[v49[6]] = v47[v49[6]];
      v93(&v46[v49[7]], &v47[v49[7]], v24);
      uint64_t v50 = v16[13];
      char v51 = (char *)v10 + v50;
      char v52 = (char *)v11 + v50;
      if (v14((char *)v11 + v50, 1, v12))
      {
        sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v51, v52, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v96 + 56))(v51, 0, 1, v12);
      }
      uint64_t v54 = _s6StylesV5EmptyVMa(0);
      ((void (*)(char *, char *, uint64_t))v97)(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v98);
      v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
      uint64_t v55 = v16[14];
      uint64_t v56 = (char *)v10 + v55;
      unsigned int v57 = (char *)v11 + v55;
      if (v14((char *)v11 + v55, 1, v12))
      {
        sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v56, v57, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v96 + 56))(v56, 0, 1, v12);
      }
      uint64_t v59 = _s6StylesV5DailyVMa(0);
      ((void (*)(char *, char *, uint64_t))v97)(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v98);
      v56[*(int *)(v59 + 24)] = v57[*(int *)(v59 + 24)];
      uint64_t v60 = v16[15];
      uint64_t v61 = (char *)v10 + v60;
      uint64_t v62 = (char *)v11 + v60;
      if (v14((char *)v11 + v60, 1, v12))
      {
        sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v61, v62, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v96 + 56))(v61, 0, 1, v12);
      }
      uint64_t v64 = _s6StylesV9MomentaryVMa(0);
      ((void (*)(char *, char *, uint64_t))v97)(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v98);
      uint64_t v65 = v16[16];
      uint64_t v66 = (char *)v10 + v65;
      uint64_t v67 = (char *)v11 + v65;
      if (v14((char *)v11 + v65, 1, v12))
      {
        sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v66, v67, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v96 + 56))(v66, 0, 1, v12);
      }
      uint64_t v69 = _s6StylesV6HeaderVMa(0);
      ((void (*)(char *, char *, uint64_t))v97)(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v98);
      uint64_t v70 = v16[17];
      char v71 = (char *)v10 + v70;
      uint64_t v72 = (char *)v11 + v70;
      if (v14((char *)v11 + v70, 1, v12))
      {
        sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v71, v72, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v96 + 56))(v71, 0, 1, v12);
      }
      uint64_t v74 = _s6StylesV11ChartButtonVMa(0);
      ((void (*)(char *, char *, uint64_t))v97)(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v98);
      uint64_t v75 = v16[18];
      char v76 = (char *)v10 + v75;
      uint64_t v77 = (char *)v11 + v75;
      if (v14(v77, 1, v12))
      {
        sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v76, v77, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v96 + 56))(v76, 0, 1, v12);
      }
      char v6 = v95;
      uint64_t v79 = _s6StylesV15LogButtonFooterVMa(0);
      ((void (*)(char *, char *, uint64_t))v97)(&v76[*(int *)(v79 + 20)], &v77[*(int *)(v79 + 20)], v98);
      long long v3 = v94;
    }
    else
    {
      *id v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v80 = v6[6];
    uint64_t v81 = (void *)((char *)a1 + v80);
    char v82 = (void *)((char *)v3 + v80);
    sub_255F72624(0, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v83 = sub_256175F88();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v83 - 8) + 16))(v81, v82, v83);
    }
    else
    {
      *uint64_t v81 = *v82;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v84 = v6[7];
    uint64_t v85 = v6[8];
    uint64_t v86 = (void *)((char *)a1 + v84);
    uint64_t v87 = (void *)((char *)v3 + v84);
    uint64_t v88 = v87[1];
    *uint64_t v86 = *v87;
    v86[1] = v88;
    v89 = (void *)((char *)a1 + v85);
    uint64_t v90 = (void *)((char *)v3 + v85);
    uint64_t v91 = v90[1];
    void *v89 = *v90;
    v89[1] = v91;
    *(void *)((char *)a1 + v6[9]) = *(void *)((char *)v3 + v6[9]);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_255F69498(uint64_t a1, uint64_t a2)
{
  sub_255F72624(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_255F72624(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v47 = a2;
    uint64_t v6 = sub_256176AA8();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    if (!v8(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
    uint64_t v9 = type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v10 = v5 + *(int *)(v9 + 20);
    uint64_t v11 = sub_256176158();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
    uint64_t v13 = v10;
    uint64_t v14 = (int *)v9;
    v12(v13, v11);
    uint64_t v15 = v5 + *(int *)(v9 + 28);
    uint64_t v16 = sub_256175D98();
    uint64_t v45 = *(void (**)(uint64_t))(*(void *)(v16 - 8) + 8);
    uint64_t v46 = v16;
    v45(v15);
    uint64_t v17 = v5 + v14[8];
    if (!v8(v17, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v17, v6);
    }
    uint64_t v18 = _s6StylesV8TimelineVMa(0);
    v12(v17 + *(int *)(v18 + 20), v11);
    uint64_t v19 = v5 + v14[9];
    if (!v8(v19, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v19, v6);
    }
    uint64_t v20 = _s6StylesV6NoDataVMa(0);
    v12(v19 + *(int *)(v20 + 20), v11);
    uint64_t v21 = v5 + v14[10];
    if (!v8(v21, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v21, v6);
    }
    uint64_t v22 = _s6StylesV11PlaceholderVMa(0);
    v12(v21 + *(int *)(v22 + 20), v11);
    uint64_t v23 = v5 + v14[11];
    if (!v8(v23, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v23, v6);
    }
    uint64_t v24 = _s6StylesV6SymbolVMa(0);
    v12(v23 + *(int *)(v24 + 20), v11);
    uint64_t v25 = v5 + v14[12];
    uint64_t v48 = v14;
    if (!v8(v25, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v25, v6);
    }
    uint64_t v26 = v7;
    uint64_t v27 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v12(v25 + *(int *)(v27 + 20), v11);
    uint64_t v28 = *(int *)(v27 + 28);
    uint64_t v29 = v26;
    ((void (*)(uint64_t, uint64_t))v45)(v25 + v28, v46);
    uint64_t v30 = v5 + v48[13];
    if (!v8(v30, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v30, v6);
    }
    uint64_t v31 = _s6StylesV5EmptyVMa(0);
    v12(v30 + *(int *)(v31 + 20), v11);
    uint64_t v32 = v5 + v48[14];
    if (!v8(v32, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32, v6);
    }
    uint64_t v33 = _s6StylesV5DailyVMa(0);
    v12(v32 + *(int *)(v33 + 20), v11);
    uint64_t v34 = v5 + v48[15];
    if (!v8(v34, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v34, v6);
    }
    uint64_t v35 = _s6StylesV9MomentaryVMa(0);
    v12(v34 + *(int *)(v35 + 20), v11);
    uint64_t v36 = v5 + v48[16];
    if (!v8(v36, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v36, v6);
    }
    uint64_t v37 = _s6StylesV6HeaderVMa(0);
    v12(v36 + *(int *)(v37 + 20), v11);
    uint64_t v38 = v5 + v48[17];
    if (!v8(v38, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v38, v6);
    }
    uint64_t v39 = _s6StylesV11ChartButtonVMa(0);
    v12(v38 + *(int *)(v39 + 20), v11);
    uint64_t v40 = v5 + v48[18];
    if (!v8(v40, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v40, v6);
    }
    uint64_t v41 = _s6StylesV15LogButtonFooterVMa(0);
    v12(v40 + *(int *)(v41 + 20), v11);
    a2 = v47;
  }
  else
  {
    swift_release();
  }
  uint64_t v42 = a1 + *(int *)(a2 + 24);
  sub_255F72624(0, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v43 = sub_256175F88();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8))(v42, v43);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

void *sub_255F69C3C(void *a1, void *a2, int *a3)
{
  sub_255F72624(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256175D98();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_255F72624(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v93 = a3;
    uint64_t v10 = sub_256176AA8();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v96 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    unsigned int v94 = a2;
    uint64_t v95 = v11;
    if (v96((char *)v9, 1, v10))
    {
      sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v13 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v14 = v13[5];
    uint64_t v15 = (char *)v8 + v14;
    uint64_t v16 = (char *)v9 + v14;
    uint64_t v17 = sub_256176158();
    v97 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
    v97(v15, v16, v17);
    *((unsigned char *)v8 + v13[6]) = *((unsigned char *)v9 + v13[6]);
    uint64_t v18 = v13[7];
    uint64_t v19 = (char *)v8 + v18;
    uint64_t v20 = (char *)v9 + v18;
    uint64_t v21 = sub_256175D98();
    uint64_t v91 = *(void (**)(char *, char *))(*(void *)(v21 - 8) + 16);
    uint64_t v92 = v21;
    v91(v19, v20);
    uint64_t v22 = v13[8];
    uint64_t v23 = (char *)v8 + v22;
    uint64_t v24 = (char *)v9 + v22;
    uint64_t v25 = v96;
    if (v96((char *)v9 + v22, 1, v10))
    {
      sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v23, v24, v10);
      uint64_t v25 = v96;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v23, 0, 1, v10);
    }
    uint64_t v27 = _s6StylesV8TimelineVMa(0);
    v97(&v23[*(int *)(v27 + 20)], &v24[*(int *)(v27 + 20)], v17);
    uint64_t v28 = v13[9];
    uint64_t v29 = (char *)v8 + v28;
    uint64_t v30 = (char *)v9 + v28;
    if (v25((char *)v9 + v28, 1, v10))
    {
      sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v29, v30, v10);
      uint64_t v25 = v96;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v29, 0, 1, v10);
    }
    uint64_t v32 = _s6StylesV6NoDataVMa(0);
    v97(&v29[*(int *)(v32 + 20)], &v30[*(int *)(v32 + 20)], v17);
    v29[*(int *)(v32 + 24)] = v30[*(int *)(v32 + 24)];
    uint64_t v33 = v13[10];
    uint64_t v34 = (char *)v8 + v33;
    uint64_t v35 = (char *)v9 + v33;
    if (v25((char *)v9 + v33, 1, v10))
    {
      sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v34, v35, v10);
      uint64_t v25 = v96;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v34, 0, 1, v10);
    }
    uint64_t v37 = _s6StylesV11PlaceholderVMa(0);
    v97(&v34[*(int *)(v37 + 20)], &v35[*(int *)(v37 + 20)], v17);
    uint64_t v38 = v13[11];
    uint64_t v39 = (char *)v8 + v38;
    uint64_t v40 = (char *)v9 + v38;
    if (v25((char *)v9 + v38, 1, v10))
    {
      sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v39, v40, v10);
      uint64_t v25 = v96;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v39, 0, 1, v10);
    }
    uint64_t v42 = _s6StylesV6SymbolVMa(0);
    v97(&v39[*(int *)(v42 + 20)], &v40[*(int *)(v42 + 20)], v17);
    uint64_t v43 = v13[12];
    uint64_t v44 = (char *)v8 + v43;
    uint64_t v45 = (char *)v9 + v43;
    if (v25((char *)v9 + v43, 1, v10))
    {
      sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v44, v45, v10);
      uint64_t v25 = v96;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v44, 0, 1, v10);
    }
    uint64_t v47 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v97(&v44[v47[5]], &v45[v47[5]], v17);
    v44[v47[6]] = v45[v47[6]];
    ((void (*)(char *, char *, uint64_t))v91)(&v44[v47[7]], &v45[v47[7]], v92);
    uint64_t v48 = v13[13];
    uint64_t v49 = (char *)v8 + v48;
    uint64_t v50 = (char *)v9 + v48;
    if (v25((char *)v9 + v48, 1, v10))
    {
      sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v49, v50, v10);
      uint64_t v25 = v96;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v49, 0, 1, v10);
    }
    uint64_t v52 = _s6StylesV5EmptyVMa(0);
    v97(&v49[*(int *)(v52 + 20)], &v50[*(int *)(v52 + 20)], v17);
    v49[*(int *)(v52 + 24)] = v50[*(int *)(v52 + 24)];
    uint64_t v53 = v13[14];
    uint64_t v54 = (char *)v8 + v53;
    uint64_t v55 = (char *)v9 + v53;
    if (v25((char *)v9 + v53, 1, v10))
    {
      sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v54, v55, v10);
      uint64_t v25 = v96;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v54, 0, 1, v10);
    }
    uint64_t v57 = _s6StylesV5DailyVMa(0);
    v97(&v54[*(int *)(v57 + 20)], &v55[*(int *)(v57 + 20)], v17);
    v54[*(int *)(v57 + 24)] = v55[*(int *)(v57 + 24)];
    uint64_t v58 = v13[15];
    uint64_t v59 = (char *)v8 + v58;
    uint64_t v60 = (char *)v9 + v58;
    if (v25((char *)v9 + v58, 1, v10))
    {
      sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v59, v60, v10);
      uint64_t v25 = v96;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v59, 0, 1, v10);
    }
    uint64_t v62 = _s6StylesV9MomentaryVMa(0);
    v97(&v59[*(int *)(v62 + 20)], &v60[*(int *)(v62 + 20)], v17);
    uint64_t v63 = v13[16];
    uint64_t v64 = (char *)v8 + v63;
    uint64_t v65 = (char *)v9 + v63;
    if (v25((char *)v9 + v63, 1, v10))
    {
      sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v64, v65, v10);
      uint64_t v25 = v96;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v64, 0, 1, v10);
    }
    uint64_t v67 = _s6StylesV6HeaderVMa(0);
    v97(&v64[*(int *)(v67 + 20)], &v65[*(int *)(v67 + 20)], v17);
    uint64_t v68 = v13[17];
    uint64_t v69 = (char *)v8 + v68;
    uint64_t v70 = (char *)v9 + v68;
    if (v25((char *)v9 + v68, 1, v10))
    {
      sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v69, v70, v10);
      uint64_t v25 = v96;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v69, 0, 1, v10);
    }
    uint64_t v72 = _s6StylesV11ChartButtonVMa(0);
    v97(&v69[*(int *)(v72 + 20)], &v70[*(int *)(v72 + 20)], v17);
    uint64_t v73 = v13[18];
    uint64_t v74 = (char *)v8 + v73;
    uint64_t v75 = (char *)v9 + v73;
    if (v25(v75, 1, v10))
    {
      sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v74, v75, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v74, 0, 1, v10);
    }
    a3 = v93;
    uint64_t v77 = _s6StylesV15LogButtonFooterVMa(0);
    v97(&v74[*(int *)(v77 + 20)], &v75[*(int *)(v77 + 20)], v17);
    a2 = v94;
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v78 = a3[6];
  uint64_t v79 = (void *)((char *)a1 + v78);
  uint64_t v80 = (void *)((char *)a2 + v78);
  sub_255F72624(0, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v81 = sub_256175F88();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v81 - 8) + 16))(v79, v80, v81);
  }
  else
  {
    *uint64_t v79 = *v80;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v82 = a3[7];
  uint64_t v83 = a3[8];
  uint64_t v84 = (void *)((char *)a1 + v82);
  uint64_t v85 = (void *)((char *)a2 + v82);
  uint64_t v86 = v85[1];
  *uint64_t v84 = *v85;
  v84[1] = v86;
  uint64_t v87 = (void *)((char *)a1 + v83);
  uint64_t v88 = (void *)((char *)a2 + v83);
  uint64_t v89 = v88[1];
  *uint64_t v87 = *v88;
  v87[1] = v89;
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_255F6ABE8(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    sub_255F6BBE4((uint64_t)a1, &qword_269F47D00, MEMORY[0x263F18520]);
    sub_255F72624(0, &qword_269F47D00, v6, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v8 = a3[5];
    uint64_t v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (void *)((char *)a2 + v8);
    sub_255F6BBE4((uint64_t)a1 + v8, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles);
    sub_255F72624(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_256176AA8();
      uint64_t v12 = *(void *)(v11 - 8);
      uint64_t v96 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
      uint64_t v97 = v12;
      uint64_t v95 = a3;
      if (v96((char *)v10, 1, v11))
      {
        sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      uint64_t v14 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v15 = v14[5];
      uint64_t v16 = (char *)v9 + v15;
      uint64_t v17 = (char *)v10 + v15;
      uint64_t v18 = sub_256176158();
      uint64_t v98 = *(void (**)(char *, char *))(*(void *)(v18 - 8) + 16);
      uint64_t v99 = v18;
      v98(v16, v17);
      *((unsigned char *)v9 + v14[6]) = *((unsigned char *)v10 + v14[6]);
      uint64_t v19 = v14[7];
      uint64_t v20 = (char *)v9 + v19;
      uint64_t v21 = (char *)v10 + v19;
      uint64_t v22 = sub_256175D98();
      v93 = *(void (**)(char *, char *))(*(void *)(v22 - 8) + 16);
      uint64_t v94 = v22;
      v93(v20, v21);
      uint64_t v23 = v14[8];
      uint64_t v24 = (char *)v9 + v23;
      uint64_t v25 = (char *)v10 + v23;
      uint64_t v26 = v96;
      if (v96((char *)v10 + v23, 1, v11))
      {
        sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v24, v25, v11);
        uint64_t v26 = v96;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v97 + 56))(v24, 0, 1, v11);
      }
      uint64_t v28 = _s6StylesV8TimelineVMa(0);
      ((void (*)(char *, char *, uint64_t))v98)(&v24[*(int *)(v28 + 20)], &v25[*(int *)(v28 + 20)], v99);
      uint64_t v29 = v14[9];
      uint64_t v30 = (char *)v9 + v29;
      uint64_t v31 = (char *)v10 + v29;
      if (v26((char *)v10 + v29, 1, v11))
      {
        sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v30, v31, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v97 + 56))(v30, 0, 1, v11);
      }
      uint64_t v33 = _s6StylesV6NoDataVMa(0);
      ((void (*)(char *, char *, uint64_t))v98)(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v99);
      v30[*(int *)(v33 + 24)] = v31[*(int *)(v33 + 24)];
      uint64_t v34 = v14[10];
      uint64_t v35 = (char *)v9 + v34;
      uint64_t v36 = (char *)v10 + v34;
      if (v26((char *)v10 + v34, 1, v11))
      {
        sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v35, v36, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v97 + 56))(v35, 0, 1, v11);
      }
      uint64_t v38 = _s6StylesV11PlaceholderVMa(0);
      ((void (*)(char *, char *, uint64_t))v98)(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v99);
      uint64_t v39 = v14[11];
      uint64_t v40 = (char *)v9 + v39;
      uint64_t v41 = (char *)v10 + v39;
      if (v26((char *)v10 + v39, 1, v11))
      {
        sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v40, v41, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v97 + 56))(v40, 0, 1, v11);
      }
      uint64_t v43 = _s6StylesV6SymbolVMa(0);
      ((void (*)(char *, char *, uint64_t))v98)(&v40[*(int *)(v43 + 20)], &v41[*(int *)(v43 + 20)], v99);
      uint64_t v44 = v14[12];
      uint64_t v45 = (char *)v9 + v44;
      uint64_t v46 = (char *)v10 + v44;
      if (v26((char *)v10 + v44, 1, v11))
      {
        sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v45, v46, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v97 + 56))(v45, 0, 1, v11);
      }
      uint64_t v48 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      ((void (*)(char *, char *, uint64_t))v98)(&v45[v48[5]], &v46[v48[5]], v99);
      v45[v48[6]] = v46[v48[6]];
      ((void (*)(char *, char *, uint64_t))v93)(&v45[v48[7]], &v46[v48[7]], v94);
      uint64_t v49 = v14[13];
      uint64_t v50 = (char *)v9 + v49;
      uint64_t v51 = (char *)v10 + v49;
      if (v26((char *)v10 + v49, 1, v11))
      {
        sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v50, v51, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v97 + 56))(v50, 0, 1, v11);
      }
      uint64_t v53 = _s6StylesV5EmptyVMa(0);
      ((void (*)(char *, char *, uint64_t))v98)(&v50[*(int *)(v53 + 20)], &v51[*(int *)(v53 + 20)], v99);
      v50[*(int *)(v53 + 24)] = v51[*(int *)(v53 + 24)];
      uint64_t v54 = v14[14];
      uint64_t v55 = (char *)v9 + v54;
      uint64_t v56 = (char *)v10 + v54;
      if (v26((char *)v10 + v54, 1, v11))
      {
        sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v55, v56, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v97 + 56))(v55, 0, 1, v11);
      }
      uint64_t v58 = _s6StylesV5DailyVMa(0);
      ((void (*)(char *, char *, uint64_t))v98)(&v55[*(int *)(v58 + 20)], &v56[*(int *)(v58 + 20)], v99);
      v55[*(int *)(v58 + 24)] = v56[*(int *)(v58 + 24)];
      uint64_t v59 = v14[15];
      uint64_t v60 = (char *)v9 + v59;
      uint64_t v61 = (char *)v10 + v59;
      if (v26((char *)v10 + v59, 1, v11))
      {
        sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v60, v61, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v97 + 56))(v60, 0, 1, v11);
      }
      uint64_t v63 = _s6StylesV9MomentaryVMa(0);
      ((void (*)(char *, char *, uint64_t))v98)(&v60[*(int *)(v63 + 20)], &v61[*(int *)(v63 + 20)], v99);
      uint64_t v64 = v14[16];
      uint64_t v65 = (char *)v9 + v64;
      uint64_t v66 = (char *)v10 + v64;
      if (v26((char *)v10 + v64, 1, v11))
      {
        sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v65, v66, v11);
        uint64_t v26 = v96;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v97 + 56))(v65, 0, 1, v11);
      }
      uint64_t v68 = _s6StylesV6HeaderVMa(0);
      ((void (*)(char *, char *, uint64_t))v98)(&v65[*(int *)(v68 + 20)], &v66[*(int *)(v68 + 20)], v99);
      uint64_t v69 = v14[17];
      uint64_t v70 = (char *)v9 + v69;
      uint64_t v71 = (char *)v10 + v69;
      if (v26((char *)v10 + v69, 1, v11))
      {
        sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v70, v71, v11);
        uint64_t v26 = v96;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v97 + 56))(v70, 0, 1, v11);
      }
      uint64_t v73 = _s6StylesV11ChartButtonVMa(0);
      ((void (*)(char *, char *, uint64_t))v98)(&v70[*(int *)(v73 + 20)], &v71[*(int *)(v73 + 20)], v99);
      uint64_t v74 = v14[18];
      uint64_t v75 = (char *)v9 + v74;
      uint64_t v76 = (char *)v10 + v74;
      if (v26(v76, 1, v11))
      {
        sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v75, v76, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v97 + 56))(v75, 0, 1, v11);
      }
      uint64_t v78 = _s6StylesV15LogButtonFooterVMa(0);
      ((void (*)(char *, char *, uint64_t))v98)(&v75[*(int *)(v78 + 20)], &v76[*(int *)(v78 + 20)], v99);
      a3 = v95;
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v79 = a3[6];
    uint64_t v80 = (void *)((char *)a1 + v79);
    uint64_t v81 = (void *)((char *)a2 + v79);
    uint64_t v82 = (uint64_t (*)(uint64_t))MEMORY[0x263F188C0];
    sub_255F6BBE4((uint64_t)a1 + v79, &qword_269F42CC0, MEMORY[0x263F188C0]);
    sub_255F72624(0, &qword_269F42CC0, v82, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v83 = sub_256175F88();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v83 - 8) + 16))(v80, v81, v83);
    }
    else
    {
      *uint64_t v80 = *v81;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v84 = a3[7];
  uint64_t v85 = (void *)((char *)a1 + v84);
  uint64_t v86 = (void *)((char *)a2 + v84);
  uint64_t v87 = v86[1];
  void *v85 = *v86;
  v85[1] = v87;
  swift_retain();
  swift_release();
  uint64_t v88 = a3[8];
  uint64_t v89 = (void *)((char *)a1 + v88);
  uint64_t v90 = (void *)((char *)a2 + v88);
  uint64_t v91 = v90[1];
  void *v89 = *v90;
  v89[1] = v91;
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_255F6BBE4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_255F72624(0, a2, a3, MEMORY[0x263F185C8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

char *sub_255F6BC54(char *a1, char *a2, int *a3)
{
  sub_255F72624(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  uint64_t v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_256175D98();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  sub_255F72624(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  uint64_t v13 = v12;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_256176AA8();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v95 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    v93 = a2;
    uint64_t v94 = v15;
    if (v95(v11, 1, v14))
    {
      sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v10, v11, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
    }
    uint64_t v17 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v18 = v17[5];
    uint64_t v19 = &v10[v18];
    uint64_t v20 = &v11[v18];
    uint64_t v21 = sub_256176158();
    uint64_t v96 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32);
    v96(v19, v20, v21);
    v10[v17[6]] = v11[v17[6]];
    uint64_t v22 = v17[7];
    uint64_t v23 = &v10[v22];
    uint64_t v24 = &v11[v22];
    uint64_t v25 = sub_256175D98();
    uint64_t v90 = *(void (**)(char *, char *))(*(void *)(v25 - 8) + 32);
    uint64_t v91 = v25;
    v90(v23, v24);
    uint64_t v26 = v17[8];
    uint64_t v27 = &v10[v26];
    uint64_t v28 = &v11[v26];
    uint64_t v29 = v95;
    if (v95(&v11[v26], 1, v14))
    {
      sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v27, v28, v14);
      uint64_t v29 = v95;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v27, 0, 1, v14);
    }
    uint64_t v31 = _s6StylesV8TimelineVMa(0);
    v96(&v27[*(int *)(v31 + 20)], &v28[*(int *)(v31 + 20)], v21);
    uint64_t v32 = v17[9];
    uint64_t v33 = &v10[v32];
    uint64_t v34 = &v11[v32];
    uint64_t v92 = a3;
    if (v29(&v11[v32], 1, v14))
    {
      sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v33, v34, v14);
      uint64_t v29 = v95;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v33, 0, 1, v14);
    }
    uint64_t v36 = _s6StylesV6NoDataVMa(0);
    v96(&v33[*(int *)(v36 + 20)], &v34[*(int *)(v36 + 20)], v21);
    v33[*(int *)(v36 + 24)] = v34[*(int *)(v36 + 24)];
    uint64_t v37 = v17[10];
    uint64_t v38 = &v10[v37];
    uint64_t v39 = &v11[v37];
    if (v29(&v11[v37], 1, v14))
    {
      sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v38, v39, v14);
      uint64_t v29 = v95;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v38, 0, 1, v14);
    }
    uint64_t v41 = _s6StylesV11PlaceholderVMa(0);
    v96(&v38[*(int *)(v41 + 20)], &v39[*(int *)(v41 + 20)], v21);
    uint64_t v42 = v17[11];
    uint64_t v43 = &v10[v42];
    uint64_t v44 = &v11[v42];
    if (v29(&v11[v42], 1, v14))
    {
      sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v43, v44, v14);
      uint64_t v29 = v95;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v43, 0, 1, v14);
    }
    uint64_t v46 = _s6StylesV6SymbolVMa(0);
    v96(&v43[*(int *)(v46 + 20)], &v44[*(int *)(v46 + 20)], v21);
    uint64_t v47 = v17[12];
    uint64_t v48 = &v10[v47];
    uint64_t v49 = &v11[v47];
    if (v29(&v11[v47], 1, v14))
    {
      sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v48, v49, v14);
      uint64_t v29 = v95;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v48, 0, 1, v14);
    }
    uint64_t v51 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v96(&v48[v51[5]], &v49[v51[5]], v21);
    v48[v51[6]] = v49[v51[6]];
    ((void (*)(char *, char *, uint64_t))v90)(&v48[v51[7]], &v49[v51[7]], v91);
    uint64_t v52 = v17[13];
    uint64_t v53 = &v10[v52];
    uint64_t v54 = &v11[v52];
    if (v29(&v11[v52], 1, v14))
    {
      sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v53, v54, v14);
      uint64_t v29 = v95;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v53, 0, 1, v14);
    }
    uint64_t v56 = _s6StylesV5EmptyVMa(0);
    v96(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v21);
    v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
    uint64_t v57 = v17[14];
    uint64_t v58 = &v10[v57];
    uint64_t v59 = &v11[v57];
    if (v29(&v11[v57], 1, v14))
    {
      sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v58, v59, v14);
      uint64_t v29 = v95;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v58, 0, 1, v14);
    }
    uint64_t v61 = _s6StylesV5DailyVMa(0);
    v96(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v21);
    v58[*(int *)(v61 + 24)] = v59[*(int *)(v61 + 24)];
    uint64_t v62 = v17[15];
    uint64_t v63 = &v10[v62];
    uint64_t v64 = &v11[v62];
    if (v29(&v11[v62], 1, v14))
    {
      sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v63, v64, v14);
      uint64_t v29 = v95;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v63, 0, 1, v14);
    }
    a3 = v92;
    uint64_t v66 = _s6StylesV9MomentaryVMa(0);
    v96(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v21);
    uint64_t v67 = v17[16];
    uint64_t v68 = &v10[v67];
    uint64_t v69 = &v11[v67];
    if (v29(&v11[v67], 1, v14))
    {
      sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v68, v69, v14);
      uint64_t v29 = v95;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v68, 0, 1, v14);
    }
    uint64_t v71 = _s6StylesV6HeaderVMa(0);
    v96(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v21);
    uint64_t v72 = v17[17];
    uint64_t v73 = &v10[v72];
    uint64_t v74 = &v11[v72];
    if (v29(&v11[v72], 1, v14))
    {
      sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v73, v74, v14);
      uint64_t v29 = v95;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v73, 0, 1, v14);
    }
    uint64_t v76 = _s6StylesV11ChartButtonVMa(0);
    v96(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v21);
    uint64_t v77 = v17[18];
    uint64_t v78 = &v10[v77];
    uint64_t v79 = &v11[v77];
    if (v29(v79, 1, v14))
    {
      sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v78, v79, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v78, 0, 1, v14);
    }
    uint64_t v81 = _s6StylesV15LogButtonFooterVMa(0);
    v96(&v78[*(int *)(v81 + 20)], &v79[*(int *)(v81 + 20)], v21);
    swift_storeEnumTagMultiPayload();
    a2 = v93;
  }
  else
  {
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  uint64_t v82 = a3[6];
  uint64_t v83 = &a1[v82];
  uint64_t v84 = &a2[v82];
  sub_255F72624(0, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
  uint64_t v86 = v85;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v87 = sub_256175F88();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 32))(v83, v84, v87);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v83, v84, *(void *)(*(void *)(v86 - 8) + 64));
  }
  uint64_t v88 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  *(_OWORD *)&a1[v88] = *(_OWORD *)&a2[v88];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  return a1;
}

char *sub_255F6CBF8(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    sub_255F6BBE4((uint64_t)a1, &qword_269F47D00, MEMORY[0x263F18520]);
    sub_255F72624(0, &qword_269F47D00, v6, MEMORY[0x263F185C8]);
    uint64_t v8 = v7;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_256175D98();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    uint64_t v10 = a3[5];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    sub_255F6BBE4((uint64_t)&a1[v10], &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles);
    sub_255F72624(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    uint64_t v14 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_256176AA8();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v94 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      uint64_t v95 = v16;
      v93 = a3;
      if (v94(v12, 1, v15))
      {
        sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v11, v12, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v11, 0, 1, v15);
      }
      uint64_t v18 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v19 = v18[5];
      uint64_t v20 = &v11[v19];
      uint64_t v21 = &v12[v19];
      uint64_t v22 = sub_256176158();
      uint64_t v96 = *(void (**)(char *, char *))(*(void *)(v22 - 8) + 32);
      uint64_t v97 = v22;
      v96(v20, v21);
      v11[v18[6]] = v12[v18[6]];
      uint64_t v23 = v18[7];
      uint64_t v24 = &v11[v23];
      uint64_t v25 = &v12[v23];
      uint64_t v26 = sub_256175D98();
      uint64_t v91 = *(void (**)(char *, char *))(*(void *)(v26 - 8) + 32);
      uint64_t v92 = v26;
      v91(v24, v25);
      uint64_t v27 = v18[8];
      uint64_t v28 = &v11[v27];
      uint64_t v29 = &v12[v27];
      uint64_t v30 = v94;
      if (v94(&v12[v27], 1, v15))
      {
        sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v28, v29, v15);
        uint64_t v30 = v94;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v28, 0, 1, v15);
      }
      uint64_t v32 = _s6StylesV8TimelineVMa(0);
      ((void (*)(char *, char *, uint64_t))v96)(&v28[*(int *)(v32 + 20)], &v29[*(int *)(v32 + 20)], v97);
      uint64_t v33 = v18[9];
      uint64_t v34 = &v11[v33];
      uint64_t v35 = &v12[v33];
      if (v30(&v12[v33], 1, v15))
      {
        sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v34, v35, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v34, 0, 1, v15);
      }
      uint64_t v37 = _s6StylesV6NoDataVMa(0);
      ((void (*)(char *, char *, uint64_t))v96)(&v34[*(int *)(v37 + 20)], &v35[*(int *)(v37 + 20)], v97);
      v34[*(int *)(v37 + 24)] = v35[*(int *)(v37 + 24)];
      uint64_t v38 = v18[10];
      uint64_t v39 = &v11[v38];
      uint64_t v40 = &v12[v38];
      if (v30(&v12[v38], 1, v15))
      {
        sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v39, v40, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v39, 0, 1, v15);
      }
      uint64_t v42 = _s6StylesV11PlaceholderVMa(0);
      ((void (*)(char *, char *, uint64_t))v96)(&v39[*(int *)(v42 + 20)], &v40[*(int *)(v42 + 20)], v97);
      uint64_t v43 = v18[11];
      uint64_t v44 = &v11[v43];
      uint64_t v45 = &v12[v43];
      if (v30(&v12[v43], 1, v15))
      {
        sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v44, v45, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v44, 0, 1, v15);
      }
      uint64_t v47 = _s6StylesV6SymbolVMa(0);
      ((void (*)(char *, char *, uint64_t))v96)(&v44[*(int *)(v47 + 20)], &v45[*(int *)(v47 + 20)], v97);
      uint64_t v48 = v18[12];
      uint64_t v49 = &v11[v48];
      uint64_t v50 = &v12[v48];
      if (v30(&v12[v48], 1, v15))
      {
        sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v49, v50, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v49, 0, 1, v15);
      }
      uint64_t v52 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      ((void (*)(char *, char *, uint64_t))v96)(&v49[v52[5]], &v50[v52[5]], v97);
      v49[v52[6]] = v50[v52[6]];
      ((void (*)(char *, char *, uint64_t))v91)(&v49[v52[7]], &v50[v52[7]], v92);
      uint64_t v53 = v18[13];
      uint64_t v54 = &v11[v53];
      uint64_t v55 = &v12[v53];
      if (v30(&v12[v53], 1, v15))
      {
        sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v54, v55, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v54, 0, 1, v15);
      }
      uint64_t v57 = _s6StylesV5EmptyVMa(0);
      ((void (*)(char *, char *, uint64_t))v96)(&v54[*(int *)(v57 + 20)], &v55[*(int *)(v57 + 20)], v97);
      v54[*(int *)(v57 + 24)] = v55[*(int *)(v57 + 24)];
      uint64_t v58 = v18[14];
      uint64_t v59 = &v11[v58];
      uint64_t v60 = &v12[v58];
      if (v30(&v12[v58], 1, v15))
      {
        sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v59, v60, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v59, 0, 1, v15);
      }
      uint64_t v62 = _s6StylesV5DailyVMa(0);
      ((void (*)(char *, char *, uint64_t))v96)(&v59[*(int *)(v62 + 20)], &v60[*(int *)(v62 + 20)], v97);
      v59[*(int *)(v62 + 24)] = v60[*(int *)(v62 + 24)];
      uint64_t v63 = v18[15];
      uint64_t v64 = &v11[v63];
      uint64_t v65 = &v12[v63];
      if (v30(&v12[v63], 1, v15))
      {
        sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v64, v65, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v64, 0, 1, v15);
      }
      uint64_t v67 = _s6StylesV9MomentaryVMa(0);
      ((void (*)(char *, char *, uint64_t))v96)(&v64[*(int *)(v67 + 20)], &v65[*(int *)(v67 + 20)], v97);
      uint64_t v68 = v18[16];
      uint64_t v69 = &v11[v68];
      uint64_t v70 = &v12[v68];
      if (v30(&v12[v68], 1, v15))
      {
        sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v69, v70, v15);
        uint64_t v30 = v94;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v69, 0, 1, v15);
      }
      uint64_t v72 = _s6StylesV6HeaderVMa(0);
      ((void (*)(char *, char *, uint64_t))v96)(&v69[*(int *)(v72 + 20)], &v70[*(int *)(v72 + 20)], v97);
      uint64_t v73 = v18[17];
      uint64_t v74 = &v11[v73];
      uint64_t v75 = &v12[v73];
      if (v30(&v12[v73], 1, v15))
      {
        sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v74, v75, v15);
        uint64_t v30 = v94;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v74, 0, 1, v15);
      }
      uint64_t v77 = _s6StylesV11ChartButtonVMa(0);
      ((void (*)(char *, char *, uint64_t))v96)(&v74[*(int *)(v77 + 20)], &v75[*(int *)(v77 + 20)], v97);
      uint64_t v78 = v18[18];
      uint64_t v79 = &v11[v78];
      uint64_t v80 = &v12[v78];
      if (v30(v80, 1, v15))
      {
        sub_255F72624(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v79, v80, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v79, 0, 1, v15);
      }
      uint64_t v82 = _s6StylesV15LogButtonFooterVMa(0);
      ((void (*)(char *, char *, uint64_t))v96)(&v79[*(int *)(v82 + 20)], &v80[*(int *)(v82 + 20)], v97);
      swift_storeEnumTagMultiPayload();
      a3 = v93;
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
    uint64_t v83 = a3[6];
    uint64_t v84 = &a1[v83];
    uint64_t v85 = &a2[v83];
    uint64_t v86 = (uint64_t (*)(uint64_t))MEMORY[0x263F188C0];
    sub_255F6BBE4((uint64_t)&a1[v83], &qword_269F42CC0, MEMORY[0x263F188C0]);
    sub_255F72624(0, &qword_269F42CC0, v86, MEMORY[0x263F185C8]);
    uint64_t v88 = v87;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v89 = sub_256175F88();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 32))(v84, v85, v89);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v84, v85, *(void *)(*(void *)(v88 - 8) + 64));
    }
  }
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  swift_release();
  *(_OWORD *)&a1[a3[8]] = *(_OWORD *)&a2[a3[8]];
  swift_release();
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_255F6DBF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255F6DC08);
}

uint64_t sub_255F6DC08(uint64_t a1, uint64_t a2, int *a3)
{
  sub_255F72624(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  sub_255F72624(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  sub_255F72624(0, &qword_269F42CC8, MEMORY[0x263F188C0], MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  unint64_t v16 = *(void *)(a1 + a3[7]);
  if (v16 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  return (v16 + 1);
}

uint64_t sub_255F6DDF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255F6DE0C);
}

void sub_255F6DE0C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_255F72624(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    sub_255F72624(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      sub_255F72624(0, &qword_269F42CC8, MEMORY[0x263F188C0], MEMORY[0x263F185D0]);
      if (*(_DWORD *)(*(void *)(v16 - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[7]) = (a2 - 1);
        return;
      }
      uint64_t v10 = v16;
      uint64_t v14 = *(void *)(v16 - 8);
      uint64_t v15 = a4[6];
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  v11(v12, a2, a2, v10);
}

uint64_t _s15EntryNoDataViewVMa()
{
  uint64_t result = qword_269F42CD0;
  if (!qword_269F42CD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_255F6E044()
{
  sub_255F72624(319, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (v0 <= 0x3F)
  {
    sub_255F72624(319, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    if (v1 <= 0x3F)
    {
      sub_255F72624(319, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_255F6E1F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255F6E210@<X0>(uint64_t a1@<X8>)
{
  uint64_t v35 = a1;
  sub_255F72228(0);
  uint64_t v36 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F74CDC(0, &qword_269F42DF0, (uint64_t (*)(uint64_t))sub_255F72CAC, (uint64_t (*)(uint64_t))sub_255F72228, MEMORY[0x263F19B20]);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v33 - v6;
  sub_255F72CAC();
  uint64_t v9 = v8;
  uint64_t v34 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for StateOfMindTimeline.Styles(0);
  uint64_t v13 = v12 - 8;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s15EntryNoDataViewVMa();
  sub_256119CA0((uint64_t)v15);
  int v16 = v15[*(int *)(v13 + 32)];
  uint64_t v17 = sub_255F74A44((uint64_t)v15, type metadata accessor for StateOfMindTimeline.Styles);
  if (v16 == 1)
  {
    v33[2] = v33;
    MEMORY[0x270FA5388](v17);
    v33[-2] = v1;
    sub_255F72E44();
    v33[1] = v18;
    sub_255F72A18(255, &qword_269F42E08, (void (*)(uint64_t))sub_255F72FAC, &qword_269F42EA8, MEMORY[0x263F1A158]);
    uint64_t v20 = v19;
    sub_255F73574();
    uint64_t v22 = v21;
    unint64_t v23 = sub_255F73924();
    sub_255F73654();
    uint64_t v25 = v24;
    sub_255F73708();
    uint64_t v27 = v26;
    uint64_t v28 = sub_255F74720(&qword_269F42EE8, (void (*)(uint64_t))sub_255F73708);
    uint64_t v37 = v27;
    uint64_t v38 = v28;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v37 = v25;
    uint64_t v38 = OpaqueTypeConformance2;
    uint64_t v30 = swift_getOpaqueTypeConformance2();
    uint64_t v37 = v20;
    uint64_t v38 = v22;
    unint64_t v39 = v23;
    uint64_t v40 = v30;
    swift_getOpaqueTypeConformance2();
    sub_2561761D8();
    uint64_t v31 = v34;
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v7, v11, v9);
    swift_storeEnumTagMultiPayload();
    sub_255F74720(&qword_269F42F08, (void (*)(uint64_t))sub_255F72CAC);
    sub_255F73A80(&qword_269F42F10, sub_255F72228, (void (*)(void))sub_255F73A38, (void (*)(void))sub_255F73B74);
    sub_256176898();
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v11, v9);
  }
  else
  {
    sub_255F6E77C((uint64_t)v4);
    sub_255F74B40((uint64_t)v4, (uint64_t)v7, (uint64_t (*)(void))sub_255F72228);
    swift_storeEnumTagMultiPayload();
    sub_255F74720(&qword_269F42F08, (void (*)(uint64_t))sub_255F72CAC);
    sub_255F73A80(&qword_269F42F10, sub_255F72228, (void (*)(void))sub_255F73A38, (void (*)(void))sub_255F73B74);
    sub_256176898();
    return sub_255F74A44((uint64_t)v4, (uint64_t (*)(void))sub_255F72228);
  }
}

id sub_255F6E77C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v119 = a1;
  uint64_t v132 = sub_2561762B8();
  MEMORY[0x270FA5388](v132);
  v118 = (char *)&v110 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F72A18(0, &qword_269F42DB8, MEMORY[0x263F19048], &qword_269F42DC0, MEMORY[0x263F1A180]);
  uint64_t v117 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v116 = (uint64_t)&v110 - v4;
  uint64_t v115 = _s14ShowMoreButtonVMa();
  MEMORY[0x270FA5388](v115);
  char v114 = (uint64_t *)((char *)&v110 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v125 = _s6StylesV6NoDataVMa(0) - 8;
  uint64_t v6 = MEMORY[0x270FA5388](v125);
  uint64_t v130 = (uint64_t)&v110 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v110 - v8;
  uint64_t v10 = type metadata accessor for StateOfMindTimeline.Styles(0) - 8;
  uint64_t v120 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v129 = (uint64_t (*)(uint64_t))((char *)&v110 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v133 = (uint64_t)&v110 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v127 = (uint64_t)&v110 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v110 - v17;
  sub_255F72424();
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)&v110 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F723FC(0);
  uint64_t v23 = v22 - 8;
  MEMORY[0x270FA5388](v22);
  uint64_t v123 = (uint64_t)&v110 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F723D4(0);
  uint64_t v126 = v25 - 8;
  MEMORY[0x270FA5388](v25 - 8);
  *(void *)&long long v124 = (char *)&v110 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F723AC(0);
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v128 = (uint64_t (*)(void))((char *)&v110 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_255F722B8();
  uint64_t v111 = v29;
  MEMORY[0x270FA5388](v29);
  uint64_t v113 = (double *)((char *)&v110 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_255F72270(0);
  uint64_t v112 = v31;
  MEMORY[0x270FA5388](v31);
  uint64_t v131 = (uint64_t)&v110 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v21 = sub_256176788();
  *((void *)v21 + 1) = 0;
  v21[16] = 0;
  sub_255F7460C(0, &qword_269F42F68, sub_255F724B8);
  uint64_t v34 = (uint64_t)&v21[*(int *)(v33 + 44)];
  uint64_t v121 = v1;
  sub_255F70C3C(v1, v34);
  char v35 = sub_256176DD8();
  uint64_t v122 = _s15EntryNoDataViewVMa();
  uint64_t v36 = v1 + *(int *)(v122 + 20);
  sub_256119CA0((uint64_t)v18);
  sub_255F74B40((uint64_t)&v18[*(int *)(v10 + 44)], (uint64_t)v9, _s6StylesV6NoDataVMa);
  sub_255F74A44((uint64_t)v18, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256176138();
  sub_255F74A44((uint64_t)v9, _s6StylesV6NoDataVMa);
  sub_256175D48();
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v45 = v123;
  sub_255F74B40((uint64_t)v21, v123, (uint64_t (*)(void))sub_255F72424);
  uint64_t v46 = v45 + *(int *)(v23 + 44);
  *(unsigned char *)uint64_t v46 = v35;
  *(void *)(v46 + 8) = v38;
  *(void *)(v46 + 16) = v40;
  *(void *)(v46 + 24) = v42;
  *(void *)(v46 + 32) = v44;
  *(unsigned char *)(v46 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
  sub_255F74A44((uint64_t)v21, (uint64_t (*)(void))sub_255F72424);
  LOBYTE(v23) = sub_256176D78();
  uint64_t v47 = v127;
  sub_256119CA0(v127);
  uint64_t v48 = v47 + *(int *)(v120 + 44);
  uint64_t v49 = v47;
  uint64_t v50 = v130;
  uint64_t v51 = v121;
  sub_255F74B40(v48, v130, _s6StylesV6NoDataVMa);
  sub_255F74A44(v49, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256176138();
  uint64_t v52 = v122;
  sub_255F74A44(v50, _s6StylesV6NoDataVMa);
  sub_256175D48();
  uint64_t v54 = v53;
  uint64_t v56 = v55;
  uint64_t v58 = v57;
  uint64_t v60 = v59;
  uint64_t v61 = v124;
  sub_255F74B40(v45, v124, (uint64_t (*)(void))sub_255F723FC);
  uint64_t v62 = v61 + *(int *)(v126 + 44);
  *(unsigned char *)uint64_t v62 = v23;
  *(void *)(v62 + 8) = v54;
  *(void *)(v62 + 16) = v56;
  *(void *)(v62 + 24) = v58;
  *(void *)(v62 + 32) = v60;
  *(unsigned char *)(v62 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
  sub_255F74A44(v45, (uint64_t (*)(void))sub_255F723FC);
  uint64_t v63 = v133;
  sub_256119CA0(v133);
  sub_255F74A44(v63, type metadata accessor for StateOfMindTimeline.Styles);
  uint64_t v64 = sub_2561778E8();
  uint64_t v65 = v128;
  sub_256116044(0.0, 1, 0.0, 1, 373.0, 0, 0.0, 1, (uint64_t)v128, 0.0, 1, 0.0, 1, v64, v66);
  sub_255F74A44(v61, (uint64_t (*)(void))sub_255F723D4);
  uint64_t v67 = (uint64_t *)(v51 + *(int *)(v52 + 32));
  uint64_t v68 = *v67;
  uint64_t v69 = v67[1];
  uint64_t v70 = v129;
  uint64_t v130 = v36;
  sub_256119CA0((uint64_t)v129);
  sub_255F74A44((uint64_t)v70, type metadata accessor for StateOfMindTimeline.Styles);
  id result = objc_msgSend(self, sel_sharedBehavior);
  if (result)
  {
    uint64_t v72 = result;
    unsigned int v73 = objc_msgSend(result, sel_isiPad);

    double v74 = 462.0;
    if (v73) {
      double v74 = 490.0;
    }
    uint64_t v75 = *(void *)(v51 + *(int *)(v52 + 36));
    uint64_t v76 = (uint64_t)v113;
    *uint64_t v113 = v74;
    *(double *)(v76 + 8) = v74;
    *(unsigned char *)(v76 + 16) = 0;
    *(void *)(v76 + 24) = v68;
    *(void *)(v76 + 32) = v69;
    uint64_t v77 = v111;
    sub_255F74B40((uint64_t)v65, v76 + *(int *)(v111 + 60), (uint64_t (*)(void))sub_255F723AC);
    uint64_t v78 = v76 + *(int *)(v77 + 64);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v80 = (uint64_t)v114;
    *char v114 = KeyPath;
    sub_255F72624(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    swift_storeEnumTagMultiPayload();
    uint64_t v81 = v115;
    uint64_t v82 = (void *)(v80 + *(int *)(v115 + 20));
    *uint64_t v82 = v68;
    v82[1] = v69;
    *(void *)(v80 + *(int *)(v81 + 24)) = v75;
    sub_255F745A0(v80, v78, (uint64_t (*)(void))_s14ShowMoreButtonVMa);
    uint64_t v83 = v76 + *(int *)(v77 + 68);
    char v134 = 0;
    swift_retain_n();
    swift_bridgeObjectRetain();
    sub_256177568();
    uint64_t v84 = v136;
    *(unsigned char *)uint64_t v83 = v135;
    *(void *)(v83 + 8) = v84;
    sub_255F74A44((uint64_t)v65, (uint64_t (*)(void))sub_255F723AC);
    uint64_t v85 = sub_2561778E8();
    uint64_t v126 = v86;
    uint64_t v127 = v85;
    uint64_t v87 = v131 + *(int *)(v112 + 36);
    uint64_t v88 = v133;
    sub_256119CA0(v133);
    uint64_t v129 = type metadata accessor for StateOfMindTimeline.Styles;
    sub_255F74A44(v88, type metadata accessor for StateOfMindTimeline.Styles);
    uint64_t v89 = v118;
    uint64_t v90 = &v118[*(int *)(v132 + 20)];
    LODWORD(v125) = *MEMORY[0x263F19860];
    uint64_t v91 = v125;
    uint64_t v92 = sub_2561766E8();
    v93 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v92 - 8) + 104);
    v93(v90, v91, v92);
    __asm { FMOV            V0.2D, #18.0 }
    long long v124 = _Q0;
    *(_OWORD *)uint64_t v89 = _Q0;
    uint64_t v99 = sub_255F7060C();
    v100 = (uint64_t (*)(void))MEMORY[0x263F19048];
    uint64_t v101 = v116;
    sub_255F74B40((uint64_t)v89, v116, MEMORY[0x263F19048]);
    *(void *)(v101 + *(int *)(v117 + 36)) = v99;
    uint64_t v128 = (uint64_t (*)(void))MEMORY[0x263F19048];
    sub_255F74A44((uint64_t)v89, MEMORY[0x263F19048]);
    sub_255F74AA4(v101, v87);
    sub_255F7297C();
    uint64_t v103 = (void *)(v87 + *(int *)(v102 + 36));
    uint64_t v104 = v126;
    *uint64_t v103 = v127;
    v103[1] = v104;
    uint64_t v105 = v131;
    sub_255F745A0(v76, v131, (uint64_t (*)(void))sub_255F722B8);
    sub_256119CA0(v88);
    sub_255F74A44(v88, v129);
    v93(&v89[*(int *)(v132 + 20)], v125, v92);
    *(_OWORD *)uint64_t v89 = v124;
    sub_255F72228(0);
    uint64_t v107 = v119;
    uint64_t v108 = v119 + *(int *)(v106 + 36);
    sub_255F74B40((uint64_t)v89, v108, v100);
    sub_255F72C18();
    *(_WORD *)(v108 + *(int *)(v109 + 36)) = 256;
    sub_255F74B40(v105, v107, (uint64_t (*)(void))sub_255F72270);
    sub_255F74A44((uint64_t)v89, v128);
    return (id)sub_255F74A44(v105, (uint64_t (*)(void))sub_255F72270);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_255F6F314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v93 = a2;
  uint64_t v91 = sub_2561778B8();
  uint64_t v89 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  uint64_t v88 = &v74[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v79 = _s6StylesV6NoDataVMa(0) - 8;
  uint64_t v4 = MEMORY[0x270FA5388](v79);
  uint64_t v84 = &v74[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v74[-v6];
  uint64_t v8 = type metadata accessor for StateOfMindTimeline.Styles(0) - 8;
  uint64_t v76 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v83 = &v74[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = &v74[-v11];
  sub_255F73118();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = &v74[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_255F730F0(0);
  uint64_t v17 = v16 - 8;
  MEMORY[0x270FA5388](v16);
  uint64_t v78 = &v74[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_255F730C8(0);
  uint64_t v82 = v19 - 8;
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v80 = &v74[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_255F72FAC();
  uint64_t v22 = (int *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v81 = &v74[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_255F72A18(0, &qword_269F42E08, (void (*)(uint64_t))sub_255F72FAC, &qword_269F42EA8, MEMORY[0x263F1A158]);
  uint64_t v86 = v24;
  MEMORY[0x270FA5388](v24);
  uint64_t v85 = &v74[-v25];
  sub_255F72E44();
  uint64_t v92 = v26;
  uint64_t v90 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v87 = &v74[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)uint64_t v15 = sub_256176788();
  *((void *)v15 + 1) = 0;
  v15[16] = 0;
  sub_255F7460C(0, &qword_269F42F38, sub_255F731B4);
  uint64_t v29 = (uint64_t)&v15[*(int *)(v28 + 44)];
  uint64_t v77 = a1;
  sub_255F6FC18(a1, v29);
  int v75 = sub_256176DD8();
  _s15EntryNoDataViewVMa();
  sub_256119CA0((uint64_t)v12);
  sub_255F74B40((uint64_t)&v12[*(int *)(v8 + 44)], (uint64_t)v7, _s6StylesV6NoDataVMa);
  sub_255F74A44((uint64_t)v12, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256176138();
  sub_255F74A44((uint64_t)v7, _s6StylesV6NoDataVMa);
  sub_256175D48();
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v38 = v78;
  sub_255F74B40((uint64_t)v15, (uint64_t)v78, (uint64_t (*)(void))sub_255F73118);
  uint64_t v39 = &v38[*(int *)(v17 + 44)];
  *uint64_t v39 = v75;
  *((void *)v39 + 1) = v31;
  *((void *)v39 + 2) = v33;
  *((void *)v39 + 3) = v35;
  *((void *)v39 + 4) = v37;
  v39[40] = 0;
  sub_255F74A44((uint64_t)v15, (uint64_t (*)(void))sub_255F73118);
  LOBYTE(v15) = sub_256176D78();
  uint64_t v40 = v83;
  sub_256119CA0((uint64_t)v83);
  uint64_t v41 = (uint64_t)&v40[*(int *)(v76 + 44)];
  uint64_t v42 = (uint64_t)v40;
  uint64_t v43 = v84;
  sub_255F74B40(v41, (uint64_t)v84, _s6StylesV6NoDataVMa);
  sub_255F74A44(v42, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256176138();
  sub_255F74A44((uint64_t)v43, _s6StylesV6NoDataVMa);
  sub_256175D48();
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  uint64_t v52 = v80;
  sub_255F74B40((uint64_t)v38, (uint64_t)v80, (uint64_t (*)(void))sub_255F730F0);
  uint64_t v53 = &v52[*(int *)(v82 + 44)];
  unsigned char *v53 = (_BYTE)v15;
  *((void *)v53 + 1) = v45;
  *((void *)v53 + 2) = v47;
  *((void *)v53 + 3) = v49;
  *((void *)v53 + 4) = v51;
  v53[40] = 0;
  sub_255F74A44((uint64_t)v38, (uint64_t (*)(void))sub_255F730F0);
  uint64_t v54 = v88;
  sub_2561778A8();
  uint64_t v55 = v81;
  uint64_t v56 = v89;
  uint64_t v57 = v91;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v89 + 16))(&v81[v22[19]], v54, v91);
  *uint64_t v55 = 1;
  sub_255F74B40((uint64_t)v52, (uint64_t)&v55[v22[20]], (uint64_t (*)(void))sub_255F730C8);
  uint64_t v58 = v77;
  sub_255F6FF14((uint64_t)&v55[v22[21]]);
  uint64_t v59 = &v55[v22[22]];
  uint64_t v95 = 0;
  sub_256177568();
  uint64_t v60 = v97;
  void *v59 = v96;
  v59[1] = v60;
  uint64_t v61 = &v55[v22[23]];
  uint64_t v95 = 0;
  sub_256177568();
  uint64_t v62 = v97;
  *uint64_t v61 = v96;
  v61[1] = v62;
  (*(void (**)(unsigned char *, uint64_t))(v56 + 8))(v54, v57);
  sub_255F74A44((uint64_t)v52, (uint64_t (*)(void))sub_255F730C8);
  uint64_t v63 = sub_255F7060C();
  LOBYTE(v61) = sub_256176D88();
  uint64_t v64 = v85;
  sub_255F74B40((uint64_t)v55, (uint64_t)v85, (uint64_t (*)(void))sub_255F72FAC);
  uint64_t v65 = &v64[*(int *)(v86 + 36)];
  *(void *)uint64_t v65 = v63;
  v65[8] = (_BYTE)v61;
  sub_255F74A44((uint64_t)v55, (uint64_t (*)(void))sub_255F72FAC);
  uint64_t v94 = v58;
  sub_255F73574();
  sub_255F73924();
  sub_255F73654();
  uint64_t v67 = v66;
  sub_255F73708();
  uint64_t v69 = v68;
  uint64_t v70 = sub_255F74720(&qword_269F42EE8, (void (*)(uint64_t))sub_255F73708);
  uint64_t v96 = v69;
  uint64_t v97 = v70;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v96 = v67;
  uint64_t v97 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v72 = v87;
  sub_256177348();
  sub_255F73BB8((uint64_t)v64);
  return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v90 + 32))(v93, v72, v92);
}

uint64_t sub_255F6FC18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = _s6StylesV6NoDataVMa(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StateOfMindTimeline.Styles(0);
  uint64_t v8 = v7 - 8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F7255C();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F731B4(0);
  uint64_t v15 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v13 = sub_256176788();
  *((void *)v13 + 1) = 0;
  v13[16] = 0;
  sub_255F7460C(0, &qword_269F42F48, sub_255F725F0);
  sub_255F70E58(a1, (uint64_t)&v13[*(int *)(v18 + 44)]);
  char v19 = sub_256176D98();
  _s15EntryNoDataViewVMa();
  sub_256119CA0((uint64_t)v10);
  sub_255F74B40((uint64_t)&v10[*(int *)(v8 + 44)], (uint64_t)v6, _s6StylesV6NoDataVMa);
  sub_255F74A44((uint64_t)v10, type metadata accessor for StateOfMindTimeline.Styles);
  if (v6[*(int *)(v4 + 24)] == 1) {
    sub_256176138();
  }
  sub_255F74A44((uint64_t)v6, _s6StylesV6NoDataVMa);
  sub_256175D48();
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  sub_255F74B40((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(void))sub_255F7255C);
  uint64_t v28 = &v17[*(int *)(v15 + 36)];
  *uint64_t v28 = v19;
  *((void *)v28 + 1) = v21;
  *((void *)v28 + 2) = v23;
  *((void *)v28 + 3) = v25;
  *((void *)v28 + 4) = v27;
  v28[40] = 0;
  sub_255F74A44((uint64_t)v13, (uint64_t (*)(void))sub_255F7255C);
  return sub_255F745A0((uint64_t)v17, a2, (uint64_t (*)(void))sub_255F731B4);
}

id sub_255F6FF14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v45 = a1;
  uint64_t v1 = type metadata accessor for StateOfMindTimeline.Styles(0);
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  uint64_t v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v44 - v5;
  sub_255F728BC(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F732CC(0);
  uint64_t v11 = v10 - 8;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F732A4(0);
  uint64_t v44 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F7327C(0);
  MEMORY[0x270FA5388](v17 - 8);
  char v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F702F4();
  char v20 = sub_256176D98();
  _s15EntryNoDataViewVMa();
  sub_256119CA0((uint64_t)v6);
  sub_255F74A44((uint64_t)v6, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256175D48();
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  sub_255F74B40((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(void))sub_255F728BC);
  uint64_t v29 = &v13[*(int *)(v11 + 44)];
  *uint64_t v29 = v20;
  *((void *)v29 + 1) = v22;
  *((void *)v29 + 2) = v24;
  *((void *)v29 + 3) = v26;
  *((void *)v29 + 4) = v28;
  v29[40] = 0;
  sub_255F74A44((uint64_t)v9, (uint64_t (*)(void))sub_255F728BC);
  char v30 = sub_256176DA8();
  sub_256119CA0((uint64_t)v4);
  sub_255F74A44((uint64_t)v4, type metadata accessor for StateOfMindTimeline.Styles);
  id result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    uint64_t v32 = result;
    MobileGestalt_get_homeButtonType();

    sub_256175D48();
    uint64_t v34 = v33;
    uint64_t v36 = v35;
    uint64_t v38 = v37;
    uint64_t v40 = v39;
    sub_255F74B40((uint64_t)v13, (uint64_t)v16, (uint64_t (*)(void))sub_255F732CC);
    uint64_t v41 = &v16[*(int *)(v44 + 36)];
    *uint64_t v41 = v30;
    *((void *)v41 + 1) = v34;
    *((void *)v41 + 2) = v36;
    *((void *)v41 + 3) = v38;
    *((void *)v41 + 4) = v40;
    v41[40] = 0;
    sub_255F74A44((uint64_t)v13, (uint64_t (*)(void))sub_255F732CC);
    uint64_t v42 = sub_2561778E8();
    sub_2561160B4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v19, 0.0, 1, 0.0, 1, v42, v43);
    sub_255F74A44((uint64_t)v16, (uint64_t (*)(void))sub_255F732A4);
    return (id)sub_255F745A0((uint64_t)v19, v45, (uint64_t (*)(void))sub_255F7327C);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_255F702F4()
{
  uint64_t v1 = _s9LogButtonVMa();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (void *)((char *)v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v4 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_2561755B8();
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();

  uint64_t v8 = _s15EntryNoDataViewVMa();
  uint64_t v9 = (uint64_t *)(v0 + *(int *)(v8 + 28));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v3 = swift_getKeyPath();
  sub_255F72624(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = (uint64_t *)((char *)v3 + *(int *)(v1 + 20));
  *uint64_t v12 = v5;
  v12[1] = v7;
  uint64_t v13 = (uint64_t *)((char *)v3 + *(int *)(v1 + 24));
  *uint64_t v13 = v11;
  v13[1] = v10;
  uint64_t v14 = *(void **)(v0 + *(int *)(v8 + 36));
  swift_retain();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v14 = sub_256095C94(0, v14[2] + 1, 1, v14);
  }
  unint64_t v16 = v14[2];
  unint64_t v15 = v14[3];
  if (v16 >= v15 >> 1) {
    uint64_t v14 = sub_256095C94((void *)(v15 > 1), v16 + 1, 1, v14);
  }
  v14[2] = v16 + 1;
  uint64_t v17 = &v14[2 * v16];
  v17[4] = 0xD000000000000010;
  v17[5] = 0x80000002561AA5A0;
  v20[1] = &unk_2704B5358;
  uint64_t v18 = swift_bridgeObjectRetain();
  sub_255FCD3A4(v18);
  sub_255F74554(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_255F7350C();
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_255F74A44((uint64_t)v3, (uint64_t (*)(void))_s9LogButtonVMa);
}

uint64_t sub_255F7060C()
{
  uint64_t v0 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for StateOfMindTimeline.Styles(0);
  uint64_t v4 = v3 - 8;
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_256175D98();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v20 - v12;
  sub_25611A114((uint64_t)&v20 - v12);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v11, *MEMORY[0x263F18508], v7);
  sub_256175D88();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v8 + 8);
  v14(v11, v7);
  v14(v13, v7);
  _s15EntryNoDataViewVMa();
  sub_256119CA0((uint64_t)v6);
  sub_255F74A44((uint64_t)v6, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256177458();
  uint64_t v15 = sub_256177498();
  swift_release();
  sub_255F74554(0, (unint64_t *)&qword_269F42F40, MEMORY[0x263F1B440], MEMORY[0x263F8E0F8]);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_2561A0040;
  *(void *)(v16 + 32) = v15;
  swift_retain();
  sub_256119CA0((uint64_t)v6);
  sub_255F74B40((uint64_t)&v6[*(int *)(v4 + 56)], (uint64_t)v2, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  sub_255F74A44((uint64_t)v6, type metadata accessor for StateOfMindTimeline.Styles);
  uint64_t v17 = sub_25604A3E0();
  sub_255F74A44((uint64_t)v2, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  *(void *)(v16 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v17;
  uint64_t v21 = v16;
  sub_256178018();
  uint64_t v18 = MEMORY[0x25A2A0310](v21);
  swift_release();
  return v18;
}

uint64_t sub_255F7093C(uint64_t a1)
{
  uint64_t v2 = sub_256176958();
  MEMORY[0x270FA5388](v2 - 8);
  sub_255F73708();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_255F73654();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = &v19[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = &v19[-v14];
  sub_256176948();
  uint64_t v20 = a1;
  sub_255F737BC();
  sub_255F73A80((unint64_t *)&qword_269F42ED8, (void (*)(uint64_t))sub_255F737BC, (void (*)(void))sub_255F738A0, (void (*)(void))sub_255F73540);
  sub_256175E68();
  uint64_t v16 = sub_255F74720(&qword_269F42EE8, (void (*)(uint64_t))sub_255F73708);
  MEMORY[0x25A29F470](v7, v4, v16);
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v15, v13, v9);
  uint64_t v21 = v4;
  uint64_t v22 = v16;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  MEMORY[0x25A29F470](v15, v9, OpaqueTypeConformance2);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v15, v9);
}

uint64_t sub_255F70C3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_255F728BC(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v19 - v8;
  sub_255F7255C();
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v19 - v14;
  *(void *)uint64_t v15 = sub_256176788();
  *((void *)v15 + 1) = 0;
  v15[16] = 0;
  sub_255F7460C(0, &qword_269F42F48, sub_255F725F0);
  sub_255F70E58(a1, (uint64_t)&v15[*(int *)(v16 + 44)]);
  sub_255F702F4();
  sub_255F74B40((uint64_t)v15, (uint64_t)v13, (uint64_t (*)(void))sub_255F7255C);
  sub_255F74B40((uint64_t)v9, (uint64_t)v7, (uint64_t (*)(void))sub_255F728BC);
  sub_255F74B40((uint64_t)v13, a2, (uint64_t (*)(void))sub_255F7255C);
  sub_255F724EC();
  sub_255F74B40((uint64_t)v7, a2 + *(int *)(v17 + 48), (uint64_t (*)(void))sub_255F728BC);
  sub_255F74A44((uint64_t)v9, (uint64_t (*)(void))sub_255F728BC);
  sub_255F74A44((uint64_t)v15, (uint64_t (*)(void))sub_255F7255C);
  sub_255F74A44((uint64_t)v7, (uint64_t (*)(void))sub_255F728BC);
  return sub_255F74A44((uint64_t)v13, (uint64_t (*)(void))sub_255F7255C);
}

uint64_t sub_255F70E58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v135 = a2;
  uint64_t v3 = sub_2561762D8();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v125 = (char *)v112 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_256177958();
  uint64_t v123 = *(void *)(v124 - 8);
  MEMORY[0x270FA5388](v124);
  uint64_t v121 = (char *)v112 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_256175D98();
  uint64_t v119 = *(void *)(v120 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v120);
  uint64_t v117 = (char *)v112 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v138 = (uint64_t)v112 - v8;
  uint64_t v122 = sub_256176EE8();
  uint64_t v115 = *(void *)(v122 - 8);
  MEMORY[0x270FA5388](v122);
  char v114 = (char *)v112 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F7285C();
  uint64_t v137 = v10;
  MEMORY[0x270FA5388](v10);
  v118 = (char *)v112 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t (*)(uint64_t))MEMORY[0x263F1A470];
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F18E28];
  sub_255F74CDC(0, &qword_269F42D60, (uint64_t (*)(uint64_t))sub_255F7285C, MEMORY[0x263F1A470], MEMORY[0x263F18E28]);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v129 = (char *)v112 - v15;
  sub_255F7278C();
  uint64_t v127 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v132 = (uint64_t)v112 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F72764(0);
  uint64_t v130 = v18;
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v134 = (uint64_t)v112 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v131 = (uint64_t)v112 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v133 = (uint64_t)v112 - v23;
  uint64_t v24 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x270FA5388](v24 - 8);
  uint64_t v26 = (char *)v112 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = _s21StateOfMindSymbolViewVMa();
  uint64_t v28 = v27 - 8;
  MEMORY[0x270FA5388](v27);
  char v30 = (void *)((char *)v112 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_255F7273C(0);
  uint64_t v32 = v31;
  MEMORY[0x270FA5388](v31);
  uint64_t v34 = (char *)v112 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F74CDC(0, &qword_269F42D40, (uint64_t (*)(uint64_t))sub_255F7273C, v12, v13);
  uint64_t v36 = MEMORY[0x270FA5388](v35 - 8);
  uint64_t v38 = (char *)v112 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v36);
  uint64_t v40 = (char *)v112 - v39;
  *char v30 = swift_getKeyPath();
  uint64_t v41 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  sub_255F72624(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  uint64_t v42 = (uint64_t *)((char *)v30 + *(int *)(v28 + 28));
  uint64_t *v42 = swift_getKeyPath();
  sub_255F72624(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, v41);
  swift_storeEnumTagMultiPayload();
  *((unsigned char *)v30 + *(int *)(v28 + 32)) = 1;
  uint64_t v116 = _s15EntryNoDataViewVMa();
  uint64_t v43 = *(int *)(v116 + 20);
  uint64_t v139 = a1;
  uint64_t v136 = a1 + v43;
  sub_256119CA0((uint64_t)v26);
  uint64_t v44 = (uint64_t)v26;
  sub_255F74A44((uint64_t)v26, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2561778E8();
  sub_256175F38();
  sub_255F74B40((uint64_t)v30, (uint64_t)v34, (uint64_t (*)(void))_s21StateOfMindSymbolViewVMa);
  uint64_t v45 = &v34[*(int *)(v32 + 36)];
  long long v46 = v143;
  *(_OWORD *)uint64_t v45 = v142;
  *((_OWORD *)v45 + 1) = v46;
  *((_OWORD *)v45 + 2) = v144;
  sub_255F74A44((uint64_t)v30, (uint64_t (*)(void))_s21StateOfMindSymbolViewVMa);
  sub_255F74678();
  sub_2561771E8();
  sub_255F74A44((uint64_t)v34, (uint64_t (*)(void))sub_255F7273C);
  uint64_t v128 = v38;
  uint64_t v126 = v40;
  sub_255F74768((uint64_t)v38, (uint64_t)v40);
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v47 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v48 = sub_2561755B8();
  uint64_t v50 = v49;
  swift_bridgeObjectRelease();

  v140 = (void *)v48;
  uint64_t v141 = v50;
  sub_255F5CE90();
  uint64_t v51 = sub_256177028();
  uint64_t v53 = v52;
  v112[0] = v54;
  char v56 = v55 & 1;
  sub_256119CA0((uint64_t)v26);
  uint64_t v113 = type metadata accessor for StateOfMindTimeline.Styles;
  sub_255F74A44((uint64_t)v26, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256176EC8();
  uint64_t v57 = v115;
  uint64_t v58 = v114;
  uint64_t v59 = v122;
  (*(void (**)(char *, void, uint64_t))(v115 + 104))(v114, *MEMORY[0x263F1A680], v122);
  sub_256176F08();
  swift_release();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v59);
  uint64_t v60 = sub_256176FD8();
  uint64_t v62 = v61;
  v112[1] = v63;
  LOBYTE(v57) = v64 & 1;
  sub_255F67B2C(v51, v53, v56);
  swift_release();
  swift_bridgeObjectRelease();
  sub_256119CA0(v44);
  uint64_t v122 = v44;
  sub_255F74A44(v44, v113);
  id v65 = objc_msgSend(self, sel_secondaryLabelColor);
  v140 = (void *)MEMORY[0x25A29FE80](v65);
  char v114 = (char *)sub_256176FA8();
  uint64_t v67 = v66;
  uint64_t v115 = v68;
  int v70 = v69 & 1;
  sub_255F67B2C(v60, v62, v57);
  swift_release();
  swift_bridgeObjectRelease();
  sub_25611A114(v138);
  uint64_t v71 = v119;
  uint64_t v72 = v117;
  uint64_t v73 = v120;
  (*(void (**)(char *, void, uint64_t))(v119 + 104))(v117, *MEMORY[0x263F18508], v120);
  LOBYTE(v62) = sub_256175D88();
  uint64_t v119 = *(void *)(v71 + 8);
  ((void (*)(char *, uint64_t))v119)(v72, v73);
  uint64_t v74 = v123;
  int v75 = (unsigned int *)MEMORY[0x263F1B950];
  if ((v62 & 1) == 0) {
    int v75 = (unsigned int *)MEMORY[0x263F1B968];
  }
  uint64_t v76 = v121;
  uint64_t v77 = v124;
  (*(void (**)(char *, void, uint64_t))(v123 + 104))(v121, *v75, v124);
  uint64_t v78 = (uint64_t)v125;
  (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v125, v76, v77);
  uint64_t v79 = (uint64_t)v118;
  sub_255F74B40(v78, (uint64_t)&v118[*(int *)(v137 + 36)], MEMORY[0x263F190D8]);
  uint64_t v80 = (uint64_t)v114;
  *(void *)uint64_t v79 = v114;
  *(void *)(v79 + 8) = v67;
  uint64_t v81 = v67;
  char v82 = v70;
  LODWORD(v113) = v70;
  *(unsigned char *)(v79 + 16) = v70;
  *(void *)(v79 + 24) = v115;
  uint64_t v83 = v80;
  uint64_t v84 = v81;
  sub_255F67B94(v80, v81, v82);
  swift_bridgeObjectRetain();
  sub_255F74A44(v78, MEMORY[0x263F190D8]);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v76, v77);
  ((void (*)(uint64_t, uint64_t))v119)(v138, v73);
  sub_255F67B2C(v83, v84, (char)v113);
  swift_bridgeObjectRelease();
  uint64_t v85 = *(void **)(v139 + *(int *)(v116 + 36));
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v85 = sub_256095C94(0, v85[2] + 1, 1, v85);
  }
  unint64_t v87 = v85[2];
  unint64_t v86 = v85[3];
  uint64_t v88 = v122;
  if (v87 >= v86 >> 1) {
    uint64_t v85 = sub_256095C94((void *)(v86 > 1), v87 + 1, 1, v85);
  }
  v85[2] = v87 + 1;
  uint64_t v89 = &v85[2 * v87];
  v89[4] = 0x78655474756F6241;
  v89[5] = 0xE900000000000074;
  v140 = &unk_2704B5358;
  uint64_t v90 = swift_bridgeObjectRetain();
  sub_255FCD3A4(v90);
  sub_255F74554(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_255F74810();
  uint64_t v91 = (uint64_t)v129;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_255F74A44(v79, (uint64_t (*)(void))sub_255F7285C);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v93 = v132;
  sub_255F74928(v91, v132, &qword_269F42D60, (uint64_t (*)(uint64_t))sub_255F7285C);
  uint64_t v94 = v93 + *(int *)(v127 + 36);
  *(void *)uint64_t v94 = KeyPath;
  *(unsigned char *)(v94 + 8) = 1;
  sub_255F749C0(v91, &qword_269F42D60, (uint64_t (*)(uint64_t))sub_255F7285C);
  LOBYTE(KeyPath) = sub_256176DD8();
  sub_256119CA0(v88);
  sub_255F74A44(v88, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256175D48();
  uint64_t v96 = v95;
  uint64_t v98 = v97;
  uint64_t v100 = v99;
  uint64_t v102 = v101;
  uint64_t v103 = v131;
  sub_255F74B40(v93, v131, (uint64_t (*)(void))sub_255F7278C);
  uint64_t v104 = v103 + *(int *)(v130 + 36);
  *(unsigned char *)uint64_t v104 = KeyPath;
  *(void *)(v104 + 8) = v96;
  *(void *)(v104 + 16) = v98;
  *(void *)(v104 + 24) = v100;
  *(void *)(v104 + 32) = v102;
  *(unsigned char *)(v104 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
  sub_255F74A44(v93, (uint64_t (*)(void))sub_255F7278C);
  uint64_t v105 = v133;
  sub_255F745A0(v103, v133, (uint64_t (*)(void))sub_255F72764);
  uint64_t v106 = (uint64_t)v126;
  uint64_t v107 = (uint64_t)v128;
  sub_255F74928((uint64_t)v126, (uint64_t)v128, &qword_269F42D40, (uint64_t (*)(uint64_t))sub_255F7273C);
  uint64_t v108 = v134;
  sub_255F74B40(v105, v134, (uint64_t (*)(void))sub_255F72764);
  uint64_t v109 = v135;
  sub_255F74928(v107, v135, &qword_269F42D40, (uint64_t (*)(uint64_t))sub_255F7273C);
  sub_255F72688();
  sub_255F74B40(v108, v109 + *(int *)(v110 + 48), (uint64_t (*)(void))sub_255F72764);
  sub_255F74A44(v105, (uint64_t (*)(void))sub_255F72764);
  sub_255F749C0(v106, &qword_269F42D40, (uint64_t (*)(uint64_t))sub_255F7273C);
  sub_255F74A44(v108, (uint64_t (*)(void))sub_255F72764);
  return sub_255F749C0(v107, &qword_269F42D40, (uint64_t (*)(uint64_t))sub_255F7273C);
}

uint64_t sub_255F71DD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v19[1] = a2;
  uint64_t v3 = _s15EntryNoDataViewVMa();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  sub_255F73850(0, (unint64_t *)&qword_269F42ED0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
  v19[0] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v19 - v8;
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v10 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_2561755B8();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();

  uint64_t v20 = (void *)v11;
  uint64_t v21 = v13;
  sub_255F74B40(a1, (uint64_t)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))_s15EntryNoDataViewVMa);
  unint64_t v14 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v15 = swift_allocObject();
  sub_255F745A0((uint64_t)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, (uint64_t (*)(void))_s15EntryNoDataViewVMa);
  sub_255F5CE90();
  uint64_t v16 = MEMORY[0x263F8D310];
  sub_2561775D8();
  uint64_t v20 = &unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B5398);
  sub_255F74554(0, (unint64_t *)&qword_26B2AD350, v16, MEMORY[0x263F8D488]);
  sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_255F738A0();
  uint64_t v17 = v19[0];
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v17);
}

uint64_t sub_255F72140()
{
  uint64_t v0 = sub_256175F88();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s15EntryNoDataViewVMa();
  sub_25611A6E4((uint64_t)v3);
  sub_256175F78();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_255F72228(uint64_t a1)
{
}

void sub_255F72270(uint64_t a1)
{
}

void sub_255F722B8()
{
  if (!qword_269F42CF0)
  {
    sub_255F723AC(255);
    _s14ShowMoreButtonVMa();
    sub_255F733D0(&qword_269F42D88, sub_255F723AC, (void (*)(void))sub_255F72904);
    sub_255F74720(&qword_269F42DA8, (void (*)(uint64_t))_s14ShowMoreButtonVMa);
    unint64_t v0 = type metadata accessor for UnlimitedHeightVStackWithFooter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F42CF0);
    }
  }
}

void sub_255F723AC(uint64_t a1)
{
}

void sub_255F723D4(uint64_t a1)
{
}

void sub_255F723FC(uint64_t a1)
{
}

void sub_255F72424()
{
  if (!qword_269F42D10)
  {
    sub_255F724B8(255);
    sub_255F74720(&qword_269F42D80, sub_255F724B8);
    unint64_t v0 = sub_2561776F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F42D10);
    }
  }
}

void sub_255F724B8(uint64_t a1)
{
}

void sub_255F724EC()
{
  if (!qword_269F42D20)
  {
    sub_255F7255C();
    sub_255F728BC(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F42D20);
    }
  }
}

void sub_255F7255C()
{
  if (!qword_269F42D28)
  {
    sub_255F725F0(255);
    sub_255F74720(&qword_269F42D70, sub_255F725F0);
    unint64_t v0 = sub_2561776F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F42D28);
    }
  }
}

void sub_255F725F0(uint64_t a1)
{
}

void sub_255F72624(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_255F72688()
{
  if (!qword_269F42D38)
  {
    sub_255F74CDC(255, &qword_269F42D40, (uint64_t (*)(uint64_t))sub_255F7273C, MEMORY[0x263F1A470], MEMORY[0x263F18E28]);
    sub_255F72764(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F42D38);
    }
  }
}

void sub_255F7273C(uint64_t a1)
{
}

void sub_255F72764(uint64_t a1)
{
}

void sub_255F7278C()
{
  if (!qword_269F42D58)
  {
    sub_255F74CDC(255, &qword_269F42D60, (uint64_t (*)(uint64_t))sub_255F7285C, MEMORY[0x263F1A470], MEMORY[0x263F18E28]);
    sub_255F74554(255, (unint64_t *)&qword_269F42C58, MEMORY[0x263F18968], MEMORY[0x263F1A418]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F42D58);
    }
  }
}

void sub_255F7285C()
{
  if (!qword_269F42D68)
  {
    sub_2561762D8();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F42D68);
    }
  }
}

void sub_255F728BC(uint64_t a1)
{
}

uint64_t sub_255F72904()
{
  return sub_255F733D0(&qword_269F42D90, sub_255F723D4, (void (*)(void))sub_255F72940);
}

uint64_t sub_255F72940()
{
  return sub_255F731DC(&qword_269F42D98, sub_255F723FC, &qword_269F42DA0, (void (*)(uint64_t))sub_255F72424);
}

void sub_255F7297C()
{
  if (!qword_269F42DB0)
  {
    sub_255F72A18(255, &qword_269F42DB8, MEMORY[0x263F19048], &qword_269F42DC0, MEMORY[0x263F1A180]);
    sub_255F72AAC();
    unint64_t v0 = sub_256176888();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F42DB0);
    }
  }
}

void sub_255F72A18(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_255F73850(255, a4, MEMORY[0x263F1B8A8], MEMORY[0x263F1B8A0], a5);
    unint64_t v8 = sub_2561761B8();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_255F72AAC()
{
  unint64_t result = qword_269F42DC8;
  if (!qword_269F42DC8)
  {
    uint64_t v1 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x263F1A180];
    sub_255F72A18(255, &qword_269F42DB8, MEMORY[0x263F19048], &qword_269F42DC0, MEMORY[0x263F1A180]);
    sub_255F74720(&qword_269F42DD0, MEMORY[0x263F19048]);
    sub_255F72BC0(&qword_269F42DD8, &qword_269F42DC0, v1);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F42DC8);
  }
  return result;
}

uint64_t sub_255F72BC0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(void, uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_255F73850(255, a2, MEMORY[0x263F1B8A8], MEMORY[0x263F1B8A0], a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_255F72C18()
{
  if (!qword_269F42DE0)
  {
    sub_2561762B8();
    sub_255F74720(&qword_269F42DE8, MEMORY[0x263F19048]);
    unint64_t v0 = sub_256175E88();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F42DE0);
    }
  }
}

void sub_255F72CAC()
{
  if (!qword_269F42DF8)
  {
    sub_2561760D8();
    sub_255F72E44();
    sub_255F72A18(255, &qword_269F42E08, (void (*)(uint64_t))sub_255F72FAC, &qword_269F42EA8, MEMORY[0x263F1A158]);
    sub_255F73574();
    sub_255F73924();
    sub_255F73654();
    sub_255F73708();
    sub_255F74720(&qword_269F42EE8, (void (*)(uint64_t))sub_255F73708);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t v0 = sub_2561761E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F42DF8);
    }
  }
}

void sub_255F72E44()
{
  if (!qword_269F42E00)
  {
    sub_255F72A18(255, &qword_269F42E08, (void (*)(uint64_t))sub_255F72FAC, &qword_269F42EA8, MEMORY[0x263F1A158]);
    sub_255F73574();
    sub_255F73924();
    sub_255F73654();
    sub_255F73708();
    sub_255F74720(&qword_269F42EE8, (void (*)(uint64_t))sub_255F73708);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F42E00);
    }
  }
}

void sub_255F72FAC()
{
  if (!qword_269F42E10)
  {
    sub_255F730C8(255);
    sub_255F7327C(255);
    sub_2561778B8();
    sub_255F733D0(&qword_269F42E60, sub_255F730C8, (void (*)(void))sub_255F73358);
    sub_255F733D0(&qword_269F42E78, sub_255F7327C, (void (*)(void))sub_255F73394);
    unint64_t v0 = type metadata accessor for ScrollableWithPinnedFooter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F42E10);
    }
  }
}

void sub_255F730C8(uint64_t a1)
{
}

void sub_255F730F0(uint64_t a1)
{
}

void sub_255F73118()
{
  if (!qword_269F42E28)
  {
    sub_255F731B4(255);
    sub_255F731DC(&qword_269F42E38, sub_255F731B4, &qword_269F42E40, (void (*)(uint64_t))sub_255F7255C);
    unint64_t v0 = sub_2561776F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F42E28);
    }
  }
}

void sub_255F731B4(uint64_t a1)
{
}

uint64_t sub_255F731DC(unint64_t *a1, void (*a2)(uint64_t), unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    sub_255F74720(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_255F7327C(uint64_t a1)
{
}

void sub_255F732A4(uint64_t a1)
{
}

void sub_255F732CC(uint64_t a1)
{
}

void sub_255F732F4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_255F73358()
{
  return sub_255F731DC(&qword_269F42E68, sub_255F730F0, &qword_269F42E70, (void (*)(uint64_t))sub_255F73118);
}

uint64_t sub_255F73394()
{
  return sub_255F733D0(&qword_269F42E80, sub_255F732A4, (void (*)(void))sub_255F73450);
}

uint64_t sub_255F733D0(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_255F73450()
{
  unint64_t result = qword_269F42E88;
  if (!qword_269F42E88)
  {
    sub_255F732CC(255);
    sub_255F73A80(&qword_269F42E90, sub_255F728BC, (void (*)(void))sub_255F7350C, (void (*)(void))sub_255F73540);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F42E88);
  }
  return result;
}

uint64_t sub_255F7350C()
{
  return sub_255F74720(&qword_269F42E98, (void (*)(uint64_t))_s9LogButtonVMa);
}

uint64_t sub_255F73540()
{
  return sub_255F74720(&qword_269F42EA0, MEMORY[0x263F1A470]);
}

void sub_255F73574()
{
  if (!qword_269F42EB0)
  {
    sub_255F73654();
    sub_255F73708();
    sub_255F74720(&qword_269F42EE8, (void (*)(uint64_t))sub_255F73708);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F42EB0);
    }
  }
}

void sub_255F73654()
{
  if (!qword_269F42EB8)
  {
    sub_255F73708();
    sub_255F74720(&qword_269F42EE8, (void (*)(uint64_t))sub_255F73708);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F42EB8);
    }
  }
}

void sub_255F73708()
{
  if (!qword_269F42EC0)
  {
    sub_255F737BC();
    sub_255F73A80((unint64_t *)&qword_269F42ED8, (void (*)(uint64_t))sub_255F737BC, (void (*)(void))sub_255F738A0, (void (*)(void))sub_255F73540);
    unint64_t v0 = sub_256175E78();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F42EC0);
    }
  }
}

void sub_255F737BC()
{
  if (!qword_269F42EC8)
  {
    sub_255F73850(255, (unint64_t *)&qword_269F42ED0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
    sub_256176D38();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F42EC8);
    }
  }
}

void sub_255F73850(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_255F738A0()
{
  unint64_t result = qword_269F42EE0;
  if (!qword_269F42EE0)
  {
    sub_255F73850(255, (unint64_t *)&qword_269F42ED0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F42EE0);
  }
  return result;
}

unint64_t sub_255F73924()
{
  unint64_t result = qword_269F42EF0;
  if (!qword_269F42EF0)
  {
    uint64_t v1 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x263F1A158];
    sub_255F72A18(255, &qword_269F42E08, (void (*)(uint64_t))sub_255F72FAC, &qword_269F42EA8, MEMORY[0x263F1A158]);
    sub_255F74720(&qword_269F42EF8, (void (*)(uint64_t))sub_255F72FAC);
    sub_255F72BC0(&qword_269F42F00, &qword_269F42EA8, v1);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F42EF0);
  }
  return result;
}

uint64_t sub_255F73A38()
{
  return sub_255F73A80(&qword_269F42F18, sub_255F72270, (void (*)(void))sub_255F73B0C, (void (*)(void))sub_255F73B40);
}

uint64_t sub_255F73A80(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255F73B0C()
{
  return sub_255F74720(&qword_269F42F20, (void (*)(uint64_t))sub_255F722B8);
}

uint64_t sub_255F73B40()
{
  return sub_255F74720(&qword_269F42F28, (void (*)(uint64_t))sub_255F7297C);
}

uint64_t sub_255F73B74()
{
  return sub_255F74720(&qword_269F42F30, (void (*)(uint64_t))sub_255F72C18);
}

uint64_t sub_255F73BA8@<X0>(uint64_t a1@<X8>)
{
  return sub_255F6F314(*(void *)(v1 + 16), a1);
}

uint64_t sub_255F73BB0()
{
  return sub_255F7093C(*(void *)(v0 + 16));
}

uint64_t sub_255F73BB8(uint64_t a1)
{
  sub_255F72A18(0, &qword_269F42E08, (void (*)(uint64_t))sub_255F72FAC, &qword_269F42EA8, MEMORY[0x263F1A158]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_255F73C4C@<X0>(uint64_t a1@<X8>)
{
  return sub_255F71DD4(*(void *)(v1 + 16), a1);
}

uint64_t sub_255F73C54()
{
  uint64_t v1 = _s15EntryNoDataViewVMa();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v0 + v3;
  sub_255F72624(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = v4 + *(int *)(v1 + 20);
  sub_255F72624(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v48 = v0 + v3;
    uint64_t v49 = v1;
    uint64_t v7 = sub_256176AA8();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    if (!v9(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
    uint64_t v10 = type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v11 = v6 + *(int *)(v10 + 20);
    uint64_t v12 = sub_256176158();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
    uint64_t v14 = v11;
    uint64_t v15 = (int *)v10;
    v13(v14, v12);
    uint64_t v16 = v6 + *(int *)(v10 + 28);
    uint64_t v17 = sub_256175D98();
    long long v46 = *(void (**)(uint64_t))(*(void *)(v17 - 8) + 8);
    uint64_t v47 = v17;
    v46(v16);
    uint64_t v18 = v6 + v15[8];
    if (!v9(v18, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v18, v7);
    }
    uint64_t v19 = _s6StylesV8TimelineVMa(0);
    v13(v18 + *(int *)(v19 + 20), v12);
    uint64_t v20 = v6 + v15[9];
    if (!v9(v20, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v20, v7);
    }
    uint64_t v21 = _s6StylesV6NoDataVMa(0);
    v13(v20 + *(int *)(v21 + 20), v12);
    uint64_t v22 = v6 + v15[10];
    if (!v9(v22, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v22, v7);
    }
    uint64_t v23 = _s6StylesV11PlaceholderVMa(0);
    v13(v22 + *(int *)(v23 + 20), v12);
    uint64_t v24 = v6 + v15[11];
    if (!v9(v24, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v24, v7);
    }
    uint64_t v25 = _s6StylesV6SymbolVMa(0);
    v13(v24 + *(int *)(v25 + 20), v12);
    uint64_t v26 = v6 + v15[12];
    uint64_t v50 = v15;
    if (!v9(v26, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v26, v7);
    }
    uint64_t v27 = v8;
    uint64_t v28 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v13(v26 + *(int *)(v28 + 20), v12);
    uint64_t v29 = *(int *)(v28 + 28);
    uint64_t v30 = v27;
    ((void (*)(uint64_t, uint64_t))v46)(v26 + v29, v47);
    uint64_t v31 = v6 + v50[13];
    if (!v9(v31, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v31, v7);
    }
    uint64_t v32 = _s6StylesV5EmptyVMa(0);
    v13(v31 + *(int *)(v32 + 20), v12);
    uint64_t v33 = v6 + v50[14];
    if (!v9(v33, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v33, v7);
    }
    uint64_t v34 = _s6StylesV5DailyVMa(0);
    v13(v33 + *(int *)(v34 + 20), v12);
    uint64_t v35 = v6 + v50[15];
    if (!v9(v35, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v35, v7);
    }
    uint64_t v36 = _s6StylesV9MomentaryVMa(0);
    v13(v35 + *(int *)(v36 + 20), v12);
    uint64_t v37 = v6 + v50[16];
    if (!v9(v37, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v37, v7);
    }
    uint64_t v38 = _s6StylesV6HeaderVMa(0);
    v13(v37 + *(int *)(v38 + 20), v12);
    uint64_t v39 = v6 + v50[17];
    if (!v9(v39, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v39, v7);
    }
    uint64_t v40 = _s6StylesV11ChartButtonVMa(0);
    v13(v39 + *(int *)(v40 + 20), v12);
    uint64_t v41 = v6 + v50[18];
    if (!v9(v41, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v41, v7);
    }
    uint64_t v42 = _s6StylesV15LogButtonFooterVMa(0);
    v13(v41 + *(int *)(v42 + 20), v12);
    uint64_t v1 = v49;
    uint64_t v4 = v48;
  }
  else
  {
    swift_release();
  }
  uint64_t v43 = v4 + *(int *)(v1 + 24);
  sub_255F72624(0, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v44 = sub_256175F88();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(v43, v44);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_255F74478()
{
  _s15EntryNoDataViewVMa();

  return sub_255F72140();
}

unint64_t sub_255F744D8()
{
  unint64_t result = qword_26B2AD358;
  if (!qword_26B2AD358)
  {
    sub_255F74554(255, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2AD358);
  }
  return result;
}

void sub_255F74554(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_255F745A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_255F7460C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_256176048();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_255F74678()
{
  unint64_t result = qword_269F42F50;
  if (!qword_269F42F50)
  {
    sub_255F7273C(255);
    sub_255F74720(&qword_269F42F58, (void (*)(uint64_t))_s21StateOfMindSymbolViewVMa);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F42F50);
  }
  return result;
}

uint64_t sub_255F74720(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255F74768(uint64_t a1, uint64_t a2)
{
  sub_255F74CDC(0, &qword_269F42D40, (uint64_t (*)(uint64_t))sub_255F7273C, MEMORY[0x263F1A470], MEMORY[0x263F18E28]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_255F74810()
{
  unint64_t result = qword_269F42F60;
  if (!qword_269F42F60)
  {
    sub_255F7285C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F42F60);
  }
  return result;
}

uint64_t sub_255F74880@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2561764B8();
  *a1 = result;
  return result;
}

uint64_t sub_255F748AC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2561764B8();
  *a1 = result;
  return result;
}

uint64_t sub_255F748D8()
{
  return sub_2561764C8();
}

uint64_t sub_255F74900()
{
  return sub_2561764C8();
}

uint64_t sub_255F74928(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_255F74CDC(0, a3, a4, MEMORY[0x263F1A470], MEMORY[0x263F18E28]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_255F749C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_255F74CDC(0, a2, a3, MEMORY[0x263F1A470], MEMORY[0x263F18E28]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_255F74A44(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_255F74AA4(uint64_t a1, uint64_t a2)
{
  sub_255F72A18(0, &qword_269F42DB8, MEMORY[0x263F19048], &qword_269F42DC0, MEMORY[0x263F1A180]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_255F74B40(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_255F74BAC()
{
  unint64_t result = qword_269F42F70;
  if (!qword_269F42F70)
  {
    sub_255F74CDC(255, &qword_269F42F78, (uint64_t (*)(uint64_t))sub_255F72CAC, (uint64_t (*)(uint64_t))sub_255F72228, MEMORY[0x263F19B28]);
    sub_255F74720(&qword_269F42F08, (void (*)(uint64_t))sub_255F72CAC);
    sub_255F73A80(&qword_269F42F10, sub_255F72228, (void (*)(void))sub_255F73A38, (void (*)(void))sub_255F73B74);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F42F70);
  }
  return result;
}

void sub_255F74CDC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4(255);
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

unint64_t sub_255F74D60(char a1)
{
  unint64_t result = 0xD000000000000017;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x696472616F626E4FLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
    case 9:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x736C6562614CLL;
      break;
    case 5:
      unint64_t result = 0x746169636F737341;
      break;
    case 6:
      unint64_t result = 0x616D7269666E6F43;
      break;
    case 7:
      unint64_t result = 0x6F4C207972746E45;
      break;
    case 8:
      unint64_t result = 0x6146207972746E45;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_255F74EC0(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_255F74D60(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_255F74D60(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_256178828();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_255F74F4C()
{
  char v1 = *v0;
  sub_2561788E8();
  sub_255F74D60(v1);
  sub_256177F38();
  swift_bridgeObjectRelease();
  return sub_256178928();
}

uint64_t sub_255F74FB0()
{
  sub_255F74D60(*v0);
  sub_256177F38();

  return swift_bridgeObjectRelease();
}

uint64_t sub_255F75004()
{
  char v1 = *v0;
  sub_2561788E8();
  sub_255F74D60(v1);
  sub_256177F38();
  swift_bridgeObjectRelease();
  return sub_256178928();
}

unint64_t sub_255F75064(char a1)
{
  unint64_t result = 1954047310;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C65636E6143;
      break;
    case 2:
      unint64_t result = 1801675074;
      break;
    case 3:
      unint64_t result = 1885956947;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_255F75118@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_255F76398();
  *a1 = result;
  return result;
}

unint64_t sub_255F75148@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_255F74D60(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_255F75174(unsigned __int8 *a1, char *a2)
{
  return sub_25611FEA0(*a1, *a2);
}

uint64_t sub_255F75180()
{
  return sub_256120D50();
}

uint64_t sub_255F75188()
{
  return sub_256121678();
}

uint64_t sub_255F75190()
{
  return sub_256121E00();
}

uint64_t sub_255F75198@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_255F763E4();
  *a1 = result;
  return result;
}

unint64_t sub_255F751C8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_255F75064(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_255F751F4(char *a1, char *a2)
{
  return sub_256120CA8(*a1, *a2);
}

uint64_t sub_255F75200()
{
  return sub_256178928();
}

uint64_t sub_255F75284()
{
  sub_256177F38();

  return swift_bridgeObjectRelease();
}

uint64_t sub_255F752F4()
{
  return sub_256178928();
}

uint64_t sub_255F75374@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_2561786F8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_255F753D4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x7261746E656D6F4DLL;
  if (*v1) {
    uint64_t v2 = 0x796C696144;
  }
  unint64_t v3 = 0xE900000000000079;
  if (*v1) {
    unint64_t v3 = 0xE500000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

MentalHealthUI::StateOfMindLoggingAnalyticsEntryPointType_optional __swiftcall StateOfMindLoggingAnalyticsEntryPointType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_2561786F8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 11;
  if (v3 < 0xB) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t StateOfMindLoggingAnalyticsEntryPointType.rawValue.getter()
{
  uint64_t result = 0xD000000000000017;
  switch(*v0)
  {
    case 1:
    case 9:
      uint64_t result = 0xD000000000000012;
      break;
    case 2:
      uint64_t result = 0xD00000000000001ALL;
      break;
    case 3:
      unsigned int v2 = 1701670728;
      goto LABEL_5;
    case 4:
      unsigned int v2 = 1801678668;
LABEL_5:
      uint64_t result = v2 | 0x7263532000000000;
      break;
    case 5:
      uint64_t result = 0xD000000000000014;
      break;
    case 6:
      uint64_t result = 0xD000000000000015;
      break;
    case 7:
      uint64_t result = 0xD000000000000017;
      break;
    case 8:
      uint64_t result = 0x207972616D6D7553;
      break;
    case 0xA:
      uint64_t result = 0x746567646957;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_255F755B0(char *a1, char *a2)
{
  return sub_25611FBB8(*a1, *a2);
}

uint64_t sub_255F755BC()
{
  return sub_256178928();
}

uint64_t sub_255F75604()
{
  return sub_256121500();
}

uint64_t sub_255F7560C()
{
  return sub_256178928();
}

MentalHealthUI::StateOfMindLoggingAnalyticsEntryPointType_optional sub_255F75650(Swift::String *a1)
{
  return StateOfMindLoggingAnalyticsEntryPointType.init(rawValue:)(*a1);
}

uint64_t sub_255F7565C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = StateOfMindLoggingAnalyticsEntryPointType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_255F75684()
{
  return sub_256177FD8();
}

uint64_t sub_255F756E4()
{
  return sub_256177FC8();
}

MentalHealthUI::StateOfMindLoggingAnalyticsProvenanceType_optional __swiftcall StateOfMindLoggingAnalyticsProvenanceType.init(rawValue:)(Swift::String rawValue)
{
  unsigned int v2 = v1;
  unint64_t v3 = sub_2561786F8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  *unsigned int v2 = v5;
  return result;
}

uint64_t StateOfMindLoggingAnalyticsProvenanceType.rawValue.getter()
{
  uint64_t result = 0x7079542061746144;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7373656E746946;
      break;
    case 2:
      uint64_t result = 0x726353206B636F4CLL;
      break;
    case 3:
      uint64_t result = 0x6E6C7566646E694DLL;
      break;
    case 4:
      uint64_t result = 0x7972616D6D7553;
      break;
    case 5:
      uint64_t result = 0x746567646957;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_255F75874()
{
  unint64_t result = qword_269F42F80;
  if (!qword_269F42F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F42F80);
  }
  return result;
}

uint64_t sub_255F758C8(unsigned __int8 *a1, char *a2)
{
  return sub_25611F988(*a1, *a2);
}

unint64_t sub_255F758D8()
{
  unint64_t result = qword_269F42F88;
  if (!qword_269F42F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F42F88);
  }
  return result;
}

uint64_t sub_255F7592C()
{
  return sub_256120E4C();
}

uint64_t sub_255F75934()
{
  sub_256177F38();

  return swift_bridgeObjectRelease();
}

uint64_t sub_255F75A48()
{
  return sub_256121EF8();
}

MentalHealthUI::StateOfMindLoggingAnalyticsProvenanceType_optional sub_255F75A50(Swift::String *a1)
{
  return StateOfMindLoggingAnalyticsProvenanceType.init(rawValue:)(*a1);
}

void sub_255F75A5C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEE006D6F6F522065;
  uint64_t v3 = 0x7079542061746144;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x7373656E746946;
      goto LABEL_3;
    case 2:
      *a1 = 0x726353206B636F4CLL;
      a1[1] = 0xEB000000006E6565;
      break;
    case 3:
      *a1 = 0x6E6C7566646E694DLL;
      a1[1] = 0xEB00000000737365;
      break;
    case 4:
      *a1 = 0x7972616D6D7553;
      a1[1] = 0xE700000000000000;
      break;
    case 5:
      *a1 = 0x746567646957;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_255F75B50()
{
  return sub_256177FD8();
}

uint64_t sub_255F75BB0()
{
  return sub_256177FC8();
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for StateOfMindLoggingAnalyticsEntryPointType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StateOfMindLoggingAnalyticsEntryPointType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x255F75D68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindLoggingAnalyticsEntryPointType()
{
  return &type metadata for StateOfMindLoggingAnalyticsEntryPointType;
}

ValueMetadata *type metadata accessor for StateOfMindLoggingAnalyticsProvenanceType()
{
  return &type metadata for StateOfMindLoggingAnalyticsProvenanceType;
}

uint64_t getEnumTagSinglePayload for StateOfMindEntryPresentationStyle(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StateOfMindLoggingAnalyticsLoggingType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x255F75F14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_255F75F3C(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_255F75F44(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindLoggingAnalyticsLoggingType()
{
  return &type metadata for StateOfMindLoggingAnalyticsLoggingType;
}

uint64_t getEnumTagSinglePayload for StateOfMindEntryPhaseType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14MentalHealthUI41StateOfMindLoggingAnalyticsProvenanceTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x255F760BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindLoggingAnalyticsActionType()
{
  return &type metadata for StateOfMindLoggingAnalyticsActionType;
}

uint64_t getEnumTagSinglePayload for StateOfMindLoggingAnalyticsStepType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StateOfMindLoggingAnalyticsStepType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x255F76250);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

unsigned char *sub_255F76278(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindLoggingAnalyticsStepType()
{
  return &type metadata for StateOfMindLoggingAnalyticsStepType;
}

unint64_t sub_255F76294()
{
  unint64_t result = qword_269F42F90;
  if (!qword_269F42F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F42F90);
  }
  return result;
}

unint64_t sub_255F762EC()
{
  unint64_t result = qword_269F42F98;
  if (!qword_269F42F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F42F98);
  }
  return result;
}

unint64_t sub_255F76344()
{
  unint64_t result = qword_269F42FA0;
  if (!qword_269F42FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F42FA0);
  }
  return result;
}

uint64_t sub_255F76398()
{
  unint64_t v0 = sub_2561786F8();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA) {
    return 10;
  }
  else {
    return v0;
  }
}

uint64_t sub_255F763E4()
{
  unint64_t v0 = sub_2561786F8();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

unint64_t sub_255F76430()
{
  unint64_t result = qword_269F42FA8;
  if (!qword_269F42FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F42FA8);
  }
  return result;
}

unint64_t sub_255F76484()
{
  unint64_t result = qword_269F42FB0;
  if (!qword_269F42FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F42FB0);
  }
  return result;
}

uint64_t *sub_255F764E0(uint64_t *a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    unsigned int v4 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_255F775D4(0, &qword_269F42FB8, MEMORY[0x263F18DD8], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_256176178();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      *unsigned int v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (uint64_t *)((char *)v4 + v9);
    unint64_t v11 = (uint64_t *)((char *)a2 + v9);
    sub_255F775D4(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[6];
    uint64_t v14 = (uint64_t *)((char *)v4 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    sub_255F775D4(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_256176AA8();
      uint64_t v17 = *(void *)(v16 - 8);
      uint64_t v126 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
      if (v126((char *)v15, 1, v16))
      {
        sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v14, v15, v16);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      uint64_t v19 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v20 = v19[5];
      uint64_t v21 = (char *)v14 + v20;
      uint64_t v22 = (char *)v15 + v20;
      uint64_t v23 = sub_256176158();
      uint64_t v124 = *(void (**)(char *, char *))(*(void *)(v23 - 8) + 16);
      uint64_t v125 = v23;
      v124(v21, v22);
      *((unsigned char *)v14 + v19[6]) = *((unsigned char *)v15 + v19[6]);
      uint64_t v24 = v19[7];
      uint64_t v25 = (char *)v14 + v24;
      uint64_t v26 = (char *)v15 + v24;
      uint64_t v27 = sub_256175D98();
      uint64_t v121 = *(void (**)(char *, char *))(*(void *)(v27 - 8) + 16);
      uint64_t v122 = v27;
      v121(v25, v26);
      uint64_t v28 = v19[8];
      uint64_t v29 = (char *)v14 + v28;
      uint64_t v30 = (char *)v15 + v28;
      if (v126((char *)v15 + v28, 1, v16))
      {
        sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v29, v30, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v29, 0, 1, v16);
      }
      uint64_t v32 = _s6StylesV8TimelineVMa(0);
      ((void (*)(char *, char *, uint64_t))v124)(&v29[*(int *)(v32 + 20)], &v30[*(int *)(v32 + 20)], v125);
      uint64_t v33 = v19[9];
      uint64_t v34 = (char *)v14 + v33;
      uint64_t v35 = (char *)v15 + v33;
      uint64_t v123 = v17;
      if (v126((char *)v15 + v33, 1, v16))
      {
        sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v34, v35, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v34, 0, 1, v16);
      }
      uint64_t v37 = _s6StylesV6NoDataVMa(0);
      ((void (*)(char *, char *, uint64_t))v124)(&v34[*(int *)(v37 + 20)], &v35[*(int *)(v37 + 20)], v125);
      v34[*(int *)(v37 + 24)] = v35[*(int *)(v37 + 24)];
      uint64_t v38 = v19[10];
      uint64_t v39 = (char *)v14 + v38;
      uint64_t v40 = (char *)v15 + v38;
      if (v126((char *)v15 + v38, 1, v16))
      {
        sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
        uint64_t v42 = v123;
      }
      else
      {
        uint64_t v42 = v123;
        (*(void (**)(char *, char *, uint64_t))(v123 + 16))(v39, v40, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v123 + 56))(v39, 0, 1, v16);
      }
      uint64_t v43 = _s6StylesV11PlaceholderVMa(0);
      ((void (*)(char *, char *, uint64_t))v124)(&v39[*(int *)(v43 + 20)], &v40[*(int *)(v43 + 20)], v125);
      uint64_t v44 = v19[11];
      uint64_t v45 = (char *)v14 + v44;
      long long v46 = (char *)v15 + v44;
      if (v126((char *)v15 + v44, 1, v16))
      {
        sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v45, v46, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v45, 0, 1, v16);
      }
      uint64_t v48 = _s6StylesV6SymbolVMa(0);
      ((void (*)(char *, char *, uint64_t))v124)(&v45[*(int *)(v48 + 20)], &v46[*(int *)(v48 + 20)], v125);
      uint64_t v49 = v19[12];
      uint64_t v50 = (char *)v14 + v49;
      uint64_t v51 = (char *)v15 + v49;
      if (v126((char *)v15 + v49, 1, v16))
      {
        sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v50, v51, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v50, 0, 1, v16);
      }
      uint64_t v53 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      ((void (*)(char *, char *, uint64_t))v124)(&v50[v53[5]], &v51[v53[5]], v125);
      v50[v53[6]] = v51[v53[6]];
      ((void (*)(char *, char *, uint64_t))v121)(&v50[v53[7]], &v51[v53[7]], v122);
      uint64_t v54 = v19[13];
      char v55 = (char *)v14 + v54;
      char v56 = (char *)v15 + v54;
      if (v126((char *)v15 + v54, 1, v16))
      {
        sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v123 + 16))(v55, v56, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v123 + 56))(v55, 0, 1, v16);
      }
      uint64_t v58 = _s6StylesV5EmptyVMa(0);
      ((void (*)(char *, char *, uint64_t))v124)(&v55[*(int *)(v58 + 20)], &v56[*(int *)(v58 + 20)], v125);
      v55[*(int *)(v58 + 24)] = v56[*(int *)(v58 + 24)];
      uint64_t v59 = v19[14];
      uint64_t v60 = (char *)v14 + v59;
      uint64_t v61 = (char *)v15 + v59;
      if (v126((char *)v15 + v59, 1, v16))
      {
        sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v123 + 16))(v60, v61, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v123 + 56))(v60, 0, 1, v16);
      }
      uint64_t v63 = _s6StylesV5DailyVMa(0);
      ((void (*)(char *, char *, uint64_t))v124)(&v60[*(int *)(v63 + 20)], &v61[*(int *)(v63 + 20)], v125);
      v60[*(int *)(v63 + 24)] = v61[*(int *)(v63 + 24)];
      uint64_t v64 = v19[15];
      id v65 = (char *)v14 + v64;
      uint64_t v66 = (char *)v15 + v64;
      if (v126((char *)v15 + v64, 1, v16))
      {
        sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
        uint64_t v68 = v123;
      }
      else
      {
        uint64_t v68 = v123;
        (*(void (**)(char *, char *, uint64_t))(v123 + 16))(v65, v66, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v123 + 56))(v65, 0, 1, v16);
      }
      uint64_t v69 = _s6StylesV9MomentaryVMa(0);
      ((void (*)(char *, char *, uint64_t))v124)(&v65[*(int *)(v69 + 20)], &v66[*(int *)(v69 + 20)], v125);
      uint64_t v70 = v19[16];
      uint64_t v71 = (char *)v14 + v70;
      uint64_t v72 = (char *)v15 + v70;
      if (v126((char *)v15 + v70, 1, v16))
      {
        sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v71, v72, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v71, 0, 1, v16);
      }
      uint64_t v74 = _s6StylesV6HeaderVMa(0);
      ((void (*)(char *, char *, uint64_t))v124)(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v125);
      uint64_t v75 = v19[17];
      uint64_t v76 = (char *)v14 + v75;
      uint64_t v77 = (char *)v15 + v75;
      if (v126((char *)v15 + v75, 1, v16))
      {
        sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v76, v77, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v76, 0, 1, v16);
      }
      uint64_t v79 = _s6StylesV11ChartButtonVMa(0);
      ((void (*)(char *, char *, uint64_t))v124)(&v76[*(int *)(v79 + 20)], &v77[*(int *)(v79 + 20)], v125);
      uint64_t v80 = v19[18];
      uint64_t v81 = (char *)v14 + v80;
      char v82 = (char *)v15 + v80;
      if (v126(v82, 1, v16))
      {
        sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v81, v82, *(void *)(*(void *)(v83 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v81, v82, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v81, 0, 1, v16);
      }
      uint64_t v84 = _s6StylesV15LogButtonFooterVMa(0);
      ((void (*)(char *, char *, uint64_t))v124)(&v81[*(int *)(v84 + 20)], &v82[*(int *)(v84 + 20)], v125);
    }
    else
    {
      *uint64_t v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v85 = a3[7];
    unint64_t v86 = (uint64_t *)((char *)v4 + v85);
    unint64_t v87 = (char *)a2 + v85;
    uint64_t v88 = *(uint64_t *)((char *)a2 + v85 + 8);
    *unint64_t v86 = *(uint64_t *)((char *)a2 + v85);
    v86[1] = v88;
    sub_255F775D4(0, &qword_269F42FC0, (uint64_t (*)(uint64_t))_s9ViewModelOMa, MEMORY[0x263F1B750]);
    uint64_t v90 = *(int *)(v89 + 32);
    uint64_t v91 = (void *)((char *)v86 + v90);
    uint64_t v92 = &v87[v90];
    _s9ViewModelOMa();
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v99 = *((void *)v92 + 1);
      *uint64_t v91 = *(void *)v92;
      v91[1] = v99;
    }
    else
    {
      uint64_t v93 = sub_256177DB8();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v93 - 8) + 16))(v91, v92, v93);
      sub_255F77638();
      uint64_t v95 = *(int *)(v94 + 48);
      uint64_t v96 = (void *)((char *)v91 + v95);
      uint64_t v97 = &v92[v95];
      uint64_t v98 = *((void *)v97 + 1);
      *uint64_t v96 = *(void *)v97;
      v96[1] = v98;
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
    uint64_t v100 = a3[9];
    *(uint64_t *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    uint64_t v101 = (uint64_t *)((char *)v4 + v100);
    uint64_t v102 = (uint64_t *)((char *)a2 + v100);
    uint64_t v103 = v102[1];
    *uint64_t v101 = *v102;
    v101[1] = v103;
    uint64_t v104 = a3[10];
    uint64_t v105 = a3[11];
    uint64_t v106 = (uint64_t *)((char *)v4 + v104);
    uint64_t v107 = (uint64_t *)((char *)a2 + v104);
    uint64_t v108 = v107[1];
    *uint64_t v106 = *v107;
    v106[1] = v108;
    uint64_t v109 = (uint64_t *)((char *)v4 + v105);
    uint64_t v110 = (uint64_t *)((char *)a2 + v105);
    uint64_t v111 = v110[1];
    *uint64_t v109 = *v110;
    v109[1] = v111;
    uint64_t v112 = a3[12];
    uint64_t v113 = a3[13];
    char v114 = (uint64_t *)((char *)v4 + v112);
    uint64_t v115 = (uint64_t *)((char *)a2 + v112);
    uint64_t v116 = v115[1];
    *char v114 = *v115;
    v114[1] = v116;
    uint64_t v117 = (uint64_t *)((char *)v4 + v113);
    v118 = (uint64_t *)((char *)a2 + v113);
    uint64_t v119 = v118[1];
    *uint64_t v117 = *v118;
    v117[1] = v119;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

void sub_255F775D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_255F77638()
{
  if (!qword_269F42FC8)
  {
    sub_256177DB8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F42FC8);
    }
  }
}

uint64_t sub_255F776A4(uint64_t a1, int *a2)
{
  sub_255F775D4(0, &qword_269F42FB8, MEMORY[0x263F18DD8], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256176178();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  sub_255F775D4(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + a2[6];
  sub_255F775D4(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v52 = a1;
    uint64_t v53 = a2;
    uint64_t v8 = sub_256176AA8();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (!v10(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
    uint64_t v11 = type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v12 = v7 + *(int *)(v11 + 20);
    uint64_t v13 = sub_256176158();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
    uint64_t v15 = v12;
    uint64_t v16 = (int *)v11;
    v14(v15, v13);
    uint64_t v17 = v7 + *(int *)(v11 + 28);
    uint64_t v18 = sub_256175D98();
    uint64_t v50 = *(void (**)(uint64_t))(*(void *)(v18 - 8) + 8);
    uint64_t v51 = v18;
    v50(v17);
    uint64_t v19 = v7 + v16[8];
    if (!v10(v19, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v19, v8);
    }
    uint64_t v20 = _s6StylesV8TimelineVMa(0);
    v14(v19 + *(int *)(v20 + 20), v13);
    uint64_t v21 = v7 + v16[9];
    if (!v10(v21, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v21, v8);
    }
    uint64_t v22 = _s6StylesV6NoDataVMa(0);
    v14(v21 + *(int *)(v22 + 20), v13);
    uint64_t v23 = v7 + v16[10];
    if (!v10(v23, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v23, v8);
    }
    uint64_t v24 = _s6StylesV11PlaceholderVMa(0);
    v14(v23 + *(int *)(v24 + 20), v13);
    uint64_t v25 = v7 + v16[11];
    if (!v10(v25, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v25, v8);
    }
    uint64_t v26 = _s6StylesV6SymbolVMa(0);
    v14(v25 + *(int *)(v26 + 20), v13);
    uint64_t v27 = v7 + v16[12];
    uint64_t v54 = v16;
    if (!v10(v27, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v27, v8);
    }
    uint64_t v28 = v9;
    uint64_t v29 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v14(v27 + *(int *)(v29 + 20), v13);
    uint64_t v30 = *(int *)(v29 + 28);
    uint64_t v31 = v28;
    ((void (*)(uint64_t, uint64_t))v50)(v27 + v30, v51);
    uint64_t v32 = v7 + v54[13];
    if (!v10(v32, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v32, v8);
    }
    uint64_t v33 = _s6StylesV5EmptyVMa(0);
    v14(v32 + *(int *)(v33 + 20), v13);
    uint64_t v34 = v7 + v54[14];
    if (!v10(v34, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v34, v8);
    }
    uint64_t v35 = _s6StylesV5DailyVMa(0);
    v14(v34 + *(int *)(v35 + 20), v13);
    uint64_t v36 = v7 + v54[15];
    if (!v10(v36, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v36, v8);
    }
    uint64_t v37 = _s6StylesV9MomentaryVMa(0);
    v14(v36 + *(int *)(v37 + 20), v13);
    uint64_t v38 = v7 + v54[16];
    if (!v10(v38, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v38, v8);
    }
    uint64_t v39 = _s6StylesV6HeaderVMa(0);
    v14(v38 + *(int *)(v39 + 20), v13);
    uint64_t v40 = v7 + v54[17];
    if (!v10(v40, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v40, v8);
    }
    uint64_t v41 = _s6StylesV11ChartButtonVMa(0);
    v14(v40 + *(int *)(v41 + 20), v13);
    uint64_t v42 = v7 + v54[18];
    if (!v10(v42, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v42, v8);
    }
    uint64_t v43 = _s6StylesV15LogButtonFooterVMa(0);
    v14(v42 + *(int *)(v43 + 20), v13);
    a1 = v52;
    a2 = v53;
  }
  else
  {
    swift_release();
  }
  uint64_t v44 = a1 + a2[7];
  swift_release();
  swift_release();
  sub_255F775D4(0, &qword_269F42FC0, (uint64_t (*)(uint64_t))_s9ViewModelOMa, MEMORY[0x263F1B750]);
  uint64_t v46 = v44 + *(int *)(v45 + 32);
  _s9ViewModelOMa();
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload >= 2)
  {
    if (EnumCaseMultiPayload != 2) {
      goto LABEL_38;
    }
  }
  else
  {
    uint64_t v48 = sub_256177DB8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8))(v46, v48);
    sub_255F77638();
  }
  swift_bridgeObjectRelease();
LABEL_38:
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *sub_255F77F3C(void *a1, void *a2, int *a3)
{
  sub_255F775D4(0, &qword_269F42FB8, MEMORY[0x263F18DD8], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256176178();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_255F775D4(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_256175D98();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  sub_255F775D4(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_256176AA8();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v121 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    uint64_t v122 = v15;
    uint64_t v120 = a3;
    if (v121((char *)v13, 1, v14))
    {
      sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    uint64_t v17 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v18 = v17[5];
    uint64_t v19 = (char *)v12 + v18;
    uint64_t v20 = (char *)v13 + v18;
    uint64_t v21 = sub_256176158();
    uint64_t v123 = *(void (**)(char *, char *))(*(void *)(v21 - 8) + 16);
    uint64_t v124 = v21;
    v123(v19, v20);
    *((unsigned char *)v12 + v17[6]) = *((unsigned char *)v13 + v17[6]);
    uint64_t v22 = v17[7];
    uint64_t v23 = (char *)v12 + v22;
    uint64_t v24 = (char *)v13 + v22;
    uint64_t v25 = sub_256175D98();
    v118 = *(void (**)(char *, char *))(*(void *)(v25 - 8) + 16);
    uint64_t v119 = v25;
    v118(v23, v24);
    uint64_t v26 = v17[8];
    uint64_t v27 = (char *)v12 + v26;
    uint64_t v28 = (char *)v13 + v26;
    uint64_t v29 = v121;
    if (v121((char *)v13 + v26, 1, v14))
    {
      sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v27, v28, v14);
      uint64_t v29 = v121;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v27, 0, 1, v14);
    }
    uint64_t v31 = _s6StylesV8TimelineVMa(0);
    ((void (*)(char *, char *, uint64_t))v123)(&v27[*(int *)(v31 + 20)], &v28[*(int *)(v31 + 20)], v124);
    uint64_t v32 = v17[9];
    uint64_t v33 = (char *)v12 + v32;
    uint64_t v34 = (char *)v13 + v32;
    if (v29((char *)v13 + v32, 1, v14))
    {
      sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v33, v34, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v33, 0, 1, v14);
    }
    uint64_t v36 = _s6StylesV6NoDataVMa(0);
    ((void (*)(char *, char *, uint64_t))v123)(&v33[*(int *)(v36 + 20)], &v34[*(int *)(v36 + 20)], v124);
    v33[*(int *)(v36 + 24)] = v34[*(int *)(v36 + 24)];
    uint64_t v37 = v17[10];
    uint64_t v38 = (char *)v12 + v37;
    uint64_t v39 = (char *)v13 + v37;
    if (v29((char *)v13 + v37, 1, v14))
    {
      sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v38, v39, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v38, 0, 1, v14);
    }
    uint64_t v41 = _s6StylesV11PlaceholderVMa(0);
    ((void (*)(char *, char *, uint64_t))v123)(&v38[*(int *)(v41 + 20)], &v39[*(int *)(v41 + 20)], v124);
    uint64_t v42 = v17[11];
    uint64_t v43 = (char *)v12 + v42;
    uint64_t v44 = (char *)v13 + v42;
    if (v29((char *)v13 + v42, 1, v14))
    {
      sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v43, v44, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v43, 0, 1, v14);
    }
    uint64_t v46 = _s6StylesV6SymbolVMa(0);
    ((void (*)(char *, char *, uint64_t))v123)(&v43[*(int *)(v46 + 20)], &v44[*(int *)(v46 + 20)], v124);
    uint64_t v47 = v17[12];
    uint64_t v48 = (char *)v12 + v47;
    uint64_t v49 = (char *)v13 + v47;
    if (v29((char *)v13 + v47, 1, v14))
    {
      sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v48, v49, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v48, 0, 1, v14);
    }
    uint64_t v51 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    ((void (*)(char *, char *, uint64_t))v123)(&v48[v51[5]], &v49[v51[5]], v124);
    v48[v51[6]] = v49[v51[6]];
    ((void (*)(char *, char *, uint64_t))v118)(&v48[v51[7]], &v49[v51[7]], v119);
    uint64_t v52 = v17[13];
    uint64_t v53 = (char *)v12 + v52;
    uint64_t v54 = (char *)v13 + v52;
    if (v29((char *)v13 + v52, 1, v14))
    {
      sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v53, v54, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v53, 0, 1, v14);
    }
    uint64_t v56 = _s6StylesV5EmptyVMa(0);
    ((void (*)(char *, char *, uint64_t))v123)(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v124);
    v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
    uint64_t v57 = v17[14];
    uint64_t v58 = (char *)v12 + v57;
    uint64_t v59 = (char *)v13 + v57;
    if (v29((char *)v13 + v57, 1, v14))
    {
      sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v58, v59, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v58, 0, 1, v14);
    }
    uint64_t v61 = _s6StylesV5DailyVMa(0);
    ((void (*)(char *, char *, uint64_t))v123)(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v124);
    v58[*(int *)(v61 + 24)] = v59[*(int *)(v61 + 24)];
    uint64_t v62 = v17[15];
    uint64_t v63 = (char *)v12 + v62;
    uint64_t v64 = (char *)v13 + v62;
    if (v29((char *)v13 + v62, 1, v14))
    {
      sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v63, v64, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v63, 0, 1, v14);
    }
    uint64_t v66 = _s6StylesV9MomentaryVMa(0);
    ((void (*)(char *, char *, uint64_t))v123)(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v124);
    uint64_t v67 = v17[16];
    uint64_t v68 = (char *)v12 + v67;
    uint64_t v69 = (char *)v13 + v67;
    if (v29((char *)v13 + v67, 1, v14))
    {
      sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v68, v69, v14);
      uint64_t v29 = v121;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v68, 0, 1, v14);
    }
    uint64_t v71 = _s6StylesV6HeaderVMa(0);
    ((void (*)(char *, char *, uint64_t))v123)(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v124);
    uint64_t v72 = v17[17];
    uint64_t v73 = (char *)v12 + v72;
    uint64_t v74 = (char *)v13 + v72;
    if (v29((char *)v13 + v72, 1, v14))
    {
      sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v73, v74, v14);
      uint64_t v29 = v121;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v73, 0, 1, v14);
    }
    uint64_t v76 = _s6StylesV11ChartButtonVMa(0);
    ((void (*)(char *, char *, uint64_t))v123)(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v124);
    uint64_t v77 = v17[18];
    uint64_t v78 = (char *)v12 + v77;
    uint64_t v79 = (char *)v13 + v77;
    if (v29(v79, 1, v14))
    {
      sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v78, v79, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v78, 0, 1, v14);
    }
    uint64_t v81 = _s6StylesV15LogButtonFooterVMa(0);
    ((void (*)(char *, char *, uint64_t))v123)(&v78[*(int *)(v81 + 20)], &v79[*(int *)(v81 + 20)], v124);
    a3 = v120;
  }
  else
  {
    *uint64_t v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v82 = a3[7];
  uint64_t v83 = (void *)((char *)a1 + v82);
  uint64_t v84 = (char *)a2 + v82;
  uint64_t v85 = *(void *)((char *)a2 + v82 + 8);
  *uint64_t v83 = *(void *)((char *)a2 + v82);
  v83[1] = v85;
  sub_255F775D4(0, &qword_269F42FC0, (uint64_t (*)(uint64_t))_s9ViewModelOMa, MEMORY[0x263F1B750]);
  uint64_t v87 = *(int *)(v86 + 32);
  uint64_t v88 = (void *)((char *)v83 + v87);
  uint64_t v89 = &v84[v87];
  _s9ViewModelOMa();
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v96 = *((void *)v89 + 1);
    *uint64_t v88 = *(void *)v89;
    v88[1] = v96;
  }
  else
  {
    uint64_t v90 = sub_256177DB8();
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v90 - 8) + 16))(v88, v89, v90);
    sub_255F77638();
    uint64_t v92 = *(int *)(v91 + 48);
    uint64_t v93 = (void *)((char *)v88 + v92);
    uint64_t v94 = &v89[v92];
    uint64_t v95 = *((void *)v94 + 1);
    void *v93 = *(void *)v94;
    v93[1] = v95;
  }
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  uint64_t v97 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  uint64_t v98 = (void *)((char *)a1 + v97);
  uint64_t v99 = (void *)((char *)a2 + v97);
  uint64_t v100 = v99[1];
  *uint64_t v98 = *v99;
  v98[1] = v100;
  uint64_t v101 = a3[10];
  uint64_t v102 = a3[11];
  uint64_t v103 = (void *)((char *)a1 + v101);
  uint64_t v104 = (void *)((char *)a2 + v101);
  uint64_t v105 = v104[1];
  *uint64_t v103 = *v104;
  v103[1] = v105;
  uint64_t v106 = (void *)((char *)a1 + v102);
  uint64_t v107 = (void *)((char *)a2 + v102);
  uint64_t v108 = v107[1];
  *uint64_t v106 = *v107;
  v106[1] = v108;
  uint64_t v109 = a3[12];
  uint64_t v110 = a3[13];
  uint64_t v111 = (void *)((char *)a1 + v109);
  uint64_t v112 = (void *)((char *)a2 + v109);
  uint64_t v113 = v112[1];
  *uint64_t v111 = *v112;
  v111[1] = v113;
  char v114 = (void *)((char *)a1 + v110);
  uint64_t v115 = (void *)((char *)a2 + v110);
  uint64_t v116 = v115[1];
  *char v114 = *v115;
  v114[1] = v116;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_255F79014(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x263F18DD8];
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_255F87254((uint64_t)a1, &qword_269F42FB8, MEMORY[0x263F18DD8], MEMORY[0x263F185C8]);
    sub_255F775D4(0, &qword_269F42FB8, v6, v7);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_256176178();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    uint64_t v12 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_255F87254((uint64_t)a1 + v9, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    sub_255F775D4(0, &qword_269F47D00, v12, v13);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v10, v11, v14);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = a3[6];
    uint64_t v16 = (void *)((char *)a1 + v15);
    uint64_t v17 = (void *)((char *)a2 + v15);
    uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_255F87254((uint64_t)a1 + v15, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    sub_255F775D4(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, v18);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_256176AA8();
      uint64_t v20 = *(void *)(v19 - 8);
      uint64_t v125 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
      if (v125((char *)v17, 1, v19))
      {
        sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v20 + 16))(v16, v17, v19);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v16, 0, 1, v19);
      }
      uint64_t v22 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v23 = v22[5];
      uint64_t v24 = (char *)v16 + v23;
      uint64_t v25 = (char *)v17 + v23;
      uint64_t v26 = sub_256176158();
      uint64_t v123 = *(void (**)(char *, char *))(*(void *)(v26 - 8) + 16);
      uint64_t v124 = v26;
      v123(v24, v25);
      *((unsigned char *)v16 + v22[6]) = *((unsigned char *)v17 + v22[6]);
      uint64_t v27 = v22[7];
      uint64_t v28 = (char *)v16 + v27;
      uint64_t v29 = (char *)v17 + v27;
      uint64_t v30 = sub_256175D98();
      uint64_t v120 = *(void (**)(char *, char *))(*(void *)(v30 - 8) + 16);
      uint64_t v121 = v30;
      v120(v28, v29);
      uint64_t v31 = v22[8];
      uint64_t v32 = (char *)v16 + v31;
      uint64_t v33 = (char *)v17 + v31;
      if (v125((char *)v17 + v31, 1, v19))
      {
        sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v32, v33, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v32, 0, 1, v19);
      }
      uint64_t v35 = _s6StylesV8TimelineVMa(0);
      ((void (*)(char *, char *, uint64_t))v123)(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v124);
      uint64_t v36 = v22[9];
      uint64_t v37 = (char *)v16 + v36;
      uint64_t v38 = (char *)v17 + v36;
      uint64_t v122 = v20;
      if (v125((char *)v17 + v36, 1, v19))
      {
        sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v37, v38, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v37, 0, 1, v19);
      }
      uint64_t v40 = _s6StylesV6NoDataVMa(0);
      ((void (*)(char *, char *, uint64_t))v123)(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v124);
      v37[*(int *)(v40 + 24)] = v38[*(int *)(v40 + 24)];
      uint64_t v41 = v22[10];
      uint64_t v42 = (char *)v16 + v41;
      uint64_t v43 = (char *)v17 + v41;
      if (v125((char *)v17 + v41, 1, v19))
      {
        sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
        uint64_t v45 = v122;
      }
      else
      {
        uint64_t v45 = v122;
        (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v42, v43, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v42, 0, 1, v19);
      }
      uint64_t v46 = _s6StylesV11PlaceholderVMa(0);
      ((void (*)(char *, char *, uint64_t))v123)(&v42[*(int *)(v46 + 20)], &v43[*(int *)(v46 + 20)], v124);
      uint64_t v47 = v22[11];
      uint64_t v48 = (char *)v16 + v47;
      uint64_t v49 = (char *)v17 + v47;
      if (v125((char *)v17 + v47, 1, v19))
      {
        sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v48, v49, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v48, 0, 1, v19);
      }
      uint64_t v51 = _s6StylesV6SymbolVMa(0);
      ((void (*)(char *, char *, uint64_t))v123)(&v48[*(int *)(v51 + 20)], &v49[*(int *)(v51 + 20)], v124);
      uint64_t v52 = v22[12];
      uint64_t v53 = (char *)v16 + v52;
      uint64_t v54 = (char *)v17 + v52;
      if (v125((char *)v17 + v52, 1, v19))
      {
        sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v53, v54, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v53, 0, 1, v19);
      }
      uint64_t v56 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      ((void (*)(char *, char *, uint64_t))v123)(&v53[v56[5]], &v54[v56[5]], v124);
      v53[v56[6]] = v54[v56[6]];
      ((void (*)(char *, char *, uint64_t))v120)(&v53[v56[7]], &v54[v56[7]], v121);
      uint64_t v57 = v22[13];
      uint64_t v58 = (char *)v16 + v57;
      uint64_t v59 = (char *)v17 + v57;
      if (v125((char *)v17 + v57, 1, v19))
      {
        sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v58, v59, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v58, 0, 1, v19);
      }
      uint64_t v61 = _s6StylesV5EmptyVMa(0);
      ((void (*)(char *, char *, uint64_t))v123)(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v124);
      v58[*(int *)(v61 + 24)] = v59[*(int *)(v61 + 24)];
      uint64_t v62 = v22[14];
      uint64_t v63 = (char *)v16 + v62;
      uint64_t v64 = (char *)v17 + v62;
      if (v125((char *)v17 + v62, 1, v19))
      {
        sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v63, v64, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v63, 0, 1, v19);
      }
      uint64_t v66 = _s6StylesV5DailyVMa(0);
      ((void (*)(char *, char *, uint64_t))v123)(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v124);
      v63[*(int *)(v66 + 24)] = v64[*(int *)(v66 + 24)];
      uint64_t v67 = v22[15];
      uint64_t v68 = (char *)v16 + v67;
      uint64_t v69 = (char *)v17 + v67;
      if (v125((char *)v17 + v67, 1, v19))
      {
        sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
        uint64_t v71 = v122;
      }
      else
      {
        uint64_t v71 = v122;
        (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v68, v69, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v68, 0, 1, v19);
      }
      uint64_t v72 = _s6StylesV9MomentaryVMa(0);
      ((void (*)(char *, char *, uint64_t))v123)(&v68[*(int *)(v72 + 20)], &v69[*(int *)(v72 + 20)], v124);
      uint64_t v73 = v22[16];
      uint64_t v74 = (char *)v16 + v73;
      uint64_t v75 = (char *)v17 + v73;
      if (v125((char *)v17 + v73, 1, v19))
      {
        sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v74, v75, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v74, 0, 1, v19);
      }
      uint64_t v77 = _s6StylesV6HeaderVMa(0);
      ((void (*)(char *, char *, uint64_t))v123)(&v74[*(int *)(v77 + 20)], &v75[*(int *)(v77 + 20)], v124);
      uint64_t v78 = v22[17];
      uint64_t v79 = (char *)v16 + v78;
      uint64_t v80 = (char *)v17 + v78;
      if (v125((char *)v17 + v78, 1, v19))
      {
        sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v79, v80, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v79, 0, 1, v19);
      }
      uint64_t v82 = _s6StylesV11ChartButtonVMa(0);
      ((void (*)(char *, char *, uint64_t))v123)(&v79[*(int *)(v82 + 20)], &v80[*(int *)(v82 + 20)], v124);
      uint64_t v83 = v22[18];
      uint64_t v84 = (char *)v16 + v83;
      uint64_t v85 = (char *)v17 + v83;
      if (v125(v85, 1, v19))
      {
        sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v84, v85, *(void *)(*(void *)(v86 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v84, v85, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v84, 0, 1, v19);
      }
      uint64_t v87 = _s6StylesV15LogButtonFooterVMa(0);
      ((void (*)(char *, char *, uint64_t))v123)(&v84[*(int *)(v87 + 20)], &v85[*(int *)(v87 + 20)], v124);
    }
    else
    {
      *uint64_t v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v88 = a3[7];
  uint64_t v89 = (char *)a1 + v88;
  uint64_t v90 = (char *)a2 + v88;
  *(void *)((char *)a1 + v88) = *(void *)((char *)a2 + v88);
  swift_retain();
  swift_release();
  *((void *)v89 + 1) = *((void *)v90 + 1);
  swift_retain();
  swift_release();
  sub_255F775D4(0, &qword_269F42FC0, (uint64_t (*)(uint64_t))_s9ViewModelOMa, MEMORY[0x263F1B750]);
  if (a1 != a2)
  {
    uint64_t v92 = *(int *)(v91 + 32);
    uint64_t v93 = &v89[v92];
    uint64_t v94 = &v90[v92];
    sub_255F8818C((uint64_t)&v89[v92], (uint64_t (*)(void))_s9ViewModelOMa);
    _s9ViewModelOMa();
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *(void *)uint64_t v93 = *(void *)v94;
      *((void *)v93 + 1) = *((void *)v94 + 1);
    }
    else
    {
      uint64_t v95 = sub_256177DB8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 16))(v93, v94, v95);
      sub_255F77638();
      uint64_t v97 = *(int *)(v96 + 48);
      uint64_t v98 = &v93[v97];
      uint64_t v99 = &v94[v97];
      *(void *)uint64_t v98 = *(void *)v99;
      *((void *)v98 + 1) = *((void *)v99 + 1);
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  uint64_t v100 = a3[9];
  uint64_t v101 = (void *)((char *)a1 + v100);
  uint64_t v102 = (void *)((char *)a2 + v100);
  uint64_t v103 = v102[1];
  *uint64_t v101 = *v102;
  v101[1] = v103;
  swift_retain();
  swift_release();
  uint64_t v104 = a3[10];
  uint64_t v105 = (void *)((char *)a1 + v104);
  uint64_t v106 = (void *)((char *)a2 + v104);
  uint64_t v107 = v106[1];
  *uint64_t v105 = *v106;
  v105[1] = v107;
  swift_retain();
  swift_release();
  uint64_t v108 = a3[11];
  uint64_t v109 = (void *)((char *)a1 + v108);
  uint64_t v110 = (void *)((char *)a2 + v108);
  uint64_t v111 = v110[1];
  *uint64_t v109 = *v110;
  v109[1] = v111;
  swift_retain();
  swift_release();
  uint64_t v112 = a3[12];
  uint64_t v113 = (void *)((char *)a1 + v112);
  char v114 = (void *)((char *)a2 + v112);
  uint64_t v115 = v114[1];
  *uint64_t v113 = *v114;
  v113[1] = v115;
  swift_retain();
  swift_release();
  uint64_t v116 = a3[13];
  uint64_t v117 = (void *)((char *)a1 + v116);
  v118 = (void *)((char *)a2 + v116);
  *uint64_t v117 = *v118;
  v117[1] = v118[1];
  swift_retain();
  swift_release();
  return a1;
}

char *sub_255F7A1B0(char *a1, char *a2, int *a3)
{
  sub_255F775D4(0, &qword_269F42FB8, MEMORY[0x263F18DD8], MEMORY[0x263F185C8]);
  uint64_t v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_256176178();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  sub_255F775D4(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  uint64_t v13 = v12;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_256175D98();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v10, v11, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  sub_255F775D4(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  uint64_t v19 = v18;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v105 = a1;
    uint64_t v106 = a2;
    uint64_t v107 = a3;
    uint64_t v20 = sub_256176AA8();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v109 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    uint64_t v108 = v21;
    if (v109(v17, 1, v20))
    {
      sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v16, v17, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v16, v17, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v16, 0, 1, v20);
    }
    uint64_t v23 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v24 = v23[5];
    uint64_t v25 = &v16[v24];
    uint64_t v26 = &v17[v24];
    uint64_t v27 = sub_256176158();
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32);
    v28(v25, v26, v27);
    v16[v23[6]] = v17[v23[6]];
    uint64_t v29 = v23[7];
    uint64_t v30 = &v16[v29];
    uint64_t v31 = &v17[v29];
    uint64_t v32 = sub_256175D98();
    uint64_t v103 = *(void (**)(char *, char *))(*(void *)(v32 - 8) + 32);
    uint64_t v104 = v32;
    v103(v30, v31);
    uint64_t v33 = v23[8];
    uint64_t v34 = &v16[v33];
    uint64_t v35 = &v17[v33];
    if (v109(&v17[v33], 1, v20))
    {
      sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v34, v35, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v34, 0, 1, v20);
    }
    uint64_t v37 = _s6StylesV8TimelineVMa(0);
    v28(&v34[*(int *)(v37 + 20)], &v35[*(int *)(v37 + 20)], v27);
    uint64_t v38 = v23[9];
    uint64_t v39 = &v16[v38];
    uint64_t v40 = &v17[v38];
    if (v109(&v17[v38], 1, v20))
    {
      sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v39, v40, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v39, 0, 1, v20);
    }
    uint64_t v42 = _s6StylesV6NoDataVMa(0);
    v28(&v39[*(int *)(v42 + 20)], &v40[*(int *)(v42 + 20)], v27);
    v39[*(int *)(v42 + 24)] = v40[*(int *)(v42 + 24)];
    uint64_t v43 = v23[10];
    uint64_t v44 = &v16[v43];
    uint64_t v45 = &v17[v43];
    if (v109(&v17[v43], 1, v20))
    {
      sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v44, v45, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v44, 0, 1, v20);
    }
    uint64_t v47 = _s6StylesV11PlaceholderVMa(0);
    v28(&v44[*(int *)(v47 + 20)], &v45[*(int *)(v47 + 20)], v27);
    uint64_t v48 = v23[11];
    uint64_t v49 = &v16[v48];
    uint64_t v50 = &v17[v48];
    if (v109(&v17[v48], 1, v20))
    {
      sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v49, v50, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v49, 0, 1, v20);
    }
    uint64_t v52 = _s6StylesV6SymbolVMa(0);
    v28(&v49[*(int *)(v52 + 20)], &v50[*(int *)(v52 + 20)], v27);
    uint64_t v53 = v23[12];
    uint64_t v54 = &v16[v53];
    uint64_t v55 = &v17[v53];
    if (v109(&v17[v53], 1, v20))
    {
      sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v54, v55, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v54, 0, 1, v20);
    }
    uint64_t v57 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v28(&v54[v57[5]], &v55[v57[5]], v27);
    v54[v57[6]] = v55[v57[6]];
    ((void (*)(char *, char *, uint64_t))v103)(&v54[v57[7]], &v55[v57[7]], v104);
    uint64_t v58 = v23[13];
    uint64_t v59 = &v16[v58];
    uint64_t v60 = &v17[v58];
    if (v109(&v17[v58], 1, v20))
    {
      sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v59, v60, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v59, 0, 1, v20);
    }
    uint64_t v62 = _s6StylesV5EmptyVMa(0);
    v28(&v59[*(int *)(v62 + 20)], &v60[*(int *)(v62 + 20)], v27);
    v59[*(int *)(v62 + 24)] = v60[*(int *)(v62 + 24)];
    uint64_t v63 = v23[14];
    uint64_t v64 = &v16[v63];
    uint64_t v65 = &v17[v63];
    if (v109(&v17[v63], 1, v20))
    {
      sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v64, v65, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v64, 0, 1, v20);
    }
    uint64_t v67 = _s6StylesV5DailyVMa(0);
    v28(&v64[*(int *)(v67 + 20)], &v65[*(int *)(v67 + 20)], v27);
    v64[*(int *)(v67 + 24)] = v65[*(int *)(v67 + 24)];
    uint64_t v68 = v23[15];
    uint64_t v69 = &v16[v68];
    uint64_t v70 = &v17[v68];
    if (v109(&v17[v68], 1, v20))
    {
      sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v69, v70, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v69, 0, 1, v20);
    }
    uint64_t v72 = _s6StylesV9MomentaryVMa(0);
    v28(&v69[*(int *)(v72 + 20)], &v70[*(int *)(v72 + 20)], v27);
    uint64_t v73 = v23[16];
    uint64_t v74 = &v16[v73];
    uint64_t v75 = &v17[v73];
    if (v109(&v17[v73], 1, v20))
    {
      sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v74, v75, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v74, 0, 1, v20);
    }
    uint64_t v77 = _s6StylesV6HeaderVMa(0);
    v28(&v74[*(int *)(v77 + 20)], &v75[*(int *)(v77 + 20)], v27);
    uint64_t v78 = v23[17];
    uint64_t v79 = &v16[v78];
    uint64_t v80 = &v17[v78];
    if (v109(&v17[v78], 1, v20))
    {
      sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v79, v80, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v79, 0, 1, v20);
    }
    uint64_t v82 = _s6StylesV11ChartButtonVMa(0);
    v28(&v79[*(int *)(v82 + 20)], &v80[*(int *)(v82 + 20)], v27);
    uint64_t v83 = v23[18];
    uint64_t v84 = &v16[v83];
    uint64_t v85 = &v17[v83];
    if (v109(v85, 1, v20))
    {
      sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v84, v85, *(void *)(*(void *)(v86 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v84, v85, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v84, 0, 1, v20);
    }
    a3 = v107;
    uint64_t v87 = _s6StylesV15LogButtonFooterVMa(0);
    v28(&v84[*(int *)(v87 + 20)], &v85[*(int *)(v87 + 20)], v27);
    swift_storeEnumTagMultiPayload();
    a1 = v105;
    a2 = v106;
  }
  else
  {
    memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
  }
  uint64_t v88 = a3[7];
  uint64_t v89 = &a1[v88];
  uint64_t v90 = &a2[v88];
  uint64_t v91 = *(void *)&a2[v88 + 8];
  *(void *)uint64_t v89 = *(void *)&a2[v88];
  *((void *)v89 + 1) = v91;
  sub_255F775D4(0, &qword_269F42FC0, (uint64_t (*)(uint64_t))_s9ViewModelOMa, MEMORY[0x263F1B750]);
  uint64_t v93 = *(int *)(v92 + 32);
  uint64_t v94 = &v89[v93];
  uint64_t v95 = &v90[v93];
  uint64_t v96 = _s9ViewModelOMa();
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(v94, v95, *(void *)(*(void *)(v96 - 8) + 64));
  }
  else
  {
    uint64_t v97 = sub_256177DB8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 32))(v94, v95, v97);
    sub_255F77638();
    *(_OWORD *)&v94[*(int *)(v98 + 48)] = *(_OWORD *)&v95[*(int *)(v98 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v99 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  *(_OWORD *)&a1[v99] = *(_OWORD *)&a2[v99];
  uint64_t v100 = a3[11];
  *(_OWORD *)&a1[a3[10]] = *(_OWORD *)&a2[a3[10]];
  *(_OWORD *)&a1[v100] = *(_OWORD *)&a2[v100];
  uint64_t v101 = a3[13];
  *(_OWORD *)&a1[a3[12]] = *(_OWORD *)&a2[a3[12]];
  *(_OWORD *)&a1[v101] = *(_OWORD *)&a2[v101];
  return a1;
}

char *sub_255F7B2E4(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x263F18DD8];
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_255F87254((uint64_t)a1, &qword_269F42FB8, MEMORY[0x263F18DD8], MEMORY[0x263F185C8]);
    sub_255F775D4(0, &qword_269F42FB8, v6, v7);
    uint64_t v9 = v8;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_256176178();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    uint64_t v11 = a3[5];
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    uint64_t v14 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_255F87254((uint64_t)&a1[v11], &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    sub_255F775D4(0, &qword_269F47D00, v14, v15);
    uint64_t v17 = v16;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = sub_256175D98();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v12, v13, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
    }
    uint64_t v19 = a3[6];
    uint64_t v20 = &a1[v19];
    uint64_t v21 = &a2[v19];
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_255F87254((uint64_t)&a1[v19], &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    sub_255F775D4(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, v22);
    uint64_t v24 = v23;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v25 = sub_256176AA8();
      uint64_t v26 = *(void *)(v25 - 8);
      char v114 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
      if (v114(v21, 1, v25))
      {
        sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v20, v21, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v20, v21, v25);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v20, 0, 1, v25);
      }
      uint64_t v28 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v29 = v28[5];
      uint64_t v30 = &v20[v29];
      uint64_t v31 = &v21[v29];
      uint64_t v32 = sub_256176158();
      uint64_t v112 = *(void (**)(char *, char *))(*(void *)(v32 - 8) + 32);
      uint64_t v113 = v32;
      v112(v30, v31);
      v20[v28[6]] = v21[v28[6]];
      uint64_t v33 = v28[7];
      uint64_t v34 = &v20[v33];
      uint64_t v35 = &v21[v33];
      uint64_t v36 = sub_256175D98();
      uint64_t v109 = *(void (**)(char *, char *))(*(void *)(v36 - 8) + 32);
      uint64_t v110 = v36;
      v109(v34, v35);
      uint64_t v37 = v28[8];
      uint64_t v38 = &v20[v37];
      uint64_t v39 = &v21[v37];
      if (v114(&v21[v37], 1, v25))
      {
        sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v38, v39, v25);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v38, 0, 1, v25);
      }
      uint64_t v41 = _s6StylesV8TimelineVMa(0);
      ((void (*)(char *, char *, uint64_t))v112)(&v38[*(int *)(v41 + 20)], &v39[*(int *)(v41 + 20)], v113);
      uint64_t v42 = v28[9];
      uint64_t v43 = &v20[v42];
      uint64_t v44 = &v21[v42];
      uint64_t v111 = v26;
      if (v114(&v21[v42], 1, v25))
      {
        sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v43, v44, v25);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v43, 0, 1, v25);
      }
      uint64_t v46 = _s6StylesV6NoDataVMa(0);
      ((void (*)(char *, char *, uint64_t))v112)(&v43[*(int *)(v46 + 20)], &v44[*(int *)(v46 + 20)], v113);
      v43[*(int *)(v46 + 24)] = v44[*(int *)(v46 + 24)];
      uint64_t v47 = v28[10];
      uint64_t v48 = &v20[v47];
      uint64_t v49 = &v21[v47];
      if (v114(&v21[v47], 1, v25))
      {
        sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
        uint64_t v51 = v111;
      }
      else
      {
        uint64_t v51 = v111;
        (*(void (**)(char *, char *, uint64_t))(v111 + 32))(v48, v49, v25);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v111 + 56))(v48, 0, 1, v25);
      }
      uint64_t v52 = _s6StylesV11PlaceholderVMa(0);
      ((void (*)(char *, char *, uint64_t))v112)(&v48[*(int *)(v52 + 20)], &v49[*(int *)(v52 + 20)], v113);
      uint64_t v53 = v28[11];
      uint64_t v54 = &v20[v53];
      uint64_t v55 = &v21[v53];
      if (v114(&v21[v53], 1, v25))
      {
        sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v54, v55, v25);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v54, 0, 1, v25);
      }
      uint64_t v57 = _s6StylesV6SymbolVMa(0);
      ((void (*)(char *, char *, uint64_t))v112)(&v54[*(int *)(v57 + 20)], &v55[*(int *)(v57 + 20)], v113);
      uint64_t v58 = v28[12];
      uint64_t v59 = &v20[v58];
      uint64_t v60 = &v21[v58];
      if (v114(&v21[v58], 1, v25))
      {
        sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v59, v60, v25);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v59, 0, 1, v25);
      }
      uint64_t v62 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      ((void (*)(char *, char *, uint64_t))v112)(&v59[v62[5]], &v60[v62[5]], v113);
      v59[v62[6]] = v60[v62[6]];
      ((void (*)(char *, char *, uint64_t))v109)(&v59[v62[7]], &v60[v62[7]], v110);
      uint64_t v63 = v28[13];
      uint64_t v64 = &v20[v63];
      uint64_t v65 = &v21[v63];
      if (v114(&v21[v63], 1, v25))
      {
        sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v111 + 32))(v64, v65, v25);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v111 + 56))(v64, 0, 1, v25);
      }
      uint64_t v67 = _s6StylesV5EmptyVMa(0);
      ((void (*)(char *, char *, uint64_t))v112)(&v64[*(int *)(v67 + 20)], &v65[*(int *)(v67 + 20)], v113);
      v64[*(int *)(v67 + 24)] = v65[*(int *)(v67 + 24)];
      uint64_t v68 = v28[14];
      uint64_t v69 = &v20[v68];
      uint64_t v70 = &v21[v68];
      if (v114(&v21[v68], 1, v25))
      {
        sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v111 + 32))(v69, v70, v25);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v111 + 56))(v69, 0, 1, v25);
      }
      uint64_t v72 = _s6StylesV5DailyVMa(0);
      ((void (*)(char *, char *, uint64_t))v112)(&v69[*(int *)(v72 + 20)], &v70[*(int *)(v72 + 20)], v113);
      v69[*(int *)(v72 + 24)] = v70[*(int *)(v72 + 24)];
      uint64_t v73 = v28[15];
      uint64_t v74 = &v20[v73];
      uint64_t v75 = &v21[v73];
      if (v114(&v21[v73], 1, v25))
      {
        sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
        uint64_t v77 = v111;
      }
      else
      {
        uint64_t v77 = v111;
        (*(void (**)(char *, char *, uint64_t))(v111 + 32))(v74, v75, v25);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v111 + 56))(v74, 0, 1, v25);
      }
      uint64_t v78 = _s6StylesV9MomentaryVMa(0);
      ((void (*)(char *, char *, uint64_t))v112)(&v74[*(int *)(v78 + 20)], &v75[*(int *)(v78 + 20)], v113);
      uint64_t v79 = v28[16];
      uint64_t v80 = &v20[v79];
      uint64_t v81 = &v21[v79];
      if (v114(&v21[v79], 1, v25))
      {
        sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v80, v81, v25);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v80, 0, 1, v25);
      }
      uint64_t v83 = _s6StylesV6HeaderVMa(0);
      ((void (*)(char *, char *, uint64_t))v112)(&v80[*(int *)(v83 + 20)], &v81[*(int *)(v83 + 20)], v113);
      uint64_t v84 = v28[17];
      uint64_t v85 = &v20[v84];
      uint64_t v86 = &v21[v84];
      if (v114(&v21[v84], 1, v25))
      {
        sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v85, v86, *(void *)(*(void *)(v87 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v85, v86, v25);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v85, 0, 1, v25);
      }
      uint64_t v88 = _s6StylesV11ChartButtonVMa(0);
      ((void (*)(char *, char *, uint64_t))v112)(&v85[*(int *)(v88 + 20)], &v86[*(int *)(v88 + 20)], v113);
      uint64_t v89 = v28[18];
      uint64_t v90 = &v20[v89];
      uint64_t v91 = &v21[v89];
      if (v114(v91, 1, v25))
      {
        sub_255F775D4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v90, v91, *(void *)(*(void *)(v92 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v90, v91, v25);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v90, 0, 1, v25);
      }
      uint64_t v93 = _s6StylesV15LogButtonFooterVMa(0);
      ((void (*)(char *, char *, uint64_t))v112)(&v90[*(int *)(v93 + 20)], &v91[*(int *)(v93 + 20)], v113);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    }
  }
  uint64_t v94 = a3[7];
  uint64_t v95 = &a1[v94];
  uint64_t v96 = &a2[v94];
  *(void *)&a1[v94] = *(void *)&a2[v94];
  swift_release();
  *((void *)v95 + 1) = *((void *)v96 + 1);
  swift_release();
  sub_255F775D4(0, &qword_269F42FC0, (uint64_t (*)(uint64_t))_s9ViewModelOMa, MEMORY[0x263F1B750]);
  if (a1 != a2)
  {
    uint64_t v98 = *(int *)(v97 + 32);
    uint64_t v99 = &v95[v98];
    uint64_t v100 = &v96[v98];
    sub_255F8818C((uint64_t)v99, (uint64_t (*)(void))_s9ViewModelOMa);
    uint64_t v101 = _s9ViewModelOMa();
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(v99, v100, *(void *)(*(void *)(v101 - 8) + 64));
    }
    else
    {
      uint64_t v102 = sub_256177DB8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32))(v99, v100, v102);
      sub_255F77638();
      *(_OWORD *)&v99[*(int *)(v103 + 48)] = *(_OWORD *)&v100[*(int *)(v103 + 48)];
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v104 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  *(_OWORD *)&a1[v104] = *(_OWORD *)&a2[v104];
  swift_release();
  *(_OWORD *)&a1[a3[10]] = *(_OWORD *)&a2[a3[10]];
  swift_release();
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  swift_release();
  *(_OWORD *)&a1[a3[12]] = *(_OWORD *)&a2[a3[12]];
  swift_release();
  uint64_t v105 = a3[13];
  uint64_t v106 = &a1[v105];
  uint64_t v107 = &a2[v105];
  *(void *)uint64_t v106 = *(void *)v107;
  *((void *)v106 + 1) = *((void *)v107 + 1);
  swift_release();
  return a1;
}

uint64_t sub_255F7C4AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255F7C4C0);
}

uint64_t sub_255F7C4C0(uint64_t a1, uint64_t a2, int *a3)
{
  sub_255F775D4(0, &qword_269F42FD0, MEMORY[0x263F18DD8], MEMORY[0x263F185D0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  sub_255F775D4(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  sub_255F775D4(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  sub_255F775D4(0, &qword_269F42FC0, (uint64_t (*)(uint64_t))_s9ViewModelOMa, MEMORY[0x263F1B750]);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  unint64_t v17 = *(void *)(a1 + a3[9]);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

uint64_t sub_255F7C72C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255F7C740);
}

void sub_255F7C740(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_255F775D4(0, &qword_269F42FD0, MEMORY[0x263F18DD8], MEMORY[0x263F185D0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    sub_255F775D4(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      sub_255F775D4(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
      if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
      {
        uint64_t v10 = v16;
        uint64_t v14 = *(void *)(v16 - 8);
        uint64_t v15 = a4[6];
      }
      else
      {
        sub_255F775D4(0, &qword_269F42FC0, (uint64_t (*)(uint64_t))_s9ViewModelOMa, MEMORY[0x263F1B750]);
        if (*(_DWORD *)(*(void *)(v17 - 8) + 84) != a3)
        {
          *(void *)(a1 + a4[9]) = (a2 - 1);
          return;
        }
        uint64_t v10 = v17;
        uint64_t v14 = *(void *)(v17 - 8);
        uint64_t v15 = a4[7];
      }
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  v11(v12, a2, a2, v10);
}

uint64_t _s16TimelineDataViewVMa()
{
  uint64_t result = qword_269F42FD8;
  if (!qword_269F42FD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_255F7C9F4()
{
  sub_255F775D4(319, &qword_269F42FB8, MEMORY[0x263F18DD8], MEMORY[0x263F185C8]);
  if (v0 <= 0x3F)
  {
    sub_255F775D4(319, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    if (v1 <= 0x3F)
    {
      sub_255F775D4(319, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
      if (v2 <= 0x3F)
      {
        sub_255F775D4(319, &qword_269F42FC0, (uint64_t (*)(uint64_t))_s9ViewModelOMa, MEMORY[0x263F1B750]);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t sub_255F7CC20()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255F7CC3C()
{
  uint64_t v0 = type metadata accessor for StateOfMindTimeline.Styles(0);
  uint64_t v1 = MEMORY[0x270FA5388](v0 - 8);
  unint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x270FA5388](v1);
  uint64_t v6 = (char *)&v10 - v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v10 - v7;
  _s16TimelineDataViewVMa();
  sub_256119CA0((uint64_t)v8);
  sub_255F8818C((uint64_t)v8, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256119CA0((uint64_t)v6);
  sub_255F8818C((uint64_t)v6, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256119CA0((uint64_t)v3);
  return sub_255F8818C((uint64_t)v3, type metadata accessor for StateOfMindTimeline.Styles);
}

double sub_255F7CD80()
{
  uint64_t v1 = _s9ViewModelOMa();
  uint64_t v2 = MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v28 - v5;
  uint64_t v7 = type metadata accessor for StateOfMindTimeline.Styles(0);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v28 - v11;
  uint64_t v13 = _s16TimelineDataViewVMa();
  sub_256119CA0((uint64_t)v12);
  sub_255F8818C((uint64_t)v12, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256119CA0((uint64_t)v10);
  sub_255F8818C((uint64_t)v10, type metadata accessor for StateOfMindTimeline.Styles);
  sub_255F775D4(0, &qword_269F42FC0, (uint64_t (*)(uint64_t))_s9ViewModelOMa, MEMORY[0x263F1B750]);
  MEMORY[0x25A2A01A0]();
  sub_255F88124((uint64_t)v6, (uint64_t)v4, (uint64_t (*)(void))_s9ViewModelOMa);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_255F77638();
      swift_bridgeObjectRelease();
      uint64_t v15 = sub_256177DB8();
      (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v4, v15);
      double v16 = 1.0;
    }
    else
    {
      uint64_t v18 = *((void *)v4 + 1);
      swift_bridgeObjectRelease();
      double v16 = (double)v18;
    }
  }
  else
  {
    sub_255F77638();
    swift_bridgeObjectRelease();
    uint64_t v17 = sub_256177DB8();
    (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v4, v17);
    double v16 = 0.0;
  }
  sub_255F8818C((uint64_t)v6, (uint64_t (*)(void))_s9ViewModelOMa);
  sub_255F7CC3C();
  double v20 = v19;
  sub_256119CA0((uint64_t)v12);
  sub_255F8818C((uint64_t)v12, type metadata accessor for StateOfMindTimeline.Styles);
  uint64_t v21 = (uint64_t *)(v0 + *(int *)(v13 + 52));
  uint64_t v22 = *v21;
  uint64_t v23 = v21[1];
  v28[1] = v22;
  v28[2] = v23;
  sub_255F8655C(0, &qword_269F432B0, MEMORY[0x263F8EF38], MEMORY[0x263F1B5D0]);
  sub_256177578();
  double v24 = 20.0 - v16 * (v20 + 10.0) + *(double *)&v28[3];
  double v25 = *(double *)(v0 + *(int *)(v13 + 32));
  sub_256119CA0((uint64_t)v12);
  sub_255F8818C((uint64_t)v12, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256119CA0((uint64_t)v10);
  sub_255F8818C((uint64_t)v10, type metadata accessor for StateOfMindTimeline.Styles);
  sub_255F7CC3C();
  return v24 + (v25 + -40.0 - v26) * 0.5;
}

uint64_t sub_255F7D14C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v187 = a2;
  uint64_t v166 = _s9LogButtonVMa();
  MEMORY[0x270FA5388](v166);
  uint64_t v171 = (uint64_t *)((char *)&v150 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_255F84464(0);
  uint64_t v169 = v4;
  MEMORY[0x270FA5388](v4);
  v180 = (char *)&v150 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F843D0();
  uint64_t v183 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v184 = (char *)&v150 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F8439C(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v186 = (uint64_t)&v150 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v182 = (char *)&v150 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v185 = (uint64_t)&v150 - v13;
  uint64_t v14 = sub_2561762D8();
  MEMORY[0x270FA5388](v14 - 8);
  v161 = (char *)&v150 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = sub_256177958();
  uint64_t v159 = *(void *)(v160 - 8);
  MEMORY[0x270FA5388](v160);
  uint64_t v158 = (char *)&v150 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = sub_256175D98();
  uint64_t v196 = *(void *)(v189 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v189);
  uint64_t v157 = (char *)&v150 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  unint64_t v188 = (unint64_t)&v150 - v19;
  v178 = (char *)sub_256176EE8();
  uint64_t v152 = *((void *)v178 - 1);
  MEMORY[0x270FA5388](v178);
  uint64_t v150 = (char *)&v150 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v198 = _s9ViewModelOMa();
  uint64_t v21 = MEMORY[0x270FA5388](v198);
  v167 = (char *)&v150 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  unsigned int v168 = (char *)&v150 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v165 = (uint64_t)&v150 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v193 = (uint64_t)&v150 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v163 = (uint64_t)&v150 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v164 = (char *)&v150 - v32;
  MEMORY[0x270FA5388](v31);
  uint64_t v34 = (char *)&v150 - v33;
  sub_255F7285C();
  uint64_t v190 = v35;
  MEMORY[0x270FA5388](v35);
  uint64_t v156 = (char *)&v150 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F84368(0);
  uint64_t v38 = MEMORY[0x270FA5388](v37 - 8);
  uint64_t v181 = (uint64_t)&v150 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  v162 = (char *)&v150 - v41;
  MEMORY[0x270FA5388](v40);
  uint64_t v195 = (uint64_t)&v150 - v42;
  uint64_t v43 = type metadata accessor for StateOfMindTimeline.Styles(0);
  uint64_t v44 = MEMORY[0x270FA5388](v43 - 8);
  uint64_t v46 = (char *)&v150 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v44);
  uint64_t v48 = (char *)&v150 - v47;
  uint64_t v49 = (int *)_s16TimelineDataViewVMa();
  uint64_t v50 = a1 + v49[6];
  sub_256119CA0((uint64_t)v48);
  sub_255F8818C((uint64_t)v48, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256119CA0((uint64_t)v46);
  sub_255F8818C((uint64_t)v46, type metadata accessor for StateOfMindTimeline.Styles);
  uint64_t v51 = v49[8];
  v191 = v49;
  uint64_t v170 = v51;
  sub_256119CA0((uint64_t)v48);
  sub_255F8818C((uint64_t)v48, type metadata accessor for StateOfMindTimeline.Styles);
  uint64_t v194 = v50;
  sub_256119CA0((uint64_t)v46);
  unsigned int v179 = v46;
  v151 = type metadata accessor for StateOfMindTimeline.Styles;
  sub_255F8818C((uint64_t)v46, type metadata accessor for StateOfMindTimeline.Styles);
  uint64_t v197 = a1;
  sub_255F7CC3C();
  sub_2561778E8();
  sub_256175F38();
  uint64_t v177 = v199;
  int v176 = v200;
  uint64_t v175 = v201;
  int v174 = v202;
  uint64_t v173 = v203;
  uint64_t v172 = v204;
  uint64_t v155 = a1 + v49[7];
  sub_255F775D4(0, &qword_269F42FC0, (uint64_t (*)(uint64_t))_s9ViewModelOMa, MEMORY[0x263F1B750]);
  uint64_t v154 = v52;
  uint64_t v192 = v34;
  MEMORY[0x25A2A01A0]();
  uint64_t v53 = sub_2560F6F58();
  uint64_t v55 = v54;
  uint64_t v153 = _s9ViewModelOMa;
  sub_255F8818C((uint64_t)v34, (uint64_t (*)(void))_s9ViewModelOMa);
  uint64_t v205 = (void *)v53;
  uint64_t v206 = v55;
  sub_255F5CE90();
  uint64_t v56 = sub_256177028();
  uint64_t v58 = v57;
  LOBYTE(a1) = v59 & 1;
  sub_256119CA0((uint64_t)v48);
  sub_255F8818C((uint64_t)v48, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256176EC8();
  uint64_t v60 = v152;
  uint64_t v61 = v150;
  uint64_t v62 = (uint64_t)v178;
  (*(void (**)(char *, void, char *))(v152 + 104))(v150, *MEMORY[0x263F1A680], v178);
  sub_256176F08();
  swift_release();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v62);
  uint64_t v63 = sub_256176FD8();
  uint64_t v65 = v64;
  LOBYTE(v6__isPlatformVersionAtLeast(2, 18, 1, 0) = v66 & 1;
  sub_255F67B2C(v56, v58, a1);
  swift_release();
  swift_bridgeObjectRelease();
  sub_256119CA0((uint64_t)v48);
  v178 = v48;
  sub_255F8818C((uint64_t)v48, v151);
  sub_256176E88();
  uint64_t v67 = sub_256176F88();
  uint64_t v69 = v68;
  uint64_t v71 = v70;
  char v73 = v72 & 1;
  sub_255F67B2C(v63, v65, v60);
  swift_bridgeObjectRelease();
  sub_25611A114(v188);
  uint64_t v74 = v196;
  uint64_t v75 = v157;
  uint64_t v76 = v189;
  (*(void (**)(char *, void, uint64_t))(v196 + 104))(v157, *MEMORY[0x263F18508], v189);
  LOBYTE(v6__isPlatformVersionAtLeast(2, 18, 1, 0) = sub_256175D88();
  uint64_t v77 = *(void (**)(char *, uint64_t))(v74 + 8);
  uint64_t v196 = v74 + 8;
  v77(v75, v76);
  uint64_t v78 = v159;
  uint64_t v79 = (unsigned int *)MEMORY[0x263F1B950];
  if ((v60 & 1) == 0) {
    uint64_t v79 = (unsigned int *)MEMORY[0x263F1B968];
  }
  uint64_t v80 = v158;
  uint64_t v81 = v160;
  (*(void (**)(char *, void, uint64_t))(v159 + 104))(v158, *v79, v160);
  uint64_t v82 = v78;
  uint64_t v83 = *(void (**)(char *, char *, uint64_t))(v78 + 16);
  uint64_t v84 = (uint64_t)v161;
  v83(v161, v80, v81);
  uint64_t v85 = (uint64_t)v156;
  sub_255F88124(v84, (uint64_t)&v156[*(int *)(v190 + 36)], MEMORY[0x263F190D8]);
  *(void *)uint64_t v85 = v67;
  *(void *)(v85 + 8) = v69;
  *(unsigned char *)(v85 + 16) = v73;
  *(void *)(v85 + 24) = v71;
  sub_255F67B94(v67, v69, v73);
  swift_bridgeObjectRetain();
  sub_255F8818C(v84, MEMORY[0x263F190D8]);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v80, v81);
  v77((char *)v188, v189);
  sub_255F67B2C(v67, v69, v73);
  swift_bridgeObjectRelease();
  uint64_t v86 = (uint64_t)v192;
  uint64_t v87 = v154;
  MEMORY[0x25A2A01A0]();
  sub_255F8818C(v86, (uint64_t (*)(void))v153);
  uint64_t v88 = qword_2704B57B0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v88 = sub_256095C94(0, qword_2704B57C0 + 1, 1, qword_2704B57B0);
  }
  unint64_t v90 = v88[2];
  unint64_t v89 = v88[3];
  if (v90 >= v89 >> 1) {
    uint64_t v88 = sub_256095C94((void *)(v89 > 1), v90 + 1, 1, v88);
  }
  uint64_t v91 = v183;
  uint64_t v92 = v171;
  v88[2] = v90 + 1;
  uint64_t v93 = &v88[2 * v90];
  v93[4] = 0x6562614C65746144;
  v93[5] = 0xE90000000000006CLL;
  uint64_t v205 = &unk_2704B5358;
  uint64_t v94 = swift_bridgeObjectRetain();
  sub_255FCD3A4(v94);
  sub_255F8655C(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  uint64_t v96 = v95;
  unint64_t v97 = sub_255F744D8();
  uint64_t v189 = v96;
  unint64_t v188 = v97;
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_255F74810();
  uint64_t v98 = (uint64_t)v162;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_255F8818C(v85, (uint64_t (*)(void))sub_255F7285C);
  sub_255F880BC(v98, v195, (uint64_t (*)(void))sub_255F84368);
  uint64_t v99 = (uint64_t)v164;
  MEMORY[0x25A2A01A0](v87);
  uint64_t v100 = v163;
  sub_255F88124(v99, v163, (uint64_t (*)(void))_s9ViewModelOMa);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    uint64_t v102 = (uint64_t)v184;
    if (EnumCaseMultiPayload == 1)
    {
      sub_255F77638();
      swift_bridgeObjectRelease();
      uint64_t v103 = sub_256177DB8();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v103 - 8) + 8))(v100, v103);
      uint64_t v196 = 0;
    }
    else
    {
      sub_255F8818C(v100, (uint64_t (*)(void))_s9ViewModelOMa);
      uint64_t v196 = 0x4030000000000000;
    }
  }
  else
  {
    sub_255F77638();
    swift_bridgeObjectRelease();
    uint64_t v104 = sub_256177DB8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v104 - 8) + 8))(v100, v104);
    uint64_t v196 = 0;
    uint64_t v102 = (uint64_t)v184;
  }
  sub_255F8818C(v99, (uint64_t (*)(void))_s9ViewModelOMa);
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v105 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v106 = sub_2561755B8();
  uint64_t v108 = v107;
  swift_bridgeObjectRelease();

  uint64_t v109 = (uint64_t *)(v197 + v191[9]);
  uint64_t v111 = *v109;
  uint64_t v110 = v109[1];
  *uint64_t v92 = swift_getKeyPath();
  sub_255F775D4(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  uint64_t v112 = v166;
  uint64_t v113 = (uint64_t *)((char *)v92 + *(int *)(v166 + 20));
  *uint64_t v113 = v106;
  v113[1] = v108;
  char v114 = (uint64_t *)((char *)v92 + *(int *)(v112 + 24));
  *char v114 = v111;
  v114[1] = v110;
  swift_retain();
  uint64_t v115 = v193;
  MEMORY[0x25A2A01A0](v87);
  uint64_t v116 = v165;
  sub_255F88124(v115, v165, (uint64_t (*)(void))_s9ViewModelOMa);
  int v117 = swift_getEnumCaseMultiPayload();
  if (v117)
  {
    uint64_t v118 = (uint64_t)v180;
    uint64_t v119 = (uint64_t)v168;
    uint64_t v120 = (uint64_t)v167;
    if (v117 == 1)
    {
      sub_255F77638();
      swift_bridgeObjectRelease();
      uint64_t v121 = sub_256177DB8();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v121 - 8) + 8))(v116, v121);
      double v122 = 0.0;
    }
    else
    {
      sub_255F8818C(v116, (uint64_t (*)(void))_s9ViewModelOMa);
      double v122 = 1.0;
    }
  }
  else
  {
    sub_255F77638();
    swift_bridgeObjectRelease();
    uint64_t v123 = sub_256177DB8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v123 - 8) + 8))(v116, v123);
    double v122 = 0.0;
    uint64_t v118 = (uint64_t)v180;
    uint64_t v119 = (uint64_t)v168;
    uint64_t v120 = (uint64_t)v167;
  }
  sub_255F8818C(v193, (uint64_t (*)(void))_s9ViewModelOMa);
  sub_255F88124((uint64_t)v92, v118, (uint64_t (*)(void))_s9LogButtonVMa);
  *(double *)(v118 + *(int *)(v169 + 36)) = v122;
  sub_255F8818C((uint64_t)v92, (uint64_t (*)(void))_s9LogButtonVMa);
  MEMORY[0x25A2A01A0](v87);
  sub_255F88124(v119, v120, (uint64_t (*)(void))_s9ViewModelOMa);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    sub_255F8818C(v120, (uint64_t (*)(void))_s9ViewModelOMa);
    char v125 = 1;
  }
  else
  {
    sub_255F77638();
    swift_bridgeObjectRelease();
    uint64_t v124 = sub_256177DB8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v124 - 8) + 8))(v120, v124);
    char v125 = 0;
  }
  sub_255F8818C(v119, (uint64_t (*)(void))_s9ViewModelOMa);
  sub_255F88124(v118, v102, (uint64_t (*)(void))sub_255F84464);
  uint64_t v126 = v102 + *(int *)(v91 + 36);
  *(void *)uint64_t v126 = 0;
  *(unsigned char *)(v126 + 8) = v125;
  sub_255F8818C(v118, (uint64_t (*)(void))sub_255F84464);
  uint64_t v127 = (uint64_t)v192;
  MEMORY[0x25A2A01A0](v87);
  sub_255F8818C(v127, (uint64_t (*)(void))_s9ViewModelOMa);
  uint64_t v128 = qword_2704B57E0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v128 = sub_256095C94(0, qword_2704B57F0 + 1, 1, qword_2704B57E0);
  }
  unint64_t v130 = v128[2];
  unint64_t v129 = v128[3];
  if (v130 >= v129 >> 1) {
    uint64_t v128 = sub_256095C94((void *)(v129 > 1), v130 + 1, 1, v128);
  }
  v128[2] = v130 + 1;
  uint64_t v131 = &v128[2 * v130];
  v131[4] = 0x6F74747542676F4CLL;
  v131[5] = 0xE90000000000006ELL;
  uint64_t v205 = &unk_2704B5358;
  uint64_t v132 = swift_bridgeObjectRetain();
  sub_255FCD3A4(v132);
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_255F87F08();
  uint64_t v133 = (uint64_t)v182;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_255F8818C(v102, (uint64_t (*)(void))sub_255F843D0);
  uint64_t v134 = v185;
  sub_255F880BC(v133, v185, (uint64_t (*)(void))sub_255F8439C);
  uint64_t v135 = (uint64_t)v178;
  sub_256119CA0((uint64_t)v178);
  sub_255F8818C(v135, type metadata accessor for StateOfMindTimeline.Styles);
  uint64_t v136 = (uint64_t)v179;
  sub_256119CA0((uint64_t)v179);
  sub_255F8818C(v136, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256119CA0(v135);
  sub_255F8818C(v135, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256119CA0(v136);
  sub_255F8818C(v136, type metadata accessor for StateOfMindTimeline.Styles);
  sub_255F7CC3C();
  sub_2561778E8();
  sub_256175F38();
  uint64_t v198 = (uint64_t)v205;
  LODWORD(v197) = v206;
  uint64_t v194 = v207;
  char v137 = v208;
  uint64_t v138 = v209;
  uint64_t v193 = v210;
  uint64_t v139 = v195;
  uint64_t v140 = v181;
  sub_255F88124(v195, v181, (uint64_t (*)(void))sub_255F84368);
  uint64_t v141 = v186;
  sub_255F88124(v134, v186, (uint64_t (*)(void))sub_255F8439C);
  long long v142 = v187;
  *uint64_t v187 = 0;
  *((unsigned char *)v142 + 8) = 1;
  v142[2] = v177;
  *((unsigned char *)v142 + 24) = v176;
  v142[4] = v175;
  *((unsigned char *)v142 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v174;
  uint64_t v143 = v172;
  v142[6] = v173;
  v142[7] = v143;
  sub_255F842A4();
  long long v145 = v144;
  sub_255F88124(v140, (uint64_t)v142 + v144[12], (uint64_t (*)(void))sub_255F84368);
  long long v146 = (char *)v142 + v145[16];
  *(void *)long long v146 = v196;
  v146[8] = 0;
  sub_255F88124(v141, (uint64_t)v142 + v145[20], (uint64_t (*)(void))sub_255F8439C);
  long long v147 = (char *)v142 + v145[24];
  *(void *)long long v147 = 0;
  v147[8] = 1;
  *((void *)v147 + 2) = v198;
  v147[24] = v197;
  *((void *)v147 + 4) = v194;
  v147[40] = v137;
  uint64_t v148 = v193;
  *((void *)v147 + 6) = v138;
  *((void *)v147 + 7) = v148;
  sub_255F8818C(v134, (uint64_t (*)(void))sub_255F8439C);
  sub_255F8818C(v139, (uint64_t (*)(void))sub_255F84368);
  sub_255F8818C(v141, (uint64_t (*)(void))sub_255F8439C);
  return sub_255F8818C(v140, (uint64_t (*)(void))sub_255F84368);
}

uint64_t sub_255F7E88C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v2 = _s9ViewModelOMa();
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v8 = (char *)v34 - v7;
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)v34 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v34 - v12;
  sub_255F859E8();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F859C0(0);
  v34[0] = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F85998(0);
  uint64_t v35 = v20;
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v16 = sub_256176648();
  *((void *)v16 + 1) = 0;
  v16[16] = 0;
  sub_255F860A0(0, &qword_269F432B8, &qword_269F43230, (uint64_t (*)(uint64_t))sub_255F85A9C);
  sub_255F7EDD8(v1, &v16[*(int *)(v23 + 44)]);
  _s16TimelineDataViewVMa();
  sub_255F775D4(0, &qword_269F42FC0, (uint64_t (*)(uint64_t))_s9ViewModelOMa, MEMORY[0x263F1B750]);
  uint64_t v25 = v24;
  MEMORY[0x25A2A01A0]();
  sub_255F88124((uint64_t)v13, (uint64_t)v11, (uint64_t (*)(void))_s9ViewModelOMa);
  v34[1] = v2;
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    sub_255F8818C((uint64_t)v11, (uint64_t (*)(void))_s9ViewModelOMa);
  }
  else
  {
    sub_255F77638();
    swift_bridgeObjectRelease();
    uint64_t v26 = sub_256177DB8();
    (*(void (**)(char *, uint64_t))(*(void *)(v26 - 8) + 8))(v11, v26);
  }
  sub_255F8818C((uint64_t)v13, (uint64_t (*)(void))_s9ViewModelOMa);
  sub_2561778E8();
  sub_256175F38();
  sub_255F88124((uint64_t)v16, (uint64_t)v19, (uint64_t (*)(void))sub_255F859E8);
  uint64_t v27 = &v19[*(int *)(v34[0] + 36)];
  long long v28 = v38;
  *(_OWORD *)uint64_t v27 = v37;
  *((_OWORD *)v27 + 1) = v28;
  *((_OWORD *)v27 + 2) = v39;
  sub_255F8818C((uint64_t)v16, (uint64_t (*)(void))sub_255F859E8);
  MEMORY[0x25A2A01A0](v25);
  sub_255F88124((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(void))_s9ViewModelOMa);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    sub_255F8818C((uint64_t)v5, (uint64_t (*)(void))_s9ViewModelOMa);
    double v30 = 1.0;
  }
  else
  {
    sub_255F77638();
    swift_bridgeObjectRelease();
    uint64_t v29 = sub_256177DB8();
    (*(void (**)(char *, uint64_t))(*(void *)(v29 - 8) + 8))(v5, v29);
    double v30 = 0.0;
  }
  sub_255F8818C((uint64_t)v8, (uint64_t (*)(void))_s9ViewModelOMa);
  sub_255F88124((uint64_t)v19, (uint64_t)v22, (uint64_t (*)(void))sub_255F859C0);
  *(double *)&v22[*(int *)(v35 + 36)] = v30;
  sub_255F8818C((uint64_t)v19, (uint64_t (*)(void))sub_255F859C0);
  uint64_t v31 = sub_2561778E8();
  sub_256116368(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v36, 0.0, 1, 0.0, 1, v31, v32);
  return sub_255F8818C((uint64_t)v22, (uint64_t (*)(void))sub_255F85998);
}

uint64_t sub_255F7EDD8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  v75[1] = a1;
  unint64_t v97 = a2;
  uint64_t v2 = _s9ViewModelOMa();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v86 = (char *)v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_2561762B8() - 8;
  MEMORY[0x270FA5388](v83);
  uint64_t v82 = (char *)v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F85EA4(0);
  uint64_t v85 = v5 - 8;
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v84 = (uint64_t)v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F85CA8();
  uint64_t v81 = v7;
  uint64_t v80 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F85C1C(0);
  uint64_t v79 = v10 - 8;
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v77 = (char *)v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F85B70();
  uint64_t v98 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v76 = (char *)v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F85B3C(0);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v96 = (uint64_t)v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v94 = (char *)v75 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v95 = (uint64_t)v75 - v19;
  uint64_t v20 = type metadata accessor for StateOfMindTimeline.Styles(0);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v23 = (char *)v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)v75 - v24;
  uint64_t v26 = _s16TimelineDataViewVMa();
  sub_256119CA0((uint64_t)v25);
  sub_255F8818C((uint64_t)v25, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256119CA0((uint64_t)v23);
  sub_255F8818C((uint64_t)v23, type metadata accessor for StateOfMindTimeline.Styles);
  uint64_t v27 = *(int *)(v26 + 32);
  uint64_t v78 = v26;
  uint64_t v87 = v27;
  sub_256119CA0((uint64_t)v25);
  sub_255F8818C((uint64_t)v25, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256119CA0((uint64_t)v23);
  sub_255F8818C((uint64_t)v23, type metadata accessor for StateOfMindTimeline.Styles);
  sub_255F7CC3C();
  sub_2561778E8();
  sub_256175F38();
  uint64_t v93 = v99;
  int v92 = v100;
  uint64_t v91 = v101;
  int v90 = v102;
  uint64_t v89 = v103;
  uint64_t v88 = v104;
  sub_255F85D38(0, (unint64_t *)&qword_269F43260, MEMORY[0x263F1A830], MEMORY[0x263F19110], MEMORY[0x263F18E28]);
  sub_255F85D88();
  swift_retain();
  uint64_t v28 = (uint64_t)v76;
  sub_2561775C8();
  char v29 = sub_256176D88();
  uint64_t v30 = v80;
  uint64_t v31 = (uint64_t)v77;
  uint64_t v32 = v81;
  (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v77, v9, v81);
  uint64_t v33 = v31 + *(int *)(v79 + 44);
  *(unsigned char *)uint64_t v33 = v29;
  *(_OWORD *)(v33 + 8) = 0u;
  *(_OWORD *)(v33 + 24) = 0u;
  *(unsigned char *)(v33 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 1;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v32);
  sub_256119CA0((uint64_t)v25);
  sub_255F8818C((uint64_t)v25, type metadata accessor for StateOfMindTimeline.Styles);
  uint64_t v34 = v82;
  uint64_t v35 = &v82[*(int *)(v83 + 28)];
  uint64_t v36 = *MEMORY[0x263F19860];
  uint64_t v37 = sub_2561766E8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 104))(v35, v36, v37);
  __asm { FMOV            V0.2D, #18.0 }
  *uint64_t v34 = _Q0;
  sub_256119CA0((uint64_t)v23);
  sub_255F8818C((uint64_t)v23, type metadata accessor for StateOfMindTimeline.Styles);
  id v43 = objc_msgSend(self, sel_systemGray5Color);
  uint64_t v44 = MEMORY[0x25A29FF60](v43);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v46 = v84;
  sub_255F88124((uint64_t)v34, v84, MEMORY[0x263F19048]);
  uint64_t v47 = (uint64_t *)(v46 + *(int *)(v85 + 44));
  uint64_t *v47 = KeyPath;
  v47[1] = v44;
  sub_255F8818C((uint64_t)v34, MEMORY[0x263F19048]);
  uint64_t v48 = sub_2561778E8();
  uint64_t v50 = v49;
  uint64_t v51 = v28 + v98[9];
  sub_255F88124(v46, v51, (uint64_t (*)(void))sub_255F85EA4);
  sub_255F85E24(0, (unint64_t *)&qword_269F43270, (uint64_t (*)(uint64_t))sub_255F85EA4, (uint64_t (*)(void))sub_255F85FC8, MEMORY[0x263F19B10]);
  uint64_t v53 = (uint64_t *)(v51 + *(int *)(v52 + 36));
  uint64_t *v53 = v48;
  v53[1] = v50;
  sub_255F88124(v31, v28, (uint64_t (*)(void))sub_255F85C1C);
  sub_255F8818C(v46, (uint64_t (*)(void))sub_255F85EA4);
  sub_255F8818C(v31, (uint64_t (*)(void))sub_255F85C1C);
  sub_255F775D4(0, &qword_269F42FC0, (uint64_t (*)(uint64_t))_s9ViewModelOMa, MEMORY[0x263F1B750]);
  uint64_t v54 = (uint64_t)v86;
  MEMORY[0x25A2A01A0]();
  sub_255F8818C(v54, (uint64_t (*)(void))_s9ViewModelOMa);
  uint64_t v55 = qword_2704B5810;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v55 = sub_256095C94(0, qword_2704B5820 + 1, 1, qword_2704B5810);
  }
  unint64_t v57 = v55[2];
  unint64_t v56 = v55[3];
  if (v57 >= v56 >> 1) {
    uint64_t v55 = sub_256095C94((void *)(v56 > 1), v57 + 1, 1, v55);
  }
  v55[2] = v57 + 1;
  uint64_t v58 = &v55[2 * v57];
  v58[4] = 0x7475427472616843;
  v58[5] = 0xEB000000006E6F74;
  id v105 = (int *)&unk_2704B5358;
  uint64_t v59 = swift_bridgeObjectRetain();
  sub_255FCD3A4(v59);
  sub_255F8655C(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_255F865A8();
  uint64_t v60 = v94;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_255F8818C(v28, (uint64_t (*)(void))sub_255F85B70);
  uint64_t v61 = (uint64_t)v60;
  uint64_t v62 = v95;
  sub_255F880BC(v61, v95, (uint64_t (*)(void))sub_255F85B3C);
  sub_256119CA0((uint64_t)v25);
  sub_255F8818C((uint64_t)v25, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256119CA0((uint64_t)v23);
  sub_255F8818C((uint64_t)v23, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256119CA0((uint64_t)v25);
  sub_255F8818C((uint64_t)v25, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256119CA0((uint64_t)v23);
  sub_255F8818C((uint64_t)v23, type metadata accessor for StateOfMindTimeline.Styles);
  sub_255F7CC3C();
  sub_2561778E8();
  sub_256175F38();
  uint64_t v98 = v105;
  char v63 = v106;
  uint64_t v64 = v107;
  char v65 = v108;
  uint64_t v66 = v109;
  uint64_t v67 = v110;
  uint64_t v68 = v96;
  sub_255F88124(v62, v96, (uint64_t (*)(void))sub_255F85B3C);
  uint64_t v69 = v97;
  void *v97 = 0;
  *((unsigned char *)v69 + 8) = 1;
  v69[2] = v93;
  *((unsigned char *)v69 + 24) = v92;
  v69[4] = v91;
  *((unsigned char *)v69 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v90;
  uint64_t v70 = v88;
  v69[6] = v89;
  v69[7] = v70;
  sub_255F85A9C();
  uint64_t v72 = v71;
  sub_255F88124(v68, (uint64_t)v69 + *(int *)(v71 + 48), (uint64_t (*)(void))sub_255F85B3C);
  char v73 = (char *)v69 + *(int *)(v72 + 64);
  *(void *)char v73 = 0;
  v73[8] = 1;
  *((void *)v73 + 2) = v98;
  v73[24] = v63;
  *((void *)v73 + 4) = v64;
  v73[40] = v65;
  *((void *)v73 + 6) = v66;
  *((void *)v73 + 7) = v67;
  sub_255F8818C(v62, (uint64_t (*)(void))sub_255F85B3C);
  return sub_255F8818C(v68, (uint64_t (*)(void))sub_255F85B3C);
}

__n128 sub_255F7F964@<Q0>(uint64_t a1@<X8>)
{
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v2 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_2561755B8();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();

  *(void *)&v18[0] = v3;
  *((void *)&v18[0] + 1) = v5;
  sub_255F5CE90();
  uint64_t v6 = sub_256177028();
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  LOBYTE(v5) = v11 & 1;
  uint64_t v12 = sub_2561778E8();
  sub_2561163D8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v18, 0.0, 1, 0.0, 1, v12, v13, v6, v8, v5, v10);
  sub_255F67B2C(v6, v8, v5);
  swift_bridgeObjectRelease();
  long long v14 = v18[7];
  *(_OWORD *)(a1 + 96) = v18[6];
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 128) = v18[8];
  long long v15 = v18[3];
  *(_OWORD *)(a1 + 32) = v18[2];
  *(_OWORD *)(a1 + 48) = v15;
  long long v16 = v18[5];
  *(_OWORD *)(a1 + 64) = v18[4];
  *(_OWORD *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v16;
  __n128 result = (__n128)v18[1];
  *(_OWORD *)a1 = v18[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_255F7FB00@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v132 = a2;
  uint64_t v4 = sub_256176BB8();
  uint64_t v130 = *(void *)(v4 - 8);
  uint64_t v131 = v4;
  MEMORY[0x270FA5388](v4);
  unint64_t v129 = (char *)&v98 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = _s16TimelineDataViewVMa();
  uint64_t v123 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v124 = v7;
  uint64_t v125 = (uint64_t)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StateOfMindTimeline.Styles(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v110 = (uint64_t)&v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v107 = (uint64_t)&v98 - v11;
  uint64_t v12 = _s9ViewModelOMa();
  MEMORY[0x270FA5388](v12 - 8);
  long long v14 = (char *)&v98 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = type metadata accessor for StateOfMindTimeline.DaySummary();
  uint64_t v120 = *(void *)(v128 - 8);
  MEMORY[0x270FA5388](v128);
  uint64_t v121 = v15;
  long long v16 = (char *)&v98 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = _s16EntryLimitedViewVMa();
  uint64_t v18 = v17 - 8;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (uint64_t *)((char *)&v98 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_255F84D50();
  uint64_t v111 = (char *)(v21 - 8);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v23 = (char *)&v98 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F84D28(0);
  uint64_t v98 = v24;
  MEMORY[0x270FA5388](v24);
  uint64_t v104 = (uint64_t)&v98 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F84D00(0);
  uint64_t v100 = v26;
  MEMORY[0x270FA5388](v26);
  uint64_t v108 = (uint64_t)&v98 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F84CD8(0);
  uint64_t v103 = v28;
  MEMORY[0x270FA5388](v28);
  uint64_t v109 = (uint64_t)&v98 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F84CB0(0);
  char v114 = v30;
  MEMORY[0x270FA5388](v30);
  uint64_t v112 = (uint64_t)&v98 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F84BF4();
  uint64_t v118 = v32;
  uint64_t v115 = *((void *)v32 - 1);
  MEMORY[0x270FA5388](v32);
  uint64_t v113 = (char *)&v98 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F84B00();
  uint64_t v119 = v34;
  uint64_t v117 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v116 = (char *)&v98 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F84ACC(0);
  uint64_t v126 = v36;
  MEMORY[0x270FA5388](v36);
  uint64_t v127 = (char *)&v98 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F88124((uint64_t)a1, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.DaySummary);
  long long v38 = (uint64_t *)(v2 + *(int *)(v6 + 40));
  uint64_t v39 = *v38;
  uint64_t v40 = v38[1];
  *uint64_t v20 = swift_getKeyPath();
  sub_255F775D4(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  uint64_t v41 = (uint64_t)v20 + *(int *)(v18 + 28);
  double v122 = v16;
  sub_255F880BC((uint64_t)v16, v41, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.DaySummary);
  uint64_t v42 = (uint64_t *)((char *)v20 + *(int *)(v18 + 32));
  void *v42 = v39;
  v42[1] = v40;
  uint64_t v105 = v6;
  uint64_t v43 = *(int *)(v6 + 28);
  uint64_t v101 = v2;
  uint64_t v44 = v2 + v43;
  sub_255F775D4(0, &qword_269F42FC0, (uint64_t (*)(uint64_t))_s9ViewModelOMa, MEMORY[0x263F1B750]);
  uint64_t v46 = v45;
  swift_retain();
  MEMORY[0x25A2A01A0](v46);
  uint64_t v47 = a1;
  BOOL v48 = sub_2560F7160(a1);
  sub_255F8818C((uint64_t)v14, (uint64_t (*)(void))_s9ViewModelOMa);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v50 = swift_allocObject();
  *(unsigned char *)(v50 + 16) = !v48;
  sub_255F88124((uint64_t)v20, (uint64_t)v23, (uint64_t (*)(void))_s16EntryLimitedViewVMa);
  uint64_t v51 = *((int *)v111 + 11);
  uint64_t v99 = v23;
  uint64_t v52 = (uint64_t *)&v23[v51];
  *uint64_t v52 = KeyPath;
  uint64_t v53 = v47;
  v52[1] = (uint64_t)sub_255F87384;
  v52[2] = v50;
  sub_255F8818C((uint64_t)v20, (uint64_t (*)(void))_s16EntryLimitedViewVMa);
  uint64_t v102 = v46;
  uint64_t v106 = v44;
  MEMORY[0x25A2A01A0](v46);
  LOBYTE(v5__isPlatformVersionAtLeast(2, 18, 1, 0) = sub_2560F7160(v47);
  uint64_t v111 = v14;
  sub_255F8818C((uint64_t)v14, (uint64_t (*)(void))_s9ViewModelOMa);
  if (v50)
  {
    uint64_t v54 = v101;
    uint64_t v55 = v107;
    sub_256119CA0(v107);
    sub_255F8818C(v55, type metadata accessor for StateOfMindTimeline.Styles);
    sub_256177468();
    uint64_t v56 = sub_256177498();
    swift_release();
  }
  else
  {
    uint64_t v56 = sub_256177478();
    uint64_t v54 = v101;
    uint64_t v55 = v107;
  }
  sub_256119CA0(v55);
  sub_255F8818C(v55, type metadata accessor for StateOfMindTimeline.Styles);
  uint64_t v57 = (uint64_t)v99;
  uint64_t v58 = v104;
  sub_255F88124((uint64_t)v99, v104, (uint64_t (*)(void))sub_255F84D50);
  uint64_t v59 = (uint64_t *)(v58 + *(int *)(v98 + 36));
  uint64_t *v59 = v56;
  v59[1] = 0x4028000000000000;
  v59[2] = 0;
  v59[3] = 0;
  sub_255F8818C(v57, (uint64_t (*)(void))sub_255F84D50);
  double v60 = fabs(sub_255F83D28(v53));
  uint64_t v61 = v110;
  sub_256119CA0(v110);
  sub_255F8818C(v61, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256119CA0(v55);
  sub_255F8818C(v55, type metadata accessor for StateOfMindTimeline.Styles);
  if (v60 <= 1.0) {
    double v62 = v60 * -0.2 + 1.0;
  }
  else {
    double v62 = 0.8;
  }
  sub_2561779D8();
  uint64_t v64 = v63;
  uint64_t v66 = v65;
  uint64_t v67 = v108;
  sub_255F88124(v58, v108, (uint64_t (*)(void))sub_255F84D28);
  uint64_t v68 = v67 + *(int *)(v100 + 36);
  *(double *)uint64_t v68 = v62;
  *(double *)(v68 + 8) = v62;
  *(void *)(v68 + 16) = v64;
  *(void *)(v68 + 24) = v66;
  sub_255F8818C(v58, (uint64_t (*)(void))sub_255F84D28);
  double v69 = sub_255F809D0(v53);
  uint64_t v71 = v70;
  uint64_t v72 = v109;
  sub_255F88124(v67, v109, (uint64_t (*)(void))sub_255F84D00);
  char v73 = (double *)(v72 + *(int *)(v103 + 36));
  double *v73 = v69;
  *((void *)v73 + 1) = v71;
  sub_255F8818C(v67, (uint64_t (*)(void))sub_255F84D00);
  sub_255F80B38(v53);
  uint64_t v75 = v74;
  uint64_t v76 = v112;
  sub_255F88124(v72, v112, (uint64_t (*)(void))sub_255F84CD8);
  uint64_t v77 = v114;
  *(void *)(v76 + v114[9]) = v75;
  sub_255F8818C(v72, (uint64_t (*)(void))sub_255F84CD8);
  uint64_t v78 = v125;
  sub_255F88124(v54, v125, (uint64_t (*)(void))_s16TimelineDataViewVMa);
  uint64_t v79 = (uint64_t)v122;
  sub_255F88124((uint64_t)v53, (uint64_t)v122, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.DaySummary);
  unint64_t v80 = (*(unsigned __int8 *)(v123 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80);
  unint64_t v81 = (v124 + *(unsigned __int8 *)(v120 + 80) + v80) & ~(unint64_t)*(unsigned __int8 *)(v120 + 80);
  uint64_t v82 = swift_allocObject();
  sub_255F880BC(v78, v82 + v80, (uint64_t (*)(void))_s16TimelineDataViewVMa);
  sub_255F880BC(v79, v82 + v81, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.DaySummary);
  uint64_t v83 = sub_255F87FB8(&qword_269F43118, sub_255F84CB0, (void (*)(void))sub_255F84DDC);
  uint64_t v84 = v113;
  sub_2561770E8();
  swift_release();
  sub_255F8818C(v76, (uint64_t (*)(void))sub_255F84CB0);
  uint64_t v85 = v129;
  sub_256176BA8();
  uint64_t v133 = v77;
  uint64_t v134 = v83;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v87 = v116;
  uint64_t v88 = v118;
  sub_256177208();
  (*(void (**)(char *, uint64_t))(v130 + 8))(v85, v131);
  (*(void (**)(char *, int *))(v115 + 8))(v84, v88);
  uint64_t v89 = (uint64_t)v111;
  MEMORY[0x25A2A01A0](v102);
  sub_2560F7160(v53);
  sub_255F8818C(v89, (uint64_t (*)(void))_s9ViewModelOMa);
  uint64_t v133 = v88;
  uint64_t v134 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v90 = (uint64_t)v127;
  uint64_t v91 = v119;
  sub_2561771E8();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v87, v91);
  int v92 = *(void **)((char *)v53 + *(int *)(v128 + 36));
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v92 = sub_256095C94(0, v92[2] + 1, 1, v92);
  }
  unint64_t v94 = v92[2];
  unint64_t v93 = v92[3];
  if (v94 >= v93 >> 1) {
    int v92 = sub_256095C94((void *)(v93 > 1), v94 + 1, 1, v92);
  }
  v92[2] = v94 + 1;
  uint64_t v95 = &v92[2 * v94];
  v95[4] = 1685217603;
  v95[5] = 0xE400000000000000;
  uint64_t v133 = (int *)&unk_2704B5358;
  uint64_t v96 = swift_bridgeObjectRetain();
  sub_255FCD3A4(v96);
  sub_255F8655C(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_255F857A0();
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_255F8818C(v90, (uint64_t (*)(void))sub_255F84ACC);
}

double sub_255F809D0(uint64_t *a1)
{
  uint64_t v2 = type metadata accessor for StateOfMindTimeline.Styles(0);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v16 - v6;
  double v8 = sub_255F83D28(a1);
  double v9 = fabs(v8);
  _s16TimelineDataViewVMa();
  sub_256119CA0((uint64_t)v7);
  sub_255F8818C((uint64_t)v7, type metadata accessor for StateOfMindTimeline.Styles);
  if (v9 > 1.0) {
    double v9 = 1.0;
  }
  sub_255F83EF4(v8);
  double v11 = v9 * v10;
  sub_256119CA0((uint64_t)v5);
  sub_255F8818C((uint64_t)v5, type metadata accessor for StateOfMindTimeline.Styles);
  double v12 = v11 * 0.2;
  sub_255F7CC3C();
  double v14 = v13;
  sub_256119CA0((uint64_t)v5);
  sub_255F8818C((uint64_t)v5, type metadata accessor for StateOfMindTimeline.Styles);
  return v12 * (v14 + 10.0);
}

uint64_t sub_255F80B38(uint64_t *a1)
{
  uint64_t v2 = type metadata accessor for StateOfMindTimeline.Styles(0);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  double v8 = (char *)&v12 - v7;
  MEMORY[0x270FA5388](v6);
  double v10 = (char *)&v12 - v9;
  fabs(sub_255F83D28(a1));
  _s16TimelineDataViewVMa();
  sub_256119CA0((uint64_t)v10);
  sub_255F8818C((uint64_t)v10, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256119CA0((uint64_t)v8);
  sub_255F8818C((uint64_t)v8, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256119CA0((uint64_t)v5);
  return sub_255F8818C((uint64_t)v5, type metadata accessor for StateOfMindTimeline.Styles);
}

uint64_t sub_255F80C90(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = _s9ViewModelOMa();
  MEMORY[0x270FA5388](v3 - 8);
  _s16TimelineDataViewVMa();
  sub_255F775D4(0, &qword_269F42FC0, (uint64_t (*)(uint64_t))_s9ViewModelOMa, MEMORY[0x263F1B750]);
  MEMORY[0x25A2A01A0]();
  sub_2560F72D8(a2);
  return sub_256177728();
}

uint64_t sub_255F80D80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v132 = a1;
  uint64_t v2 = _s16TimelineDataViewVMa();
  uint64_t v106 = *(uint64_t (**)())(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v107 = v3;
  uint64_t v108 = (uint64_t)&v99 - (((unint64_t)v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F849D4();
  uint64_t v131 = v4;
  uint64_t v112 = *(uint64_t (**)())(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v111 = (uint64_t (*)())((char *)&v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_255F775D4(0, &qword_269F430A0, (uint64_t (*)(uint64_t))sub_255F84938, MEMORY[0x263F1BAC8]);
  uint64_t v125 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v117 = (uint64_t)&v99 - v7;
  double v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185D0];
  sub_255F775D4(0, &qword_269F42CC8, MEMORY[0x263F188C0], MEMORY[0x263F185D0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v113 = (uint64_t *)((char *)&v99 - v10);
  sub_255F775D4(0, &qword_269F42B48, MEMORY[0x263F18520], v8);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v109 = (uint64_t *)((char *)&v99 - v12);
  uint64_t v110 = _s15EntryNoDataViewVMa();
  uint64_t v13 = MEMORY[0x270FA5388](v110);
  uint64_t v114 = (uint64_t)&v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v124 = (uint64_t)&v99 - v15;
  uint64_t v16 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v118 = (uint64_t)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F849AC(0);
  uint64_t v119 = v18;
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v115 = (uint64_t)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v116 = (uint64_t)&v99 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v122 = (uint64_t)&v99 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v126 = (uint64_t)&v99 - v25;
  uint64_t v26 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F19B20];
  sub_255F8480C(0, &qword_269F432E8, MEMORY[0x263F19B20]);
  uint64_t v129 = v27;
  MEMORY[0x270FA5388](v27);
  uint64_t v130 = (uint64_t)&v99 - v28;
  sub_255F84898(0, &qword_269F432F0, v26);
  uint64_t v120 = v29;
  MEMORY[0x270FA5388](v29);
  uint64_t v121 = (uint64_t)&v99 - v30;
  sub_255F84898(0, &qword_269F43098, MEMORY[0x263F19B28]);
  uint64_t v128 = v31;
  MEMORY[0x270FA5388](v31);
  uint64_t v123 = (char *)&v99 - v32;
  uint64_t v133 = _s20EntryPlaceholderViewVMa();
  uint64_t v33 = MEMORY[0x270FA5388](v133);
  uint64_t v35 = (uint64_t *)((char *)&v99 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v33);
  uint64_t v37 = (char *)&v99 - v36;
  uint64_t v38 = _s9ViewModelOMa();
  uint64_t v39 = MEMORY[0x270FA5388](v38);
  uint64_t v41 = (char *)&v99 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v39);
  uint64_t v43 = (char *)&v99 - v42;
  uint64_t v44 = (int *)v2;
  uint64_t v45 = v1;
  sub_255F775D4(0, &qword_269F42FC0, (uint64_t (*)(uint64_t))_s9ViewModelOMa, MEMORY[0x263F1B750]);
  uint64_t v47 = v46;
  MEMORY[0x25A2A01A0]();
  uint64_t v127 = (uint64_t *)v43;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      *uint64_t v35 = swift_getKeyPath();
      uint64_t v49 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
      sub_255F775D4(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
      uint64_t v102 = v50;
      swift_storeEnumTagMultiPayload();
      *((unsigned char *)v35 + *(int *)(v133 + 20)) = 0;
      uint64_t v111 = _s20EntryPlaceholderViewVMa;
      sub_255F880BC((uint64_t)v35, (uint64_t)v37, (uint64_t (*)(void))_s20EntryPlaceholderViewVMa);
      uint64_t v108 = v1 + v44[6];
      uint64_t v51 = v118;
      sub_256119CA0(v118);
      uint64_t v107 = type metadata accessor for StateOfMindTimeline.Styles;
      sub_255F8818C(v51, type metadata accessor for StateOfMindTimeline.Styles);
      sub_2561779F8();
      uint64_t v53 = v52;
      uint64_t v55 = v54;
      uint64_t v106 = _s20EntryPlaceholderViewVMa;
      uint64_t v56 = v122;
      sub_255F88124((uint64_t)v37, v122, (uint64_t (*)(void))_s20EntryPlaceholderViewVMa);
      uint64_t v57 = (int64x2_t *)(v56 + *(int *)(v119 + 36));
      int64x2_t v105 = vdupq_n_s64(0x3FE999999999999AuLL);
      *uint64_t v57 = v105;
      v57[1].i64[0] = v53;
      v57[1].i64[1] = v55;
      uint64_t v104 = _s20EntryPlaceholderViewVMa;
      sub_255F8818C((uint64_t)v37, (uint64_t (*)(void))_s20EntryPlaceholderViewVMa);
      uint64_t v103 = sub_255F849AC;
      sub_255F880BC(v56, v126, (uint64_t (*)(void))sub_255F849AC);
      uint64_t v58 = (uint64_t *)(v45 + v44[9]);
      uint64_t v59 = v58[1];
      uint64_t v101 = *v58;
      uint64_t v99 = v59;
      double v60 = (uint64_t *)(v45 + v44[11]);
      uint64_t v61 = v60[1];
      uint64_t v100 = *v60;
      swift_retain();
      swift_retain();
      MEMORY[0x25A2A01A0](v47);
      uint64_t v112 = _s9ViewModelOMa;
      sub_255F8818C((uint64_t)v41, (uint64_t (*)(void))_s9ViewModelOMa);
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v63 = (uint64_t)v109;
      *uint64_t v109 = KeyPath;
      uint64_t v64 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
      sub_255F775D4(0, &qword_269F47D00, MEMORY[0x263F18520], v49);
      swift_storeEnumTagMultiPayload();
      uint64_t v65 = swift_getKeyPath();
      uint64_t v66 = (uint64_t)v113;
      *uint64_t v113 = v65;
      uint64_t v67 = (uint64_t (*)(uint64_t))MEMORY[0x263F188C0];
      sub_255F775D4(0, &qword_269F42CC0, MEMORY[0x263F188C0], v49);
      swift_storeEnumTagMultiPayload();
      uint64_t v68 = v114;
      sub_255F871D4(v63, v114, &qword_269F42B48, v64);
      double v69 = (int *)v110;
      uint64_t v70 = (uint64_t *)(v68 + *(int *)(v110 + 20));
      *uint64_t v70 = swift_getKeyPath();
      swift_storeEnumTagMultiPayload();
      sub_255F871D4(v66, v68 + v69[6], &qword_269F42CC8, v67);
      uint64_t v71 = (void *)(v68 + v69[7]);
      uint64_t v72 = v99;
      *uint64_t v71 = v101;
      v71[1] = v72;
      char v73 = (void *)(v68 + v69[8]);
      void *v73 = v100;
      v73[1] = v61;
      *(void *)(v68 + v69[9]) = &unk_2704B5840;
      uint64_t v74 = v124;
      sub_255F880BC(v68, v124, (uint64_t (*)(void))_s15EntryNoDataViewVMa);
      *uint64_t v35 = swift_getKeyPath();
      swift_storeEnumTagMultiPayload();
      *((unsigned char *)v35 + *(int *)(v133 + 20)) = 0;
      sub_255F880BC((uint64_t)v35, (uint64_t)v37, (uint64_t (*)(void))v111);
      uint64_t v75 = v118;
      sub_256119CA0(v118);
      sub_255F8818C(v75, v107);
      sub_2561779E8();
      uint64_t v77 = v76;
      uint64_t v79 = v78;
      uint64_t v80 = v116;
      sub_255F88124((uint64_t)v37, v116, (uint64_t (*)(void))v106);
      unint64_t v81 = (int64x2_t *)(v80 + *(int *)(v119 + 36));
      *unint64_t v81 = v105;
      v81[1].i64[0] = v77;
      v81[1].i64[1] = v79;
      sub_255F8818C((uint64_t)v37, (uint64_t (*)(void))v104);
      uint64_t v82 = v122;
      sub_255F880BC(v80, v122, (uint64_t (*)(void))v103);
      sub_255F88124(v126, v80, (uint64_t (*)(void))sub_255F849AC);
      sub_255F88124(v74, v68, (uint64_t (*)(void))_s15EntryNoDataViewVMa);
      uint64_t v83 = v115;
      sub_255F88124(v82, v115, (uint64_t (*)(void))sub_255F849AC);
      uint64_t v84 = v117;
      sub_255F88124(v80, v117, (uint64_t (*)(void))sub_255F849AC);
      sub_255F84938();
      uint64_t v86 = v85;
      sub_255F88124(v68, v84 + *(int *)(v85 + 48), (uint64_t (*)(void))_s15EntryNoDataViewVMa);
      sub_255F88124(v83, v84 + *(int *)(v86 + 64), (uint64_t (*)(void))sub_255F849AC);
      sub_255F8818C(v83, (uint64_t (*)(void))sub_255F849AC);
      sub_255F8818C(v68, (uint64_t (*)(void))_s15EntryNoDataViewVMa);
      sub_255F8818C(v80, (uint64_t (*)(void))sub_255F849AC);
      uint64_t v87 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F1BAC8];
      sub_255F863B8(v84, v121, (uint64_t)&qword_269F430A0, (uint64_t)sub_255F84938, MEMORY[0x263F1BAC8], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_255F775D4);
      swift_storeEnumTagMultiPayload();
      sub_255F84F38(&qword_269F431C8, (void (*)(uint64_t))_s20EntryPlaceholderViewVMa);
      sub_255F882E8(&qword_269F431D0, &qword_269F430A0, (uint64_t (*)(uint64_t))sub_255F84938);
      uint64_t v88 = (uint64_t)v123;
      sub_256176898();
      sub_255F87254(v84, &qword_269F430A0, (uint64_t (*)(uint64_t))sub_255F84938, v87);
      uint64_t v89 = MEMORY[0x263F19B28];
      sub_255F862E8(v88, v130, (uint64_t)&qword_269F43098, MEMORY[0x263F19B28], (uint64_t (*)(void, uint64_t, uint64_t))sub_255F84898);
      swift_storeEnumTagMultiPayload();
      sub_255F85570();
      sub_255F85658();
      sub_256176898();
      sub_255F86358(v88, (uint64_t)&qword_269F43098, v89, (uint64_t (*)(void))sub_255F84898);
      sub_255F8818C(v82, (uint64_t (*)(void))sub_255F849AC);
      sub_255F8818C(v124, (uint64_t (*)(void))_s15EntryNoDataViewVMa);
      sub_255F8818C(v126, (uint64_t (*)(void))sub_255F849AC);
      return sub_255F8818C((uint64_t)v127, (uint64_t (*)(void))v112);
    }
    else
    {
      uint64_t v134 = *v127;
      uint64_t v93 = v108;
      sub_255F88124(v1, v108, (uint64_t (*)(void))_s16TimelineDataViewVMa);
      unint64_t v94 = (*((unsigned __int8 *)v106 + 80) + 16) & ~(unint64_t)*((unsigned __int8 *)v106 + 80);
      uint64_t v95 = swift_allocObject();
      sub_255F880BC(v93, v95 + v94, (uint64_t (*)(void))_s16TimelineDataViewVMa);
      sub_255F775D4(0, &qword_269F430C0, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary, MEMORY[0x263F8D488]);
      sub_255F85ED8(0, &qword_269F430C8, sub_255F84ACC, MEMORY[0x263F1A470]);
      sub_255F84FFC();
      sub_255F856C8();
      sub_255F84F38(&qword_269F432F8, (void (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary);
      uint64_t v96 = v111;
      sub_2561777D8();
      unint64_t v97 = v112;
      uint64_t v98 = v131;
      (*((void (**)(uint64_t, uint64_t (*)(), uint64_t))v112 + 2))(v130, v96, v131);
      swift_storeEnumTagMultiPayload();
      sub_255F85570();
      sub_255F85658();
      sub_256176898();
      return (*((uint64_t (**)(uint64_t (*)(), uint64_t))v97 + 1))(v96, v98);
    }
  }
  else
  {
    *uint64_t v35 = swift_getKeyPath();
    sub_255F775D4(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    swift_storeEnumTagMultiPayload();
    *((unsigned char *)v35 + *(int *)(v133 + 20)) = 1;
    sub_255F880BC((uint64_t)v35, (uint64_t)v37, (uint64_t (*)(void))_s20EntryPlaceholderViewVMa);
    sub_255F88124((uint64_t)v37, v121, (uint64_t (*)(void))_s20EntryPlaceholderViewVMa);
    swift_storeEnumTagMultiPayload();
    sub_255F84F38(&qword_269F431C8, (void (*)(uint64_t))_s20EntryPlaceholderViewVMa);
    sub_255F882E8(&qword_269F431D0, &qword_269F430A0, (uint64_t (*)(uint64_t))sub_255F84938);
    uint64_t v91 = (uint64_t)v123;
    sub_256176898();
    uint64_t v92 = MEMORY[0x263F19B28];
    sub_255F862E8(v91, v130, (uint64_t)&qword_269F43098, MEMORY[0x263F19B28], (uint64_t (*)(void, uint64_t, uint64_t))sub_255F84898);
    swift_storeEnumTagMultiPayload();
    sub_255F85570();
    sub_255F85658();
    sub_256176898();
    sub_255F86358(v91, (uint64_t)&qword_269F43098, v92, (uint64_t (*)(void))sub_255F84898);
    sub_255F8818C((uint64_t)v37, (uint64_t (*)(void))_s20EntryPlaceholderViewVMa);
    return sub_255F8818C((uint64_t)v127, (uint64_t (*)(void))_s9ViewModelOMa);
  }
}

uint64_t sub_255F81F48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v144 = a2;
  sub_255F85C44(0, &qword_269F43210, sub_255F85998);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v145 = (uint64_t)&v117 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v143 = (uint64_t)&v117 - v6;
  uint64_t v126 = _s9ViewModelOMa();
  uint64_t v7 = MEMORY[0x270FA5388](v126);
  uint64_t v141 = (uint64_t)&v117 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  long long v142 = (char *)&v117 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v123 = (char *)&v117 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v125 = (char *)&v117 - v13;
  uint64_t v14 = sub_256175EC8();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v128 = (char *)&v117 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F85120();
  uint64_t v129 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v127 = (char *)&v117 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F8480C(0, &qword_269F43090, MEMORY[0x263F19B28]);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v124 = (uint64_t)&v117 - v19;
  sub_255F85E24(0, &qword_269F43080, (uint64_t (*)(uint64_t))_s14EntryViewStackVMa, sub_255F847D8, MEMORY[0x263F186D0]);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v120 = (uint64_t)&v117 - v21;
  sub_255F846FC();
  uint64_t v122 = v22 - 8;
  uint64_t v23 = MEMORY[0x270FA5388](v22 - 8);
  uint64_t v25 = (char *)&v117 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v121 = (uint64_t)&v117 - v26;
  uint64_t v27 = _s14EntryViewStackVMa();
  uint64_t v28 = MEMORY[0x270FA5388](v27 - 8);
  uint64_t v30 = (uint64_t *)((char *)&v117 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v28);
  uint64_t v117 = (uint64_t)&v117 - v31;
  sub_255F846D4(0);
  uint64_t v119 = v32;
  MEMORY[0x270FA5388](v32);
  uint64_t v34 = (char *)&v117 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F845C8();
  uint64_t v131 = *(void *)(v35 - 8);
  uint64_t v132 = v35;
  MEMORY[0x270FA5388](v35);
  uint64_t v118 = (char *)&v117 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F845A8(0);
  uint64_t v130 = v37;
  MEMORY[0x270FA5388](v37);
  uint64_t v134 = (char *)&v117 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F84510(0, &qword_269F43058, sub_255F845A8);
  uint64_t v133 = v39;
  MEMORY[0x270FA5388](v39);
  uint64_t v137 = (uint64_t)&v117 - v40;
  sub_255F8448C();
  uint64_t v136 = v41;
  uint64_t v42 = MEMORY[0x270FA5388](v41);
  uint64_t v140 = (uint64_t)&v117 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  uint64_t v135 = (uint64_t)&v117 - v45;
  MEMORY[0x270FA5388](v44);
  uint64_t v139 = (uint64_t)&v117 - v46;
  sub_255F841F0();
  MEMORY[0x270FA5388](v47 - 8);
  uint64_t v49 = (char *)&v117 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F841C8(0);
  uint64_t v51 = v50 - 8;
  MEMORY[0x270FA5388](v50);
  uint64_t v53 = (char *)&v117 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F841A0(0);
  uint64_t v55 = MEMORY[0x270FA5388](v54 - 8);
  uint64_t v57 = (char *)&v117 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v55);
  uint64_t v59 = (char *)&v117 - v58;
  *(void *)uint64_t v49 = sub_256176678();
  *((void *)v49 + 1) = 0;
  v49[16] = 0;
  sub_255F860A0(0, &qword_269F432A8, &qword_269F43018, (uint64_t (*)(uint64_t))sub_255F842A4);
  sub_255F7D14C(a1, &v49[*(int *)(v60 + 44)]);
  char v61 = sub_256176D98();
  sub_255F88124((uint64_t)v49, (uint64_t)v53, (uint64_t (*)(void))sub_255F841F0);
  double v62 = &v53[*(int *)(v51 + 44)];
  *double v62 = v61;
  *(_OWORD *)(v62 + 8) = 0u;
  *(_OWORD *)(v62 + 24) = 0u;
  v62[40] = 1;
  uint64_t v63 = (uint64_t)v49;
  uint64_t v64 = (uint64_t)v123;
  sub_255F8818C(v63, (uint64_t (*)(void))sub_255F841F0);
  uint64_t v65 = sub_2561778E8();
  sub_2561162F8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v57, 0.0, 1, 0.0, 1, v65, v66);
  sub_255F8818C((uint64_t)v53, (uint64_t (*)(void))sub_255F841C8);
  uint64_t v138 = v57;
  uint64_t v67 = (uint64_t)v57;
  uint64_t v68 = (uint64_t)v125;
  long long v146 = v59;
  sub_255F880BC(v67, (uint64_t)v59, (uint64_t (*)(void))sub_255F841A0);
  *uint64_t v30 = swift_getKeyPath();
  sub_255F775D4(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  uint64_t v69 = v117;
  sub_255F880BC((uint64_t)v30, v117, (uint64_t (*)(void))_s14EntryViewStackVMa);
  sub_255F880BC(v69, (uint64_t)v30, (uint64_t (*)(void))_s14EntryViewStackVMa);
  uint64_t v70 = v120;
  sub_255F88124((uint64_t)v30, v120, (uint64_t (*)(void))_s14EntryViewStackVMa);
  sub_255F86120(v70, (uint64_t)v25);
  uint64_t v71 = v124;
  uint64_t v72 = a1;
  sub_255F80D80(v124);
  sub_255F861C8(v70);
  sub_255F86268(v71, (uint64_t)&v25[*(int *)(v122 + 52)]);
  uint64_t v73 = (uint64_t)v25;
  uint64_t v74 = v118;
  uint64_t v75 = v121;
  sub_255F880BC(v73, v121, (uint64_t (*)(void))sub_255F846FC);
  uint64_t v76 = (uint64_t)v30;
  uint64_t v77 = v72;
  sub_255F8818C(v76, (uint64_t (*)(void))_s14EntryViewStackVMa);
  double v78 = sub_255F7CD80();
  sub_255F88124(v75, (uint64_t)v34, (uint64_t (*)(void))sub_255F846FC);
  uint64_t v79 = (double *)&v34[*(int *)(v119 + 36)];
  *uint64_t v79 = v78;
  v79[1] = 0.0;
  sub_255F8818C(v75, (uint64_t (*)(void))sub_255F846FC);
  sub_256175EB8();
  uint64_t v80 = (uint64_t)v127;
  sub_256175ED8();
  sub_255F8304C(v80 + *(int *)(v129 + 52));
  sub_256175E18();
  sub_255F87FB8(&qword_269F431A0, sub_255F846D4, (void (*)(void))sub_255F853C8);
  sub_255F84F38(&qword_269F431F0, (void (*)(uint64_t))sub_255F85120);
  sub_256177318();
  sub_255F8818C(v80, (uint64_t (*)(void))sub_255F85120);
  sub_255F8818C((uint64_t)v34, (uint64_t (*)(void))sub_255F846D4);
  uint64_t v81 = _s16TimelineDataViewVMa();
  sub_255F775D4(0, &qword_269F42FC0, (uint64_t (*)(uint64_t))_s9ViewModelOMa, MEMORY[0x263F1B750]);
  uint64_t v83 = v82;
  MEMORY[0x25A2A01A0]();
  sub_255F88124(v68, v64, (uint64_t (*)(void))_s9ViewModelOMa);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_255F77638();
      swift_bridgeObjectRelease();
      uint64_t v85 = sub_256177DB8();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v85 - 8) + 8))(v64, v85);
      uint64_t v86 = 1;
    }
    else
    {
      sub_255F8818C(v64, (uint64_t (*)(void))_s9ViewModelOMa);
      uint64_t v86 = 2;
    }
  }
  else
  {
    sub_255F77638();
    swift_bridgeObjectRelease();
    uint64_t v87 = sub_256177DB8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v87 - 8) + 8))(v64, v87);
    uint64_t v86 = 0;
  }
  uint64_t v88 = (uint64_t)v134;
  sub_255F8818C(v68, (uint64_t (*)(void))_s9ViewModelOMa);
  uint64_t v90 = v131;
  uint64_t v89 = v132;
  (*(void (**)(uint64_t, char *, uint64_t))(v131 + 16))(v88, v74, v132);
  uint64_t v91 = (void *)(v88 + *(int *)(v130 + 36));
  *uint64_t v91 = 0;
  v91[1] = v86;
  (*(void (**)(char *, uint64_t))(v90 + 8))(v74, v89);
  uint64_t v92 = sub_256177918();
  uint64_t v93 = (uint64_t)v142;
  MEMORY[0x25A2A01A0](v83);
  uint64_t v94 = v141;
  sub_255F88124(v93, v141, (uint64_t (*)(void))_s9ViewModelOMa);
  int v95 = swift_getEnumCaseMultiPayload();
  if (v95)
  {
    if (v95 == 1)
    {
      sub_255F77638();
      swift_bridgeObjectRelease();
      uint64_t v96 = sub_256177DB8();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v96 - 8) + 8))(v94, v96);
      uint64_t v97 = 1;
    }
    else
    {
      uint64_t v97 = *(void *)(v94 + 8);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_255F77638();
    swift_bridgeObjectRelease();
    uint64_t v98 = sub_256177DB8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v98 - 8) + 8))(v94, v98);
    uint64_t v97 = 0;
  }
  sub_255F8818C(v93, (uint64_t (*)(void))_s9ViewModelOMa);
  uint64_t v99 = v137;
  sub_255F88124(v88, v137, (uint64_t (*)(void))sub_255F845A8);
  uint64_t v100 = (uint64_t *)(v99 + *(int *)(v133 + 36));
  *uint64_t v100 = v92;
  v100[1] = v97;
  sub_255F8818C(v88, (uint64_t (*)(void))sub_255F845A8);
  uint64_t v101 = sub_256177918();
  uint64_t v102 = (uint64_t *)(v77 + *(int *)(v81 + 52));
  uint64_t v103 = *v102;
  uint64_t v104 = v102[1];
  uint64_t v147 = v103;
  uint64_t v148 = v104;
  sub_255F8655C(0, &qword_269F432B0, MEMORY[0x263F8EF38], MEMORY[0x263F1B5D0]);
  sub_256177578();
  uint64_t v105 = v149;
  uint64_t v106 = v135;
  sub_255F862E8(v99, v135, (uint64_t)&qword_269F43058, (uint64_t)sub_255F845A8, (uint64_t (*)(void, uint64_t, uint64_t))sub_255F84510);
  uint64_t v107 = (uint64_t *)(v106 + *(int *)(v136 + 36));
  *uint64_t v107 = v101;
  v107[1] = v105;
  sub_255F86358(v99, (uint64_t)&qword_269F43058, (uint64_t)sub_255F845A8, (uint64_t (*)(void))sub_255F84510);
  uint64_t v108 = v139;
  sub_255F880BC(v106, v139, (uint64_t (*)(void))sub_255F8448C);
  uint64_t v109 = v143;
  sub_255F7E88C(v143);
  uint64_t v110 = (uint64_t)v138;
  sub_255F88124((uint64_t)v146, (uint64_t)v138, (uint64_t (*)(void))sub_255F841A0);
  uint64_t v111 = v140;
  sub_255F88124(v108, v140, (uint64_t (*)(void))sub_255F8448C);
  uint64_t v112 = v145;
  sub_255F863B8(v109, v145, (uint64_t)&qword_269F43210, (uint64_t)sub_255F85998, MEMORY[0x263F19110], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_255F85C44);
  uint64_t v113 = v144;
  sub_255F88124(v110, v144, (uint64_t (*)(void))sub_255F841A0);
  sub_255F840F4();
  uint64_t v115 = v114;
  sub_255F88124(v111, v113 + *(int *)(v114 + 48), (uint64_t (*)(void))sub_255F8448C);
  sub_255F863B8(v112, v113 + *(int *)(v115 + 64), (uint64_t)&qword_269F43210, (uint64_t)sub_255F85998, MEMORY[0x263F19110], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_255F85C44);
  sub_255F8642C(v109);
  sub_255F8818C(v108, (uint64_t (*)(void))sub_255F8448C);
  sub_255F8818C((uint64_t)v146, (uint64_t (*)(void))sub_255F841A0);
  sub_255F8642C(v112);
  sub_255F8818C(v111, (uint64_t (*)(void))sub_255F8448C);
  return sub_255F8818C(v110, (uint64_t (*)(void))sub_255F841A0);
}

uint64_t sub_255F8304C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v29 = a1;
  uint64_t v3 = _s16TimelineDataViewVMa();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2561768D8();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_256175DF8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v25 = v8;
  uint64_t v26 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F85220();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v27 = v12;
  uint64_t v28 = v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256176AB8();
  sub_256175DC8();
  uint64_t v23 = _s16TimelineDataViewVMa;
  sub_255F88124(v2, (uint64_t)v6, (uint64_t (*)(void))_s16TimelineDataViewVMa);
  unint64_t v16 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v17 = swift_allocObject();
  sub_255F880BC((uint64_t)v6, v17 + v16, (uint64_t (*)(void))_s16TimelineDataViewVMa);
  sub_255F84F38(&qword_269F43178, MEMORY[0x263F185B8]);
  sub_255F84F38(&qword_269F43180, MEMORY[0x263F18588]);
  uint64_t v18 = v25;
  sub_256177808();
  swift_release();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v18);
  sub_255F88124(v24, (uint64_t)v6, (uint64_t (*)(void))v23);
  uint64_t v19 = swift_allocObject();
  sub_255F880BC((uint64_t)v6, v19 + v16, (uint64_t (*)(void))_s16TimelineDataViewVMa);
  sub_255F852F8();
  uint64_t v20 = v27;
  sub_2561777F8();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v15, v20);
}

uint64_t sub_255F83424(uint64_t a1, uint64_t a2)
{
  uint64_t v45 = a1;
  uint64_t v3 = sub_256176178();
  uint64_t v47 = *(void *)(v3 - 8);
  uint64_t v48 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v46 = (uint64_t)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = _s9ViewModelOMa();
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v43 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v43 - v12;
  uint64_t v14 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x270FA5388](v14 - 8);
  unint64_t v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F7CC3C();
  double v18 = v17;
  uint64_t v19 = _s16TimelineDataViewVMa();
  sub_256119CA0((uint64_t)v16);
  sub_255F8818C((uint64_t)v16, type metadata accessor for StateOfMindTimeline.Styles);
  uint64_t v44 = v19;
  sub_255F775D4(0, &qword_269F42FC0, (uint64_t (*)(uint64_t))_s9ViewModelOMa, MEMORY[0x263F1B750]);
  uint64_t v21 = v20;
  MEMORY[0x25A2A01A0]();
  sub_255F88124((uint64_t)v13, (uint64_t)v11, (uint64_t (*)(void))_s9ViewModelOMa);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_255F77638();
      swift_bridgeObjectRelease();
      uint64_t v23 = sub_256177DB8();
      (*(void (**)(char *, uint64_t))(*(void *)(v23 - 8) + 8))(v11, v23);
      uint64_t v24 = 1;
    }
    else
    {
      uint64_t v24 = *((void *)v11 + 1);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_255F77638();
    swift_bridgeObjectRelease();
    uint64_t v25 = sub_256177DB8();
    (*(void (**)(char *, uint64_t))(*(void *)(v25 - 8) + 8))(v11, v25);
    uint64_t v24 = 0;
  }
  double v26 = v18 + 10.0;
  sub_255F8818C((uint64_t)v13, (uint64_t (*)(void))_s9ViewModelOMa);
  MEMORY[0x25A2A01A0](v21);
  uint64_t v27 = sub_2560F7430();
  sub_255F8818C((uint64_t)v8, (uint64_t (*)(void))_s9ViewModelOMa);
  double v28 = v26;
  if (v24 == v27)
  {
    sub_256119CA0((uint64_t)v16);
    sub_255F8818C((uint64_t)v16, type metadata accessor for StateOfMindTimeline.Styles);
    double v28 = 20.0;
  }
  MEMORY[0x25A2A01A0](v21);
  sub_255F8818C((uint64_t)v8, (uint64_t (*)(void))_s9ViewModelOMa);
  uint64_t v29 = v48;
  if (!v24)
  {
    sub_256119CA0((uint64_t)v16);
    sub_255F8818C((uint64_t)v16, type metadata accessor for StateOfMindTimeline.Styles);
    double v26 = 20.0;
  }
  uint64_t v30 = v46;
  sub_25611A9DC(v46);
  uint64_t v31 = v47;
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v47 + 88))(v30, v29) == *MEMORY[0x263F18DD0])
  {
    uint64_t result = sub_256175DD8();
    double v51 = v33;
    if (v28 >= -v26)
    {
      double v49 = -v26;
      double v50 = v28;
      sub_255F867E4();
      uint64_t v34 = MEMORY[0x263F8EF38];
      sub_256177E38();
      uint64_t v35 = (double *)(a2 + *(int *)(v44 + 52));
      double v36 = *v35;
      double v37 = v35[1];
      double v49 = v36;
      double v50 = v37;
      double v52 = -v52;
      sub_255F8655C(0, &qword_269F432B0, v34, MEMORY[0x263F1B5D0]);
      return sub_256177588();
    }
    __break(1u);
  }
  else
  {
    uint64_t result = sub_256175DD8();
    double v51 = v38;
    if (v26 >= -v28)
    {
      double v49 = -v28;
      double v50 = v26;
      sub_255F867E4();
      uint64_t v39 = MEMORY[0x263F8EF38];
      sub_256177E38();
      uint64_t v40 = (double *)(a2 + *(int *)(v44 + 52));
      double v41 = *v40;
      double v42 = v40[1];
      double v49 = v41;
      double v50 = v42;
      double v51 = v52;
      sub_255F8655C(0, &qword_269F432B0, v39, MEMORY[0x263F1B5D0]);
      sub_256177588();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8))(v30, v29);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_255F839D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = _s9ViewModelOMa();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v4 = sub_256176178();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = _s16TimelineDataViewVMa();
  sub_256119CA0((uint64_t)v10);
  sub_255F8818C((uint64_t)v10, type metadata accessor for StateOfMindTimeline.Styles);
  sub_255F7CC3C();
  double v13 = v12 * 0.5;
  if (v13 <= 100.0) {
    double v14 = v13;
  }
  else {
    double v14 = 100.0;
  }
  sub_25611A9DC((uint64_t)v7);
  int v15 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  int v16 = *MEMORY[0x263F18DD0];
  sub_256175DD8();
  double v18 = v17;
  if (v15 == v16) {
    double v18 = -v17;
  }
  else {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  if (v18 < -v14)
  {
    sub_255F775D4(0, &qword_269F42FC0, (uint64_t (*)(uint64_t))_s9ViewModelOMa, MEMORY[0x263F1B750]);
    MEMORY[0x25A2A01A0]();
    sub_2560F7544();
LABEL_11:
    sub_256177728();
    goto LABEL_12;
  }
  if (v14 <= v18)
  {
    sub_255F775D4(0, &qword_269F42FC0, (uint64_t (*)(uint64_t))_s9ViewModelOMa, MEMORY[0x263F1B750]);
    MEMORY[0x25A2A01A0]();
    sub_2560F7694();
    goto LABEL_11;
  }
LABEL_12:
  uint64_t v19 = (uint64_t *)(a2 + *(int *)(v11 + 52));
  uint64_t v20 = *v19;
  uint64_t v21 = v19[1];
  v23[2] = v20;
  v23[3] = v21;
  v23[1] = 0;
  sub_255F8655C(0, &qword_269F432B0, MEMORY[0x263F8EF38], MEMORY[0x263F1B5D0]);
  return sub_256177588();
}

double sub_255F83D28(uint64_t *a1)
{
  uint64_t v3 = type metadata accessor for StateOfMindTimeline.Styles(0);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v20 - v7;
  uint64_t v9 = _s16TimelineDataViewVMa();
  sub_256119CA0((uint64_t)v8);
  sub_255F8818C((uint64_t)v8, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256119CA0((uint64_t)v6);
  sub_255F8818C((uint64_t)v6, type metadata accessor for StateOfMindTimeline.Styles);
  double v10 = (double)*a1;
  sub_255F7CC3C();
  double v12 = v11;
  sub_256119CA0((uint64_t)v8);
  sub_255F8818C((uint64_t)v8, type metadata accessor for StateOfMindTimeline.Styles);
  double v13 = 20.0 - (v12 + 10.0) * v10;
  double v14 = *(double *)(v1 + *(int *)(v9 + 32));
  sub_256119CA0((uint64_t)v8);
  sub_255F8818C((uint64_t)v8, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256119CA0((uint64_t)v6);
  sub_255F8818C((uint64_t)v6, type metadata accessor for StateOfMindTimeline.Styles);
  sub_255F7CC3C();
  double v16 = v13 + (v14 + -40.0 - v15) * 0.5 - sub_255F7CD80();
  sub_255F7CC3C();
  double v18 = v17;
  sub_256119CA0((uint64_t)v8);
  sub_255F8818C((uint64_t)v8, type metadata accessor for StateOfMindTimeline.Styles);
  return v16 / (v18 + 10.0);
}

uint64_t sub_255F83EF4(double a1)
{
  uint64_t v2 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s16TimelineDataViewVMa();
  sub_256119CA0((uint64_t)v4);
  uint64_t result = sub_255F8818C((uint64_t)v4, type metadata accessor for StateOfMindTimeline.Styles);
  if (fabs(a1) > 1.0)
  {
    sub_256119CA0((uint64_t)v4);
    sub_255F8818C((uint64_t)v4, type metadata accessor for StateOfMindTimeline.Styles);
    sub_256119CA0((uint64_t)v4);
    return sub_255F8818C((uint64_t)v4, type metadata accessor for StateOfMindTimeline.Styles);
  }
  return result;
}

uint64_t sub_255F84014@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_256176788();
  *(void *)(a1 + 8) = 0x402E000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  sub_255F8405C();
  return sub_255F81F48(v1, a1 + *(int *)(v3 + 44));
}

void sub_255F8405C()
{
  if (!qword_269F42FE8)
  {
    sub_255F775D4(255, &qword_269F42FF0, (uint64_t (*)(uint64_t))sub_255F840F4, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_256176048();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F42FE8);
    }
  }
}

void sub_255F840F4()
{
  if (!qword_269F42FF8)
  {
    sub_255F841A0(255);
    sub_255F8448C();
    sub_255F85C44(255, &qword_269F43210, sub_255F85998);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_269F42FF8);
    }
  }
}

void sub_255F841A0(uint64_t a1)
{
}

void sub_255F841C8(uint64_t a1)
{
}

void sub_255F841F0()
{
  if (!qword_269F43010)
  {
    sub_255F775D4(255, &qword_269F43018, (uint64_t (*)(uint64_t))sub_255F842A4, MEMORY[0x263F1BAC8]);
    sub_255F882E8(&qword_269F43048, &qword_269F43018, (uint64_t (*)(uint64_t))sub_255F842A4);
    unint64_t v0 = sub_2561775F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43010);
    }
  }
}

void sub_255F842A4()
{
  if (!qword_269F43020)
  {
    sub_255F85D38(255, (unint64_t *)&qword_269F42B18, MEMORY[0x263F1B6B0], MEMORY[0x263F18868], MEMORY[0x263F18E28]);
    sub_255F84368(255);
    sub_255F8439C(255);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_269F43020);
    }
  }
}

void sub_255F84368(uint64_t a1)
{
}

void sub_255F8439C(uint64_t a1)
{
}

void sub_255F843D0()
{
  if (!qword_269F43030)
  {
    sub_255F84464(255);
    sub_255F85D38(255, &qword_269F43040, MEMORY[0x263F8D4F8], MEMORY[0x263F8D510], MEMORY[0x263F198B8]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43030);
    }
  }
}

void sub_255F84464(uint64_t a1)
{
}

void sub_255F8448C()
{
  if (!qword_269F43050)
  {
    sub_255F84510(255, &qword_269F43058, sub_255F845A8);
    sub_255F858E8();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43050);
    }
  }
}

void sub_255F84510(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_255F85D38(255, &qword_269F431F8, MEMORY[0x263F8D6C8], MEMORY[0x263F8D6E8], MEMORY[0x263F198B8]);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_255F845A8(uint64_t a1)
{
}

void sub_255F845C8()
{
  if (!qword_269F43068)
  {
    sub_255F846D4(255);
    sub_255F85120();
    sub_255F87FB8(&qword_269F431A0, sub_255F846D4, (void (*)(void))sub_255F853C8);
    sub_255F84F38(&qword_269F431F0, (void (*)(uint64_t))sub_255F85120);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F43068);
    }
  }
}

void sub_255F846D4(uint64_t a1)
{
}

void sub_255F846FC()
{
  if (!qword_269F43078)
  {
    sub_255F85E24(255, &qword_269F43080, (uint64_t (*)(uint64_t))_s14EntryViewStackVMa, sub_255F847D8, MEMORY[0x263F186D0]);
    sub_255F8480C(255, &qword_269F43090, MEMORY[0x263F19B28]);
    sub_255F85084();
    unint64_t v0 = sub_256176048();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43078);
    }
  }
}

uint64_t sub_255F847D8()
{
  return sub_255F84F38(&qword_269F43088, (void (*)(uint64_t))_s14EntryViewStackVMa);
}

void sub_255F8480C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_255F84898(255, &qword_269F43098, MEMORY[0x263F19B28]);
    uint64_t v7 = v6;
    sub_255F849D4();
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_255F84898(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = _s20EntryPlaceholderViewVMa();
    sub_255F775D4(255, &qword_269F430A0, (uint64_t (*)(uint64_t))sub_255F84938, MEMORY[0x263F1BAC8]);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_255F84938()
{
  if (!qword_269F430A8)
  {
    sub_255F849AC(255);
    _s15EntryNoDataViewVMa();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_269F430A8);
    }
  }
}

void sub_255F849AC(uint64_t a1)
{
}

void sub_255F849D4()
{
  if (!qword_269F430B8)
  {
    sub_255F775D4(255, &qword_269F430C0, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary, MEMORY[0x263F8D488]);
    sub_255F85ED8(255, &qword_269F430C8, sub_255F84ACC, MEMORY[0x263F1A470]);
    sub_255F84FFC();
    unint64_t v0 = sub_2561777E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F430B8);
    }
  }
}

void sub_255F84ACC(uint64_t a1)
{
}

void sub_255F84B00()
{
  if (!qword_269F430D8)
  {
    sub_255F84BF4();
    sub_255F84CB0(255);
    sub_255F87FB8(&qword_269F43118, sub_255F84CB0, (void (*)(void))sub_255F84DDC);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F430D8);
    }
  }
}

void sub_255F84BF4()
{
  if (!qword_269F430E0)
  {
    sub_255F84CB0(255);
    sub_255F87FB8(&qword_269F43118, sub_255F84CB0, (void (*)(void))sub_255F84DDC);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F430E0);
    }
  }
}

void sub_255F84CB0(uint64_t a1)
{
}

void sub_255F84CD8(uint64_t a1)
{
}

void sub_255F84D00(uint64_t a1)
{
}

void sub_255F84D28(uint64_t a1)
{
}

void sub_255F84D50()
{
  if (!qword_269F43108)
  {
    _s16EntryLimitedViewVMa();
    sub_255F8655C(255, &qword_269F43110, MEMORY[0x263F8D4F8], MEMORY[0x263F1A4D8]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43108);
    }
  }
}

uint64_t sub_255F84DDC()
{
  return sub_255F87FB8(&qword_269F43120, sub_255F84CD8, (void (*)(void))sub_255F84E18);
}

uint64_t sub_255F84E18()
{
  return sub_255F87FB8(&qword_269F43128, sub_255F84D00, (void (*)(void))sub_255F84E54);
}

uint64_t sub_255F84E54()
{
  return sub_255F87FB8(&qword_269F43130, sub_255F84D28, (void (*)(void))sub_255F84E90);
}

unint64_t sub_255F84E90()
{
  unint64_t result = qword_269F43138;
  if (!qword_269F43138)
  {
    sub_255F84D50();
    sub_255F84F38(&qword_269F43140, (void (*)(uint64_t))_s16EntryLimitedViewVMa);
    sub_255F84F80();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43138);
  }
  return result;
}

uint64_t sub_255F84F38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_255F84F80()
{
  unint64_t result = qword_269F43148;
  if (!qword_269F43148)
  {
    sub_255F8655C(255, &qword_269F43110, MEMORY[0x263F8D4F8], MEMORY[0x263F1A4D8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43148);
  }
  return result;
}

unint64_t sub_255F84FFC()
{
  unint64_t result = qword_269F43150;
  if (!qword_269F43150)
  {
    sub_255F775D4(255, &qword_269F430C0, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43150);
  }
  return result;
}

unint64_t sub_255F85084()
{
  unint64_t result = qword_269F43158;
  if (!qword_269F43158)
  {
    sub_255F85E24(255, &qword_269F43080, (uint64_t (*)(uint64_t))_s14EntryViewStackVMa, sub_255F847D8, MEMORY[0x263F186D0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43158);
  }
  return result;
}

void sub_255F85120()
{
  if (!qword_269F43160)
  {
    sub_256175EE8();
    sub_255F85E24(255, &qword_269F43168, (uint64_t (*)(uint64_t))sub_255F85220, sub_255F852F8, MEMORY[0x263F18980]);
    sub_255F84F38(&qword_269F43190, MEMORY[0x263F187B0]);
    sub_255F8532C();
    unint64_t v0 = sub_256176228();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43160);
    }
  }
}

void sub_255F85220()
{
  if (!qword_269F43170)
  {
    sub_256175DF8();
    sub_255F84F38(&qword_269F43178, MEMORY[0x263F185B8]);
    sub_255F84F38(&qword_269F43180, MEMORY[0x263F18588]);
    unint64_t v0 = sub_256176238();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43170);
    }
  }
}

uint64_t sub_255F852F8()
{
  return sub_255F84F38(&qword_269F43188, (void (*)(uint64_t))sub_255F85220);
}

unint64_t sub_255F8532C()
{
  unint64_t result = qword_269F43198;
  if (!qword_269F43198)
  {
    sub_255F85E24(255, &qword_269F43168, (uint64_t (*)(uint64_t))sub_255F85220, sub_255F852F8, MEMORY[0x263F18980]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43198);
  }
  return result;
}

unint64_t sub_255F853C8()
{
  unint64_t result = qword_269F431A8;
  if (!qword_269F431A8)
  {
    sub_255F846FC();
    sub_255F85440();
    sub_255F854DC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F431A8);
  }
  return result;
}

unint64_t sub_255F85440()
{
  unint64_t result = qword_269F431B0;
  if (!qword_269F431B0)
  {
    sub_255F85E24(255, &qword_269F43080, (uint64_t (*)(uint64_t))_s14EntryViewStackVMa, sub_255F847D8, MEMORY[0x263F186D0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F431B0);
  }
  return result;
}

unint64_t sub_255F854DC()
{
  unint64_t result = qword_269F431B8;
  if (!qword_269F431B8)
  {
    sub_255F8480C(255, &qword_269F43090, MEMORY[0x263F19B28]);
    sub_255F85570();
    sub_255F85658();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F431B8);
  }
  return result;
}

unint64_t sub_255F85570()
{
  unint64_t result = qword_269F431C0;
  if (!qword_269F431C0)
  {
    sub_255F84898(255, &qword_269F43098, MEMORY[0x263F19B28]);
    sub_255F84F38(&qword_269F431C8, (void (*)(uint64_t))_s20EntryPlaceholderViewVMa);
    sub_255F882E8(&qword_269F431D0, &qword_269F430A0, (uint64_t (*)(uint64_t))sub_255F84938);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F431C0);
  }
  return result;
}

unint64_t sub_255F85658()
{
  unint64_t result = qword_269F431D8;
  if (!qword_269F431D8)
  {
    sub_255F849D4();
    sub_255F856C8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F431D8);
  }
  return result;
}

unint64_t sub_255F856C8()
{
  unint64_t result = qword_269F431E0;
  if (!qword_269F431E0)
  {
    sub_255F85ED8(255, &qword_269F430C8, sub_255F84ACC, MEMORY[0x263F1A470]);
    sub_255F857A0();
    sub_255F84F38(&qword_269F42EA0, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F431E0);
  }
  return result;
}

unint64_t sub_255F857A0()
{
  unint64_t result = qword_269F431E8;
  if (!qword_269F431E8)
  {
    sub_255F84ACC(255);
    sub_255F84BF4();
    sub_255F84CB0(255);
    sub_255F87FB8(&qword_269F43118, sub_255F84CB0, (void (*)(void))sub_255F84DDC);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_255F84F38(&qword_269F42EA0, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F431E8);
  }
  return result;
}

void sub_255F858E8()
{
  if (!qword_269F43200)
  {
    sub_255F85944();
    unint64_t v0 = sub_2561766F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43200);
    }
  }
}

unint64_t sub_255F85944()
{
  unint64_t result = qword_269F43208;
  if (!qword_269F43208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43208);
  }
  return result;
}

void sub_255F85998(uint64_t a1)
{
}

void sub_255F859C0(uint64_t a1)
{
}

void sub_255F859E8()
{
  if (!qword_269F43228)
  {
    sub_255F775D4(255, &qword_269F43230, (uint64_t (*)(uint64_t))sub_255F85A9C, MEMORY[0x263F1BAC8]);
    sub_255F882E8(&qword_269F432A0, &qword_269F43230, (uint64_t (*)(uint64_t))sub_255F85A9C);
    unint64_t v0 = sub_2561775F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43228);
    }
  }
}

void sub_255F85A9C()
{
  if (!qword_269F43238)
  {
    sub_255F85D38(255, (unint64_t *)&qword_269F42B18, MEMORY[0x263F1B6B0], MEMORY[0x263F18868], MEMORY[0x263F18E28]);
    sub_255F85B3C(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_269F43238);
    }
  }
}

void sub_255F85B3C(uint64_t a1)
{
}

void sub_255F85B70()
{
  if (!qword_269F43248)
  {
    sub_255F85C1C(255);
    sub_255F85E24(255, (unint64_t *)&qword_269F43270, (uint64_t (*)(uint64_t))sub_255F85EA4, (uint64_t (*)(void))sub_255F85FC8, MEMORY[0x263F19B10]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43248);
    }
  }
}

void sub_255F85C1C(uint64_t a1)
{
}

void sub_255F85C44(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_255F85CA8()
{
  if (!qword_269F43258)
  {
    sub_255F85D38(255, (unint64_t *)&qword_269F43260, MEMORY[0x263F1A830], MEMORY[0x263F19110], MEMORY[0x263F18E28]);
    sub_255F85D88();
    unint64_t v0 = sub_2561775E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43258);
    }
  }
}

void sub_255F85D38(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_255F85D88()
{
  unint64_t result = qword_269F43268;
  if (!qword_269F43268)
  {
    sub_255F85D38(255, (unint64_t *)&qword_269F43260, MEMORY[0x263F1A830], MEMORY[0x263F19110], MEMORY[0x263F18E28]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43268);
  }
  return result;
}

void sub_255F85E24(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_255F85EA4(uint64_t a1)
{
}

void sub_255F85ED8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    unint64_t v6 = sub_2561761B8();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_255F85F4C()
{
  if (!qword_269F43280)
  {
    sub_255F8655C(255, (unint64_t *)&qword_269F43288, MEMORY[0x263F1B440], MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_256176D28();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43280);
    }
  }
}

unint64_t sub_255F85FC8()
{
  unint64_t result = qword_269F43290;
  if (!qword_269F43290)
  {
    sub_255F85EA4(255);
    sub_255F84F38(&qword_269F42DD0, MEMORY[0x263F19048]);
    sub_255F84F38((unint64_t *)&qword_269F43298, (void (*)(uint64_t))sub_255F85F4C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43290);
  }
  return result;
}

void sub_255F860A0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_255F775D4(255, a3, a4, MEMORY[0x263F1BAC8]);
    unint64_t v5 = sub_256176048();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_255F86120(uint64_t a1, uint64_t a2)
{
  sub_255F85E24(0, &qword_269F43080, (uint64_t (*)(uint64_t))_s14EntryViewStackVMa, sub_255F847D8, MEMORY[0x263F186D0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_255F861C8(uint64_t a1)
{
  sub_255F85E24(0, &qword_269F43080, (uint64_t (*)(uint64_t))_s14EntryViewStackVMa, sub_255F847D8, MEMORY[0x263F186D0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_255F86268(uint64_t a1, uint64_t a2)
{
  sub_255F8480C(0, &qword_269F43090, MEMORY[0x263F19B28]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_255F862E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  uint64_t v7 = a5(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_255F86358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v5 = a4(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_255F863B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

uint64_t sub_255F8642C(uint64_t a1)
{
  sub_255F85C44(0, &qword_269F43210, sub_255F85998);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_255F864AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_256176408();
  *a1 = result;
  return result;
}

uint64_t sub_255F864D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_256176408();
  *a1 = result;
  return result;
}

uint64_t sub_255F86504()
{
  return sub_256176418();
}

uint64_t sub_255F86530()
{
  return sub_256176418();
}

void sub_255F8655C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_255F865A8()
{
  unint64_t result = qword_269F432C0;
  if (!qword_269F432C0)
  {
    sub_255F85B70();
    sub_255F87FB8(&qword_269F432C8, sub_255F85C1C, (void (*)(void))sub_255F86658);
    sub_255F8668C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F432C0);
  }
  return result;
}

uint64_t sub_255F86658()
{
  return sub_255F84F38(&qword_269F432D0, (void (*)(uint64_t))sub_255F85CA8);
}

unint64_t sub_255F8668C()
{
  unint64_t result = qword_269F432D8;
  if (!qword_269F432D8)
  {
    sub_255F85E24(255, (unint64_t *)&qword_269F43270, (uint64_t (*)(uint64_t))sub_255F85EA4, (uint64_t (*)(void))sub_255F85FC8, MEMORY[0x263F19B10]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F432D8);
  }
  return result;
}

uint64_t sub_255F8672C(uint64_t a1)
{
  return sub_255F86760(a1, sub_255F83424);
}

uint64_t sub_255F86748(uint64_t a1)
{
  return sub_255F86760(a1, sub_255F839D8);
}

uint64_t sub_255F86760(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(_s16TimelineDataViewVMa() - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

unint64_t sub_255F867E4()
{
  unint64_t result = qword_269F432E0;
  if (!qword_269F432E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F432E0);
  }
  return result;
}

uint64_t objectdestroyTm()
{
  uint64_t v1 = (int *)_s16TimelineDataViewVMa();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v0 + v3;
  sub_255F775D4(0, &qword_269F42FB8, MEMORY[0x263F18DD8], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_256176178();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = v4 + v1[5];
  sub_255F775D4(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = v4 + v1[6];
  sub_255F775D4(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v53 = v0 + v3;
    uint64_t v9 = sub_256176AA8();
    uint64_t v10 = *(void *)(v9 - 8);
    unint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    if (!v11(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
    uint64_t v12 = type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v13 = v8 + *(int *)(v12 + 20);
    uint64_t v14 = sub_256176158();
    double v15 = *(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
    uint64_t v16 = v13;
    double v17 = (int *)v12;
    v15(v16, v14);
    uint64_t v18 = v8 + *(int *)(v12 + 28);
    uint64_t v19 = sub_256175D98();
    double v51 = *(void (**)(uint64_t))(*(void *)(v19 - 8) + 8);
    uint64_t v52 = v19;
    v51(v18);
    uint64_t v20 = v8 + v17[8];
    if (!v11(v20, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v20, v9);
    }
    uint64_t v21 = _s6StylesV8TimelineVMa(0);
    v15(v20 + *(int *)(v21 + 20), v14);
    uint64_t v22 = v8 + v17[9];
    if (!v11(v22, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v22, v9);
    }
    uint64_t v23 = _s6StylesV6NoDataVMa(0);
    v15(v22 + *(int *)(v23 + 20), v14);
    uint64_t v24 = v8 + v17[10];
    if (!v11(v24, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v24, v9);
    }
    uint64_t v25 = _s6StylesV11PlaceholderVMa(0);
    v15(v24 + *(int *)(v25 + 20), v14);
    uint64_t v26 = v8 + v17[11];
    if (!v11(v26, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v26, v9);
    }
    uint64_t v27 = _s6StylesV6SymbolVMa(0);
    v15(v26 + *(int *)(v27 + 20), v14);
    uint64_t v28 = v8 + v17[12];
    uint64_t v54 = v17;
    if (!v11(v28, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v28, v9);
    }
    uint64_t v29 = v10;
    uint64_t v30 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v15(v28 + *(int *)(v30 + 20), v14);
    uint64_t v31 = *(int *)(v30 + 28);
    uint64_t v32 = v29;
    ((void (*)(uint64_t, uint64_t))v51)(v28 + v31, v52);
    uint64_t v33 = v8 + v54[13];
    if (!v11(v33, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v33, v9);
    }
    uint64_t v34 = _s6StylesV5EmptyVMa(0);
    v15(v33 + *(int *)(v34 + 20), v14);
    uint64_t v35 = v8 + v54[14];
    if (!v11(v35, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v35, v9);
    }
    uint64_t v36 = _s6StylesV5DailyVMa(0);
    v15(v35 + *(int *)(v36 + 20), v14);
    uint64_t v37 = v8 + v54[15];
    if (!v11(v37, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v37, v9);
    }
    uint64_t v38 = _s6StylesV9MomentaryVMa(0);
    v15(v37 + *(int *)(v38 + 20), v14);
    uint64_t v39 = v8 + v54[16];
    if (!v11(v39, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v39, v9);
    }
    uint64_t v40 = _s6StylesV6HeaderVMa(0);
    v15(v39 + *(int *)(v40 + 20), v14);
    uint64_t v41 = v8 + v54[17];
    if (!v11(v41, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v41, v9);
    }
    uint64_t v42 = _s6StylesV11ChartButtonVMa(0);
    v15(v41 + *(int *)(v42 + 20), v14);
    uint64_t v43 = v8 + v54[18];
    if (!v11(v43, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v43, v9);
    }
    uint64_t v44 = _s6StylesV15LogButtonFooterVMa(0);
    v15(v43 + *(int *)(v44 + 20), v14);
    uint64_t v4 = v53;
  }
  else
  {
    swift_release();
  }
  uint64_t v45 = v4 + v1[7];
  swift_release();
  swift_release();
  sub_255F775D4(0, &qword_269F42FC0, (uint64_t (*)(uint64_t))_s9ViewModelOMa, MEMORY[0x263F1B750]);
  uint64_t v47 = v45 + *(int *)(v46 + 32);
  _s9ViewModelOMa();
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload >= 2)
  {
    if (EnumCaseMultiPayload != 2) {
      goto LABEL_38;
    }
  }
  else
  {
    uint64_t v49 = sub_256177DB8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v49 - 8) + 8))(v47, v49);
    sub_255F77638();
  }
  swift_bridgeObjectRelease();
LABEL_38:
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255F87154@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_255F7FB00(a1, a2);
}

uint64_t sub_255F871D4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_255F775D4(0, a3, a4, MEMORY[0x263F185D0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_255F87254(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_255F775D4(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_255F872B0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_256176578();
  *a1 = result & 1;
  return result;
}

uint64_t sub_255F872E0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_256176578();
  *a1 = result & 1;
  return result;
}

uint64_t sub_255F87310()
{
  return sub_256176588();
}

uint64_t sub_255F87338()
{
  return sub_256176588();
}

unsigned char *sub_255F87360(unsigned char *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

uint64_t sub_255F87374()
{
  return swift_deallocObject();
}

unsigned char *sub_255F87384(unsigned char *result)
{
  *result &= ~*(unsigned char *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_255F8739C()
{
  uint64_t v1 = v0;
  uint64_t v2 = (int *)_s16TimelineDataViewVMa();
  uint64_t v3 = *(unsigned __int8 *)(*((void *)v2 - 1) + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(*((void *)v2 - 1) + 64);
  uint64_t v6 = type metadata accessor for StateOfMindTimeline.DaySummary();
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v8 = v1 + v4;
  sub_255F775D4(0, &qword_269F42FB8, MEMORY[0x263F18DD8], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_256176178();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v1 + v4, v9);
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = v5 + v7;
  uint64_t v11 = v8 + v2[5];
  sub_255F775D4(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  uint64_t v13 = v4 + v10;
  uint64_t v14 = v8 + v2[6];
  sub_255F775D4(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v66 = v8;
    uint64_t v67 = v13;
    uint64_t v68 = v7;
    uint64_t v69 = v6;
    uint64_t v70 = v1;
    uint64_t v15 = sub_256176AA8();
    uint64_t v16 = *(void *)(v15 - 8);
    double v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
    if (!v17(v14, 1, v15)) {
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    }
    uint64_t v18 = type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v19 = v14 + *(int *)(v18 + 20);
    uint64_t v20 = sub_256176158();
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8);
    uint64_t v22 = v19;
    uint64_t v23 = (int *)v18;
    v21(v22, v20);
    uint64_t v24 = v14 + *(int *)(v18 + 28);
    uint64_t v25 = sub_256175D98();
    uint64_t v64 = *(void (**)(uint64_t))(*(void *)(v25 - 8) + 8);
    uint64_t v65 = v25;
    v64(v24);
    uint64_t v26 = v14 + v23[8];
    if (!v17(v26, 1, v15)) {
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v26, v15);
    }
    uint64_t v27 = _s6StylesV8TimelineVMa(0);
    v21(v26 + *(int *)(v27 + 20), v20);
    uint64_t v28 = v14 + v23[9];
    if (!v17(v28, 1, v15)) {
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v28, v15);
    }
    uint64_t v29 = _s6StylesV6NoDataVMa(0);
    v21(v28 + *(int *)(v29 + 20), v20);
    uint64_t v30 = v14 + v23[10];
    if (!v17(v30, 1, v15)) {
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v30, v15);
    }
    uint64_t v31 = _s6StylesV11PlaceholderVMa(0);
    v21(v30 + *(int *)(v31 + 20), v20);
    uint64_t v32 = v14 + v23[11];
    if (!v17(v32, 1, v15)) {
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v32, v15);
    }
    uint64_t v33 = _s6StylesV6SymbolVMa(0);
    v21(v32 + *(int *)(v33 + 20), v20);
    uint64_t v34 = v14 + v23[12];
    uint64_t v71 = v20;
    uint64_t v35 = v23;
    if (!v17(v34, 1, v15)) {
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v34, v15);
    }
    uint64_t v36 = v16;
    uint64_t v37 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v21(v34 + *(int *)(v37 + 20), v71);
    uint64_t v38 = *(int *)(v37 + 28);
    uint64_t v39 = v36;
    ((void (*)(uint64_t, uint64_t))v64)(v34 + v38, v65);
    uint64_t v40 = v14 + v35[13];
    if (!v17(v40, 1, v15)) {
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v15);
    }
    uint64_t v41 = _s6StylesV5EmptyVMa(0);
    v21(v40 + *(int *)(v41 + 20), v71);
    uint64_t v42 = v14 + v35[14];
    if (!v17(v42, 1, v15)) {
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v42, v15);
    }
    uint64_t v43 = _s6StylesV5DailyVMa(0);
    v21(v42 + *(int *)(v43 + 20), v71);
    uint64_t v44 = v14 + v35[15];
    if (!v17(v44, 1, v15)) {
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v44, v15);
    }
    uint64_t v45 = _s6StylesV9MomentaryVMa(0);
    v21(v44 + *(int *)(v45 + 20), v71);
    uint64_t v46 = v14 + v35[16];
    if (!v17(v46, 1, v15)) {
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v46, v15);
    }
    uint64_t v47 = _s6StylesV6HeaderVMa(0);
    v21(v46 + *(int *)(v47 + 20), v71);
    uint64_t v48 = v14 + v35[17];
    if (!v17(v48, 1, v15)) {
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v48, v15);
    }
    uint64_t v49 = v48 + *(int *)(_s6StylesV11ChartButtonVMa(0) + 20);
    v21(v49, v71);
    uint64_t v50 = v14 + v35[18];
    if (!v17(v50, 1, v15)) {
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v50, v15);
    }
    uint64_t v51 = _s6StylesV15LogButtonFooterVMa(0);
    v21(v50 + *(int *)(v51 + 20), v71);
    uint64_t v1 = v70;
    uint64_t v7 = v68;
    uint64_t v6 = v69;
    uint64_t v13 = v67;
    uint64_t v8 = v66;
  }
  else
  {
    swift_release();
  }
  uint64_t v52 = v13 & ~v7;
  uint64_t v53 = v8 + v2[7];
  swift_release();
  swift_release();
  sub_255F775D4(0, &qword_269F42FC0, (uint64_t (*)(uint64_t))_s9ViewModelOMa, MEMORY[0x263F1B750]);
  uint64_t v55 = v53 + *(int *)(v54 + 32);
  _s9ViewModelOMa();
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload >= 2)
  {
    if (EnumCaseMultiPayload != 2) {
      goto LABEL_38;
    }
  }
  else
  {
    uint64_t v57 = sub_256177DB8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v57 - 8) + 8))(v55, v57);
    sub_255F77638();
  }
  swift_bridgeObjectRelease();
LABEL_38:
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v58 = v1 + v52 + *(int *)(v6 + 20);
  uint64_t v59 = sub_256177DB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v59 - 8) + 8))(v58, v59);
  swift_bridgeObjectRelease();
  uint64_t v60 = v1 + v52 + *(int *)(v6 + 28);
  uint64_t v61 = _s5EntryVMa();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 48))(v60, 1, v61))
  {
    uint64_t v62 = sub_2561758A8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v62 - 8) + 8))(v60, v62);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_255F87E3C()
{
  uint64_t v1 = *(void *)(_s16TimelineDataViewVMa() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for StateOfMindTimeline.DaySummary() - 8);
  uint64_t v5 = (uint64_t *)(v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));

  return sub_255F80C90(v0 + v2, v5);
}

unint64_t sub_255F87F08()
{
  unint64_t result = qword_269F43300;
  if (!qword_269F43300)
  {
    sub_255F843D0();
    sub_255F87FB8(&qword_269F43308, sub_255F84464, (void (*)(void))sub_255F7350C);
    sub_255F88038();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43300);
  }
  return result;
}

uint64_t sub_255F87FB8(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_255F88038()
{
  unint64_t result = qword_269F43310;
  if (!qword_269F43310)
  {
    sub_255F85D38(255, &qword_269F43040, MEMORY[0x263F8D4F8], MEMORY[0x263F8D510], MEMORY[0x263F198B8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43310);
  }
  return result;
}

uint64_t sub_255F880BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_255F88124(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_255F8818C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_255F881EC()
{
  return sub_255F84F38(&qword_269F43318, (void (*)(uint64_t))sub_255F88234);
}

void sub_255F88234()
{
  if (!qword_269F43320)
  {
    sub_255F775D4(255, &qword_269F42FF0, (uint64_t (*)(uint64_t))sub_255F840F4, MEMORY[0x263F1BAC8]);
    sub_255F882E8(&qword_269F43328, &qword_269F42FF0, (uint64_t (*)(uint64_t))sub_255F840F4);
    unint64_t v0 = sub_2561776F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43320);
    }
  }
}

uint64_t sub_255F882E8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_255F775D4(255, a2, a3, MEMORY[0x263F1BAC8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_255F8834C(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_255F89ED8(0, &qword_269F43330, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_256176778();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_255F884A8(uint64_t a1)
{
  sub_255F89ED8(0, &qword_269F43330, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_256176778();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }

  return swift_bridgeObjectRelease();
}

void *sub_255F88578(void *a1, void *a2, uint64_t a3)
{
  sub_255F89ED8(0, &qword_269F43330, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256176778();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 24);
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_255F88684(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_255F887B8((uint64_t)a1);
    sub_255F89ED8(0, &qword_269F43330, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_256176778();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_255F887B8(uint64_t a1)
{
  sub_255F89ED8(0, &qword_269F43330, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_255F88844(char *a1, char *a2, uint64_t a3)
{
  sub_255F89ED8(0, &qword_269F43330, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
  uint64_t v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_256176778();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  uint64_t v9 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  return a1;
}

char *sub_255F8894C(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_255F887B8((uint64_t)a1);
    sub_255F89ED8(0, &qword_269F43330, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
    uint64_t v7 = v6;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_256176778();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
  }
  uint64_t v9 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v13 = *(void *)v11;
  uint64_t v12 = *((void *)v11 + 1);
  *(void *)uint64_t v10 = v13;
  *((void *)v10 + 1) = v12;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_255F88A74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255F88A88);
}

uint64_t sub_255F88A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_255F89ED8(0, &qword_269F43338, MEMORY[0x263F19A00], MEMORY[0x263F185D0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v1__isPlatformVersionAtLeast(2, 18, 1, 0) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_255F88B7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255F88B90);
}

void sub_255F88B90(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_255F89ED8(0, &qword_269F43338, MEMORY[0x263F19A00], MEMORY[0x263F185D0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
}

uint64_t type metadata accessor for StateOfMindCalendarDateView()
{
  uint64_t result = qword_269F43340;
  if (!qword_269F43340) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_255F88CCC()
{
  sub_255F89ED8(319, &qword_269F43330, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_255F88D9C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255F88DB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v76 = a1;
  sub_255F89A5C();
  uint64_t v67 = v2;
  MEMORY[0x270FA5388](v2);
  double v78 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F89AF0();
  uint64_t v74 = *(void *)(v4 - 8);
  uint64_t v75 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v72 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F89C00(0);
  uint64_t v68 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v71 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F89C28(0);
  uint64_t v69 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v73 = (uint64_t)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F89D5C(0, &qword_269F43380, (uint64_t (*)(uint64_t))sub_255F89C28, (uint64_t (*)(uint64_t))sub_255F89CB4, MEMORY[0x263F18E28]);
  uint64_t v66 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v70 = (char *)&v65 - v11;
  uint64_t v12 = type metadata accessor for StateOfMindCalendarDateView();
  uint64_t v13 = (uint64_t *)(v1 + *(int *)(v12 + 24));
  uint64_t v14 = v13[1];
  uint64_t v79 = *v13;
  uint64_t v80 = v14;
  sub_255F5CE90();
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_256177028();
  uint64_t v17 = v16;
  char v19 = v18 & 1;
  sub_256176F28();
  uint64_t v20 = sub_256176FD8();
  uint64_t v22 = v21;
  char v24 = v23;
  swift_release();
  sub_255F67B2C(v15, v17, v19);
  swift_bridgeObjectRelease();
  sub_256176E88();
  uint64_t v25 = sub_256176F88();
  uint64_t v27 = v26;
  char v29 = v28;
  sub_255F67B2C(v20, v22, v24 & 1);
  uint64_t v30 = v77;
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v30 + *(int *)(v12 + 20)))
  {
    if (*(unsigned char *)(v30 + *(int *)(v12 + 20)) == 1)
    {
      sub_256177488();
      goto LABEL_7;
    }
    id v31 = objc_msgSend(self, sel_tertiaryLabelColor);
  }
  else
  {
    id v31 = objc_msgSend(self, sel_secondaryLabelColor);
  }
  MEMORY[0x25A29FE80](v31);
LABEL_7:
  uint64_t v32 = sub_256176F98();
  uint64_t v34 = v33;
  char v36 = v35;
  uint64_t v38 = v37;
  swift_release();
  sub_255F67B2C(v25, v27, v29 & 1);
  swift_bridgeObjectRelease();
  uint64_t v79 = v32;
  uint64_t v80 = v34;
  char v81 = v36 & 1;
  uint64_t v82 = v38;
  uint64_t v39 = *MEMORY[0x263F18CC8];
  uint64_t v40 = sub_256176158();
  uint64_t v41 = (uint64_t)v78;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 104))(v78, v39, v40);
  sub_255F89BB8(&qword_269F433E0, MEMORY[0x263F18D80]);
  uint64_t result = sub_256177E98();
  if (result)
  {
    sub_255F89BB8((unint64_t *)&qword_269F43368, (void (*)(uint64_t))sub_255F89A5C);
    uint64_t v43 = v72;
    sub_256177138();
    sub_255F8A3A8(v41, (uint64_t (*)(void))sub_255F89A5C);
    sub_255F67B2C(v79, v80, v81);
    swift_bridgeObjectRelease();
    char v44 = sub_256176D88();
    sub_256175D48();
    uint64_t v46 = v45;
    uint64_t v48 = v47;
    uint64_t v50 = v49;
    uint64_t v52 = v51;
    uint64_t v54 = v74;
    uint64_t v53 = v75;
    uint64_t v55 = (uint64_t)v71;
    (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v71, v43, v75);
    uint64_t v56 = v55 + *(int *)(v68 + 36);
    *(unsigned char *)uint64_t v56 = v44;
    *(void *)(v56 + 8) = v46;
    *(void *)(v56 + 16) = v48;
    *(void *)(v56 + 24) = v50;
    *(void *)(v56 + 32) = v52;
    *(unsigned char *)(v56 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v43, v53);
    uint64_t v57 = v73;
    sub_255F8A8D0(v55, v73, (uint64_t (*)(void))sub_255F89C00);
    *(_WORD *)(v57 + *(int *)(v69 + 36)) = 257;
    sub_255F8A3A8(v55, (uint64_t (*)(void))sub_255F89C00);
    uint64_t v58 = sub_2561778E8();
    uint64_t v60 = v59;
    uint64_t v61 = (uint64_t)v70;
    uint64_t v62 = (uint64_t)&v70[*(int *)(v66 + 36)];
    sub_255F8942C(v30, v62);
    sub_255F89CB4();
    uint64_t v64 = (uint64_t *)(v62 + *(int *)(v63 + 36));
    uint64_t *v64 = v58;
    v64[1] = v60;
    sub_255F8A938(v57, v61, (uint64_t (*)(void))sub_255F89C28);
    return sub_255F8A408(v61, v76);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_255F8942C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v56 = a2;
  sub_255F89D5C(0, &qword_269F433E8, (uint64_t (*)(uint64_t))sub_255F89DE0, (uint64_t (*)(uint64_t))sub_255F89F94, MEMORY[0x263F19B20]);
  uint64_t v54 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v55 = (uint64_t *)((char *)&v49 - v4);
  sub_255F72C18();
  uint64_t v49 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2561762B8();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (_OWORD *)((char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_255F89E78();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v50 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F89DE0();
  uint64_t v53 = v13;
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v51 = (uint64_t)&v49 - v17;
  uint64_t v18 = sub_256176778();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  char v24 = (char *)&v49 - v23;
  uint64_t v52 = a1;
  sub_25611ACD4((uint64_t)&v49 - v23);
  (*(void (**)(char *, void, uint64_t))(v19 + 104))(v22, *MEMORY[0x263F199B8], v18);
  LOBYTE(a1) = sub_255F8A4B0((uint64_t)v24, (uint64_t)v22);
  uint64_t v25 = *(void (**)(char *, uint64_t))(v19 + 8);
  v25(v22, v18);
  v25(v24, v18);
  if (a1)
  {
    uint64_t v26 = (char *)v10 + *(int *)(v8 + 20);
    uint64_t v27 = *MEMORY[0x263F19860];
    uint64_t v28 = sub_2561766E8();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104))(v26, v27, v28);
    __asm { FMOV            V0.2D, #8.0 }
    *uint64_t v10 = _Q0;
    sub_255F8A8D0((uint64_t)v10, (uint64_t)v7, MEMORY[0x263F19048]);
    uint64_t v34 = (uint64_t)v50;
    *(_WORD *)&v7[*(int *)(v49 + 36)] = 256;
    sub_255F8A8D0((uint64_t)v7, v34, (uint64_t (*)(void))sub_255F72C18);
    sub_255F8A3A8((uint64_t)v7, (uint64_t (*)(void))sub_255F72C18);
    sub_255F8A3A8((uint64_t)v10, MEMORY[0x263F19048]);
    type metadata accessor for StateOfMindCalendarDateView();
    char v35 = sub_256175A88();
    char v36 = self;
    uint64_t v37 = &selRef_tertiaryLabelColor;
    if ((v35 & 1) == 0) {
      uint64_t v37 = &selRef_systemBackgroundColor;
    }
    uint64_t v38 = MEMORY[0x25A29FE80]([v36 *v37]);
    uint64_t KeyPath = swift_getKeyPath();
    sub_255F8A8D0(v34, (uint64_t)v16, (uint64_t (*)(void))sub_255F89E78);
    uint64_t v40 = (uint64_t *)&v16[*(int *)(v53 + 36)];
    *uint64_t v40 = KeyPath;
    v40[1] = v38;
    sub_255F8A3A8(v34, (uint64_t (*)(void))sub_255F89E78);
    uint64_t v41 = v51;
    sub_255F8A938((uint64_t)v16, v51, (uint64_t (*)(void))sub_255F89DE0);
    sub_255F8A8D0(v41, (uint64_t)v55, (uint64_t (*)(void))sub_255F89DE0);
    swift_storeEnumTagMultiPayload();
    sub_255F89F94();
    sub_255F8A0E0();
    sub_255F8A2DC();
    sub_256176898();
    return sub_255F8A3A8(v41, (uint64_t (*)(void))sub_255F89DE0);
  }
  else
  {
    type metadata accessor for StateOfMindCalendarDateView();
    char v43 = sub_256175A88();
    char v44 = self;
    uint64_t v45 = &selRef_tertiaryLabelColor;
    if ((v43 & 1) == 0) {
      uint64_t v45 = &selRef_systemBackgroundColor;
    }
    uint64_t v46 = MEMORY[0x25A29FE80]([v44 *v45]);
    uint64_t v47 = swift_getKeyPath();
    uint64_t v48 = v55;
    *uint64_t v55 = v47;
    v48[1] = v46;
    swift_storeEnumTagMultiPayload();
    sub_255F89F94();
    sub_255F8A0E0();
    sub_255F8A2DC();
    return sub_256176898();
  }
}

void sub_255F89A5C()
{
  if (!qword_269F43350)
  {
    sub_256176158();
    sub_255F89BB8(&qword_269F43358, MEMORY[0x263F18D80]);
    unint64_t v0 = sub_2561786D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43350);
    }
  }
}

void sub_255F89AF0()
{
  if (!qword_269F43360)
  {
    sub_255F89A5C();
    sub_255F89BB8((unint64_t *)&qword_269F43368, (void (*)(uint64_t))sub_255F89A5C);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F43360);
    }
  }
}

uint64_t sub_255F89BB8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_255F89C00(uint64_t a1)
{
}

void sub_255F89C28(uint64_t a1)
{
}

void sub_255F89C50(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_255F89CB4()
{
  if (!qword_269F43388)
  {
    sub_255F89D5C(255, &qword_269F43390, (uint64_t (*)(uint64_t))sub_255F89DE0, (uint64_t (*)(uint64_t))sub_255F89F94, MEMORY[0x263F19B28]);
    sub_255F8A024();
    unint64_t v0 = sub_256176888();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43388);
    }
  }
}

void sub_255F89D5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4(255);
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_255F89DE0()
{
  if (!qword_269F43398)
  {
    sub_255F89E78();
    sub_255F89ED8(255, (unint64_t *)&qword_269F43280, (uint64_t (*)(uint64_t))sub_255F89F3C, MEMORY[0x263F1A418]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43398);
    }
  }
}

void sub_255F89E78()
{
  if (!qword_269F433A0)
  {
    sub_255F72C18();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F433A0);
    }
  }
}

void sub_255F89ED8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_255F89F3C()
{
  if (!qword_269F43288)
  {
    unint64_t v0 = sub_256178448();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43288);
    }
  }
}

void sub_255F89F94()
{
  if (!qword_269F433A8)
  {
    sub_255F89ED8(255, (unint64_t *)&qword_269F43280, (uint64_t (*)(uint64_t))sub_255F89F3C, MEMORY[0x263F1A418]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F433A8);
    }
  }
}

unint64_t sub_255F8A024()
{
  unint64_t result = qword_269F433B0;
  if (!qword_269F433B0)
  {
    sub_255F89D5C(255, &qword_269F43390, (uint64_t (*)(uint64_t))sub_255F89DE0, (uint64_t (*)(uint64_t))sub_255F89F94, MEMORY[0x263F19B28]);
    sub_255F8A0E0();
    sub_255F8A2DC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F433B0);
  }
  return result;
}

unint64_t sub_255F8A0E0()
{
  unint64_t result = qword_269F433B8;
  if (!qword_269F433B8)
  {
    sub_255F89DE0();
    sub_255F8A158();
    sub_255F8A254();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F433B8);
  }
  return result;
}

unint64_t sub_255F8A158()
{
  unint64_t result = qword_269F433C0;
  if (!qword_269F433C0)
  {
    sub_255F89E78();
    sub_255F8A200();
    sub_255F89BB8(&qword_269F42F30, (void (*)(uint64_t))sub_255F72C18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F433C0);
  }
  return result;
}

unint64_t sub_255F8A200()
{
  unint64_t result = qword_269F433C8;
  if (!qword_269F433C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F433C8);
  }
  return result;
}

unint64_t sub_255F8A254()
{
  unint64_t result = qword_269F43298;
  if (!qword_269F43298)
  {
    sub_255F89ED8(255, (unint64_t *)&qword_269F43280, (uint64_t (*)(uint64_t))sub_255F89F3C, MEMORY[0x263F1A418]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43298);
  }
  return result;
}

unint64_t sub_255F8A2DC()
{
  unint64_t result = qword_269F433D0;
  if (!qword_269F433D0)
  {
    sub_255F89F94();
    sub_255F8A354();
    sub_255F8A254();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F433D0);
  }
  return result;
}

unint64_t sub_255F8A354()
{
  unint64_t result = qword_269F433D8;
  if (!qword_269F433D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F433D8);
  }
  return result;
}

uint64_t sub_255F8A3A8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_255F8A408(uint64_t a1, uint64_t a2)
{
  sub_255F89D5C(0, &qword_269F43380, (uint64_t (*)(uint64_t))sub_255F89C28, (uint64_t (*)(uint64_t))sub_255F89CB4, MEMORY[0x263F18E28]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL sub_255F8A4B0(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a2;
  uint64_t v3 = sub_256176778();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v18 - v8, a1, v3);
  unint64_t v11 = *(uint64_t (**)(char *, uint64_t))(v4 + 88);
  int v12 = v11(v9, v3);
  unint64_t v13 = 0;
  int v14 = *MEMORY[0x263F199C0];
  if (v12 != *MEMORY[0x263F199C0])
  {
    if (v12 == *MEMORY[0x263F199F0])
    {
      unint64_t v13 = 1;
      goto LABEL_24;
    }
    if (v12 == *MEMORY[0x263F199F8])
    {
      unint64_t v13 = 2;
      goto LABEL_24;
    }
    if (v12 == *MEMORY[0x263F199E8]) {
      goto LABEL_7;
    }
    if (v12 == *MEMORY[0x263F199B8])
    {
      unint64_t v13 = 4;
    }
    else if (v12 == *MEMORY[0x263F199C8])
    {
      unint64_t v13 = 5;
    }
    else if (v12 == *MEMORY[0x263F199A0])
    {
      unint64_t v13 = 6;
    }
    else if (v12 == *MEMORY[0x263F199D8])
    {
      unint64_t v13 = 7;
    }
    else if (v12 == *MEMORY[0x263F199D0])
    {
      unint64_t v13 = 8;
    }
    else if (v12 == *MEMORY[0x263F199E0])
    {
      unint64_t v13 = 9;
    }
    else if (v12 == *MEMORY[0x263F199A8])
    {
      unint64_t v13 = 10;
    }
    else
    {
      if (v12 != *MEMORY[0x263F199B0])
      {
        (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
LABEL_7:
        unint64_t v13 = 3;
        goto LABEL_24;
      }
      unint64_t v13 = 11;
    }
  }
LABEL_24:
  v10(v7, v19, v3);
  int v15 = v11(v7, v3);
  if (v15 == v14)
  {
    unint64_t v16 = 0;
  }
  else if (v15 == *MEMORY[0x263F199F0])
  {
    unint64_t v16 = 1;
  }
  else if (v15 == *MEMORY[0x263F199F8])
  {
    unint64_t v16 = 2;
  }
  else
  {
    if (v15 != *MEMORY[0x263F199E8])
    {
      if (v15 == *MEMORY[0x263F199B8])
      {
        unint64_t v16 = 4;
        return v13 >= v16;
      }
      if (v15 == *MEMORY[0x263F199C8])
      {
        unint64_t v16 = 5;
        return v13 >= v16;
      }
      if (v15 == *MEMORY[0x263F199A0])
      {
        unint64_t v16 = 6;
        return v13 >= v16;
      }
      if (v15 == *MEMORY[0x263F199D8])
      {
        unint64_t v16 = 7;
        return v13 >= v16;
      }
      if (v15 == *MEMORY[0x263F199D0])
      {
        unint64_t v16 = 8;
        return v13 >= v16;
      }
      if (v15 == *MEMORY[0x263F199E0])
      {
        unint64_t v16 = 9;
        return v13 >= v16;
      }
      if (v15 == *MEMORY[0x263F199A8])
      {
        unint64_t v16 = 10;
        return v13 >= v16;
      }
      if (v15 == *MEMORY[0x263F199B0])
      {
        unint64_t v16 = 11;
        return v13 >= v16;
      }
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    }
    unint64_t v16 = 3;
  }
  return v13 >= v16;
}

uint64_t sub_255F8A8D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_255F8A938(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_255F8A9A4()
{
  unint64_t result = qword_269F433F0;
  if (!qword_269F433F0)
  {
    sub_255F89D5C(255, &qword_269F43380, (uint64_t (*)(uint64_t))sub_255F89C28, (uint64_t (*)(uint64_t))sub_255F89CB4, MEMORY[0x263F18E28]);
    sub_255F8AA90();
    sub_255F89BB8(&qword_269F43408, (void (*)(uint64_t))sub_255F89CB4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F433F0);
  }
  return result;
}

unint64_t sub_255F8AA90()
{
  unint64_t result = qword_269F433F8;
  if (!qword_269F433F8)
  {
    sub_255F89C28(255);
    sub_255F8AB08();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F433F8);
  }
  return result;
}

unint64_t sub_255F8AB08()
{
  unint64_t result = qword_269F43400;
  if (!qword_269F43400)
  {
    sub_255F89C00(255);
    sub_255F89A5C();
    sub_255F89BB8((unint64_t *)&qword_269F43368, (void (*)(uint64_t))sub_255F89A5C);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43400);
  }
  return result;
}

void *sub_255F8ABF4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    uint64_t v9 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    sub_255F970B0(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, v3, v7);
    }
    else
    {
      *a1 = *v3;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = *(int *)(v6 + 20);
    unint64_t v11 = (void *)((char *)a1 + v10);
    int v12 = (void *)((char *)v3 + v10);
    sub_255F970B0(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    uint64_t v143 = a1;
    uint64_t v145 = v6;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_256176AA8();
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v147 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
      uint64_t v144 = v14;
      if (v147((char *)v12, 1, v13))
      {
        sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
      unint64_t v16 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v17 = v16[5];
      uint64_t v18 = (char *)v11 + v17;
      uint64_t v19 = (char *)v12 + v17;
      uint64_t v20 = sub_256176158();
      uint64_t v21 = (void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
      long long v146 = *v21;
      (*v21)(v18, v19, v20);
      *((unsigned char *)v11 + v16[6]) = *((unsigned char *)v12 + v16[6]);
      uint64_t v22 = v16[7];
      uint64_t v23 = (char *)v11 + v22;
      char v24 = (char *)v12 + v22;
      uint64_t v25 = sub_256175D98();
      uint64_t v141 = *(void (**)(char *, char *))(*(void *)(v25 - 8) + 16);
      uint64_t v142 = v25;
      v141(v23, v24);
      uint64_t v26 = v16[8];
      uint64_t v27 = (char *)v11 + v26;
      uint64_t v28 = (char *)v12 + v26;
      if (v147((char *)v12 + v26, 1, v13))
      {
        sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v27, v28, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v144 + 56))(v27, 0, 1, v13);
      }
      uint64_t v30 = _s6StylesV8TimelineVMa(0);
      v146(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v20);
      uint64_t v31 = v16[9];
      uint64_t v32 = (char *)v11 + v31;
      uint64_t v33 = (char *)v12 + v31;
      uint64_t v34 = v3;
      if (v147((char *)v12 + v31, 1, v13))
      {
        sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v32, v33, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v144 + 56))(v32, 0, 1, v13);
      }
      uint64_t v36 = _s6StylesV6NoDataVMa(0);
      v146(&v32[*(int *)(v36 + 20)], &v33[*(int *)(v36 + 20)], v20);
      v32[*(int *)(v36 + 24)] = v33[*(int *)(v36 + 24)];
      uint64_t v37 = v16[10];
      uint64_t v38 = (char *)v11 + v37;
      uint64_t v39 = (char *)v12 + v37;
      if (v147((char *)v12 + v37, 1, v13))
      {
        sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v38, v39, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v144 + 56))(v38, 0, 1, v13);
      }
      uint64_t v41 = _s6StylesV11PlaceholderVMa(0);
      v146(&v38[*(int *)(v41 + 20)], &v39[*(int *)(v41 + 20)], v20);
      uint64_t v42 = v16[11];
      char v43 = (char *)v11 + v42;
      char v44 = (char *)v12 + v42;
      if (v147((char *)v12 + v42, 1, v13))
      {
        sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v43, v44, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v144 + 56))(v43, 0, 1, v13);
      }
      uint64_t v46 = _s6StylesV6SymbolVMa(0);
      v146(&v43[*(int *)(v46 + 20)], &v44[*(int *)(v46 + 20)], v20);
      uint64_t v47 = v16[12];
      uint64_t v48 = (char *)v11 + v47;
      uint64_t v49 = (char *)v12 + v47;
      if (v147((char *)v12 + v47, 1, v13))
      {
        sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v48, v49, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v144 + 56))(v48, 0, 1, v13);
      }
      uint64_t v51 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v146(&v48[v51[5]], &v49[v51[5]], v20);
      v48[v51[6]] = v49[v51[6]];
      ((void (*)(char *, char *, uint64_t))v141)(&v48[v51[7]], &v49[v51[7]], v142);
      uint64_t v52 = v16[13];
      uint64_t v53 = (char *)v11 + v52;
      uint64_t v54 = (char *)v12 + v52;
      if (v147((char *)v12 + v52, 1, v13))
      {
        sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v53, v54, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v144 + 56))(v53, 0, 1, v13);
      }
      uint64_t v56 = _s6StylesV5EmptyVMa(0);
      v146(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v20);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      uint64_t v57 = v16[14];
      uint64_t v58 = (char *)v11 + v57;
      uint64_t v59 = (char *)v12 + v57;
      if (v147((char *)v12 + v57, 1, v13))
      {
        sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v58, v59, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v144 + 56))(v58, 0, 1, v13);
      }
      uint64_t v61 = _s6StylesV5DailyVMa(0);
      v146(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v20);
      v58[*(int *)(v61 + 24)] = v59[*(int *)(v61 + 24)];
      uint64_t v62 = v16[15];
      uint64_t v63 = (char *)v11 + v62;
      uint64_t v64 = (char *)v12 + v62;
      if (v147((char *)v12 + v62, 1, v13))
      {
        sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v63, v64, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v144 + 56))(v63, 0, 1, v13);
      }
      uint64_t v3 = v34;
      uint64_t v66 = _s6StylesV9MomentaryVMa(0);
      v146(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v20);
      uint64_t v67 = v16[16];
      uint64_t v68 = (char *)v11 + v67;
      uint64_t v69 = (char *)v12 + v67;
      if (v147((char *)v12 + v67, 1, v13))
      {
        sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v68, v69, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v144 + 56))(v68, 0, 1, v13);
      }
      uint64_t v71 = _s6StylesV6HeaderVMa(0);
      v146(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v20);
      uint64_t v72 = v16[17];
      uint64_t v73 = (char *)v11 + v72;
      uint64_t v74 = (char *)v12 + v72;
      if (v147((char *)v12 + v72, 1, v13))
      {
        sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v73, v74, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v144 + 56))(v73, 0, 1, v13);
      }
      uint64_t v76 = _s6StylesV11ChartButtonVMa(0);
      v146(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v20);
      uint64_t v77 = v16[18];
      double v78 = (char *)v11 + v77;
      uint64_t v79 = (char *)v12 + v77;
      if (v147(v79, 1, v13))
      {
        sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v78, v79, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v144 + 56))(v78, 0, 1, v13);
      }
      a1 = v143;
      uint64_t v81 = _s6StylesV15LogButtonFooterVMa(0);
      v146(&v78[*(int *)(v81 + 20)], &v79[*(int *)(v81 + 20)], v20);
      uint64_t v6 = v145;
    }
    else
    {
      *unint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v82 = *(int *)(v6 + 24);
    uint64_t v83 = (char *)a1 + v82;
    uint64_t v148 = v3;
    uint64_t v84 = (char *)v3 + v82;
    *(void *)((char *)a1 + v82) = *(void *)((char *)v3 + v82);
    uint64_t v85 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
    uint64_t v86 = v85[5];
    uint64_t v87 = &v83[v86];
    uint64_t v88 = &v84[v86];
    uint64_t v89 = sub_256177DB8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 16))(v87, v88, v89);
    uint64_t v90 = v85[6];
    uint64_t v91 = &v83[v90];
    uint64_t v92 = &v84[v90];
    uint64_t v93 = *((void *)v92 + 1);
    *(void *)uint64_t v91 = *(void *)v92;
    *((void *)v91 + 1) = v93;
    uint64_t v94 = v85[7];
    int v95 = &v83[v94];
    uint64_t v96 = &v84[v94];
    uint64_t v97 = (int *)_s5EntryVMa();
    uint64_t v98 = *((void *)v97 - 1);
    uint64_t v99 = *(unsigned int (**)(char *, uint64_t, int *))(v98 + 48);
    swift_bridgeObjectRetain();
    if (v99(v96, 1, v97))
    {
      sub_255F970B0(0, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
      memcpy(v95, v96, *(void *)(*(void *)(v100 - 8) + 64));
    }
    else
    {
      uint64_t v101 = sub_2561758A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 16))(v95, v96, v101);
      uint64_t v102 = v97[5];
      uint64_t v103 = &v95[v102];
      uint64_t v104 = &v96[v102];
      uint64_t v105 = *((void *)v104 + 1);
      *(void *)uint64_t v103 = *(void *)v104;
      *((void *)v103 + 1) = v105;
      uint64_t v106 = v97[6];
      uint64_t v107 = &v95[v106];
      uint64_t v108 = &v96[v106];
      uint64_t v109 = *((void *)v108 + 1);
      *(void *)uint64_t v107 = *(void *)v108;
      *((void *)v107 + 1) = v109;
      uint64_t v110 = v97[7];
      uint64_t v111 = &v95[v110];
      uint64_t v112 = &v96[v110];
      uint64_t v113 = *((void *)v112 + 1);
      *(void *)uint64_t v111 = *(void *)v112;
      *((void *)v111 + 1) = v113;
      uint64_t v114 = v97[8];
      uint64_t v115 = &v95[v114];
      uint64_t v116 = &v96[v114];
      uint64_t v117 = *((void *)v116 + 1);
      *(void *)uint64_t v115 = *(void *)v116;
      *((void *)v115 + 1) = v117;
      *(void *)&v95[v97[9]] = *(void *)&v96[v97[9]];
      uint64_t v118 = *(void (**)(char *, void, uint64_t, int *))(v98 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v118(v95, 0, 1, v97);
    }
    uint64_t v9 = v143;
    *(void *)&v83[v85[8]] = *(void *)&v84[v85[8]];
    *(void *)&v83[v85[9]] = *(void *)&v84[v85[9]];
    uint64_t v119 = *(int *)(v145 + 28);
    uint64_t v120 = (char *)v143 + v119;
    uint64_t v121 = (char *)v148 + v119;
    uint64_t v122 = sub_2561758A8();
    uint64_t v123 = *(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v123(v120, v121, v122);
    uint64_t v124 = v97[5];
    uint64_t v125 = &v120[v124];
    uint64_t v126 = &v121[v124];
    uint64_t v127 = *((void *)v126 + 1);
    *(void *)uint64_t v125 = *(void *)v126;
    *((void *)v125 + 1) = v127;
    uint64_t v128 = v97[6];
    uint64_t v129 = &v120[v128];
    uint64_t v130 = &v121[v128];
    uint64_t v131 = *((void *)v130 + 1);
    *(void *)uint64_t v129 = *(void *)v130;
    *((void *)v129 + 1) = v131;
    uint64_t v132 = v97[7];
    uint64_t v133 = &v120[v132];
    uint64_t v134 = &v121[v132];
    uint64_t v135 = *((void *)v134 + 1);
    *(void *)uint64_t v133 = *(void *)v134;
    *((void *)v133 + 1) = v135;
    uint64_t v136 = v97[8];
    uint64_t v137 = &v120[v136];
    uint64_t v138 = &v121[v136];
    uint64_t v139 = *((void *)v138 + 1);
    *(void *)uint64_t v137 = *(void *)v138;
    *((void *)v137 + 1) = v139;
    *(void *)&v120[v97[9]] = *(void *)&v121[v97[9]];
    *(void *)((char *)v143 + *(int *)(v145 + 32)) = *(void *)((char *)v148 + *(int *)(v145 + 32));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v9;
}

uint64_t sub_255F8BDF4(uint64_t a1, int *a2)
{
  sub_255F970B0(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  sub_255F970B0(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v54 = a2;
    uint64_t v55 = a1;
    uint64_t v6 = sub_256176AA8();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    if (!v8(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
    uint64_t v9 = type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v10 = v5 + *(int *)(v9 + 20);
    uint64_t v11 = sub_256176158();
    int v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
    uint64_t v13 = v10;
    uint64_t v14 = (int *)v9;
    v12(v13, v11);
    uint64_t v15 = v5 + *(int *)(v9 + 28);
    uint64_t v16 = sub_256175D98();
    uint64_t v52 = *(void (**)(uint64_t))(*(void *)(v16 - 8) + 8);
    uint64_t v53 = v16;
    v52(v15);
    uint64_t v17 = v5 + v14[8];
    if (!v8(v17, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v17, v6);
    }
    uint64_t v18 = _s6StylesV8TimelineVMa(0);
    v12(v17 + *(int *)(v18 + 20), v11);
    uint64_t v19 = v5 + v14[9];
    if (!v8(v19, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v19, v6);
    }
    uint64_t v20 = _s6StylesV6NoDataVMa(0);
    v12(v19 + *(int *)(v20 + 20), v11);
    uint64_t v21 = v5 + v14[10];
    if (!v8(v21, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v21, v6);
    }
    uint64_t v22 = _s6StylesV11PlaceholderVMa(0);
    v12(v21 + *(int *)(v22 + 20), v11);
    uint64_t v23 = v5 + v14[11];
    if (!v8(v23, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v23, v6);
    }
    uint64_t v24 = _s6StylesV6SymbolVMa(0);
    v12(v23 + *(int *)(v24 + 20), v11);
    uint64_t v25 = v5 + v14[12];
    uint64_t v56 = v14;
    if (!v8(v25, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v25, v6);
    }
    uint64_t v26 = v7;
    uint64_t v27 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v12(v25 + *(int *)(v27 + 20), v11);
    uint64_t v28 = *(int *)(v27 + 28);
    uint64_t v29 = v26;
    ((void (*)(uint64_t, uint64_t))v52)(v25 + v28, v53);
    uint64_t v30 = v5 + v56[13];
    if (!v8(v30, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v30, v6);
    }
    uint64_t v31 = _s6StylesV5EmptyVMa(0);
    v12(v30 + *(int *)(v31 + 20), v11);
    uint64_t v32 = v5 + v56[14];
    if (!v8(v32, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32, v6);
    }
    uint64_t v33 = _s6StylesV5DailyVMa(0);
    v12(v32 + *(int *)(v33 + 20), v11);
    uint64_t v34 = v5 + v56[15];
    if (!v8(v34, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v34, v6);
    }
    uint64_t v35 = _s6StylesV9MomentaryVMa(0);
    v12(v34 + *(int *)(v35 + 20), v11);
    uint64_t v36 = v5 + v56[16];
    if (!v8(v36, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v36, v6);
    }
    uint64_t v37 = _s6StylesV6HeaderVMa(0);
    v12(v36 + *(int *)(v37 + 20), v11);
    uint64_t v38 = v5 + v56[17];
    if (!v8(v38, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v38, v6);
    }
    uint64_t v39 = _s6StylesV11ChartButtonVMa(0);
    v12(v38 + *(int *)(v39 + 20), v11);
    uint64_t v40 = v5 + v56[18];
    if (!v8(v40, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v40, v6);
    }
    uint64_t v41 = _s6StylesV15LogButtonFooterVMa(0);
    v12(v40 + *(int *)(v41 + 20), v11);
    a2 = v54;
    a1 = v55;
  }
  else
  {
    swift_release();
  }
  uint64_t v42 = a1 + a2[6];
  uint64_t v43 = type metadata accessor for StateOfMindTimeline.DaySummary();
  uint64_t v44 = v42 + *(int *)(v43 + 20);
  uint64_t v45 = sub_256177DB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v44, v45);
  swift_bridgeObjectRelease();
  uint64_t v46 = v42 + *(int *)(v43 + 28);
  uint64_t v47 = _s5EntryVMa();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 48))(v46, 1, v47))
  {
    uint64_t v48 = sub_2561758A8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8))(v46, v48);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v49 = a1 + a2[7];
  uint64_t v50 = sub_2561758A8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v50 - 8) + 8))(v49, v50);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_255F8C6A0(void *a1, void *a2, uint64_t a3)
{
  sub_255F970B0(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256175D98();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_255F970B0(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  uint64_t v140 = a1;
  uint64_t v141 = a3;
  uint64_t v144 = a2;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_256176AA8();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v143 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    uint64_t v142 = v11;
    if (v143((char *)v9, 1, v10))
    {
      sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v13 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v14 = v13[5];
    uint64_t v15 = (char *)v8 + v14;
    uint64_t v16 = (char *)v9 + v14;
    uint64_t v17 = sub_256176158();
    uint64_t v18 = (void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
    uint64_t v145 = *v18;
    (*v18)(v15, v16, v17);
    *((unsigned char *)v8 + v13[6]) = *((unsigned char *)v9 + v13[6]);
    uint64_t v19 = v13[7];
    uint64_t v20 = (char *)v8 + v19;
    uint64_t v21 = (char *)v9 + v19;
    uint64_t v22 = sub_256175D98();
    uint64_t v138 = *(void (**)(char *, char *))(*(void *)(v22 - 8) + 16);
    uint64_t v139 = v22;
    v138(v20, v21);
    uint64_t v23 = v13[8];
    uint64_t v24 = (char *)v8 + v23;
    uint64_t v25 = (char *)v9 + v23;
    uint64_t v26 = v143;
    if (v143((char *)v9 + v23, 1, v10))
    {
      sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v24, v25, v10);
      uint64_t v26 = v143;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v142 + 56))(v24, 0, 1, v10);
    }
    uint64_t v28 = _s6StylesV8TimelineVMa(0);
    v145(&v24[*(int *)(v28 + 20)], &v25[*(int *)(v28 + 20)], v17);
    uint64_t v29 = v13[9];
    uint64_t v30 = (char *)v8 + v29;
    uint64_t v31 = (char *)v9 + v29;
    if (v26((char *)v9 + v29, 1, v10))
    {
      sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v30, v31, v10);
      uint64_t v26 = v143;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v142 + 56))(v30, 0, 1, v10);
    }
    uint64_t v33 = _s6StylesV6NoDataVMa(0);
    v145(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v17);
    v30[*(int *)(v33 + 24)] = v31[*(int *)(v33 + 24)];
    uint64_t v34 = v13[10];
    uint64_t v35 = (char *)v8 + v34;
    uint64_t v36 = (char *)v9 + v34;
    if (v26((char *)v9 + v34, 1, v10))
    {
      sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v35, v36, v10);
      uint64_t v26 = v143;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v142 + 56))(v35, 0, 1, v10);
    }
    uint64_t v38 = _s6StylesV11PlaceholderVMa(0);
    v145(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v17);
    uint64_t v39 = v13[11];
    uint64_t v40 = (char *)v8 + v39;
    uint64_t v41 = (char *)v9 + v39;
    if (v26((char *)v9 + v39, 1, v10))
    {
      sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v40, v41, v10);
      uint64_t v26 = v143;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v142 + 56))(v40, 0, 1, v10);
    }
    uint64_t v43 = _s6StylesV6SymbolVMa(0);
    v145(&v40[*(int *)(v43 + 20)], &v41[*(int *)(v43 + 20)], v17);
    uint64_t v44 = v13[12];
    uint64_t v45 = (char *)v8 + v44;
    uint64_t v46 = (char *)v9 + v44;
    if (v26((char *)v9 + v44, 1, v10))
    {
      sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v45, v46, v10);
      uint64_t v26 = v143;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v142 + 56))(v45, 0, 1, v10);
    }
    uint64_t v48 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v145(&v45[v48[5]], &v46[v48[5]], v17);
    v45[v48[6]] = v46[v48[6]];
    ((void (*)(char *, char *, uint64_t))v138)(&v45[v48[7]], &v46[v48[7]], v139);
    uint64_t v49 = v13[13];
    uint64_t v50 = (char *)v8 + v49;
    uint64_t v51 = (char *)v9 + v49;
    if (v26((char *)v9 + v49, 1, v10))
    {
      sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v50, v51, v10);
      uint64_t v26 = v143;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v142 + 56))(v50, 0, 1, v10);
    }
    uint64_t v53 = _s6StylesV5EmptyVMa(0);
    v145(&v50[*(int *)(v53 + 20)], &v51[*(int *)(v53 + 20)], v17);
    v50[*(int *)(v53 + 24)] = v51[*(int *)(v53 + 24)];
    uint64_t v54 = v13[14];
    uint64_t v55 = (char *)v8 + v54;
    uint64_t v56 = (char *)v9 + v54;
    if (v26((char *)v9 + v54, 1, v10))
    {
      sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v55, v56, v10);
      uint64_t v26 = v143;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v142 + 56))(v55, 0, 1, v10);
    }
    uint64_t v58 = _s6StylesV5DailyVMa(0);
    v145(&v55[*(int *)(v58 + 20)], &v56[*(int *)(v58 + 20)], v17);
    v55[*(int *)(v58 + 24)] = v56[*(int *)(v58 + 24)];
    uint64_t v59 = v13[15];
    uint64_t v60 = (char *)v8 + v59;
    uint64_t v61 = (char *)v9 + v59;
    if (v26((char *)v9 + v59, 1, v10))
    {
      sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v60, v61, v10);
      uint64_t v26 = v143;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v142 + 56))(v60, 0, 1, v10);
    }
    a2 = v144;
    uint64_t v63 = _s6StylesV9MomentaryVMa(0);
    v145(&v60[*(int *)(v63 + 20)], &v61[*(int *)(v63 + 20)], v17);
    uint64_t v64 = v13[16];
    uint64_t v65 = (char *)v8 + v64;
    uint64_t v66 = (char *)v9 + v64;
    if (v26((char *)v9 + v64, 1, v10))
    {
      sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v65, v66, v10);
      uint64_t v26 = v143;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v142 + 56))(v65, 0, 1, v10);
    }
    uint64_t v68 = _s6StylesV6HeaderVMa(0);
    v145(&v65[*(int *)(v68 + 20)], &v66[*(int *)(v68 + 20)], v17);
    uint64_t v69 = v13[17];
    uint64_t v70 = (char *)v8 + v69;
    uint64_t v71 = (char *)v9 + v69;
    if (v26((char *)v9 + v69, 1, v10))
    {
      sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v70, v71, v10);
      uint64_t v26 = v143;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v142 + 56))(v70, 0, 1, v10);
    }
    uint64_t v73 = _s6StylesV11ChartButtonVMa(0);
    v145(&v70[*(int *)(v73 + 20)], &v71[*(int *)(v73 + 20)], v17);
    uint64_t v74 = v13[18];
    uint64_t v75 = (char *)v8 + v74;
    uint64_t v76 = (char *)v9 + v74;
    if (v26((char *)v9 + v74, 1, v10))
    {
      sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v75, v76, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v142 + 56))(v75, 0, 1, v10);
    }
    a1 = v140;
    uint64_t v78 = _s6StylesV15LogButtonFooterVMa(0);
    v145(&v75[*(int *)(v78 + 20)], &v76[*(int *)(v78 + 20)], v17);
    a3 = v141;
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v79 = *(int *)(a3 + 24);
  uint64_t v80 = (char *)a1 + v79;
  uint64_t v81 = (char *)a2 + v79;
  *(void *)((char *)a1 + v79) = *(void *)((char *)a2 + v79);
  uint64_t v82 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  uint64_t v83 = v82[5];
  uint64_t v84 = &v80[v83];
  uint64_t v85 = &v81[v83];
  uint64_t v86 = sub_256177DB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16))(v84, v85, v86);
  uint64_t v87 = v82[6];
  uint64_t v88 = &v80[v87];
  uint64_t v89 = &v81[v87];
  uint64_t v90 = *((void *)v89 + 1);
  *(void *)uint64_t v88 = *(void *)v89;
  *((void *)v88 + 1) = v90;
  uint64_t v91 = v82[7];
  uint64_t v92 = &v80[v91];
  uint64_t v93 = &v81[v91];
  uint64_t v94 = (int *)_s5EntryVMa();
  uint64_t v95 = *((void *)v94 - 1);
  uint64_t v96 = *(unsigned int (**)(char *, uint64_t, int *))(v95 + 48);
  swift_bridgeObjectRetain();
  if (v96(v93, 1, v94))
  {
    sub_255F970B0(0, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
    memcpy(v92, v93, *(void *)(*(void *)(v97 - 8) + 64));
  }
  else
  {
    uint64_t v98 = sub_2561758A8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 16))(v92, v93, v98);
    uint64_t v99 = v94[5];
    uint64_t v100 = &v92[v99];
    uint64_t v101 = &v93[v99];
    uint64_t v102 = *((void *)v101 + 1);
    *(void *)uint64_t v100 = *(void *)v101;
    *((void *)v100 + 1) = v102;
    uint64_t v103 = v94[6];
    uint64_t v104 = &v92[v103];
    uint64_t v105 = &v93[v103];
    uint64_t v106 = *((void *)v105 + 1);
    *(void *)uint64_t v104 = *(void *)v105;
    *((void *)v104 + 1) = v106;
    uint64_t v107 = v94[7];
    uint64_t v108 = &v92[v107];
    uint64_t v109 = &v93[v107];
    uint64_t v110 = *((void *)v109 + 1);
    *(void *)uint64_t v108 = *(void *)v109;
    *((void *)v108 + 1) = v110;
    uint64_t v111 = v94[8];
    uint64_t v112 = &v92[v111];
    uint64_t v113 = &v93[v111];
    uint64_t v114 = *((void *)v113 + 1);
    *(void *)uint64_t v112 = *(void *)v113;
    *((void *)v112 + 1) = v114;
    *(void *)&v92[v94[9]] = *(void *)&v93[v94[9]];
    uint64_t v115 = *(void (**)(char *, void, uint64_t, int *))(v95 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v115(v92, 0, 1, v94);
  }
  *(void *)&v80[v82[8]] = *(void *)&v81[v82[8]];
  *(void *)&v80[v82[9]] = *(void *)&v81[v82[9]];
  uint64_t v116 = *(int *)(v141 + 28);
  uint64_t v117 = (char *)v140 + v116;
  uint64_t v118 = (char *)v144 + v116;
  uint64_t v119 = sub_2561758A8();
  uint64_t v120 = *(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v120(v117, v118, v119);
  uint64_t v121 = v94[5];
  uint64_t v122 = &v117[v121];
  uint64_t v123 = &v118[v121];
  uint64_t v124 = *((void *)v123 + 1);
  *(void *)uint64_t v122 = *(void *)v123;
  *((void *)v122 + 1) = v124;
  uint64_t v125 = v94[6];
  uint64_t v126 = &v117[v125];
  uint64_t v127 = &v118[v125];
  uint64_t v128 = *((void *)v127 + 1);
  *(void *)uint64_t v126 = *(void *)v127;
  *((void *)v126 + 1) = v128;
  uint64_t v129 = v94[7];
  uint64_t v130 = &v117[v129];
  uint64_t v131 = &v118[v129];
  uint64_t v132 = *((void *)v131 + 1);
  *(void *)uint64_t v130 = *(void *)v131;
  *((void *)v130 + 1) = v132;
  uint64_t v133 = v94[8];
  uint64_t v134 = &v117[v133];
  uint64_t v135 = &v118[v133];
  uint64_t v136 = *((void *)v135 + 1);
  *(void *)uint64_t v134 = *(void *)v135;
  *((void *)v134 + 1) = v136;
  *(void *)&v117[v94[9]] = *(void *)&v118[v94[9]];
  *(void *)((char *)v140 + *(int *)(v141 + 32)) = *(void *)((char *)v144 + *(int *)(v141 + 32));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v140;
}

void *sub_255F8D874(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  if (a1 != a2)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_255F8EC0C((uint64_t)a1, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    sub_255F970B0(0, &qword_269F47D00, v6, v7);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(v3 + 20);
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_255F8EC0C((uint64_t)a1 + v9, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    sub_255F970B0(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, v12);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_256176AA8();
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v152 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
      if (v152((char *)v11, 1, v13))
      {
        sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v10, v11, v13);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v13);
      }
      uint64_t v16 = v14;
      uint64_t v17 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v18 = v17[5];
      uint64_t v19 = (char *)v10 + v18;
      uint64_t v20 = (char *)v11 + v18;
      uint64_t v21 = sub_256176158();
      uint64_t v150 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
      v150(v19, v20, v21);
      *((unsigned char *)v10 + v17[6]) = *((unsigned char *)v11 + v17[6]);
      uint64_t v22 = v17[7];
      uint64_t v23 = (char *)v10 + v22;
      uint64_t v24 = (char *)v11 + v22;
      uint64_t v25 = sub_256175D98();
      long long v146 = *(void (**)(char *, char *))(*(void *)(v25 - 8) + 16);
      uint64_t v147 = v25;
      v146(v23, v24);
      uint64_t v26 = v17[8];
      uint64_t v27 = (char *)v10 + v26;
      uint64_t v28 = (char *)v11 + v26;
      if (v152((char *)v11 + v26, 1, v13))
      {
        sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v27, v28, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v27, 0, 1, v13);
      }
      uint64_t v30 = _s6StylesV8TimelineVMa(0);
      v150(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v21);
      uint64_t v31 = v17[9];
      uint64_t v32 = (char *)v10 + v31;
      uint64_t v33 = (char *)v11 + v31;
      uint64_t v148 = v16;
      if (v152((char *)v11 + v31, 1, v13))
      {
        sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v32, v33, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v32, 0, 1, v13);
      }
      uint64_t v35 = _s6StylesV6NoDataVMa(0);
      v150(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v21);
      v32[*(int *)(v35 + 24)] = v33[*(int *)(v35 + 24)];
      uint64_t v36 = v17[10];
      uint64_t v37 = (char *)v10 + v36;
      uint64_t v38 = (char *)v11 + v36;
      if (v152((char *)v11 + v36, 1, v13))
      {
        sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
        uint64_t v40 = v148;
      }
      else
      {
        uint64_t v40 = v148;
        (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v37, v38, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v148 + 56))(v37, 0, 1, v13);
      }
      uint64_t v41 = _s6StylesV11PlaceholderVMa(0);
      v150(&v37[*(int *)(v41 + 20)], &v38[*(int *)(v41 + 20)], v21);
      uint64_t v42 = v17[11];
      uint64_t v43 = (char *)v10 + v42;
      uint64_t v44 = (char *)v11 + v42;
      if (v152((char *)v11 + v42, 1, v13))
      {
        sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v43, v44, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v43, 0, 1, v13);
      }
      uint64_t v46 = _s6StylesV6SymbolVMa(0);
      v150(&v43[*(int *)(v46 + 20)], &v44[*(int *)(v46 + 20)], v21);
      uint64_t v47 = v17[12];
      uint64_t v48 = (char *)v10 + v47;
      uint64_t v49 = (char *)v11 + v47;
      if (v152((char *)v11 + v47, 1, v13))
      {
        sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v48, v49, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v48, 0, 1, v13);
      }
      uint64_t v51 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v150(&v48[v51[5]], &v49[v51[5]], v21);
      v48[v51[6]] = v49[v51[6]];
      ((void (*)(char *, char *, uint64_t))v146)(&v48[v51[7]], &v49[v51[7]], v147);
      uint64_t v52 = v17[13];
      uint64_t v53 = (char *)v10 + v52;
      uint64_t v54 = (char *)v11 + v52;
      if (v152((char *)v11 + v52, 1, v13))
      {
        sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v53, v54, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v148 + 56))(v53, 0, 1, v13);
      }
      uint64_t v56 = _s6StylesV5EmptyVMa(0);
      v150(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v21);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      uint64_t v57 = v17[14];
      uint64_t v58 = (char *)v10 + v57;
      uint64_t v59 = (char *)v11 + v57;
      if (v152((char *)v11 + v57, 1, v13))
      {
        sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v58, v59, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v148 + 56))(v58, 0, 1, v13);
      }
      uint64_t v61 = _s6StylesV5DailyVMa(0);
      v150(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v21);
      v58[*(int *)(v61 + 24)] = v59[*(int *)(v61 + 24)];
      uint64_t v62 = v17[15];
      uint64_t v63 = (char *)v10 + v62;
      uint64_t v64 = (char *)v11 + v62;
      if (v152((char *)v11 + v62, 1, v13))
      {
        sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
        uint64_t v66 = v148;
      }
      else
      {
        uint64_t v66 = v148;
        (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v63, v64, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v148 + 56))(v63, 0, 1, v13);
      }
      uint64_t v67 = _s6StylesV9MomentaryVMa(0);
      v150(&v63[*(int *)(v67 + 20)], &v64[*(int *)(v67 + 20)], v21);
      uint64_t v68 = v17[16];
      uint64_t v69 = (char *)v10 + v68;
      uint64_t v70 = (char *)v11 + v68;
      if (v152((char *)v11 + v68, 1, v13))
      {
        sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v69, v70, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v69, 0, 1, v13);
      }
      uint64_t v72 = _s6StylesV6HeaderVMa(0);
      v150(&v69[*(int *)(v72 + 20)], &v70[*(int *)(v72 + 20)], v21);
      uint64_t v73 = v17[17];
      uint64_t v74 = (char *)v10 + v73;
      uint64_t v75 = (char *)v11 + v73;
      if (v152((char *)v11 + v73, 1, v13))
      {
        sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v74, v75, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v74, 0, 1, v13);
      }
      uint64_t v77 = _s6StylesV11ChartButtonVMa(0);
      v150(&v74[*(int *)(v77 + 20)], &v75[*(int *)(v77 + 20)], v21);
      uint64_t v78 = v17[18];
      uint64_t v79 = (char *)v10 + v78;
      uint64_t v80 = (char *)v11 + v78;
      if (v152(v80, 1, v13))
      {
        sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v79, v80, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v79, 0, 1, v13);
      }
      uint64_t v3 = a3;
      uint64_t v82 = _s6StylesV15LogButtonFooterVMa(0);
      v150(&v79[*(int *)(v82 + 20)], &v80[*(int *)(v82 + 20)], v21);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v83 = *(int *)(v3 + 24);
  v151 = a1;
  uint64_t v153 = a2;
  uint64_t v84 = (char *)a1 + v83;
  uint64_t v85 = (void *)((char *)a2 + v83);
  *(void *)((char *)a1 + v83) = *v85;
  uint64_t v86 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  uint64_t v87 = v86[5];
  uint64_t v88 = &v84[v87];
  uint64_t v89 = (char *)v85 + v87;
  uint64_t v90 = sub_256177DB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 24))(v88, v89, v90);
  uint64_t v91 = v86[6];
  uint64_t v92 = &v84[v91];
  uint64_t v93 = (void *)((char *)v85 + v91);
  *(void *)uint64_t v92 = *v93;
  *((void *)v92 + 1) = v93[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v94 = v86[7];
  uint64_t v95 = &v84[v94];
  uint64_t v96 = (char *)v85 + v94;
  uint64_t v97 = (int *)_s5EntryVMa();
  uint64_t v98 = *((void *)v97 - 1);
  uint64_t v99 = *(uint64_t (**)(char *, uint64_t, int *))(v98 + 48);
  LODWORD(v88) = v99(v95, 1, v97);
  int v100 = v99(v96, 1, v97);
  if (!v88)
  {
    if (!v100)
    {
      uint64_t v133 = sub_2561758A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 24))(v95, v96, v133);
      uint64_t v134 = v97[5];
      uint64_t v135 = &v95[v134];
      uint64_t v136 = &v96[v134];
      *(void *)uint64_t v135 = *(void *)v136;
      *((void *)v135 + 1) = *((void *)v136 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v137 = v97[6];
      uint64_t v138 = &v95[v137];
      uint64_t v139 = &v96[v137];
      *(void *)uint64_t v138 = *(void *)v139;
      *((void *)v138 + 1) = *((void *)v139 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v140 = v97[7];
      uint64_t v141 = &v95[v140];
      uint64_t v142 = &v96[v140];
      *(void *)uint64_t v141 = *(void *)v142;
      *((void *)v141 + 1) = *((void *)v142 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v143 = v97[8];
      uint64_t v144 = &v95[v143];
      uint64_t v145 = &v96[v143];
      *(void *)uint64_t v144 = *(void *)v145;
      *((void *)v144 + 1) = *((void *)v145 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v95[v97[9]] = *(void *)&v96[v97[9]];
      goto LABEL_51;
    }
    sub_255F96F80((uint64_t)v95, (uint64_t (*)(void))_s5EntryVMa);
    goto LABEL_50;
  }
  if (v100)
  {
LABEL_50:
    sub_255F970B0(0, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
    memcpy(v95, v96, *(void *)(*(void *)(v115 - 8) + 64));
    goto LABEL_51;
  }
  uint64_t v101 = sub_2561758A8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 16))(v95, v96, v101);
  uint64_t v102 = v97[5];
  uint64_t v103 = &v95[v102];
  uint64_t v104 = &v96[v102];
  *(void *)uint64_t v103 = *(void *)v104;
  *((void *)v103 + 1) = *((void *)v104 + 1);
  uint64_t v105 = v97[6];
  uint64_t v106 = &v95[v105];
  uint64_t v107 = &v96[v105];
  *(void *)uint64_t v106 = *(void *)v107;
  *((void *)v106 + 1) = *((void *)v107 + 1);
  uint64_t v108 = v97[7];
  uint64_t v109 = &v95[v108];
  uint64_t v110 = &v96[v108];
  *(void *)uint64_t v109 = *(void *)v110;
  *((void *)v109 + 1) = *((void *)v110 + 1);
  uint64_t v111 = v97[8];
  uint64_t v112 = &v95[v111];
  uint64_t v113 = &v96[v111];
  *(void *)uint64_t v112 = *(void *)v113;
  *((void *)v112 + 1) = *((void *)v113 + 1);
  *(void *)&v95[v97[9]] = *(void *)&v96[v97[9]];
  uint64_t v114 = *(void (**)(char *, void, uint64_t, int *))(v98 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v114(v95, 0, 1, v97);
LABEL_51:
  *(void *)&v84[v86[8]] = *(void *)((char *)v85 + v86[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v84[v86[9]] = *(void *)((char *)v85 + v86[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v116 = *(int *)(a3 + 28);
  uint64_t v117 = (char *)v151 + v116;
  uint64_t v118 = (char *)v153 + v116;
  uint64_t v119 = sub_2561758A8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 24))(v117, v118, v119);
  uint64_t v120 = v97[5];
  uint64_t v121 = &v117[v120];
  uint64_t v122 = &v118[v120];
  *(void *)uint64_t v121 = *(void *)v122;
  *((void *)v121 + 1) = *((void *)v122 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v123 = v97[6];
  uint64_t v124 = &v117[v123];
  uint64_t v125 = &v118[v123];
  *(void *)uint64_t v124 = *(void *)v125;
  *((void *)v124 + 1) = *((void *)v125 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v126 = v97[7];
  uint64_t v127 = &v117[v126];
  uint64_t v128 = &v118[v126];
  *(void *)uint64_t v127 = *(void *)v128;
  *((void *)v127 + 1) = *((void *)v128 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v129 = v97[8];
  uint64_t v130 = &v117[v129];
  uint64_t v131 = &v118[v129];
  *(void *)uint64_t v130 = *(void *)v131;
  *((void *)v130 + 1) = *((void *)v131 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v117[v97[9]] = *(void *)&v118[v97[9]];
  *(void *)((char *)v151 + *(int *)(a3 + 32)) = *(void *)((char *)v153 + *(int *)(a3 + 32));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v151;
}

uint64_t sub_255F8EC0C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_255F970B0(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

char *sub_255F8EC68(char *a1, char *a2, int *a3)
{
  sub_255F970B0(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  uint64_t v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_256175D98();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  sub_255F970B0(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  uint64_t v13 = v12;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_256176AA8();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v109 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    uint64_t v107 = a1;
    uint64_t v108 = v15;
    uint64_t v106 = a2;
    if (v109(v11, 1, v14))
    {
      sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v10, v11, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
    }
    uint64_t v17 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v18 = v17[5];
    uint64_t v19 = &v10[v18];
    uint64_t v20 = &v11[v18];
    uint64_t v21 = sub_256176158();
    uint64_t v22 = (void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32);
    uint64_t v110 = *v22;
    (*v22)(v19, v20, v21);
    v10[v17[6]] = v11[v17[6]];
    uint64_t v23 = v17[7];
    uint64_t v24 = &v10[v23];
    uint64_t v25 = &v11[v23];
    uint64_t v26 = sub_256175D98();
    uint64_t v103 = *(void (**)(char *, char *))(*(void *)(v26 - 8) + 32);
    uint64_t v104 = v26;
    v103(v24, v25);
    uint64_t v27 = v17[8];
    uint64_t v28 = &v10[v27];
    uint64_t v29 = &v11[v27];
    uint64_t v30 = v109;
    if (v109(&v11[v27], 1, v14))
    {
      sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v28, v29, v14);
      uint64_t v30 = v109;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v28, 0, 1, v14);
    }
    uint64_t v32 = _s6StylesV8TimelineVMa(0);
    v110(&v28[*(int *)(v32 + 20)], &v29[*(int *)(v32 + 20)], v21);
    uint64_t v33 = v17[9];
    uint64_t v34 = &v10[v33];
    uint64_t v35 = &v11[v33];
    uint64_t v105 = a3;
    if (v30(&v11[v33], 1, v14))
    {
      sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v34, v35, v14);
      uint64_t v30 = v109;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v34, 0, 1, v14);
    }
    uint64_t v37 = _s6StylesV6NoDataVMa(0);
    v110(&v34[*(int *)(v37 + 20)], &v35[*(int *)(v37 + 20)], v21);
    v34[*(int *)(v37 + 24)] = v35[*(int *)(v37 + 24)];
    uint64_t v38 = v17[10];
    uint64_t v39 = &v10[v38];
    uint64_t v40 = &v11[v38];
    if (v30(&v11[v38], 1, v14))
    {
      sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v39, v40, v14);
      uint64_t v30 = v109;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v39, 0, 1, v14);
    }
    uint64_t v42 = _s6StylesV11PlaceholderVMa(0);
    v110(&v39[*(int *)(v42 + 20)], &v40[*(int *)(v42 + 20)], v21);
    uint64_t v43 = v17[11];
    uint64_t v44 = &v10[v43];
    uint64_t v45 = &v11[v43];
    if (v30(&v11[v43], 1, v14))
    {
      sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v44, v45, v14);
      uint64_t v30 = v109;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v44, 0, 1, v14);
    }
    uint64_t v47 = _s6StylesV6SymbolVMa(0);
    v110(&v44[*(int *)(v47 + 20)], &v45[*(int *)(v47 + 20)], v21);
    uint64_t v48 = v17[12];
    uint64_t v49 = &v10[v48];
    uint64_t v50 = &v11[v48];
    if (v30(&v11[v48], 1, v14))
    {
      sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v49, v50, v14);
      uint64_t v30 = v109;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v49, 0, 1, v14);
    }
    uint64_t v52 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v110(&v49[v52[5]], &v50[v52[5]], v21);
    v49[v52[6]] = v50[v52[6]];
    ((void (*)(char *, char *, uint64_t))v103)(&v49[v52[7]], &v50[v52[7]], v104);
    uint64_t v53 = v17[13];
    uint64_t v54 = &v10[v53];
    uint64_t v55 = &v11[v53];
    if (v30(&v11[v53], 1, v14))
    {
      sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v54, v55, v14);
      uint64_t v30 = v109;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v54, 0, 1, v14);
    }
    uint64_t v57 = _s6StylesV5EmptyVMa(0);
    v110(&v54[*(int *)(v57 + 20)], &v55[*(int *)(v57 + 20)], v21);
    v54[*(int *)(v57 + 24)] = v55[*(int *)(v57 + 24)];
    uint64_t v58 = v17[14];
    uint64_t v59 = &v10[v58];
    uint64_t v60 = &v11[v58];
    if (v30(&v11[v58], 1, v14))
    {
      sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v59, v60, v14);
      uint64_t v30 = v109;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v59, 0, 1, v14);
    }
    uint64_t v62 = _s6StylesV5DailyVMa(0);
    v110(&v59[*(int *)(v62 + 20)], &v60[*(int *)(v62 + 20)], v21);
    v59[*(int *)(v62 + 24)] = v60[*(int *)(v62 + 24)];
    uint64_t v63 = v17[15];
    uint64_t v64 = &v10[v63];
    uint64_t v65 = &v11[v63];
    if (v30(&v11[v63], 1, v14))
    {
      sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v64, v65, v14);
      uint64_t v30 = v109;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v64, 0, 1, v14);
    }
    a3 = v105;
    uint64_t v67 = _s6StylesV9MomentaryVMa(0);
    v110(&v64[*(int *)(v67 + 20)], &v65[*(int *)(v67 + 20)], v21);
    uint64_t v68 = v17[16];
    uint64_t v69 = &v10[v68];
    uint64_t v70 = &v11[v68];
    if (v30(&v11[v68], 1, v14))
    {
      sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v69, v70, v14);
      uint64_t v30 = v109;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v69, 0, 1, v14);
    }
    uint64_t v72 = _s6StylesV6HeaderVMa(0);
    v110(&v69[*(int *)(v72 + 20)], &v70[*(int *)(v72 + 20)], v21);
    uint64_t v73 = v17[17];
    uint64_t v74 = &v10[v73];
    uint64_t v75 = &v11[v73];
    if (v30(&v11[v73], 1, v14))
    {
      sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v74, v75, v14);
      uint64_t v30 = v109;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v74, 0, 1, v14);
    }
    uint64_t v77 = _s6StylesV11ChartButtonVMa(0);
    v110(&v74[*(int *)(v77 + 20)], &v75[*(int *)(v77 + 20)], v21);
    uint64_t v78 = v17[18];
    uint64_t v79 = &v10[v78];
    uint64_t v80 = &v11[v78];
    if (v30(&v11[v78], 1, v14))
    {
      sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v79, v80, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v79, 0, 1, v14);
    }
    a2 = v106;
    uint64_t v82 = _s6StylesV15LogButtonFooterVMa(0);
    v110(&v79[*(int *)(v82 + 20)], &v80[*(int *)(v82 + 20)], v21);
    swift_storeEnumTagMultiPayload();
    a1 = v107;
  }
  else
  {
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  uint64_t v83 = a3[6];
  uint64_t v84 = &a1[v83];
  uint64_t v85 = &a2[v83];
  *(void *)&a1[v83] = *(void *)&a2[v83];
  uint64_t v86 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  uint64_t v87 = v86[5];
  uint64_t v88 = &v84[v87];
  uint64_t v89 = &v85[v87];
  uint64_t v90 = sub_256177DB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 32))(v88, v89, v90);
  *(_OWORD *)&v84[v86[6]] = *(_OWORD *)&v85[v86[6]];
  uint64_t v91 = v86[7];
  uint64_t v92 = &v84[v91];
  uint64_t v93 = &v85[v91];
  uint64_t v94 = (int *)_s5EntryVMa();
  uint64_t v95 = *((void *)v94 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v95 + 48))(v93, 1, v94))
  {
    sub_255F970B0(0, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
    memcpy(v92, v93, *(void *)(*(void *)(v96 - 8) + 64));
  }
  else
  {
    uint64_t v97 = sub_2561758A8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 32))(v92, v93, v97);
    *(_OWORD *)&v92[v94[5]] = *(_OWORD *)&v93[v94[5]];
    *(_OWORD *)&v92[v94[6]] = *(_OWORD *)&v93[v94[6]];
    *(_OWORD *)&v92[v94[7]] = *(_OWORD *)&v93[v94[7]];
    *(_OWORD *)&v92[v94[8]] = *(_OWORD *)&v93[v94[8]];
    *(void *)&v92[v94[9]] = *(void *)&v93[v94[9]];
    (*(void (**)(char *, void, uint64_t, int *))(v95 + 56))(v92, 0, 1, v94);
  }
  *(void *)&v84[v86[8]] = *(void *)&v85[v86[8]];
  *(void *)&v84[v86[9]] = *(void *)&v85[v86[9]];
  uint64_t v98 = a3[7];
  uint64_t v99 = &a1[v98];
  int v100 = &a2[v98];
  uint64_t v101 = sub_2561758A8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 32))(v99, v100, v101);
  *(_OWORD *)&v99[v94[5]] = *(_OWORD *)&v100[v94[5]];
  *(_OWORD *)&v99[v94[6]] = *(_OWORD *)&v100[v94[6]];
  *(_OWORD *)&v99[v94[7]] = *(_OWORD *)&v100[v94[7]];
  *(_OWORD *)&v99[v94[8]] = *(_OWORD *)&v100[v94[8]];
  *(void *)&v99[v94[9]] = *(void *)&v100[v94[9]];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  return a1;
}

char *sub_255F8FDA0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  if (a1 != a2)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_255F8EC0C((uint64_t)a1, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    sub_255F970B0(0, &qword_269F47D00, v6, v7);
    uint64_t v9 = v8;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_256175D98();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    uint64_t v11 = *(int *)(v3 + 20);
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_255F8EC0C((uint64_t)&a1[v11], &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    sub_255F970B0(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, v14);
    uint64_t v16 = v15;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_256176AA8();
      uint64_t v18 = *(void *)(v17 - 8);
      uint64_t v155 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
      uint64_t v156 = v18;
      if (v155(v13, 1, v17))
      {
        sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v12, v13, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v12, 0, 1, v17);
      }
      uint64_t v20 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v21 = v20[5];
      uint64_t v22 = &v12[v21];
      uint64_t v23 = &v13[v21];
      uint64_t v24 = sub_256176158();
      uint64_t v158 = *(void (**)(char *, char *))(*(void *)(v24 - 8) + 32);
      uint64_t v159 = v24;
      v158(v22, v23);
      v12[v20[6]] = v13[v20[6]];
      uint64_t v25 = v20[7];
      uint64_t v26 = &v12[v25];
      uint64_t v27 = &v13[v25];
      uint64_t v28 = sub_256175D98();
      uint64_t v153 = *(void (**)(char *, char *))(*(void *)(v28 - 8) + 32);
      uint64_t v154 = v28;
      v153(v26, v27);
      uint64_t v29 = v20[8];
      uint64_t v30 = &v12[v29];
      uint64_t v31 = &v13[v29];
      uint64_t v32 = v155;
      if (v155(&v13[v29], 1, v17))
      {
        sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v156 + 32))(v30, v31, v17);
        uint64_t v32 = v155;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v156 + 56))(v30, 0, 1, v17);
      }
      uint64_t v34 = _s6StylesV8TimelineVMa(0);
      ((void (*)(char *, char *, uint64_t))v158)(&v30[*(int *)(v34 + 20)], &v31[*(int *)(v34 + 20)], v159);
      uint64_t v35 = v20[9];
      uint64_t v36 = &v12[v35];
      uint64_t v37 = &v13[v35];
      if (v32(&v13[v35], 1, v17))
      {
        sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v156 + 32))(v36, v37, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v156 + 56))(v36, 0, 1, v17);
      }
      uint64_t v39 = _s6StylesV6NoDataVMa(0);
      ((void (*)(char *, char *, uint64_t))v158)(&v36[*(int *)(v39 + 20)], &v37[*(int *)(v39 + 20)], v159);
      v36[*(int *)(v39 + 24)] = v37[*(int *)(v39 + 24)];
      uint64_t v40 = v20[10];
      uint64_t v41 = &v12[v40];
      uint64_t v42 = &v13[v40];
      if (v32(&v13[v40], 1, v17))
      {
        sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v156 + 32))(v41, v42, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v156 + 56))(v41, 0, 1, v17);
      }
      uint64_t v44 = _s6StylesV11PlaceholderVMa(0);
      ((void (*)(char *, char *, uint64_t))v158)(&v41[*(int *)(v44 + 20)], &v42[*(int *)(v44 + 20)], v159);
      uint64_t v45 = v20[11];
      uint64_t v46 = &v12[v45];
      uint64_t v47 = &v13[v45];
      if (v32(&v13[v45], 1, v17))
      {
        sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v156 + 32))(v46, v47, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v156 + 56))(v46, 0, 1, v17);
      }
      uint64_t v49 = _s6StylesV6SymbolVMa(0);
      ((void (*)(char *, char *, uint64_t))v158)(&v46[*(int *)(v49 + 20)], &v47[*(int *)(v49 + 20)], v159);
      uint64_t v50 = v20[12];
      uint64_t v51 = &v12[v50];
      uint64_t v52 = &v13[v50];
      if (v32(&v13[v50], 1, v17))
      {
        sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v156 + 32))(v51, v52, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v156 + 56))(v51, 0, 1, v17);
      }
      uint64_t v54 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      ((void (*)(char *, char *, uint64_t))v158)(&v51[v54[5]], &v52[v54[5]], v159);
      v51[v54[6]] = v52[v54[6]];
      ((void (*)(char *, char *, uint64_t))v153)(&v51[v54[7]], &v52[v54[7]], v154);
      uint64_t v55 = v20[13];
      uint64_t v56 = &v12[v55];
      uint64_t v57 = &v13[v55];
      if (v32(&v13[v55], 1, v17))
      {
        sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v156 + 32))(v56, v57, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v156 + 56))(v56, 0, 1, v17);
      }
      uint64_t v59 = _s6StylesV5EmptyVMa(0);
      ((void (*)(char *, char *, uint64_t))v158)(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v159);
      v56[*(int *)(v59 + 24)] = v57[*(int *)(v59 + 24)];
      uint64_t v60 = v20[14];
      uint64_t v61 = &v12[v60];
      uint64_t v62 = &v13[v60];
      if (v32(&v13[v60], 1, v17))
      {
        sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v156 + 32))(v61, v62, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v156 + 56))(v61, 0, 1, v17);
      }
      uint64_t v64 = _s6StylesV5DailyVMa(0);
      ((void (*)(char *, char *, uint64_t))v158)(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v159);
      v61[*(int *)(v64 + 24)] = v62[*(int *)(v64 + 24)];
      uint64_t v65 = v20[15];
      uint64_t v66 = &v12[v65];
      uint64_t v67 = &v13[v65];
      if (v32(&v13[v65], 1, v17))
      {
        sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v156 + 32))(v66, v67, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v156 + 56))(v66, 0, 1, v17);
      }
      uint64_t v3 = a3;
      uint64_t v69 = _s6StylesV9MomentaryVMa(0);
      ((void (*)(char *, char *, uint64_t))v158)(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v159);
      uint64_t v70 = v20[16];
      uint64_t v71 = &v12[v70];
      uint64_t v72 = &v13[v70];
      if (v32(&v13[v70], 1, v17))
      {
        sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v156 + 32))(v71, v72, v17);
        uint64_t v32 = v155;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v156 + 56))(v71, 0, 1, v17);
      }
      uint64_t v74 = _s6StylesV6HeaderVMa(0);
      ((void (*)(char *, char *, uint64_t))v158)(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v159);
      uint64_t v75 = v20[17];
      uint64_t v76 = &v12[v75];
      uint64_t v77 = &v13[v75];
      if (v32(&v13[v75], 1, v17))
      {
        sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v156 + 32))(v76, v77, v17);
        uint64_t v32 = v155;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v156 + 56))(v76, 0, 1, v17);
      }
      uint64_t v79 = _s6StylesV11ChartButtonVMa(0);
      ((void (*)(char *, char *, uint64_t))v158)(&v76[*(int *)(v79 + 20)], &v77[*(int *)(v79 + 20)], v159);
      uint64_t v80 = v20[18];
      uint64_t v81 = &v12[v80];
      uint64_t v82 = &v13[v80];
      if (v32(v82, 1, v17))
      {
        sub_255F970B0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v81, v82, *(void *)(*(void *)(v83 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v156 + 32))(v81, v82, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v156 + 56))(v81, 0, 1, v17);
      }
      uint64_t v84 = _s6StylesV15LogButtonFooterVMa(0);
      ((void (*)(char *, char *, uint64_t))v158)(&v81[*(int *)(v84 + 20)], &v82[*(int *)(v84 + 20)], v159);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
  }
  uint64_t v85 = *(int *)(v3 + 24);
  uint64_t v160 = a2;
  v161 = a1;
  uint64_t v86 = &a1[v85];
  uint64_t v87 = &a2[v85];
  *(void *)&a1[v85] = *(void *)&a2[v85];
  uint64_t v88 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  uint64_t v89 = v88[5];
  uint64_t v90 = &v86[v89];
  uint64_t v91 = &v87[v89];
  uint64_t v92 = sub_256177DB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 40))(v90, v91, v92);
  uint64_t v93 = v88[6];
  uint64_t v94 = &v86[v93];
  uint64_t v95 = &v87[v93];
  uint64_t v97 = *(void *)v95;
  uint64_t v96 = *((void *)v95 + 1);
  *(void *)uint64_t v94 = v97;
  *((void *)v94 + 1) = v96;
  swift_bridgeObjectRelease();
  uint64_t v98 = v88[7];
  uint64_t v99 = &v86[v98];
  int v100 = &v87[v98];
  uint64_t v101 = (int *)_s5EntryVMa();
  uint64_t v102 = *((void *)v101 - 1);
  uint64_t v103 = *(uint64_t (**)(char *, uint64_t, int *))(v102 + 48);
  LODWORD(v9__isPlatformVersionAtLeast(2, 18, 1, 0) = v103(v99, 1, v101);
  int v104 = v103(v100, 1, v101);
  if (!v90)
  {
    if (!v104)
    {
      uint64_t v132 = sub_2561758A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v132 - 8) + 40))(v99, v100, v132);
      uint64_t v133 = v101[5];
      uint64_t v134 = &v99[v133];
      uint64_t v135 = &v100[v133];
      uint64_t v137 = *(void *)v135;
      uint64_t v136 = *((void *)v135 + 1);
      *(void *)uint64_t v134 = v137;
      *((void *)v134 + 1) = v136;
      swift_bridgeObjectRelease();
      uint64_t v138 = v101[6];
      uint64_t v139 = &v99[v138];
      uint64_t v140 = &v100[v138];
      uint64_t v142 = *(void *)v140;
      uint64_t v141 = *((void *)v140 + 1);
      *(void *)uint64_t v139 = v142;
      *((void *)v139 + 1) = v141;
      swift_bridgeObjectRelease();
      uint64_t v143 = v101[7];
      uint64_t v144 = &v99[v143];
      uint64_t v145 = &v100[v143];
      uint64_t v147 = *(void *)v145;
      uint64_t v146 = *((void *)v145 + 1);
      *(void *)uint64_t v144 = v147;
      *((void *)v144 + 1) = v146;
      swift_bridgeObjectRelease();
      uint64_t v148 = v101[8];
      uint64_t v149 = &v99[v148];
      uint64_t v150 = &v100[v148];
      uint64_t v152 = *(void *)v150;
      uint64_t v151 = *((void *)v150 + 1);
      *(void *)uint64_t v149 = v152;
      *((void *)v149 + 1) = v151;
      swift_bridgeObjectRelease();
      *(void *)&v99[v101[9]] = *(void *)&v100[v101[9]];
      goto LABEL_50;
    }
    sub_255F96F80((uint64_t)v99, (uint64_t (*)(void))_s5EntryVMa);
    goto LABEL_49;
  }
  if (v104)
  {
LABEL_49:
    sub_255F970B0(0, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
    memcpy(v99, v100, *(void *)(*(void *)(v106 - 8) + 64));
    goto LABEL_50;
  }
  uint64_t v105 = sub_2561758A8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 32))(v99, v100, v105);
  *(_OWORD *)&v99[v101[5]] = *(_OWORD *)&v100[v101[5]];
  *(_OWORD *)&v99[v101[6]] = *(_OWORD *)&v100[v101[6]];
  *(_OWORD *)&v99[v101[7]] = *(_OWORD *)&v100[v101[7]];
  *(_OWORD *)&v99[v101[8]] = *(_OWORD *)&v100[v101[8]];
  *(void *)&v99[v101[9]] = *(void *)&v100[v101[9]];
  (*(void (**)(char *, void, uint64_t, int *))(v102 + 56))(v99, 0, 1, v101);
LABEL_50:
  *(void *)&v86[v88[8]] = *(void *)&v87[v88[8]];
  swift_bridgeObjectRelease();
  *(void *)&v86[v88[9]] = *(void *)&v87[v88[9]];
  swift_bridgeObjectRelease();
  uint64_t v107 = *(int *)(a3 + 28);
  uint64_t v108 = &v161[v107];
  uint64_t v109 = &v160[v107];
  uint64_t v110 = sub_2561758A8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 40))(v108, v109, v110);
  uint64_t v111 = v101[5];
  uint64_t v112 = &v108[v111];
  uint64_t v113 = &v109[v111];
  uint64_t v115 = *(void *)v113;
  uint64_t v114 = *((void *)v113 + 1);
  *(void *)uint64_t v112 = v115;
  *((void *)v112 + 1) = v114;
  swift_bridgeObjectRelease();
  uint64_t v116 = v101[6];
  uint64_t v117 = &v108[v116];
  uint64_t v118 = &v109[v116];
  uint64_t v120 = *(void *)v118;
  uint64_t v119 = *((void *)v118 + 1);
  *(void *)uint64_t v117 = v120;
  *((void *)v117 + 1) = v119;
  swift_bridgeObjectRelease();
  uint64_t v121 = v101[7];
  uint64_t v122 = &v108[v121];
  uint64_t v123 = &v109[v121];
  uint64_t v125 = *(void *)v123;
  uint64_t v124 = *((void *)v123 + 1);
  *(void *)uint64_t v122 = v125;
  *((void *)v122 + 1) = v124;
  swift_bridgeObjectRelease();
  uint64_t v126 = v101[8];
  uint64_t v127 = &v108[v126];
  uint64_t v128 = &v109[v126];
  uint64_t v130 = *(void *)v128;
  uint64_t v129 = *((void *)v128 + 1);
  *(void *)uint64_t v127 = v130;
  *((void *)v127 + 1) = v129;
  swift_bridgeObjectRelease();
  *(void *)&v108[v101[9]] = *(void *)&v109[v101[9]];
  *(void *)&v161[*(int *)(a3 + 32)] = *(void *)&v160[*(int *)(a3 + 32)];
  swift_bridgeObjectRelease();
  return v161;
}

uint64_t sub_255F91068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255F9107C);
}

uint64_t sub_255F9107C(uint64_t a1, uint64_t a2, int *a3)
{
  sub_255F970B0(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  sub_255F970B0(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = type metadata accessor for StateOfMindTimeline.DaySummary();
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  uint64_t v15 = _s5EntryVMa();
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  unint64_t v17 = *(void *)(a1 + a3[8]);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

uint64_t sub_255F91288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255F9129C);
}

uint64_t sub_255F9129C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_255F970B0(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    sub_255F970B0(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t v16 = type metadata accessor for StateOfMindTimeline.DaySummary();
      if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
      {
        uint64_t v10 = v16;
        uint64_t v14 = *(void *)(v16 - 8);
        uint64_t v15 = a4[6];
      }
      else
      {
        uint64_t result = _s5EntryVMa();
        if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
        {
          *(void *)(a1 + a4[8]) = (a2 - 1);
          return result;
        }
        uint64_t v10 = result;
        uint64_t v14 = *(void *)(result - 8);
        uint64_t v15 = a4[7];
      }
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t _s16EntryDayDataViewVMa()
{
  uint64_t result = qword_269F43418;
  if (!qword_269F43418) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_255F914F0()
{
  sub_255F970B0(319, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (v0 <= 0x3F)
  {
    sub_255F970B0(319, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    if (v1 <= 0x3F)
    {
      type metadata accessor for StateOfMindTimeline.DaySummary();
      if (v2 <= 0x3F)
      {
        _s5EntryVMa();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t sub_255F9169C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255F916B8(void *a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    a1 = sub_256095C94(0, a1[2] + 1, 1, a1);
  }
  unint64_t v7 = a1[2];
  unint64_t v6 = a1[3];
  if (v7 >= v6 >> 1) {
    a1 = sub_256095C94((void *)(v6 > 1), v7 + 1, 1, a1);
  }
  a1[2] = v7 + 1;
  uint64_t v8 = &a1[2 * v7];
  v8[4] = a2;
  v8[5] = a3;
  uint64_t v9 = swift_bridgeObjectRetain();
  sub_255FCD3A4(v9);
  sub_255F96DFC(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_255F97354(0, &qword_269F43448);
  sub_255F971A0();
  sub_256177238();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_255F91864(void *a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    a1 = sub_256095C94(0, a1[2] + 1, 1, a1);
  }
  unint64_t v7 = a1[2];
  unint64_t v6 = a1[3];
  if (v7 >= v6 >> 1) {
    a1 = sub_256095C94((void *)(v6 > 1), v7 + 1, 1, a1);
  }
  a1[2] = v7 + 1;
  uint64_t v8 = &a1[2 * v7];
  v8[4] = a2;
  v8[5] = a3;
  uint64_t v9 = swift_bridgeObjectRetain();
  sub_255FCD3A4(v9);
  sub_255F96DFC(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_256177238();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_255F91A00(void *a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    a1 = sub_256095C94(0, a1[2] + 1, 1, a1);
  }
  unint64_t v7 = a1[2];
  unint64_t v6 = a1[3];
  if (v7 >= v6 >> 1) {
    a1 = sub_256095C94((void *)(v6 > 1), v7 + 1, 1, a1);
  }
  a1[2] = v7 + 1;
  uint64_t v8 = &a1[2 * v7];
  v8[4] = a2;
  v8[5] = a3;
  uint64_t v9 = swift_bridgeObjectRetain();
  sub_255FCD3A4(v9);
  sub_255F96DFC(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_255F97354(0, (unint64_t *)&qword_269F43530);
  sub_255F973A0();
  sub_256177238();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_255F91BA4(void *a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    a1 = sub_256095C94(0, a1[2] + 1, 1, a1);
  }
  unint64_t v7 = a1[2];
  unint64_t v6 = a1[3];
  if (v7 >= v6 >> 1) {
    a1 = sub_256095C94((void *)(v6 > 1), v7 + 1, 1, a1);
  }
  a1[2] = v7 + 1;
  uint64_t v8 = &a1[2 * v7];
  v8[4] = a2;
  v8[5] = a3;
  uint64_t v9 = swift_bridgeObjectRetain();
  sub_255FCD3A4(v9);
  sub_255F96DFC(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_255F678F4();
  sub_255F97284();
  sub_256177238();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id sub_255F91D30()
{
  uint64_t v1 = v0;
  uint64_t v2 = _s6StylesV5DailyVMa(0);
  uint64_t v3 = v2 - 8;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for StateOfMindTimeline.Styles(0);
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s16EntryDayDataViewVMa();
  sub_256119CA0((uint64_t)v9);
  sub_255F97048((uint64_t)&v9[*(int *)(v7 + 64)], (uint64_t)v5, _s6StylesV5DailyVMa);
  sub_255F96F80((uint64_t)v9, type metadata accessor for StateOfMindTimeline.Styles);
  uint64_t v11 = *(int *)(v10 + 24);
  uint64_t v12 = type metadata accessor for StateOfMindTimeline.DaySummary();
  if ((v5[*(int *)(v3 + 32)] & 1) != 0 || *(void *)(*(void *)(v1 + v11 + *(int *)(v12 + 32)) + 16) != 1) {
    return (id)sub_255F96F80((uint64_t)v5, _s6StylesV5DailyVMa);
  }
  id result = objc_msgSend(self, sel_sharedBehavior);
  if (result)
  {
    uint64_t v14 = result;
    objc_msgSend(result, sel_isiPad);

    return (id)sub_255F96F80((uint64_t)v5, _s6StylesV5DailyVMa);
  }
  __break(1u);
  return result;
}

uint64_t sub_255F91F3C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_256176BB8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F96698(0, (unint64_t *)&qword_269F43428, &qword_269F43430, (uint64_t (*)(uint64_t))sub_255F96268, &qword_269F434A0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v16 - v7;
  sub_255F968B8();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v8 = sub_256176788();
  *((void *)v8 + 1) = 0;
  v8[16] = 0;
  sub_255F96C08(0, &qword_269F434B0, &qword_269F43430, (uint64_t (*)(uint64_t))sub_255F96268);
  sub_255F921B8(v1, (uint64_t)&v8[*(int *)(v12 + 44)]);
  uint64_t v13 = sub_2561778E8();
  sub_2561165CC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v11, 0.0, 1, INFINITY, 0, v13, v14);
  sub_255F96944((uint64_t)v8, (unint64_t *)&qword_269F43428, &qword_269F43430, (uint64_t (*)(uint64_t))sub_255F96268, &qword_269F434A0);
  sub_256176B98();
  sub_255F969A0();
  sub_256177208();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_255F96F80((uint64_t)v11, (uint64_t (*)(void))sub_255F968B8);
}

uint64_t sub_255F921B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v73 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F19B28];
  sub_255F967C0(0, &qword_269F43498, MEMORY[0x263F19B28]);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v72 = (uint64_t)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v79 = (uint64_t)&v63 - v7;
  sub_255F965FC(0, &qword_269F43470, v3);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v80 = (uint64_t)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v78 = (uint64_t)&v63 - v11;
  uint64_t v71 = sub_255F96404;
  uint64_t v70 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F19B28];
  sub_255F96590(0, &qword_269F43450, (uint64_t (*)(uint64_t))sub_255F96404, MEMORY[0x263F1BA08], MEMORY[0x263F19B28]);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v77 = (uint64_t)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v76 = (uint64_t)&v63 - v15;
  uint64_t v16 = _s6StylesV5DailyVMa(0);
  uint64_t v17 = v16 - 8;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for StateOfMindTimeline.Styles(0);
  uint64_t v21 = v20 - 8;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v69 = (uint64_t)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v63 - v24;
  sub_255F96384();
  uint64_t v27 = MEMORY[0x270FA5388](v26 - 8);
  uint64_t v75 = (uint64_t)&v63 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v31 = (char *)&v63 - v30;
  MEMORY[0x270FA5388](v29);
  uint64_t v74 = (uint64_t)&v63 - v32;
  uint64_t v33 = (int *)_s16EntryDayDataViewVMa();
  uint64_t v34 = a1 + v33[7];
  double v35 = *(double *)(v34 + *(int *)(_s5EntryVMa() + 36));
  sub_256119CA0((uint64_t)v25);
  sub_255F97048((uint64_t)&v25[*(int *)(v21 + 64)], (uint64_t)v19, _s6StylesV5DailyVMa);
  sub_255F96F80((uint64_t)v25, type metadata accessor for StateOfMindTimeline.Styles);
  uint64_t v36 = a1 + v33[6];
  if (v19[*(int *)(v17 + 32)] & 1 | (*(void *)(*(void *)(v36
                                                            + *(int *)(type metadata accessor for StateOfMindTimeline.DaySummary()
                                                                     + 32))
                                                + 16) < 2uLL))
    char v37 = 3;
  else {
    char v37 = 4;
  }
  sub_255F96F80((uint64_t)v19, _s6StylesV5DailyVMa);
  LOBYTE(v86) = v37;
  StateOfMindVisualization.ValenceImageProvider.init(valence:imageScale:)(&v92, v35);
  uint64_t v39 = v92;
  uint64_t v38 = v93;
  uint64_t v40 = v94;
  sub_255F91D30();
  sub_255F91D30();
  sub_2561778E8();
  sub_256175F38();
  uint64_t v92 = v39;
  uint64_t v93 = v38;
  uint64_t v94 = v40;
  uint64_t v95 = v81;
  char v96 = v82;
  uint64_t v97 = v83;
  char v98 = v84;
  long long v99 = v85;
  sub_255F916B8(*(void **)(a1 + v33[8]), 0x7A696C6175736956, 0xED00006E6F697461);
  swift_bridgeObjectRelease();
  uint64_t v41 = (uint64_t)v31;
  uint64_t v42 = v74;
  sub_255F96FE0(v41, v74, (uint64_t (*)(void))sub_255F96384);
  uint64_t v43 = v69;
  sub_256119CA0(v69);
  sub_255F96F80(v43, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2561778E8();
  sub_256175F38();
  uint64_t v69 = v86;
  int v68 = v87;
  uint64_t v67 = v88;
  int v66 = v89;
  uint64_t v65 = v90;
  uint64_t v64 = v91;
  uint64_t v44 = v76;
  sub_255F92A58(v76);
  uint64_t v45 = v78;
  sub_255F938BC(v78);
  uint64_t v46 = v79;
  sub_255F9481C();
  uint64_t v47 = v75;
  sub_255F97048(v42, v75, (uint64_t (*)(void))sub_255F96384);
  uint64_t v48 = v77;
  uint64_t v49 = (uint64_t (*)(uint64_t))v71;
  uint64_t v50 = v70;
  sub_255F96A9C(v44, v77, &qword_269F43450, (uint64_t (*)(uint64_t))v71, MEMORY[0x263F1BA08], v70);
  uint64_t v51 = v80;
  sub_255F96B10(v45, v80, (uint64_t)&qword_269F43470, (uint64_t (*)(void, uint64_t, void))sub_255F965FC);
  uint64_t v52 = v46;
  uint64_t v53 = v72;
  sub_255F96B10(v52, v72, (uint64_t)&qword_269F43498, (uint64_t (*)(void, uint64_t, void))sub_255F967C0);
  uint64_t v54 = v73;
  sub_255F97048(v47, v73, (uint64_t (*)(void))sub_255F96384);
  sub_255F96268();
  uint64_t v56 = v55;
  uint64_t v57 = v54 + *(int *)(v55 + 48);
  *(void *)uint64_t v57 = 0;
  *(unsigned char *)(v57 + 8) = 1;
  *(void *)(v57 + 16) = v69;
  *(unsigned char *)(v57 + 24) = v68;
  *(void *)(v57 + 32) = v67;
  *(unsigned char *)(v57 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v66;
  uint64_t v58 = v64;
  *(void *)(v57 + 48) = v65;
  *(void *)(v57 + 56) = v58;
  sub_255F96A9C(v48, v54 + *(int *)(v55 + 64), &qword_269F43450, v49, MEMORY[0x263F1BA08], v50);
  sub_255F96B10(v51, v54 + *(int *)(v56 + 80), (uint64_t)&qword_269F43470, (uint64_t (*)(void, uint64_t, void))sub_255F965FC);
  sub_255F96B10(v53, v54 + *(int *)(v56 + 96), (uint64_t)&qword_269F43498, (uint64_t (*)(void, uint64_t, void))sub_255F967C0);
  sub_255F96B90(v79, (uint64_t)&qword_269F43498, (uint64_t (*)(void, uint64_t, void))sub_255F967C0);
  sub_255F96B90(v78, (uint64_t)&qword_269F43470, (uint64_t (*)(void, uint64_t, void))sub_255F965FC);
  uint64_t v59 = v49;
  uint64_t v60 = v49;
  uint64_t v61 = MEMORY[0x263F1BA08];
  sub_255F96DA0(v76, &qword_269F43450, v60, MEMORY[0x263F1BA08], v50);
  sub_255F96F80(v74, (uint64_t (*)(void))sub_255F96384);
  sub_255F96B90(v53, (uint64_t)&qword_269F43498, (uint64_t (*)(void, uint64_t, void))sub_255F967C0);
  sub_255F96B90(v80, (uint64_t)&qword_269F43470, (uint64_t (*)(void, uint64_t, void))sub_255F965FC);
  sub_255F96DA0(v77, &qword_269F43450, v59, v61, v50);
  return sub_255F96F80(v75, (uint64_t (*)(void))sub_255F96384);
}

uint64_t sub_255F92A58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v124 = a1;
  uint64_t v2 = sub_2561762D8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v120 = (char *)&v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_256177958();
  uint64_t v119 = *(void *)(v121 - 8);
  MEMORY[0x270FA5388](v121);
  uint64_t v118 = (char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_256175D98();
  uint64_t v116 = *(void *)(v5 - 8);
  uint64_t v117 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v115 = (char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v125 = (uint64_t)&v93 - v8;
  uint64_t v108 = sub_256176EE8();
  uint64_t v107 = *(void *)(v108 - 8);
  MEMORY[0x270FA5388](v108);
  uint64_t v106 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F970B0(0, &qword_269F43500, MEMORY[0x263F1A620], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v93 - v11;
  uint64_t v105 = sub_256176F48();
  uint64_t v104 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105);
  uint64_t v103 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F96590(0, (unint64_t *)&qword_269F42D68, MEMORY[0x263F190D8], MEMORY[0x263F1A830], MEMORY[0x263F18E28]);
  uint64_t v109 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v111 = (char *)&v93 - v18;
  sub_255F964CC();
  uint64_t v110 = v19;
  MEMORY[0x270FA5388](v19);
  uint64_t v113 = (uint64_t)&v93 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F9646C();
  uint64_t v114 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v112 = (uint64_t)&v93 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F96404();
  uint64_t v24 = v23;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v122 = (char *)&v93 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v93 - v27;
  sub_255F96590(0, &qword_269F43510, (uint64_t (*)(uint64_t))sub_255F96404, MEMORY[0x263F1BA08], MEMORY[0x263F19B20]);
  uint64_t v30 = v29;
  MEMORY[0x270FA5388](v29);
  uint64_t v32 = (char *)&v93 - v31;
  uint64_t v33 = _s16EntryDayDataViewVMa();
  uint64_t v34 = v1 + *(int *)(v33 + 28);
  double v35 = (void **)(v34 + *(int *)(_s5EntryVMa() + 24));
  unint64_t v36 = (unint64_t)*v35;
  unint64_t v37 = (unint64_t)v35[1];
  uint64_t v38 = HIBYTE(v37) & 0xF;
  if ((v37 & 0x2000000000000000) == 0) {
    uint64_t v38 = v36 & 0xFFFFFFFFFFFFLL;
  }
  if (v38)
  {
    uint64_t v99 = v30;
    int v100 = v32;
    uint64_t v101 = v28;
    uint64_t v102 = v24;
    uint64_t v126 = (void *)v36;
    unint64_t v127 = v37;
    sub_255F5CE90();
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_256177028();
    uint64_t v94 = v40;
    uint64_t v95 = v41;
    uint64_t v42 = (uint64_t)v16;
    char v44 = v43 & 1;
    uint64_t v98 = v33;
    uint64_t v123 = v1;
    uint64_t v96 = v42;
    sub_256119CA0(v42);
    uint64_t v97 = type metadata accessor for StateOfMindTimeline.Styles;
    sub_255F96F80(v42, type metadata accessor for StateOfMindTimeline.Styles);
    uint64_t v45 = v104;
    uint64_t v46 = v103;
    uint64_t v47 = v105;
    (*(void (**)(char *, void, uint64_t))(v104 + 104))(v103, *MEMORY[0x263F1A6F0], v105);
    uint64_t v48 = *MEMORY[0x263F1A610];
    uint64_t v49 = sub_256176E58();
    uint64_t v50 = *(void *)(v49 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 104))(v12, v48, v49);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v12, 0, 1, v49);
    sub_256176E88();
    sub_256176EA8();
    sub_255F8EC0C((uint64_t)v12, &qword_269F43500, MEMORY[0x263F1A620], MEMORY[0x263F8D8F0]);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v47);
    uint64_t v51 = v107;
    uint64_t v52 = v106;
    uint64_t v53 = v108;
    (*(void (**)(char *, void, uint64_t))(v107 + 104))(v106, *MEMORY[0x263F1A680], v108);
    sub_256176F08();
    swift_release();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v53);
    uint64_t v54 = v39;
    uint64_t v55 = v94;
    uint64_t v56 = sub_256176FD8();
    uint64_t v58 = v57;
    LOBYTE(v48) = v59 & 1;
    sub_255F67B2C(v54, v55, v44);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v60 = v96;
    sub_256119CA0(v96);
    sub_255F96F80(v60, v97);
    id v61 = objc_msgSend(self, sel_labelColor);
    uint64_t v126 = (void *)MEMORY[0x25A29FE80](v61);
    uint64_t v62 = sub_256176FA8();
    uint64_t v64 = v63;
    uint64_t v108 = v65;
    int v67 = v66 & 1;
    sub_255F67B2C(v56, v58, v48);
    swift_release();
    swift_bridgeObjectRelease();
    sub_25611A114(v125);
    uint64_t v69 = v115;
    uint64_t v68 = v116;
    uint64_t v70 = v117;
    (*(void (**)(char *, void, uint64_t))(v116 + 104))(v115, *MEMORY[0x263F18508], v117);
    LOBYTE(v48) = sub_256175D88();
    uint64_t v116 = *(void *)(v68 + 8);
    ((void (*)(char *, uint64_t))v116)(v69, v70);
    uint64_t v72 = v118;
    uint64_t v71 = v119;
    uint64_t v73 = (unsigned int *)MEMORY[0x263F1B950];
    if ((v48 & 1) == 0) {
      uint64_t v73 = (unsigned int *)MEMORY[0x263F1B968];
    }
    uint64_t v74 = v121;
    (*(void (**)(char *, void, uint64_t))(v119 + 104))(v118, *v73, v121);
    uint64_t v75 = (uint64_t)v120;
    (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v120, v72, v74);
    uint64_t v76 = (uint64_t)v111;
    sub_255F97048(v75, (uint64_t)&v111[*(int *)(v109 + 36)], MEMORY[0x263F190D8]);
    *(void *)uint64_t v76 = v62;
    *(void *)(v76 + 8) = v64;
    LODWORD(v107) = v67;
    *(unsigned char *)(v76 + 16) = v67;
    *(void *)(v76 + 24) = v108;
    sub_255F67B94(v62, v64, v67);
    swift_bridgeObjectRetain();
    sub_255F96F80(v75, MEMORY[0x263F190D8]);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v74);
    ((void (*)(uint64_t, uint64_t))v116)(v125, v70);
    sub_255F67B2C(v62, v64, v107);
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v78 = MEMORY[0x263F1A830];
    uint64_t v79 = (uint64_t (*)(uint64_t))MEMORY[0x263F190D8];
    uint64_t v80 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F18E28];
    uint64_t v81 = v113;
    sub_255F96A9C(v76, v113, (unint64_t *)&qword_269F42D68, MEMORY[0x263F190D8], MEMORY[0x263F1A830], MEMORY[0x263F18E28]);
    uint64_t v82 = v81 + *(int *)(v110 + 36);
    *(void *)uint64_t v82 = KeyPath;
    *(unsigned char *)(v82 + 8) = 1;
    sub_255F96DA0(v76, (unint64_t *)&qword_269F42D68, v79, v78, v80);
    uint64_t v83 = v112;
    sub_255F97048(v81, v112, (uint64_t (*)(void))sub_255F964CC);
    *(_WORD *)(v83 + *(int *)(v114 + 36)) = 256;
    sub_255F96F80(v81, (uint64_t (*)(void))sub_255F964CC);
    char v84 = *(void **)(v123 + *(int *)(v98 + 32));
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v84 = sub_256095C94(0, v84[2] + 1, 1, v84);
    }
    unint64_t v86 = v84[2];
    unint64_t v85 = v84[3];
    uint64_t v87 = (uint64_t)v101;
    uint64_t v88 = (uint64_t)v100;
    if (v86 >= v85 >> 1) {
      char v84 = sub_256095C94((void *)(v85 > 1), v86 + 1, 1, v84);
    }
    v84[2] = v86 + 1;
    unsigned __int8 v89 = &v84[2 * v86];
    v89[4] = 0x736C6562614CLL;
    v89[5] = 0xE600000000000000;
    uint64_t v126 = &unk_2704B5358;
    uint64_t v90 = swift_bridgeObjectRetain();
    sub_255FCD3A4(v90);
    sub_255F96DFC(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
    sub_255F744D8();
    sub_256177E28();
    swift_bridgeObjectRelease();
    sub_255F96E48();
    uint64_t v91 = (uint64_t)v122;
    sub_256177238();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_255F96F80(v83, (uint64_t (*)(void))sub_255F9646C);
    sub_255F96FE0(v91, v87, (uint64_t (*)(void))sub_255F96404);
    sub_255F97048(v87, v88, (uint64_t (*)(void))sub_255F96404);
    swift_storeEnumTagMultiPayload();
    sub_255F97114(&qword_269F43508, (void (*)(uint64_t))sub_255F96404, (void (*)(void))sub_255F96E48, (void (*)(void))sub_255F73540);
    sub_256176898();
    return sub_255F96F80(v87, (uint64_t (*)(void))sub_255F96404);
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_255F97114(&qword_269F43508, (void (*)(uint64_t))sub_255F96404, (void (*)(void))sub_255F96E48, (void (*)(void))sub_255F73540);
    return sub_256176898();
  }
}

uint64_t sub_255F938BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v134 = a1;
  sub_255F96698(0, &qword_269F43478, &qword_269F43480, (uint64_t (*)(uint64_t))sub_255F96738, &qword_269F43490);
  uint64_t v133 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v100 - v3;
  sub_255F965FC(0, &qword_269F434F8, MEMORY[0x263F19B20]);
  uint64_t v132 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v100 - v6;
  uint64_t v8 = sub_2561762D8();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v129 = (char *)&v100 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = sub_256177958();
  uint64_t v128 = *(void *)(v130 - 8);
  MEMORY[0x270FA5388](v130);
  unint64_t v127 = (char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_256175D98();
  uint64_t v125 = *(void *)(v11 - 8);
  uint64_t v126 = v11;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v124 = (char *)&v100 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v131 = (uint64_t)&v100 - v14;
  uint64_t v117 = sub_256176EE8();
  uint64_t v116 = *(void *)(v117 - 8);
  MEMORY[0x270FA5388](v117);
  uint64_t v115 = (char *)&v100 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F970B0(0, &qword_269F43500, MEMORY[0x263F1A620], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v100 - v17;
  uint64_t v113 = sub_256176F48();
  uint64_t v112 = *(void *)(v113 - 8);
  MEMORY[0x270FA5388](v113);
  uint64_t v111 = (char *)&v100 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v114 = (uint64_t)&v100 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F96590(0, (unint64_t *)&qword_269F42D68, MEMORY[0x263F190D8], MEMORY[0x263F1A830], MEMORY[0x263F18E28]);
  uint64_t v118 = v22;
  MEMORY[0x270FA5388](v22);
  uint64_t v120 = (char *)&v100 - v23;
  sub_255F964CC();
  uint64_t v119 = v24;
  MEMORY[0x270FA5388](v24);
  uint64_t v122 = (uint64_t)&v100 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F9646C();
  uint64_t v123 = v26;
  MEMORY[0x270FA5388](v26);
  uint64_t v121 = (uint64_t)&v100 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F96404();
  uint64_t v29 = v28;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)&v100 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v34 = (char *)&v100 - v33;
  uint64_t v35 = _s16EntryDayDataViewVMa();
  uint64_t v36 = v1;
  uint64_t v37 = v1 + *(int *)(v35 + 28);
  uint64_t v38 = _s5EntryVMa();
  uint64_t v39 = (uint64_t *)(v37 + *(int *)(v38 + 24));
  uint64_t v41 = *v39;
  unint64_t v40 = v39[1];
  uint64_t v42 = v41 & 0xFFFFFFFFFFFFLL;
  if ((v40 & 0x2000000000000000) != 0) {
    uint64_t v43 = HIBYTE(v40) & 0xF;
  }
  else {
    uint64_t v43 = v42;
  }
  if (v43)
  {
    *(void *)uint64_t v4 = sub_256176788();
    *((void *)v4 + 1) = 0;
    v4[16] = 0;
    sub_255F96C08(0, &qword_269F434D0, &qword_269F43480, (uint64_t (*)(uint64_t))sub_255F96738);
    sub_255F94A58(v1, &v4[*(int *)(v44 + 44)]);
    sub_255F96C84((uint64_t)v4, (uint64_t)v7);
    swift_storeEnumTagMultiPayload();
    sub_255F97114(&qword_269F43508, (void (*)(uint64_t))sub_255F96404, (void (*)(void))sub_255F96E48, (void (*)(void))sub_255F73540);
    sub_255F96D14();
    sub_256176898();
    return sub_255F96944((uint64_t)v4, &qword_269F43478, &qword_269F43480, (uint64_t (*)(uint64_t))sub_255F96738, &qword_269F43490);
  }
  else
  {
    uint64_t v106 = v32;
    uint64_t v107 = v34;
    uint64_t v108 = v29;
    uint64_t v109 = v7;
    uint64_t v46 = v37 + *(int *)(v38 + 20);
    uint64_t v47 = *(void *)(v46 + 8);
    uint64_t v135 = *(void **)v46;
    uint64_t v136 = v47;
    sub_255F5CE90();
    swift_bridgeObjectRetain();
    uint64_t v102 = sub_256177028();
    uint64_t v101 = v48;
    uint64_t v103 = v49;
    char v51 = v50 & 1;
    uint64_t v105 = v35;
    uint64_t v110 = v36;
    uint64_t v52 = v114;
    sub_256119CA0(v114);
    uint64_t v104 = type metadata accessor for StateOfMindTimeline.Styles;
    sub_255F96F80(v52, type metadata accessor for StateOfMindTimeline.Styles);
    uint64_t v53 = v112;
    uint64_t v54 = v111;
    uint64_t v55 = v113;
    (*(void (**)(char *, void, uint64_t))(v112 + 104))(v111, *MEMORY[0x263F1A6F0], v113);
    uint64_t v56 = *MEMORY[0x263F1A610];
    uint64_t v57 = sub_256176E58();
    uint64_t v58 = *(void *)(v57 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v58 + 104))(v18, v56, v57);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v18, 0, 1, v57);
    sub_256176E88();
    sub_256176EA8();
    sub_255F8EC0C((uint64_t)v18, &qword_269F43500, MEMORY[0x263F1A620], MEMORY[0x263F8D8F0]);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v55);
    uint64_t v59 = v116;
    uint64_t v60 = v115;
    uint64_t v61 = v117;
    (*(void (**)(char *, void, uint64_t))(v116 + 104))(v115, *MEMORY[0x263F1A680], v117);
    sub_256176F08();
    swift_release();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v61);
    uint64_t v62 = v102;
    uint64_t v63 = v101;
    LOBYTE(v6__isPlatformVersionAtLeast(2, 18, 1, 0) = v51;
    uint64_t v64 = sub_256176FD8();
    uint64_t v66 = v65;
    uint64_t v116 = v67;
    LOBYTE(v56) = v68 & 1;
    sub_255F67B2C(v62, v63, (char)v60);
    swift_release();
    swift_bridgeObjectRelease();
    sub_256119CA0(v52);
    sub_255F96F80(v52, v104);
    id v69 = objc_msgSend(self, sel_labelColor);
    uint64_t v135 = (void *)MEMORY[0x25A29FE80](v69);
    uint64_t v70 = sub_256176FA8();
    uint64_t v72 = v71;
    uint64_t v117 = v73;
    int v75 = v74 & 1;
    sub_255F67B2C(v64, v66, v56);
    swift_release();
    swift_bridgeObjectRelease();
    sub_25611A114(v131);
    uint64_t v77 = v124;
    uint64_t v76 = v125;
    uint64_t v78 = v126;
    (*(void (**)(char *, void, uint64_t))(v125 + 104))(v124, *MEMORY[0x263F18508], v126);
    LOBYTE(v47) = sub_256175D88();
    uint64_t v125 = *(void *)(v76 + 8);
    ((void (*)(char *, uint64_t))v125)(v77, v78);
    uint64_t v80 = v127;
    uint64_t v79 = v128;
    uint64_t v81 = (unsigned int *)MEMORY[0x263F1B950];
    if ((v47 & 1) == 0) {
      uint64_t v81 = (unsigned int *)MEMORY[0x263F1B968];
    }
    uint64_t v82 = v130;
    (*(void (**)(char *, void, uint64_t))(v128 + 104))(v127, *v81, v130);
    uint64_t v83 = (uint64_t)v129;
    (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v129, v80, v82);
    uint64_t v84 = (uint64_t)v120;
    sub_255F97048(v83, (uint64_t)&v120[*(int *)(v118 + 36)], MEMORY[0x263F190D8]);
    *(void *)uint64_t v84 = v70;
    *(void *)(v84 + 8) = v72;
    LODWORD(v115) = v75;
    *(unsigned char *)(v84 + 16) = v75;
    *(void *)(v84 + 24) = v117;
    sub_255F67B94(v70, v72, v75);
    swift_bridgeObjectRetain();
    sub_255F96F80(v83, MEMORY[0x263F190D8]);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v80, v82);
    ((void (*)(uint64_t, uint64_t))v125)(v131, v78);
    sub_255F67B2C(v70, v72, (char)v115);
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v86 = MEMORY[0x263F1A830];
    uint64_t v87 = (uint64_t (*)(uint64_t))MEMORY[0x263F190D8];
    uint64_t v88 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F18E28];
    uint64_t v89 = v122;
    sub_255F96A9C(v84, v122, (unint64_t *)&qword_269F42D68, MEMORY[0x263F190D8], MEMORY[0x263F1A830], MEMORY[0x263F18E28]);
    uint64_t v90 = v89 + *(int *)(v119 + 36);
    *(void *)uint64_t v90 = KeyPath;
    *(unsigned char *)(v90 + 8) = 1;
    sub_255F96DA0(v84, (unint64_t *)&qword_269F42D68, v87, v86, v88);
    uint64_t v91 = v121;
    sub_255F97048(v89, v121, (uint64_t (*)(void))sub_255F964CC);
    *(_WORD *)(v91 + *(int *)(v123 + 36)) = 256;
    sub_255F96F80(v89, (uint64_t (*)(void))sub_255F964CC);
    uint64_t v92 = *(void **)(v110 + *(int *)(v105 + 32));
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v92 = sub_256095C94(0, v92[2] + 1, 1, v92);
    }
    uint64_t v93 = (uint64_t)v109;
    uint64_t v94 = (uint64_t)v107;
    unint64_t v96 = v92[2];
    unint64_t v95 = v92[3];
    if (v96 >= v95 >> 1) {
      uint64_t v92 = sub_256095C94((void *)(v95 > 1), v96 + 1, 1, v92);
    }
    v92[2] = v96 + 1;
    uint64_t v97 = &v92[2 * v96];
    v97[4] = 0x746E656D6F4DLL;
    v97[5] = 0xE600000000000000;
    uint64_t v135 = &unk_2704B5358;
    uint64_t v98 = swift_bridgeObjectRetain();
    sub_255FCD3A4(v98);
    sub_255F96DFC(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
    sub_255F744D8();
    sub_256177E28();
    swift_bridgeObjectRelease();
    sub_255F96E48();
    uint64_t v99 = (uint64_t)v106;
    sub_256177238();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_255F96F80(v91, (uint64_t (*)(void))sub_255F9646C);
    sub_255F96FE0(v99, v94, (uint64_t (*)(void))sub_255F96404);
    sub_255F97048(v94, v93, (uint64_t (*)(void))sub_255F96404);
    swift_storeEnumTagMultiPayload();
    sub_255F97114(&qword_269F43508, (void (*)(uint64_t))sub_255F96404, (void (*)(void))sub_255F96E48, (void (*)(void))sub_255F73540);
    sub_255F96D14();
    sub_256176898();
    return sub_255F96F80(v94, (uint64_t (*)(void))sub_255F96404);
  }
}

uint64_t sub_255F9481C()
{
  sub_255F96698(0, &qword_269F43478, &qword_269F43480, (uint64_t (*)(uint64_t))sub_255F96738, &qword_269F43490);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v15 - v2;
  sub_255F967C0(0, &qword_269F434C8, MEMORY[0x263F19B20]);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v15 - v5;
  uint64_t v7 = v0 + *(int *)(_s16EntryDayDataViewVMa() + 28);
  uint64_t v8 = (uint64_t *)(v7 + *(int *)(_s5EntryVMa() + 28));
  uint64_t v10 = *v8;
  unint64_t v9 = v8[1];
  uint64_t v11 = v10 & 0xFFFFFFFFFFFFLL;
  if ((v9 & 0x2000000000000000) != 0) {
    uint64_t v12 = HIBYTE(v9) & 0xF;
  }
  else {
    uint64_t v12 = v11;
  }
  if (v12)
  {
    *(void *)uint64_t v3 = sub_256176788();
    *((void *)v3 + 1) = 0;
    v3[16] = 0;
    sub_255F96C08(0, &qword_269F434D0, &qword_269F43480, (uint64_t (*)(uint64_t))sub_255F96738);
    sub_255F955E4(v0, &v3[*(int *)(v13 + 44)]);
    sub_255F96C84((uint64_t)v3, (uint64_t)v6);
    swift_storeEnumTagMultiPayload();
    sub_255F96D14();
    sub_256176898();
    return sub_255F96944((uint64_t)v3, &qword_269F43478, &qword_269F43480, (uint64_t (*)(uint64_t))sub_255F96738, &qword_269F43490);
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_255F96D14();
    return sub_256176898();
  }
}

uint64_t sub_255F94A58@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v110 = a2;
  uint64_t v3 = sub_2561762D8();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v100 = (char *)v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_256177958();
  uint64_t v96 = *(void *)(v97 - 8);
  MEMORY[0x270FA5388](v97);
  unint64_t v95 = (char *)v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_256175D98();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v113 = v6;
  uint64_t v114 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v91 = (char *)v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v112 = (char *)v85 - v10;
  uint64_t v11 = sub_256176EE8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = (uint64_t (*)(uint64_t))MEMORY[0x263F190D8];
  uint64_t v98 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F18E28];
  sub_255F96590(0, (unint64_t *)&qword_269F42D68, MEMORY[0x263F190D8], MEMORY[0x263F1A830], MEMORY[0x263F18E28]);
  uint64_t v90 = v15 - 8;
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v89 = (char *)v85 - v16;
  sub_255F964CC();
  uint64_t v94 = v17 - 8;
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v93 = (uint64_t)v85 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F9646C();
  uint64_t v92 = v19;
  MEMORY[0x270FA5388](v19);
  uint64_t v87 = (uint64_t)v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F96404();
  uint64_t v22 = MEMORY[0x270FA5388](v21 - 8);
  uint64_t v109 = (uint64_t)v85 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v107 = (char *)v85 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v108 = (uint64_t)v85 - v26;
  uint64_t v27 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v29 = (char *)v85 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = _s16EntryDayDataViewVMa();
  uint64_t v88 = v30;
  uint64_t v111 = a1;
  sub_256119CA0((uint64_t)v29);
  uint64_t v86 = type metadata accessor for StateOfMindTimeline.Styles;
  sub_255F96F80((uint64_t)v29, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2561778E8();
  sub_256175F38();
  uint64_t v106 = v117;
  int v105 = v118;
  uint64_t v104 = v119;
  int v103 = v120;
  uint64_t v102 = v121;
  uint64_t v101 = v122;
  uint64_t v31 = a1 + *(int *)(v30 + 28);
  uint64_t v32 = v31 + *(int *)(_s5EntryVMa() + 20);
  uint64_t v33 = *(void *)(v32 + 8);
  uint64_t v115 = *(void **)v32;
  uint64_t v116 = v33;
  sub_255F5CE90();
  swift_bridgeObjectRetain();
  uint64_t v34 = sub_256177028();
  uint64_t v36 = v35;
  v85[0] = v37;
  char v39 = v38 & 1;
  sub_256119CA0((uint64_t)v29);
  sub_255F96F80((uint64_t)v29, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256176DF8();
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F1A680], v11);
  sub_256176F08();
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v40 = sub_256176FD8();
  uint64_t v42 = v41;
  v85[1] = v43;
  LOBYTE(v12) = v44 & 1;
  sub_255F67B2C(v34, v36, v39);
  swift_release();
  swift_bridgeObjectRelease();
  sub_256119CA0((uint64_t)v29);
  sub_255F96F80((uint64_t)v29, v86);
  id v45 = objc_msgSend(self, sel_labelColor);
  uint64_t v115 = (void *)MEMORY[0x25A29FE80](v45);
  uint64_t v46 = sub_256176FA8();
  uint64_t v48 = v47;
  uint64_t v86 = v49;
  char v51 = v50 & 1;
  sub_255F67B2C(v40, v42, v12);
  swift_release();
  swift_bridgeObjectRelease();
  sub_25611A114((uint64_t)v112);
  uint64_t v53 = v113;
  uint64_t v52 = v114;
  uint64_t v54 = v91;
  (*(void (**)(char *, void, uint64_t))(v114 + 104))(v91, *MEMORY[0x263F18508], v113);
  LOBYTE(v14) = sub_256175D88();
  uint64_t v55 = *(void (**)(char *, uint64_t))(v52 + 8);
  uint64_t v114 = v52 + 8;
  v55(v54, v53);
  uint64_t v56 = v96;
  uint64_t v57 = (unsigned int *)MEMORY[0x263F1B950];
  if ((v14 & 1) == 0) {
    uint64_t v57 = (unsigned int *)MEMORY[0x263F1B968];
  }
  uint64_t v58 = v95;
  uint64_t v59 = v97;
  (*(void (**)(char *, void, uint64_t))(v96 + 104))(v95, *v57, v97);
  uint64_t v60 = v56;
  uint64_t v61 = *(void (**)(char *, char *, uint64_t))(v56 + 16);
  uint64_t v62 = (uint64_t)v100;
  v61(v100, v58, v59);
  uint64_t v63 = (uint64_t)v89;
  sub_255F97048(v62, (uint64_t)&v89[*(int *)(v90 + 44)], MEMORY[0x263F190D8]);
  *(void *)uint64_t v63 = v46;
  *(void *)(v63 + 8) = v48;
  *(unsigned char *)(v63 + 16) = v51;
  *(void *)(v63 + 24) = v86;
  sub_255F67B94(v46, v48, v51);
  swift_bridgeObjectRetain();
  sub_255F96F80(v62, MEMORY[0x263F190D8]);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v58, v59);
  v55(v112, v113);
  uint64_t v64 = v92;
  sub_255F67B2C(v46, v48, v51);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v66 = v93;
  uint64_t v67 = v99;
  uint64_t v68 = MEMORY[0x263F1A830];
  id v69 = v98;
  sub_255F96A9C(v63, v93, (unint64_t *)&qword_269F42D68, v99, MEMORY[0x263F1A830], v98);
  uint64_t v70 = v66 + *(int *)(v94 + 44);
  *(void *)uint64_t v70 = KeyPath;
  *(unsigned char *)(v70 + 8) = 1;
  sub_255F96DA0(v63, (unint64_t *)&qword_269F42D68, v67, v68, v69);
  uint64_t v71 = v87;
  sub_255F97048(v66, v87, (uint64_t (*)(void))sub_255F964CC);
  uint64_t v72 = v71;
  *(_WORD *)(v71 + *(int *)(v64 + 36)) = 256;
  sub_255F96F80(v66, (uint64_t (*)(void))sub_255F964CC);
  uint64_t v73 = *(void **)(v111 + *(int *)(v88 + 32));
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v73 = sub_256095C94(0, v73[2] + 1, 1, v73);
  }
  unint64_t v75 = v73[2];
  unint64_t v74 = v73[3];
  if (v75 >= v74 >> 1) {
    uint64_t v73 = sub_256095C94((void *)(v74 > 1), v75 + 1, 1, v73);
  }
  v73[2] = v75 + 1;
  uint64_t v76 = &v73[2 * v75];
  v76[4] = 0x746E656D6F4DLL;
  v76[5] = 0xE600000000000000;
  uint64_t v115 = &unk_2704B5358;
  uint64_t v77 = swift_bridgeObjectRetain();
  sub_255FCD3A4(v77);
  sub_255F96DFC(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_255F96E48();
  uint64_t v78 = (uint64_t)v107;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_255F96F80(v72, (uint64_t (*)(void))sub_255F9646C);
  uint64_t v79 = v108;
  sub_255F96FE0(v78, v108, (uint64_t (*)(void))sub_255F96404);
  uint64_t v80 = v109;
  sub_255F97048(v79, v109, (uint64_t (*)(void))sub_255F96404);
  uint64_t v81 = v110;
  *uint64_t v110 = 0;
  *((unsigned char *)v81 + 8) = 1;
  v81[2] = v106;
  *((unsigned char *)v81 + 24) = v105;
  v81[4] = v104;
  *((unsigned char *)v81 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v103;
  uint64_t v82 = v101;
  v81[6] = v102;
  v81[7] = v82;
  sub_255F96738();
  sub_255F97048(v80, (uint64_t)v81 + *(int *)(v83 + 48), (uint64_t (*)(void))sub_255F96404);
  sub_255F96F80(v79, (uint64_t (*)(void))sub_255F96404);
  return sub_255F96F80(v80, (uint64_t (*)(void))sub_255F96404);
}

uint64_t sub_255F955E4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v121 = a2;
  uint64_t v3 = sub_2561762D8();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v111 = (char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_256177958();
  uint64_t v107 = *(void *)(v108 - 8);
  MEMORY[0x270FA5388](v108);
  uint64_t v106 = (char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_256175D98();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v124 = v6;
  uint64_t v125 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v102 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v123 = (char *)&v93 - v10;
  uint64_t v97 = sub_256176EE8();
  uint64_t v95 = *(void *)(v97 - 8);
  MEMORY[0x270FA5388](v97);
  uint64_t v96 = (char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = (uint64_t (*)(uint64_t))MEMORY[0x263F190D8];
  uint64_t v109 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F18E28];
  sub_255F96590(0, (unint64_t *)&qword_269F42D68, MEMORY[0x263F190D8], MEMORY[0x263F1A830], MEMORY[0x263F18E28]);
  uint64_t v101 = v12 - 8;
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v100 = (char *)&v93 - v13;
  sub_255F964CC();
  uint64_t v105 = v14 - 8;
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v104 = (uint64_t)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F9646C();
  uint64_t v103 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v98 = (uint64_t)&v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F96404();
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  uint64_t v120 = (uint64_t)&v93 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  unsigned __int8 v118 = (char *)&v93 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v119 = (uint64_t)&v93 - v23;
  uint64_t v24 = _s6StylesV5DailyVMa(0);
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v93 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for StateOfMindTimeline.Styles(0);
  uint64_t v28 = v27 - 8;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v31 = (char *)&v93 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v33 = (char *)&v93 - v32;
  uint64_t v34 = _s16EntryDayDataViewVMa();
  uint64_t v35 = *(int *)(v34 + 20);
  uint64_t v36 = v34;
  uint64_t v99 = v34;
  uint64_t v122 = a1;
  uint64_t v93 = a1 + v35;
  sub_256119CA0((uint64_t)v33);
  sub_255F97048((uint64_t)&v33[*(int *)(v28 + 64)], (uint64_t)v26, _s6StylesV5DailyVMa);
  uint64_t v94 = type metadata accessor for StateOfMindTimeline.Styles;
  sub_255F96F80((uint64_t)v33, type metadata accessor for StateOfMindTimeline.Styles);
  sub_255F96F80((uint64_t)v26, _s6StylesV5DailyVMa);
  sub_2561778E8();
  sub_256175F38();
  uint64_t v117 = v128;
  int v116 = v129;
  uint64_t v115 = v130;
  int v114 = v131;
  uint64_t v113 = v132;
  uint64_t v112 = v133;
  uint64_t v37 = a1 + *(int *)(v36 + 28);
  uint64_t v38 = v37 + *(int *)(_s5EntryVMa() + 28);
  uint64_t v39 = *(void *)(v38 + 8);
  uint64_t v126 = *(void **)v38;
  uint64_t v127 = v39;
  sub_255F5CE90();
  swift_bridgeObjectRetain();
  uint64_t v40 = sub_256177028();
  uint64_t v42 = v41;
  char v44 = v43 & 1;
  sub_256119CA0((uint64_t)v31);
  uint64_t v45 = (uint64_t)v31;
  sub_255F96F80((uint64_t)v31, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256176DF8();
  uint64_t v46 = v95;
  uint64_t v47 = v96;
  uint64_t v48 = v97;
  (*(void (**)(char *, void, uint64_t))(v95 + 104))(v96, *MEMORY[0x263F1A680], v97);
  sub_256176F08();
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v48);
  uint64_t v49 = sub_256176FD8();
  uint64_t v51 = v50;
  LOBYTE(v39) = v52 & 1;
  sub_255F67B2C(v40, v42, v44);
  swift_release();
  swift_bridgeObjectRelease();
  sub_256119CA0(v45);
  sub_255F96F80(v45, v94);
  id v53 = objc_msgSend(self, sel_secondaryLabelColor);
  uint64_t v126 = (void *)MEMORY[0x25A29FE80](v53);
  uint64_t v54 = sub_256176FA8();
  uint64_t v56 = v55;
  uint64_t v97 = v57;
  char v59 = v58 & 1;
  sub_255F67B2C(v49, v51, v39);
  swift_release();
  swift_bridgeObjectRelease();
  sub_25611A114((uint64_t)v123);
  uint64_t v61 = v124;
  uint64_t v60 = v125;
  uint64_t v62 = v102;
  (*(void (**)(char *, void, uint64_t))(v125 + 104))(v102, *MEMORY[0x263F18508], v124);
  LOBYTE(v39) = sub_256175D88();
  uint64_t v63 = *(void (**)(char *, uint64_t))(v60 + 8);
  uint64_t v125 = v60 + 8;
  v63(v62, v61);
  uint64_t v64 = v107;
  uint64_t v65 = (unsigned int *)MEMORY[0x263F1B950];
  if ((v39 & 1) == 0) {
    uint64_t v65 = (unsigned int *)MEMORY[0x263F1B968];
  }
  uint64_t v66 = v106;
  uint64_t v67 = v108;
  (*(void (**)(char *, void, uint64_t))(v107 + 104))(v106, *v65, v108);
  uint64_t v68 = v64;
  id v69 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
  uint64_t v70 = (uint64_t)v111;
  v69(v111, v66, v67);
  uint64_t v71 = (uint64_t)v100;
  sub_255F97048(v70, (uint64_t)&v100[*(int *)(v101 + 44)], MEMORY[0x263F190D8]);
  *(void *)uint64_t v71 = v54;
  *(void *)(v71 + 8) = v56;
  *(unsigned char *)(v71 + 16) = v59;
  *(void *)(v71 + 24) = v97;
  sub_255F67B94(v54, v56, v59);
  swift_bridgeObjectRetain();
  sub_255F96F80(v70, MEMORY[0x263F190D8]);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v66, v67);
  v63(v123, v124);
  uint64_t v72 = v103;
  sub_255F67B2C(v54, v56, v59);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v74 = v104;
  unint64_t v75 = v110;
  uint64_t v76 = MEMORY[0x263F1A830];
  uint64_t v77 = v109;
  sub_255F96A9C(v71, v104, (unint64_t *)&qword_269F42D68, v110, MEMORY[0x263F1A830], v109);
  uint64_t v78 = v74 + *(int *)(v105 + 44);
  *(void *)uint64_t v78 = KeyPath;
  *(unsigned char *)(v78 + 8) = 1;
  sub_255F96DA0(v71, (unint64_t *)&qword_269F42D68, v75, v76, v77);
  uint64_t v79 = v98;
  sub_255F97048(v74, v98, (uint64_t (*)(void))sub_255F964CC);
  uint64_t v80 = v79;
  *(_WORD *)(v79 + *(int *)(v72 + 36)) = 256;
  sub_255F96F80(v74, (uint64_t (*)(void))sub_255F964CC);
  uint64_t v81 = *(void **)(v122 + *(int *)(v99 + 32));
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v81 = sub_256095C94(0, v81[2] + 1, 1, v81);
  }
  unint64_t v83 = v81[2];
  unint64_t v82 = v81[3];
  if (v83 >= v82 >> 1) {
    uint64_t v81 = sub_256095C94((void *)(v82 > 1), v83 + 1, 1, v81);
  }
  v81[2] = v83 + 1;
  uint64_t v84 = &v81[2 * v83];
  v84[4] = 0xD000000000000011;
  v84[5] = 0x80000002561AA5C0;
  uint64_t v126 = &unk_2704B5358;
  uint64_t v85 = swift_bridgeObjectRetain();
  sub_255FCD3A4(v85);
  sub_255F96DFC(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_255F96E48();
  uint64_t v86 = (uint64_t)v118;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_255F96F80(v80, (uint64_t (*)(void))sub_255F9646C);
  uint64_t v87 = v119;
  sub_255F96FE0(v86, v119, (uint64_t (*)(void))sub_255F96404);
  uint64_t v88 = v120;
  sub_255F97048(v87, v120, (uint64_t (*)(void))sub_255F96404);
  uint64_t v89 = v121;
  *uint64_t v121 = 0;
  *((unsigned char *)v89 + 8) = 1;
  v89[2] = v117;
  *((unsigned char *)v89 + 24) = v116;
  v89[4] = v115;
  *((unsigned char *)v89 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v114;
  uint64_t v90 = v112;
  v89[6] = v113;
  v89[7] = v90;
  sub_255F96738();
  sub_255F97048(v88, (uint64_t)v89 + *(int *)(v91 + 48), (uint64_t (*)(void))sub_255F96404);
  sub_255F96F80(v87, (uint64_t (*)(void))sub_255F96404);
  return sub_255F96F80(v88, (uint64_t (*)(void))sub_255F96404);
}

void sub_255F96268()
{
  if (!qword_269F43438)
  {
    sub_255F96384();
    sub_255F97354(255, (unint64_t *)&qword_269F42B18);
    sub_255F96590(255, &qword_269F43450, (uint64_t (*)(uint64_t))sub_255F96404, MEMORY[0x263F1BA08], MEMORY[0x263F19B28]);
    uint64_t v0 = (uint64_t (*)(uint64_t, void, uint64_t))MEMORY[0x263F19B28];
    sub_255F965FC(255, &qword_269F43470, MEMORY[0x263F19B28]);
    sub_255F967C0(255, &qword_269F43498, v0);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v2) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_269F43438);
    }
  }
}

void sub_255F96384()
{
  if (!qword_269F43440)
  {
    sub_255F97354(255, &qword_269F43448);
    sub_256176D38();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43440);
    }
  }
}

void sub_255F96404()
{
  if (!qword_269F43458)
  {
    sub_255F9646C();
    sub_256176D38();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43458);
    }
  }
}

void sub_255F9646C()
{
  if (!qword_269F43460)
  {
    sub_255F964CC();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43460);
    }
  }
}

void sub_255F964CC()
{
  if (!qword_269F43468)
  {
    sub_255F96590(255, (unint64_t *)&qword_269F42D68, MEMORY[0x263F190D8], MEMORY[0x263F1A830], MEMORY[0x263F18E28]);
    sub_255F96DFC(255, (unint64_t *)&qword_269F42C58, MEMORY[0x263F18968], MEMORY[0x263F1A418]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43468);
    }
  }
}

void sub_255F96590(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_255F965FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_255F96404();
    uint64_t v7 = v6;
    sub_255F96698(255, &qword_269F43478, &qword_269F43480, (uint64_t (*)(uint64_t))sub_255F96738, &qword_269F43490);
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_255F96698(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), unint64_t *a5)
{
  if (!*a2)
  {
    sub_255F970B0(255, a3, a4, MEMORY[0x263F1BAC8]);
    sub_255F96854(a5, a3, a4);
    unint64_t v9 = sub_2561776F8();
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_255F96738()
{
  if (!qword_269F43488)
  {
    sub_255F97354(255, (unint64_t *)&qword_269F42B18);
    sub_255F96404();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F43488);
    }
  }
}

void sub_255F967C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void, uint64_t))
{
  if (!*a2)
  {
    sub_255F96698(255, &qword_269F43478, &qword_269F43480, (uint64_t (*)(uint64_t))sub_255F96738, &qword_269F43490);
    unint64_t v7 = a3(a1, MEMORY[0x263F1BA08], v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_255F96854(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_255F970B0(255, a2, a3, MEMORY[0x263F1BAC8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_255F968B8()
{
  if (!qword_269F434A8)
  {
    sub_255F96698(255, (unint64_t *)&qword_269F43428, &qword_269F43430, (uint64_t (*)(uint64_t))sub_255F96268, &qword_269F434A0);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F434A8);
    }
  }
}

uint64_t sub_255F96944(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), unint64_t *a5)
{
  sub_255F96698(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

unint64_t sub_255F969A0()
{
  unint64_t result = qword_269F434B8;
  if (!qword_269F434B8)
  {
    sub_255F968B8();
    sub_255F96A18();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F434B8);
  }
  return result;
}

unint64_t sub_255F96A18()
{
  unint64_t result = qword_269F434C0;
  if (!qword_269F434C0)
  {
    sub_255F96698(255, (unint64_t *)&qword_269F43428, &qword_269F43430, (uint64_t (*)(uint64_t))sub_255F96268, &qword_269F434A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F434C0);
  }
  return result;
}

uint64_t sub_255F96A9C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t))
{
  sub_255F96590(0, a3, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

uint64_t sub_255F96B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, uint64_t, void))
{
  uint64_t v6 = a4(0, a3, MEMORY[0x263F19B28]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_255F96B90(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, uint64_t, void))
{
  uint64_t v4 = a3(0, a2, MEMORY[0x263F19B28]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_255F96C08(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_255F970B0(255, a3, a4, MEMORY[0x263F1BAC8]);
    unint64_t v5 = sub_256176048();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_255F96C84(uint64_t a1, uint64_t a2)
{
  sub_255F96698(0, &qword_269F43478, &qword_269F43480, (uint64_t (*)(uint64_t))sub_255F96738, &qword_269F43490);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_255F96D14()
{
  unint64_t result = qword_269F434D8;
  if (!qword_269F434D8)
  {
    sub_255F96698(255, &qword_269F43478, &qword_269F43480, (uint64_t (*)(uint64_t))sub_255F96738, &qword_269F43490);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F434D8);
  }
  return result;
}

uint64_t sub_255F96DA0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  sub_255F96590(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

void sub_255F96DFC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_255F96E48()
{
  unint64_t result = qword_269F434E0;
  if (!qword_269F434E0)
  {
    sub_255F9646C();
    sub_255F97114((unint64_t *)&qword_269F434E8, (void (*)(uint64_t))sub_255F964CC, (void (*)(void))sub_255F74810, (void (*)(void))sub_255F96F04);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F434E0);
  }
  return result;
}

unint64_t sub_255F96F04()
{
  unint64_t result = qword_269F434F0;
  if (!qword_269F434F0)
  {
    sub_255F96DFC(255, (unint64_t *)&qword_269F42C58, MEMORY[0x263F18968], MEMORY[0x263F1A418]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F434F0);
  }
  return result;
}

uint64_t sub_255F96F80(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_255F96FE0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_255F97048(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_255F970B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_255F97114(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_255F971A0()
{
  unint64_t result = qword_269F43518;
  if (!qword_269F43518)
  {
    sub_255F97354(255, &qword_269F43448);
    sub_255F97230();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43518);
  }
  return result;
}

unint64_t sub_255F97230()
{
  unint64_t result = qword_269F43520;
  if (!qword_269F43520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43520);
  }
  return result;
}

unint64_t sub_255F97284()
{
  unint64_t result = qword_269F43528;
  if (!qword_269F43528)
  {
    sub_255F678F4();
    sub_255F96F04();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43528);
  }
  return result;
}

uint64_t sub_255F972FC()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_255F97354(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_2561761B8();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

unint64_t sub_255F973A0()
{
  unint64_t result = qword_269F43538[0];
  if (!qword_269F43538[0])
  {
    sub_255F97354(255, (unint64_t *)&qword_269F43530);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269F43538);
  }
  return result;
}

uint64_t sub_255F97428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

void sub_255F97430()
{
  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_255F9A0E8(319, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_255F97538(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v54 = *(void *)(a3 + 16);
  uint64_t v53 = *(void *)(v54 - 8);
  int v4 = *(_DWORD *)(v53 + 80);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v53 + 64);
  uint64_t v7 = sub_256176AA8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8;
  int v10 = *(_DWORD *)(v8 + 80);
  uint64_t v11 = sub_256176158();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = v8;
  uint64_t v14 = *(_DWORD *)(v12 + 80);
  int v15 = *(_DWORD *)(v12 + 80) | v10;
  uint64_t v16 = v15 & 0xF8 | 7u;
  uint64_t v52 = v6;
  uint64_t v55 = v9;
  if (*(_DWORD *)(v9 + 84)) {
    size_t v17 = *(void *)(v13 + 64);
  }
  else {
    size_t v17 = *(void *)(v13 + 64) + 1;
  }
  size_t v18 = v17 + v14;
  if (((v17 + v14) & ~v14) + *(void *)(*(void *)(v11 - 8) + 64) <= 8) {
    uint64_t v19 = 8;
  }
  else {
    uint64_t v19 = ((v17 + v14) & ~v14) + *(void *)(*(void *)(v11 - 8) + 64);
  }
  int v20 = (v15 | v4) & 0x100000;
  if ((v16 | v4) != 7
    || v20 != 0
    || v19 + ((v6 + v16 + ((v4 + 80) & ~(unint64_t)v4)) & ~v16) + 1 > 0x18)
  {
    uint64_t v23 = *a2;
    *(void *)a1 = *a2;
    uint64_t v24 = v23 + (((v16 | v4) + 16) & ~(v16 | v4));
LABEL_38:
    swift_retain();
    return v24;
  }
  uint64_t v24 = a1;
  uint64_t v50 = *(_DWORD *)(v12 + 80);
  uint64_t v51 = v7;
  uint64_t v48 = *(void *)(v11 - 8);
  uint64_t v49 = v11;
  unint64_t v25 = ~(unint64_t)v4;
  uint64_t v26 = ~v16;
  unint64_t v27 = a2[1];
  if (v27 < 0xFFFFFFFF)
  {
    long long v30 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v30;
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    long long v31 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v31;
  }
  else
  {
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v27;
    size_t v47 = v17;
    uint64_t v28 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v28;
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *((unsigned char *)a2 + 40);
    *(void *)(a1 + 48) = a2[6];
    uint64_t v29 = a2[9];
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    *(void *)(a1 + 72) = v29;
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v26 = ~v16;
    swift_retain();
    swift_bridgeObjectRetain();
    size_t v17 = v47;
    swift_retain();
  }
  uint64_t v32 = ((unint64_t)a2 + v4 + 80) & v25;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v53 + 16))((a1 + v5 + 80) & v25, v32, v54);
  uint64_t v33 = (void *)((((a1 + v5 + 80) & v25) + v52 + v16) & v26);
  uint64_t v34 = (unsigned __int8 *)((v32 + v52 + v16) & v26);
  unsigned int v35 = v34[v19];
  unsigned int v36 = v35 - 2;
  if (v35 < 2)
  {
    uint64_t v38 = v50;
    uint64_t v39 = v51;
    uint64_t v40 = v55;
LABEL_26:
    if (v35 != 1)
    {
LABEL_37:
      *uint64_t v33 = *(void *)v34;
      *((unsigned char *)v33 + v19) = 0;
      goto LABEL_38;
    }
  }
  else
  {
    if (v19 <= 3) {
      uint64_t v37 = v19;
    }
    else {
      uint64_t v37 = 4;
    }
    uint64_t v38 = v50;
    uint64_t v39 = v51;
    uint64_t v40 = v55;
    switch(v37)
    {
      case 1:
        int v41 = *v34;
        break;
      case 2:
        int v41 = *(unsigned __int16 *)v34;
        break;
      case 3:
        int v41 = *(unsigned __int16 *)v34 | (v34[2] << 16);
        break;
      case 4:
        int v41 = *(_DWORD *)v34;
        break;
      default:
        goto LABEL_26;
    }
    int v44 = (v41 | (v36 << (8 * v19))) + 2;
    int v45 = v41 + 2;
    if (v19 < 4) {
      int v45 = v44;
    }
    if (v45 != 1) {
      goto LABEL_37;
    }
  }
  size_t v42 = v18;
  uint64_t v43 = ~v38;
  if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v40 + 48))(v34, 1, v39))
  {
    memcpy(v33, v34, v17);
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v40 + 16))(v33, v34, v39);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v33, 0, 1, v39);
  }
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v48 + 16))(((unint64_t)v33 + v42) & v43, (unint64_t)&v34[v42] & v43, v49);
  *((unsigned char *)v33 + v19) = 1;
  return v24;
}

uint64_t sub_255F97978(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) >= 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = v4 + 8;
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v6);
  uint64_t v7 = *(void *)(v5 + 56);
  uint64_t v8 = sub_256176AA8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = v9;
  int v11 = *(_DWORD *)(v9 + 80);
  uint64_t v12 = sub_256176158();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(_DWORD *)(v13 + 80);
  uint64_t v15 = (*(_DWORD *)(v13 + 80) | v11) & 0xF8 | 7u;
  uint64_t v16 = (unsigned __int8 *)((v6 + v7 + v15) & ~v15);
  if (*(_DWORD *)(v9 + 84)) {
    uint64_t v17 = *(void *)(v9 + 64);
  }
  else {
    uint64_t v17 = *(void *)(v9 + 64) + 1;
  }
  uint64_t v18 = v17 + v14;
  unint64_t v19 = ((v17 + v14) & ~v14) + *(void *)(*(void *)(v12 - 8) + 64);
  if (v19 <= 8) {
    unint64_t v19 = 8;
  }
  unsigned int v20 = v16[v19];
  unsigned int v21 = v20 - 2;
  if (v20 >= 2)
  {
    if (v19 <= 3) {
      uint64_t v22 = v19;
    }
    else {
      uint64_t v22 = 4;
    }
    switch(v22)
    {
      case 1:
        int v23 = *v16;
        goto LABEL_17;
      case 2:
        int v23 = *(unsigned __int16 *)v16;
        goto LABEL_17;
      case 3:
        int v23 = *(unsigned __int16 *)v16 | (v16[2] << 16);
        goto LABEL_17;
      case 4:
        int v23 = *(_DWORD *)v16;
LABEL_17:
        int v24 = (v23 | (v21 << (8 * v19))) + 2;
        unsigned int v20 = v23 + 2;
        if (v19 < 4) {
          unsigned int v20 = v24;
        }
        break;
      default:
        break;
    }
  }
  if (v20 == 1)
  {
    uint64_t v28 = *(void *)(v12 - 8);
    uint64_t v25 = ~v14;
    if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v10 + 48))(v16, 1, v8)) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v10 + 8))(v16, v8);
    }
    uint64_t v26 = *(uint64_t (**)(unint64_t, uint64_t))(v28 + 8);
    return v26((unint64_t)&v16[v18] & v25, v12);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_255F97C50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = *(void *)(a2 + 8);
  if (v6 < 0xFFFFFFFF)
  {
    long long v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    long long v10 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v10;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v6;
    uint64_t v7 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v7;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(unsigned char *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    uint64_t v8 = *(void *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(void *)(a1 + 72) = v8;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  uint64_t v11 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v12 = v11 + 16;
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = (v13 + 80 + a1) & ~v13;
  uint64_t v15 = (v13 + 80 + a2) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v11 + 16))(v14, v15);
  uint64_t v16 = *(void *)(v12 + 48);
  uint64_t v17 = sub_256176AA8();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = v18;
  int v20 = *(_DWORD *)(v18 + 80);
  uint64_t v21 = sub_256176158();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(_DWORD *)(v22 + 80);
  uint64_t v24 = (*(_DWORD *)(v22 + 80) | v20) & 0xF8 | 7u;
  uint64_t v25 = (void *)((v16 + v24 + v14) & ~v24);
  uint64_t v26 = (unsigned __int8 *)((v16 + v24 + v15) & ~v24);
  if (*(_DWORD *)(v18 + 84)) {
    size_t v27 = *(void *)(v18 + 64);
  }
  else {
    size_t v27 = *(void *)(v18 + 64) + 1;
  }
  size_t v28 = v27 + v23;
  if (((v27 + v23) & ~v23) + *(void *)(*(void *)(v21 - 8) + 64) <= 8) {
    uint64_t v29 = 8;
  }
  else {
    uint64_t v29 = ((v27 + v23) & ~v23) + *(void *)(*(void *)(v21 - 8) + 64);
  }
  unsigned int v30 = v26[v29];
  unsigned int v31 = v30 - 2;
  if (v30 >= 2)
  {
    if (v29 <= 3) {
      uint64_t v32 = v29;
    }
    else {
      uint64_t v32 = 4;
    }
    switch(v32)
    {
      case 1:
        int v33 = *v26;
        goto LABEL_19;
      case 2:
        int v33 = *(unsigned __int16 *)v26;
        goto LABEL_19;
      case 3:
        int v33 = *(unsigned __int16 *)v26 | (v26[2] << 16);
        goto LABEL_19;
      case 4:
        int v33 = *(_DWORD *)v26;
LABEL_19:
        int v34 = (v33 | (v31 << (8 * v29))) + 2;
        unsigned int v30 = v33 + 2;
        if (v29 < 4) {
          unsigned int v30 = v34;
        }
        break;
      default:
        break;
    }
  }
  if (v30 == 1)
  {
    uint64_t v37 = v21;
    uint64_t v35 = ~v23;
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v19 + 48))(v26, 1, v17))
    {
      memcpy(v25, v26, v27);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v19 + 16))(v25, v26, v17);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v25, 0, 1, v17);
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v22 + 16))(((unint64_t)v25 + v28) & v35, (unint64_t)&v26[v28] & v35, v37);
    *((unsigned char *)v25 + v29) = 1;
  }
  else
  {
    *uint64_t v25 = *(void *)v26;
    *((unsigned char *)v25 + v29) = 0;
    swift_retain();
  }
  return a1;
}

uint64_t sub_255F97FC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL)
  {
    if (v6 >= 0xFFFFFFFF)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      uint64_t v9 = *(void *)(a2 + 32);
      *(unsigned char *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(a2 + 40);
      *(void *)(a1 + 32) = v9;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      uint64_t v10 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v10;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      goto LABEL_8;
    }
  }
  else
  {
    if (v6 >= 0xFFFFFFFF)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_retain();
      swift_release();
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_retain();
      swift_release();
      uint64_t v7 = *(void *)(a2 + 32);
      *(unsigned char *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(a2 + 40);
      *(void *)(a1 + 32) = v7;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v8 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v8;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v11 = *(_OWORD *)(a2 + 16);
  long long v12 = *(_OWORD *)(a2 + 32);
  long long v13 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v13;
  *(_OWORD *)(a1 + 16) = v11;
  *(_OWORD *)(a1 + 32) = v12;
LABEL_8:
  uint64_t v14 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v15 = v14 + 24;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = (v16 + 80 + a1) & ~v16;
  uint64_t v18 = (v16 + 80 + a2) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 24))(v17, v18);
  uint64_t v19 = *(void *)(v15 + 40);
  uint64_t v20 = sub_256176AA8();
  uint64_t v21 = *(void *)(v20 - 8);
  int v22 = *(_DWORD *)(v21 + 80);
  uint64_t v23 = sub_256176158();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = (*(_DWORD *)(v24 + 80) | v22) & 0xF8 | 7u;
  uint64_t v26 = (unsigned __int8 *)((v19 + v25 + v17) & ~v25);
  size_t v27 = (unsigned __int8 *)((v19 + v25 + v18) & ~v25);
  if (v26 != v27)
  {
    uint64_t v28 = v23;
    uint64_t v29 = *(void *)(v23 - 8);
    uint64_t v30 = *(_DWORD *)(v24 + 80);
    if (*(_DWORD *)(v21 + 84)) {
      size_t v31 = *(void *)(v21 + 64);
    }
    else {
      size_t v31 = *(void *)(v21 + 64) + 1;
    }
    if (((v31 + v30) & ~v30) + *(void *)(v24 + 64) <= 8) {
      uint64_t v32 = 8;
    }
    else {
      uint64_t v32 = ((v31 + v30) & ~v30) + *(void *)(v24 + 64);
    }
    unsigned int v33 = v26[v32];
    unsigned int v34 = v33 - 2;
    if (v33 >= 2)
    {
      if (v32 <= 3) {
        uint64_t v35 = v32;
      }
      else {
        uint64_t v35 = 4;
      }
      switch(v35)
      {
        case 1:
          int v36 = *v26;
          goto LABEL_24;
        case 2:
          int v36 = *(unsigned __int16 *)v26;
          goto LABEL_24;
        case 3:
          int v36 = *(unsigned __int16 *)v26 | (v26[2] << 16);
          goto LABEL_24;
        case 4:
          int v36 = *(_DWORD *)v26;
LABEL_24:
          int v37 = (v36 | (v34 << (8 * v32))) + 2;
          unsigned int v33 = v36 + 2;
          if (v32 < 4) {
            unsigned int v33 = v37;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v44 = ~v30;
    if (v33 == 1)
    {
      if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v21 + 48))(v26, 1, v20)) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v21 + 8))(v26, v20);
      }
      (*(void (**)(unint64_t, uint64_t))(v29 + 8))((unint64_t)&v26[v30 + v31] & v44, v28);
    }
    else
    {
      swift_release();
    }
    unsigned int v38 = v27[v32];
    unsigned int v39 = v38 - 2;
    if (v38 >= 2)
    {
      if (v32 <= 3) {
        uint64_t v40 = v32;
      }
      else {
        uint64_t v40 = 4;
      }
      switch(v40)
      {
        case 1:
          int v41 = *v27;
          goto LABEL_40;
        case 2:
          int v41 = *(unsigned __int16 *)v27;
          goto LABEL_40;
        case 3:
          int v41 = *(unsigned __int16 *)v27 | (v27[2] << 16);
          goto LABEL_40;
        case 4:
          int v41 = *(_DWORD *)v27;
LABEL_40:
          int v42 = (v41 | (v39 << (8 * v32))) + 2;
          unsigned int v38 = v41 + 2;
          if (v32 < 4) {
            unsigned int v38 = v42;
          }
          break;
        default:
          break;
      }
    }
    if (v38 == 1)
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v21 + 48))(v27, 1, v20))
      {
        memcpy(v26, v27, v31);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v21 + 16))(v26, v27, v20);
        (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v21 + 56))(v26, 0, 1, v20);
      }
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v29 + 16))((unint64_t)&v26[v30 + v31] & v44, (unint64_t)&v27[v30 + v31] & v44, v28);
      v26[v32] = 1;
    }
    else
    {
      *(void *)uint64_t v26 = *(void *)v27;
      v26[v32] = 0;
      swift_retain();
    }
  }
  return a1;
}

_OWORD *sub_255F98514(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  long long v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 32;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 80) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 80) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 32);
  uint64_t v12 = sub_256176AA8();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = v13;
  int v15 = *(_DWORD *)(v13 + 80);
  uint64_t v16 = sub_256176158();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(_DWORD *)(v17 + 80);
  uint64_t v19 = (*(_DWORD *)(v17 + 80) | v15) & 0xF8 | 7u;
  uint64_t v20 = (void *)((v11 + v19 + v9) & ~v19);
  uint64_t v21 = (unsigned __int8 *)((v11 + v19 + v10) & ~v19);
  if (*(_DWORD *)(v13 + 84)) {
    size_t v22 = *(void *)(v13 + 64);
  }
  else {
    size_t v22 = *(void *)(v13 + 64) + 1;
  }
  size_t v23 = v22 + v18;
  if (((v22 + v18) & ~v18) + *(void *)(*(void *)(v16 - 8) + 64) <= 8) {
    uint64_t v24 = 8;
  }
  else {
    uint64_t v24 = ((v22 + v18) & ~v18) + *(void *)(*(void *)(v16 - 8) + 64);
  }
  unsigned int v25 = v21[v24];
  unsigned int v26 = v25 - 2;
  if (v25 >= 2)
  {
    if (v24 <= 3) {
      uint64_t v27 = v24;
    }
    else {
      uint64_t v27 = 4;
    }
    switch(v27)
    {
      case 1:
        int v28 = *v21;
        goto LABEL_16;
      case 2:
        int v28 = *(unsigned __int16 *)v21;
        goto LABEL_16;
      case 3:
        int v28 = *(unsigned __int16 *)v21 | (v21[2] << 16);
        goto LABEL_16;
      case 4:
        int v28 = *(_DWORD *)v21;
LABEL_16:
        int v29 = (v28 | (v26 << (8 * v24))) + 2;
        unsigned int v25 = v28 + 2;
        if (v24 < 4) {
          unsigned int v25 = v29;
        }
        break;
      default:
        break;
    }
  }
  if (v25 == 1)
  {
    uint64_t v33 = v16;
    uint64_t v30 = ~v18;
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v14 + 48))(v21, 1, v12))
    {
      memcpy(v20, v21, v22);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v14 + 32))(v20, v21, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v12);
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v17 + 32))(((unint64_t)v20 + v23) & v30, (unint64_t)&v21[v23] & v30, v33);
    char v31 = 1;
  }
  else
  {
    char v31 = 0;
    *uint64_t v20 = *(void *)v21;
  }
  *((unsigned char *)v20 + v24) = v31;
  return a1;
}

uint64_t sub_255F98804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 8) >= 0xFFFFFFFFuLL)
  {
    unint64_t v6 = *(void *)(a2 + 8);
    if (v6 >= 0xFFFFFFFF)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v6;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_release();
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_release();
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(unsigned char *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(a2 + 40);
      uint64_t v7 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v7;
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      swift_release();
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
LABEL_6:
  uint64_t v10 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v11 = v10 + 40;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (v12 + 80 + a1) & ~v12;
  uint64_t v14 = (v12 + 80 + a2) & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v10 + 40))(v13, v14);
  uint64_t v15 = *(void *)(v11 + 24);
  uint64_t v16 = sub_256176AA8();
  uint64_t v17 = *(void *)(v16 - 8);
  int v18 = *(_DWORD *)(v17 + 80);
  uint64_t v19 = sub_256176158();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = (*(_DWORD *)(v20 + 80) | v18) & 0xF8 | 7u;
  size_t v22 = (unsigned __int8 *)((v15 + v21 + v13) & ~v21);
  size_t v23 = (unsigned __int8 *)((v15 + v21 + v14) & ~v21);
  if (v22 != v23)
  {
    uint64_t v24 = v19;
    uint64_t v25 = *(void *)(v19 - 8);
    uint64_t v26 = *(_DWORD *)(v20 + 80);
    if (*(_DWORD *)(v17 + 84)) {
      size_t v27 = *(void *)(v17 + 64);
    }
    else {
      size_t v27 = *(void *)(v17 + 64) + 1;
    }
    if (((v27 + v26) & ~v26) + *(void *)(v20 + 64) <= 8) {
      uint64_t v28 = 8;
    }
    else {
      uint64_t v28 = ((v27 + v26) & ~v26) + *(void *)(v20 + 64);
    }
    unsigned int v29 = v22[v28];
    unsigned int v30 = v29 - 2;
    if (v29 >= 2)
    {
      if (v28 <= 3) {
        uint64_t v31 = v28;
      }
      else {
        uint64_t v31 = 4;
      }
      switch(v31)
      {
        case 1:
          int v32 = *v22;
          goto LABEL_22;
        case 2:
          int v32 = *(unsigned __int16 *)v22;
          goto LABEL_22;
        case 3:
          int v32 = *(unsigned __int16 *)v22 | (v22[2] << 16);
          goto LABEL_22;
        case 4:
          int v32 = *(_DWORD *)v22;
LABEL_22:
          int v33 = (v32 | (v30 << (8 * v28))) + 2;
          unsigned int v29 = v32 + 2;
          if (v28 < 4) {
            unsigned int v29 = v33;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v41 = ~v26;
    if (v29 == 1)
    {
      if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v17 + 48))(v22, 1, v16)) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v17 + 8))(v22, v16);
      }
      (*(void (**)(unint64_t, uint64_t))(v25 + 8))((unint64_t)&v22[v26 + v27] & v41, v24);
    }
    else
    {
      swift_release();
    }
    unsigned int v34 = v23[v28];
    unsigned int v35 = v34 - 2;
    if (v34 >= 2)
    {
      if (v28 <= 3) {
        uint64_t v36 = v28;
      }
      else {
        uint64_t v36 = 4;
      }
      switch(v36)
      {
        case 1:
          int v37 = *v23;
          goto LABEL_38;
        case 2:
          int v37 = *(unsigned __int16 *)v23;
          goto LABEL_38;
        case 3:
          int v37 = *(unsigned __int16 *)v23 | (v23[2] << 16);
          goto LABEL_38;
        case 4:
          int v37 = *(_DWORD *)v23;
LABEL_38:
          int v38 = (v37 | (v35 << (8 * v28))) + 2;
          unsigned int v34 = v37 + 2;
          if (v28 < 4) {
            unsigned int v34 = v38;
          }
          break;
        default:
          break;
      }
    }
    if (v34 == 1)
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v17 + 48))(v23, 1, v16))
      {
        memcpy(v22, v23, v27);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v17 + 32))(v22, v23, v16);
        (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v17 + 56))(v22, 0, 1, v16);
      }
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v25 + 32))((unint64_t)&v22[v26 + v27] & v41, (unint64_t)&v23[v26 + v27] & v41, v24);
      char v39 = 1;
    }
    else
    {
      char v39 = 0;
      *(void *)size_t v22 = *(void *)v23;
    }
    v22[v28] = v39;
  }
  return a1;
}

uint64_t sub_255F98C98(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  if (v7 <= 0x7FFFFFFE) {
    unsigned int v8 = 2147483646;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(sub_256176AA8() - 8);
  int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(void *)(v9 + 64);
  uint64_t v12 = sub_256176158();
  int v13 = *(_DWORD *)(*(void *)(v12 - 8) + 80);
  uint64_t v14 = *(unsigned __int8 *)(v6 + 80);
  if (v10) {
    uint64_t v15 = v11;
  }
  else {
    uint64_t v15 = v11 + 1;
  }
  unint64_t v16 = 8;
  if (((v15 + v13) & ~(unint64_t)v13)
     + *(void *)(*(void *)(v12 - 8) + 64) > 8)
    unint64_t v16 = ((v15 + v13) & ~(unint64_t)v13)
        + *(void *)(*(void *)(v12 - 8) + 64);
  if (!a2) {
    return 0;
  }
  if (a2 <= v8) {
    goto LABEL_28;
  }
  uint64_t v17 = (*(_DWORD *)(v9 + 80) | v13) & 0xF8 | 7u;
  uint64_t v18 = v16 + ((((v14 + 80) & ~v14) + *(void *)(v6 + 64) + v17) & ~v17) + 1;
  char v19 = 8 * v18;
  if (v18 <= 3)
  {
    unsigned int v22 = ((a2 - v8 + ~(-1 << v19)) >> v19) + 1;
    if (HIWORD(v22))
    {
      int v20 = *(_DWORD *)((char *)a1 + v18);
      if (!v20) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v22 > 0xFF)
    {
      int v20 = *(unsigned __int16 *)((char *)a1 + v18);
      if (!*(unsigned __int16 *)((char *)a1 + v18)) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v22 < 2)
    {
LABEL_28:
      if (v7 > 0x7FFFFFFE)
      {
        uint64_t v25 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48);
        return v25(((unint64_t)a1 + v14 + 80) & ~v14, v7, v5);
      }
      else
      {
        unint64_t v24 = *((void *)a1 + 1);
        if (v24 >= 0xFFFFFFFF) {
          LODWORD(v24) = -1;
        }
        if ((v24 + 1) >= 2) {
          return v24;
        }
        else {
          return 0;
        }
      }
    }
  }
  int v20 = *((unsigned __int8 *)a1 + v18);
  if (!*((unsigned char *)a1 + v18)) {
    goto LABEL_28;
  }
LABEL_20:
  int v23 = (v20 - 1) << v19;
  if (v18 > 3) {
    int v23 = 0;
  }
  if (v18)
  {
    if (v18 > 3) {
      LODWORD(v18) = 4;
    }
    switch((int)v18)
    {
      case 2:
        LODWORD(v18) = *a1;
        break;
      case 3:
        LODWORD(v18) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v18) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v18) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v8 + (v18 | v23) + 1;
}

void sub_255F98FA0(_WORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v28 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(v28 - 8);
  uint64_t v29 = v7;
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0x7FFFFFFE) {
    unsigned int v9 = 2147483646;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(void *)(sub_256176AA8() - 8);
  int v11 = *(_DWORD *)(v10 + 84);
  uint64_t v12 = *(void *)(v10 + 64);
  uint64_t v13 = *(void *)(sub_256176158() - 8);
  uint64_t v14 = *(_DWORD *)(v13 + 80);
  uint64_t v15 = *(void *)(v13 + 64);
  uint64_t v16 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v17 = (*(_DWORD *)(v10 + 80) | *(_DWORD *)(v13 + 80)) & 0xF8 | 7u;
  uint64_t v18 = (((v16 + 80) & ~v16) + *(void *)(v7 + 64) + v17) & ~v17;
  if (v11) {
    uint64_t v19 = v12;
  }
  else {
    uint64_t v19 = v12 + 1;
  }
  unint64_t v20 = ((v19 + v14) & ~v14) + v15;
  if (v20 <= 8) {
    unint64_t v20 = 8;
  }
  size_t v21 = v20 + v18 + 1;
  if (a3 <= v9)
  {
    int v22 = 0;
  }
  else if (v21 <= 3)
  {
    unsigned int v25 = ((a3 - v9 + ~(-1 << (8 * v21))) >> (8 * v21)) + 1;
    if (HIWORD(v25))
    {
      int v22 = 4;
    }
    else if (v25 >= 0x100)
    {
      int v22 = 2;
    }
    else
    {
      int v22 = v25 > 1;
    }
  }
  else
  {
    int v22 = 1;
  }
  if (v9 < a2)
  {
    unsigned int v23 = ~v9 + a2;
    if (v21 < 4)
    {
      int v24 = (v23 >> (8 * v21)) + 1;
      if (v21)
      {
        int v26 = v23 & ~(-1 << (8 * v21));
        bzero(a1, v21);
        if (v21 == 3)
        {
          *a1 = v26;
          *((unsigned char *)a1 + 2) = BYTE2(v26);
        }
        else if (v21 == 2)
        {
          *a1 = v26;
        }
        else
        {
          *(unsigned char *)a1 = v26;
        }
      }
    }
    else
    {
      bzero(a1, v21);
      *(_DWORD *)a1 = v23;
      int v24 = 1;
    }
    switch(v22)
    {
      case 1:
        *((unsigned char *)a1 + v21) = v24;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v21) = v24;
        return;
      case 3:
        goto LABEL_46;
      case 4:
        *(_DWORD *)((char *)a1 + v21) = v24;
        return;
      default:
        return;
    }
  }
  switch(v22)
  {
    case 1:
      *((unsigned char *)a1 + v21) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 2:
      *(_WORD *)((char *)a1 + v21) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 3:
LABEL_46:
      __break(1u);
      JUMPOUT(0x255F99334);
    case 4:
      *(_DWORD *)((char *)a1 + v21) = 0;
      goto LABEL_28;
    default:
LABEL_28:
      if (a2)
      {
LABEL_29:
        if (v8 > 0x7FFFFFFE)
        {
          size_t v27 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56);
          v27(((unint64_t)a1 + v16 + 80) & ~v16, a2, v8, v28);
        }
        else if (a2 > 0x7FFFFFFE)
        {
          *((_OWORD *)a1 + 3) = 0u;
          *((_OWORD *)a1 + 4) = 0u;
          *((_OWORD *)a1 + 1) = 0u;
          *((_OWORD *)a1 + 2) = 0u;
          *(_OWORD *)a1 = 0u;
          *(_DWORD *)a1 = a2 - 0x7FFFFFFF;
        }
        else
        {
          *((void *)a1 + 1) = a2;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for StateOfMindEntryPhase_iOS()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_255F99374()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255F993B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v3 = sub_2561778B8();
  uint64_t v34 = v3;
  uint64_t v44 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v43 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = *(void *)(a1 + 16);
  sub_2561761B8();
  sub_2561761B8();
  sub_2561761B8();
  sub_2561761B8();
  uint64_t v5 = sub_2561761B8();
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v39 = (uint64_t)&v32 - v6;
  sub_255F9A0E8(255, &qword_269F435C8, (uint64_t (*)(uint64_t))sub_255F9A14C, MEMORY[0x263F8D8F0]);
  uint64_t v8 = v7;
  uint64_t v35 = v7;
  uint64_t v38 = *(void *)(a1 + 24);
  uint64_t v9 = MEMORY[0x263F19100];
  uint64_t v62 = v38;
  uint64_t v63 = MEMORY[0x263F19100];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v11 = MEMORY[0x263F18C10];
  uint64_t v60 = WitnessTable;
  uint64_t v61 = MEMORY[0x263F18C10];
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v59 = v11;
  uint64_t v56 = swift_getWitnessTable();
  uint64_t v57 = v11;
  uint64_t v54 = swift_getWitnessTable();
  uint64_t v55 = v9;
  uint64_t v36 = v5;
  uint64_t v12 = swift_getWitnessTable();
  uint64_t v33 = v12;
  unint64_t v32 = sub_255F9A398();
  v50[0] = v5;
  v50[1] = v8;
  v50[2] = v3;
  uint64_t v51 = v12;
  uint64_t v52 = (_UNKNOWN **)v32;
  uint64_t v53 = MEMORY[0x263F1B908];
  uint64_t v13 = type metadata accessor for ScrollableWithPinnedFooter();
  uint64_t v37 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v32 - v17;
  uint64_t v19 = a1;
  uint64_t v20 = v40;
  uint64_t v51 = type metadata accessor for AssociationSelectionPhaseSpecs();
  uint64_t v52 = &off_2704B9168;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v50);
  sub_25611AFC4((uint64_t)boxed_opaque_existential_1);
  uint64_t v22 = v39;
  uint64_t v23 = v41;
  uint64_t v24 = v38;
  sub_25606E750(v50, v38, v39);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
  LOBYTE(v3) = sub_255F9990C(v19);
  uint64_t v47 = v23;
  uint64_t v48 = v24;
  uint64_t v49 = v20;
  unsigned int v25 = v43;
  sub_2561778A8();
  double v26 = *(double *)&v36;
  uint64_t v27 = v34;
  double v28 = sub_25605CB74(v3 & 1, (uint64_t)sub_255F9A51C, (uint64_t)v46, *(double *)&v36, v35, v34, v33, v16, v32, MEMORY[0x263F1B908]);
  (*(void (**)(char *, uint64_t, double))(v44 + 8))(v25, v27, v28);
  (*(void (**)(uint64_t, double))(v42 + 8))(v22, COERCE_DOUBLE(*(void *)&v26));
  uint64_t v29 = swift_getWitnessTable();
  sub_25605CACC(v16, v13, v29);
  unsigned int v30 = *(uint64_t (**)(char *, uint64_t))(v37 + 8);
  v30(v16, v13);
  sub_25605CACC(v18, v13, v29);
  return v30(v18, v13);
}

uint64_t sub_255F9990C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (void *)((char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for AssociationSelectionPhaseSpecs();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25611AFC4((uint64_t)v9);
  char v10 = sub_256176138();
  sub_255F9A7B8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for AssociationSelectionPhaseSpecs);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v4 + 16))(v6, v2, a1);
  if (v10)
  {
    (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, a1);
  }
  else
  {
    uint64_t v11 = *v6;
    uint64_t v12 = v6[1];
    uint64_t v13 = v6[4];
    v15[2] = v6[2];
    uint64_t v16 = v11;
    v15[1] = v13;
    sub_255F9A818(v11, v12);
    (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, a1);
    if (v12)
    {
      sub_255F9A52C(v16, v12);
      return 1;
    }
  }
  return 0;
}

uint64_t sub_255F99B14@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_255F9A14C();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[1];
  if (v9)
  {
    uint64_t v10 = a1[9];
    uint64_t v11 = a1[6];
    uint64_t v12 = a1[7];
    uint64_t v22 = a1[8];
    uint64_t v23 = v11;
    uint64_t v13 = a1[5];
    uint64_t v27 = a1[4];
    uint64_t v28 = a2;
    uint64_t v15 = a1[2];
    uint64_t v14 = a1[3];
    uint64_t v16 = *a1;
    uint64_t v25 = v13;
    uint64_t v26 = v16;
    v29[0] = v16;
    v29[1] = v9;
    v29[2] = v15;
    v29[3] = v14;
    v29[4] = v27;
    char v30 = v13 & 1;
    uint64_t v31 = v11;
    uint64_t v32 = v12;
    uint64_t v33 = v22;
    uint64_t v34 = v10;
    uint64_t v24 = v6;
    type metadata accessor for StateOfMindEntryPhase_iOS();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_255F99D88((uint64_t)v29);
    uint64_t v17 = (uint64_t *)&v8[*(int *)(v5 + 36)];
    uint64_t *v17 = swift_getKeyPath();
    sub_255F9A0E8(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    swift_storeEnumTagMultiPayload();
    sub_255F9A52C(v26, v9);
    uint64_t v18 = v28;
    sub_255F9A59C((uint64_t)v8, v28);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v18, 0, 1, v5);
  }
  else
  {
    uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
    return v20(a2, 1, 1, v5);
  }
}

uint64_t sub_255F99D88(uint64_t a1)
{
  v24[1] = *MEMORY[0x263EF8340];
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v22 = *(void *)(a1 + 32);
  char v23 = *(unsigned char *)(a1 + 40);
  v24[0] = v3;
  uint64_t v15 = type metadata accessor for AssociationSelectionPhaseSpecs();
  uint64_t v16 = &off_2704B9168;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v14);
  sub_255F9A600((uint64_t)v24);
  swift_retain();
  sub_25611AFC4((uint64_t)boxed_opaque_existential_1);
  uint64_t v5 = (_OWORD *)swift_allocObject();
  long long v6 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v6;
  v5[5] = *(_OWORD *)(a1 + 64);
  long long v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  uint64_t v8 = (_OWORD *)swift_allocObject();
  long long v9 = *(_OWORD *)(a1 + 48);
  v8[3] = *(_OWORD *)(a1 + 32);
  v8[4] = v9;
  v8[5] = *(_OWORD *)(a1 + 64);
  long long v10 = *(_OWORD *)(a1 + 16);
  v8[1] = *(_OWORD *)a1;
  v8[2] = v10;
  v18[5] = v3;
  v18[6] = v2;
  v18[7] = v22;
  char v19 = v23;
  sub_255F9A6BC(&v14, (uint64_t)v18);
  v17[0] = sub_255F9A630;
  v17[1] = v5;
  uint64_t v20 = sub_255F9A6B4;
  uint64_t v21 = v8;
  sub_255F9A768(0, (unint64_t *)&qword_26B2AD360, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2561A0960;
  long long v14 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(inited + 32) = v14;
  sub_255F9A6D4(a1);
  sub_255F9A6D4(a1);
  sub_255F9A73C((uint64_t)&v14);
  uint64_t v12 = swift_bridgeObjectRetain();
  sub_255FCD3A4(v12);
  sub_255F9A768(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D488]);
  sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_255F9A218();
  sub_255F9A350((unint64_t *)&qword_269F435F0, (void (*)(uint64_t))sub_255F9A218);
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  return sub_255F9A7B8((uint64_t)v17, (uint64_t (*)(void))sub_255F9A218);
}

uint64_t sub_255F9A078@<X0>(uint64_t a1@<X8>)
{
  sub_255F5CE90();
  swift_bridgeObjectRetain();
  uint64_t result = sub_256177028();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

void sub_255F9A0E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_255F9A14C()
{
  if (!qword_269F435D0)
  {
    sub_255F9A1B0();
    sub_255F9A278();
    unint64_t v0 = type metadata accessor for StateOfMindEntryButtonTray();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F435D0);
    }
  }
}

void sub_255F9A1B0()
{
  if (!qword_269F435D8)
  {
    sub_255F9A218();
    sub_256176D38();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F435D8);
    }
  }
}

void sub_255F9A218()
{
  if (!qword_269F435E0)
  {
    unint64_t v0 = type metadata accessor for ActionButton();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F435E0);
    }
  }
}

unint64_t sub_255F9A278()
{
  unint64_t result = qword_269F435E8;
  if (!qword_269F435E8)
  {
    sub_255F9A1B0();
    sub_255F9A350((unint64_t *)&qword_269F435F0, (void (*)(uint64_t))sub_255F9A218);
    sub_255F9A350(&qword_269F42EA0, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F435E8);
  }
  return result;
}

uint64_t sub_255F9A350(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_255F9A398()
{
  unint64_t result = qword_269F435F8;
  if (!qword_269F435F8)
  {
    sub_255F9A0E8(255, &qword_269F435C8, (uint64_t (*)(uint64_t))sub_255F9A14C, MEMORY[0x263F8D8F0]);
    sub_255F9A350(&qword_269F43600, (void (*)(uint64_t))sub_255F9A14C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F435F8);
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_255F9A51C@<X0>(uint64_t a1@<X8>)
{
  return sub_255F99B14(*(uint64_t **)(v1 + 32), a1);
}

uint64_t sub_255F9A52C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_255F9A59C(uint64_t a1, uint64_t a2)
{
  sub_255F9A14C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_255F9A600(uint64_t a1)
{
  return a1;
}

uint64_t sub_255F9A630()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t objectdestroyTm_0()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255F9A6B4@<X0>(uint64_t a1@<X8>)
{
  return sub_255F9A078(a1);
}

uint64_t sub_255F9A6BC(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_255F9A6D4(uint64_t a1)
{
  return a1;
}

uint64_t sub_255F9A73C(uint64_t a1)
{
  return a1;
}

void sub_255F9A768(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x263F8D310]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_255F9A7B8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_255F9A818(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t destroy for StateOfMindEntryPhaseButtonConfiguration()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for StateOfMindEntryPhaseButtonConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for StateOfMindEntryPhaseButtonConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for StateOfMindEntryPhaseButtonConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for StateOfMindEntryPhaseButtonConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StateOfMindEntryPhaseButtonConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindEntryPhaseButtonConfiguration()
{
  return &type metadata for StateOfMindEntryPhaseButtonConfiguration;
}

uint64_t sub_255F9ABC4()
{
  return swift_getWitnessTable();
}

uint64_t *sub_255F9AD90(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = (void *)a2[1];
    *a1 = *a2;
    a1[1] = (uint64_t)v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    long long v10 = (char *)a2 + v8;
    *(_OWORD *)uint64_t v9 = *(_OWORD *)((char *)a2 + v8);
    *((_WORD *)v9 + 8) = *(_WORD *)((char *)a2 + v8 + 16);
    uint64_t v11 = *(int *)(type metadata accessor for CustomReminderModel() + 32);
    __dst = &v9[v11];
    uint64_t v25 = v9;
    uint64_t v12 = &v10[v11];
    uint64_t v13 = sub_256175568();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    id v16 = v7;
    if (v15(v12, 1, v13))
    {
      sub_255F9EA0C(0, &qword_269F43608, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
      memcpy(__dst, v12, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
    sub_255F9EA0C(0, &qword_269F43610, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, MEMORY[0x263F1B5D0]);
    *(void *)&v25[*(int *)(v19 + 28)] = *(void *)&v10[*(int *)(v19 + 28)];
    uint64_t v20 = *(int *)(a3 + 24);
    uint64_t v21 = (char *)v4 + v20;
    uint64_t v22 = (char *)a2 + v20;
    char *v21 = *v22;
    *((void *)v21 + 1) = *((void *)v22 + 1);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_255F9AFDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = v4 + *(int *)(type metadata accessor for CustomReminderModel() + 32);
  uint64_t v6 = sub_256175568();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  sub_255F9EA0C(0, &qword_269F43610, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, MEMORY[0x263F1B5D0]);
  swift_release();

  return swift_release();
}

void *sub_255F9B104(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(_OWORD *)uint64_t v7 = *(_OWORD *)((char *)a2 + v6);
  *((_WORD *)v7 + 8) = *(_WORD *)((char *)a2 + v6 + 16);
  uint64_t v9 = *(int *)(type metadata accessor for CustomReminderModel() + 32);
  __dst = &v7[v9];
  long long v10 = &v8[v9];
  uint64_t v11 = sub_256175568();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  id v14 = v5;
  if (v13(v10, 1, v11))
  {
    sub_255F9EA0C(0, &qword_269F43608, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
    memcpy(__dst, v10, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  sub_255F9EA0C(0, &qword_269F43610, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, MEMORY[0x263F1B5D0]);
  *(void *)&v7[*(int *)(v16 + 28)] = *(void *)&v8[*(int *)(v16 + 28)];
  uint64_t v17 = *(int *)(a3 + 24);
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  char *v18 = *v19;
  *((void *)v18 + 1) = *((void *)v19 + 1);
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_255F9B304(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = (void *)a2[1];
  uint64_t v7 = (void *)a1[1];
  a1[1] = v6;
  id v8 = v6;

  uint64_t v26 = a3;
  uint64_t v27 = a2;
  uint64_t v9 = *(int *)(a3 + 20);
  long long v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  *(void *)long long v10 = *(void *)((char *)a2 + v9);
  *((void *)v10 + 1) = *(void *)((char *)a2 + v9 + 8);
  v10[16] = *((unsigned char *)a2 + v9 + 16);
  v10[17] = *((unsigned char *)a2 + v9 + 17);
  uint64_t v12 = *(int *)(type metadata accessor for CustomReminderModel() + 32);
  uint64_t v13 = &v10[v12];
  id v14 = &v11[v12];
  uint64_t v15 = sub_256175568();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    sub_255F9EA0C(0, &qword_269F43608, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_7:
  sub_255F9EA0C(0, &qword_269F43610, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, MEMORY[0x263F1B5D0]);
  *(void *)&v10[*(int *)(v21 + 28)] = *(void *)&v11[*(int *)(v21 + 28)];
  swift_retain();
  swift_release();
  uint64_t v22 = *(int *)(v26 + 24);
  char v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)v27 + v22;
  *char v23 = *v24;
  *((void *)v23 + 1) = *((void *)v24 + 1);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_255F9B590(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  *(_OWORD *)uint64_t v7 = *(_OWORD *)((char *)a2 + v6);
  *((_WORD *)v7 + 8) = *(_WORD *)((char *)a2 + v6 + 16);
  uint64_t v9 = *(int *)(type metadata accessor for CustomReminderModel() + 32);
  long long v10 = &v7[v9];
  uint64_t v11 = &v8[v9];
  uint64_t v12 = sub_256175568();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    sub_255F9EA0C(0, &qword_269F43608, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  sub_255F9EA0C(0, &qword_269F43610, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, MEMORY[0x263F1B5D0]);
  *(void *)&v7[*(int *)(v15 + 28)] = *(void *)&v8[*(int *)(v15 + 28)];
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_255F9B75C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  uint64_t v7 = (void *)a1[1];
  *a1 = *a2;
  a1[1] = v6;

  uint64_t v25 = a3;
  uint64_t v26 = a2;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  long long v10 = (char *)a2 + v8;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)((char *)a2 + v8);
  v9[16] = *((unsigned char *)a2 + v8 + 16);
  v9[17] = *((unsigned char *)a2 + v8 + 17);
  uint64_t v11 = *(int *)(type metadata accessor for CustomReminderModel() + 32);
  uint64_t v12 = &v9[v11];
  uint64_t v13 = &v10[v11];
  uint64_t v14 = sub_256175568();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    sub_255F9EA0C(0, &qword_269F43608, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  sub_255F9EA0C(0, &qword_269F43610, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, MEMORY[0x263F1B5D0]);
  *(void *)&v9[*(int *)(v20 + 28)] = *(void *)&v10[*(int *)(v20 + 28)];
  swift_release();
  uint64_t v21 = *(int *)(v25 + 24);
  uint64_t v22 = (char *)a1 + v21;
  char v23 = (char *)v26 + v21;
  char *v22 = *v23;
  *((void *)v22 + 1) = *((void *)v23 + 1);
  swift_release();
  return a1;
}

uint64_t sub_255F9B9C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255F9B9D8);
}

uint64_t sub_255F9B9D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_255F9EA0C(0, &qword_269F43610, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, MEMORY[0x263F1B5D0]);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_255F9BAB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255F9BACC);
}

uint64_t sub_255F9BACC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_255F9EA0C(0, &qword_269F43610, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, MEMORY[0x263F1B5D0]);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for CustomReminderRow()
{
  uint64_t result = qword_269F43618;
  if (!qword_269F43618) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_255F9BBF0()
{
  sub_255F9EA0C(319, &qword_269F43610, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, MEMORY[0x263F1B5D0]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_255F9BCC0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255F9BCDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v64 = a1;
  uint64_t v76 = *MEMORY[0x263EF8340];
  uint64_t v3 = type metadata accessor for CustomReminderModel();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v61 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_256176298();
  uint64_t v60 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  uint64_t v59 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CustomReminderRow();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v67 = v6 - 8;
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F9DA04();
  uint64_t v54 = v10;
  uint64_t v55 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v52 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F9E31C();
  unint64_t v58 = v12;
  uint64_t v57 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v53 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F9E420();
  uint64_t v65 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v56 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F9E4AC();
  uint64_t v62 = v16;
  uint64_t v63 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v68 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F9EA70(v1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CustomReminderRow);
  unint64_t v18 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v19 = swift_allocObject();
  sub_255F9EF2C((uint64_t)v9, v19 + v18, (uint64_t (*)(void))type metadata accessor for CustomReminderRow);
  uint64_t v69 = v1;
  sub_255F9DA68();
  sub_255F9E1A8();
  sub_2561775C8();
  uint64_t v20 = v1 + *(int *)(v67 + 32);
  char v21 = *(unsigned char *)v20;
  uint64_t v22 = *(void *)(v20 + 8);
  LOBYTE(v74) = v21;
  uint64_t v75 = v22;
  sub_255F9E9B8(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
  sub_256177598();
  sub_255F9EA70(v1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CustomReminderRow);
  uint64_t v23 = swift_allocObject();
  sub_255F9EF2C((uint64_t)v9, v23 + v18, (uint64_t (*)(void))type metadata accessor for CustomReminderRow);
  type metadata accessor for CustomReminderView(0);
  sub_255F9E2D4(&qword_269F436E8, (void (*)(uint64_t))sub_255F9DA04);
  sub_255F9E2D4(&qword_269F436F0, (void (*)(uint64_t))type metadata accessor for CustomReminderView);
  uint64_t v24 = v53;
  uint64_t v25 = v54;
  uint64_t v26 = v52;
  sub_2561772E8();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v26, v25);
  uint64_t v27 = *(void **)(v2 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  id v28 = v27;
  sub_256175C88();

  swift_release();
  swift_release();
  LOBYTE(v27) = (_BYTE)v70;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v30 = swift_allocObject();
  *(unsigned char *)(v30 + 16) = (_BYTE)v27;
  uint64_t v31 = v57;
  uint64_t v32 = (uint64_t)v56;
  uint64_t v33 = v24;
  uint64_t v34 = v24;
  unint64_t v35 = v58;
  (*(void (**)(char *, char *, unint64_t))(v57 + 16))(v56, v33, v58);
  uint64_t v36 = (uint64_t *)(v32 + v65[9]);
  *uint64_t v36 = KeyPath;
  v36[1] = (uint64_t)sub_255F9E950;
  void v36[2] = v30;
  (*(void (**)(char *, unint64_t))(v31 + 8))(v34, v35);
  uint64_t v37 = v59;
  sub_256176288();
  unint64_t v58 = sub_255F9E580();
  uint64_t v57 = sub_255F9E2D4(&qword_269F43710, MEMORY[0x263F18FD0]);
  uint64_t v38 = v66;
  sub_256177078();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v37, v38);
  sub_255F9E958(v32, (uint64_t (*)(void))sub_255F9E420);
  sub_255F9E9B8(0, (unint64_t *)&qword_26B2AD360, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2561A0040;
  *(void *)(inited + 32) = 0xD000000000000014;
  *(void *)(inited + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0x80000002561AA150;
  uint64_t v70 = 0;
  unint64_t v71 = 0xE000000000000000;
  sub_255F9EA0C(0, &qword_269F43610, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, MEMORY[0x263F1B5D0]);
  uint64_t v40 = (uint64_t *)v61;
  sub_256177578();
  uint64_t v41 = *v40;
  sub_255F9E958((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for CustomReminderModel);
  uint64_t v74 = v41;
  uint64_t v42 = sub_2561787E8();
  unint64_t v44 = v43;
  swift_bridgeObjectRelease();
  uint64_t v70 = (void *)v42;
  unint64_t v71 = v44;
  sub_256177F68();
  sub_256177578();
  uint64_t v45 = *v40;
  sub_255F9E958((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for CustomReminderModel);
  uint64_t v74 = v45;
  sub_2561787E8();
  sub_256177F68();
  swift_bridgeObjectRelease();
  unint64_t v46 = v71;
  *(void *)(inited + 48) = v70;
  *(void *)(inited + 56) = v46;
  uint64_t v70 = &unk_2704B5358;
  uint64_t v47 = swift_bridgeObjectRetain();
  sub_255FCD3A4(v47);
  sub_255F9E9B8(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  uint64_t v70 = v65;
  unint64_t v71 = v66;
  unint64_t v72 = v58;
  uint64_t v73 = v57;
  swift_getOpaqueTypeConformance2();
  uint64_t v48 = v62;
  uint64_t v49 = v68;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v49, v48);
}

uint64_t sub_255F9C76C()
{
  return swift_release();
}

uint64_t sub_255F9C834@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_255F9DAFC(0, &qword_269F43638, &qword_269F43640, (uint64_t (*)(uint64_t))sub_255F9DB9C, &qword_269F436B0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v10 - v5;
  *(void *)uint64_t v6 = sub_256176678();
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  sub_255F9EB6C();
  sub_255F9C91C(a1, &v6[*(int *)(v7 + 44)]);
  sub_255F9EC04((uint64_t)v6, a2);
  sub_255F9DA68();
  *(unsigned char *)(a2 + *(int *)(v8 + 36)) = 0;
  return sub_255F9EC94((uint64_t)v6);
}

uint64_t sub_255F9C91C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  unint64_t v44 = a2;
  sub_255F9EA0C(0, (unint64_t *)&qword_269F42398, MEMORY[0x263F1B548], MEMORY[0x263F1A418]);
  uint64_t v4 = v3 - 8;
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (uint64_t *)((char *)&v34 - v5);
  uint64_t v35 = sub_256177518();
  uint64_t v7 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F9DF68();
  uint64_t v37 = v10;
  MEMORY[0x270FA5388](v10);
  unint64_t v12 = (uint64_t *)((char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_255F9DEE4();
  uint64_t v42 = *(void *)(v13 - 8);
  uint64_t v43 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v38 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F9DE50();
  uint64_t v40 = v15 - 8;
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  unint64_t v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v39 = (uint64_t)&v34 - v19;
  uint64_t v41 = sub_256176678();
  uint64_t v20 = sub_256176788();
  sub_255F9CF00(a1, v45);
  v46[296] = 1;
  memcpy(&v46[7], v45, 0x120uLL);
  v47[0] = v20;
  v47[1] = 0;
  LOBYTE(v47[2]) = 1;
  memcpy((char *)&v47[2] + 1, v46, 0x127uLL);
  memcpy(v49, v47, sizeof(v49));
  char v48 = 1;
  v50[0] = v20;
  v50[1] = 0;
  char v51 = 1;
  memcpy(v52, v46, sizeof(v52));
  sub_255F9ED1C((uint64_t)v47);
  sub_255F9ED90((uint64_t)v50);
  v53[319] = 1;
  memcpy(&v53[7], v49, 0x138uLL);
  int v36 = 1;
  memcpy(v54, v53, sizeof(v54));
  uint64_t v21 = sub_2561774E8();
  uint64_t v22 = v35;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F1B538], v35);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v6 + *(int *)(v4 + 36), v9, v22);
  *uint64_t v6 = KeyPath;
  sub_255F9EE0C((uint64_t)v6, (uint64_t)v12 + *(int *)(v37 + 36));
  *unint64_t v12 = v21;
  swift_retain();
  sub_255F9EEA0((uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v22);
  swift_release();
  sub_256176E88();
  sub_255F9DFF8();
  uint64_t v24 = v38;
  sub_256177068();
  sub_255F9E958((uint64_t)v12, (uint64_t (*)(void))sub_255F9DF68);
  id v25 = objc_msgSend(self, sel_tertiaryLabelColor);
  uint64_t v26 = MEMORY[0x25A29FE80](v25);
  uint64_t v28 = v42;
  uint64_t v27 = v43;
  (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v18, v24, v43);
  *(void *)&v18[*(int *)(v40 + 44)] = v26;
  (*(void (**)(char *, uint64_t))(v28 + 8))(v24, v27);
  uint64_t v29 = v39;
  sub_255F9EF2C((uint64_t)v18, v39, (uint64_t (*)(void))sub_255F9DE50);
  sub_255F9EA70(v29, (uint64_t)v18, (uint64_t (*)(void))sub_255F9DE50);
  uint64_t v30 = v41;
  v55[0] = v41;
  v55[1] = 0;
  LOBYTE(KeyPath) = v36;
  LOBYTE(v55[2]) = v36;
  memcpy((char *)&v55[2] + 1, v54, 0x13FuLL);
  v55[42] = 0;
  LOBYTE(v55[43]) = 1;
  uint64_t v31 = v44;
  memcpy(v44, v55, 0x159uLL);
  v31[44] = 0;
  *((unsigned char *)v31 + 36__isPlatformVersionAtLeast(2, 18, 1, 0) = 1;
  sub_255F9DB9C();
  sub_255F9EA70((uint64_t)v18, (uint64_t)v31 + *(int *)(v32 + 64), (uint64_t (*)(void))sub_255F9DE50);
  sub_255F9EF94((uint64_t)v55);
  sub_255F9E958(v29, (uint64_t (*)(void))sub_255F9DE50);
  sub_255F9E958((uint64_t)v18, (uint64_t (*)(void))sub_255F9DE50);
  v56[0] = v30;
  v56[1] = 0;
  char v57 = KeyPath;
  memcpy(v58, v54, sizeof(v58));
  uint64_t v59 = 0;
  char v60 = 1;
  return sub_255F9F008((uint64_t)v56);
}

uint64_t sub_255F9CF00@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v63 = a1;
  uint64_t v64 = a2;
  uint64_t v60 = sub_256175668();
  uint64_t v3 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_256175688();
  uint64_t v6 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  uint64_t v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_256175868();
  uint64_t v9 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  uint64_t v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CustomReminderModel();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = a1 + *(int *)(type metadata accessor for CustomReminderRow() + 20);
  sub_255F9EA0C(0, &qword_269F43610, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, MEMORY[0x263F1B5D0]);
  uint64_t v61 = v15;
  sub_256177578();
  sub_256015DD0((uint64_t)v11);
  sub_256175678();
  sub_256175658();
  uint64_t v16 = sub_256175838();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v60);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v59);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v58);
  sub_255F9E958((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for CustomReminderModel);
  *(void *)&v85[0] = v16;
  *((void *)&v85[0] + 1) = v18;
  sub_255F5CE90();
  uint64_t v19 = sub_256177028();
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  LOBYTE(v11) = v24 & 1;
  uint64_t v25 = sub_2561778F8();
  sub_2561163D8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v85, 0.0, 1, 0.0, 1, v25, v26, v19, v21, (char)v11, v23);
  sub_255F67B2C(v19, v21, (char)v11);
  swift_bridgeObjectRelease();
  long long v80 = v85[6];
  long long v81 = v85[7];
  long long v82 = v85[8];
  long long v76 = v85[2];
  long long v77 = v85[3];
  long long v78 = v85[4];
  long long v79 = v85[5];
  long long v74 = v85[0];
  long long v75 = v85[1];
  sub_256177578();
  uint64_t v27 = *(void **)(v63 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  id v28 = v27;
  sub_256175C88();

  swift_release();
  swift_release();
  uint64_t v29 = sub_256015C7C(v85[0]);
  uint64_t v31 = v30;
  sub_255F9E958((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for CustomReminderModel);
  *(void *)&v85[0] = v29;
  *((void *)&v85[0] + 1) = v31;
  uint64_t v32 = sub_256177028();
  uint64_t v34 = v33;
  LOBYTE(v14) = v35 & 1;
  sub_256176DF8();
  uint64_t v36 = sub_256176FD8();
  uint64_t v38 = v37;
  LOBYTE(v6) = v39;
  swift_release();
  sub_255F67B2C(v32, v34, (char)v14);
  swift_bridgeObjectRelease();
  LODWORD(v85[0]) = sub_256176A58();
  uint64_t v40 = sub_256176FA8();
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  LOBYTE(v14) = v45 & 1;
  sub_255F67B2C(v36, v38, v6 & 1);
  swift_bridgeObjectRelease();
  uint64_t v46 = sub_2561778F8();
  sub_2561163D8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v85, 0.0, 1, 0.0, 1, v46, v47, v40, v42, (char)v14, v44);
  sub_255F67B2C(v40, v42, (char)v14);
  swift_bridgeObjectRelease();
  long long v71 = v85[6];
  long long v72 = v85[7];
  long long v73 = v85[8];
  long long v67 = v85[2];
  long long v68 = v85[3];
  long long v69 = v85[4];
  long long v70 = v85[5];
  long long v65 = v85[0];
  long long v66 = v85[1];
  v83[6] = v80;
  v83[7] = v81;
  v83[8] = v82;
  v83[2] = v76;
  v83[3] = v77;
  v83[4] = v78;
  v83[5] = v79;
  v83[0] = v74;
  v83[1] = v75;
  long long v48 = v85[6];
  long long v49 = v85[7];
  v84[6] = v85[6];
  v84[7] = v85[7];
  v84[8] = v85[8];
  long long v50 = v85[2];
  long long v51 = v85[3];
  v84[2] = v85[2];
  v84[3] = v85[3];
  long long v53 = v85[4];
  long long v52 = v85[5];
  v84[4] = v85[4];
  v84[5] = v85[5];
  long long v55 = v85[0];
  long long v54 = v85[1];
  v84[0] = v85[0];
  v84[1] = v85[1];
  v85[6] = v80;
  v85[7] = v81;
  void v85[2] = v76;
  v85[3] = v77;
  v85[4] = v78;
  v85[5] = v79;
  v85[0] = v74;
  v85[1] = v75;
  v85[14] = v52;
  v85[15] = v48;
  v85[16] = v49;
  v85[17] = v85[8];
  v85[10] = v54;
  v85[11] = v50;
  v85[12] = v51;
  v85[13] = v53;
  v85[8] = v82;
  v85[9] = v55;
  memcpy(v64, v85, 0x120uLL);
  v86[6] = v71;
  v86[7] = v72;
  v86[8] = v73;
  v86[2] = v67;
  v86[3] = v68;
  v86[5] = v70;
  v86[4] = v69;
  v86[0] = v65;
  v86[1] = v66;
  sub_255F9F07C((uint64_t)v83);
  sub_255F9F07C((uint64_t)v84);
  sub_255F9F0BC((uint64_t)v86);
  v87[6] = v80;
  v87[7] = v81;
  v87[8] = v82;
  v87[2] = v76;
  v87[3] = v77;
  v87[4] = v78;
  v87[5] = v79;
  v87[0] = v74;
  v87[1] = v75;
  return sub_255F9F0BC((uint64_t)v87);
}

uint64_t sub_255F9D5CC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  char v35 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
  sub_255F9EA0C(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v34 = (void *)((char *)v31 - v5);
  uint64_t v38 = sub_256175868();
  uint64_t v6 = *(void *)(v38 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v38);
  uint64_t v37 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v31 - v9;
  uint64_t v36 = type metadata accessor for CustomReminderModel();
  uint64_t v11 = MEMORY[0x270FA5388](v36);
  uint64_t v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v31 - v14;
  uint64_t v16 = *(void **)(a1 + 8);
  uint64_t v17 = type metadata accessor for CustomReminderRow();
  sub_255F9EA0C(0, &qword_269F43610, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, MEMORY[0x263F1B5D0]);
  v31[1] = v16;
  sub_256177578();
  sub_256177578();
  sub_256015DD0((uint64_t)v10);
  sub_255F9E958((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for CustomReminderModel);
  uint64_t v18 = (char *)(a1 + *(int *)(v17 + 24));
  char v19 = *v18;
  uint64_t v20 = *((void *)v18 + 1);
  char v39 = v19;
  uint64_t v40 = v20;
  sub_255F9E9B8(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
  sub_256177598();
  uint64_t v21 = v41;
  uint64_t v33 = v42;
  int v32 = v43;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v24 = (uint64_t)v34;
  uint64_t v23 = v35;
  *uint64_t v34 = KeyPath;
  sub_255F9EA0C(0, &qword_269F47D00, v23, MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for NotificationSettingsModel();
  sub_255F9E2D4((unint64_t *)&qword_269F43720, (void (*)(uint64_t))type metadata accessor for NotificationSettingsModel);
  *a2 = sub_2561760E8();
  a2[1] = v25;
  uint64_t v26 = type metadata accessor for CustomReminderView(0);
  sub_255F9EA70((uint64_t)v15, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for CustomReminderModel);
  sub_256177568();
  sub_255F9E958((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for CustomReminderModel);
  uint64_t v27 = v38;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v37, v10, v38);
  sub_256177568();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v27);
  id v28 = (char *)a2 + *(int *)(v26 + 28);
  uint64_t v29 = v33;
  *(void *)id v28 = v21;
  *((void *)v28 + 1) = v29;
  v28[16] = v32;
  return sub_255F9EAD8(v24, (uint64_t)a2 + *(int *)(v26 + 32));
}

void sub_255F9DA04()
{
  if (!qword_269F43628)
  {
    sub_255F9DA68();
    sub_255F9E1A8();
    unint64_t v0 = sub_2561775E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43628);
    }
  }
}

void sub_255F9DA68()
{
  if (!qword_269F43630)
  {
    sub_255F9DAFC(255, &qword_269F43638, &qword_269F43640, (uint64_t (*)(uint64_t))sub_255F9DB9C, &qword_269F436B0);
    sub_255F9E0F8();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43630);
    }
  }
}

void sub_255F9DAFC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), unint64_t *a5)
{
  if (!*a2)
  {
    sub_255F9EA0C(255, a3, a4, MEMORY[0x263F1BAC8]);
    sub_255F9DDEC(a5, a3, a4);
    unint64_t v9 = sub_2561775F8();
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_255F9DB9C()
{
  if (!qword_269F43648)
  {
    sub_255F9DAFC(255, &qword_269F43650, &qword_269F43658, (uint64_t (*)(uint64_t))sub_255F9DC40, &qword_269F43688);
    sub_255F9DE50();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_269F43648);
    }
  }
}

void sub_255F9DC40()
{
  if (!qword_269F43660)
  {
    sub_255F9DCA8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F43660);
    }
  }
}

void sub_255F9DCA8()
{
  if (!qword_269F43668)
  {
    sub_255F9EA0C(255, &qword_269F43670, (uint64_t (*)(uint64_t))sub_255F9DD5C, MEMORY[0x263F1BAC8]);
    sub_255F9DDEC(&qword_269F43680, &qword_269F43670, (uint64_t (*)(uint64_t))sub_255F9DD5C);
    unint64_t v0 = sub_2561776F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43668);
    }
  }
}

void sub_255F9DD5C()
{
  if (!qword_269F43678)
  {
    sub_255F672DC(255, (unint64_t *)&qword_269F43260, MEMORY[0x263F1A830], MEMORY[0x263F19110], MEMORY[0x263F18E28]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F43678);
    }
  }
}

uint64_t sub_255F9DDEC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_255F9EA0C(255, a2, a3, MEMORY[0x263F1BAC8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_255F9DE50()
{
  if (!qword_269F43690)
  {
    sub_255F9DEE4();
    sub_255F672DC(255, (unint64_t *)&qword_269F42BD0, MEMORY[0x263F1B440], MEMORY[0x263F1B420], MEMORY[0x263F1A180]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43690);
    }
  }
}

void sub_255F9DEE4()
{
  if (!qword_269F43698)
  {
    sub_255F9DF68();
    sub_255F9DFF8();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F43698);
    }
  }
}

void sub_255F9DF68()
{
  if (!qword_269F436A0)
  {
    sub_255F9EA0C(255, (unint64_t *)&qword_269F42398, MEMORY[0x263F1B548], MEMORY[0x263F1A418]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F436A0);
    }
  }
}

unint64_t sub_255F9DFF8()
{
  unint64_t result = qword_269F436A8;
  if (!qword_269F436A8)
  {
    sub_255F9DF68();
    sub_255F9E070();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F436A8);
  }
  return result;
}

unint64_t sub_255F9E070()
{
  unint64_t result = qword_269F423A8;
  if (!qword_269F423A8)
  {
    sub_255F9EA0C(255, (unint64_t *)&qword_269F42398, MEMORY[0x263F1B548], MEMORY[0x263F1A418]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F423A8);
  }
  return result;
}

void sub_255F9E0F8()
{
  if (!qword_269F436B8)
  {
    sub_255F9E154();
    unint64_t v0 = sub_256176A18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F436B8);
    }
  }
}

unint64_t sub_255F9E154()
{
  unint64_t result = qword_269F436C0;
  if (!qword_269F436C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F436C0);
  }
  return result;
}

unint64_t sub_255F9E1A8()
{
  unint64_t result = qword_269F436C8;
  if (!qword_269F436C8)
  {
    sub_255F9DA68();
    sub_255F9E250();
    sub_255F9E2D4(&qword_269F436D8, (void (*)(uint64_t))sub_255F9E0F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F436C8);
  }
  return result;
}

unint64_t sub_255F9E250()
{
  unint64_t result = qword_269F436D0;
  if (!qword_269F436D0)
  {
    sub_255F9DAFC(255, &qword_269F43638, &qword_269F43640, (uint64_t (*)(uint64_t))sub_255F9DB9C, &qword_269F436B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F436D0);
  }
  return result;
}

uint64_t sub_255F9E2D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_255F9E31C()
{
  if (!qword_269F436E0)
  {
    sub_255F9DA04();
    type metadata accessor for CustomReminderView(255);
    sub_255F9E2D4(&qword_269F436E8, (void (*)(uint64_t))sub_255F9DA04);
    sub_255F9E2D4(&qword_269F436F0, (void (*)(uint64_t))type metadata accessor for CustomReminderView);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F436E0);
    }
  }
}

void sub_255F9E420()
{
  if (!qword_269F436F8)
  {
    sub_255F9E31C();
    sub_255F9E9B8(255, &qword_269F43110, MEMORY[0x263F8D4F8], MEMORY[0x263F1A4D8]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F436F8);
    }
  }
}

void sub_255F9E4AC()
{
  if (!qword_269F43700)
  {
    sub_255F9E420();
    sub_256176298();
    sub_255F9E580();
    sub_255F9E2D4(&qword_269F43710, MEMORY[0x263F18FD0]);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F43700);
    }
  }
}

unint64_t sub_255F9E580()
{
  unint64_t result = qword_269F43708;
  if (!qword_269F43708)
  {
    sub_255F9E420();
    sub_255F9DA04();
    type metadata accessor for CustomReminderView(255);
    sub_255F9E2D4(&qword_269F436E8, (void (*)(uint64_t))sub_255F9DA04);
    sub_255F9E2D4(&qword_269F436F0, (void (*)(uint64_t))type metadata accessor for CustomReminderView);
    swift_getOpaqueTypeConformance2();
    sub_255F84F80();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43708);
  }
  return result;
}

uint64_t sub_255F9E6AC()
{
  type metadata accessor for CustomReminderRow();

  return sub_255F9C76C();
}

uint64_t sub_255F9E70C@<X0>(uint64_t a1@<X8>)
{
  return sub_255F9C834(*(void *)(v1 + 16), a1);
}

uint64_t objectdestroyTm_1()
{
  uint64_t v1 = type metadata accessor for CustomReminderRow();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));

  uint64_t v3 = v2 + *(int *)(v1 + 20);
  uint64_t v4 = v3 + *(int *)(type metadata accessor for CustomReminderModel() + 32);
  uint64_t v5 = sub_256175568();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  sub_255F9EA0C(0, &qword_269F43610, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, MEMORY[0x263F1B5D0]);
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255F9E8C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for CustomReminderRow() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_255F9D5CC(v4, a1);
}

uint64_t sub_255F9E940()
{
  return swift_deallocObject();
}

unsigned char *sub_255F9E950(unsigned char *a1)
{
  return sub_255F87360(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_255F9E958(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_255F9E9B8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_255F9EA0C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_255F9EA70(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_255F9EAD8(uint64_t a1, uint64_t a2)
{
  sub_255F9EA0C(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_255F9EB6C()
{
  if (!qword_269F43728)
  {
    sub_255F9EA0C(255, &qword_269F43640, (uint64_t (*)(uint64_t))sub_255F9DB9C, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_256176048();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43728);
    }
  }
}

uint64_t sub_255F9EC04(uint64_t a1, uint64_t a2)
{
  sub_255F9DAFC(0, &qword_269F43638, &qword_269F43640, (uint64_t (*)(uint64_t))sub_255F9DB9C, &qword_269F436B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_255F9EC94(uint64_t a1)
{
  sub_255F9DAFC(0, &qword_269F43638, &qword_269F43640, (uint64_t (*)(uint64_t))sub_255F9DB9C, &qword_269F436B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_255F9ED1C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 168);
  uint64_t v3 = *(void *)(a1 + 176);
  char v4 = *(unsigned char *)(a1 + 184);
  sub_255F67B94(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRetain();
  sub_255F67B94(v2, v3, v4);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_255F9ED90(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 168);
  uint64_t v3 = *(void *)(a1 + 176);
  char v4 = *(unsigned char *)(a1 + 184);
  sub_255F67B2C(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRelease();
  sub_255F67B2C(v2, v3, v4);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_255F9EE0C(uint64_t a1, uint64_t a2)
{
  sub_255F9EA0C(0, (unint64_t *)&qword_269F42398, MEMORY[0x263F1B548], MEMORY[0x263F1A418]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_255F9EEA0(uint64_t a1)
{
  sub_255F9EA0C(0, (unint64_t *)&qword_269F42398, MEMORY[0x263F1B548], MEMORY[0x263F1A418]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_255F9EF2C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_255F9EF94(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 192);
  uint64_t v3 = *(void *)(a1 + 200);
  char v4 = *(unsigned char *)(a1 + 208);
  sub_255F67B94(*(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
  swift_bridgeObjectRetain();
  sub_255F67B94(v2, v3, v4);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_255F9F008(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 192);
  uint64_t v3 = *(void *)(a1 + 200);
  char v4 = *(unsigned char *)(a1 + 208);
  sub_255F67B2C(*(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
  swift_bridgeObjectRelease();
  sub_255F67B2C(v2, v3, v4);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_255F9F07C(uint64_t a1)
{
  return a1;
}

uint64_t sub_255F9F0BC(uint64_t a1)
{
  return a1;
}

unint64_t sub_255F9F100()
{
  unint64_t result = qword_269F43730;
  if (!qword_269F43730)
  {
    sub_255F9F228();
    sub_255F9E420();
    sub_256176298();
    sub_255F9E580();
    sub_255F9E2D4(&qword_269F43710, MEMORY[0x263F18FD0]);
    swift_getOpaqueTypeConformance2();
    sub_255F9E2D4(&qword_269F42EA0, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43730);
  }
  return result;
}

void sub_255F9F228()
{
  if (!qword_269F43738)
  {
    sub_255F9E4AC();
    sub_256176D38();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43738);
    }
  }
}

uint64_t *sub_255F9F290(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    a1[1] = a2[1];
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (uint64_t *)((char *)a1 + v5);
    uint64_t v7 = (uint64_t *)((char *)a2 + v5);
    sub_255FA0DA0(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
    }
    else
    {
      *uint64_t v6 = *v7;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_255F9F3F0(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_255FA0DA0(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_256175D98();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_255F9F4D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (void *)(a2 + v4);
  sub_255FA0DA0(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_256175D98();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  }
  else
  {
    *uint64_t v5 = *v6;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_255F9F5DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (void *)(a2 + v6);
    sub_255F9F6FC(a1 + v6);
    sub_255FA0DA0(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_255F9F6FC(uint64_t a1)
{
  sub_255FA0DA0(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_255F9F788(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  sub_255FA0DA0(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  uint64_t v8 = v7;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_256175D98();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v5, v6, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_255F9F888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (const void *)(a2 + v6);
    sub_255F9F6FC(a1 + v6);
    sub_255FA0DA0(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    uint64_t v10 = v9;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_256175D98();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v7, v8, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_255F9F9B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255F9F9C4);
}

uint64_t sub_255F9F9C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    sub_255FA0DA0(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_255F9FAB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255F9FAC4);
}

uint64_t sub_255F9FAC4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    sub_255FA0DA0(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for StateOfMindCalendarTitleView()
{
  uint64_t result = qword_269F43740;
  if (!qword_269F43740) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_255F9FBE8()
{
  sub_255FA0DA0(319, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_255F9FCB0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255F9FCCC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v64 = a2;
  uint64_t v63 = sub_256176AD8();
  uint64_t v61 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  unint64_t v4 = (uint64_t *)&v52[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for StateOfMindCalendarTitleView();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = &v52[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_255F5D008();
  uint64_t v57 = *(void *)(v9 - 8);
  uint64_t v58 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = &v52[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_255FA0CB4();
  uint64_t v62 = v12;
  uint64_t v60 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  long long v65 = &v52[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v13);
  uint64_t v59 = &v52[-v15];
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v16 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_2561755B8();
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();

  uint64_t v69 = v17;
  uint64_t v70 = v19;
  sub_255F5CE90();
  uint64_t v20 = sub_256177028();
  uint64_t v22 = v21;
  LOBYTE(v19) = v23 & 1;
  uint64_t v24 = sub_256176FC8();
  uint64_t v55 = v25;
  uint64_t v56 = v24;
  uint64_t v54 = v26;
  int v53 = v27;
  sub_255F67B2C(v20, v22, v19);
  swift_bridgeObjectRelease();
  sub_255FA0E4C(a1, (uint64_t)&v52[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  unint64_t v28 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v29 = swift_allocObject();
  sub_255FA0EB4((uint64_t)v8, v29 + v28);
  sub_255F5D06C();
  sub_255F5D1A8();
  sub_2561775C8();
  uint64_t v30 = *(void *)(a1 + 8);
  char v67 = *(unsigned char *)a1;
  uint64_t v68 = v30;
  sub_255FA0F78();
  sub_256177598();
  sub_255FA0E4C(a1, (uint64_t)v8);
  uint64_t v31 = swift_allocObject();
  sub_255FA0EB4((uint64_t)v8, v31 + v28);
  *unint64_t v4 = sub_2561775B8();
  uint64_t v32 = v61;
  uint64_t v33 = v63;
  (*(void (**)(uint64_t *, void, uint64_t))(v61 + 104))(v4, *MEMORY[0x263F1A030], v63);
  sub_255F5D280();
  sub_255FA0E04(&qword_269F423B8, (void (*)(uint64_t))sub_255F5D008);
  swift_getOpaqueTypeConformance2();
  uint64_t v34 = v58;
  char v35 = v65;
  sub_2561770A8();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t *, uint64_t))(v32 + 8))(v4, v33);
  (*(void (**)(unsigned char *, uint64_t))(v57 + 8))(v11, v34);
  uint64_t v37 = v59;
  uint64_t v36 = v60;
  uint64_t v38 = v62;
  (*(void (**)(unsigned char *, char *, uint64_t))(v60 + 32))(v59, v35, v62);
  LOBYTE(v69) = v53 & 1;
  char v67 = 1;
  char v66 = 0;
  char v39 = *(void (**)(char *, unsigned char *, uint64_t))(v36 + 16);
  v39(v35, v37, v38);
  char v40 = v69;
  char v41 = v67;
  char v42 = v66;
  unsigned __int8 v43 = v64;
  uint64_t v44 = v55;
  uint64_t v45 = v56;
  uint64_t v46 = v54;
  uint64_t *v64 = v56;
  v43[1] = v46;
  *((unsigned char *)v43 + 16) = v40;
  v43[3] = v44;
  *((unsigned char *)v43 + 32) = v41;
  *((unsigned char *)v43 + 33) = v42;
  sub_255FA0BE4();
  long long v48 = (char *)v43 + *(int *)(v47 + 48);
  long long v49 = v65;
  v39(v48, v65, v38);
  sub_255F67B94(v45, v46, v40);
  long long v50 = *(void (**)(unsigned char *, uint64_t))(v36 + 8);
  swift_bridgeObjectRetain();
  v50(v37, v38);
  v50(v49, v38);
  sub_255F67B2C(v45, v46, v69);
  return swift_bridgeObjectRelease();
}

uint64_t sub_255FA0354()
{
  return sub_256177588();
}

uint64_t sub_255FA03A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_256177518();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F5D0D4();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[1] = sub_2561774E8();
  sub_256177298();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B540], v2);
  uint64_t KeyPath = swift_getKeyPath();
  sub_255F5D06C();
  uint64_t v13 = (uint64_t *)(a1 + *(int *)(v12 + 36));
  sub_255FA0DA0(0, (unint64_t *)&qword_269F42398, MEMORY[0x263F1B548], MEMORY[0x263F1A418]);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))((char *)v13 + *(int *)(v14 + 28), v5, v2);
  *uint64_t v13 = KeyPath;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(a1, v10, v7);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_255FA0628@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v38 = a2;
  uint64_t v37 = sub_256175D98();
  uint64_t v2 = *(void *)(v37 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v37);
  uint64_t v33 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v28 - v5;
  uint64_t v7 = sub_256177C98();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = sub_256177CC8();
  uint64_t v35 = *(void *)(v8 - 8);
  uint64_t v36 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v32 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F5D280();
  uint64_t v34 = v10;
  uint64_t v30 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v29 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v12 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_2561755B8();
  v28[1] = v14;
  v28[2] = v13;
  swift_bridgeObjectRelease();

  id v15 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  sub_2561755B8();
  swift_bridgeObjectRelease();

  type metadata accessor for MentalHealthUIRepresentative();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v17 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_256177C88();
  uint64_t v18 = *((void *)v31 + 1);
  char v39 = *v31;
  uint64_t v40 = v18;
  sub_255FA0F78();
  sub_256177598();
  uint64_t v19 = v32;
  sub_256177CB8();
  type metadata accessor for StateOfMindCalendarTitleView();
  sub_25611A114((uint64_t)v6);
  uint64_t v20 = v33;
  uint64_t v21 = v37;
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v33, *MEMORY[0x263F184F8], v37);
  char v22 = sub_256175D88();
  char v23 = *(void (**)(char *, uint64_t))(v2 + 8);
  v23(v20, v21);
  v23(v6, v21);
  uint64_t v24 = self;
  uint64_t v25 = &selRef_secondarySystemBackgroundColor;
  if ((v22 & 1) == 0) {
    uint64_t v25 = &selRef_systemBackgroundColor;
  }
  MEMORY[0x25A29FE80]([v24 *v25]);
  uint64_t v26 = v29;
  sub_256177CA8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v19, v36);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v30 + 32))(v38, v26, v34);
}

uint64_t sub_255FA0B04@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_256176678();
  *(void *)(a1 + 8) = 0x4008000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  sub_255FA0B4C();
  return sub_255F9FCCC(v1, (uint64_t *)(a1 + *(int *)(v3 + 44)));
}

void sub_255FA0B4C()
{
  if (!qword_269F43750)
  {
    sub_255FA0DA0(255, &qword_269F43758, (uint64_t (*)(uint64_t))sub_255FA0BE4, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_256176048();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43750);
    }
  }
}

void sub_255FA0BE4()
{
  if (!qword_269F43760)
  {
    sub_255FA0C54();
    sub_255FA0CB4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F43760);
    }
  }
}

void sub_255FA0C54()
{
  if (!qword_269F43530)
  {
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43530);
    }
  }
}

void sub_255FA0CB4()
{
  if (!qword_269F43768)
  {
    sub_255F5D008();
    sub_255F5D280();
    sub_255FA0E04(&qword_269F423B8, (void (*)(uint64_t))sub_255F5D008);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F43768);
    }
  }
}

void sub_255FA0DA0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_255FA0E04(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255FA0E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StateOfMindCalendarTitleView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_255FA0EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StateOfMindCalendarTitleView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_255FA0F18()
{
  type metadata accessor for StateOfMindCalendarTitleView();

  return sub_255FA0354();
}

void sub_255FA0F78()
{
  if (!qword_269F43718)
  {
    unint64_t v0 = sub_2561775A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43718);
    }
  }
}

uint64_t objectdestroyTm_2()
{
  uint64_t v1 = (int *)(type metadata accessor for StateOfMindCalendarTitleView() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_release();
  unint64_t v3 = v0 + v2 + v1[7];
  sub_255FA0DA0(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256175D98();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_255FA1118@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for StateOfMindCalendarTitleView() - 8);
  uint64_t v4 = (char *)(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));

  return sub_255FA0628(v4, a1);
}

uint64_t sub_255FA1188()
{
  return sub_256176358();
}

uint64_t sub_255FA11AC()
{
  return sub_256176358();
}

uint64_t sub_255FA11D0(uint64_t a1)
{
  uint64_t v2 = sub_256177518();
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_256176368();
}

uint64_t sub_255FA129C()
{
  return sub_255FA0E04(&qword_269F43770, (void (*)(uint64_t))sub_255FA12E4);
}

void sub_255FA12E4()
{
  if (!qword_269F43778)
  {
    sub_255FA0DA0(255, &qword_269F43758, (uint64_t (*)(uint64_t))sub_255FA0BE4, MEMORY[0x263F1BAC8]);
    sub_255FA1378();
    unint64_t v0 = sub_2561775F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43778);
    }
  }
}

unint64_t sub_255FA1378()
{
  unint64_t result = qword_269F43780;
  if (!qword_269F43780)
  {
    sub_255FA0DA0(255, &qword_269F43758, (uint64_t (*)(uint64_t))sub_255FA0BE4, MEMORY[0x263F1BAC8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43780);
  }
  return result;
}

void *sub_255FA1400(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    uint64_t v6 = a2[3];
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(void *)(a1 + 24) = v6;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v7 = a2[6];
    *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = a2[5];
    *(void *)(a1 + 48) = v7;
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    *(void *)(a1 + 64) = a2[8];
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(void *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = a2[10];
    *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
    uint64_t v8 = a3[11];
    int v27 = (void *)(a1 + v8);
    uint64_t v9 = (uint64_t *)((char *)a2 + v8);
    *(void *)(a1 + 96) = a2[12];
    sub_255FA18A8(0, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_256175F88();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v27, v9, v10);
    }
    else
    {
      void *v27 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = a3[12];
    uint64_t v13 = (void *)((char *)v4 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    sub_255FA18A8(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *uint64_t v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v16 = a3[13];
    id v17 = (void *)((char *)v4 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    sub_255FA18A8(0, &qword_269F42B40, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_256176AA8();
      uint64_t v20 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        sub_255FA18A8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v20 + 16))(v17, v18, v19);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      uint64_t v22 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
      char v23 = (char *)v17 + v22;
      uint64_t v24 = (char *)v18 + v22;
      uint64_t v25 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    }
    else
    {
      void *v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *((unsigned char *)v4 + a3[14]) = *((unsigned char *)a2 + a3[14]);
  }
  return v4;
}

void sub_255FA18A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_255FA190C(uint64_t a1, int *a2)
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + a2[11];
  sub_255FA18A8(0, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_256175F88();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + a2[12];
  sub_255FA18A8(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = a1 + a2[13];
  sub_255FA18A8(0, &qword_269F42B40, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_256176AA8();
    uint64_t v10 = *(void *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
    uint64_t v11 = v8 + *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
    uint64_t v12 = sub_256176158();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
    return v13(v11, v12);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_255FA1BF4(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v7 = a3[11];
  uint64_t v25 = (void *)(a1 + v7);
  uint64_t v8 = (void *)(a2 + v7);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  sub_255FA18A8(0, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_256175F88();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v25, v8, v9);
  }
  else
  {
    *uint64_t v25 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = a3[12];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  sub_255FA18A8(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_256175D98();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  }
  else
  {
    *uint64_t v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = a3[13];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  sub_255FA18A8(0, &qword_269F42B40, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_256176AA8();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      sub_255FA18A8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    uint64_t v20 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
    uint64_t v21 = (char *)v15 + v20;
    uint64_t v22 = (char *)v16 + v20;
    uint64_t v23 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  else
  {
    *uint64_t v15 = *v16;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  return a1;
}

uint64_t sub_255FA204C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + 80);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = a3[11];
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    uint64_t v10 = (uint64_t (*)(uint64_t))MEMORY[0x263F188C0];
    sub_255FA2510(a1 + v7, &qword_269F42CC0, MEMORY[0x263F188C0]);
    sub_255FA18A8(0, &qword_269F42CC0, v10, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_256175F88();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v8, v9, v11);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = a3[12];
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (void *)(a2 + v12);
    uint64_t v15 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    sub_255FA2510(a1 + v12, &qword_269F47D00, MEMORY[0x263F18520]);
    sub_255FA18A8(0, &qword_269F47D00, v15, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v13, v14, v16);
    }
    else
    {
      *uint64_t v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = a3[13];
    uint64_t v18 = (void *)(a1 + v17);
    uint64_t v19 = (void *)(a2 + v17);
    sub_255FA2510(a1 + v17, &qword_269F42B40, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs);
    sub_255FA18A8(0, &qword_269F42B40, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = sub_256176AA8();
      uint64_t v21 = *(void *)(v20 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        sub_255FA18A8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v21 + 16))(v18, v19, v20);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      uint64_t v23 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
      uint64_t v24 = (char *)v18 + v23;
      uint64_t v25 = (char *)v19 + v23;
      uint64_t v26 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    }
    else
    {
      void *v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  return a1;
}

uint64_t sub_255FA2510(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_255FA18A8(0, a2, a3, MEMORY[0x263F185C8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_255FA2580(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v7 = a3[11];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  sub_255FA18A8(0, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
  uint64_t v11 = v10;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_256175F88();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v8, v9, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[12];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  sub_255FA18A8(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  uint64_t v17 = v16;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = sub_256175D98();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(v14, v15, v18);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  uint64_t v19 = a3[13];
  uint64_t v20 = (char *)(a1 + v19);
  uint64_t v21 = (char *)(a2 + v19);
  sub_255FA18A8(0, &qword_269F42B40, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, MEMORY[0x263F185C8]);
  uint64_t v23 = v22;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = sub_256176AA8();
    uint64_t v25 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v21, 1, v24))
    {
      sub_255FA18A8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v20, v21, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v20, v21, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v20, 0, 1, v24);
    }
    uint64_t v27 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
    unint64_t v28 = &v20[v27];
    uint64_t v29 = &v21[v27];
    uint64_t v30 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
  }
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  return a1;
}

uint64_t sub_255FA2984(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + 80);
  swift_release();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = a3[11];
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    uint64_t v10 = (uint64_t (*)(uint64_t))MEMORY[0x263F188C0];
    sub_255FA2510(a1 + v7, &qword_269F42CC0, MEMORY[0x263F188C0]);
    sub_255FA18A8(0, &qword_269F42CC0, v10, MEMORY[0x263F185C8]);
    uint64_t v12 = v11;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_256175F88();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    uint64_t v14 = a3[12];
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (const void *)(a2 + v14);
    uint64_t v17 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    sub_255FA2510(a1 + v14, &qword_269F47D00, MEMORY[0x263F18520]);
    sub_255FA18A8(0, &qword_269F47D00, v17, MEMORY[0x263F185C8]);
    uint64_t v19 = v18;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = sub_256175D98();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v20 - 8) + 32))(v15, v16, v20);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    uint64_t v21 = a3[13];
    uint64_t v22 = (char *)(a1 + v21);
    uint64_t v23 = (char *)(a2 + v21);
    sub_255FA2510(a1 + v21, &qword_269F42B40, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs);
    sub_255FA18A8(0, &qword_269F42B40, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, MEMORY[0x263F185C8]);
    uint64_t v25 = v24;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = sub_256176AA8();
      uint64_t v27 = *(void *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v23, 1, v26))
      {
        sub_255FA18A8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v22, v23, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v22, v23, v26);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v22, 0, 1, v26);
      }
      uint64_t v29 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
      uint64_t v30 = &v22[v29];
      uint64_t v31 = &v23[v29];
      uint64_t v32 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
    }
  }
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  return a1;
}

uint64_t sub_255FA2E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255FA2E4C);
}

uint64_t sub_255FA2E4C(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  sub_255FA18A8(0, &qword_269F42CC8, MEMORY[0x263F188C0], MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[11];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  sub_255FA18A8(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[12];
    goto LABEL_9;
  }
  sub_255FA18A8(0, &qword_269F42B50, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, MEMORY[0x263F185D0]);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[13];

  return v15(v17, a2, v16);
}

uint64_t sub_255FA3054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255FA3068);
}

uint64_t sub_255FA3068(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  sub_255FA18A8(0, &qword_269F42CC8, MEMORY[0x263F188C0], MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[11];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  sub_255FA18A8(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[12];
    goto LABEL_7;
  }
  sub_255FA18A8(0, &qword_269F42B50, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, MEMORY[0x263F185D0]);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[13];

  return v15(v17, a2, a2, v16);
}

uint64_t type metadata accessor for StateOfMindEntryView_iOS()
{
  uint64_t result = qword_269F43788;
  if (!qword_269F43788) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_255FA32BC()
{
  sub_255FA18A8(319, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
  if (v0 <= 0x3F)
  {
    sub_255FA18A8(319, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    if (v1 <= 0x3F)
    {
      sub_255FA18A8(319, &qword_269F42B40, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, MEMORY[0x263F185C8]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_255FA348C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255FA34A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  char v9 = *a4;
  sub_255FAF708(0, &qword_269F437B8, (uint64_t)&type metadata for StateOfMindEntryPhaseType, MEMORY[0x263F8D488]);
  sub_256177568();
  *(void *)(a5 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v21;
  *(void *)(a5 + 48) = v22;
  sub_256177568();
  *(unsigned char *)(a5 + 56) = v21;
  *(void *)(a5 + 64) = v22;
  sub_256177568();
  *(unsigned char *)(a5 + 72) = v21;
  *(void *)(a5 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v22;
  uint64_t v10 = (int *)type metadata accessor for StateOfMindEntryView_iOS();
  uint64_t v11 = (uint64_t *)(a5 + v10[11]);
  *uint64_t v11 = swift_getKeyPath();
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  sub_255FA18A8(0, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = (uint64_t *)(a5 + v10[12]);
  *uint64_t v13 = swift_getKeyPath();
  sub_255FA18A8(0, &qword_269F47D00, MEMORY[0x263F18520], v12);
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = (uint64_t *)(a5 + v10[13]);
  *uint64_t v14 = swift_getKeyPath();
  sub_255FA18A8(0, &qword_269F42B40, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, v12);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for StateOfMindEntryModel(0);
  sub_255FAECE0(&qword_269F42CB0, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel);
  swift_retain();
  *(void *)a5 = sub_2561760E8();
  *(void *)(a5 + 8) = v15;
  *(void *)(a5 + 16) = a2;
  *(void *)(a5 + 24) = a3;
  *(unsigned char *)(a5 + 32) = v9;
  uint64_t v16 = a1 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_configuration;
  swift_beginAccess();
  if (*(unsigned char *)(v16 + 8) == 1)
  {
    *(unsigned char *)(a5 + v10[14]) = 2;
    swift_retain();
  }
  else
  {
    swift_retain();
    char v17 = sub_255FFDAB8();
    uint64_t v18 = v10[14];
    *(unsigned char *)(a5 + v18) = (v17 & 1) == 0;
  }
  sub_256177568();
  swift_release();
  uint64_t result = swift_release();
  *(unsigned char *)(a5 + 88) = 0;
  *(void *)(a5 + 96) = v20;
  return result;
}

BOOL sub_255FA37B0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t _s14MentalHealthUI24StateOfMindVisualizationV6ColorsO9hashValueSivg_0()
{
  return sub_256178928();
}

uint64_t sub_255FA380C()
{
  return sub_2561788F8();
}

uint64_t sub_255FA3838()
{
  return sub_256178928();
}

unint64_t sub_255FA387C@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_255FAFFD4(*a1);
  *a2 = result;
  return result;
}

void sub_255FA38A8(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_255FA38B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StateOfMindEntryView_iOS();
  MEMORY[0x270FA5388](v2);
  unint64_t v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + 48);
  v9[1] = *(void *)(v0 + 40);
  v9[2] = v5;
  sub_255FAE868();
  sub_256177578();
  uint64_t v6 = *(void *)(v10 + 16);
  if (v6)
  {
    uint64_t v7 = *(unsigned __int8 *)(v6 + v10 + 31);
    swift_bridgeObjectRelease();
    sub_255FAF76C(v1, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StateOfMindEntryView_iOS);
    if (v7 != 6) {
      goto LABEL_6;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_255FAF76C(v0, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StateOfMindEntryView_iOS);
  }
  uint64_t v7 = v4[*(int *)(v2 + 56)];
LABEL_6:
  sub_255FAF7D4((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StateOfMindEntryView_iOS);
  return v7;
}

uint64_t sub_255FA39DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v25 = a1;
  sub_255FAB854();
  uint64_t v24 = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FAB80C(0);
  uint64_t v23 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v1 + 48);
  uint64_t v32 = *(void *)(v1 + 40);
  *(void *)&long long v33 = v9;
  sub_255FAE868();
  sub_256177598();
  uint64_t v32 = v27;
  long long v33 = v28;
  uint64_t v26 = v1;
  sub_255FAF708(0, &qword_269F437B8, (uint64_t)&type metadata for StateOfMindEntryPhaseType, MEMORY[0x263F8D488]);
  v22[2] = v10;
  sub_255FAB98C();
  v22[1] = v11;
  v22[0] = sub_255FAE8EC(&qword_269F43990, &qword_269F437B8, (uint64_t)&type metadata for StateOfMindEntryPhaseType);
  sub_255FAE8EC(&qword_269F43998, &qword_269F437B8, (uint64_t)&type metadata for StateOfMindEntryPhaseType);
  sub_255FAE8EC(&qword_269F439A0, &qword_269F437B8, (uint64_t)&type metadata for StateOfMindEntryPhaseType);
  sub_255FABA74(255);
  uint64_t v13 = v12;
  uint64_t v14 = sub_255FAD944(&qword_269F43910, sub_255FABA74, (void (*)(void))sub_255FAD9D0, (void (*)(void))sub_255FADF6C);
  unint64_t v15 = sub_255FAE230();
  uint64_t v27 = v13;
  *(void *)&long long v28 = &type metadata for StateOfMindEntryPhaseType;
  *((void *)&v28 + 1) = v13;
  uint64_t v29 = v14;
  unint64_t v30 = v15;
  uint64_t v31 = v14;
  swift_getOpaqueTypeConformance2();
  sub_2561761C8();
  uint64_t v16 = sub_255FA7998();
  uint64_t KeyPath = swift_getKeyPath();
  if (v16)
  {
    uint64_t v27 = v16;
    swift_retain();
    uint64_t v18 = sub_256175F48();
  }
  else
  {
    uint64_t v18 = 0;
  }
  uint64_t v19 = v24;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v8, v5, v24);
  swift_release();
  uint64_t v20 = (uint64_t *)&v8[*(int *)(v23 + 36)];
  *uint64_t v20 = KeyPath;
  v20[1] = v18;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v19);
  sub_255FAE300();
  sub_256177268();
  return sub_255FAF7D4((uint64_t)v8, (uint64_t (*)(void))sub_255FAB80C);
}

uint64_t sub_255FA3D90(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StateOfMindEntryView_iOS();
  uint64_t v3 = v2 - 8;
  uint64_t v4 = *(void *)(v2 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v2);
  sub_255FABA74(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FA3FC0(*(unsigned char *)(a1 + *(int *)(v3 + 64)), (uint64_t)v8);
  sub_255FAF76C(a1, (uint64_t)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for StateOfMindEntryView_iOS);
  unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v10 = swift_allocObject();
  sub_255FAE520((uint64_t)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, (uint64_t (*)(void))type metadata accessor for StateOfMindEntryView_iOS);
  sub_255FAD944(&qword_269F43910, sub_255FABA74, (void (*)(void))sub_255FAD9D0, (void (*)(void))sub_255FADF6C);
  sub_255FAE230();
  sub_256177218();
  swift_release();
  return sub_255FAF7D4((uint64_t)v8, (uint64_t (*)(void))sub_255FABA74);
}

uint64_t sub_255FA3FC0@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v427 = a2;
  sub_255FAD870();
  v406 = v3;
  Description = (uint64_t (**)(char *, ValueMetadata *))v3[-1].Description;
  MEMORY[0x270FA5388](v3);
  v371 = (char *)&v342 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FAD76C();
  v409 = v5;
  v375 = (void (**)(char *, ValueMetadata *))v5[-1].Description;
  MEMORY[0x270FA5388](v5);
  v374 = (char *)&v342 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v402 = type metadata accessor for NotificationsSetupPhase_iOS();
  MEMORY[0x270FA5388](v402);
  v367 = (uint64_t *)((char *)&v342 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_255FAD588();
  uint64_t v410 = v8;
  uint64_t v379 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  v373 = (char *)&v342 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  v378 = (char *)&v342 - v11;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F19B20];
  sub_255FAEA7C(0, &qword_269F439A8, (uint64_t (*)(uint64_t))sub_255FAD1CC, (uint64_t (*)(uint64_t))sub_255FAD588, MEMORY[0x263F19B20]);
  uint64_t v405 = v13;
  MEMORY[0x270FA5388](v13);
  v408 = (char *)&v342 - v14;
  sub_255FAD184(0);
  uint64_t v426 = v15;
  MEMORY[0x270FA5388](v15);
  v391 = (char *)&v342 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FAD4B4();
  v399 = v17;
  v364 = (uint64_t (**)(char *, ValueMetadata *))v17[-1].Description;
  MEMORY[0x270FA5388](v17);
  v363 = (char *)&v342 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FAD3B0();
  v403 = v19;
  v370 = (void (**)(char *, ValueMetadata *))v19[-1].Description;
  MEMORY[0x270FA5388](v19);
  v368 = (char *)&v342 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v396 = type metadata accessor for DomainsSelectionPhase_iOS();
  MEMORY[0x270FA5388](v396);
  uint64_t v22 = (char *)&v342 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FAD1CC();
  uint64_t v407 = v23;
  uint64_t v377 = *(void *)(v23 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  v365 = (char *)&v342 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  v376 = (char *)&v342 - v26;
  sub_255FAD0B0();
  v395 = v27;
  v357 = (uint64_t (**)(char *, ValueMetadata *))v27[-1].Description;
  MEMORY[0x270FA5388](v27);
  v356 = (char *)&v342 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FACFAC();
  v401 = v29;
  v362 = (void (**)(char *, ValueMetadata *))v29[-1].Description;
  MEMORY[0x270FA5388](v29);
  v361 = (char *)&v342 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v392 = type metadata accessor for LabelsSelectionPhase_iOS();
  MEMORY[0x270FA5388](v392);
  v359 = (uint64_t *)((char *)&v342 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_255FACDC8();
  uint64_t v404 = v32;
  uint64_t v369 = *(void *)(v32 - 8);
  uint64_t v33 = MEMORY[0x270FA5388](v32);
  v358 = (char *)&v342 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  v366 = (char *)&v342 - v35;
  sub_255FAEA7C(0, &qword_269F439B0, (uint64_t (*)(uint64_t))sub_255FACA0C, (uint64_t (*)(uint64_t))sub_255FACDC8, v12);
  uint64_t v394 = v36;
  MEMORY[0x270FA5388](v36);
  v398 = (char *)&v342 - v37;
  sub_255FAC9C4(0);
  uint64_t v39 = v38;
  MEMORY[0x270FA5388](v38);
  v400 = (char *)&v342 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FACCF4();
  v390 = v41;
  v352 = (uint64_t (**)(char *, ValueMetadata *))v41[-1].Description;
  MEMORY[0x270FA5388](v41);
  v350 = (char *)&v342 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FACBF0();
  v393 = v43;
  v355 = (void (**)(char *, ValueMetadata *))v43[-1].Description;
  MEMORY[0x270FA5388](v43);
  v354 = (char *)&v342 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v389 = type metadata accessor for ValenceSelectionPhase_iOS();
  MEMORY[0x270FA5388](v389);
  uint64_t v46 = (char *)&v342 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FACA0C();
  uint64_t v397 = v47;
  uint64_t v360 = *(void *)(v47 - 8);
  uint64_t v48 = MEMORY[0x270FA5388](v47);
  v353 = (char *)&v342 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v48);
  v386 = (char *)&v342 - v50;
  uint64_t v51 = sub_256176618();
  v418 = *(ValueMetadata **)(v51 - 8);
  uint64_t v419 = v51;
  MEMORY[0x270FA5388](v51);
  v417 = (char *)&v342 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v428 = sub_2561778B8();
  uint64_t v416 = *(void *)(v428 - 8);
  MEMORY[0x270FA5388](v428);
  v415 = (char *)&v342 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FAC8F0();
  v383 = v54;
  v345 = (uint64_t (**)(char *, ValueMetadata *))v54[-1].Description;
  MEMORY[0x270FA5388](v54);
  uint64_t v56 = (char *)&v342 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FAC7EC();
  v387 = v57;
  v348 = (void (**)(char *, ValueMetadata *))v57[-1].Description;
  MEMORY[0x270FA5388](v57);
  v347 = (char *)&v342 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v382 = type metadata accessor for ReflectiveIntervalSelectionPhase_iOS();
  MEMORY[0x270FA5388](v382);
  uint64_t v380 = (uint64_t)&v342 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FAC608();
  uint64_t v388 = v60;
  uint64_t v351 = *(void *)(v60 - 8);
  uint64_t v61 = MEMORY[0x270FA5388](v60);
  v346 = (char *)&v342 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v61);
  v349 = (char *)&v342 - v63;
  sub_255FAEA7C(0, &qword_269F439B8, (uint64_t (*)(uint64_t))sub_255FABABC, (uint64_t (*)(uint64_t))sub_255FAD184, v12);
  uint64_t v424 = v64;
  MEMORY[0x270FA5388](v64);
  uint64_t v425 = (uint64_t)&v342 - v65;
  sub_255FAEA7C(0, &qword_269F439C0, (uint64_t (*)(uint64_t))sub_255FABB04, (uint64_t (*)(uint64_t))sub_255FAC9C4, v12);
  uint64_t v411 = v66;
  MEMORY[0x270FA5388](v66);
  v413 = (ValueMetadata *)((char *)&v342 - v67);
  sub_255FAEA7C(0, &qword_269F439C8, (uint64_t (*)(uint64_t))sub_255FABB4C, (uint64_t (*)(uint64_t))sub_255FAC608, v12);
  uint64_t v381 = v68;
  MEMORY[0x270FA5388](v68);
  v384 = (char *)&v342 - v69;
  sub_255FABB04(0);
  uint64_t v412 = v70;
  MEMORY[0x270FA5388](v70);
  v385 = (char *)&v342 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FABABC(0);
  uint64_t v423 = v72;
  MEMORY[0x270FA5388](v72);
  v414 = (char *)&v342 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FABF9C(0, &qword_269F43808, (void (*)(uint64_t))sub_255FAC028, (void (*)(void))sub_255FAC50C);
  v421 = (void (**)(uint64_t, ValueMetadata *))v74[-1].Description;
  v422 = v74;
  MEMORY[0x270FA5388](v74);
  uint64_t v429 = (uint64_t)&v342 - v75;
  uint64_t v76 = type metadata accessor for StateOfMindEntryView_iOS();
  uint64_t v77 = *(void *)(v76 - 8);
  uint64_t v78 = *(void *)(v77 + 64);
  MEMORY[0x270FA5388](v76 - 8);
  long long v79 = (char *)&v342 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FABB4C();
  uint64_t v81 = MEMORY[0x270FA5388](v80);
  unint64_t v83 = (char *)&v342 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = MEMORY[0x270FA5388](v81);
  uint64_t v87 = (char *)&v342 - v86;
  switch(a1)
  {
    case 1:
      uint64_t v121 = v420;
      unint64_t v122 = *(void *)(v420 + 64);
      LOBYTE(v43__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(v420 + 56);
      unint64_t v431 = v122;
      uint64_t v344 = v84;
      sub_255FAF708(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
      swift_retain();
      sub_256177598();
      uint64_t v123 = (uint64_t)v434;
      uint64_t v124 = (uint64_t)v435;
      char v125 = (char)p_Kind;
      uint64_t v410 = v39;
      char v126 = *(unsigned char *)(v121 + 32);
      sub_255FAF76C(v121, (uint64_t)&v342 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for StateOfMindEntryView_iOS);
      unint64_t v127 = (*(unsigned __int8 *)(v77 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
      uint64_t v128 = swift_allocObject();
      sub_255FAE520((uint64_t)v79, v128 + v127, (uint64_t (*)(void))type metadata accessor for StateOfMindEntryView_iOS);
      sub_2560546BC(v123, v124, v125, (v126 & 1) == 0, (uint64_t)sub_255FAEB94, v128, v380);
      sub_255FA8F30(1, 1, v429);
      unsigned __int8 v129 = v415;
      sub_2561778A8();
      uint64_t v130 = sub_255FAECE0(&qword_269F43878, (void (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhase_iOS);
      unsigned __int8 v131 = (ValueMetadata *)v382;
      uint64_t v132 = v428;
      uint64_t v133 = (uint64_t (*)())MEMORY[0x263F1B908];
      MEMORY[0x25A29FC30](v129, MEMORY[0x263F8EE78], v382, v428, v130);
      (*(void (**)(char *, uint64_t))(v416 + 8))(v129, v132);
      uint64_t v135 = v418;
      uint64_t v134 = v419;
      uint64_t v136 = v417;
      ((void (*)(char *, void, uint64_t))v418[6].Description)(v417, *MEMORY[0x263F19698], v419);
      v434 = v131;
      v435 = (ValueMetadata *)v132;
      p_Kind = (void *)v130;
      v437 = v133;
      uint64_t v420 = MEMORY[0x263F1AC98];
      uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
      uint64_t v138 = v347;
      uint64_t v139 = v383;
      sub_256177288();
      ((void (*)(char *, uint64_t))v135->Description)(v136, v134);
      uint64_t v140 = v345[1](v56, v139);
      v417 = (char *)&v342;
      MEMORY[0x270FA5388](v140);
      uint64_t v141 = v429;
      *(&v342 - 2) = v429;
      sub_255FABEB8();
      uint64_t v143 = v142;
      v434 = v139;
      v435 = (ValueMetadata *)OpaqueTypeConformance2;
      uint64_t v419 = MEMORY[0x263F1B070];
      v418 = (ValueMetadata *)swift_getOpaqueTypeConformance2();
      sub_255FAC028();
      uint64_t v145 = v144;
      unint64_t v146 = sub_255FAC50C();
      v434 = v145;
      v435 = (ValueMetadata *)v146;
      uint64_t v147 = swift_getOpaqueTypeConformance2();
      uint64_t v148 = v422;
      v434 = v422;
      v435 = (ValueMetadata *)v147;
      uint64_t v149 = swift_getOpaqueTypeConformance2();
      uint64_t v150 = v346;
      uint64_t v151 = v387;
      sub_256177348();
      v348[1](v138, v151);
      v421[1](v141, v148);
      sub_255FAF7D4(v380, (uint64_t (*)(void))type metadata accessor for ReflectiveIntervalSelectionPhase_iOS);
      uint64_t v152 = v351;
      uint64_t v153 = v349;
      uint64_t v154 = v150;
      uint64_t v155 = v388;
      (*(void (**)(char *, char *, uint64_t))(v351 + 32))(v349, v154, v388);
      (*(void (**)(char *, char *, uint64_t))(v152 + 16))(v384, v153, v155);
      swift_storeEnumTagMultiPayload();
      sub_255FABCFC();
      uint64_t v157 = v156;
      sub_255FABDCC();
      uint64_t v159 = v158;
      unint64_t v160 = sub_255FABE64();
      v434 = &type metadata for IntroPhase_iOS;
      v435 = (ValueMetadata *)v132;
      p_Kind = (void *)v160;
      v437 = (uint64_t (*)())MEMORY[0x263F1B908];
      uint64_t v161 = swift_getOpaqueTypeConformance2();
      v434 = v159;
      v435 = (ValueMetadata *)v161;
      uint64_t v162 = swift_getOpaqueTypeConformance2();
      v434 = v157;
      v435 = v143;
      p_Kind = (void *)v162;
      v437 = (uint64_t (*)())v149;
      swift_getOpaqueTypeConformance2();
      v434 = v151;
      v435 = v143;
      p_Kind = &v418->Kind;
      v437 = (uint64_t (*)())v149;
      swift_getOpaqueTypeConformance2();
      uint64_t v163 = (uint64_t)v385;
      sub_256176898();
      sub_255FAF76C(v163, (uint64_t)v413, (uint64_t (*)(void))sub_255FABB04);
      swift_storeEnumTagMultiPayload();
      sub_255FADA18();
      sub_255FADCA8();
      uint64_t v164 = (uint64_t)v414;
      sub_256176898();
      sub_255FAF7D4(v163, (uint64_t (*)(void))sub_255FABB04);
      sub_255FAF76C(v164, v425, (uint64_t (*)(void))sub_255FABABC);
      swift_storeEnumTagMultiPayload();
      sub_255FAD9D0();
      sub_255FADF6C();
      sub_256176898();
      sub_255FAF7D4(v164, (uint64_t (*)(void))sub_255FABABC);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v152 + 8))(v153, v155);
      break;
    case 2:
      uint64_t v165 = v420;
      unint64_t v166 = *(void *)(v420 + 64);
      LOBYTE(v43__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(v420 + 56);
      unint64_t v431 = v166;
      sub_255FAF708(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
      uint64_t v410 = v39;
      swift_retain();
      sub_256177598();
      v167 = v435;
      v409 = v434;
      LODWORD(v408) = p_Kind;
      unsigned int v168 = *(ValueMetadata **)(v165 + 96);
      LOBYTE(v434) = *(unsigned char *)(v165 + 88);
      v435 = v168;
      sub_256177578();
      char v169 = (char)v430;
      char v170 = *(unsigned char *)(v165 + 32);
      sub_255FAF76C(v165, (uint64_t)&v342 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for StateOfMindEntryView_iOS);
      unint64_t v171 = (*(unsigned __int8 *)(v77 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
      uint64_t v172 = swift_allocObject();
      sub_255FAE520((uint64_t)&v342 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0), v172 + v171, (uint64_t (*)(void))type metadata accessor for StateOfMindEntryView_iOS);
      type metadata accessor for StateOfMindEntryModel(0);
      sub_255FAECE0(&qword_269F42CB0, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel);
      *(void *)uint64_t v46 = sub_2561760E8();
      *((void *)v46 + 1) = v173;
      *((void *)v46 + 2) = v409;
      *((void *)v46 + 3) = v167;
      v46[32] = (char)v408;
      v46[33] = v169;
      v46[34] = v170;
      *((void *)v46 + 5) = sub_255FAEB70;
      *((void *)v46 + 6) = v172;
      int v174 = (ValueMetadata *)v389;
      uint64_t v175 = (uint64_t *)&v46[*(int *)(v389 + 36)];
      *uint64_t v175 = swift_getKeyPath();
      sub_255FA18A8(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
      swift_storeEnumTagMultiPayload();
      sub_255FA8F30(2, 1, v429);
      int v176 = v415;
      sub_2561778A8();
      uint64_t v177 = sub_255FAECE0(&qword_269F438A0, (void (*)(uint64_t))type metadata accessor for ValenceSelectionPhase_iOS);
      v178 = v350;
      uint64_t v179 = v428;
      v180 = (uint64_t (*)())MEMORY[0x263F1B908];
      MEMORY[0x25A29FC30](v176, MEMORY[0x263F8EE78], v174);
      uint64_t v181 = (ValueMetadata *)v179;
      (*(void (**)(char *, uint64_t))(v416 + 8))(v176, v179);
      uint64_t v183 = v418;
      uint64_t v182 = v419;
      uint64_t v184 = v417;
      ((void (*)(char *, void, uint64_t))v418[6].Description)(v417, *MEMORY[0x263F19698], v419);
      v434 = v174;
      v435 = v181;
      p_Kind = (void *)v177;
      v437 = v180;
      uint64_t v420 = MEMORY[0x263F1AC98];
      uint64_t v185 = swift_getOpaqueTypeConformance2();
      uint64_t v186 = v354;
      uint64_t v187 = v390;
      sub_256177288();
      ((void (*)(char *, uint64_t))v183->Description)(v184, v182);
      uint64_t v188 = v352[1](v178, v187);
      v418 = (ValueMetadata *)&v342;
      MEMORY[0x270FA5388](v188);
      uint64_t v189 = v429;
      *(&v342 - 2) = v429;
      sub_255FABEB8();
      v191 = v190;
      v434 = v187;
      v435 = (ValueMetadata *)v185;
      uint64_t v419 = MEMORY[0x263F1B070];
      uint64_t v192 = swift_getOpaqueTypeConformance2();
      sub_255FAC028();
      uint64_t v194 = v193;
      unint64_t v195 = sub_255FAC50C();
      v434 = v194;
      v435 = (ValueMetadata *)v195;
      uint64_t v196 = swift_getOpaqueTypeConformance2();
      uint64_t v197 = v422;
      v434 = v422;
      v435 = (ValueMetadata *)v196;
      uint64_t v198 = swift_getOpaqueTypeConformance2();
      uint64_t v199 = v353;
      unsigned __int8 v200 = v393;
      sub_256177348();
      v355[1](v186, v200);
      v421[1](v189, v197);
      sub_255FAF7D4((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhase_iOS);
      uint64_t v201 = v360;
      unsigned __int8 v202 = v386;
      uint64_t v203 = v397;
      (*(void (**)(char *, char *, uint64_t))(v360 + 32))(v386, v199, v397);
      (*(void (**)(char *, char *, uint64_t))(v201 + 16))(v398, v202, v203);
      swift_storeEnumTagMultiPayload();
      v434 = v200;
      v435 = v191;
      p_Kind = (void *)v192;
      v437 = (uint64_t (*)())v198;
      swift_getOpaqueTypeConformance2();
      uint64_t v204 = sub_255FAECE0(&qword_269F438C0, (void (*)(uint64_t))type metadata accessor for LabelsSelectionPhase_iOS);
      v434 = (ValueMetadata *)v392;
      v435 = (ValueMetadata *)v428;
      p_Kind = (void *)v204;
      v437 = (uint64_t (*)())MEMORY[0x263F1B908];
      uint64_t v205 = swift_getOpaqueTypeConformance2();
      v434 = v395;
      v435 = (ValueMetadata *)v205;
      uint64_t v206 = swift_getOpaqueTypeConformance2();
      v434 = v401;
      v435 = v191;
      p_Kind = (void *)v206;
      v437 = (uint64_t (*)())v198;
      swift_getOpaqueTypeConformance2();
      uint64_t v207 = (uint64_t)v400;
      sub_256176898();
      sub_255FAF76C(v207, (uint64_t)v413, (uint64_t (*)(void))sub_255FAC9C4);
      swift_storeEnumTagMultiPayload();
      sub_255FADA18();
      sub_255FADCA8();
      uint64_t v208 = (uint64_t)v414;
      sub_256176898();
      sub_255FAF7D4(v207, (uint64_t (*)(void))sub_255FAC9C4);
      sub_255FAF76C(v208, v425, (uint64_t (*)(void))sub_255FABABC);
      swift_storeEnumTagMultiPayload();
      sub_255FAD9D0();
      sub_255FADF6C();
      sub_256176898();
      sub_255FAF7D4(v208, (uint64_t (*)(void))sub_255FABABC);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v201 + 8))(v386, v203);
      break;
    case 3:
      uint64_t v209 = v420;
      uint64_t v210 = *(ValueMetadata **)(v420 + 96);
      LOBYTE(v434) = *(unsigned char *)(v420 + 88);
      v435 = v210;
      sub_255FAF708(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
      uint64_t v410 = v39;
      swift_retain();
      sub_256177578();
      char v211 = (char)v430;
      char v212 = *(unsigned char *)(v209 + 32);
      sub_255FAF76C(v209, (uint64_t)&v342 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for StateOfMindEntryView_iOS);
      unint64_t v213 = (*(unsigned __int8 *)(v77 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
      uint64_t v214 = swift_allocObject();
      sub_255FAE520((uint64_t)&v342 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0), v214 + v213, (uint64_t (*)(void))type metadata accessor for StateOfMindEntryView_iOS);
      type metadata accessor for StateOfMindEntryModel(0);
      sub_255FAECE0(&qword_269F42CB0, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel);
      uint64_t v215 = sub_2561760E8();
      uint64_t v216 = (uint64_t)v359;
      uint64_t *v359 = v215;
      *(void *)(v216 + 8) = v217;
      *(unsigned char *)(v216 + 16) = v211;
      *(unsigned char *)(v216 + 17) = v212;
      *(void *)(v216 + 24) = sub_255FAEB64;
      *(void *)(v216 + 32) = v214;
      uint64_t v218 = v392;
      long long v219 = (uint64_t *)(v216 + *(int *)(v392 + 32));
      *long long v219 = swift_getKeyPath();
      v220 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
      sub_255FA18A8(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
      swift_storeEnumTagMultiPayload();
      long long v221 = (uint64_t *)(v216 + *(int *)(v218 + 36));
      *long long v221 = swift_getKeyPath();
      sub_255FA18A8(0, &qword_269F47D00, MEMORY[0x263F18520], v220);
      swift_storeEnumTagMultiPayload();
      sub_255FA8F30(3, 1, v429);
      long long v222 = v415;
      sub_2561778A8();
      uint64_t v223 = sub_255FAECE0(&qword_269F438C0, (void (*)(uint64_t))type metadata accessor for LabelsSelectionPhase_iOS);
      long long v224 = v356;
      uint64_t v225 = v428;
      long long v226 = (uint64_t (*)())MEMORY[0x263F1B908];
      MEMORY[0x25A29FC30](v222, MEMORY[0x263F8EE78], v218);
      long long v227 = (ValueMetadata *)v225;
      (*(void (**)(char *, uint64_t))(v416 + 8))(v222, v225);
      long long v229 = v418;
      uint64_t v228 = v419;
      long long v230 = v417;
      ((void (*)(char *, void, uint64_t))v418[6].Description)(v417, *MEMORY[0x263F19698], v419);
      v434 = (ValueMetadata *)v218;
      v435 = v227;
      p_Kind = (void *)v223;
      v437 = v226;
      uint64_t v420 = MEMORY[0x263F1AC98];
      uint64_t v231 = swift_getOpaqueTypeConformance2();
      uint64_t v232 = v361;
      uint64_t v233 = v395;
      sub_256177288();
      ((void (*)(char *, uint64_t))v229->Description)(v230, v228);
      uint64_t v234 = v357[1](v224, v233);
      v417 = (char *)&v342;
      MEMORY[0x270FA5388](v234);
      uint64_t v235 = v429;
      *(&v342 - 2) = v429;
      sub_255FABEB8();
      v434 = v233;
      v435 = (ValueMetadata *)v231;
      v418 = v236;
      uint64_t v419 = MEMORY[0x263F1B070];
      uint64_t v237 = swift_getOpaqueTypeConformance2();
      sub_255FAC028();
      uint64_t v239 = v238;
      unint64_t v240 = sub_255FAC50C();
      v434 = v239;
      v435 = (ValueMetadata *)v240;
      uint64_t v241 = swift_getOpaqueTypeConformance2();
      uint64_t v242 = v422;
      v434 = v422;
      v435 = (ValueMetadata *)v241;
      uint64_t v243 = swift_getOpaqueTypeConformance2();
      v244 = v358;
      v245 = v401;
      uint64_t v246 = v237;
      sub_256177348();
      v362[1](v232, v245);
      v421[1](v235, v242);
      sub_255FAF7D4(v216, (uint64_t (*)(void))type metadata accessor for LabelsSelectionPhase_iOS);
      uint64_t v247 = v369;
      v248 = v366;
      uint64_t v249 = v404;
      (*(void (**)(char *, char *, uint64_t))(v369 + 32))(v366, v244, v404);
      v250 = v248;
      (*(void (**)(char *, char *, uint64_t))(v247 + 16))(v398, v248, v249);
      swift_storeEnumTagMultiPayload();
      uint64_t v251 = sub_255FAECE0(&qword_269F438A0, (void (*)(uint64_t))type metadata accessor for ValenceSelectionPhase_iOS);
      v434 = (ValueMetadata *)v389;
      v435 = (ValueMetadata *)v428;
      p_Kind = (void *)v251;
      v437 = (uint64_t (*)())MEMORY[0x263F1B908];
      uint64_t v252 = swift_getOpaqueTypeConformance2();
      v434 = v390;
      v435 = (ValueMetadata *)v252;
      uint64_t v253 = swift_getOpaqueTypeConformance2();
      v254 = v418;
      v434 = v393;
      v435 = v418;
      p_Kind = (void *)v253;
      v437 = (uint64_t (*)())v243;
      swift_getOpaqueTypeConformance2();
      v434 = v245;
      v435 = v254;
      p_Kind = (void *)v246;
      v437 = (uint64_t (*)())v243;
      swift_getOpaqueTypeConformance2();
      uint64_t v255 = (uint64_t)v400;
      sub_256176898();
      sub_255FAF76C(v255, (uint64_t)v413, (uint64_t (*)(void))sub_255FAC9C4);
      swift_storeEnumTagMultiPayload();
      sub_255FADA18();
      sub_255FADCA8();
      uint64_t v256 = (uint64_t)v414;
      sub_256176898();
      sub_255FAF7D4(v255, (uint64_t (*)(void))sub_255FAC9C4);
      sub_255FAF76C(v256, v425, (uint64_t (*)(void))sub_255FABABC);
      swift_storeEnumTagMultiPayload();
      sub_255FAD9D0();
      sub_255FADF6C();
      sub_256176898();
      v257 = sub_255FABABC;
      goto LABEL_8;
    case 4:
      uint64_t v258 = v420;
      unint64_t v259 = *(void *)(v420 + 80);
      LOBYTE(v43__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(v420 + 72);
      unint64_t v431 = v259;
      sub_255FAF708(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
      v261 = v260;
      swift_retain();
      v414 = v261;
      sub_256177598();
      v262 = v435;
      v413 = v434;
      LODWORD(v412) = p_Kind;
      v263 = *(ValueMetadata **)(v258 + 96);
      LOBYTE(v434) = *(unsigned char *)(v258 + 88);
      v435 = v263;
      sub_256177578();
      char v264 = (char)v430;
      LOBYTE(v261) = *(unsigned char *)(v258 + 32);
      sub_255FAF76C(v258, (uint64_t)&v342 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for StateOfMindEntryView_iOS);
      unint64_t v265 = (*(unsigned __int8 *)(v77 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
      uint64_t v266 = swift_allocObject();
      sub_255FAE520((uint64_t)&v342 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0), v266 + v265, (uint64_t (*)(void))type metadata accessor for StateOfMindEntryView_iOS);
      type metadata accessor for StateOfMindEntryModel(0);
      sub_255FAECE0(&qword_269F42CB0, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel);
      *(void *)uint64_t v22 = sub_2561760E8();
      *((void *)v22 + 1) = v267;
      *((void *)v22 + 2) = v413;
      *((void *)v22 + 3) = v262;
      v22[32] = v412;
      v22[33] = v264;
      v22[34] = (char)v261;
      *((void *)v22 + 5) = sub_255FAEB40;
      *((void *)v22 + 6) = v266;
      uint64_t v268 = v396;
      v269 = (uint64_t *)&v22[*(int *)(v396 + 36)];
      uint64_t *v269 = swift_getKeyPath();
      v270 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
      sub_255FA18A8(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
      swift_storeEnumTagMultiPayload();
      v271 = (uint64_t *)&v22[*(int *)(v268 + 40)];
      uint64_t *v271 = swift_getKeyPath();
      sub_255FA18A8(0, &qword_269F47D00, MEMORY[0x263F18520], v270);
      swift_storeEnumTagMultiPayload();
      v272 = (ValueMetadata **)&v22[*(int *)(v268 + 44)];
      v430 = 0;
      sub_256177568();
      v273 = v435;
      *v272 = v434;
      v272[1] = v273;
      v274 = *(ValueMetadata **)(v258 + 80);
      LOBYTE(v434) = *(unsigned char *)(v258 + 72);
      v435 = v274;
      sub_256177578();
      uint64_t v275 = v429;
      sub_255FA8F30(4, (v430 & 1) == 0, v429);
      v276 = v415;
      sub_2561778A8();
      uint64_t v277 = sub_255FAECE0(&qword_269F438E8, (void (*)(uint64_t))type metadata accessor for DomainsSelectionPhase_iOS);
      v278 = v363;
      uint64_t v279 = v428;
      v280 = (uint64_t (*)())MEMORY[0x263F1B908];
      MEMORY[0x25A29FC30](v276, MEMORY[0x263F8EE78], v268);
      v281 = (ValueMetadata *)v279;
      (*(void (**)(char *, uint64_t))(v416 + 8))(v276, v279);
      v283 = v418;
      uint64_t v282 = v419;
      v284 = v417;
      ((void (*)(char *, void, uint64_t))v418[6].Description)(v417, *MEMORY[0x263F19698], v419);
      v434 = (ValueMetadata *)v268;
      v435 = v281;
      p_Kind = (void *)v277;
      v437 = v280;
      uint64_t v420 = MEMORY[0x263F1AC98];
      uint64_t v285 = swift_getOpaqueTypeConformance2();
      v286 = v368;
      v287 = v399;
      sub_256177288();
      ((void (*)(char *, uint64_t))v283->Description)(v284, v282);
      uint64_t v288 = v364[1](v278, v287);
      v418 = (ValueMetadata *)&v342;
      MEMORY[0x270FA5388](v288);
      *(&v342 - 2) = v275;
      sub_255FABEB8();
      v290 = v289;
      v434 = v287;
      v435 = (ValueMetadata *)v285;
      uint64_t v419 = MEMORY[0x263F1B070];
      uint64_t v291 = swift_getOpaqueTypeConformance2();
      sub_255FAC028();
      v293 = v292;
      unint64_t v294 = sub_255FAC50C();
      v434 = v293;
      v435 = (ValueMetadata *)v294;
      uint64_t v295 = swift_getOpaqueTypeConformance2();
      v296 = v422;
      v434 = v422;
      v435 = (ValueMetadata *)v295;
      uint64_t v297 = swift_getOpaqueTypeConformance2();
      v298 = v365;
      v299 = v403;
      sub_256177348();
      v370[1](v286, v299);
      v421[1](v429, v296);
      sub_255FAF7D4((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for DomainsSelectionPhase_iOS);
      uint64_t v300 = v377;
      v301 = v376;
      uint64_t v302 = v407;
      (*(void (**)(char *, char *, uint64_t))(v377 + 32))(v376, v298, v407);
      (*(void (**)(char *, char *, uint64_t))(v300 + 16))(v408, v301, v302);
      swift_storeEnumTagMultiPayload();
      v434 = v299;
      v435 = v290;
      p_Kind = (void *)v291;
      v437 = (uint64_t (*)())v297;
      swift_getOpaqueTypeConformance2();
      uint64_t v303 = sub_255FAECE0(&qword_269F43908, (void (*)(uint64_t))type metadata accessor for NotificationsSetupPhase_iOS);
      v434 = (ValueMetadata *)v402;
      v435 = (ValueMetadata *)v428;
      p_Kind = (void *)v303;
      v437 = (uint64_t (*)())MEMORY[0x263F1B908];
      uint64_t v304 = swift_getOpaqueTypeConformance2();
      v434 = v406;
      v435 = (ValueMetadata *)v304;
      uint64_t v305 = swift_getOpaqueTypeConformance2();
      v434 = v409;
      v435 = v290;
      p_Kind = (void *)v305;
      v437 = (uint64_t (*)())v297;
      swift_getOpaqueTypeConformance2();
      uint64_t v306 = (uint64_t)v391;
      sub_256176898();
      sub_255FAF76C(v306, v425, (uint64_t (*)(void))sub_255FAD184);
      swift_storeEnumTagMultiPayload();
      sub_255FAD9D0();
      sub_255FADF6C();
      sub_256176898();
      sub_255FAF7D4(v306, (uint64_t (*)(void))sub_255FAD184);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v300 + 8))(v301, v302);
      break;
    case 5:
      sub_255FAF76C(v420, (uint64_t)&v342 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for StateOfMindEntryView_iOS);
      unint64_t v307 = (*(unsigned __int8 *)(v77 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
      uint64_t v308 = swift_allocObject();
      sub_255FAE520((uint64_t)&v342 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0), v308 + v307, (uint64_t (*)(void))type metadata accessor for StateOfMindEntryView_iOS);
      type metadata accessor for StateOfMindEntryModel(0);
      sub_255FAECE0(&qword_269F42CB0, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel);
      swift_retain();
      uint64_t v309 = sub_2561760E8();
      v310 = v367;
      uint64_t *v367 = v309;
      v310[1] = v311;
      v310[2] = (uint64_t)sub_255FAEB04;
      v310[3] = v308;
      uint64_t v312 = v402;
      v313 = (uint64_t *)((char *)v310 + *(int *)(v402 + 24));
      uint64_t *v313 = swift_getKeyPath();
      v314 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
      sub_255FA18A8(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
      swift_storeEnumTagMultiPayload();
      v315 = (uint64_t *)((char *)v310 + *(int *)(v312 + 28));
      uint64_t *v315 = swift_getKeyPath();
      sub_255FA18A8(0, &qword_269F47D00, MEMORY[0x263F18520], v314);
      swift_storeEnumTagMultiPayload();
      sub_255FA8F30(5, 1, v429);
      v316 = v415;
      sub_2561778A8();
      uint64_t v317 = sub_255FAECE0(&qword_269F43908, (void (*)(uint64_t))type metadata accessor for NotificationsSetupPhase_iOS);
      v318 = v371;
      uint64_t v319 = v428;
      v320 = (uint64_t (*)())MEMORY[0x263F1B908];
      MEMORY[0x25A29FC30](v316, MEMORY[0x263F8EE78], v312, v428, v317);
      (*(void (**)(char *, uint64_t))(v416 + 8))(v316, v319);
      v322 = v418;
      uint64_t v321 = v419;
      v323 = v417;
      ((void (*)(char *, void, uint64_t))v418[6].Description)(v417, *MEMORY[0x263F19698], v419);
      v434 = (ValueMetadata *)v312;
      v435 = (ValueMetadata *)v319;
      p_Kind = (void *)v317;
      v437 = v320;
      uint64_t v420 = MEMORY[0x263F1AC98];
      uint64_t v324 = swift_getOpaqueTypeConformance2();
      v325 = v374;
      v326 = v406;
      sub_256177288();
      ((void (*)(char *, uint64_t))v322->Description)(v323, v321);
      uint64_t v327 = Description[1](v318, v326);
      v417 = (char *)&v342;
      MEMORY[0x270FA5388](v327);
      uint64_t v328 = v429;
      *(&v342 - 2) = v429;
      sub_255FABEB8();
      v330 = v329;
      v434 = v326;
      v435 = (ValueMetadata *)v324;
      uint64_t v419 = MEMORY[0x263F1B070];
      v418 = (ValueMetadata *)swift_getOpaqueTypeConformance2();
      sub_255FAC028();
      v332 = v331;
      unint64_t v333 = sub_255FAC50C();
      v434 = v332;
      v435 = (ValueMetadata *)v333;
      uint64_t v334 = swift_getOpaqueTypeConformance2();
      v335 = v422;
      v434 = v422;
      v435 = (ValueMetadata *)v334;
      uint64_t v336 = swift_getOpaqueTypeConformance2();
      v337 = v373;
      v338 = v409;
      sub_256177348();
      v375[1](v325, v338);
      v421[1](v328, v335);
      sub_255FAF7D4((uint64_t)v310, (uint64_t (*)(void))type metadata accessor for NotificationsSetupPhase_iOS);
      uint64_t v247 = v379;
      v250 = v378;
      uint64_t v249 = v410;
      (*(void (**)(char *, char *, uint64_t))(v379 + 32))(v378, v337, v410);
      (*(void (**)(char *, char *, uint64_t))(v247 + 16))(v408, v250, v249);
      swift_storeEnumTagMultiPayload();
      uint64_t v339 = sub_255FAECE0(&qword_269F438E8, (void (*)(uint64_t))type metadata accessor for DomainsSelectionPhase_iOS);
      v434 = (ValueMetadata *)v396;
      v435 = (ValueMetadata *)v428;
      p_Kind = (void *)v339;
      v437 = (uint64_t (*)())MEMORY[0x263F1B908];
      uint64_t v340 = swift_getOpaqueTypeConformance2();
      v434 = v399;
      v435 = (ValueMetadata *)v340;
      uint64_t v341 = swift_getOpaqueTypeConformance2();
      v434 = v403;
      v435 = v330;
      p_Kind = (void *)v341;
      v437 = (uint64_t (*)())v336;
      swift_getOpaqueTypeConformance2();
      v434 = v338;
      v435 = v330;
      p_Kind = &v418->Kind;
      v437 = (uint64_t (*)())v336;
      swift_getOpaqueTypeConformance2();
      uint64_t v256 = (uint64_t)v391;
      sub_256176898();
      sub_255FAF76C(v256, v425, (uint64_t (*)(void))sub_255FAD184);
      swift_storeEnumTagMultiPayload();
      sub_255FAD9D0();
      sub_255FADF6C();
      sub_256176898();
      v257 = sub_255FAD184;
LABEL_8:
      sub_255FAF7D4(v256, (uint64_t (*)(void))v257);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v247 + 8))(v250, v249);
      break;
    default:
      char v88 = *(unsigned char *)(v420 + 32);
      uint64_t v344 = v84;
      uint64_t v343 = v85;
      sub_255FAF76C(v420, (uint64_t)&v342 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for StateOfMindEntryView_iOS);
      unint64_t v89 = (*(unsigned __int8 *)(v77 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
      uint64_t v90 = swift_allocObject();
      uint64_t v410 = v39;
      uint64_t v91 = v90;
      sub_255FAE520((uint64_t)&v342 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0), v90 + v89, (uint64_t (*)(void))type metadata accessor for StateOfMindEntryView_iOS);
      type metadata accessor for StateOfMindEntryModel(0);
      sub_255FAECE0(&qword_269F42CB0, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel);
      swift_retain();
      uint64_t v92 = sub_2561760E8();
      uint64_t v94 = v93;
      uint64_t v95 = v429;
      sub_255FA8F30(0, 1, v429);
      v434 = (ValueMetadata *)v92;
      v435 = v94;
      LOBYTE(p_Kind) = (v88 & 1) == 0;
      v437 = sub_255FAEBA0;
      uint64_t v438 = v91;
      sub_255FA9508(v95, (uint64_t)v83);
      uint64_t v96 = v422;
      v421[1](v95, v422);
      swift_release();
      swift_release();
      uint64_t v97 = v343;
      uint64_t v98 = v344;
      (*(void (**)(char *, char *, uint64_t))(v343 + 32))(v87, v83, v344);
      (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v384, v87, v98);
      swift_storeEnumTagMultiPayload();
      sub_255FABCFC();
      uint64_t v100 = v99;
      sub_255FABEB8();
      unint64_t v102 = v101;
      sub_255FABDCC();
      uint64_t v104 = v103;
      unint64_t v105 = sub_255FABE64();
      uint64_t v106 = v428;
      v430 = &type metadata for IntroPhase_iOS;
      unint64_t v431 = v428;
      unint64_t v432 = v105;
      uint64_t v433 = MEMORY[0x263F1B908];
      uint64_t v107 = swift_getOpaqueTypeConformance2();
      v430 = v104;
      unint64_t v431 = v107;
      uint64_t v108 = swift_getOpaqueTypeConformance2();
      sub_255FAC028();
      uint64_t v110 = v109;
      unint64_t v111 = sub_255FAC50C();
      v430 = v110;
      unint64_t v431 = v111;
      uint64_t v112 = swift_getOpaqueTypeConformance2();
      v430 = v96;
      unint64_t v431 = v112;
      uint64_t v113 = swift_getOpaqueTypeConformance2();
      v430 = v100;
      unint64_t v431 = v102;
      unint64_t v432 = v108;
      uint64_t v433 = v113;
      swift_getOpaqueTypeConformance2();
      uint64_t v114 = sub_255FAECE0(&qword_269F43878, (void (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhase_iOS);
      v430 = (ValueMetadata *)v382;
      unint64_t v431 = v106;
      unint64_t v432 = v114;
      uint64_t v433 = MEMORY[0x263F1B908];
      uint64_t v115 = swift_getOpaqueTypeConformance2();
      v430 = v383;
      unint64_t v431 = v115;
      uint64_t v116 = swift_getOpaqueTypeConformance2();
      v430 = v387;
      unint64_t v431 = v102;
      unint64_t v432 = v116;
      uint64_t v433 = v113;
      swift_getOpaqueTypeConformance2();
      uint64_t v117 = (uint64_t)v385;
      uint64_t v118 = v344;
      sub_256176898();
      sub_255FAF76C(v117, (uint64_t)v413, (uint64_t (*)(void))sub_255FABB04);
      swift_storeEnumTagMultiPayload();
      sub_255FADA18();
      sub_255FADCA8();
      uint64_t v119 = (uint64_t)v414;
      sub_256176898();
      sub_255FAF7D4(v117, (uint64_t (*)(void))sub_255FABB04);
      sub_255FAF76C(v119, v425, (uint64_t (*)(void))sub_255FABABC);
      swift_storeEnumTagMultiPayload();
      sub_255FAD9D0();
      sub_255FADF6C();
      sub_256176898();
      sub_255FAF7D4(v119, (uint64_t (*)(void))sub_255FABABC);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v343 + 8))(v87, v118);
      break;
  }
  return result;
}

uint64_t sub_255FA7998()
{
  uint64_t v0 = sub_256175D98();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v4 = sub_255FA38B4();
  if (!v4) {
    return v4;
  }
  if (v4 == 1)
  {
    type metadata accessor for StateOfMindEntryView_iOS();
    double v5 = 0.0;
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_256175C88();
    swift_release();
    swift_release();
    swift_release();
    double v5 = *(double *)&v8[1];
    type metadata accessor for StateOfMindEntryView_iOS();
  }
  sub_25611A114((uint64_t)v3);
  uint64_t v6 = sub_2560A8DFC((uint64_t)v3, v5);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v6;
}

uint64_t sub_255FA7B44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for IntroPhaseSpecs();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_256175FC8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_256175B68();
  uint64_t v33 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256175B48();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  uint64_t v16 = sub_256175B58();
  os_log_type_t v17 = sub_256178208();
  int v32 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v31 = a1;
    uint64_t v19 = v18;
    uint64_t v29 = swift_slowAlloc();
    uint64_t v35 = v29;
    *(_DWORD *)uint64_t v19 = 136315394;
    os_log_t v27 = v16;
    uint64_t v34 = sub_255FB29A8(0xD000000000000018, 0x80000002561A0C80, &v35);
    uint64_t v30 = a2;
    sub_256178458();
    *(_WORD *)(v19 + 12) = 2048;
    uint64_t v28 = v13;
    sub_256175FA8();
    uint64_t v34 = v20;
    sub_256178458();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    os_log_t v21 = v27;
    _os_log_impl(&dword_255F58000, v27, (os_log_type_t)v32, "[%s] Height: %f", (uint8_t *)v19, 0x16u);
    uint64_t v22 = v29;
    swift_arrayDestroy();
    MEMORY[0x25A2A1E90](v22, -1, -1);
    MEMORY[0x25A2A1E90](v19, -1, -1);

    (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v28);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);

    (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v13);
  }
  type metadata accessor for StateOfMindEntryView_iOS();
  sub_25611A408((uint64_t)v8);
  sub_256175FA8();
  BOOL v24 = v23 <= 600.0;
  uint64_t result = sub_255FAF7D4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for IntroPhaseSpecs);
  *a3 = v24;
  return result;
}

uint64_t sub_255FA7EFC()
{
  return sub_256177588();
}

uint64_t sub_255FA7F74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StateOfMindEntryView_iOS();
  uint64_t v41 = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v41 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  double v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FAB734();
  uint64_t v7 = v6;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v42 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v43 = (uint64_t)&v37 - v10;
  sub_255FAFEAC(0, &qword_269F43970, MEMORY[0x263F19B20]);
  uint64_t v44 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v37 - v12;
  sub_255FABF9C(0, &qword_269F437A0, sub_255FAB80C, (void (*)(void))sub_255FAE300);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v37 - v17;
  char v19 = *(unsigned char *)(v1 + 32);
  sub_255FA39DC((uint64_t)&v37 - v17);
  if (v19)
  {
    sub_255FAF76C(v1, (uint64_t)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for StateOfMindEntryView_iOS);
    uint64_t v20 = *(unsigned __int8 *)(v41 + 80);
    uint64_t v41 = a1;
    uint64_t v21 = (v20 + 16) & ~v20;
    uint64_t v39 = v7;
    uint64_t v22 = swift_allocObject();
    uint64_t v40 = v13;
    uint64_t v23 = v22;
    uint64_t v38 = v15;
    sub_255FAE520((uint64_t)v5, v22 + v21, (uint64_t (*)(void))type metadata accessor for StateOfMindEntryView_iOS);
    sub_255FAF76C(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StateOfMindEntryView_iOS);
    uint64_t v24 = swift_allocObject();
    sub_255FAE520((uint64_t)v5, v24 + v21, (uint64_t (*)(void))type metadata accessor for StateOfMindEntryView_iOS);
    uint64_t v25 = v42;
    uint64_t v26 = v38;
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v42, v18, v38);
    os_log_t v27 = (uint64_t (**)@<X0>(uint64_t@<X0>, BOOL *@<X8>))&v25[*(int *)(v39 + 36)];
    ValueMetadata *v27 = sub_255FAE42C;
    v27[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, BOOL *@<X8>))v23;
    v27[2] = (uint64_t (*)@<X0>(uint64_t@<X0>, BOOL *@<X8>))sub_255FAE4B0;
    v27[3] = (uint64_t (*)@<X0>(uint64_t@<X0>, BOOL *@<X8>))v24;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v26);
    uint64_t v28 = (uint64_t)v25;
    uint64_t v29 = v43;
    sub_255FAE520(v28, v43, (uint64_t (*)(void))sub_255FAB734);
    sub_255FAF76C(v29, (uint64_t)v40, (uint64_t (*)(void))sub_255FAB734);
    swift_storeEnumTagMultiPayload();
    sub_255FAB80C(255);
    uint64_t v31 = v30;
    unint64_t v32 = sub_255FAE300();
    uint64_t v45 = v31;
    unint64_t v46 = v32;
    swift_getOpaqueTypeConformance2();
    sub_255FAE588();
    sub_256176898();
    return sub_255FAF7D4(v29, (uint64_t (*)(void))sub_255FAB734);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v18, v15);
    swift_storeEnumTagMultiPayload();
    sub_255FAB80C(255);
    uint64_t v35 = v34;
    unint64_t v36 = sub_255FAE300();
    uint64_t v45 = v35;
    unint64_t v46 = v36;
    swift_getOpaqueTypeConformance2();
    sub_255FAE588();
    sub_256176898();
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
}

uint64_t sub_255FA8470(unsigned __int8 a1)
{
  uint64_t v3 = sub_256177A18();
  uint64_t v45 = *(void *)(v3 - 8);
  uint64_t v46 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v43 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_256177A48();
  uint64_t v42 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v41 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for StateOfMindEntryView_iOS();
  uint64_t v39 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v39 + 64);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = sub_256177A08();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (uint64_t *)((char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v47 = sub_256177A68();
  uint64_t v40 = *(void *)(v47 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v47);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v38 - v15;
  uint64_t result = sub_255FA38B4();
  if (result == a1)
  {
    switch(a1)
    {
      case 1u:
        swift_retain();
        sub_255FFDBD0(2, 0);
        swift_release();
        swift_getKeyPath();
        swift_getKeyPath();
        uint64_t aBlock = 0;
        swift_retain();
        sub_256175C98();
        swift_getKeyPath();
        swift_getKeyPath();
        uint64_t aBlock = 0;
        swift_retain();
        sub_256175C98();
        uint64_t v19 = *(void *)(v1 + 40);
        unint64_t v18 = *(void *)(v1 + 48);
        uint64_t aBlock = v19;
        unint64_t v51 = v18;
        sub_255FAE868();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_256177578();
        uint64_t v20 = v49;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v20 = sub_25609649C(0, *((void *)v20 + 2) + 1, 1, v20);
        }
        unint64_t v26 = *((void *)v20 + 2);
        unint64_t v25 = *((void *)v20 + 3);
        if (v26 >= v25 >> 1) {
          uint64_t v20 = sub_25609649C((char *)(v25 > 1), v26 + 1, 1, v20);
        }
        *((void *)v20 + 2) = v26 + 1;
        uint64_t v23 = &v20[v26];
        char v24 = 2;
        goto LABEL_23;
      case 2u:
        swift_retain();
        sub_255FFDBD0(3, 0);
        swift_release();
        swift_getKeyPath();
        swift_getKeyPath();
        uint64_t aBlock = MEMORY[0x263F8EE78];
        swift_retain();
        sub_256175C98();
        uint64_t v19 = *(void *)(v1 + 40);
        unint64_t v18 = *(void *)(v1 + 48);
        uint64_t aBlock = v19;
        unint64_t v51 = v18;
        sub_255FAE868();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_256177578();
        uint64_t v20 = v49;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v20 = sub_25609649C(0, *((void *)v20 + 2) + 1, 1, v20);
        }
        unint64_t v28 = *((void *)v20 + 2);
        unint64_t v27 = *((void *)v20 + 3);
        if (v28 >= v27 >> 1) {
          uint64_t v20 = sub_25609649C((char *)(v27 > 1), v28 + 1, 1, v20);
        }
        *((void *)v20 + 2) = v28 + 1;
        uint64_t v23 = &v20[v28];
        char v24 = 3;
        goto LABEL_23;
      case 3u:
        swift_retain();
        sub_255FFDBD0(4, 0);
        swift_release();
        swift_getKeyPath();
        swift_getKeyPath();
        uint64_t aBlock = MEMORY[0x263F8EE78];
        swift_retain();
        sub_256175C98();
        swift_getKeyPath();
        swift_getKeyPath();
        uint64_t aBlock = 0;
        unint64_t v51 = 0xE000000000000000;
        swift_retain_n();
        sub_256175C98();
        sub_25600146C();
        swift_release();
        uint64_t v19 = *(void *)(v1 + 40);
        unint64_t v18 = *(void *)(v1 + 48);
        uint64_t aBlock = v19;
        unint64_t v51 = v18;
        sub_255FAE868();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_256177578();
        uint64_t v20 = v49;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v20 = sub_25609649C(0, *((void *)v20 + 2) + 1, 1, v20);
        }
        unint64_t v30 = *((void *)v20 + 2);
        unint64_t v29 = *((void *)v20 + 3);
        if (v30 >= v29 >> 1) {
          uint64_t v20 = sub_25609649C((char *)(v29 > 1), v30 + 1, 1, v20);
        }
        *((void *)v20 + 2) = v30 + 1;
        uint64_t v23 = &v20[v30];
        char v24 = 4;
        goto LABEL_23;
      case 4u:
        swift_retain();
        sub_255FFDBD0(5, 0);
        swift_release();
        sub_255FA99CC();
        sub_255FAEC28();
        uint64_t v38 = sub_2561782D8();
        sub_256177A58();
        *uint64_t v11 = 2200;
        (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F8F000], v8);
        MEMORY[0x25A2A0500](v14, v11);
        (*(void (**)(void *, uint64_t))(v9 + 8))(v11, v8);
        uint64_t v40 = *(void *)(v40 + 8);
        ((void (*)(char *, uint64_t))v40)(v14, v47);
        sub_255FAF76C(v1, (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for StateOfMindEntryView_iOS);
        unint64_t v31 = (*(unsigned __int8 *)(v39 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
        uint64_t v32 = swift_allocObject();
        sub_255FAE520((uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v32 + v31, (uint64_t (*)(void))type metadata accessor for StateOfMindEntryView_iOS);
        uint64_t v54 = sub_255FAEC6C;
        uint64_t v55 = v32;
        uint64_t aBlock = MEMORY[0x263EF8330];
        unint64_t v51 = 1107296256;
        uint64_t v52 = sub_255FA9E78;
        uint64_t v53 = &block_descriptor_0;
        uint64_t v33 = _Block_copy(&aBlock);
        swift_release();
        uint64_t v34 = v41;
        sub_256177A38();
        uint64_t aBlock = MEMORY[0x263F8EE78];
        sub_255FAECE0((unint64_t *)&unk_269F44D10, MEMORY[0x263F8F030]);
        sub_255FA18A8(0, &qword_269F439E0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
        sub_255FAED28();
        uint64_t v35 = v43;
        uint64_t v36 = v46;
        sub_2561784C8();
        uint64_t v37 = (void *)v38;
        MEMORY[0x25A2A0D40](v16, v34, v35, v33);
        _Block_release(v33);

        (*(void (**)(char *, uint64_t))(v45 + 8))(v35, v36);
        (*(void (**)(char *, uint64_t))(v42 + 8))(v34, v44);
        return ((uint64_t (*)(char *, uint64_t))v40)(v16, v47);
      case 5u:
        swift_retain();
        sub_255FFDBD0(9, 0);
        swift_release();
        return sub_255FA9EBC();
      default:
        swift_retain();
        sub_255FFDBD0(1, 0);
        swift_release();
        uint64_t v19 = *(void *)(v1 + 40);
        unint64_t v18 = *(void *)(v1 + 48);
        uint64_t aBlock = v19;
        unint64_t v51 = v18;
        sub_255FAE868();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_256177578();
        uint64_t v20 = v49;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v20 = sub_25609649C(0, *((void *)v20 + 2) + 1, 1, v20);
        }
        unint64_t v22 = *((void *)v20 + 2);
        unint64_t v21 = *((void *)v20 + 3);
        if (v22 >= v21 >> 1) {
          uint64_t v20 = sub_25609649C((char *)(v21 > 1), v22 + 1, 1, v20);
        }
        *((void *)v20 + 2) = v22 + 1;
        uint64_t v23 = &v20[v22];
        char v24 = 1;
LABEL_23:
        v23[32] = v24;
        uint64_t aBlock = v19;
        unint64_t v51 = v18;
        uint64_t v48 = v20;
        sub_256177588();
        swift_release();
        uint64_t result = swift_bridgeObjectRelease();
        break;
    }
  }
  return result;
}

uint64_t sub_255FA8F30@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v35 = a1;
  int v36 = a2;
  uint64_t v43 = a3;
  sub_255FAC084();
  uint64_t v41 = *(void *)(v4 - 8);
  uint64_t v42 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v40 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_256176958();
  MEMORY[0x270FA5388](v6 - 8);
  sub_255FAC218();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FAC164();
  uint64_t v13 = v12;
  uint64_t v39 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v37 = (char *)&v35 - v17;
  sub_255FAC028();
  uint64_t v38 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v21 = *(unsigned char *)(v3 + 32);
  uint64_t v22 = sub_256176948();
  MEMORY[0x270FA5388](v22);
  if (v21)
  {
    *((unsigned char *)&v35 - 32) = v35;
    *((void *)&v35 - 3) = v3;
    *((unsigned char *)&v35 - 16) = v36 & 1;
    sub_255FAC288();
    sub_255FAC374();
    sub_256175E68();
    uint64_t v23 = sub_255FAECE0(&qword_269F43850, (void (*)(uint64_t))sub_255FAC218);
    MEMORY[0x25A29F470](v11, v8, v23);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v24 = v39;
    unint64_t v25 = v37;
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v37, v16, v13);
    uint64_t v44 = v8;
    uint64_t v45 = v23;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    unint64_t v27 = v40;
    MEMORY[0x25A29F470](v25, v13, OpaqueTypeConformance2);
    uint64_t v44 = v13;
    uint64_t v45 = OpaqueTypeConformance2;
    uint64_t v28 = swift_getOpaqueTypeConformance2();
    uint64_t v29 = v42;
    MEMORY[0x25A29F490](v27, v42, v42, v28, v28);
  }
  else
  {
    *((void *)&v35 - 2) = v3;
    *((unsigned char *)&v35 - 8) = v36 & 1;
    sub_255FAC288();
    sub_255FAC374();
    sub_256175E68();
    uint64_t v30 = sub_255FAECE0(&qword_269F43850, (void (*)(uint64_t))sub_255FAC218);
    MEMORY[0x25A29F470](v11, v8, v30);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v24 = v39;
    unint64_t v25 = v37;
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v37, v16, v13);
    uint64_t v44 = v8;
    uint64_t v45 = v30;
    uint64_t v31 = swift_getOpaqueTypeConformance2();
    unint64_t v27 = v40;
    MEMORY[0x25A29F470](v25, v13, v31);
    uint64_t v44 = v13;
    uint64_t v45 = v31;
    uint64_t v32 = swift_getOpaqueTypeConformance2();
    uint64_t v29 = v42;
    MEMORY[0x25A29F480](v27, v42, v42, v32, v32);
  }
  (*(void (**)(char *, uint64_t))(v41 + 8))(v27, v29);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v13);
  unint64_t v33 = sub_255FAC50C();
  MEMORY[0x25A29F470](v20, v38, v33);
  return sub_255FAF7D4((uint64_t)v20, (uint64_t (*)(void))sub_255FAC028);
}

uint64_t sub_255FA9508@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v36 = a2;
  uint64_t v32 = sub_256176618();
  uint64_t v3 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2561778B8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FABDCC();
  uint64_t v11 = v10;
  Description = (void (**)(char *, ValueMetadata *))v10[-1].Description;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FABCFC();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v34 = v15;
  uint64_t v35 = v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v31 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v18 = v2[1];
  long long v42 = *v2;
  long long v43 = v18;
  uint64_t v44 = *((void *)v2 + 4);
  sub_2561778A8();
  unint64_t v19 = sub_255FABE64();
  MEMORY[0x25A29FC30](v9, MEMORY[0x263F8EE78], &type metadata for IntroPhase_iOS, v6, v19, MEMORY[0x263F1B908]);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v20 = v32;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F19698], v32);
  uint64_t v38 = &type metadata for IntroPhase_iOS;
  unint64_t v39 = v6;
  unint64_t v40 = v19;
  uint64_t v41 = MEMORY[0x263F1B908];
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v22 = v31;
  sub_256177288();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v20);
  Description[1](v14, v11);
  uint64_t v37 = v33;
  sub_255FABEB8();
  uint64_t v38 = v11;
  unint64_t v39 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_255FABF9C(255, &qword_269F43808, (void (*)(uint64_t))sub_255FAC028, (void (*)(void))sub_255FAC50C);
  uint64_t v24 = v23;
  sub_255FAC028();
  unint64_t v26 = v25;
  unint64_t v27 = sub_255FAC50C();
  uint64_t v38 = v26;
  unint64_t v39 = v27;
  uint64_t v28 = swift_getOpaqueTypeConformance2();
  uint64_t v38 = v24;
  unint64_t v39 = v28;
  swift_getOpaqueTypeConformance2();
  uint64_t v29 = v34;
  sub_256177348();
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v22, v29);
}

uint64_t sub_255FA9970()
{
  uint64_t result = sub_255FA38B4();
  if (result == 5)
  {
    swift_retain();
    sub_255FFDBD0(9, 0);
    swift_release();
    return sub_255FA9EBC();
  }
  return result;
}

uint64_t sub_255FA99CC()
{
  uint64_t v1 = type metadata accessor for StateOfMindEntryView_iOS();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_255FA18A8(0, &qword_26B2AD1F8, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = &v15[-v6];
  uint64_t v8 = *(void *)(v0 + 80);
  v15[16] = *(unsigned char *)(v0 + 72);
  uint64_t v16 = v8;
  v15[15] = 1;
  sub_255FAF708(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
  sub_256177588();
  uint64_t v9 = sub_2561780E8();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
  sub_255FAF76C(v0, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StateOfMindEntryView_iOS);
  sub_2561780C8();
  uint64_t v10 = sub_2561780B8();
  unint64_t v11 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = MEMORY[0x263F8F500];
  *(void *)(v12 + 16) = v10;
  *(void *)(v12 + 24) = v13;
  sub_255FAE520((uint64_t)v4, v12 + v11, (uint64_t (*)(void))type metadata accessor for StateOfMindEntryView_iOS);
  sub_2560CA690((uint64_t)v7, (uint64_t)&unk_269F439F0, v12);
  return swift_release();
}

void sub_255FA9C20()
{
  uint64_t v1 = type metadata accessor for StateOfMindEntryView_iOS();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F55050]), sel_init);
  if (objc_msgSend(v4, sel_hasEverEnabledAStateOfMindReminderNotification))
  {
    sub_255FAF76C(v0, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StateOfMindEntryView_iOS);
    goto LABEL_5;
  }
  id v5 = objc_msgSend(self, sel_sharedBehavior);
  if (v5)
  {
    uint64_t v6 = v5;
    unsigned __int8 v7 = objc_msgSend(v5, sel_isiPad);

    sub_255FAF76C(v0, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StateOfMindEntryView_iOS);
    if ((v7 & 1) == 0)
    {
      int v8 = v3[32];
      sub_255FAF7D4((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StateOfMindEntryView_iOS);
      if (v8 != 1)
      {
        uint64_t v9 = *(void *)(v0 + 40);
        uint64_t v10 = *(void *)(v0 + 48);
        uint64_t v21 = v9;
        uint64_t v22 = v10;
        sub_255FAE868();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_256177578();
        unint64_t v11 = v23;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v11 = sub_25609649C(0, *((void *)v11 + 2) + 1, 1, v11);
        }
        unint64_t v12 = *((void *)v11 + 2);
        unint64_t v13 = *((void *)v11 + 3);
        unint64_t v14 = v12 + 1;
        if (v12 >= v13 >> 1)
        {
          unint64_t v19 = v12 + 1;
          uint64_t v15 = v11;
          unint64_t v16 = v12;
          uint64_t v17 = sub_25609649C((char *)(v13 > 1), v12 + 1, 1, v15);
          unint64_t v12 = v16;
          unint64_t v14 = v19;
          unint64_t v11 = v17;
        }
        *((void *)v11 + 2) = v14;
        v11[v12 + 32] = 5;
        uint64_t v21 = v9;
        uint64_t v22 = v10;
        uint64_t v20 = v11;
        sub_256177588();
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
LABEL_6:
      sub_255FA9EBC();
LABEL_7:

      return;
    }
LABEL_5:
    sub_255FAF7D4((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StateOfMindEntryView_iOS);
    goto LABEL_6;
  }
  __break(1u);
}

uint64_t sub_255FA9E78(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_255FA9EBC()
{
  uint64_t v17 = sub_256177A18();
  uint64_t v20 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_256177A48();
  uint64_t v18 = *(void *)(v3 - 8);
  uint64_t v19 = v3;
  MEMORY[0x270FA5388](v3);
  id v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for StateOfMindEntryView_iOS();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = *(void (**)(void))(v0 + 16);
  swift_retain();
  char v10 = sub_255FFDAB8();
  swift_release();
  v9(v10 & 1);
  sub_255FAEC28();
  unint64_t v11 = (void *)sub_2561782D8();
  sub_255FAF76C(v0, (uint64_t)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for StateOfMindEntryView_iOS);
  unint64_t v12 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v13 = swift_allocObject();
  sub_255FAE520((uint64_t)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, (uint64_t (*)(void))type metadata accessor for StateOfMindEntryView_iOS);
  aBlock[4] = sub_255FAF2FC;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_255FA9E78;
  aBlock[3] = &block_descriptor_90;
  unint64_t v14 = _Block_copy(aBlock);
  swift_release();
  sub_256177A38();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_255FAECE0((unint64_t *)&unk_269F44D10, MEMORY[0x263F8F030]);
  sub_255FA18A8(0, &qword_269F439E0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
  sub_255FAED28();
  uint64_t v15 = v17;
  sub_2561784C8();
  MEMORY[0x25A2A0D70](0, v5, v2, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v2, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v5, v19);
}

uint64_t sub_255FAA27C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  v4[3] = sub_2561780C8();
  v4[4] = sub_2561780B8();
  uint64_t v6 = sub_256178088();
  v4[5] = v6;
  v4[6] = v5;
  return MEMORY[0x270FA2498](sub_255FAA318, v6, v5);
}

uint64_t sub_255FAA318()
{
  v0[7] = *(void *)(v0[2] + 8);
  swift_retain();
  v0[8] = sub_2561780B8();
  uint64_t v2 = sub_256178088();
  v0[9] = v2;
  v0[10] = v1;
  return MEMORY[0x270FA2498](sub_255FAA3B0, v2, v1);
}

uint64_t sub_255FAA3B0()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_hasInitiatedSampleSave;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_hasInitiatedSampleSave) == 1)
  {
    swift_release();
    swift_release();
    uint64_t v3 = v0[5];
    uint64_t v4 = v0[6];
    return MEMORY[0x270FA2498](sub_255FAA954, v3, v4);
  }
  else
  {
    uint64_t v5 = sub_256002708();
    v0[11] = v5;
    *(unsigned char *)(v1 + v2) = 1;
    uint64_t v6 = (void *)swift_task_alloc();
    v0[12] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_255FAA4C0;
    return sub_2560029F0(v5);
  }
}

uint64_t sub_255FAA4C0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 72);
  return MEMORY[0x270FA2498](sub_255FAA5E0, v3, v2);
}

uint64_t sub_255FAA5E0()
{
  sub_255FFDBD0(7, 0);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_255FAA680;
  return sub_256003B10();
}

uint64_t sub_255FAA680()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 112) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_255FAA7C0;
  return sub_2560044C8();
}

uint64_t sub_255FAA7C0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 72);
  return MEMORY[0x270FA2498](sub_255FAA8E0, v3, v2);
}

uint64_t sub_255FAA8E0()
{
  uint64_t v1 = (void *)v0[11];
  swift_release();

  swift_release();
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  return MEMORY[0x270FA2498](sub_255FAA954, v2, v3);
}

uint64_t sub_255FAA954()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_255FAA9B4()
{
  uint64_t v0 = sub_256175F88();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StateOfMindEntryView_iOS();
  sub_25611A6E4((uint64_t)v3);
  sub_256175F78();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_255FAAA98@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v37 = a2;
  uint64_t v32 = a1;
  uint64_t v38 = a3;
  uint64_t v3 = type metadata accessor for StateOfMindEntryView_iOS();
  uint64_t v31 = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v31 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  sub_255FAE3D8(0, (unint64_t *)&qword_269F42ED0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
  uint64_t v35 = *(void *)(v5 - 8);
  uint64_t v36 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v31 - v6;
  sub_255F737BC();
  MEMORY[0x270FA5388](v8 - 8);
  char v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FAC2E8();
  uint64_t v33 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FAC288();
  uint64_t v34 = v14;
  MEMORY[0x270FA5388](v14);
  unint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v17 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_2561755B8();
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();

  unint64_t v39 = (void *)v18;
  uint64_t v40 = v20;
  sub_255FAF76C(v32, (uint64_t)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for StateOfMindEntryView_iOS);
  unint64_t v21 = (*(unsigned __int8 *)(v31 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  uint64_t v22 = swift_allocObject();
  sub_255FAE520((uint64_t)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v21, (uint64_t (*)(void))type metadata accessor for StateOfMindEntryView_iOS);
  sub_255F5CE90();
  uint64_t v23 = MEMORY[0x263F8D310];
  sub_2561775D8();
  unint64_t v39 = &unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B5928);
  sub_255FAF708(0, (unint64_t *)&qword_26B2AD350, v23, MEMORY[0x263F8D488]);
  sub_255FAE8EC((unint64_t *)&qword_26B2AD358, (unint64_t *)&qword_26B2AD350, v23);
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_255F738A0();
  uint64_t v24 = v36;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v24);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v26 = swift_allocObject();
  char v27 = v37;
  *(unsigned char *)(v26 + 16) = (v37 & 1) == 0;
  sub_255FAF76C((uint64_t)v10, (uint64_t)v13, (uint64_t (*)(void))sub_255F737BC);
  uint64_t v28 = (uint64_t *)&v13[*(int *)(v33 + 36)];
  *uint64_t v28 = KeyPath;
  v28[1] = (uint64_t)sub_255F9E950;
  v28[2] = v26;
  sub_255FAF7D4((uint64_t)v10, (uint64_t (*)(void))sub_255F737BC);
  if (v27) {
    double v29 = 1.0;
  }
  else {
    double v29 = 0.0;
  }
  sub_255FAF76C((uint64_t)v13, (uint64_t)v16, (uint64_t (*)(void))sub_255FAC2E8);
  *(double *)&v16[*(int *)(v34 + 36)] = v29;
  sub_255FAF7D4((uint64_t)v13, (uint64_t (*)(void))sub_255FAC2E8);
  return sub_255FAE520((uint64_t)v16, v38, (uint64_t (*)(void))sub_255FAC288);
}

uint64_t sub_255FAB030()
{
  uint64_t v0 = sub_256175F88();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v4 = 0x90504030201uLL >> (8 * sub_255FA38B4());
  swift_retain();
  sub_255FFDBD0(v4, 1);
  swift_release();
  type metadata accessor for StateOfMindEntryView_iOS();
  sub_25611A6E4((uint64_t)v3);
  sub_256175F78();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_255FAB158@<X0>(char a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v41 = a3;
  uint64_t v34 = a2;
  uint64_t v42 = a4;
  uint64_t v5 = type metadata accessor for StateOfMindEntryView_iOS();
  uint64_t v33 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v33 + 64);
  MEMORY[0x270FA5388](v5 - 8);
  sub_255FAE3D8(0, (unint64_t *)&qword_269F42ED0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
  uint64_t v38 = *(void *)(v7 - 8);
  uint64_t v39 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v33 - v8;
  sub_255F737BC();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v40 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FAC2E8();
  uint64_t v36 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FAC288();
  uint64_t v37 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v35 = (uint64_t)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v17 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_2561755B8();
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  long long v43 = (void *)v18;
  uint64_t v44 = v20;
  sub_255FAF76C(v34, (uint64_t)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for StateOfMindEntryView_iOS);
  unint64_t v21 = (*(unsigned __int8 *)(v33 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v22 = swift_allocObject();
  sub_255FAE520((uint64_t)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v21, (uint64_t (*)(void))type metadata accessor for StateOfMindEntryView_iOS);
  *(unsigned char *)(v22 + v21 + v6) = a1;
  sub_255F5CE90();
  uint64_t v23 = MEMORY[0x263F8D310];
  sub_2561775D8();
  long long v43 = &unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B5958);
  sub_255FAF708(0, (unint64_t *)&qword_26B2AD350, v23, MEMORY[0x263F8D488]);
  sub_255FAE8EC((unint64_t *)&qword_26B2AD358, (unint64_t *)&qword_26B2AD350, v23);
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_255F738A0();
  uint64_t v25 = v39;
  uint64_t v24 = (uint64_t)v40;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v25);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v27 = swift_allocObject();
  char v28 = v41;
  *(unsigned char *)(v27 + 16) = (v41 & 1) == 0;
  sub_255FAF76C(v24, (uint64_t)v14, (uint64_t (*)(void))sub_255F737BC);
  double v29 = (uint64_t *)&v14[*(int *)(v36 + 36)];
  *double v29 = KeyPath;
  v29[1] = (uint64_t)sub_255FAFFF4;
  v29[2] = v27;
  sub_255FAF7D4(v24, (uint64_t (*)(void))sub_255F737BC);
  if (v28) {
    double v30 = 1.0;
  }
  else {
    double v30 = 0.0;
  }
  uint64_t v31 = v35;
  sub_255FAF76C((uint64_t)v14, v35, (uint64_t (*)(void))sub_255FAC2E8);
  *(double *)(v31 + *(int *)(v37 + 36)) = v30;
  sub_255FAF7D4((uint64_t)v14, (uint64_t (*)(void))sub_255FAC2E8);
  return sub_255FAE520(v31, v42, (uint64_t (*)(void))sub_255FAC288);
}

void sub_255FAB734()
{
  if (!qword_269F43798)
  {
    sub_255FABF9C(255, &qword_269F437A0, sub_255FAB80C, (void (*)(void))sub_255FAE300);
    sub_255FAE3D8(255, &qword_269F43968, MEMORY[0x263F8D4F8], MEMORY[0x263F8D510], MEMORY[0x263F1A098]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43798);
    }
  }
}

void sub_255FAB80C(uint64_t a1)
{
}

void sub_255FAB854()
{
  if (!qword_269F437B0)
  {
    sub_255FAF708(255, &qword_269F437B8, (uint64_t)&type metadata for StateOfMindEntryPhaseType, MEMORY[0x263F8D488]);
    sub_255FAB98C();
    sub_255FABA74(255);
    sub_255FAD944(&qword_269F43910, sub_255FABA74, (void (*)(void))sub_255FAD9D0, (void (*)(void))sub_255FADF6C);
    sub_255FAE230();
    swift_getOpaqueTypeConformance2();
    unint64_t v0 = sub_2561761E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F437B0);
    }
  }
}

void sub_255FAB98C()
{
  if (!qword_269F437C0)
  {
    sub_255FABA74(255);
    sub_255FAD944(&qword_269F43910, sub_255FABA74, (void (*)(void))sub_255FAD9D0, (void (*)(void))sub_255FADF6C);
    sub_255FAE230();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F437C0);
    }
  }
}

void sub_255FABA74(uint64_t a1)
{
}

void sub_255FABABC(uint64_t a1)
{
}

void sub_255FABB04(uint64_t a1)
{
}

void sub_255FABB4C()
{
  if (!qword_269F437E0)
  {
    sub_255FABCFC();
    sub_255FABEB8();
    sub_255FABDCC();
    sub_2561778B8();
    sub_255FABE64();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_255FABF9C(255, &qword_269F43808, (void (*)(uint64_t))sub_255FAC028, (void (*)(void))sub_255FAC50C);
    sub_255FAC028();
    sub_255FAC50C();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F437E0);
    }
  }
}

void sub_255FABCFC()
{
  if (!qword_269F437E8)
  {
    sub_255FABDCC();
    sub_2561778B8();
    sub_255FABE64();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F437E8);
    }
  }
}

void sub_255FABDCC()
{
  if (!qword_269F437F0)
  {
    sub_2561778B8();
    sub_255FABE64();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F437F0);
    }
  }
}

unint64_t sub_255FABE64()
{
  unint64_t result = qword_269F437F8;
  if (!qword_269F437F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F437F8);
  }
  return result;
}

void sub_255FABEB8()
{
  if (!qword_269F43800)
  {
    sub_255FABF9C(255, &qword_269F43808, (void (*)(uint64_t))sub_255FAC028, (void (*)(void))sub_255FAC50C);
    sub_255FAC028();
    sub_255FAC50C();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F43800);
    }
  }
}

void sub_255FABF9C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v7) {
      atomic_store(OpaqueTypeMetadata2, a2);
    }
  }
}

void sub_255FAC028()
{
  if (!qword_269F43810)
  {
    sub_255FAC084();
    unint64_t v0 = sub_2561768A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43810);
    }
  }
}

void sub_255FAC084()
{
  if (!qword_269F43818)
  {
    sub_255FAC164();
    sub_255FAC218();
    sub_255FAECE0(&qword_269F43850, (void (*)(uint64_t))sub_255FAC218);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F43818);
    }
  }
}

void sub_255FAC164()
{
  if (!qword_269F43820)
  {
    sub_255FAC218();
    sub_255FAECE0(&qword_269F43850, (void (*)(uint64_t))sub_255FAC218);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F43820);
    }
  }
}

void sub_255FAC218()
{
  if (!qword_269F43828)
  {
    sub_255FAC288();
    sub_255FAC374();
    unint64_t v0 = sub_256175E78();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43828);
    }
  }
}

void sub_255FAC288()
{
  if (!qword_269F43830)
  {
    sub_255FAC2E8();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43830);
    }
  }
}

void sub_255FAC2E8()
{
  if (!qword_269F43838)
  {
    sub_255F737BC();
    sub_255FAF708(255, &qword_269F43110, MEMORY[0x263F8D4F8], MEMORY[0x263F1A4D8]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43838);
    }
  }
}

unint64_t sub_255FAC374()
{
  unint64_t result = qword_269F43840;
  if (!qword_269F43840)
  {
    sub_255FAC288();
    sub_255FAC3EC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43840);
  }
  return result;
}

unint64_t sub_255FAC3EC()
{
  unint64_t result = qword_269F43848;
  if (!qword_269F43848)
  {
    sub_255FAC2E8();
    sub_255FAC464();
    sub_255F84F80();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43848);
  }
  return result;
}

unint64_t sub_255FAC464()
{
  unint64_t result = qword_269F42ED8;
  if (!qword_269F42ED8)
  {
    sub_255F737BC();
    sub_255F738A0();
    sub_255FAECE0(&qword_269F42EA0, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F42ED8);
  }
  return result;
}

unint64_t sub_255FAC50C()
{
  unint64_t result = qword_269F43858;
  if (!qword_269F43858)
  {
    sub_255FAC028();
    sub_255FAC164();
    sub_255FAC218();
    sub_255FAECE0(&qword_269F43850, (void (*)(uint64_t))sub_255FAC218);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43858);
  }
  return result;
}

void sub_255FAC608()
{
  if (!qword_269F43860)
  {
    sub_255FAC7EC();
    sub_255FABEB8();
    sub_255FAC8F0();
    type metadata accessor for ReflectiveIntervalSelectionPhase_iOS();
    sub_2561778B8();
    sub_255FAECE0(&qword_269F43878, (void (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhase_iOS);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_255FABF9C(255, &qword_269F43808, (void (*)(uint64_t))sub_255FAC028, (void (*)(void))sub_255FAC50C);
    sub_255FAC028();
    sub_255FAC50C();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F43860);
    }
  }
}

void sub_255FAC7EC()
{
  if (!qword_269F43868)
  {
    sub_255FAC8F0();
    type metadata accessor for ReflectiveIntervalSelectionPhase_iOS();
    sub_2561778B8();
    sub_255FAECE0(&qword_269F43878, (void (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhase_iOS);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F43868);
    }
  }
}

void sub_255FAC8F0()
{
  if (!qword_269F43870)
  {
    type metadata accessor for ReflectiveIntervalSelectionPhase_iOS();
    sub_2561778B8();
    sub_255FAECE0(&qword_269F43878, (void (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhase_iOS);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F43870);
    }
  }
}

void sub_255FAC9C4(uint64_t a1)
{
}

void sub_255FACA0C()
{
  if (!qword_269F43888)
  {
    sub_255FACBF0();
    sub_255FABEB8();
    sub_255FACCF4();
    type metadata accessor for ValenceSelectionPhase_iOS();
    sub_2561778B8();
    sub_255FAECE0(&qword_269F438A0, (void (*)(uint64_t))type metadata accessor for ValenceSelectionPhase_iOS);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_255FABF9C(255, &qword_269F43808, (void (*)(uint64_t))sub_255FAC028, (void (*)(void))sub_255FAC50C);
    sub_255FAC028();
    sub_255FAC50C();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F43888);
    }
  }
}

void sub_255FACBF0()
{
  if (!qword_269F43890)
  {
    sub_255FACCF4();
    type metadata accessor for ValenceSelectionPhase_iOS();
    sub_2561778B8();
    sub_255FAECE0(&qword_269F438A0, (void (*)(uint64_t))type metadata accessor for ValenceSelectionPhase_iOS);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F43890);
    }
  }
}

void sub_255FACCF4()
{
  if (!qword_269F43898)
  {
    type metadata accessor for ValenceSelectionPhase_iOS();
    sub_2561778B8();
    sub_255FAECE0(&qword_269F438A0, (void (*)(uint64_t))type metadata accessor for ValenceSelectionPhase_iOS);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F43898);
    }
  }
}

void sub_255FACDC8()
{
  if (!qword_269F438A8)
  {
    sub_255FACFAC();
    sub_255FABEB8();
    sub_255FAD0B0();
    type metadata accessor for LabelsSelectionPhase_iOS();
    sub_2561778B8();
    sub_255FAECE0(&qword_269F438C0, (void (*)(uint64_t))type metadata accessor for LabelsSelectionPhase_iOS);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_255FABF9C(255, &qword_269F43808, (void (*)(uint64_t))sub_255FAC028, (void (*)(void))sub_255FAC50C);
    sub_255FAC028();
    sub_255FAC50C();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F438A8);
    }
  }
}

void sub_255FACFAC()
{
  if (!qword_269F438B0)
  {
    sub_255FAD0B0();
    type metadata accessor for LabelsSelectionPhase_iOS();
    sub_2561778B8();
    sub_255FAECE0(&qword_269F438C0, (void (*)(uint64_t))type metadata accessor for LabelsSelectionPhase_iOS);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F438B0);
    }
  }
}

void sub_255FAD0B0()
{
  if (!qword_269F438B8)
  {
    type metadata accessor for LabelsSelectionPhase_iOS();
    sub_2561778B8();
    sub_255FAECE0(&qword_269F438C0, (void (*)(uint64_t))type metadata accessor for LabelsSelectionPhase_iOS);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F438B8);
    }
  }
}

void sub_255FAD184(uint64_t a1)
{
}

void sub_255FAD1CC()
{
  if (!qword_269F438D0)
  {
    sub_255FAD3B0();
    sub_255FABEB8();
    sub_255FAD4B4();
    type metadata accessor for DomainsSelectionPhase_iOS();
    sub_2561778B8();
    sub_255FAECE0(&qword_269F438E8, (void (*)(uint64_t))type metadata accessor for DomainsSelectionPhase_iOS);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_255FABF9C(255, &qword_269F43808, (void (*)(uint64_t))sub_255FAC028, (void (*)(void))sub_255FAC50C);
    sub_255FAC028();
    sub_255FAC50C();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F438D0);
    }
  }
}

void sub_255FAD3B0()
{
  if (!qword_269F438D8)
  {
    sub_255FAD4B4();
    type metadata accessor for DomainsSelectionPhase_iOS();
    sub_2561778B8();
    sub_255FAECE0(&qword_269F438E8, (void (*)(uint64_t))type metadata accessor for DomainsSelectionPhase_iOS);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F438D8);
    }
  }
}

void sub_255FAD4B4()
{
  if (!qword_269F438E0)
  {
    type metadata accessor for DomainsSelectionPhase_iOS();
    sub_2561778B8();
    sub_255FAECE0(&qword_269F438E8, (void (*)(uint64_t))type metadata accessor for DomainsSelectionPhase_iOS);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F438E0);
    }
  }
}

void sub_255FAD588()
{
  if (!qword_269F438F0)
  {
    sub_255FAD76C();
    sub_255FABEB8();
    sub_255FAD870();
    type metadata accessor for NotificationsSetupPhase_iOS();
    sub_2561778B8();
    sub_255FAECE0(&qword_269F43908, (void (*)(uint64_t))type metadata accessor for NotificationsSetupPhase_iOS);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_255FABF9C(255, &qword_269F43808, (void (*)(uint64_t))sub_255FAC028, (void (*)(void))sub_255FAC50C);
    sub_255FAC028();
    sub_255FAC50C();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F438F0);
    }
  }
}

void sub_255FAD76C()
{
  if (!qword_269F438F8)
  {
    sub_255FAD870();
    type metadata accessor for NotificationsSetupPhase_iOS();
    sub_2561778B8();
    sub_255FAECE0(&qword_269F43908, (void (*)(uint64_t))type metadata accessor for NotificationsSetupPhase_iOS);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F438F8);
    }
  }
}

void sub_255FAD870()
{
  if (!qword_269F43900)
  {
    type metadata accessor for NotificationsSetupPhase_iOS();
    sub_2561778B8();
    sub_255FAECE0(&qword_269F43908, (void (*)(uint64_t))type metadata accessor for NotificationsSetupPhase_iOS);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F43900);
    }
  }
}

uint64_t sub_255FAD944(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255FAD9D0()
{
  return sub_255FAD944(&qword_269F43918, sub_255FABABC, (void (*)(void))sub_255FADA18, (void (*)(void))sub_255FADCA8);
}

unint64_t sub_255FADA18()
{
  unint64_t result = qword_269F43920;
  if (!qword_269F43920)
  {
    sub_255FABB04(255);
    sub_255FABCFC();
    sub_255FABEB8();
    sub_255FABDCC();
    sub_2561778B8();
    sub_255FABE64();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_255FABF9C(255, &qword_269F43808, (void (*)(uint64_t))sub_255FAC028, (void (*)(void))sub_255FAC50C);
    sub_255FAC028();
    sub_255FAC50C();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_255FAC7EC();
    sub_255FAC8F0();
    type metadata accessor for ReflectiveIntervalSelectionPhase_iOS();
    sub_255FAECE0(&qword_269F43878, (void (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhase_iOS);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43920);
  }
  return result;
}

unint64_t sub_255FADCA8()
{
  unint64_t result = qword_269F43928;
  if (!qword_269F43928)
  {
    sub_255FAC9C4(255);
    sub_255FACBF0();
    sub_255FABEB8();
    sub_255FACCF4();
    type metadata accessor for ValenceSelectionPhase_iOS();
    sub_2561778B8();
    sub_255FAECE0(&qword_269F438A0, (void (*)(uint64_t))type metadata accessor for ValenceSelectionPhase_iOS);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_255FABF9C(255, &qword_269F43808, (void (*)(uint64_t))sub_255FAC028, (void (*)(void))sub_255FAC50C);
    sub_255FAC028();
    sub_255FAC50C();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_255FACFAC();
    sub_255FAD0B0();
    type metadata accessor for LabelsSelectionPhase_iOS();
    sub_255FAECE0(&qword_269F438C0, (void (*)(uint64_t))type metadata accessor for LabelsSelectionPhase_iOS);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43928);
  }
  return result;
}

unint64_t sub_255FADF6C()
{
  unint64_t result = qword_269F43930;
  if (!qword_269F43930)
  {
    sub_255FAD184(255);
    sub_255FAD3B0();
    sub_255FABEB8();
    sub_255FAD4B4();
    type metadata accessor for DomainsSelectionPhase_iOS();
    sub_2561778B8();
    sub_255FAECE0(&qword_269F438E8, (void (*)(uint64_t))type metadata accessor for DomainsSelectionPhase_iOS);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_255FABF9C(255, &qword_269F43808, (void (*)(uint64_t))sub_255FAC028, (void (*)(void))sub_255FAC50C);
    sub_255FAC028();
    sub_255FAC50C();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_255FAD76C();
    sub_255FAD870();
    type metadata accessor for NotificationsSetupPhase_iOS();
    sub_255FAECE0(&qword_269F43908, (void (*)(uint64_t))type metadata accessor for NotificationsSetupPhase_iOS);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43930);
  }
  return result;
}

unint64_t sub_255FAE230()
{
  unint64_t result = qword_269F43938;
  if (!qword_269F43938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43938);
  }
  return result;
}

void sub_255FAE284()
{
  if (!qword_269F43940)
  {
    sub_255FAF708(255, &qword_269F43948, MEMORY[0x263F188A8], MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_256176D28();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43940);
    }
  }
}

unint64_t sub_255FAE300()
{
  unint64_t result = qword_269F43950;
  if (!qword_269F43950)
  {
    sub_255FAB80C(255);
    sub_255FAECE0(&qword_269F43958, (void (*)(uint64_t))sub_255FAB854);
    sub_255FAECE0((unint64_t *)&qword_269F43960, (void (*)(uint64_t))sub_255FAE284);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43950);
  }
  return result;
}

void sub_255FAE3D8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_255FAE42C@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for StateOfMindEntryView_iOS() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_255FA7B44(a1, v6, a2);
}

uint64_t sub_255FAE4B0()
{
  type metadata accessor for StateOfMindEntryView_iOS();

  return sub_255FA7EFC();
}

uint64_t sub_255FAE520(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_255FAE588()
{
  return sub_255FAFDDC(&qword_269F43978, (void (*)(uint64_t))sub_255FAB734, (void (*)(void))sub_255FAE5D0);
}

unint64_t sub_255FAE5D0()
{
  unint64_t result = qword_269F43980;
  if (!qword_269F43980)
  {
    sub_255FAE3D8(255, &qword_269F43968, MEMORY[0x263F8D4F8], MEMORY[0x263F8D510], MEMORY[0x263F1A098]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43980);
  }
  return result;
}

uint64_t sub_255FAE654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_255FAE81C(a1, a2, a3, (void (*)(void))type metadata accessor for AssociationSelectionPhaseSpecs);
}

uint64_t sub_255FAE66C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_255FAE81C(a1, a2, a3, (void (*)(void))type metadata accessor for NotificationsSetupPhaseSpecs);
}

uint64_t sub_255FAE684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_255FAE81C(a1, a2, a3, (void (*)(void))type metadata accessor for ValenceSelectionPhaseSpecs);
}

uint64_t sub_255FAE69C(uint64_t a1)
{
  sub_255FABF9C(0, &qword_269F43808, (void (*)(uint64_t))sub_255FAC028, (void (*)(void))sub_255FAC50C);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v12 - v5;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)v12 - v5, a1, v3);
  sub_255FAC028();
  uint64_t v8 = v7;
  unint64_t v9 = sub_255FAC50C();
  v12[0] = v8;
  v12[1] = v9;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  MEMORY[0x25A29F470](v6, v3, OpaqueTypeConformance2);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_255FAE804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_255FAE81C(a1, a2, a3, (void (*)(void))type metadata accessor for IntroPhaseSpecs);
}

uint64_t sub_255FAE81C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return sub_2561763E8();
}

void sub_255FAE868()
{
  if (!qword_269F43988)
  {
    sub_255FAF708(255, &qword_269F437B8, (uint64_t)&type metadata for StateOfMindEntryPhaseType, MEMORY[0x263F8D488]);
    unint64_t v0 = sub_2561775A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43988);
    }
  }
}

uint64_t sub_255FAE8E4()
{
  return sub_255FA3D90(*(void *)(v0 + 16));
}

uint64_t sub_255FAE8EC(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_255FAF708(255, a2, a3, MEMORY[0x263F8D488]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255FAE944@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_256176508();
  *a1 = result;
  return result;
}

uint64_t sub_255FAE970@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_256176508();
  *a1 = result;
  return result;
}

uint64_t sub_255FAE99C()
{
  return sub_256176518();
}

uint64_t sub_255FAE9C8()
{
  return sub_256176518();
}

uint64_t sub_255FAEA08@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_255FA3FC0(*a1, a2);
}

void sub_255FAEA7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4(255);
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_255FAEB04()
{
  return sub_255FAF694((uint64_t (*)(uint64_t))sub_255FA9970);
}

uint64_t sub_255FAEB1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return keypath_get_30Tm(a1, a2, a3, (void (*)(void))type metadata accessor for NotificationsSetupPhaseSpecs);
}

uint64_t sub_255FAEB40()
{
  return sub_255FAEBA8(4u);
}

uint64_t sub_255FAEB48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return keypath_get_30Tm(a1, a2, a3, (void (*)(void))type metadata accessor for AssociationSelectionPhaseSpecs);
}

uint64_t sub_255FAEB64()
{
  return sub_255FAEBA8(3u);
}

uint64_t sub_255FAEB70()
{
  return sub_255FAEBA8(2u);
}

uint64_t sub_255FAEB78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return keypath_get_30Tm(a1, a2, a3, (void (*)(void))type metadata accessor for ValenceSelectionPhaseSpecs);
}

uint64_t sub_255FAEB94()
{
  return sub_255FAEBA8(1u);
}

uint64_t sub_255FAEBA0()
{
  return sub_255FAEBA8(0);
}

uint64_t sub_255FAEBA8(unsigned __int8 a1)
{
  return sub_255FA8470(a1);
}

uint64_t sub_255FAEC0C()
{
  return sub_255FAE69C(*(void *)(v0 + 16));
}

unint64_t sub_255FAEC28()
{
  unint64_t result = qword_26B2AD368;
  if (!qword_26B2AD368)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B2AD368);
  }
  return result;
}

void sub_255FAEC6C()
{
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_255FAECE0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_255FAED28()
{
  unint64_t result = qword_269F44D20;
  if (!qword_269F44D20)
  {
    sub_255FA18A8(255, &qword_269F439E0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44D20);
  }
  return result;
}

uint64_t sub_255FAEDC8()
{
  uint64_t v1 = (int *)type metadata accessor for StateOfMindEntryView_iOS();
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_unknownObjectRelease();
  uint64_t v3 = v0 + v2;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  unint64_t v4 = v0 + v2 + v1[11];
  sub_255FA18A8(0, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_256175F88();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = v3 + v1[12];
  sub_255FA18A8(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = v3 + v1[13];
  sub_255FA18A8(0, &qword_269F42B40, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_256176AA8();
    uint64_t v10 = *(void *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
    uint64_t v11 = v8 + *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
    uint64_t v12 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_255FAF118(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for StateOfMindEntryView_iOS() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_255FAF204;
  return sub_255FAA27C(a1, v5, v6, v7);
}

uint64_t sub_255FAF204()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_255FAF2FC()
{
  return sub_255FAF694((uint64_t (*)(uint64_t))sub_255FAA9B4);
}

uint64_t sub_255FAF314@<X0>(uint64_t a1@<X8>)
{
  return sub_255FAB158(*(unsigned char *)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), a1);
}

uint64_t sub_255FAF324@<X0>(uint64_t a1@<X8>)
{
  return sub_255FAAA98(*(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), a1);
}

uint64_t objectdestroyTm_3()
{
  uint64_t v1 = (int *)type metadata accessor for StateOfMindEntryView_iOS();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v3 = v2 + v1[11];
  sub_255FA18A8(0, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256175F88();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = v2 + v1[12];
  sub_255FA18A8(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v2 + v1[13];
  sub_255FA18A8(0, &qword_269F42B40, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_256176AA8();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
    uint64_t v10 = v7 + *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
    uint64_t v11 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_255FAF67C()
{
  return sub_255FAF694((uint64_t (*)(uint64_t))sub_255FAB030);
}

uint64_t sub_255FAF694(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for StateOfMindEntryView_iOS() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

void sub_255FAF708(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_255FAF75C()
{
  return swift_deallocObject();
}

uint64_t sub_255FAF76C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_255FAF7D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_255FAF834()
{
  uint64_t v1 = (int *)type metadata accessor for StateOfMindEntryView_iOS();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v3 = v2 + v1[11];
  sub_255FA18A8(0, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256175F88();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = v2 + v1[12];
  sub_255FA18A8(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v2 + v1[13];
  sub_255FA18A8(0, &qword_269F42B40, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_256176AA8();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
    uint64_t v10 = v7 + *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
    uint64_t v11 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_255FAFB80()
{
  uint64_t v1 = *(void *)(type metadata accessor for StateOfMindEntryView_iOS() - 8);
  return sub_255FA8470(*(unsigned char *)(v0
                                + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
                                + *(void *)(v1 + 64)));
}

uint64_t sub_255FAFC04()
{
  return swift_deallocObject();
}

uint64_t sub_255FAFC18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return keypath_get_30Tm(a1, a2, a3, (void (*)(void))type metadata accessor for IntroPhaseSpecs);
}

uint64_t keypath_get_30Tm(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return sub_2561763E8();
}

unsigned char *storeEnumTagSinglePayload for StateOfMindEntryPhaseType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x255FAFD48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindEntryPhaseType()
{
  return &type metadata for StateOfMindEntryPhaseType;
}

uint64_t sub_255FAFD80()
{
  return sub_255FAFDDC(&qword_269F439F8, sub_255FAFE8C, (void (*)(void))sub_255FAE588);
}

uint64_t sub_255FAFDDC(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    sub_255FAB80C(255);
    sub_255FAE300();
    swift_getOpaqueTypeConformance2();
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_255FAFE8C(uint64_t a1)
{
}

void sub_255FAFEAC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_255FABF9C(255, &qword_269F437A0, sub_255FAB80C, (void (*)(void))sub_255FAE300);
    uint64_t v7 = v6;
    sub_255FAB734();
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_255FAFF60()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_255FAFF80()
{
  unint64_t result = qword_269F43A08;
  if (!qword_269F43A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43A08);
  }
  return result;
}

unint64_t sub_255FAFFD4(unint64_t result)
{
  if (result >= 6) {
    return 6;
  }
  return result;
}

uint64_t sub_255FAFFE4()
{
  return MEMORY[0x263F8D6D8];
}

uint64_t NotificationSettingsModel.areNotificationsDisabled.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_255FB0074@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_255FB00F8(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return sub_256175C98();
}

uint64_t NotificationSettingsModel.areNotificationsDisabled.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v1 = v0;
  return sub_256175C98();
}

void (*NotificationSettingsModel.areNotificationsDisabled.modify(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_256175C78();
  return sub_255FB0264;
}

void sub_255FB0264(void *a1)
{
  id v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();

  free(v1);
}

uint64_t NotificationSettingsModel.$areNotificationsDisabled.getter()
{
  return swift_endAccess();
}

uint64_t sub_255FB0350()
{
  return swift_endAccess();
}

uint64_t sub_255FB03D8(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x263F8D4F8];
  sub_255FB5A58(0, &qword_269F43A10, MEMORY[0x263F8D4F8], MEMORY[0x263EFDE48]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v13 - v9;
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)&v13 - v9, a1, v4);
  v11(v8, (uint64_t)v10, v4);
  swift_beginAccess();
  sub_255FB5A58(0, &qword_26B2AD268, v2, MEMORY[0x263EFDE58]);
  sub_256175C68();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
}

uint64_t NotificationSettingsModel.$areNotificationsDisabled.setter(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x263F8D4F8];
  sub_255FB5A58(0, &qword_269F43A10, MEMORY[0x263F8D4F8], MEMORY[0x263EFDE48]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v8 - v6, a1, v4);
  swift_beginAccess();
  sub_255FB5A58(0, &qword_26B2AD268, v2, MEMORY[0x263EFDE58]);
  sub_256175C68();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
}

void (*NotificationSettingsModel.$areNotificationsDisabled.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = MEMORY[0x263F8D4F8];
  sub_255FB5A58(0, &qword_269F43A10, MEMORY[0x263F8D4F8], MEMORY[0x263EFDE48]);
  v3[10] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[11] = v6;
  size_t v7 = *(void *)(v6 + 64);
  v3[12] = malloc(v7);
  v3[13] = malloc(v7);
  uint64_t v8 = malloc(v7);
  uint64_t v9 = OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel__areNotificationsDisabled;
  v3[14] = v8;
  v3[15] = v9;
  swift_beginAccess();
  sub_255FB5A58(0, &qword_26B2AD268, v4, MEMORY[0x263EFDE58]);
  v3[16] = v10;
  sub_256175C58();
  swift_endAccess();
  return sub_255FB0858;
}

void sub_255FB0858(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void (**)(void, void, void))(*(void *)(*(void *)a1 + 88) + 16);
  v4(*(void *)(*(void *)a1 + 104), v3[14], v3[10]);
  uint64_t v5 = (void *)v3[14];
  uint64_t v6 = (void *)v3[12];
  size_t v7 = (void *)v3[13];
  uint64_t v8 = v3[10];
  uint64_t v9 = v3[11];
  if (a2)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    sub_256175C68();
    swift_endAccess();
    uint64_t v10 = *(void (**)(void *, uint64_t))(v9 + 8);
    v10(v7, v8);
    v10(v5, v8);
  }
  else
  {
    swift_beginAccess();
    sub_256175C68();
    swift_endAccess();
    (*(void (**)(void *, uint64_t))(v9 + 8))(v5, v8);
  }
  free(v5);
  free(v7);
  free(v6);

  free(v3);
}

id NotificationSettingsModel.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

char *NotificationSettingsModel.init()()
{
  ObjectType = (objc_class *)swift_getObjectType();
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F55050]), sel_init);
  sub_256177EE8();
  id v2 = objc_allocWithZone(MEMORY[0x263F1DFB0]);
  uint64_t v3 = (void *)sub_256177EA8();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_initWithBundleIdentifier_, v3);

  id v5 = objc_allocWithZone(ObjectType);
  uint64_t v6 = NotificationSettingsModel.init(settingsManager:userNotificationCenter:)(v1, v4);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v6;
}

char *NotificationSettingsModel.__allocating_init(settingsManager:userNotificationCenter:)(void *a1, void *a2)
{
  id v5 = objc_allocWithZone(v2);
  return NotificationSettingsModel.init(settingsManager:userNotificationCenter:)(a1, a2);
}

char *NotificationSettingsModel.init(settingsManager:userNotificationCenter:)(void *a1, void *a2)
{
  uint64_t v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  sub_255FB5A58(0, &qword_26B2AD268, MEMORY[0x263F8D4F8], MEMORY[0x263EFDE58]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v26 - v10;
  uint64_t v12 = &v3[OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel__areNotificationsDisabled];
  BOOL v28 = 0;
  uint64_t v13 = v3;
  sub_256175C48();
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v11, v8);
  *(void *)&v13[OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager] = a1;
  *(void *)&v13[OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_userNotificationCenter] = a2;
  id v14 = a1;
  id v15 = a2;

  v27.receiver = v13;
  v27.super_class = ObjectType;
  uint64_t v16 = (char *)objc_msgSendSuper2(&v27, sel_init);
  id v17 = *(void **)&v16[OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_userNotificationCenter];
  uint64_t v18 = v16;
  id v19 = objc_msgSend(v17, sel_notificationSettings);
  id v20 = objc_msgSend(v19, sel_authorizationStatus);

  swift_getKeyPath();
  swift_getKeyPath();
  BOOL v28 = v20 != (id)2;
  unint64_t v21 = v18;
  sub_256175C98();
  id v22 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v22, sel_addObserver_selector_name_object_, v21, sel_updateNotificationAuthorizationStatus, *MEMORY[0x263F833B8], 0);

  sub_255FB58F8(0, (unint64_t *)&qword_26B2AD368);
  uint64_t v23 = v21;
  uint64_t v24 = (void *)sub_2561782D8();
  objc_msgSend(v14, sel_addObserver_queue_, v23, v24);

  return v23;
}

Swift::Void __swiftcall NotificationSettingsModel.updateNotificationAuthorizationStatus()()
{
  id v1 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_userNotificationCenter], sel_notificationSettings);
  objc_msgSend(v1, sel_authorizationStatus);

  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v0;
  sub_256175C98();
}

id NotificationSettingsModel.__deallocating_deinit()
{
  ObjectType = (objc_class *)swift_getObjectType();
  id v2 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v2, sel_removeObserver_, v0);

  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t NotificationSettingsModel.middayNotificationsEnabled.getter()
{
  return sub_255FB2278((SEL *)&selRef_middayNotificationsEnabled);
}

id sub_255FB1264@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_255FB2324(a1, (SEL *)&selRef_middayNotificationsEnabled, a2);
}

id sub_255FB1270(unsigned __int8 *a1, void *a2)
{
  return objc_msgSend(*(id *)(*a2 + OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager), sel_setMiddayNotificationsEnabled_, *a1);
}

id NotificationSettingsModel.middayNotificationsEnabled.setter(char a1)
{
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager), sel_setMiddayNotificationsEnabled_, a1 & 1);
}

id (*NotificationSettingsModel.middayNotificationsEnabled.modify(uint64_t a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager);
  *(void *)a1 = v3;
  if (objc_msgSend(v3, sel_middayNotificationsEnabled))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_256175C88();
    swift_release();
    swift_release();
    char v4 = *(unsigned char *)(a1 + 9) ^ 1;
  }
  else
  {
    char v4 = 0;
  }
  *(unsigned char *)(a1 + 8) = v4 & 1;
  return sub_255FB1384;
}

id sub_255FB1384(uint64_t a1, uint64_t a2)
{
  return sub_255FB24EC(a1, a2, (SEL *)&selRef_setMiddayNotificationsEnabled_);
}

uint64_t NotificationSettingsModel.endOfDayNotificationsEnabled.getter()
{
  return sub_255FB2278((SEL *)&selRef_endOfDayNotificationsEnabled);
}

id sub_255FB139C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_255FB2324(a1, (SEL *)&selRef_endOfDayNotificationsEnabled, a2);
}

id sub_255FB13A8(unsigned __int8 *a1, void *a2)
{
  return objc_msgSend(*(id *)(*a2 + OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager), sel_setEndOfDayNotificationsEnabled_, *a1);
}

id NotificationSettingsModel.endOfDayNotificationsEnabled.setter(char a1)
{
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager), sel_setEndOfDayNotificationsEnabled_, a1 & 1);
}

id (*NotificationSettingsModel.endOfDayNotificationsEnabled.modify(uint64_t a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager);
  *(void *)a1 = v3;
  if (objc_msgSend(v3, sel_endOfDayNotificationsEnabled))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_256175C88();
    swift_release();
    swift_release();
    char v4 = *(unsigned char *)(a1 + 9) ^ 1;
  }
  else
  {
    char v4 = 0;
  }
  *(unsigned char *)(a1 + 8) = v4 & 1;
  return sub_255FB14BC;
}

id sub_255FB14BC(uint64_t a1, uint64_t a2)
{
  return sub_255FB24EC(a1, a2, (SEL *)&selRef_setEndOfDayNotificationsEnabled_);
}

uint64_t NotificationSettingsModel.customReminderSchedule.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager), sel_customReminderSchedule);
  sub_255FB58F8(0, (unint64_t *)&qword_26B2AD270);
  uint64_t v2 = sub_256178008();

  if (v2 < 0 || (v2 & 0x4000000000000000) != 0)
  {
    unint64_t v5 = swift_bridgeObjectRetain();
    uint64_t v3 = (uint64_t)sub_255FB355C(v5, (void (*)(void *, uint64_t, unint64_t))sub_255FB4DE0);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  uint64_t v6 = v3;
  sub_255FB3040(&v6);
  swift_bridgeObjectRelease();
  return v6;
}

void sub_255FB15B4(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(*a2 + OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager);
  sub_255FB58F8(0, (unint64_t *)&qword_26B2AD270);
  swift_bridgeObjectRetain();
  id v3 = (id)sub_256177FF8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setCustomReminderSchedule_, v3);
}

void NotificationSettingsModel.customReminderSchedule.setter()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager);
  sub_255FB58F8(0, (unint64_t *)&qword_26B2AD270);
  id v2 = (id)sub_256177FF8();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setCustomReminderSchedule_, v2);
}

uint64_t sub_255FB16E0(id *a1, void **a2)
{
  uint64_t v4 = sub_256175568();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v34 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v33 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v33 - v12;
  MEMORY[0x270FA5388](v11);
  id v15 = (char *)&v33 - v14;
  id v16 = *a1;
  id v17 = *a2;
  id v18 = objc_msgSend(*a1, sel_dateComponents);
  sub_2561754F8();

  uint64_t v33 = sub_256175508();
  char v20 = v19;
  unint64_t v21 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  uint64_t result = v21(v15, v4);
  if (v20)
  {
    __break(1u);
    goto LABEL_10;
  }
  id v23 = objc_msgSend(v16, sel_dateComponents);
  sub_2561754F8();

  uint64_t v24 = sub_256175528();
  LOBYTE(v23) = v25;
  uint64_t result = v21(v13, v4);
  if (v23)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  id v26 = objc_msgSend(v17, sel_dateComponents);
  sub_2561754F8();

  uint64_t v27 = sub_256175508();
  LOBYTE(v26) = v28;
  uint64_t result = v21(v10, v4);
  if (v26)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  id v29 = objc_msgSend(v17, sel_dateComponents);
  double v30 = v34;
  sub_2561754F8();

  uint64_t v31 = sub_256175528();
  LOBYTE(v29) = v32;
  uint64_t result = v21(v30, v4);
  if (v29)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  if (v33 == v27) {
    return v24 < v31;
  }
  else {
    return v33 < v27;
  }
}

void (*NotificationSettingsModel.customReminderSchedule.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  a1[1] = v1;
  *a1 = NotificationSettingsModel.customReminderSchedule.getter();
  return sub_255FB19C8;
}

void sub_255FB19C8(uint64_t a1, char a2)
{
  id v3 = *(void **)(*(void *)(a1 + 8) + OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager);
  sub_255FB58F8(0, (unint64_t *)&qword_26B2AD270);
  if (a2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = (void *)sub_256177FF8();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setCustomReminderSchedule_, v4);

    swift_bridgeObjectRelease();
  }
  else
  {
    id v5 = (id)sub_256177FF8();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setCustomReminderSchedule_, v5);
  }
}

void sub_255FB1AD0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_256175B68();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unint64_t v10 = NotificationSettingsModel.customReminderSchedule.getter();
  uint64_t v22 = a1;
  uint64_t v11 = sub_2560A1844(sub_255FB5A38, (uint64_t)v21, v10);
  swift_bridgeObjectRelease();
  if (v11)
  {
    sub_256175B48();
    uint64_t v12 = sub_256175B58();
    os_log_type_t v13 = sub_256178238();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_255F58000, v12, v13, "Attempting to add a reminder time that already exists in the schedule.", v14, 2u);
      MEMORY[0x25A2A1E90](v14, -1, -1);
    }

    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    id v15 = objc_allocWithZone(MEMORY[0x263F55048]);
    id v16 = (void *)sub_2561754D8();
    id v17 = objc_msgSend(v15, sel_initWithDateComponents_isEnabled_, v16, a2 & 1);

    id v18 = v17;
    uint64_t v23 = NotificationSettingsModel.customReminderSchedule.getter();
    MEMORY[0x25A2A0A70]();
    if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_256178038();
    }
    sub_256178058();
    sub_256178018();
    char v19 = *(void **)(v3 + OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager);
    sub_255FB58F8(0, (unint64_t *)&qword_26B2AD270);
    char v20 = (void *)sub_256177FF8();
    swift_bridgeObjectRelease();
    objc_msgSend(v19, sel_setCustomReminderSchedule_, v20);
  }
}

void sub_255FB1D58(uint64_t a1)
{
  uint64_t v3 = sub_256175B68();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unint64_t v7 = NotificationSettingsModel.customReminderSchedule.getter();
  uint64_t v17 = a1;
  unint64_t v8 = sub_255FB206C(sub_255FB5AA4, (uint64_t)v16, v7);
  char v10 = v9;
  swift_bridgeObjectRelease();
  if (v10)
  {
    sub_256175B48();
    os_log_type_t v13 = sub_256175B58();
    os_log_type_t v14 = sub_256178218();
    if (os_log_type_enabled(v13, v14))
    {
      id v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v15 = 0;
      _os_log_impl(&dword_255F58000, v13, v14, "trying to remove a component not found in the array", v15, 2u);
      MEMORY[0x25A2A1E90](v15, -1, -1);
    }

    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    uint64_t v18 = NotificationSettingsModel.customReminderSchedule.getter();

    uint64_t v11 = *(void **)(v1 + OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager);
    sub_255FB58F8(0, (unint64_t *)&qword_26B2AD270);
    uint64_t v12 = (void *)sub_256177FF8();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_setCustomReminderSchedule_, v12);
  }
}

uint64_t sub_255FB1F60(id *a1, uint64_t a2)
{
  uint64_t v4 = sub_256175568();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(*a1, sel_dateComponents);
  sub_2561754F8();

  LOBYTE(a2) = MEMORY[0x25A29DF70](v7, a2);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return a2 & 1;
}

uint64_t sub_255FB206C(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_14;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v7 = 0;
  if (v6)
  {
    while (1)
    {
      id v8 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x25A2A1000](v7, a3) : *(id *)(a3 + 8 * v7 + 32);
      char v9 = v8;
      id v13 = v8;
      char v10 = a1(&v13);

      if (v3 || (v10 & 1) != 0) {
        break;
      }
      uint64_t v11 = v7 + 1;
      if (__OFADD__(v7, 1))
      {
        __break(1u);
LABEL_14:
        swift_bridgeObjectRetain();
        uint64_t v6 = sub_256178678();
        swift_bridgeObjectRelease();
        uint64_t v7 = 0;
        if (!v6) {
          return v7;
        }
      }
      else
      {
        ++v7;
        if (v11 == v6) {
          return 0;
        }
      }
    }
  }
  return v7;
}

uint64_t sub_255FB2188(unint64_t a1)
{
  unint64_t v3 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0)
  {
    sub_255FB4D64(v3);
    unint64_t v3 = v5;
    *uint64_t v1 = v5;
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  unint64_t v7 = *(void *)(v6 + 16);
  if (v7 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v8 = v7 - 1;
    uint64_t v9 = v7 - 1 - a1;
    if (v9 >= 0)
    {
      uint64_t v10 = v6 + 8 * a1;
      uint64_t v11 = *(void *)(v10 + 32);
      memmove((void *)(v10 + 32), (const void *)(v10 + 40), 8 * v9);
      *(void *)(v6 + 16) = v8;
      sub_256178018();
      return v11;
    }
  }
  uint64_t result = sub_2561786C8();
  __break(1u);
  return result;
}

uint64_t NotificationSettingsModel.periodicPromptedAssessmentNotificationsEnabled.getter()
{
  return sub_255FB2278((SEL *)&selRef_periodicPromptedAssessmentNotificationsEnabled);
}

uint64_t sub_255FB2278(SEL *a1)
{
  if ([*(id *)(v1 + OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager) *a1])
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_256175C88();
    swift_release();
    swift_release();
    char v2 = v4 ^ 1;
  }
  else
  {
    char v2 = 0;
  }
  return v2 & 1;
}

id sub_255FB2318@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_255FB2324(a1, (SEL *)&selRef_periodicPromptedAssessmentNotificationsEnabled, a2);
}

id sub_255FB2324@<X0>(void *a1@<X0>, SEL *a2@<X3>, unsigned char *a3@<X8>)
{
  id result = [*(id *)(*a1 + OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager) *a2];
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_256175C88();
    swift_release();
    id result = (id)swift_release();
    char v5 = v6 ^ 1;
  }
  else
  {
    char v5 = 0;
  }
  *a3 = v5 & 1;
  return result;
}

id sub_255FB23CC(unsigned __int8 *a1, void *a2)
{
  return objc_msgSend(*(id *)(*a2 + OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager), sel_setPeriodicPromptedAssessmentNotificationsEnabled_, *a1);
}

id NotificationSettingsModel.periodicPromptedAssessmentNotificationsEnabled.setter(char a1)
{
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager), sel_setPeriodicPromptedAssessmentNotificationsEnabled_, a1 & 1);
}

id (*NotificationSettingsModel.periodicPromptedAssessmentNotificationsEnabled.modify(uint64_t a1))(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager);
  *(void *)a1 = v3;
  if (objc_msgSend(v3, sel_periodicPromptedAssessmentNotificationsEnabled))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_256175C88();
    swift_release();
    swift_release();
    char v4 = *(unsigned char *)(a1 + 9) ^ 1;
  }
  else
  {
    char v4 = 0;
  }
  *(unsigned char *)(a1 + 8) = v4 & 1;
  return sub_255FB24E0;
}

id sub_255FB24E0(uint64_t a1, uint64_t a2)
{
  return sub_255FB24EC(a1, a2, (SEL *)&selRef_setPeriodicPromptedAssessmentNotificationsEnabled_);
}

id sub_255FB24EC(uint64_t a1, uint64_t a2, SEL *a3)
{
  return objc_msgSend(*(id *)a1, *a3, *(unsigned __int8 *)(a1 + 8));
}

uint64_t NotificationSettingsModel.settingsManagerDidUpdateNotificationSettings(_:)()
{
  swift_getObjectType();
  sub_255FB30BC();
  sub_256175C08();
  sub_256175C28();

  return swift_release();
}

Swift::Bool __swiftcall NotificationSettingsModel.shouldShowMindfulnessSettingsButton()()
{
  v28[1] = *(id *)MEMORY[0x263EF8340];
  swift_getObjectType();
  uint64_t v0 = sub_256175B68();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  unint64_t v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256177EE8();
  id v4 = objc_allocWithZone(MEMORY[0x263F0A5D8]);
  char v5 = (void *)sub_256177EA8();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithBundleIdentifier_, v5);

  v28[0] = 0;
  id v7 = objc_msgSend(v6, sel_isWatchAppInstalledWithError_, v28);
  if (v7)
  {
    unint64_t v8 = v7;
    id v9 = v28[0];
    unsigned __int8 v10 = objc_msgSend(v8, sel_BOOLValue);
  }
  else
  {
    id v11 = v28[0];
    uint64_t v12 = (void *)sub_2561755D8();

    swift_willThrow();
    sub_256175B48();
    id v13 = v12;
    id v14 = v12;
    id v15 = sub_256175B58();
    os_log_type_t v16 = sub_256178218();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      id v26 = (void *)swift_slowAlloc();
      v28[0] = v26;
      *(_DWORD *)uint64_t v17 = 136446466;
      uint64_t v18 = sub_256178978();
      uint64_t v27 = sub_255FB29A8(v18, v19, (uint64_t *)v28);
      sub_256178458();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2080;
      uint64_t v27 = (uint64_t)v12;
      id v20 = v12;
      sub_255FB3160();
      uint64_t v21 = sub_256177F08();
      uint64_t v27 = sub_255FB29A8(v21, v22, (uint64_t *)v28);
      sub_256178458();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_255F58000, v15, v16, "[%{public}s] Could not determine if Mindfulness app is installed with error: %s", (uint8_t *)v17, 0x16u);
      uint64_t v23 = v26;
      swift_arrayDestroy();
      MEMORY[0x25A2A1E90](v23, -1, -1);
      MEMORY[0x25A2A1E90](v17, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return 0;
  }
  return v10;
}

uint64_t sub_255FB2968@<X0>(uint64_t *a1@<X8>)
{
  swift_getObjectType();
  uint64_t result = sub_256175C08();
  *a1 = result;
  return result;
}

uint64_t sub_255FB29A8(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_255FB2A7C(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_255FB5934((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_255FB5934((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_255FB2A7C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_256178468();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_255FB2C38(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_2561785C8();
  if (!v8)
  {
    sub_256178648();
    __break(1u);
LABEL_17:
    uint64_t result = sub_2561786C8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_255FB2C38(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_255FB2CD0(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_255FB2ED0(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_255FB2ED0(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_255FB2CD0(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_255FB2E48(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_256178568();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_256178648();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_256177F78();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_2561786C8();
    __break(1u);
LABEL_14:
    uint64_t result = sub_256178648();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_255FB2E48(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_255FB5A58(0, &qword_269F43B00, MEMORY[0x263F8E778], MEMORY[0x263F8E0F8]);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_255FB2ED0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_255FB5A58(0, &qword_269F43B00, MEMORY[0x263F8E778], MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  id v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_2561786C8();
  __break(1u);
  return result;
}

uint64_t sub_255FB3040(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_2561535C0();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_255FB3A18(v6);
  return sub_2561785E8();
}

unint64_t sub_255FB30BC()
{
  unint64_t result = qword_269F43720;
  if (!qword_269F43720)
  {
    type metadata accessor for NotificationSettingsModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43720);
  }
  return result;
}

uint64_t type metadata accessor for NotificationSettingsModel()
{
  uint64_t result = qword_26B2AD250;
  if (!qword_26B2AD250) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_255FB3160()
{
  unint64_t result = qword_269F43A30;
  if (!qword_269F43A30)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_269F43A30);
  }
  return result;
}

uint64_t sub_255FB31B8()
{
  return MEMORY[0x263EFDDD8];
}

id sub_255FB31CC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_255FB2324(a1, (SEL *)&selRef_middayNotificationsEnabled, a2);
}

id sub_255FB31EC(unsigned __int8 *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_9Tm(a1, a2, a3, a4, (SEL *)&selRef_setMiddayNotificationsEnabled_);
}

id sub_255FB31F8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_255FB2324(a1, (SEL *)&selRef_endOfDayNotificationsEnabled, a2);
}

id sub_255FB3218(unsigned __int8 *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_9Tm(a1, a2, a3, a4, (SEL *)&selRef_setEndOfDayNotificationsEnabled_);
}

uint64_t sub_255FB3224@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = NotificationSettingsModel.customReminderSchedule.getter();
  *a1 = result;
  return result;
}

id sub_255FB3254@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_255FB2324(a1, (SEL *)&selRef_periodicPromptedAssessmentNotificationsEnabled, a2);
}

id sub_255FB3274(unsigned __int8 *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_9Tm(a1, a2, a3, a4, (SEL *)&selRef_setPeriodicPromptedAssessmentNotificationsEnabled_);
}

id keypath_set_9Tm(unsigned __int8 *a1, void *a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  return objc_msgSend(*(id *)(*a2 + OBJC_IVAR____TtC14MentalHealthUI25NotificationSettingsModel_settingsManager), *a5, *a1);
}

uint64_t sub_255FB329C()
{
  return type metadata accessor for NotificationSettingsModel();
}

void sub_255FB32A4()
{
  sub_255FB5A58(319, &qword_26B2AD268, MEMORY[0x263F8D4F8], MEMORY[0x263EFDE58]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for NotificationSettingsModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for NotificationSettingsModel);
}

uint64_t dispatch thunk of NotificationSettingsModel.__allocating_init(settingsManager:userNotificationCenter:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_255FB3394(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x263F8EE78];
    }
    if (v5 <= 0)
    {
      int64_t v8 = (void *)MEMORY[0x263F8EE78];
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0) {
          goto LABEL_17;
        }
        unint64_t v10 = a2 + 48 * a3;
        if (v10 < (unint64_t)&v8[6 * v5 + 4] && (unint64_t)(v8 + 4) < v10 + 48 * v5) {
          goto LABEL_17;
        }
        swift_arrayInitWithCopy();
        return (uint64_t)v8;
      }
    }
    else
    {
      sub_255FB5A58(0, (unint64_t *)&unk_269F43B20, (uint64_t)&_s19EntryMomentDataViewV15ItemDescriptionVN, MEMORY[0x263F8E0F8]);
      int64_t v8 = (void *)swift_allocObject();
      size_t v9 = _swift_stdlib_malloc_size(v8);
      void v8[2] = v5;
      v8[3] = 2 * ((uint64_t)(v9 - 32) / 48);
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_2561786C8();
  __break(1u);
  return result;
}

void *sub_255FB3544(unint64_t a1)
{
  return sub_255FB355C(a1, (void (*)(void *, uint64_t, unint64_t))sub_255FB5028);
}

void *sub_255FB355C(unint64_t a1, void (*a2)(void *, uint64_t, unint64_t))
{
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4) {
    return (void *)MEMORY[0x263F8EE78];
  }
  while (1)
  {
    if (v4 <= 0)
    {
      uint64_t v5 = (void *)MEMORY[0x263F8EE78];
    }
    else
    {
      sub_255FB5A58(0, (unint64_t *)&qword_269F43AB0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
      uint64_t v5 = (void *)swift_allocObject();
      int64_t v6 = _swift_stdlib_malloc_size(v5);
      uint64_t v7 = v6 - 32;
      if (v6 < 32) {
        uint64_t v7 = v6 - 25;
      }
      v5[2] = v4;
      v5[3] = (2 * (v7 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    a2(v5 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(void *, uint64_t, unint64_t))v4) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_256178678();
    swift_bridgeObjectRelease();
    if (!v4) {
      return (void *)MEMORY[0x263F8EE78];
    }
  }
  return v5;
}

void *sub_255FB3688(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_255FB59E0();
  unint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  int64_t v6 = sub_255FB5700(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_255FB5894();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

void *sub_255FB376C(unint64_t a1)
{
  return sub_255FB355C(a1, (void (*)(void *, uint64_t, unint64_t))sub_255FB5270);
}

uint64_t sub_255FB3784(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x263F8EE78];
    }
    uint64_t v8 = 8 * v5;
    if (v5 <= 0)
    {
      size_t v9 = (char *)MEMORY[0x263F8EE78];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        uint64_t v12 = v9 + 32;
        id v13 = (char *)(a2 + 8 * a3);
        if (v13 < &v9[v8 + 32] && v12 < &v13[v8]) {
          goto LABEL_19;
        }
        memcpy(v12, v13, 8 * v5);
        return (uint64_t)v9;
      }
    }
    else
    {
      sub_255FB5A58(0, &qword_269F43AA8, MEMORY[0x263F8D538], MEMORY[0x263F8E0F8]);
      size_t v9 = (char *)swift_allocObject();
      int64_t v10 = _swift_stdlib_malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 25;
      }
      *((void *)v9 + 2) = v5;
      *((void *)v9 + 3) = 2 * (v11 >> 3);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_2561786C8();
  __break(1u);
  return result;
}

void *sub_255FB3910(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_255FB5A58(0, &qword_269F43AA0, MEMORY[0x263F8D6C8], MEMORY[0x263F8E0F8]);
  unint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  int64_t v6 = sub_255FB5700(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_255FB5894();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

void sub_255FB3A18(uint64_t *a1)
{
  uint64_t v3 = sub_256175568();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  char v170 = (char *)&v153 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  unint64_t v171 = (char *)&v153 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v172 = (char *)&v153 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v173 = (char *)&v153 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  unint64_t v160 = (char *)&v153 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v161 = (char *)&v153 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v162 = (char *)&v153 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v163 = (char *)&v153 - v19;
  uint64_t v158 = a1;
  uint64_t v20 = a1[1];
  uint64_t v21 = sub_2561787D8();
  if (v21 >= v20)
  {
    if (v20 < 0) {
      goto LABEL_152;
    }
    if (v20) {
      sub_255FB4698(0, v20, 1, v158);
    }
    return;
  }
  if (v20 >= 0) {
    uint64_t v22 = v20;
  }
  else {
    uint64_t v22 = v20 + 1;
  }
  if (v20 < -1) {
    goto LABEL_168;
  }
  uint64_t v157 = v21;
  uint64_t v168 = v1;
  if (v20 < 2)
  {
    uint64_t v25 = (char *)MEMORY[0x263F8EE78];
    uint64_t v184 = MEMORY[0x263F8EE78];
    v167 = (void **)((MEMORY[0x263F8EE78] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v20 != 1)
    {
      unint64_t v94 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_115:
      if (v94 >= 2)
      {
        uint64_t v145 = *v158;
        do
        {
          unint64_t v146 = v94 - 2;
          if (v94 < 2) {
            goto LABEL_146;
          }
          if (!v145) {
            goto LABEL_167;
          }
          uint64_t v147 = v25;
          uint64_t v148 = *(void *)&v25[16 * v146 + 32];
          uint64_t v149 = *(void *)&v25[16 * v94 + 24];
          uint64_t v150 = v168;
          sub_255FB4A2C((void **)(v145 + 8 * v148), (void **)(v145 + 8 * *(void *)&v25[16 * v94 + 16]), v145 + 8 * v149, v167);
          uint64_t v168 = v150;
          if (v150) {
            break;
          }
          if (v149 < v148) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v147 = sub_256152458((uint64_t)v25);
          }
          if (v146 >= *((void *)v147 + 2)) {
            goto LABEL_149;
          }
          uint64_t v151 = &v147[16 * v146 + 32];
          *(void *)uint64_t v151 = v148;
          *((void *)v151 + 1) = v149;
          unint64_t v152 = *((void *)v147 + 2);
          if (v94 > v152) {
            goto LABEL_150;
          }
          uint64_t v25 = v147;
          memmove(&v147[16 * v94 + 16], &v147[16 * v94 + 32], 16 * (v152 - v94));
          *((void *)v147 + 2) = v152 - 1;
          unint64_t v94 = v152 - 1;
        }
        while (v152 > 2);
      }
LABEL_126:
      swift_bridgeObjectRelease();
LABEL_127:
      *(void *)((v184 & 0xFFFFFFFFFFFFFF8) + 0x1__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
      sub_256178018();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v23 = v22 >> 1;
    sub_255FB58F8(0, (unint64_t *)&qword_26B2AD270);
    uint64_t v24 = sub_256178048();
    *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x1__isPlatformVersionAtLeast(2, 18, 1, 0) = v23;
    v167 = (void **)((v24 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v184 = v24;
  }
  uint64_t v26 = 0;
  uint64_t v27 = *v158;
  char v169 = (void (**)(void, void))(v4 + 8);
  uint64_t v154 = v27 + 16;
  uint64_t v155 = v27 - 8;
  uint64_t v25 = (char *)MEMORY[0x263F8EE78];
  uint64_t v174 = v3;
  uint64_t v175 = v27;
  uint64_t v164 = v20;
  while (1)
  {
    uint64_t v28 = v26 + 1;
    uint64_t v165 = v26;
    if (v26 + 1 < v20)
    {
      id v29 = *(void **)(v27 + 8 * v28);
      uint64_t v182 = *(void **)(v27 + 8 * v26);
      double v30 = v182;
      id v183 = v29;
      uint64_t v31 = v26;
      id v32 = v29;
      id v33 = v30;
      uint64_t v34 = v168;
      LODWORD(v178) = sub_255FB16E0(&v183, &v182);
      uint64_t v168 = v34;
      if (v34)
      {
        swift_bridgeObjectRelease();

        goto LABEL_127;
      }

      uint64_t v28 = v31 + 2;
      uint64_t v26 = v31;
      if (v31 + 2 < v20)
      {
        uint64_t v156 = v25;
        uint64_t v35 = (id *)(v154 + 8 * v31);
        uint64_t v36 = v169;
        while (1)
        {
          uint64_t v176 = v28;
          uint64_t v37 = *(v35 - 1);
          id v38 = *v35;
          id v39 = v37;
          id v40 = objc_msgSend(v38, sel_dateComponents);
          int v41 = v163;
          sub_2561754F8();

          id v181 = (id)sub_256175508();
          LOBYTE(v4__isPlatformVersionAtLeast(2, 18, 1, 0) = v42;
          long long v43 = v36;
          uint64_t v44 = (void (*)(char *, uint64_t))*v36;
          uint64_t v45 = v174;
          v44(v41, v174);
          if (v40) {
            goto LABEL_163;
          }
          id v180 = v38;
          id v46 = objc_msgSend(v38, sel_dateComponents);
          uint64_t v47 = v162;
          sub_2561754F8();

          id v179 = (id)sub_256175528();
          LOBYTE(v46) = v48;
          v44(v47, v45);
          if (v46) {
            goto LABEL_165;
          }
          id v49 = objc_msgSend(v39, sel_dateComponents);
          uint64_t v50 = v161;
          sub_2561754F8();

          id v51 = (id)sub_256175508();
          LOBYTE(v49) = v52;
          v44(v50, v45);
          if (v49) {
            goto LABEL_162;
          }
          id v53 = objc_msgSend(v39, sel_dateComponents);
          uint64_t v54 = v160;
          sub_2561754F8();

          uint64_t v55 = sub_256175528();
          char v57 = v56;
          v44(v54, v45);
          if (v57) {
            goto LABEL_164;
          }
          uint64_t v36 = v43;

          BOOL v58 = (uint64_t)v179 < v55;
          if (v181 != v51) {
            BOOL v58 = (uint64_t)v181 < (uint64_t)v51;
          }
          if ((v178 & 1) != v58) {
            break;
          }
          uint64_t v28 = v176 + 1;
          ++v35;
          if (v164 == v176 + 1)
          {
            uint64_t v20 = v164;
            uint64_t v28 = v164;
            uint64_t v25 = v156;
            uint64_t v3 = v174;
            goto LABEL_27;
          }
        }
        uint64_t v25 = v156;
        uint64_t v3 = v174;
        uint64_t v20 = v164;
        uint64_t v28 = v176;
LABEL_27:
        uint64_t v26 = v165;
      }
      uint64_t v27 = v175;
      if (v178)
      {
        if (v28 < v26) {
          goto LABEL_155;
        }
        if (v26 < v28)
        {
          uint64_t v59 = (uint64_t *)(v155 + 8 * v28);
          uint64_t v60 = v26;
          uint64_t v61 = v28;
          uint64_t v62 = v60;
          uint64_t v63 = (uint64_t *)(v175 + 8 * v60);
          do
          {
            if (v62 != --v61)
            {
              if (!v27) {
                goto LABEL_166;
              }
              uint64_t v64 = *v63;
              uint64_t *v63 = *v59;
              uint64_t *v59 = v64;
            }
            ++v62;
            --v59;
            ++v63;
          }
          while (v62 < v61);
          uint64_t v26 = v165;
        }
      }
    }
    if (v28 >= v20) {
      goto LABEL_62;
    }
    if (__OFSUB__(v28, v26)) {
      goto LABEL_151;
    }
    if (v28 - v26 >= v157)
    {
      uint64_t v26 = v165;
      goto LABEL_62;
    }
    if (__OFADD__(v165, v157)) {
      goto LABEL_153;
    }
    uint64_t v26 = v165;
    uint64_t v65 = v165 + v157 >= v20 ? v20 : v165 + v157;
    if (v65 < v165) {
      break;
    }
    if (v28 != v65)
    {
      uint64_t v156 = v25;
      uint64_t v66 = v155 + 8 * v28;
      uint64_t v67 = (void (**)(char *, uint64_t))v169;
      uint64_t v159 = v65;
      do
      {
        uint64_t v69 = *(void **)(v27 + 8 * v28);
        uint64_t v70 = v26;
        uint64_t v166 = v66;
        uint64_t v176 = v28;
        while (1)
        {
          uint64_t v71 = *(void **)v66;
          id v72 = v69;
          id v181 = v71;
          id v73 = objc_msgSend(v72, sel_dateComponents);
          long long v74 = v173;
          sub_2561754F8();

          id v180 = (id)sub_256175508();
          LOBYTE(v73) = v75;
          uint64_t v76 = *v67;
          (*v67)(v74, v3);
          if (v73) {
            goto LABEL_157;
          }
          uint64_t v177 = v70;
          id v179 = v72;
          id v77 = objc_msgSend(v72, sel_dateComponents);
          uint64_t v78 = v172;
          sub_2561754F8();

          uint64_t v178 = sub_256175528();
          LOBYTE(v77) = v79;
          v76(v78, v3);
          if (v77) {
            goto LABEL_158;
          }
          id v80 = v181;
          id v81 = objc_msgSend(v181, sel_dateComponents);
          uint64_t v82 = v171;
          sub_2561754F8();

          id v83 = (id)sub_256175508();
          LOBYTE(v81) = v84;
          v76(v82, v3);
          if (v81) {
            goto LABEL_156;
          }
          id v85 = objc_msgSend(v80, sel_dateComponents);
          uint64_t v86 = v170;
          sub_2561754F8();

          uint64_t v87 = sub_256175528();
          char v89 = v88;
          v76(v86, v3);
          if (v89) {
            goto LABEL_159;
          }

          BOOL v90 = v178 < v87;
          if (v180 != v83) {
            BOOL v90 = (uint64_t)v180 < (uint64_t)v83;
          }
          if (!v90) {
            break;
          }
          uint64_t v3 = v174;
          uint64_t v27 = v175;
          uint64_t v67 = (void (**)(char *, uint64_t))v169;
          uint64_t v68 = v176;
          if (!v175) {
            goto LABEL_160;
          }
          uint64_t v91 = *(void **)v66;
          uint64_t v69 = *(void **)(v66 + 8);
          *(void *)uint64_t v66 = v69;
          *(void *)(v66 + 8) = v91;
          v66 -= 8;
          uint64_t v70 = v177 + 1;
          if (v68 == v177 + 1) {
            goto LABEL_49;
          }
        }
        uint64_t v3 = v174;
        uint64_t v27 = v175;
        uint64_t v67 = (void (**)(char *, uint64_t))v169;
        uint64_t v68 = v176;
LABEL_49:
        uint64_t v28 = v68 + 1;
        uint64_t v26 = v165;
        uint64_t v66 = v166 + 8;
      }
      while (v28 != v159);
      uint64_t v28 = v159;
      uint64_t v25 = v156;
      if (v159 < v165) {
        goto LABEL_147;
      }
      goto LABEL_63;
    }
LABEL_62:
    if (v28 < v26) {
      goto LABEL_147;
    }
LABEL_63:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v25 = sub_2561522A0(0, *((void *)v25 + 2) + 1, 1, v25);
    }
    unint64_t v93 = *((void *)v25 + 2);
    unint64_t v92 = *((void *)v25 + 3);
    unint64_t v94 = v93 + 1;
    uint64_t v27 = v175;
    uint64_t v95 = v165;
    uint64_t v176 = v28;
    if (v93 >= v92 >> 1)
    {
      uint64_t v144 = sub_2561522A0((char *)(v92 > 1), v93 + 1, 1, v25);
      uint64_t v95 = v165;
      uint64_t v27 = v175;
      uint64_t v25 = v144;
    }
    *((void *)v25 + 2) = v94;
    uint64_t v96 = v25 + 32;
    uint64_t v97 = &v25[16 * v93 + 32];
    *(void *)uint64_t v97 = v95;
    *((void *)v97 + 1) = v176;
    if (v93)
    {
      while (1)
      {
        unint64_t v98 = v94 - 1;
        if (v94 >= 4)
        {
          uint64_t v103 = &v96[16 * v94];
          uint64_t v104 = *((void *)v103 - 8);
          uint64_t v105 = *((void *)v103 - 7);
          BOOL v109 = __OFSUB__(v105, v104);
          uint64_t v106 = v105 - v104;
          if (v109) {
            goto LABEL_135;
          }
          uint64_t v108 = *((void *)v103 - 6);
          uint64_t v107 = *((void *)v103 - 5);
          BOOL v109 = __OFSUB__(v107, v108);
          uint64_t v101 = v107 - v108;
          char v102 = v109;
          if (v109) {
            goto LABEL_136;
          }
          unint64_t v110 = v94 - 2;
          unint64_t v111 = &v96[16 * v94 - 32];
          uint64_t v113 = *(void *)v111;
          uint64_t v112 = *((void *)v111 + 1);
          BOOL v109 = __OFSUB__(v112, v113);
          uint64_t v114 = v112 - v113;
          if (v109) {
            goto LABEL_138;
          }
          BOOL v109 = __OFADD__(v101, v114);
          uint64_t v115 = v101 + v114;
          if (v109) {
            goto LABEL_141;
          }
          if (v115 >= v106)
          {
            uint64_t v133 = &v96[16 * v98];
            uint64_t v135 = *(void *)v133;
            uint64_t v134 = *((void *)v133 + 1);
            BOOL v109 = __OFSUB__(v134, v135);
            uint64_t v136 = v134 - v135;
            if (v109) {
              goto LABEL_145;
            }
            BOOL v126 = v101 < v136;
            goto LABEL_99;
          }
        }
        else
        {
          if (v94 != 3)
          {
            uint64_t v127 = *((void *)v25 + 4);
            uint64_t v128 = *((void *)v25 + 5);
            BOOL v109 = __OFSUB__(v128, v127);
            uint64_t v120 = v128 - v127;
            char v121 = v109;
            goto LABEL_93;
          }
          uint64_t v100 = *((void *)v25 + 4);
          uint64_t v99 = *((void *)v25 + 5);
          BOOL v109 = __OFSUB__(v99, v100);
          uint64_t v101 = v99 - v100;
          char v102 = v109;
        }
        if (v102) {
          goto LABEL_137;
        }
        unint64_t v110 = v94 - 2;
        uint64_t v116 = &v96[16 * v94 - 32];
        uint64_t v118 = *(void *)v116;
        uint64_t v117 = *((void *)v116 + 1);
        BOOL v119 = __OFSUB__(v117, v118);
        uint64_t v120 = v117 - v118;
        char v121 = v119;
        if (v119) {
          goto LABEL_140;
        }
        unint64_t v122 = &v96[16 * v98];
        uint64_t v124 = *(void *)v122;
        uint64_t v123 = *((void *)v122 + 1);
        BOOL v109 = __OFSUB__(v123, v124);
        uint64_t v125 = v123 - v124;
        if (v109) {
          goto LABEL_143;
        }
        if (__OFADD__(v120, v125)) {
          goto LABEL_144;
        }
        if (v120 + v125 >= v101)
        {
          BOOL v126 = v101 < v125;
LABEL_99:
          if (v126) {
            unint64_t v98 = v110;
          }
          goto LABEL_101;
        }
LABEL_93:
        if (v121) {
          goto LABEL_139;
        }
        unsigned __int8 v129 = &v96[16 * v98];
        uint64_t v131 = *(void *)v129;
        uint64_t v130 = *((void *)v129 + 1);
        BOOL v109 = __OFSUB__(v130, v131);
        uint64_t v132 = v130 - v131;
        if (v109) {
          goto LABEL_142;
        }
        if (v132 < v120) {
          goto LABEL_110;
        }
LABEL_101:
        unint64_t v137 = v98 - 1;
        if (v98 - 1 >= v94)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!v27) {
          goto LABEL_161;
        }
        uint64_t v138 = &v96[16 * v137];
        uint64_t v139 = *(void *)v138;
        uint64_t v140 = &v96[16 * v98];
        uint64_t v141 = *((void *)v140 + 1);
        uint64_t v142 = v168;
        sub_255FB4A2C((void **)(v27 + 8 * *(void *)v138), (void **)(v27 + 8 * *(void *)v140), v27 + 8 * v141, v167);
        uint64_t v168 = v142;
        if (v142) {
          goto LABEL_126;
        }
        if (v141 < v139) {
          goto LABEL_132;
        }
        if (v98 > *((void *)v25 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v138 = v139;
        *(void *)&v96[16 * v137 + 8] = v141;
        unint64_t v143 = *((void *)v25 + 2);
        if (v98 >= v143) {
          goto LABEL_134;
        }
        unint64_t v94 = v143 - 1;
        memmove(&v96[16 * v98], v140 + 16, 16 * (v143 - 1 - v98));
        *((void *)v25 + 2) = v143 - 1;
        uint64_t v27 = v175;
        if (v143 <= 2) {
          goto LABEL_110;
        }
      }
    }
    unint64_t v94 = 1;
LABEL_110:
    uint64_t v20 = v164;
    uint64_t v26 = v176;
    if (v176 >= v164) {
      goto LABEL_115;
    }
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  __break(1u);
LABEL_168:
  sub_256178648();
  __break(1u);
}

void sub_255FB4698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v47 = a1;
  uint64_t v7 = sub_256175568();
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  id v49 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v50 = (char *)&v45 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  id v51 = (char *)&v45 - v13;
  MEMORY[0x270FA5388](v12);
  char v52 = (char *)&v45 - v15;
  uint64_t v46 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = (void (**)(char *, uint64_t))(v14 + 8);
    uint64_t v53 = *a4;
    uint64_t v17 = (void **)(v53 + 8 * a3 - 8);
    uint64_t v18 = (SEL *)&unk_2653F3000;
LABEL_5:
    uint64_t v19 = *(void **)(v53 + 8 * a3);
    uint64_t v54 = v47;
    char v48 = v17;
    while (1)
    {
      uint64_t v20 = *v17;
      id v21 = v19;
      id v22 = v20;
      id v23 = [v21 v18[470]];
      uint64_t v24 = v52;
      sub_2561754F8();

      uint64_t v58 = sub_256175508();
      LOBYTE(v23) = v25;
      uint64_t v59 = *v16;
      v59(v24, v7);
      if (v23) {
        break;
      }
      id v26 = [v21 v18[470]];
      uint64_t v27 = v51;
      sub_2561754F8();

      uint64_t v57 = sub_256175528();
      LOBYTE(v26) = v28;
      v59(v27, v7);
      if (v26) {
        goto LABEL_17;
      }
      id v29 = [v22 v18[470]];
      double v30 = v50;
      sub_2561754F8();

      uint64_t v56 = sub_256175508();
      LOBYTE(v29) = v31;
      v59(v30, v7);
      if (v29) {
        goto LABEL_18;
      }
      uint64_t v55 = v17;
      uint64_t v32 = v7;
      id v33 = v18;
      uint64_t v34 = a3;
      uint64_t v35 = v33;
      id v36 = [v22 (SEL)v33 + 2607];
      uint64_t v37 = v49;
      sub_2561754F8();

      uint64_t v38 = sub_256175528();
      char v40 = v39;
      int v41 = v37;
      uint64_t v7 = v32;
      v59(v41, v32);
      if (v40) {
        goto LABEL_19;
      }

      BOOL v42 = v57 < v38;
      if (v58 != v56) {
        BOOL v42 = v58 < v56;
      }
      a3 = v34;
      uint64_t v18 = v35;
      long long v43 = v55;
      if (v42)
      {
        if (!v53) {
          goto LABEL_20;
        }
        uint64_t v44 = *v55;
        uint64_t v19 = v55[1];
        *uint64_t v55 = v19;
        v43[1] = v44;
        uint64_t v17 = v43 - 1;
        if (a3 != ++v54) {
          continue;
        }
      }
      ++a3;
      uint64_t v17 = v48 + 1;
      if (a3 == v46) {
        return;
      }
      goto LABEL_5;
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
  }
}

uint64_t sub_255FB4A2C(void **__src, void **a2, unint64_t a3, void **__dst)
{
  uint64_t v35 = __dst;
  uint64_t v5 = a2;
  uint64_t v6 = __src;
  int64_t v7 = (char *)a2 - (char *)__src;
  int64_t v8 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v8 = (char *)a2 - (char *)__src;
  }
  uint64_t v9 = v8 >> 3;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v11 = a3 - (void)a2;
  }
  uint64_t v12 = v11 >> 3;
  int v41 = __src;
  char v40 = __dst;
  if (v9 >= v11 >> 3)
  {
    if (v10 >= -7)
    {
      if (__dst != a2 || &a2[v12] <= __dst)
      {
        memmove(__dst, a2, 8 * v12);
        __dst = v35;
      }
      id v21 = &__dst[v12];
      char v39 = v21;
      int v41 = v5;
      if (v6 < v5 && v10 >= 8)
      {
        id v22 = (id *)(a3 - 8);
        id v23 = v5;
        uint64_t v34 = v6;
        while (1)
        {
          uint64_t v24 = v21;
          char v25 = *--v21;
          id v38 = v25;
          id v26 = *--v23;
          uint64_t v37 = v26;
          id v27 = v38;
          id v28 = v26;
          char v29 = sub_255FB16E0(&v38, &v37);
          if (v36) {
            break;
          }
          char v30 = v29;
          uint64_t v36 = 0;
          char v31 = v22 + 1;

          if (v30)
          {
            uint64_t v32 = v35;
            if (v31 != v5 || v22 >= v5) {
              id *v22 = *v23;
            }
            int v41 = v23;
            id v21 = v24;
          }
          else
          {
            char v39 = v21;
            uint64_t v32 = v35;
            if (v31 < v24 || v22 >= v24 || v31 != v24) {
              id *v22 = *v21;
            }
            id v23 = v5;
          }
          if (v23 > v34)
          {
            --v22;
            uint64_t v5 = v23;
            if (v21 > v32) {
              continue;
            }
          }
          goto LABEL_48;
        }
      }
      goto LABEL_48;
    }
  }
  else if (v7 >= -7)
  {
    if (__dst != __src || &__src[v9] <= __dst)
    {
      memmove(__dst, __src, 8 * v9);
      __dst = v35;
    }
    uint64_t v13 = &__dst[v9];
    char v39 = v13;
    if ((unint64_t)v5 < a3 && v7 >= 8)
    {
      while (1)
      {
        id v38 = *v5;
        uint64_t v14 = __dst;
        uint64_t v37 = *__dst;
        uint64_t v15 = v37;
        id v16 = v38;
        id v17 = v15;
        char v18 = sub_255FB16E0(&v38, &v37);
        if (v36) {
          break;
        }
        char v19 = v18;

        if (v19)
        {
          uint64_t v20 = v5 + 1;
          if (v6 < v5 || v6 >= v20 || v6 != v5) {
            *uint64_t v6 = *v5;
          }
          __dst = v14;
        }
        else
        {
          if (v6 != v14) {
            *uint64_t v6 = *v14;
          }
          __dst = v14 + 1;
          char v40 = v14 + 1;
          uint64_t v20 = v5;
        }
        uint64_t v36 = 0;
        int v41 = ++v6;
        if (__dst < v13)
        {
          uint64_t v5 = v20;
          if ((unint64_t)v20 < a3) {
            continue;
          }
        }
        goto LABEL_48;
      }
    }
LABEL_48:
    sub_256152398(&v41, &v40, &v39);
    return 1;
  }
  uint64_t result = sub_2561786C8();
  __break(1u);
  return result;
}

void sub_255FB4D64(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_256178678();
    swift_bridgeObjectRelease();
  }

  JUMPOUT(0x25A2A1010);
}

uint64_t sub_255FB4DE0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_256178678();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_256178678();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_255FB58A0(0, &qword_269F43B08, (unint64_t *)&qword_26B2AD270);
        sub_255FB5990(&qword_269F43B10, &qword_269F43B08, (unint64_t *)&qword_26B2AD270);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_2560BDCBC(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_255FB58F8(0, (unint64_t *)&qword_26B2AD270);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_2561786C8();
  __break(1u);
  return result;
}

uint64_t sub_255FB5028(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_256178678();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_256178678();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_255FB58A0(0, &qword_269F43AF0, (unint64_t *)&qword_269F47780);
        sub_255FB5990(&qword_269F43AF8, &qword_269F43AF0, (unint64_t *)&qword_269F47780);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_2560BDD28(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_255FB58F8(0, (unint64_t *)&qword_269F47780);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_2561786C8();
  __break(1u);
  return result;
}

uint64_t sub_255FB5270(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_256178678();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_256178678();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_255FB58A0(0, (unint64_t *)&qword_269F43AC0, (unint64_t *)&qword_269F46A00);
        sub_255FB5990(&qword_269F43AC8, (unint64_t *)&qword_269F43AC0, (unint64_t *)&qword_269F46A00);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_2560BDD28(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_255FB58F8(0, (unint64_t *)&qword_269F46A00);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_2561786C8();
  __break(1u);
  return result;
}

uint64_t sub_255FB54B8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_256178678();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_256178678();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_255FB58A0(0, &qword_269F43AD8, &qword_269F43AD0);
        sub_255FB5990((unint64_t *)&unk_269F43AE0, &qword_269F43AD8, &qword_269F43AD0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_2560BDD28(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_255FB58F8(0, &qword_269F43AD0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_2561786C8();
  __break(1u);
  return result;
}

void *sub_255FB5700(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(void *)(*(void *)(a4 + 48) + 8 * v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_255FB5894()
{
  return swift_release();
}

void sub_255FB58A0(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_255FB58F8(255, a3);
    unint64_t v4 = sub_256178078();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_255FB58F8(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_255FB5934(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_255FB5990(unint64_t *a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_255FB58A0(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_255FB59E0()
{
  if (!qword_269F43B18)
  {
    type metadata accessor for Label(255);
    unint64_t v0 = sub_2561787F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43B18);
    }
  }
}

uint64_t sub_255FB5A38(id *a1)
{
  return sub_255FB1F60(a1, *(void *)(v1 + 16)) & 1;
}

void sub_255FB5A58(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_255FB5AA4(id *a1)
{
  return sub_255FB5A38(a1) & 1;
}

uint64_t *sub_255FB5AC0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    unint64_t v11 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    sub_255FBCA9C(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_256176AA8();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v124 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
      uint64_t v122 = v8;
      uint64_t v121 = v6;
      if (v124(a2, 1, v7))
      {
        sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      unint64_t v12 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v13 = v12[5];
      unint64_t v14 = (char *)a1 + v13;
      int64_t v15 = (char *)a2 + v13;
      uint64_t v16 = sub_256176158();
      id v17 = (void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
      uint64_t v123 = *v17;
      (*v17)(v14, v15, v16);
      *((unsigned char *)a1 + v12[6]) = *((unsigned char *)a2 + v12[6]);
      uint64_t v18 = v12[7];
      char v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      uint64_t v21 = sub_256175D98();
      uint64_t v120 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
      v120(v19, v20, v21);
      uint64_t v22 = v12[8];
      id v23 = (char *)a1 + v22;
      uint64_t v24 = (char *)a2 + v22;
      if (v124((uint64_t *)((char *)a2 + v22), 1, v7))
      {
        sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v23, v24, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v23, 0, 1, v7);
      }
      uint64_t v26 = _s6StylesV8TimelineVMa(0);
      v123(&v23[*(int *)(v26 + 20)], &v24[*(int *)(v26 + 20)], v16);
      uint64_t v27 = v12[9];
      id v28 = (char *)a1 + v27;
      char v29 = (char *)a2 + v27;
      if (v124((uint64_t *)((char *)a2 + v27), 1, v7))
      {
        sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v28, v29, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v28, 0, 1, v7);
      }
      uint64_t v31 = _s6StylesV6NoDataVMa(0);
      v123(&v28[*(int *)(v31 + 20)], &v29[*(int *)(v31 + 20)], v16);
      v28[*(int *)(v31 + 24)] = v29[*(int *)(v31 + 24)];
      uint64_t v32 = v12[10];
      id v33 = (char *)a1 + v32;
      uint64_t v34 = (char *)a2 + v32;
      if (v124((uint64_t *)((char *)a2 + v32), 1, v7))
      {
        sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v33, v34, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v33, 0, 1, v7);
      }
      uint64_t v36 = _s6StylesV11PlaceholderVMa(0);
      v123(&v33[*(int *)(v36 + 20)], &v34[*(int *)(v36 + 20)], v16);
      uint64_t v37 = v12[11];
      id v38 = (char *)a1 + v37;
      char v39 = (char *)a2 + v37;
      if (v124((uint64_t *)((char *)a2 + v37), 1, v7))
      {
        sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v38, v39, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v38, 0, 1, v7);
      }
      uint64_t v41 = _s6StylesV6SymbolVMa(0);
      v123(&v38[*(int *)(v41 + 20)], &v39[*(int *)(v41 + 20)], v16);
      uint64_t v42 = v12[12];
      long long v43 = (char *)a1 + v42;
      uint64_t v44 = (char *)a2 + v42;
      if (v124((uint64_t *)((char *)a2 + v42), 1, v7))
      {
        sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v43, v44, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v43, 0, 1, v7);
      }
      uint64_t v46 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v123(&v43[v46[5]], &v44[v46[5]], v16);
      v43[v46[6]] = v44[v46[6]];
      v120(&v43[v46[7]], &v44[v46[7]], v21);
      uint64_t v47 = v12[13];
      char v48 = (char *)a1 + v47;
      id v49 = (char *)a2 + v47;
      if (v124((uint64_t *)((char *)a2 + v47), 1, v7))
      {
        sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
        uint64_t v51 = v122;
      }
      else
      {
        uint64_t v51 = v122;
        (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v48, v49, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v48, 0, 1, v7);
      }
      uint64_t v52 = _s6StylesV5EmptyVMa(0);
      v123(&v48[*(int *)(v52 + 20)], &v49[*(int *)(v52 + 20)], v16);
      v48[*(int *)(v52 + 24)] = v49[*(int *)(v52 + 24)];
      uint64_t v53 = v12[14];
      uint64_t v54 = (char *)a1 + v53;
      uint64_t v55 = (char *)a2 + v53;
      if (v124((uint64_t *)((char *)a2 + v53), 1, v7))
      {
        sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v54, v55, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v54, 0, 1, v7);
      }
      uint64_t v57 = _s6StylesV5DailyVMa(0);
      v123(&v54[*(int *)(v57 + 20)], &v55[*(int *)(v57 + 20)], v16);
      v54[*(int *)(v57 + 24)] = v55[*(int *)(v57 + 24)];
      uint64_t v58 = v12[15];
      uint64_t v59 = (char *)a1 + v58;
      uint64_t v60 = (char *)a2 + v58;
      if (v124((uint64_t *)((char *)a2 + v58), 1, v7))
      {
        sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v59, v60, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v59, 0, 1, v7);
      }
      uint64_t v62 = _s6StylesV9MomentaryVMa(0);
      v123(&v59[*(int *)(v62 + 20)], &v60[*(int *)(v62 + 20)], v16);
      uint64_t v63 = v12[16];
      uint64_t v64 = (char *)a1 + v63;
      uint64_t v65 = (char *)a2 + v63;
      if (v124((uint64_t *)((char *)a2 + v63), 1, v7))
      {
        sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v64, v65, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v64, 0, 1, v7);
      }
      uint64_t v67 = _s6StylesV6HeaderVMa(0);
      v123(&v64[*(int *)(v67 + 20)], &v65[*(int *)(v67 + 20)], v16);
      uint64_t v68 = v12[17];
      uint64_t v69 = (char *)a1 + v68;
      uint64_t v70 = (char *)a2 + v68;
      if (v124((uint64_t *)((char *)a2 + v68), 1, v7))
      {
        sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v69, v70, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v69, 0, 1, v7);
      }
      uint64_t v72 = _s6StylesV11ChartButtonVMa(0);
      v123(&v69[*(int *)(v72 + 20)], &v70[*(int *)(v72 + 20)], v16);
      uint64_t v73 = v12[18];
      long long v74 = (char *)a1 + v73;
      char v75 = (char *)a2 + v73;
      if (v124((uint64_t *)((char *)a2 + v73), 1, v7))
      {
        sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v74, v75, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v74, 0, 1, v7);
      }
      uint64_t v77 = _s6StylesV15LogButtonFooterVMa(0);
      v123(&v74[*(int *)(v77 + 20)], &v75[*(int *)(v77 + 20)], v16);
      swift_storeEnumTagMultiPayload();
      uint64_t v6 = v121;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v78 = *(int *)(v6 + 20);
    char v79 = (uint64_t *)((char *)a1 + v78);
    id v80 = (uint64_t *)((char *)a2 + v78);
    sub_255FBCA9C(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v81 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v81 - 8) + 16))(v79, v80, v81);
    }
    else
    {
      *char v79 = *v80;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v82 = *(int *)(v6 + 24);
    uint64_t v125 = a1;
    id v83 = (char *)a1 + v82;
    char v84 = (char *)a2 + v82;
    *(uint64_t *)((char *)a1 + v82) = *(uint64_t *)((char *)a2 + v82);
    id v85 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
    uint64_t v86 = v85[5];
    uint64_t v87 = &v83[v86];
    char v88 = &v84[v86];
    uint64_t v89 = sub_256177DB8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 16))(v87, v88, v89);
    uint64_t v90 = v85[6];
    uint64_t v91 = &v83[v90];
    unint64_t v92 = &v84[v90];
    uint64_t v93 = *((void *)v92 + 1);
    *(void *)uint64_t v91 = *(void *)v92;
    *((void *)v91 + 1) = v93;
    uint64_t v94 = v85[7];
    uint64_t v95 = &v83[v94];
    uint64_t v96 = &v84[v94];
    uint64_t v97 = (int *)_s5EntryVMa();
    uint64_t v98 = *((void *)v97 - 1);
    uint64_t v99 = *(unsigned int (**)(char *, uint64_t, int *))(v98 + 48);
    swift_bridgeObjectRetain();
    if (v99(v96, 1, v97))
    {
      sub_255FBCA9C(0, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
      memcpy(v95, v96, *(void *)(*(void *)(v100 - 8) + 64));
    }
    else
    {
      uint64_t v101 = sub_2561758A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 16))(v95, v96, v101);
      uint64_t v102 = v97[5];
      uint64_t v103 = &v95[v102];
      uint64_t v104 = &v96[v102];
      uint64_t v105 = *((void *)v104 + 1);
      *(void *)uint64_t v103 = *(void *)v104;
      *((void *)v103 + 1) = v105;
      uint64_t v106 = v97[6];
      uint64_t v107 = &v95[v106];
      uint64_t v108 = &v96[v106];
      uint64_t v109 = *((void *)v108 + 1);
      *(void *)uint64_t v107 = *(void *)v108;
      *((void *)v107 + 1) = v109;
      uint64_t v110 = v97[7];
      unint64_t v111 = &v95[v110];
      uint64_t v112 = &v96[v110];
      uint64_t v113 = *((void *)v112 + 1);
      *(void *)unint64_t v111 = *(void *)v112;
      *((void *)v111 + 1) = v113;
      uint64_t v114 = v97[8];
      uint64_t v115 = &v95[v114];
      uint64_t v116 = &v96[v114];
      uint64_t v117 = *((void *)v116 + 1);
      *(void *)uint64_t v115 = *(void *)v116;
      *((void *)v115 + 1) = v117;
      *(void *)&v95[v97[9]] = *(void *)&v96[v97[9]];
      uint64_t v118 = *(void (**)(char *, void, uint64_t, int *))(v98 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v118(v95, 0, 1, v97);
    }
    unint64_t v11 = v125;
    *(void *)&v83[v85[8]] = *(void *)&v84[v85[8]];
    *(void *)&v83[v85[9]] = *(void *)&v84[v85[9]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v11;
}

uint64_t sub_255FB6BE4(uint64_t a1, uint64_t a2)
{
  sub_255FBCA9C(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v51 = a2;
    uint64_t v4 = sub_256176AA8();
    uint64_t v5 = *(void *)(v4 - 8);
    uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (!v6(a1, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    }
    uint64_t v7 = type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v8 = a1 + *(int *)(v7 + 20);
    uint64_t v9 = sub_256176158();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    uint64_t v11 = v8;
    unint64_t v12 = (int *)v7;
    v10(v11, v9);
    uint64_t v13 = a1 + *(int *)(v7 + 28);
    uint64_t v14 = sub_256175D98();
    id v49 = *(void (**)(uint64_t))(*(void *)(v14 - 8) + 8);
    uint64_t v50 = v14;
    v49(v13);
    uint64_t v15 = a1 + v12[8];
    if (!v6(v15, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v15, v4);
    }
    uint64_t v16 = _s6StylesV8TimelineVMa(0);
    v10(v15 + *(int *)(v16 + 20), v9);
    uint64_t v17 = a1 + v12[9];
    if (!v6(v17, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v17, v4);
    }
    uint64_t v18 = _s6StylesV6NoDataVMa(0);
    v10(v17 + *(int *)(v18 + 20), v9);
    uint64_t v19 = a1 + v12[10];
    if (!v6(v19, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v19, v4);
    }
    uint64_t v20 = _s6StylesV11PlaceholderVMa(0);
    v10(v19 + *(int *)(v20 + 20), v9);
    uint64_t v21 = a1 + v12[11];
    if (!v6(v21, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v21, v4);
    }
    uint64_t v22 = _s6StylesV6SymbolVMa(0);
    v10(v21 + *(int *)(v22 + 20), v9);
    uint64_t v23 = a1 + v12[12];
    if (!v6(v23, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v23, v4);
    }
    uint64_t v52 = v5;
    uint64_t v24 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v10(v23 + *(int *)(v24 + 20), v9);
    ((void (*)(uint64_t, uint64_t))v49)(v23 + *(int *)(v24 + 28), v50);
    uint64_t v25 = v12;
    uint64_t v26 = a1 + v12[13];
    if (!v6(v26, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v26, v4);
    }
    uint64_t v27 = _s6StylesV5EmptyVMa(0);
    v10(v26 + *(int *)(v27 + 20), v9);
    uint64_t v28 = a1 + v25[14];
    if (!v6(v28, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v28, v4);
    }
    uint64_t v29 = _s6StylesV5DailyVMa(0);
    v10(v28 + *(int *)(v29 + 20), v9);
    uint64_t v30 = a1 + v25[15];
    if (!v6(v30, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v30, v4);
    }
    uint64_t v31 = _s6StylesV9MomentaryVMa(0);
    v10(v30 + *(int *)(v31 + 20), v9);
    uint64_t v32 = a1 + v25[16];
    uint64_t v33 = v9;
    if (!v6(v32, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v32, v4);
    }
    uint64_t v34 = _s6StylesV6HeaderVMa(0);
    v10(v32 + *(int *)(v34 + 20), v9);
    uint64_t v35 = a1 + v25[17];
    if (!v6(v35, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v35, v4);
    }
    uint64_t v36 = _s6StylesV11ChartButtonVMa(0);
    v10(v35 + *(int *)(v36 + 20), v9);
    uint64_t v37 = a1 + v25[18];
    if (!v6(v37, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v37, v4);
    }
    uint64_t v38 = _s6StylesV15LogButtonFooterVMa(0);
    v10(v37 + *(int *)(v38 + 20), v33);
    a2 = v51;
  }
  else
  {
    swift_release();
  }
  uint64_t v39 = a1 + *(int *)(a2 + 20);
  sub_255FBCA9C(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v40 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v39, v40);
  }
  else
  {
    swift_release();
  }
  uint64_t v41 = a1 + *(int *)(a2 + 24);
  uint64_t v42 = type metadata accessor for StateOfMindTimeline.DaySummary();
  uint64_t v43 = v41 + *(int *)(v42 + 20);
  uint64_t v44 = sub_256177DB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(v43, v44);
  swift_bridgeObjectRelease();
  uint64_t v45 = v41 + *(int *)(v42 + 28);
  uint64_t v46 = _s5EntryVMa();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 48))(v45, 1, v46))
  {
    uint64_t v47 = sub_2561758A8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v45, v47);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_255FB73EC(void *a1, void *a2, uint64_t a3)
{
  sub_255FBCA9C(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256176AA8();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v121 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48);
    uint64_t v119 = v7;
    if (v121(a2, 1, v6))
    {
      sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    uint64_t v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v10 = v9[5];
    uint64_t v11 = (char *)a1 + v10;
    unint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_256176158();
    uint64_t v14 = (void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    uint64_t v120 = *v14;
    (*v14)(v11, v12, v13);
    *((unsigned char *)a1 + v9[6]) = *((unsigned char *)a2 + v9[6]);
    uint64_t v15 = v9[7];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_256175D98();
    uint64_t v117 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
    v117(v16, v17, v18);
    uint64_t v19 = v9[8];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    if (v121((void *)((char *)a2 + v19), 1, v6))
    {
      sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v20, v21, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v20, 0, 1, v6);
    }
    uint64_t v23 = _s6StylesV8TimelineVMa(0);
    v120(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
    uint64_t v24 = v9[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v118 = a3;
    if (v121((void *)((char *)a2 + v24), 1, v6))
    {
      sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v25, v26, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v25, 0, 1, v6);
    }
    uint64_t v28 = _s6StylesV6NoDataVMa(0);
    v120(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
    v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
    uint64_t v29 = v9[10];
    uint64_t v30 = (char *)a1 + v29;
    uint64_t v31 = (char *)a2 + v29;
    if (v121((void *)((char *)a2 + v29), 1, v6))
    {
      sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v30, v31, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v30, 0, 1, v6);
    }
    uint64_t v33 = _s6StylesV11PlaceholderVMa(0);
    v120(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v13);
    uint64_t v34 = v9[11];
    uint64_t v35 = (char *)a1 + v34;
    uint64_t v36 = (char *)a2 + v34;
    if (v121((void *)((char *)a2 + v34), 1, v6))
    {
      sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v35, v36, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v35, 0, 1, v6);
    }
    uint64_t v38 = _s6StylesV6SymbolVMa(0);
    v120(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v13);
    uint64_t v39 = v9[12];
    uint64_t v40 = (char *)a1 + v39;
    uint64_t v41 = (char *)a2 + v39;
    if (v121((void *)((char *)a2 + v39), 1, v6))
    {
      sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v40, v41, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v40, 0, 1, v6);
    }
    uint64_t v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v120(&v40[v43[5]], &v41[v43[5]], v13);
    v40[v43[6]] = v41[v43[6]];
    v117(&v40[v43[7]], &v41[v43[7]], v18);
    uint64_t v44 = v9[13];
    uint64_t v45 = (char *)a1 + v44;
    uint64_t v46 = (char *)a2 + v44;
    if (v121((void *)((char *)a2 + v44), 1, v6))
    {
      sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
      uint64_t v48 = v119;
    }
    else
    {
      uint64_t v48 = v119;
      (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v45, v46, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v45, 0, 1, v6);
    }
    uint64_t v49 = _s6StylesV5EmptyVMa(0);
    v120(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v13);
    v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
    uint64_t v50 = v9[14];
    uint64_t v51 = (char *)a1 + v50;
    uint64_t v52 = (char *)a2 + v50;
    if (v121((void *)((char *)a2 + v50), 1, v6))
    {
      sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v52, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v6);
    }
    uint64_t v54 = _s6StylesV5DailyVMa(0);
    v120(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v13);
    v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
    uint64_t v55 = v9[15];
    uint64_t v56 = (char *)a1 + v55;
    uint64_t v57 = (char *)a2 + v55;
    if (v121((void *)((char *)a2 + v55), 1, v6))
    {
      sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v56, v57, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v6);
    }
    a3 = v118;
    uint64_t v59 = _s6StylesV9MomentaryVMa(0);
    v120(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v13);
    uint64_t v60 = v9[16];
    uint64_t v61 = (char *)a1 + v60;
    uint64_t v62 = (char *)a2 + v60;
    if (v121((void *)((char *)a2 + v60), 1, v6))
    {
      sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v6);
    }
    uint64_t v64 = _s6StylesV6HeaderVMa(0);
    v120(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v13);
    uint64_t v65 = v9[17];
    uint64_t v66 = (char *)a1 + v65;
    uint64_t v67 = (char *)a2 + v65;
    if (v121((void *)((char *)a2 + v65), 1, v6))
    {
      sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v67, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v6);
    }
    uint64_t v69 = _s6StylesV11ChartButtonVMa(0);
    v120(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v13);
    uint64_t v70 = v9[18];
    uint64_t v71 = (char *)a1 + v70;
    uint64_t v72 = (char *)a2 + v70;
    if (v121((void *)((char *)a2 + v70), 1, v6))
    {
      sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v72, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v6);
    }
    uint64_t v74 = _s6StylesV15LogButtonFooterVMa(0);
    v120(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v13);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v75 = *(int *)(a3 + 20);
  uint64_t v76 = (void *)((char *)a1 + v75);
  uint64_t v77 = (void *)((char *)a2 + v75);
  sub_255FBCA9C(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v78 = sub_256175D98();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v78 - 8) + 16))(v76, v77, v78);
  }
  else
  {
    *uint64_t v76 = *v77;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v79 = *(int *)(a3 + 24);
  uint64_t v122 = a1;
  id v80 = (char *)a1 + v79;
  uint64_t v81 = (char *)a2 + v79;
  *(void *)((char *)a1 + v79) = *(void *)((char *)a2 + v79);
  uint64_t v82 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  uint64_t v83 = v82[5];
  char v84 = &v80[v83];
  id v85 = &v81[v83];
  uint64_t v86 = sub_256177DB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16))(v84, v85, v86);
  uint64_t v87 = v82[6];
  char v88 = &v80[v87];
  uint64_t v89 = &v81[v87];
  uint64_t v90 = *((void *)v89 + 1);
  *(void *)char v88 = *(void *)v89;
  *((void *)v88 + 1) = v90;
  uint64_t v91 = v82[7];
  unint64_t v92 = &v80[v91];
  uint64_t v93 = &v81[v91];
  uint64_t v94 = (int *)_s5EntryVMa();
  uint64_t v95 = *((void *)v94 - 1);
  uint64_t v96 = *(unsigned int (**)(char *, uint64_t, int *))(v95 + 48);
  swift_bridgeObjectRetain();
  if (v96(v93, 1, v94))
  {
    sub_255FBCA9C(0, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
    memcpy(v92, v93, *(void *)(*(void *)(v97 - 8) + 64));
  }
  else
  {
    uint64_t v98 = sub_2561758A8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 16))(v92, v93, v98);
    uint64_t v99 = v94[5];
    uint64_t v100 = &v92[v99];
    uint64_t v101 = &v93[v99];
    uint64_t v102 = *((void *)v101 + 1);
    *(void *)uint64_t v100 = *(void *)v101;
    *((void *)v100 + 1) = v102;
    uint64_t v103 = v94[6];
    uint64_t v104 = &v92[v103];
    uint64_t v105 = &v93[v103];
    uint64_t v106 = *((void *)v105 + 1);
    *(void *)uint64_t v104 = *(void *)v105;
    *((void *)v104 + 1) = v106;
    uint64_t v107 = v94[7];
    uint64_t v108 = &v92[v107];
    uint64_t v109 = &v93[v107];
    uint64_t v110 = *((void *)v109 + 1);
    *(void *)uint64_t v108 = *(void *)v109;
    *((void *)v108 + 1) = v110;
    uint64_t v111 = v94[8];
    uint64_t v112 = &v92[v111];
    uint64_t v113 = &v93[v111];
    uint64_t v114 = *((void *)v113 + 1);
    *(void *)uint64_t v112 = *(void *)v113;
    *((void *)v112 + 1) = v114;
    *(void *)&v92[v94[9]] = *(void *)&v93[v94[9]];
    uint64_t v115 = *(void (**)(char *, void, uint64_t, int *))(v95 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v115(v92, 0, 1, v94);
  }
  *(void *)&v80[v82[8]] = *(void *)&v81[v82[8]];
  *(void *)&v80[v82[9]] = *(void *)&v81[v82[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v122;
}

void *sub_255FB84C0(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_255FB9754((uint64_t)a1, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    sub_255FBCA9C(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, v6);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_256176AA8();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v134 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48);
      uint64_t v131 = a3;
      uint64_t v132 = v8;
      if (v134(a2, 1, v7))
      {
        sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      uint64_t v10 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v11 = v10[5];
      unint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_256176158();
      uint64_t v15 = (void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      uint64_t v133 = *v15;
      (*v15)(v12, v13, v14);
      *((unsigned char *)a1 + v10[6]) = *((unsigned char *)a2 + v10[6]);
      uint64_t v16 = v10[7];
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = sub_256175D98();
      uint64_t v130 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
      v130(v17, v18, v19);
      uint64_t v20 = v10[8];
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      if (v134((void *)((char *)a2 + v20), 1, v7))
      {
        sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v21, v22, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v132 + 56))(v21, 0, 1, v7);
      }
      uint64_t v24 = _s6StylesV8TimelineVMa(0);
      v133(&v21[*(int *)(v24 + 20)], &v22[*(int *)(v24 + 20)], v14);
      uint64_t v25 = v10[9];
      uint64_t v26 = (char *)a1 + v25;
      uint64_t v27 = (char *)a2 + v25;
      if (v134((void *)((char *)a2 + v25), 1, v7))
      {
        sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v26, v27, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v132 + 56))(v26, 0, 1, v7);
      }
      uint64_t v29 = _s6StylesV6NoDataVMa(0);
      v133(&v26[*(int *)(v29 + 20)], &v27[*(int *)(v29 + 20)], v14);
      v26[*(int *)(v29 + 24)] = v27[*(int *)(v29 + 24)];
      uint64_t v30 = v10[10];
      uint64_t v31 = (char *)a1 + v30;
      uint64_t v32 = (char *)a2 + v30;
      if (v134((void *)((char *)a2 + v30), 1, v7))
      {
        sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v31, v32, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v132 + 56))(v31, 0, 1, v7);
      }
      uint64_t v34 = _s6StylesV11PlaceholderVMa(0);
      v133(&v31[*(int *)(v34 + 20)], &v32[*(int *)(v34 + 20)], v14);
      uint64_t v35 = v10[11];
      uint64_t v36 = (char *)a1 + v35;
      uint64_t v37 = (char *)a2 + v35;
      if (v134((void *)((char *)a2 + v35), 1, v7))
      {
        sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v36, v37, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v132 + 56))(v36, 0, 1, v7);
      }
      uint64_t v39 = _s6StylesV6SymbolVMa(0);
      v133(&v36[*(int *)(v39 + 20)], &v37[*(int *)(v39 + 20)], v14);
      uint64_t v40 = v10[12];
      uint64_t v41 = (char *)a1 + v40;
      uint64_t v42 = (char *)a2 + v40;
      if (v134((void *)((char *)a2 + v40), 1, v7))
      {
        sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v41, v42, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v132 + 56))(v41, 0, 1, v7);
      }
      uint64_t v44 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v133(&v41[v44[5]], &v42[v44[5]], v14);
      v41[v44[6]] = v42[v44[6]];
      v130(&v41[v44[7]], &v42[v44[7]], v19);
      uint64_t v45 = v10[13];
      uint64_t v46 = (char *)a1 + v45;
      uint64_t v47 = (char *)a2 + v45;
      if (v134((void *)((char *)a2 + v45), 1, v7))
      {
        sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
        uint64_t v49 = v132;
      }
      else
      {
        uint64_t v49 = v132;
        (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v46, v47, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v132 + 56))(v46, 0, 1, v7);
      }
      uint64_t v50 = _s6StylesV5EmptyVMa(0);
      v133(&v46[*(int *)(v50 + 20)], &v47[*(int *)(v50 + 20)], v14);
      v46[*(int *)(v50 + 24)] = v47[*(int *)(v50 + 24)];
      uint64_t v51 = v10[14];
      uint64_t v52 = (char *)a1 + v51;
      uint64_t v53 = (char *)a2 + v51;
      if (v134((void *)((char *)a2 + v51), 1, v7))
      {
        sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v52, v53, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v52, 0, 1, v7);
      }
      uint64_t v55 = _s6StylesV5DailyVMa(0);
      v133(&v52[*(int *)(v55 + 20)], &v53[*(int *)(v55 + 20)], v14);
      v52[*(int *)(v55 + 24)] = v53[*(int *)(v55 + 24)];
      uint64_t v56 = v10[15];
      uint64_t v57 = (char *)a1 + v56;
      uint64_t v58 = (char *)a2 + v56;
      if (v134((void *)((char *)a2 + v56), 1, v7))
      {
        sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v57, v58, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v57, 0, 1, v7);
      }
      uint64_t v60 = _s6StylesV9MomentaryVMa(0);
      v133(&v57[*(int *)(v60 + 20)], &v58[*(int *)(v60 + 20)], v14);
      uint64_t v61 = v10[16];
      uint64_t v62 = (char *)a1 + v61;
      uint64_t v63 = (char *)a2 + v61;
      if (v134((void *)((char *)a2 + v61), 1, v7))
      {
        sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v62, v63, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v62, 0, 1, v7);
      }
      uint64_t v65 = _s6StylesV6HeaderVMa(0);
      v133(&v62[*(int *)(v65 + 20)], &v63[*(int *)(v65 + 20)], v14);
      uint64_t v66 = v10[17];
      uint64_t v67 = (char *)a1 + v66;
      uint64_t v68 = (char *)a2 + v66;
      if (v134((void *)((char *)a2 + v66), 1, v7))
      {
        sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v67, v68, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v67, 0, 1, v7);
      }
      uint64_t v70 = _s6StylesV11ChartButtonVMa(0);
      v133(&v67[*(int *)(v70 + 20)], &v68[*(int *)(v70 + 20)], v14);
      uint64_t v71 = v10[18];
      uint64_t v72 = (char *)a1 + v71;
      uint64_t v73 = (char *)a2 + v71;
      if (v134((void *)((char *)a2 + v71), 1, v7))
      {
        sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v72, v73, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v72, 0, 1, v7);
      }
      uint64_t v75 = _s6StylesV15LogButtonFooterVMa(0);
      v133(&v72[*(int *)(v75 + 20)], &v73[*(int *)(v75 + 20)], v14);
      a3 = v131;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v76 = *(int *)(a3 + 20);
    uint64_t v77 = (void *)((char *)a1 + v76);
    uint64_t v78 = (void *)((char *)a2 + v76);
    uint64_t v79 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    id v80 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_255FB9754((uint64_t)a1 + v76, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    sub_255FBCA9C(0, &qword_269F47D00, v79, v80);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v81 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v81 - 8) + 16))(v77, v78, v81);
    }
    else
    {
      *uint64_t v77 = *v78;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v82 = *(int *)(a3 + 24);
  uint64_t v135 = a1;
  uint64_t v83 = (char *)a1 + v82;
  char v84 = (char *)a2 + v82;
  *(void *)((char *)a1 + v82) = *(void *)((char *)a2 + v82);
  id v85 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  uint64_t v86 = v85[5];
  uint64_t v87 = &v83[v86];
  char v88 = &v84[v86];
  uint64_t v89 = sub_256177DB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 24))(v87, v88, v89);
  uint64_t v90 = v85[6];
  uint64_t v91 = &v83[v90];
  unint64_t v92 = &v84[v90];
  *(void *)uint64_t v91 = *(void *)v92;
  *((void *)v91 + 1) = *((void *)v92 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v93 = v85[7];
  uint64_t v94 = &v83[v93];
  uint64_t v95 = &v84[v93];
  uint64_t v96 = (int *)_s5EntryVMa();
  uint64_t v97 = *((void *)v96 - 1);
  uint64_t v98 = *(uint64_t (**)(char *, uint64_t, int *))(v97 + 48);
  int v99 = v98(v94, 1, v96);
  int v100 = v98(v95, 1, v96);
  if (!v99)
  {
    if (!v100)
    {
      uint64_t v117 = sub_2561758A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 24))(v94, v95, v117);
      uint64_t v118 = v96[5];
      uint64_t v119 = &v94[v118];
      uint64_t v120 = &v95[v118];
      *(void *)uint64_t v119 = *(void *)v120;
      *((void *)v119 + 1) = *((void *)v120 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v121 = v96[6];
      uint64_t v122 = &v94[v121];
      uint64_t v123 = &v95[v121];
      *(void *)uint64_t v122 = *(void *)v123;
      *((void *)v122 + 1) = *((void *)v123 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v124 = v96[7];
      uint64_t v125 = &v94[v124];
      BOOL v126 = &v95[v124];
      *(void *)uint64_t v125 = *(void *)v126;
      *((void *)v125 + 1) = *((void *)v126 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v127 = v96[8];
      uint64_t v128 = &v94[v127];
      unsigned __int8 v129 = &v95[v127];
      *(void *)uint64_t v128 = *(void *)v129;
      *((void *)v128 + 1) = *((void *)v129 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v94[v96[9]] = *(void *)&v95[v96[9]];
      goto LABEL_51;
    }
    sub_255FB97B0((uint64_t)v94, (uint64_t (*)(void))_s5EntryVMa);
    goto LABEL_50;
  }
  if (v100)
  {
LABEL_50:
    sub_255FBCA9C(0, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
    memcpy(v94, v95, *(void *)(*(void *)(v115 - 8) + 64));
    goto LABEL_51;
  }
  uint64_t v101 = sub_2561758A8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 16))(v94, v95, v101);
  uint64_t v102 = v96[5];
  uint64_t v103 = &v94[v102];
  uint64_t v104 = &v95[v102];
  *(void *)uint64_t v103 = *(void *)v104;
  *((void *)v103 + 1) = *((void *)v104 + 1);
  uint64_t v105 = v96[6];
  uint64_t v106 = &v94[v105];
  uint64_t v107 = &v95[v105];
  *(void *)uint64_t v106 = *(void *)v107;
  *((void *)v106 + 1) = *((void *)v107 + 1);
  uint64_t v108 = v96[7];
  uint64_t v109 = &v94[v108];
  uint64_t v110 = &v95[v108];
  *(void *)uint64_t v109 = *(void *)v110;
  *((void *)v109 + 1) = *((void *)v110 + 1);
  uint64_t v111 = v96[8];
  uint64_t v112 = &v94[v111];
  uint64_t v113 = &v95[v111];
  *(void *)uint64_t v112 = *(void *)v113;
  *((void *)v112 + 1) = *((void *)v113 + 1);
  *(void *)&v94[v96[9]] = *(void *)&v95[v96[9]];
  uint64_t v114 = *(void (**)(char *, void, uint64_t, int *))(v97 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v114(v94, 0, 1, v96);
LABEL_51:
  *(void *)&v83[v85[8]] = *(void *)&v84[v85[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v83[v85[9]] = *(void *)&v84[v85[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v135;
}

uint64_t sub_255FB9754(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_255FBCA9C(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_255FB97B0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *sub_255FB9810(char *a1, char *a2, uint64_t a3)
{
  sub_255FBCA9C(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  uint64_t v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_256176AA8();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v103 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    uint64_t v101 = v9;
    if (v103(a2, 1, v8))
    {
      sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    uint64_t v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v12 = v11[5];
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    uint64_t v15 = sub_256176158();
    uint64_t v16 = (void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
    uint64_t v102 = *v16;
    (*v16)(v13, v14, v15);
    a1[v11[6]] = a2[v11[6]];
    uint64_t v17 = v11[7];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    uint64_t v20 = sub_256175D98();
    int v99 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32);
    v99(v18, v19, v20);
    uint64_t v21 = v11[8];
    uint64_t v22 = &a1[v21];
    uint64_t v23 = &a2[v21];
    if (v103(&a2[v21], 1, v8))
    {
      sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v22, v23, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v22, 0, 1, v8);
    }
    uint64_t v25 = _s6StylesV8TimelineVMa(0);
    v102(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
    uint64_t v26 = v11[9];
    uint64_t v27 = &a1[v26];
    uint64_t v28 = &a2[v26];
    uint64_t v100 = a3;
    if (v103(&a2[v26], 1, v8))
    {
      sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v27, v28, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v27, 0, 1, v8);
    }
    uint64_t v30 = _s6StylesV6NoDataVMa(0);
    v102(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
    v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
    uint64_t v31 = v11[10];
    uint64_t v32 = &a1[v31];
    uint64_t v33 = &a2[v31];
    if (v103(&a2[v31], 1, v8))
    {
      sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v32, v33, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v32, 0, 1, v8);
    }
    uint64_t v35 = _s6StylesV11PlaceholderVMa(0);
    v102(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
    uint64_t v36 = v11[11];
    uint64_t v37 = &a1[v36];
    uint64_t v38 = &a2[v36];
    if (v103(&a2[v36], 1, v8))
    {
      sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v37, v38, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v37, 0, 1, v8);
    }
    uint64_t v40 = _s6StylesV6SymbolVMa(0);
    v102(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
    uint64_t v41 = v11[12];
    uint64_t v42 = &a1[v41];
    uint64_t v43 = &a2[v41];
    if (v103(&a2[v41], 1, v8))
    {
      sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v42, v43, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v42, 0, 1, v8);
    }
    uint64_t v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v102(&v42[v45[5]], &v43[v45[5]], v15);
    v42[v45[6]] = v43[v45[6]];
    v99(&v42[v45[7]], &v43[v45[7]], v20);
    uint64_t v46 = v11[13];
    uint64_t v47 = &a1[v46];
    uint64_t v48 = &a2[v46];
    if (v103(&a2[v46], 1, v8))
    {
      sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
      uint64_t v50 = v101;
    }
    else
    {
      uint64_t v50 = v101;
      (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v47, v48, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v47, 0, 1, v8);
    }
    uint64_t v51 = _s6StylesV5EmptyVMa(0);
    v102(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
    v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
    uint64_t v52 = v11[14];
    uint64_t v53 = &a1[v52];
    uint64_t v54 = &a2[v52];
    if (v103(&a2[v52], 1, v8))
    {
      sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v53, v54, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v8);
    }
    uint64_t v56 = _s6StylesV5DailyVMa(0);
    v102(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
    v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
    uint64_t v57 = v11[15];
    uint64_t v58 = &a1[v57];
    uint64_t v59 = &a2[v57];
    if (v103(&a2[v57], 1, v8))
    {
      sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v58, v59, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v8);
    }
    a3 = v100;
    uint64_t v61 = _s6StylesV9MomentaryVMa(0);
    v102(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
    uint64_t v62 = v11[16];
    uint64_t v63 = &a1[v62];
    uint64_t v64 = &a2[v62];
    if (v103(&a2[v62], 1, v8))
    {
      sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v63, v64, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v8);
    }
    uint64_t v66 = _s6StylesV6HeaderVMa(0);
    v102(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
    uint64_t v67 = v11[17];
    uint64_t v68 = &a1[v67];
    uint64_t v69 = &a2[v67];
    if (v103(&a2[v67], 1, v8))
    {
      sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v68, v69, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v8);
    }
    uint64_t v71 = _s6StylesV11ChartButtonVMa(0);
    v102(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
    uint64_t v72 = v11[18];
    uint64_t v73 = &a1[v72];
    uint64_t v74 = &a2[v72];
    if (v103(&a2[v72], 1, v8))
    {
      sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v73, v74, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v8);
    }
    uint64_t v76 = _s6StylesV15LogButtonFooterVMa(0);
    v102(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  uint64_t v77 = *(int *)(a3 + 20);
  uint64_t v78 = &a1[v77];
  uint64_t v79 = &a2[v77];
  sub_255FBCA9C(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  uint64_t v81 = v80;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v82 = sub_256175D98();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 32))(v78, v79, v82);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v78, v79, *(void *)(*(void *)(v81 - 8) + 64));
  }
  uint64_t v83 = *(int *)(a3 + 24);
  char v84 = &a1[v83];
  id v85 = &a2[v83];
  *(void *)&a1[v83] = *(void *)&a2[v83];
  uint64_t v86 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  uint64_t v87 = v86[5];
  char v88 = &v84[v87];
  uint64_t v89 = &v85[v87];
  uint64_t v90 = sub_256177DB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 32))(v88, v89, v90);
  *(_OWORD *)&v84[v86[6]] = *(_OWORD *)&v85[v86[6]];
  uint64_t v91 = v86[7];
  unint64_t v92 = &v84[v91];
  uint64_t v93 = &v85[v91];
  uint64_t v94 = (int *)_s5EntryVMa();
  uint64_t v95 = *((void *)v94 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v95 + 48))(v93, 1, v94))
  {
    sub_255FBCA9C(0, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
    memcpy(v92, v93, *(void *)(*(void *)(v96 - 8) + 64));
  }
  else
  {
    uint64_t v97 = sub_2561758A8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 32))(v92, v93, v97);
    *(_OWORD *)&v92[v94[5]] = *(_OWORD *)&v93[v94[5]];
    *(_OWORD *)&v92[v94[6]] = *(_OWORD *)&v93[v94[6]];
    *(_OWORD *)&v92[v94[7]] = *(_OWORD *)&v93[v94[7]];
    *(_OWORD *)&v92[v94[8]] = *(_OWORD *)&v93[v94[8]];
    *(void *)&v92[v94[9]] = *(void *)&v93[v94[9]];
    (*(void (**)(char *, void, uint64_t, int *))(v95 + 56))(v92, 0, 1, v94);
  }
  *(void *)&v84[v86[8]] = *(void *)&v85[v86[8]];
  *(void *)&v84[v86[9]] = *(void *)&v85[v86[9]];
  return a1;
}

char *sub_255FBA89C(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_255FB9754((uint64_t)a1, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    sub_255FBCA9C(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, v6);
    uint64_t v8 = v7;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_256176AA8();
      uint64_t v10 = *(void *)(v9 - 8);
      uint64_t v135 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
      uint64_t v132 = a3;
      uint64_t v133 = v10;
      if (v135(a2, 1, v9))
      {
        sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(a1, a2, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
      }
      uint64_t v12 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v13 = v12[5];
      uint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      uint64_t v16 = sub_256176158();
      uint64_t v17 = (void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32);
      uint64_t v134 = *v17;
      (*v17)(v14, v15, v16);
      a1[v12[6]] = a2[v12[6]];
      uint64_t v18 = v12[7];
      uint64_t v19 = &a1[v18];
      uint64_t v20 = &a2[v18];
      uint64_t v21 = sub_256175D98();
      uint64_t v131 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32);
      v131(v19, v20, v21);
      uint64_t v22 = v12[8];
      uint64_t v23 = &a1[v22];
      uint64_t v24 = &a2[v22];
      if (v135(&a2[v22], 1, v9))
      {
        sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v133 + 32))(v23, v24, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v133 + 56))(v23, 0, 1, v9);
      }
      uint64_t v26 = _s6StylesV8TimelineVMa(0);
      v134(&v23[*(int *)(v26 + 20)], &v24[*(int *)(v26 + 20)], v16);
      uint64_t v27 = v12[9];
      uint64_t v28 = &a1[v27];
      uint64_t v29 = &a2[v27];
      if (v135(&a2[v27], 1, v9))
      {
        sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v133 + 32))(v28, v29, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v133 + 56))(v28, 0, 1, v9);
      }
      uint64_t v31 = _s6StylesV6NoDataVMa(0);
      v134(&v28[*(int *)(v31 + 20)], &v29[*(int *)(v31 + 20)], v16);
      v28[*(int *)(v31 + 24)] = v29[*(int *)(v31 + 24)];
      uint64_t v32 = v12[10];
      uint64_t v33 = &a1[v32];
      uint64_t v34 = &a2[v32];
      if (v135(&a2[v32], 1, v9))
      {
        sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v133 + 32))(v33, v34, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v133 + 56))(v33, 0, 1, v9);
      }
      uint64_t v36 = _s6StylesV11PlaceholderVMa(0);
      v134(&v33[*(int *)(v36 + 20)], &v34[*(int *)(v36 + 20)], v16);
      uint64_t v37 = v12[11];
      uint64_t v38 = &a1[v37];
      uint64_t v39 = &a2[v37];
      if (v135(&a2[v37], 1, v9))
      {
        sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v133 + 32))(v38, v39, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v133 + 56))(v38, 0, 1, v9);
      }
      uint64_t v41 = _s6StylesV6SymbolVMa(0);
      v134(&v38[*(int *)(v41 + 20)], &v39[*(int *)(v41 + 20)], v16);
      uint64_t v42 = v12[12];
      uint64_t v43 = &a1[v42];
      uint64_t v44 = &a2[v42];
      if (v135(&a2[v42], 1, v9))
      {
        sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v133 + 32))(v43, v44, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v133 + 56))(v43, 0, 1, v9);
      }
      uint64_t v46 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v134(&v43[v46[5]], &v44[v46[5]], v16);
      v43[v46[6]] = v44[v46[6]];
      v131(&v43[v46[7]], &v44[v46[7]], v21);
      uint64_t v47 = v12[13];
      uint64_t v48 = &a1[v47];
      uint64_t v49 = &a2[v47];
      if (v135(&a2[v47], 1, v9))
      {
        sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
        uint64_t v51 = v133;
      }
      else
      {
        uint64_t v51 = v133;
        (*(void (**)(char *, char *, uint64_t))(v133 + 32))(v48, v49, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v133 + 56))(v48, 0, 1, v9);
      }
      uint64_t v52 = _s6StylesV5EmptyVMa(0);
      v134(&v48[*(int *)(v52 + 20)], &v49[*(int *)(v52 + 20)], v16);
      v48[*(int *)(v52 + 24)] = v49[*(int *)(v52 + 24)];
      uint64_t v53 = v12[14];
      uint64_t v54 = &a1[v53];
      uint64_t v55 = &a2[v53];
      if (v135(&a2[v53], 1, v9))
      {
        sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v54, v55, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v54, 0, 1, v9);
      }
      uint64_t v57 = _s6StylesV5DailyVMa(0);
      v134(&v54[*(int *)(v57 + 20)], &v55[*(int *)(v57 + 20)], v16);
      v54[*(int *)(v57 + 24)] = v55[*(int *)(v57 + 24)];
      uint64_t v58 = v12[15];
      uint64_t v59 = &a1[v58];
      uint64_t v60 = &a2[v58];
      if (v135(&a2[v58], 1, v9))
      {
        sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v59, v60, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v59, 0, 1, v9);
      }
      uint64_t v62 = _s6StylesV9MomentaryVMa(0);
      v134(&v59[*(int *)(v62 + 20)], &v60[*(int *)(v62 + 20)], v16);
      uint64_t v63 = v12[16];
      uint64_t v64 = &a1[v63];
      uint64_t v65 = &a2[v63];
      if (v135(&a2[v63], 1, v9))
      {
        sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v64, v65, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v64, 0, 1, v9);
      }
      uint64_t v67 = _s6StylesV6HeaderVMa(0);
      v134(&v64[*(int *)(v67 + 20)], &v65[*(int *)(v67 + 20)], v16);
      uint64_t v68 = v12[17];
      uint64_t v69 = &a1[v68];
      uint64_t v70 = &a2[v68];
      if (v135(&a2[v68], 1, v9))
      {
        sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v69, v70, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v69, 0, 1, v9);
      }
      uint64_t v72 = _s6StylesV11ChartButtonVMa(0);
      v134(&v69[*(int *)(v72 + 20)], &v70[*(int *)(v72 + 20)], v16);
      uint64_t v73 = v12[18];
      uint64_t v74 = &a1[v73];
      uint64_t v75 = &a2[v73];
      if (v135(&a2[v73], 1, v9))
      {
        sub_255FBCA9C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v74, v75, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v74, 0, 1, v9);
      }
      uint64_t v77 = _s6StylesV15LogButtonFooterVMa(0);
      v134(&v74[*(int *)(v77 + 20)], &v75[*(int *)(v77 + 20)], v16);
      swift_storeEnumTagMultiPayload();
      a3 = v132;
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    uint64_t v78 = *(int *)(a3 + 20);
    uint64_t v79 = &a1[v78];
    uint64_t v80 = &a2[v78];
    uint64_t v81 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    uint64_t v82 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_255FB9754((uint64_t)&a1[v78], &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    sub_255FBCA9C(0, &qword_269F47D00, v81, v82);
    uint64_t v84 = v83;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v85 = sub_256175D98();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 32))(v79, v80, v85);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v79, v80, *(void *)(*(void *)(v84 - 8) + 64));
    }
  }
  uint64_t v86 = *(int *)(a3 + 24);
  uint64_t v136 = a1;
  uint64_t v87 = &a1[v86];
  char v88 = &a2[v86];
  *(void *)&a1[v86] = *(void *)&a2[v86];
  uint64_t v89 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  uint64_t v90 = v89[5];
  uint64_t v91 = &v87[v90];
  unint64_t v92 = &v88[v90];
  uint64_t v93 = sub_256177DB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 40))(v91, v92, v93);
  uint64_t v94 = v89[6];
  uint64_t v95 = &v87[v94];
  uint64_t v96 = &v88[v94];
  uint64_t v98 = *(void *)v96;
  uint64_t v97 = *((void *)v96 + 1);
  *(void *)uint64_t v95 = v98;
  *((void *)v95 + 1) = v97;
  swift_bridgeObjectRelease();
  uint64_t v99 = v89[7];
  uint64_t v100 = &v87[v99];
  uint64_t v101 = &v88[v99];
  uint64_t v102 = (int *)_s5EntryVMa();
  uint64_t v103 = *((void *)v102 - 1);
  uint64_t v104 = *(uint64_t (**)(char *, uint64_t, int *))(v103 + 48);
  int v105 = v104(v100, 1, v102);
  int v106 = v104(v101, 1, v102);
  if (!v105)
  {
    if (!v106)
    {
      uint64_t v110 = sub_2561758A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 40))(v100, v101, v110);
      uint64_t v111 = v102[5];
      uint64_t v112 = &v100[v111];
      uint64_t v113 = &v101[v111];
      uint64_t v115 = *(void *)v113;
      uint64_t v114 = *((void *)v113 + 1);
      *(void *)uint64_t v112 = v115;
      *((void *)v112 + 1) = v114;
      swift_bridgeObjectRelease();
      uint64_t v116 = v102[6];
      uint64_t v117 = &v100[v116];
      uint64_t v118 = &v101[v116];
      uint64_t v120 = *(void *)v118;
      uint64_t v119 = *((void *)v118 + 1);
      *(void *)uint64_t v117 = v120;
      *((void *)v117 + 1) = v119;
      swift_bridgeObjectRelease();
      uint64_t v121 = v102[7];
      uint64_t v122 = &v100[v121];
      uint64_t v123 = &v101[v121];
      uint64_t v125 = *(void *)v123;
      uint64_t v124 = *((void *)v123 + 1);
      *(void *)uint64_t v122 = v125;
      *((void *)v122 + 1) = v124;
      swift_bridgeObjectRelease();
      uint64_t v126 = v102[8];
      uint64_t v127 = &v100[v126];
      uint64_t v128 = &v101[v126];
      uint64_t v130 = *(void *)v128;
      uint64_t v129 = *((void *)v128 + 1);
      *(void *)uint64_t v127 = v130;
      *((void *)v127 + 1) = v129;
      swift_bridgeObjectRelease();
      *(void *)&v100[v102[9]] = *(void *)&v101[v102[9]];
      goto LABEL_50;
    }
    sub_255FB97B0((uint64_t)v100, (uint64_t (*)(void))_s5EntryVMa);
    goto LABEL_49;
  }
  if (v106)
  {
LABEL_49:
    sub_255FBCA9C(0, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
    memcpy(v100, v101, *(void *)(*(void *)(v108 - 8) + 64));
    goto LABEL_50;
  }
  uint64_t v107 = sub_2561758A8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 32))(v100, v101, v107);
  *(_OWORD *)&v100[v102[5]] = *(_OWORD *)&v101[v102[5]];
  *(_OWORD *)&v100[v102[6]] = *(_OWORD *)&v101[v102[6]];
  *(_OWORD *)&v100[v102[7]] = *(_OWORD *)&v101[v102[7]];
  *(_OWORD *)&v100[v102[8]] = *(_OWORD *)&v101[v102[8]];
  *(void *)&v100[v102[9]] = *(void *)&v101[v102[9]];
  (*(void (**)(char *, void, uint64_t, int *))(v103 + 56))(v100, 0, 1, v102);
LABEL_50:
  *(void *)&v87[v89[8]] = *(void *)&v88[v89[8]];
  swift_bridgeObjectRelease();
  *(void *)&v87[v89[9]] = *(void *)&v88[v89[9]];
  swift_bridgeObjectRelease();
  return v136;
}

uint64_t sub_255FBBA84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255FBBA98);
}

uint64_t sub_255FBBA98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_255FBCA9C(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  sub_255FBCA9C(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = type metadata accessor for StateOfMindTimeline.DaySummary();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t sub_255FBBC44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255FBBC58);
}

uint64_t sub_255FBBC58(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_255FBCA9C(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  sub_255FBCA9C(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = type metadata accessor for StateOfMindTimeline.DaySummary();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

uint64_t _s22DaySummaryGradientViewVMa()
{
  uint64_t result = qword_269F43B30;
  if (!qword_269F43B30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_255FBBE5C()
{
  sub_255FBCA9C(319, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (v0 <= 0x3F)
  {
    sub_255FBCA9C(319, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    if (v1 <= 0x3F)
    {
      type metadata accessor for StateOfMindTimeline.DaySummary();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_255FBBFC0()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_255FBBFDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
  uint64_t v2 = MEMORY[0x270FA5388](v28);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v27 - v5;
  uint64_t v7 = type metadata accessor for StateOfMindTimeline.Styles(0);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v27 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v27 - v14;
  sub_255FBC7F0();
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_2561A0040;
  *(void *)(v16 + 32) = sub_255FBC328();
  sub_256119CA0((uint64_t)v15);
  uint64_t v27 = v7;
  sub_255FBC848((uint64_t)&v15[*(int *)(v7 + 48)], (uint64_t)v6);
  sub_255FB97B0((uint64_t)v15, type metadata accessor for StateOfMindTimeline.Styles);
  uint64_t v17 = sub_25604A3E0();
  sub_255FB97B0((uint64_t)v6, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  *(void *)(v16 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v17;
  uint64_t v29 = v16;
  sub_256178018();
  uint64_t v18 = MEMORY[0x25A2A0310](v29);
  sub_256119CA0((uint64_t)v13);
  sub_255FB97B0((uint64_t)v13, type metadata accessor for StateOfMindTimeline.Styles);
  id result = objc_msgSend(self, sel_sharedBehavior);
  if (result)
  {
    uint64_t v20 = result;
    objc_msgSend(result, sel_isiPad);

    sub_256119CA0((uint64_t)v10);
    sub_255FBC848((uint64_t)&v10[*(int *)(v27 + 48)], (uint64_t)v4);
    sub_255FB97B0((uint64_t)v10, type metadata accessor for StateOfMindTimeline.Styles);
    sub_255FB97B0((uint64_t)v4, type metadata accessor for StateOfMindTimeline.Styles.Entry);
    sub_2561778E8();
    sub_256175F38();
    uint64_t v21 = v29;
    char v22 = v30;
    uint64_t v23 = v31;
    char v24 = v32;
    uint64_t v25 = v33;
    uint64_t v26 = v34;
    id result = (id)sub_256177478();
    *(void *)a1 = v18;
    *(void *)(a1 + 8) = v21;
    *(unsigned char *)(a1 + 16) = v22;
    *(void *)(a1 + 24) = v23;
    *(unsigned char *)(a1 + 32) = v24;
    *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v25;
    *(void *)(a1 + 48) = v26;
    *(void *)(a1 + 56) = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_255FBC328()
{
  uint64_t v1 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v30 = (uint64_t)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_256175D98();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  char v32 = (char *)&v29 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v31 = (uint64_t)&v29 - v10;
  sub_255FBCA9C(0, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v29 - v12;
  uint64_t v14 = _s5EntryVMa();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v0 + *(int *)(_s22DaySummaryGradientViewVMa() + 24);
  uint64_t v19 = type metadata accessor for StateOfMindTimeline.DaySummary();
  sub_255FBC8AC(v18 + *(int *)(v19 + 28), (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_255FB9754((uint64_t)v13, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
    uint64_t v20 = v30;
    sub_256119CA0(v30);
    sub_255FB97B0(v20, type metadata accessor for StateOfMindTimeline.Styles);
    sub_256177458();
    uint64_t v21 = sub_256177498();
    swift_release();
  }
  else
  {
    sub_255FBC940((uint64_t)v13, (uint64_t)v17);
    uint64_t v22 = v31;
    sub_25611A114(v31);
    double v23 = *(double *)&v17[*(int *)(v14 + 36)];
    char v24 = v32;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v32, v22, v3);
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v7, *MEMORY[0x263F184F8], v3);
    sub_256175D88();
    uint64_t v25 = *(void (**)(char *, uint64_t))(v4 + 8);
    v25(v7, v3);
    swift_getKeyPath();
    sub_2560AAD50(fmax(fmin(v23, 1.0), -1.0));
    uint64_t v27 = v26;
    swift_release();
    uint64_t v21 = MEMORY[0x25A29FE60](v27);
    v25(v24, v3);
    v25((char *)v22, v3);
    sub_255FB97B0((uint64_t)v17, (uint64_t (*)(void))_s5EntryVMa);
  }
  return v21;
}

__n128 sub_255FBC770@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v2 = sub_256176788();
  sub_255FBBFDC((uint64_t)v10);
  unint64_t v3 = v10[0];
  unint64_t v4 = v10[1];
  unsigned __int8 v5 = v11;
  unint64_t v6 = v12;
  unsigned __int8 v7 = v13;
  unint64_t v8 = v15;
  __n128 result = v14;
  a1->n128_u64[0] = v2;
  a1->n128_u64[1] = 0;
  a1[1].n128_u8[0] = 1;
  a1[1].n128_u64[1] = v3;
  a1[2].n128_u64[0] = v4;
  a1[2].n128_u8[8] = v5;
  a1[3].n128_u64[0] = v6;
  a1[3].n128_u8[8] = v7;
  a1[4] = result;
  a1[5].n128_u64[0] = v8;
  return result;
}

void sub_255FBC7F0()
{
  if (!qword_269F42F40)
  {
    unint64_t v0 = sub_2561787F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F42F40);
    }
  }
}

uint64_t sub_255FBC848(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_255FBC8AC(uint64_t a1, uint64_t a2)
{
  sub_255FBCA9C(0, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_255FBC940(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s5EntryVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_255FBC9B0()
{
  unint64_t result = qword_269F43B40;
  if (!qword_269F43B40)
  {
    sub_255FBCA08();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43B40);
  }
  return result;
}

void sub_255FBCA08()
{
  if (!qword_269F43B48)
  {
    sub_255FBCA9C(255, &qword_269F43B50, (uint64_t (*)(uint64_t))sub_255FBCB00, MEMORY[0x263F1BAC8]);
    sub_255FBCCC0();
    unint64_t v0 = sub_2561776F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43B48);
    }
  }
}

void sub_255FBCA9C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_255FBCB00()
{
  if (!qword_269F43B58)
  {
    sub_255FBCB90();
    sub_255FBCC10(255, (unint64_t *)&qword_269F43B70, (unint64_t *)&qword_269F42BD0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F43B58);
    }
  }
}

void sub_255FBCB90()
{
  if (!qword_269F43B60)
  {
    sub_255FBCC10(255, &qword_269F43B68, &qword_269F42DC0);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43B60);
    }
  }
}

void sub_255FBCC10(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_255FBCC74(255, a3);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_255FBCC74(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_256176B78();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

unint64_t sub_255FBCCC0()
{
  unint64_t result = qword_269F43B78;
  if (!qword_269F43B78)
  {
    sub_255FBCA9C(255, &qword_269F43B50, (uint64_t (*)(uint64_t))sub_255FBCB00, MEMORY[0x263F1BAC8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43B78);
  }
  return result;
}

MentalHealthUI::MentalHealthAssessmentsAnalyticsStepType_optional __swiftcall MentalHealthAssessmentsAnalyticsStepType.init(rawValue:)(Swift::String rawValue)
{
  return (MentalHealthUI::MentalHealthAssessmentsAnalyticsStepType_optional)sub_255FBD758(v1);
}

unint64_t MentalHealthAssessmentsAnalyticsStepType.rawValue.getter()
{
  unint64_t result = 0xD000000000000010;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6574614720656741;
      break;
    case 2:
      unint64_t result = 0x6F72746E49;
      break;
    case 3:
      unint64_t result = 0x6E6F697473657551;
      break;
    case 4:
      unint64_t result = 0x746C75736552;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_255FBCE0C(unsigned __int8 *a1, char *a2)
{
  return sub_256120AD0(*a1, *a2);
}

uint64_t sub_255FBCE18()
{
  return sub_256120F78();
}

uint64_t sub_255FBCE20()
{
  sub_256177F38();

  return swift_bridgeObjectRelease();
}

uint64_t sub_255FBCF0C()
{
  return sub_256121AA4();
}

MentalHealthUI::MentalHealthAssessmentsAnalyticsStepType_optional sub_255FBCF14(Swift::String *a1)
{
  return MentalHealthAssessmentsAnalyticsStepType.init(rawValue:)(*a1);
}

void sub_255FBCF20(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0x80000002561A9E60;
  unint64_t v3 = 0xD000000000000010;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEF6F72746E492064;
      unint64_t v3 = 0x6574614720656741;
      goto LABEL_3;
    case 2:
      *a1 = 0x6F72746E49;
      a1[1] = 0xE500000000000000;
      break;
    case 3:
      *a1 = 0x6E6F697473657551;
      a1[1] = 0xE900000000000073;
      break;
    case 4:
      *a1 = 0x746C75736552;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

MentalHealthUI::MentalHealthAssessmentsAnalyticsActionType_optional __swiftcall MentalHealthAssessmentsAnalyticsActionType.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_2561786F8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 11;
  if (v3 < 0xB) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

unint64_t MentalHealthAssessmentsAnalyticsActionType.rawValue.getter()
{
  unint64_t result = 0x6E69676542;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x65736F6C43;
      break;
    case 2:
      unint64_t result = 1954047310;
      break;
    case 3:
      unint64_t result = 1701736260;
      break;
    case 4:
      unint64_t result = 0x74726F707845;
      break;
    case 5:
      unint64_t result = 0x20656C6369747241;
      break;
    case 6:
      unint64_t result = 0x696C43206F666E49;
      break;
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    case 8:
      unint64_t result = 0xD000000000000017;
      break;
    case 9:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 0xA:
      unint64_t result = 0xD000000000000025;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_255FBD194(unsigned __int8 *a1, char *a2)
{
  return sub_2561207D0(*a1, *a2);
}

uint64_t sub_255FBD1A0(uint64_t a1, uint64_t a2)
{
  return sub_255FBD65C(a1, a2, (void (*)(unsigned char *, uint64_t))sub_25612191C);
}

uint64_t sub_255FBD1B8()
{
  return sub_25612191C();
}

uint64_t sub_255FBD1C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_255FBD6CC(a1, a2, a3, (void (*)(unsigned char *, uint64_t))sub_25612191C);
}

MentalHealthUI::MentalHealthAssessmentsAnalyticsActionType_optional sub_255FBD1D8(Swift::String *a1)
{
  return MentalHealthAssessmentsAnalyticsActionType.init(rawValue:)(*a1);
}

unint64_t sub_255FBD1E4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = MentalHealthAssessmentsAnalyticsActionType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

MentalHealthUI::MentalHealthAssessmentsAnalyticsAssessmentType_optional __swiftcall MentalHealthAssessmentsAnalyticsAssessmentType.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_2561786F8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t MentalHealthAssessmentsAnalyticsAssessmentType.rawValue.getter()
{
  uint64_t v1 = 927220039;
  if (*v0 != 1) {
    uint64_t v1 = 0x50646E6137444147;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 961628240;
  }
}

uint64_t sub_255FBD2BC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_256120294(*a1, *a2);
}

uint64_t sub_255FBD2C8()
{
  return sub_256178928();
}

uint64_t sub_255FBD364()
{
  sub_256177F38();

  return swift_bridgeObjectRelease();
}

uint64_t sub_255FBD3EC()
{
  return sub_256178928();
}

MentalHealthUI::MentalHealthAssessmentsAnalyticsAssessmentType_optional sub_255FBD484(Swift::String *a1)
{
  return MentalHealthAssessmentsAnalyticsAssessmentType.init(rawValue:)(*a1);
}

void sub_255FBD490(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xE400000000000000;
  uint64_t v5 = 927220039;
  if (v2 != 1)
  {
    uint64_t v5 = 0x50646E6137444147;
    unint64_t v4 = 0xEB00000000395148;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 961628240;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

MentalHealthUI::MentalHealthAssessmentsAnalyticsEntryPoint_optional __swiftcall MentalHealthAssessmentsAnalyticsEntryPoint.init(rawValue:)(Swift::String rawValue)
{
  int v2 = v1;
  unint64_t v3 = sub_2561786F8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 10;
  if (v3 < 0xA) {
    char v5 = v3;
  }
  *int v2 = v5;
  return result;
}

unint64_t MentalHealthAssessmentsAnalyticsEntryPoint.rawValue.getter()
{
  unint64_t result = 0xD000000000000020;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000021;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0xD000000000000014;
      break;
    case 6:
      unint64_t result = 0xD000000000000021;
      break;
    case 9:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_255FBD638(unsigned __int8 *a1, char *a2)
{
  return sub_256120594(*a1, *a2);
}

uint64_t sub_255FBD644(uint64_t a1, uint64_t a2)
{
  return sub_255FBD65C(a1, a2, (void (*)(unsigned char *, uint64_t))sub_2561217F0);
}

uint64_t sub_255FBD65C(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t))
{
  uint64_t v5 = *v3;
  sub_2561788E8();
  a3(v7, v5);
  return sub_256178928();
}

uint64_t sub_255FBD6AC()
{
  return sub_2561217F0();
}

uint64_t sub_255FBD6B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_255FBD6CC(a1, a2, a3, (void (*)(unsigned char *, uint64_t))sub_2561217F0);
}

uint64_t sub_255FBD6CC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, uint64_t))
{
  uint64_t v6 = *v4;
  sub_2561788E8();
  a4(v8, v6);
  return sub_256178928();
}

MentalHealthUI::MentalHealthAssessmentsAnalyticsEntryPoint_optional sub_255FBD718(Swift::String *a1)
{
  return MentalHealthAssessmentsAnalyticsEntryPoint.init(rawValue:)(*a1);
}

unint64_t sub_255FBD724@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = MentalHealthAssessmentsAnalyticsEntryPoint.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

MentalHealthUI::MentalHealthAssessmentsAnalyticsProvenance_optional __swiftcall MentalHealthAssessmentsAnalyticsProvenance.init(rawValue:)(Swift::String rawValue)
{
  return (MentalHealthUI::MentalHealthAssessmentsAnalyticsProvenance_optional)sub_255FBD758(v1);
}

uint64_t sub_255FBD758@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_2561786F8();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 5;
  if (v2 < 5) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

unint64_t MentalHealthAssessmentsAnalyticsProvenance.rawValue.getter()
{
  unint64_t result = 0x7972616D6D7553;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x7079542065746144;
      break;
    case 2:
      unint64_t result = 0x656C6369747241;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x6163696669746F4ELL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_255FBD874()
{
  unint64_t result = qword_269F43B80;
  if (!qword_269F43B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43B80);
  }
  return result;
}

unint64_t sub_255FBD8CC()
{
  unint64_t result = qword_269F43B88;
  if (!qword_269F43B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43B88);
  }
  return result;
}

unint64_t sub_255FBD924()
{
  unint64_t result = qword_269F43B90;
  if (!qword_269F43B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43B90);
  }
  return result;
}

unint64_t sub_255FBD97C()
{
  unint64_t result = qword_269F43B98;
  if (!qword_269F43B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43B98);
  }
  return result;
}

uint64_t sub_255FBD9D0(unsigned __int8 *a1, char *a2)
{
  return sub_2561203A0(*a1, *a2);
}

unint64_t sub_255FBD9E0()
{
  unint64_t result = qword_269F43BA0;
  if (!qword_269F43BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43BA0);
  }
  return result;
}

uint64_t sub_255FBDA34()
{
  return sub_25612107C();
}

uint64_t sub_255FBDA3C()
{
  sub_256177F38();

  return swift_bridgeObjectRelease();
}

uint64_t sub_255FBDB30()
{
  return sub_256121BA4();
}

MentalHealthUI::MentalHealthAssessmentsAnalyticsProvenance_optional sub_255FBDB38(Swift::String *a1)
{
  return MentalHealthAssessmentsAnalyticsProvenance.init(rawValue:)(*a1);
}

void sub_255FBDB44(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x7972616D6D7553;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEE006D6F6F522065;
      uint64_t v3 = 0x7079542065746144;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x656C6369747241;
      *(void *)(a1 + 8) = 0xE700000000000000;
      break;
    case 3:
      *(void *)a1 = 0xD000000000000012;
      *(void *)(a1 + 8) = 0x80000002561AA110;
      break;
    case 4:
      strcpy((char *)a1, "Notification");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

ValueMetadata *type metadata accessor for MentalHealthAssessmentsAnalyticsStepType()
{
  return &type metadata for MentalHealthAssessmentsAnalyticsStepType;
}

unsigned char *storeEnumTagSinglePayload for MentalHealthAssessmentsAnalyticsActionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x255FBDCF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MentalHealthAssessmentsAnalyticsActionType()
{
  return &type metadata for MentalHealthAssessmentsAnalyticsActionType;
}

uint64_t getEnumTagSinglePayload for MentalHealthAssessmentsAnalyticsAssessmentType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MentalHealthAssessmentsAnalyticsAssessmentType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x255FBDE8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MentalHealthAssessmentsAnalyticsAssessmentType()
{
  return &type metadata for MentalHealthAssessmentsAnalyticsAssessmentType;
}

unsigned char *storeEnumTagSinglePayload for MentalHealthAssessmentsAnalyticsEntryPoint(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x255FBDF90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MentalHealthAssessmentsAnalyticsEntryPoint()
{
  return &type metadata for MentalHealthAssessmentsAnalyticsEntryPoint;
}

uint64_t getEnumTagSinglePayload for Route(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14MentalHealthUI40MentalHealthAssessmentsAnalyticsStepTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x255FBE124);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MentalHealthAssessmentsAnalyticsProvenance()
{
  return &type metadata for MentalHealthAssessmentsAnalyticsProvenance;
}

uint64_t sub_255FBE15C(void *a1, uint64_t a2)
{
  sub_255FBE418();
  MEMORY[0x270FA5388](v5 - 8);
  BOOL v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_256175868();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  unint64_t v12 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  __n128 v14 = (char *)&v22 - v13;
  sub_255FBEC38(a2, (uint64_t)v7, (uint64_t (*)(void))sub_255FBE418);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_255FBED34((uint64_t)v7, (uint64_t (*)(void))sub_255FBE418);
  }
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v16(v14, v7, v8);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  uint64_t v17 = *(unsigned __int8 *)(v9 + 80);
  id v23 = a1;
  uint64_t v18 = (v17 + 24) & ~v17;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v2;
  v16((char *)(v19 + v18), v12, v8);
  aBlock[4] = sub_255FBE53C;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_255FBE5B8;
  aBlock[3] = &block_descriptor_1;
  uint64_t v20 = _Block_copy(aBlock);
  id v21 = v2;
  swift_release();
  objc_msgSend(v23, sel_setTitleTapOutBlock_, v20);
  _Block_release(v20);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
}

void sub_255FBE418()
{
  if (!qword_269F44D30)
  {
    sub_256175868();
    unint64_t v0 = sub_256178448();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44D30);
    }
  }
}

uint64_t sub_255FBE470()
{
  uint64_t v1 = sub_256175868();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_255FBE53C(void *a1, void *a2)
{
  uint64_t v5 = *(void *)(sub_256175868() - 8);
  return sub_255FBE654(v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a1, a2);
}

void sub_255FBE5B8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(id, id))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(v7, v6);
  swift_release();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_255FBE654(uint64_t a1, void *a2, void *a3)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = type metadata accessor for StateOfMindTimeline.EntryFullView();
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v40 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (uint64_t *)((char *)&v33 - v9);
  uint64_t v11 = sub_256175868();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  __n128 v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_256175B68();
  uint64_t v37 = *(void *)(v15 - 8);
  uint64_t v38 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256175B48();
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v39 = a1;
  v18(v14, a1, v11);
  uint64_t v19 = sub_256175B58();
  os_log_type_t v20 = sub_256178238();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v35 = a3;
    uint64_t v22 = v21;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v42 = v33;
    *(_DWORD *)uint64_t v22 = 136446466;
    uint64_t v23 = sub_256178978();
    uint64_t ObjectType = (uint64_t)v10;
    uint64_t v41 = sub_255FB29A8(v23, v24, &v42);
    uint64_t v34 = a2;
    sub_256178458();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2082;
    sub_255FBED94((unint64_t *)&qword_269F47700, MEMORY[0x263F07490]);
    uint64_t v25 = sub_2561787E8();
    uint64_t v41 = sub_255FB29A8(v25, v26, &v42);
    a2 = v34;
    uint64_t v10 = (uint64_t *)ObjectType;
    sub_256178458();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    _os_log_impl(&dword_255F58000, v19, v20, "[%{public}s] Presenting timeline for date: %{public}s", (uint8_t *)v22, 0x16u);
    uint64_t v27 = v33;
    swift_arrayDestroy();
    MEMORY[0x25A2A1E90](v27, -1, -1);
    uint64_t v28 = v22;
    a3 = v35;
    MEMORY[0x25A2A1E90](v28, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }

  (*(void (**)(char *, uint64_t))(v37 + 8))(v17, v38);
  _s14MentalHealthUI19StateOfMindTimelineO5ModelC05buildgH03day11healthStoreAE10Foundation4DateV_So08HKHealthL0CtFZ_0(v39, a2);
  swift_retain();
  StateOfMindTimeline.EntryFullView.init(model:)(v10);
  sub_255FBEC38((uint64_t)v10, v40, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.EntryFullView);
  sub_255FBECA0();
  id v30 = objc_allocWithZone(v29);
  uint64_t v31 = (void *)sub_2561767B8();
  objc_msgSend(a3, sel_hk_presentModalCardViewController_fullScreen_animated_completion_, v31, 0, 1, 0);
  swift_release();

  return sub_255FBED34((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.EntryFullView);
}

id StateOfMindChartTapOutFormatter.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id StateOfMindChartTapOutFormatter.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StateOfMindChartTapOutFormatter();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for StateOfMindChartTapOutFormatter()
{
  uint64_t result = qword_269F43BA8;
  if (!qword_269F43BA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id sub_255FBEB5C(void *a1)
{
  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for StateOfMindChartTapOutFormatter();
  return objc_msgSendSuper2(&v2, sel_init);
}

id StateOfMindChartTapOutFormatter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StateOfMindChartTapOutFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_255FBEBD8()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for StateOfMindChartTapOutFormatter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for StateOfMindChartTapOutFormatter);
}

uint64_t sub_255FBEC30()
{
  return type metadata accessor for StateOfMindChartTapOutFormatter();
}

uint64_t sub_255FBEC38(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_255FBECA0()
{
  if (!qword_269F43BB8)
  {
    type metadata accessor for StateOfMindTimeline.EntryFullView();
    sub_255FBED94(&qword_269F43BC0, (void (*)(uint64_t))type metadata accessor for StateOfMindTimeline.EntryFullView);
    unint64_t v0 = sub_2561767C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43BB8);
    }
  }
}

uint64_t sub_255FBED34(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_255FBED94(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_255FBEDDC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    sub_255FC40BC(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, v3, v7);
    }
    else
    {
      *a1 = *v3;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(v6 + 20);
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)v3 + v9);
    sub_255FC40BC(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_256176AA8();
      uint64_t v13 = *(void *)(v12 - 8);
      uint64_t v86 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      uint64_t v85 = v13;
      uint64_t v83 = v3;
      if (v86((char *)v11, 1, v12))
      {
        sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      uint64_t v15 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v16 = v15[5];
      uint64_t v17 = (char *)v10 + v16;
      uint64_t v18 = (char *)v11 + v16;
      uint64_t v19 = sub_256176158();
      uint64_t v87 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
      v87(v17, v18, v19);
      *((unsigned char *)v10 + v15[6]) = *((unsigned char *)v11 + v15[6]);
      uint64_t v20 = v15[7];
      uint64_t v21 = (char *)v10 + v20;
      uint64_t v22 = (char *)v11 + v20;
      uint64_t v23 = sub_256175D98();
      uint64_t v81 = *(void (**)(char *, char *))(*(void *)(v23 - 8) + 16);
      uint64_t v82 = v23;
      v81(v21, v22);
      uint64_t v24 = v15[8];
      uint64_t v25 = (char *)v10 + v24;
      unint64_t v26 = (char *)v11 + v24;
      uint64_t v27 = v86;
      if (v86((char *)v11 + v24, 1, v12))
      {
        sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v25, v26, v12);
        uint64_t v27 = v86;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v25, 0, 1, v12);
      }
      uint64_t v29 = _s6StylesV8TimelineVMa(0);
      v87(&v25[*(int *)(v29 + 20)], &v26[*(int *)(v29 + 20)], v19);
      uint64_t v30 = v15[9];
      uint64_t v31 = (char *)v10 + v30;
      char v32 = (char *)v11 + v30;
      uint64_t v84 = v6;
      if (v27((char *)v11 + v30, 1, v12))
      {
        sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v31, v32, v12);
        uint64_t v27 = v86;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v31, 0, 1, v12);
      }
      uint64_t v34 = _s6StylesV6NoDataVMa(0);
      v87(&v31[*(int *)(v34 + 20)], &v32[*(int *)(v34 + 20)], v19);
      v31[*(int *)(v34 + 24)] = v32[*(int *)(v34 + 24)];
      uint64_t v35 = v15[10];
      uint64_t v36 = (char *)v10 + v35;
      uint64_t v37 = (char *)v11 + v35;
      if (v27((char *)v11 + v35, 1, v12))
      {
        sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v36, v37, v12);
        uint64_t v27 = v86;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v36, 0, 1, v12);
      }
      uint64_t v39 = _s6StylesV11PlaceholderVMa(0);
      v87(&v36[*(int *)(v39 + 20)], &v37[*(int *)(v39 + 20)], v19);
      uint64_t v40 = v15[11];
      uint64_t v41 = (char *)v10 + v40;
      uint64_t v42 = (char *)v11 + v40;
      if (v27((char *)v11 + v40, 1, v12))
      {
        sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v41, v42, v12);
        uint64_t v27 = v86;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v41, 0, 1, v12);
      }
      uint64_t v44 = _s6StylesV6SymbolVMa(0);
      v87(&v41[*(int *)(v44 + 20)], &v42[*(int *)(v44 + 20)], v19);
      uint64_t v45 = v15[12];
      uint64_t v46 = (char *)v10 + v45;
      uint64_t v47 = (char *)v11 + v45;
      if (v27((char *)v11 + v45, 1, v12))
      {
        sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v46, v47, v12);
        uint64_t v27 = v86;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v46, 0, 1, v12);
      }
      uint64_t v49 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v87(&v46[v49[5]], &v47[v49[5]], v19);
      v46[v49[6]] = v47[v49[6]];
      ((void (*)(char *, char *, uint64_t))v81)(&v46[v49[7]], &v47[v49[7]], v82);
      uint64_t v50 = v15[13];
      uint64_t v51 = (char *)v10 + v50;
      uint64_t v52 = (char *)v11 + v50;
      if (v27((char *)v11 + v50, 1, v12))
      {
        sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v51, v52, v12);
        uint64_t v27 = v86;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v51, 0, 1, v12);
      }
      uint64_t v54 = _s6StylesV5EmptyVMa(0);
      v87(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v19);
      v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
      uint64_t v55 = v15[14];
      uint64_t v56 = (char *)v10 + v55;
      uint64_t v57 = (char *)v11 + v55;
      if (v27((char *)v11 + v55, 1, v12))
      {
        sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v56, v57, v12);
        uint64_t v27 = v86;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v56, 0, 1, v12);
      }
      uint64_t v59 = _s6StylesV5DailyVMa(0);
      v87(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v19);
      v56[*(int *)(v59 + 24)] = v57[*(int *)(v59 + 24)];
      uint64_t v60 = v15[15];
      uint64_t v61 = (char *)v10 + v60;
      uint64_t v62 = (char *)v11 + v60;
      if (v27((char *)v11 + v60, 1, v12))
      {
        sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v61, v62, v12);
        uint64_t v27 = v86;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v61, 0, 1, v12);
      }
      uint64_t v6 = v84;
      uint64_t v64 = _s6StylesV9MomentaryVMa(0);
      v87(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v19);
      uint64_t v65 = v15[16];
      uint64_t v66 = (char *)v10 + v65;
      uint64_t v67 = (char *)v11 + v65;
      if (v27((char *)v11 + v65, 1, v12))
      {
        sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v66, v67, v12);
        uint64_t v27 = v86;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v66, 0, 1, v12);
      }
      uint64_t v69 = _s6StylesV6HeaderVMa(0);
      v87(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v19);
      uint64_t v70 = v15[17];
      uint64_t v71 = (char *)v10 + v70;
      uint64_t v72 = (char *)v11 + v70;
      if (v27((char *)v11 + v70, 1, v12))
      {
        sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v71, v72, v12);
        uint64_t v27 = v86;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v71, 0, 1, v12);
      }
      uint64_t v74 = _s6StylesV11ChartButtonVMa(0);
      v87(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v19);
      uint64_t v75 = v15[18];
      uint64_t v76 = (char *)v10 + v75;
      uint64_t v77 = (char *)v11 + v75;
      if (v27(v77, 1, v12))
      {
        sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v76, v77, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v76, 0, 1, v12);
      }
      uint64_t v79 = _s6StylesV15LogButtonFooterVMa(0);
      v87(&v76[*(int *)(v79 + 20)], &v77[*(int *)(v79 + 20)], v19);
      uint64_t v3 = v83;
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *((unsigned char *)a1 + *(int *)(v6 + 24)) = *((unsigned char *)v3 + *(int *)(v6 + 24));
  }
  return a1;
}

uint64_t sub_255FBFCD8(uint64_t a1, uint64_t a2)
{
  sub_255FC40BC(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_255FC40BC(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256176AA8();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    if (!v8(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
    uint64_t v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v10 = v5 + v9[5];
    uint64_t v11 = sub_256176158();
    uint64_t v38 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
    v38(v10, v11);
    uint64_t v12 = v5 + v9[7];
    uint64_t v13 = sub_256175D98();
    uint64_t v37 = *(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
    v37(v12, v13);
    uint64_t v14 = v5 + v9[8];
    if (!v8(v14, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v14, v6);
    }
    uint64_t v15 = _s6StylesV8TimelineVMa(0);
    v38(v14 + *(int *)(v15 + 20), v11);
    uint64_t v16 = v5 + v9[9];
    if (!v8(v16, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v16, v6);
    }
    uint64_t v17 = _s6StylesV6NoDataVMa(0);
    v38(v16 + *(int *)(v17 + 20), v11);
    uint64_t v18 = v5 + v9[10];
    if (!v8(v18, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v18, v6);
    }
    uint64_t v19 = _s6StylesV11PlaceholderVMa(0);
    v38(v18 + *(int *)(v19 + 20), v11);
    uint64_t v20 = v5 + v9[11];
    if (!v8(v20, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v20, v6);
    }
    uint64_t v21 = _s6StylesV6SymbolVMa(0);
    v38(v20 + *(int *)(v21 + 20), v11);
    uint64_t v22 = v5 + v9[12];
    if (!v8(v22, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v22, v6);
    }
    uint64_t v23 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v38(v22 + *(int *)(v23 + 20), v11);
    v37(v22 + *(int *)(v23 + 28), v13);
    uint64_t v24 = v5 + v9[13];
    if (!v8(v24, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v24, v6);
    }
    uint64_t v25 = _s6StylesV5EmptyVMa(0);
    v38(v24 + *(int *)(v25 + 20), v11);
    uint64_t v26 = v5 + v9[14];
    if (!v8(v26, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v26, v6);
    }
    uint64_t v27 = _s6StylesV5DailyVMa(0);
    v38(v26 + *(int *)(v27 + 20), v11);
    uint64_t v28 = v5 + v9[15];
    if (!v8(v28, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v28, v6);
    }
    uint64_t v29 = _s6StylesV9MomentaryVMa(0);
    v38(v28 + *(int *)(v29 + 20), v11);
    uint64_t v30 = v5 + v9[16];
    if (!v8(v30, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v30, v6);
    }
    uint64_t v31 = _s6StylesV6HeaderVMa(0);
    v38(v30 + *(int *)(v31 + 20), v11);
    uint64_t v32 = v5 + v9[17];
    if (!v8(v32, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v32, v6);
    }
    uint64_t v33 = _s6StylesV11ChartButtonVMa(0);
    v38(v32 + *(int *)(v33 + 20), v11);
    uint64_t v34 = v5 + v9[18];
    if (!v8(v34, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v34, v6);
    }
    uint64_t v35 = v34 + *(int *)(_s6StylesV15LogButtonFooterVMa(0) + 20);
    return ((uint64_t (*)(uint64_t, uint64_t))v38)(v35, v11);
  }
  else
  {
    return swift_release();
  }
}

void *sub_255FC03D8(void *a1, void *a2, uint64_t a3)
{
  sub_255FC40BC(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256175D98();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_255FC40BC(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_256176AA8();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v86 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    uint64_t v84 = a1;
    uint64_t v85 = v11;
    uint64_t v82 = a3;
    if (v86((char *)v9, 1, v10))
    {
      sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v13 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v14 = v13[5];
    uint64_t v15 = (char *)v8 + v14;
    uint64_t v16 = (char *)v9 + v14;
    uint64_t v17 = sub_256176158();
    uint64_t v18 = (void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
    uint64_t v87 = *v18;
    (*v18)(v15, v16, v17);
    *((unsigned char *)v8 + v13[6]) = *((unsigned char *)v9 + v13[6]);
    uint64_t v19 = v13[7];
    uint64_t v20 = (char *)v8 + v19;
    uint64_t v21 = (char *)v9 + v19;
    uint64_t v22 = sub_256175D98();
    uint64_t v80 = *(void (**)(char *, char *))(*(void *)(v22 - 8) + 16);
    uint64_t v81 = v22;
    v80(v20, v21);
    uint64_t v23 = v13[8];
    uint64_t v24 = (char *)v8 + v23;
    uint64_t v25 = (char *)v9 + v23;
    uint64_t v26 = v86;
    if (v86((char *)v9 + v23, 1, v10))
    {
      sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v24, v25, v10);
      uint64_t v26 = v86;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v24, 0, 1, v10);
    }
    uint64_t v28 = _s6StylesV8TimelineVMa(0);
    v87(&v24[*(int *)(v28 + 20)], &v25[*(int *)(v28 + 20)], v17);
    uint64_t v29 = v13[9];
    uint64_t v30 = (char *)v8 + v29;
    uint64_t v31 = (char *)v9 + v29;
    uint64_t v83 = a2;
    if (v26((char *)v9 + v29, 1, v10))
    {
      sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v30, v31, v10);
      uint64_t v26 = v86;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v30, 0, 1, v10);
    }
    uint64_t v33 = _s6StylesV6NoDataVMa(0);
    v87(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v17);
    v30[*(int *)(v33 + 24)] = v31[*(int *)(v33 + 24)];
    uint64_t v34 = v13[10];
    uint64_t v35 = (char *)v8 + v34;
    uint64_t v36 = (char *)v9 + v34;
    if (v26((char *)v9 + v34, 1, v10))
    {
      sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v35, v36, v10);
      uint64_t v26 = v86;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v35, 0, 1, v10);
    }
    uint64_t v38 = _s6StylesV11PlaceholderVMa(0);
    v87(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v17);
    uint64_t v39 = v13[11];
    uint64_t v40 = (char *)v8 + v39;
    uint64_t v41 = (char *)v9 + v39;
    if (v26((char *)v9 + v39, 1, v10))
    {
      sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v40, v41, v10);
      uint64_t v26 = v86;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v40, 0, 1, v10);
    }
    uint64_t v43 = _s6StylesV6SymbolVMa(0);
    v87(&v40[*(int *)(v43 + 20)], &v41[*(int *)(v43 + 20)], v17);
    uint64_t v44 = v13[12];
    uint64_t v45 = (char *)v8 + v44;
    uint64_t v46 = (char *)v9 + v44;
    if (v26((char *)v9 + v44, 1, v10))
    {
      sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v45, v46, v10);
      uint64_t v26 = v86;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v45, 0, 1, v10);
    }
    uint64_t v48 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v87(&v45[v48[5]], &v46[v48[5]], v17);
    v45[v48[6]] = v46[v48[6]];
    ((void (*)(char *, char *, uint64_t))v80)(&v45[v48[7]], &v46[v48[7]], v81);
    uint64_t v49 = v13[13];
    uint64_t v50 = (char *)v8 + v49;
    uint64_t v51 = (char *)v9 + v49;
    if (v26((char *)v9 + v49, 1, v10))
    {
      sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v50, v51, v10);
      uint64_t v26 = v86;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v50, 0, 1, v10);
    }
    uint64_t v53 = _s6StylesV5EmptyVMa(0);
    v87(&v50[*(int *)(v53 + 20)], &v51[*(int *)(v53 + 20)], v17);
    v50[*(int *)(v53 + 24)] = v51[*(int *)(v53 + 24)];
    uint64_t v54 = v13[14];
    uint64_t v55 = (char *)v8 + v54;
    uint64_t v56 = (char *)v9 + v54;
    if (v26((char *)v9 + v54, 1, v10))
    {
      sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v55, v56, v10);
      uint64_t v26 = v86;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v55, 0, 1, v10);
    }
    uint64_t v58 = _s6StylesV5DailyVMa(0);
    v87(&v55[*(int *)(v58 + 20)], &v56[*(int *)(v58 + 20)], v17);
    v55[*(int *)(v58 + 24)] = v56[*(int *)(v58 + 24)];
    uint64_t v59 = v13[15];
    uint64_t v60 = (char *)v8 + v59;
    uint64_t v61 = (char *)v9 + v59;
    if (v26((char *)v9 + v59, 1, v10))
    {
      sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v60, v61, v10);
      uint64_t v26 = v86;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v60, 0, 1, v10);
    }
    a2 = v83;
    uint64_t v63 = _s6StylesV9MomentaryVMa(0);
    v87(&v60[*(int *)(v63 + 20)], &v61[*(int *)(v63 + 20)], v17);
    uint64_t v64 = v13[16];
    uint64_t v65 = (char *)v8 + v64;
    uint64_t v66 = (char *)v9 + v64;
    if (v26((char *)v9 + v64, 1, v10))
    {
      sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v65, v66, v10);
      uint64_t v26 = v86;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v65, 0, 1, v10);
    }
    uint64_t v68 = _s6StylesV6HeaderVMa(0);
    v87(&v65[*(int *)(v68 + 20)], &v66[*(int *)(v68 + 20)], v17);
    uint64_t v69 = v13[17];
    uint64_t v70 = (char *)v8 + v69;
    uint64_t v71 = (char *)v9 + v69;
    if (v26((char *)v9 + v69, 1, v10))
    {
      sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v70, v71, v10);
      uint64_t v26 = v86;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v70, 0, 1, v10);
    }
    uint64_t v73 = _s6StylesV11ChartButtonVMa(0);
    v87(&v70[*(int *)(v73 + 20)], &v71[*(int *)(v73 + 20)], v17);
    uint64_t v74 = v13[18];
    uint64_t v75 = (char *)v8 + v74;
    uint64_t v76 = (char *)v9 + v74;
    if (v26((char *)v9 + v74, 1, v10))
    {
      sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v75, v76, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v75, 0, 1, v10);
    }
    uint64_t v78 = _s6StylesV15LogButtonFooterVMa(0);
    v87(&v75[*(int *)(v78 + 20)], &v76[*(int *)(v78 + 20)], v17);
    a1 = v84;
    a3 = v82;
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_255FC1288(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2;
  if (a1 != a2)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    sub_255FC2130((uint64_t)a1, &qword_269F47D00, MEMORY[0x263F18520]);
    sub_255FC40BC(0, &qword_269F47D00, v6, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, v4, v7);
    }
    else
    {
      *a1 = *v4;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (void *)((char *)v4 + v8);
    sub_255FC2130((uint64_t)a1 + v8, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles);
    sub_255FC40BC(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v84 = a3;
      uint64_t v11 = sub_256176AA8();
      uint64_t v12 = *(void *)(v11 - 8);
      char v88 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48);
      uint64_t v85 = v4;
      if (v88(v10, 1, v11))
      {
        sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      uint64_t v14 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v15 = v14[5];
      uint64_t v16 = (char *)v9 + v15;
      uint64_t v17 = (char *)v10 + v15;
      uint64_t v18 = sub_256176158();
      uint64_t v19 = (void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
      uint64_t v87 = *v19;
      (*v19)(v16, v17, v18);
      *((unsigned char *)v9 + v14[6]) = *((unsigned char *)v10 + v14[6]);
      uint64_t v20 = v14[7];
      uint64_t v21 = (char *)v9 + v20;
      uint64_t v22 = (char *)v10 + v20;
      uint64_t v23 = sub_256175D98();
      uint64_t v82 = *(void (**)(char *, char *))(*(void *)(v23 - 8) + 16);
      uint64_t v83 = v23;
      v82(v21, v22);
      uint64_t v24 = v14[8];
      uint64_t v25 = (char *)v9 + v24;
      uint64_t v26 = (char *)v10 + v24;
      if (v88((void *)((char *)v10 + v24), 1, v11))
      {
        sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v25, v26, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v25, 0, 1, v11);
      }
      uint64_t v28 = _s6StylesV8TimelineVMa(0);
      v87(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v18);
      uint64_t v29 = v14[9];
      uint64_t v30 = (char *)v9 + v29;
      uint64_t v31 = (char *)v10 + v29;
      uint64_t v86 = v12;
      if (v88((void *)((char *)v10 + v29), 1, v11))
      {
        sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v30, v31, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v30, 0, 1, v11);
      }
      uint64_t v33 = _s6StylesV6NoDataVMa(0);
      v87(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v18);
      v30[*(int *)(v33 + 24)] = v31[*(int *)(v33 + 24)];
      uint64_t v34 = v14[10];
      uint64_t v35 = (char *)v9 + v34;
      uint64_t v36 = (char *)v10 + v34;
      if (v88((void *)((char *)v10 + v34), 1, v11))
      {
        sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
        uint64_t v38 = v86;
      }
      else
      {
        uint64_t v38 = v86;
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v35, v36, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v35, 0, 1, v11);
      }
      uint64_t v39 = _s6StylesV11PlaceholderVMa(0);
      v87(&v35[*(int *)(v39 + 20)], &v36[*(int *)(v39 + 20)], v18);
      uint64_t v40 = v14[11];
      uint64_t v41 = (char *)v9 + v40;
      uint64_t v42 = (char *)v10 + v40;
      if (v88((void *)((char *)v10 + v40), 1, v11))
      {
        sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v41, v42, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v41, 0, 1, v11);
      }
      uint64_t v44 = _s6StylesV6SymbolVMa(0);
      v87(&v41[*(int *)(v44 + 20)], &v42[*(int *)(v44 + 20)], v18);
      uint64_t v45 = v14[12];
      uint64_t v46 = (char *)v9 + v45;
      uint64_t v47 = (char *)v10 + v45;
      if (v88((void *)((char *)v10 + v45), 1, v11))
      {
        sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v46, v47, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v46, 0, 1, v11);
      }
      uint64_t v49 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v87(&v46[v49[5]], &v47[v49[5]], v18);
      v46[v49[6]] = v47[v49[6]];
      ((void (*)(char *, char *, uint64_t))v82)(&v46[v49[7]], &v47[v49[7]], v83);
      uint64_t v50 = v14[13];
      uint64_t v51 = (char *)v9 + v50;
      uint64_t v52 = (char *)v10 + v50;
      if (v88((void *)((char *)v10 + v50), 1, v11))
      {
        sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v51, v52, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v51, 0, 1, v11);
      }
      uint64_t v54 = _s6StylesV5EmptyVMa(0);
      v87(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v18);
      v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
      uint64_t v55 = v14[14];
      uint64_t v56 = (char *)v9 + v55;
      uint64_t v57 = (char *)v10 + v55;
      if (v88((void *)((char *)v10 + v55), 1, v11))
      {
        sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v56, v57, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v56, 0, 1, v11);
      }
      uint64_t v59 = _s6StylesV5DailyVMa(0);
      v87(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v18);
      v56[*(int *)(v59 + 24)] = v57[*(int *)(v59 + 24)];
      uint64_t v60 = v14[15];
      uint64_t v61 = (char *)v9 + v60;
      uint64_t v62 = (char *)v10 + v60;
      if (v88((void *)((char *)v10 + v60), 1, v11))
      {
        sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
        uint64_t v64 = v86;
      }
      else
      {
        uint64_t v64 = v86;
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v61, v62, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v61, 0, 1, v11);
      }
      uint64_t v65 = _s6StylesV9MomentaryVMa(0);
      v87(&v61[*(int *)(v65 + 20)], &v62[*(int *)(v65 + 20)], v18);
      uint64_t v66 = v14[16];
      uint64_t v67 = (char *)v9 + v66;
      uint64_t v68 = (char *)v10 + v66;
      if (v88((void *)((char *)v10 + v66), 1, v11))
      {
        sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v67, v68, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v67, 0, 1, v11);
      }
      uint64_t v70 = _s6StylesV6HeaderVMa(0);
      v87(&v67[*(int *)(v70 + 20)], &v68[*(int *)(v70 + 20)], v18);
      uint64_t v71 = v14[17];
      uint64_t v72 = (char *)v9 + v71;
      uint64_t v73 = (char *)v10 + v71;
      if (v88((void *)((char *)v10 + v71), 1, v11))
      {
        sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v72, v73, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v72, 0, 1, v11);
      }
      uint64_t v75 = _s6StylesV11ChartButtonVMa(0);
      v87(&v72[*(int *)(v75 + 20)], &v73[*(int *)(v75 + 20)], v18);
      uint64_t v76 = v14[18];
      uint64_t v77 = (char *)v9 + v76;
      uint64_t v78 = (char *)v10 + v76;
      if (v88((void *)((char *)v10 + v76), 1, v11))
      {
        sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v77, v78, *(void *)(*(void *)(v79 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v77, v78, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v77, 0, 1, v11);
      }
      a3 = v84;
      uint64_t v80 = _s6StylesV15LogButtonFooterVMa(0);
      v87(&v77[*(int *)(v80 + 20)], &v78[*(int *)(v80 + 20)], v18);
      uint64_t v4 = v85;
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)v4 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_255FC2130(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_255FC40BC(0, a2, a3, MEMORY[0x263F185C8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

char *sub_255FC21A0(char *a1, char *a2, uint64_t a3)
{
  sub_255FC40BC(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  uint64_t v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_256175D98();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  sub_255FC40BC(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  uint64_t v13 = v12;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_256176AA8();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v90 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    char v88 = a1;
    uint64_t v89 = v15;
    uint64_t v86 = a3;
    if (v90(v11, 1, v14))
    {
      sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v10, v11, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
    }
    uint64_t v17 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v18 = v17[5];
    uint64_t v19 = &v10[v18];
    uint64_t v20 = &v11[v18];
    uint64_t v21 = sub_256176158();
    uint64_t v22 = (void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32);
    uint64_t v91 = *v22;
    (*v22)(v19, v20, v21);
    v10[v17[6]] = v11[v17[6]];
    uint64_t v23 = v17[7];
    uint64_t v24 = &v10[v23];
    uint64_t v25 = &v11[v23];
    uint64_t v26 = sub_256175D98();
    uint64_t v84 = *(void (**)(char *, char *))(*(void *)(v26 - 8) + 32);
    uint64_t v85 = v26;
    v84(v24, v25);
    uint64_t v27 = v17[8];
    uint64_t v28 = &v10[v27];
    uint64_t v29 = &v11[v27];
    uint64_t v30 = v90;
    if (v90(&v11[v27], 1, v14))
    {
      sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v28, v29, v14);
      uint64_t v30 = v90;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v28, 0, 1, v14);
    }
    uint64_t v32 = _s6StylesV8TimelineVMa(0);
    v91(&v28[*(int *)(v32 + 20)], &v29[*(int *)(v32 + 20)], v21);
    uint64_t v33 = v17[9];
    uint64_t v34 = &v10[v33];
    uint64_t v35 = &v11[v33];
    uint64_t v87 = a2;
    if (v30(&v11[v33], 1, v14))
    {
      sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v34, v35, v14);
      uint64_t v30 = v90;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v34, 0, 1, v14);
    }
    uint64_t v37 = _s6StylesV6NoDataVMa(0);
    v91(&v34[*(int *)(v37 + 20)], &v35[*(int *)(v37 + 20)], v21);
    v34[*(int *)(v37 + 24)] = v35[*(int *)(v37 + 24)];
    uint64_t v38 = v17[10];
    uint64_t v39 = &v10[v38];
    uint64_t v40 = &v11[v38];
    if (v30(&v11[v38], 1, v14))
    {
      sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v39, v40, v14);
      uint64_t v30 = v90;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v39, 0, 1, v14);
    }
    uint64_t v42 = _s6StylesV11PlaceholderVMa(0);
    v91(&v39[*(int *)(v42 + 20)], &v40[*(int *)(v42 + 20)], v21);
    uint64_t v43 = v17[11];
    uint64_t v44 = &v10[v43];
    uint64_t v45 = &v11[v43];
    if (v30(&v11[v43], 1, v14))
    {
      sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v44, v45, v14);
      uint64_t v30 = v90;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v44, 0, 1, v14);
    }
    uint64_t v47 = _s6StylesV6SymbolVMa(0);
    v91(&v44[*(int *)(v47 + 20)], &v45[*(int *)(v47 + 20)], v21);
    uint64_t v48 = v17[12];
    uint64_t v49 = &v10[v48];
    uint64_t v50 = &v11[v48];
    if (v30(&v11[v48], 1, v14))
    {
      sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v49, v50, v14);
      uint64_t v30 = v90;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v49, 0, 1, v14);
    }
    uint64_t v52 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v91(&v49[v52[5]], &v50[v52[5]], v21);
    v49[v52[6]] = v50[v52[6]];
    ((void (*)(char *, char *, uint64_t))v84)(&v49[v52[7]], &v50[v52[7]], v85);
    uint64_t v53 = v17[13];
    uint64_t v54 = &v10[v53];
    uint64_t v55 = &v11[v53];
    if (v30(&v11[v53], 1, v14))
    {
      sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v54, v55, v14);
      uint64_t v30 = v90;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v54, 0, 1, v14);
    }
    uint64_t v57 = _s6StylesV5EmptyVMa(0);
    v91(&v54[*(int *)(v57 + 20)], &v55[*(int *)(v57 + 20)], v21);
    v54[*(int *)(v57 + 24)] = v55[*(int *)(v57 + 24)];
    uint64_t v58 = v17[14];
    uint64_t v59 = &v10[v58];
    uint64_t v60 = &v11[v58];
    if (v30(&v11[v58], 1, v14))
    {
      sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v59, v60, v14);
      uint64_t v30 = v90;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v59, 0, 1, v14);
    }
    uint64_t v62 = _s6StylesV5DailyVMa(0);
    v91(&v59[*(int *)(v62 + 20)], &v60[*(int *)(v62 + 20)], v21);
    v59[*(int *)(v62 + 24)] = v60[*(int *)(v62 + 24)];
    uint64_t v63 = v17[15];
    uint64_t v64 = &v10[v63];
    uint64_t v65 = &v11[v63];
    if (v30(&v11[v63], 1, v14))
    {
      sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v64, v65, v14);
      uint64_t v30 = v90;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v64, 0, 1, v14);
    }
    a2 = v87;
    uint64_t v67 = _s6StylesV9MomentaryVMa(0);
    v91(&v64[*(int *)(v67 + 20)], &v65[*(int *)(v67 + 20)], v21);
    uint64_t v68 = v17[16];
    uint64_t v69 = &v10[v68];
    uint64_t v70 = &v11[v68];
    if (v30(&v11[v68], 1, v14))
    {
      sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v69, v70, v14);
      uint64_t v30 = v90;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v69, 0, 1, v14);
    }
    uint64_t v72 = _s6StylesV6HeaderVMa(0);
    v91(&v69[*(int *)(v72 + 20)], &v70[*(int *)(v72 + 20)], v21);
    uint64_t v73 = v17[17];
    uint64_t v74 = &v10[v73];
    uint64_t v75 = &v11[v73];
    if (v30(&v11[v73], 1, v14))
    {
      sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v74, v75, v14);
      uint64_t v30 = v90;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v74, 0, 1, v14);
    }
    uint64_t v77 = _s6StylesV11ChartButtonVMa(0);
    v91(&v74[*(int *)(v77 + 20)], &v75[*(int *)(v77 + 20)], v21);
    uint64_t v78 = v17[18];
    uint64_t v79 = &v10[v78];
    uint64_t v80 = &v11[v78];
    if (v30(&v11[v78], 1, v14))
    {
      sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v79, v80, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v79, 0, 1, v14);
    }
    uint64_t v82 = _s6StylesV15LogButtonFooterVMa(0);
    v91(&v79[*(int *)(v82 + 20)], &v80[*(int *)(v82 + 20)], v21);
    swift_storeEnumTagMultiPayload();
    a1 = v88;
    a3 = v86;
  }
  else
  {
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_255FC3068(char *a1, char *a2, uint64_t a3)
{
  uint64_t v4 = a2;
  if (a1 != a2)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    sub_255FC2130((uint64_t)a1, &qword_269F47D00, MEMORY[0x263F18520]);
    sub_255FC40BC(0, &qword_269F47D00, v6, MEMORY[0x263F185C8]);
    uint64_t v8 = v7;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_256175D98();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, v4, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, v4, *(void *)(*(void *)(v8 - 8) + 64));
    }
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &v4[v10];
    sub_255FC2130((uint64_t)&a1[v10], &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles);
    sub_255FC40BC(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    uint64_t v14 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v88 = a3;
      uint64_t v15 = sub_256176AA8();
      uint64_t v16 = *(void *)(v15 - 8);
      unint64_t v92 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      uint64_t v89 = v4;
      if (v92(v12, 1, v15))
      {
        sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v11, v12, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v11, 0, 1, v15);
      }
      uint64_t v18 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v19 = v18[5];
      uint64_t v20 = &v11[v19];
      uint64_t v21 = &v12[v19];
      uint64_t v22 = sub_256176158();
      uint64_t v23 = (void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32);
      uint64_t v91 = *v23;
      (*v23)(v20, v21, v22);
      v11[v18[6]] = v12[v18[6]];
      uint64_t v24 = v18[7];
      uint64_t v25 = &v11[v24];
      uint64_t v26 = &v12[v24];
      uint64_t v27 = sub_256175D98();
      uint64_t v86 = *(void (**)(char *, char *))(*(void *)(v27 - 8) + 32);
      uint64_t v87 = v27;
      v86(v25, v26);
      uint64_t v28 = v18[8];
      uint64_t v29 = &v11[v28];
      uint64_t v30 = &v12[v28];
      if (v92(&v12[v28], 1, v15))
      {
        sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v29, v30, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v29, 0, 1, v15);
      }
      uint64_t v32 = _s6StylesV8TimelineVMa(0);
      v91(&v29[*(int *)(v32 + 20)], &v30[*(int *)(v32 + 20)], v22);
      uint64_t v33 = v18[9];
      uint64_t v34 = &v11[v33];
      uint64_t v35 = &v12[v33];
      uint64_t v90 = v16;
      if (v92(&v12[v33], 1, v15))
      {
        sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v34, v35, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v34, 0, 1, v15);
      }
      uint64_t v37 = _s6StylesV6NoDataVMa(0);
      v91(&v34[*(int *)(v37 + 20)], &v35[*(int *)(v37 + 20)], v22);
      v34[*(int *)(v37 + 24)] = v35[*(int *)(v37 + 24)];
      uint64_t v38 = v18[10];
      uint64_t v39 = &v11[v38];
      uint64_t v40 = &v12[v38];
      if (v92(&v12[v38], 1, v15))
      {
        sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
        uint64_t v42 = v90;
      }
      else
      {
        uint64_t v42 = v90;
        (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v39, v40, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v39, 0, 1, v15);
      }
      uint64_t v43 = _s6StylesV11PlaceholderVMa(0);
      v91(&v39[*(int *)(v43 + 20)], &v40[*(int *)(v43 + 20)], v22);
      uint64_t v44 = v18[11];
      uint64_t v45 = &v11[v44];
      uint64_t v46 = &v12[v44];
      if (v92(&v12[v44], 1, v15))
      {
        sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v45, v46, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v45, 0, 1, v15);
      }
      uint64_t v48 = _s6StylesV6SymbolVMa(0);
      v91(&v45[*(int *)(v48 + 20)], &v46[*(int *)(v48 + 20)], v22);
      uint64_t v49 = v18[12];
      uint64_t v50 = &v11[v49];
      uint64_t v51 = &v12[v49];
      if (v92(&v12[v49], 1, v15))
      {
        sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v50, v51, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v50, 0, 1, v15);
      }
      uint64_t v53 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v91(&v50[v53[5]], &v51[v53[5]], v22);
      v50[v53[6]] = v51[v53[6]];
      ((void (*)(char *, char *, uint64_t))v86)(&v50[v53[7]], &v51[v53[7]], v87);
      uint64_t v54 = v18[13];
      uint64_t v55 = &v11[v54];
      uint64_t v56 = &v12[v54];
      if (v92(&v12[v54], 1, v15))
      {
        sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v55, v56, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v55, 0, 1, v15);
      }
      uint64_t v58 = _s6StylesV5EmptyVMa(0);
      v91(&v55[*(int *)(v58 + 20)], &v56[*(int *)(v58 + 20)], v22);
      v55[*(int *)(v58 + 24)] = v56[*(int *)(v58 + 24)];
      uint64_t v59 = v18[14];
      uint64_t v60 = &v11[v59];
      uint64_t v61 = &v12[v59];
      if (v92(&v12[v59], 1, v15))
      {
        sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v60, v61, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v60, 0, 1, v15);
      }
      uint64_t v63 = _s6StylesV5DailyVMa(0);
      v91(&v60[*(int *)(v63 + 20)], &v61[*(int *)(v63 + 20)], v22);
      v60[*(int *)(v63 + 24)] = v61[*(int *)(v63 + 24)];
      uint64_t v64 = v18[15];
      uint64_t v65 = &v11[v64];
      uint64_t v66 = &v12[v64];
      if (v92(&v12[v64], 1, v15))
      {
        sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
        uint64_t v68 = v90;
      }
      else
      {
        uint64_t v68 = v90;
        (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v65, v66, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v65, 0, 1, v15);
      }
      uint64_t v69 = _s6StylesV9MomentaryVMa(0);
      v91(&v65[*(int *)(v69 + 20)], &v66[*(int *)(v69 + 20)], v22);
      uint64_t v70 = v18[16];
      uint64_t v71 = &v11[v70];
      uint64_t v72 = &v12[v70];
      if (v92(&v12[v70], 1, v15))
      {
        sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v71, v72, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v71, 0, 1, v15);
      }
      uint64_t v74 = _s6StylesV6HeaderVMa(0);
      v91(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v22);
      uint64_t v75 = v18[17];
      uint64_t v76 = &v11[v75];
      uint64_t v77 = &v12[v75];
      if (v92(&v12[v75], 1, v15))
      {
        sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v76, v77, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v76, 0, 1, v15);
      }
      uint64_t v79 = _s6StylesV11ChartButtonVMa(0);
      v91(&v76[*(int *)(v79 + 20)], &v77[*(int *)(v79 + 20)], v22);
      uint64_t v80 = v18[18];
      uint64_t v81 = &v11[v80];
      uint64_t v82 = &v12[v80];
      if (v92(&v12[v80], 1, v15))
      {
        sub_255FC40BC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v81, v82, *(void *)(*(void *)(v83 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v81, v82, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v81, 0, 1, v15);
      }
      a3 = v88;
      uint64_t v84 = _s6StylesV15LogButtonFooterVMa(0);
      v91(&v81[*(int *)(v84 + 20)], &v82[*(int *)(v84 + 20)], v22);
      swift_storeEnumTagMultiPayload();
      uint64_t v4 = v89;
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
  }
  a1[*(int *)(a3 + 24)] = v4[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_255FC3F24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255FC3F38);
}

uint64_t sub_255FC3F38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_255FC40BC(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    sub_255FC40BC(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
      if (v14 >= 2) {
        return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

void sub_255FC40BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_255FC4120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255FC4134);
}

void sub_255FC4134(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_255FC40BC(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    sub_255FC40BC(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
      return;
    }
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  v11(v12, a2, a2, v10);
}

uint64_t _s21StateOfMindSymbolViewVMa()
{
  uint64_t result = qword_269F43BC8;
  if (!qword_269F43BC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_255FC42F0()
{
  sub_255FC40BC(319, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (v0 <= 0x3F)
  {
    sub_255FC40BC(319, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_255FC4420()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255FC443C()
{
  sub_255FC4DA8();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FC4E70(0, &qword_269F43BE8, MEMORY[0x263F19B20]);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v15 - v5;
  uint64_t v7 = sub_2561774F8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v0 + *(int *)(_s21StateOfMindSymbolViewVMa() + 24)) == 1)
  {
    type metadata accessor for MentalHealthUIRepresentative();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v12 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_256177538();
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F1B4B8], v7);
    uint64_t v13 = sub_256177528();
    swift_release();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    *(void *)uint64_t v6 = v13;
    *((void *)v6 + 1) = 0;
    *((_WORD *)v6 + 8) = 1;
    swift_storeEnumTagMultiPayload();
    sub_255F672DC(0, (unint64_t *)&qword_269F42BC8, MEMORY[0x263F1B570], MEMORY[0x263F19900], MEMORY[0x263F18E28]);
    sub_255F6747C();
    sub_255FC4F48(&qword_269F43BF0, (void (*)(uint64_t))sub_255FC4DA8, (void (*)(void))sub_255FC4F0C);
    return sub_256176898();
  }
  else
  {
    sub_255FC4824((uint64_t)v3);
    sub_255FC5028((uint64_t)v3, (uint64_t)v6, (uint64_t (*)(void))sub_255FC4DA8);
    swift_storeEnumTagMultiPayload();
    sub_255F672DC(0, (unint64_t *)&qword_269F42BC8, MEMORY[0x263F1B570], MEMORY[0x263F19900], MEMORY[0x263F18E28]);
    sub_255F6747C();
    sub_255FC4F48(&qword_269F43BF0, (void (*)(uint64_t))sub_255FC4DA8, (void (*)(void))sub_255FC4F0C);
    sub_256176898();
    return sub_255FC4FC8((uint64_t)v3, (uint64_t (*)(void))sub_255FC4DA8);
  }
}

uint64_t sub_255FC4824@<X0>(uint64_t a1@<X8>)
{
  uint64_t v47 = a1;
  uint64_t v1 = sub_2561762D8();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v46 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_256177958();
  uint64_t v44 = *(void *)(v3 - 8);
  uint64_t v45 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v43 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_256175D98();
  uint64_t v5 = *(void *)(v42 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v42);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v36 - v9;
  uint64_t v11 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_2561774F8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FC4E08();
  uint64_t v19 = v18 - 8;
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256177508();
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x263F1B4B8], v14);
  uint64_t v38 = sub_256177528();
  swift_release();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  uint64_t v40 = v41 + *(int *)(_s21StateOfMindSymbolViewVMa() + 20);
  sub_256119CA0((uint64_t)v13);
  uint64_t v39 = type metadata accessor for StateOfMindTimeline.Styles;
  sub_255FC4FC8((uint64_t)v13, type metadata accessor for StateOfMindTimeline.Styles);
  id v22 = objc_msgSend(self, sel_labelColor);
  uint64_t v23 = MEMORY[0x25A29FE80](v22);
  uint64_t v37 = v10;
  sub_25611A114((uint64_t)v10);
  uint64_t v24 = v5;
  uint64_t v25 = *(void (**)(char *, void, uint64_t))(v5 + 104);
  uint64_t v26 = v42;
  v25(v8, *MEMORY[0x263F18508], v42);
  LOBYTE(v14) = sub_256175D88();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v24 + 8);
  uint64_t v41 = v24 + 8;
  v27(v8, v26);
  uint64_t v29 = v43;
  uint64_t v28 = v44;
  uint64_t v30 = (unsigned int *)MEMORY[0x263F1B950];
  if ((v14 & 1) == 0) {
    uint64_t v30 = (unsigned int *)MEMORY[0x263F1B968];
  }
  uint64_t v31 = v45;
  (*(void (**)(char *, void, uint64_t))(v44 + 104))(v43, *v30, v45);
  uint64_t v32 = (uint64_t)v46;
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v46, v29, v31);
  sub_255FC5028(v32, (uint64_t)&v21[*(int *)(v19 + 44)], MEMORY[0x263F190D8]);
  *(void *)uint64_t v21 = v38;
  *((void *)v21 + 1) = 0;
  *((_WORD *)v21 + 8) = 1;
  *((void *)v21 + 3) = v23;
  swift_retain();
  swift_retain();
  sub_255FC4FC8(v32, MEMORY[0x263F190D8]);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v31);
  v27(v37, v26);
  swift_release();
  swift_release();
  sub_256119CA0((uint64_t)v13);
  sub_255FC4FC8((uint64_t)v13, v39);
  uint64_t v33 = v47;
  sub_255FC5028((uint64_t)v21, v47, (uint64_t (*)(void))sub_255FC4E08);
  sub_255FC4DA8();
  *(void *)(v33 + *(int *)(v34 + 36)) = 0x3FA999999999999ALL;
  return sub_255FC4FC8((uint64_t)v21, (uint64_t (*)(void))sub_255FC4E08);
}

void sub_255FC4DA8()
{
  if (!qword_269F43BD8)
  {
    sub_255FC4E08();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43BD8);
    }
  }
}

void sub_255FC4E08()
{
  if (!qword_269F43BE0)
  {
    sub_255F6721C();
    sub_2561762D8();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43BE0);
    }
  }
}

void sub_255FC4E70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_255F672DC(255, (unint64_t *)&qword_269F42BC8, MEMORY[0x263F1B570], MEMORY[0x263F19900], MEMORY[0x263F18E28]);
    uint64_t v7 = v6;
    sub_255FC4DA8();
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_255FC4F0C()
{
  return sub_255FC4F48(&qword_269F43BF8, (void (*)(uint64_t))sub_255FC4E08, (void (*)(void))sub_255F673A8);
}

uint64_t sub_255FC4F48(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255FC4FC8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_255FC5028(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_255FC5094()
{
  unint64_t result = qword_269F43C00;
  if (!qword_269F43C00)
  {
    sub_255FC4E70(255, &qword_269F43C08, MEMORY[0x263F19B28]);
    sub_255F6747C();
    sub_255FC4F48(&qword_269F43BF0, (void (*)(uint64_t))sub_255FC4DA8, (void (*)(void))sub_255FC4F0C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43C00);
  }
  return result;
}

uint64_t destroy for IntroPhase_iOS()
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for IntroPhase_iOS(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for IntroPhase_iOS(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for IntroPhase_iOS(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for IntroPhase_iOS(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IntroPhase_iOS(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IntroPhase_iOS()
{
  return &type metadata for IntroPhase_iOS;
}

uint64_t sub_255FC5358()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255FC5374@<X0>(uint64_t a1@<X8>)
{
  sub_255FC5774();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v1[1])
  {
    sub_255FC55A8(&v23);
    unint64_t v8 = v23.n128_u64[1];
    unint64_t v7 = v23.n128_u64[0];
    uint64_t v9 = v24;
    uint64_t v10 = v25;
    uint64_t v11 = v26;
    uint64_t v12 = v27;
    uint64_t v13 = v28;
    long long v15 = v29;
    uint64_t v14 = v30;
  }
  else
  {
    unint64_t v7 = 0;
    unint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    long long v15 = 0uLL;
  }
  *(void *)uint64_t v6 = v7;
  *((void *)v6 + 1) = v8;
  *((void *)v6 + 2) = v9;
  *((void *)v6 + 3) = v10;
  *((void *)v6 + 4) = v11;
  *((void *)v6 + 5) = v12;
  *((void *)v6 + 6) = v13;
  *(_OWORD *)(v6 + 56) = v15;
  *((void *)v6 + 9) = v14;
  uint64_t v16 = (uint64_t *)&v6[*(int *)(v4 + 36)];
  long long v31 = *v1;
  uint64_t v18 = *((void *)v1 + 3);
  uint64_t v17 = *((void *)v1 + 4);
  uint64_t KeyPath = swift_getKeyPath();
  *(uint64_t *)((char *)v16 + *(int *)(type metadata accessor for IntroPhaseContent() + 24)) = KeyPath;
  sub_255FC583C(0, &qword_269F42B40, (void (*)(uint64_t))type metadata accessor for IntroPhaseSpecs);
  swift_storeEnumTagMultiPayload();
  sub_255FC580C((uint64_t)&v31);
  type metadata accessor for StateOfMindEntryModel(0);
  sub_255FC59FC(&qword_269F42CB0, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel);
  swift_retain();
  *uint64_t v16 = sub_2561760E8();
  v16[1] = v20;
  void v16[2] = v18;
  v16[3] = v17;
  uint64_t v21 = (uint64_t *)&v6[*(int *)(v4 + 40)];
  uint64_t *v21 = swift_getKeyPath();
  sub_255FC583C(0, &qword_269F435C0, (void (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs);
  swift_storeEnumTagMultiPayload();
  return sub_255FC5890((uint64_t)v6, a1);
}

__n128 sub_255FC55A8@<Q0>(__n128 *a1@<X8>)
{
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v3 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_2561755B8();
  unint64_t v6 = v5;
  swift_bridgeObjectRelease();

  long long v13 = *v1;
  uint64_t v7 = swift_allocObject();
  long long v8 = v1[1];
  *(_OWORD *)(v7 + 16) = *v1;
  *(_OWORD *)(v7 + 32) = v8;
  *(void *)(v7 + 48) = *((void *)v1 + 4);
  sub_255FC580C((uint64_t)&v13);
  sub_255FC595C();
  swift_retain();
  sub_256177768();
  __n128 result = v10;
  a1->n128_u64[0] = v4;
  a1->n128_u64[1] = v6;
  a1[1] = v10;
  a1[2].n128_u64[0] = v11;
  a1[2].n128_u8[8] = v12;
  a1[3].n128_u64[0] = 0x747475427478654ELL;
  a1[3].n128_u64[1] = 0xEA00000000006E6FLL;
  a1[4].n128_u64[0] = (unint64_t)sub_255FC5934;
  a1[4].n128_u64[1] = v7;
  return result;
}

uint64_t sub_255FC5738@<X0>(uint64_t a1@<X8>)
{
  return sub_255FC5374(a1);
}

void sub_255FC5774()
{
  if (!qword_269F43C10)
  {
    type metadata accessor for IntroPhaseContent();
    sub_255FC59FC(&qword_269F43C18, (void (*)(uint64_t))type metadata accessor for IntroPhaseContent);
    unint64_t v0 = type metadata accessor for StateOfMindEntryPhase_iOS();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43C10);
    }
  }
}

uint64_t sub_255FC580C(uint64_t a1)
{
  return a1;
}

void sub_255FC583C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_256175E08();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_255FC5890(uint64_t a1, uint64_t a2)
{
  sub_255FC5774();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_255FC58F4()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_255FC5934()
{
  return (*(uint64_t (**)(void))(v0 + 40))();
}

void sub_255FC595C()
{
  if (!qword_269F43C20)
  {
    unint64_t v0 = sub_256178448();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43C20);
    }
  }
}

uint64_t sub_255FC59B4()
{
  return sub_255FC59FC(&qword_269F43C28, (void (*)(uint64_t))sub_255FC5774);
}

uint64_t sub_255FC59FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_255FC5A44(void *a1, void *a2, uint64_t a3)
{
  id v3 = a2;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    sub_255FCC794(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, v3, v7);
    }
    else
    {
      *a1 = *v3;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(v6 + 20);
    __n128 v10 = (void *)((char *)a1 + v9);
    unint64_t v11 = (void *)((char *)v3 + v9);
    sub_255FCC794(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_256176AA8();
      uint64_t v13 = *(void *)(v12 - 8);
      uint64_t v86 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      uint64_t v85 = v13;
      uint64_t v83 = v3;
      if (v86((char *)v11, 1, v12))
      {
        sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      long long v15 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v16 = v15[5];
      uint64_t v17 = (char *)v10 + v16;
      uint64_t v18 = (char *)v11 + v16;
      uint64_t v19 = sub_256176158();
      uint64_t v87 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
      v87(v17, v18, v19);
      *((unsigned char *)v10 + v15[6]) = *((unsigned char *)v11 + v15[6]);
      uint64_t v20 = v15[7];
      uint64_t v21 = (char *)v10 + v20;
      id v22 = (char *)v11 + v20;
      uint64_t v23 = sub_256175D98();
      uint64_t v81 = *(void (**)(char *, char *))(*(void *)(v23 - 8) + 16);
      uint64_t v82 = v23;
      v81(v21, v22);
      uint64_t v24 = v15[8];
      uint64_t v25 = (char *)v10 + v24;
      uint64_t v26 = (char *)v11 + v24;
      unsigned __int8 v27 = v86;
      if (v86((char *)v11 + v24, 1, v12))
      {
        sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v25, v26, v12);
        unsigned __int8 v27 = v86;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v25, 0, 1, v12);
      }
      uint64_t v29 = _s6StylesV8TimelineVMa(0);
      v87(&v25[*(int *)(v29 + 20)], &v26[*(int *)(v29 + 20)], v19);
      uint64_t v30 = v15[9];
      long long v31 = (char *)v10 + v30;
      uint64_t v32 = (char *)v11 + v30;
      uint64_t v84 = v6;
      if (v27((char *)v11 + v30, 1, v12))
      {
        sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v31, v32, v12);
        unsigned __int8 v27 = v86;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v31, 0, 1, v12);
      }
      uint64_t v34 = _s6StylesV6NoDataVMa(0);
      v87(&v31[*(int *)(v34 + 20)], &v32[*(int *)(v34 + 20)], v19);
      v31[*(int *)(v34 + 24)] = v32[*(int *)(v34 + 24)];
      uint64_t v35 = v15[10];
      uint64_t v36 = (char *)v10 + v35;
      uint64_t v37 = (char *)v11 + v35;
      if (v27((char *)v11 + v35, 1, v12))
      {
        sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v36, v37, v12);
        unsigned __int8 v27 = v86;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v36, 0, 1, v12);
      }
      uint64_t v39 = _s6StylesV11PlaceholderVMa(0);
      v87(&v36[*(int *)(v39 + 20)], &v37[*(int *)(v39 + 20)], v19);
      uint64_t v40 = v15[11];
      uint64_t v41 = (char *)v10 + v40;
      uint64_t v42 = (char *)v11 + v40;
      if (v27((char *)v11 + v40, 1, v12))
      {
        sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v41, v42, v12);
        unsigned __int8 v27 = v86;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v41, 0, 1, v12);
      }
      uint64_t v44 = _s6StylesV6SymbolVMa(0);
      v87(&v41[*(int *)(v44 + 20)], &v42[*(int *)(v44 + 20)], v19);
      uint64_t v45 = v15[12];
      uint64_t v46 = (char *)v10 + v45;
      uint64_t v47 = (char *)v11 + v45;
      if (v27((char *)v11 + v45, 1, v12))
      {
        sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v46, v47, v12);
        unsigned __int8 v27 = v86;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v46, 0, 1, v12);
      }
      uint64_t v49 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v87(&v46[v49[5]], &v47[v49[5]], v19);
      v46[v49[6]] = v47[v49[6]];
      ((void (*)(char *, char *, uint64_t))v81)(&v46[v49[7]], &v47[v49[7]], v82);
      uint64_t v50 = v15[13];
      uint64_t v51 = (char *)v10 + v50;
      uint64_t v52 = (char *)v11 + v50;
      if (v27((char *)v11 + v50, 1, v12))
      {
        sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v51, v52, v12);
        unsigned __int8 v27 = v86;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v51, 0, 1, v12);
      }
      uint64_t v54 = _s6StylesV5EmptyVMa(0);
      v87(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v19);
      v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
      uint64_t v55 = v15[14];
      uint64_t v56 = (char *)v10 + v55;
      uint64_t v57 = (char *)v11 + v55;
      if (v27((char *)v11 + v55, 1, v12))
      {
        sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v56, v57, v12);
        unsigned __int8 v27 = v86;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v56, 0, 1, v12);
      }
      uint64_t v59 = _s6StylesV5DailyVMa(0);
      v87(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v19);
      v56[*(int *)(v59 + 24)] = v57[*(int *)(v59 + 24)];
      uint64_t v60 = v15[15];
      uint64_t v61 = (char *)v10 + v60;
      uint64_t v62 = (char *)v11 + v60;
      if (v27((char *)v11 + v60, 1, v12))
      {
        sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v61, v62, v12);
        unsigned __int8 v27 = v86;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v61, 0, 1, v12);
      }
      uint64_t v6 = v84;
      uint64_t v64 = _s6StylesV9MomentaryVMa(0);
      v87(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v19);
      uint64_t v65 = v15[16];
      uint64_t v66 = (char *)v10 + v65;
      uint64_t v67 = (char *)v11 + v65;
      if (v27((char *)v11 + v65, 1, v12))
      {
        sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v66, v67, v12);
        unsigned __int8 v27 = v86;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v66, 0, 1, v12);
      }
      uint64_t v69 = _s6StylesV6HeaderVMa(0);
      v87(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v19);
      uint64_t v70 = v15[17];
      uint64_t v71 = (char *)v10 + v70;
      uint64_t v72 = (char *)v11 + v70;
      if (v27((char *)v11 + v70, 1, v12))
      {
        sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v71, v72, v12);
        unsigned __int8 v27 = v86;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v71, 0, 1, v12);
      }
      uint64_t v74 = _s6StylesV11ChartButtonVMa(0);
      v87(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v19);
      uint64_t v75 = v15[18];
      uint64_t v76 = (char *)v10 + v75;
      uint64_t v77 = (char *)v11 + v75;
      if (v27(v77, 1, v12))
      {
        sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v76, v77, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v76, 0, 1, v12);
      }
      uint64_t v79 = _s6StylesV15LogButtonFooterVMa(0);
      v87(&v76[*(int *)(v79 + 20)], &v77[*(int *)(v79 + 20)], v19);
      id v3 = v83;
    }
    else
    {
      *__n128 v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *(void *)((char *)a1 + *(int *)(v6 + 24)) = *(void *)((char *)v3 + *(int *)(v6 + 24));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_255FC6944(uint64_t a1, uint64_t a2)
{
  sub_255FCC794(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_255FCC794(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256176AA8();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    if (!v8(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
    uint64_t v9 = type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v10 = v5 + *(int *)(v9 + 20);
    uint64_t v11 = sub_256176158();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
    uint64_t v13 = v10;
    uint64_t v14 = (int *)v9;
    v12(v13, v11);
    uint64_t v15 = v5 + *(int *)(v9 + 28);
    uint64_t v16 = sub_256175D98();
    uint64_t v43 = *(void (**)(uint64_t))(*(void *)(v16 - 8) + 8);
    uint64_t v44 = v16;
    v43(v15);
    uint64_t v17 = v5 + v14[8];
    if (!v8(v17, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v17, v6);
    }
    uint64_t v18 = _s6StylesV8TimelineVMa(0);
    v12(v17 + *(int *)(v18 + 20), v11);
    uint64_t v19 = v5 + v14[9];
    if (!v8(v19, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v19, v6);
    }
    uint64_t v20 = _s6StylesV6NoDataVMa(0);
    v12(v19 + *(int *)(v20 + 20), v11);
    uint64_t v21 = v5 + v14[10];
    if (!v8(v21, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v21, v6);
    }
    uint64_t v22 = _s6StylesV11PlaceholderVMa(0);
    v12(v21 + *(int *)(v22 + 20), v11);
    uint64_t v23 = v5 + v14[11];
    if (!v8(v23, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v23, v6);
    }
    uint64_t v24 = _s6StylesV6SymbolVMa(0);
    v12(v23 + *(int *)(v24 + 20), v11);
    uint64_t v25 = v5 + v14[12];
    uint64_t v45 = v14;
    if (!v8(v25, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v25, v6);
    }
    uint64_t v26 = v7;
    uint64_t v27 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v12(v25 + *(int *)(v27 + 20), v11);
    uint64_t v28 = *(int *)(v27 + 28);
    uint64_t v29 = v26;
    ((void (*)(uint64_t, uint64_t))v43)(v25 + v28, v44);
    uint64_t v30 = v5 + v45[13];
    if (!v8(v30, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v30, v6);
    }
    uint64_t v31 = _s6StylesV5EmptyVMa(0);
    v12(v30 + *(int *)(v31 + 20), v11);
    uint64_t v32 = v5 + v45[14];
    if (!v8(v32, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32, v6);
    }
    uint64_t v33 = _s6StylesV5DailyVMa(0);
    v12(v32 + *(int *)(v33 + 20), v11);
    uint64_t v34 = v5 + v45[15];
    if (!v8(v34, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v34, v6);
    }
    uint64_t v35 = _s6StylesV9MomentaryVMa(0);
    v12(v34 + *(int *)(v35 + 20), v11);
    uint64_t v36 = v5 + v45[16];
    if (!v8(v36, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v36, v6);
    }
    uint64_t v37 = _s6StylesV6HeaderVMa(0);
    v12(v36 + *(int *)(v37 + 20), v11);
    uint64_t v38 = v5 + v45[17];
    if (!v8(v38, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v38, v6);
    }
    uint64_t v39 = _s6StylesV11ChartButtonVMa(0);
    v12(v38 + *(int *)(v39 + 20), v11);
    uint64_t v40 = v5 + v45[18];
    if (!v8(v40, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v40, v6);
    }
    uint64_t v41 = _s6StylesV15LogButtonFooterVMa(0);
    v12(v40 + *(int *)(v41 + 20), v11);
  }
  else
  {
    swift_release();
  }

  return swift_bridgeObjectRelease();
}

void *sub_255FC7030(void *a1, void *a2, uint64_t a3)
{
  sub_255FCC794(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256175D98();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_255FCC794(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_256176AA8();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v86 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    uint64_t v84 = a1;
    uint64_t v85 = v11;
    uint64_t v82 = a3;
    if (v86((char *)v9, 1, v10))
    {
      sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v13 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v14 = v13[5];
    uint64_t v15 = (char *)v8 + v14;
    uint64_t v16 = (char *)v9 + v14;
    uint64_t v17 = sub_256176158();
    uint64_t v18 = (void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
    uint64_t v87 = *v18;
    (*v18)(v15, v16, v17);
    *((unsigned char *)v8 + v13[6]) = *((unsigned char *)v9 + v13[6]);
    uint64_t v19 = v13[7];
    uint64_t v20 = (char *)v8 + v19;
    uint64_t v21 = (char *)v9 + v19;
    uint64_t v22 = sub_256175D98();
    uint64_t v80 = *(void (**)(char *, char *))(*(void *)(v22 - 8) + 16);
    uint64_t v81 = v22;
    v80(v20, v21);
    uint64_t v23 = v13[8];
    uint64_t v24 = (char *)v8 + v23;
    uint64_t v25 = (char *)v9 + v23;
    uint64_t v26 = v86;
    if (v86((char *)v9 + v23, 1, v10))
    {
      sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v24, v25, v10);
      uint64_t v26 = v86;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v24, 0, 1, v10);
    }
    uint64_t v28 = _s6StylesV8TimelineVMa(0);
    v87(&v24[*(int *)(v28 + 20)], &v25[*(int *)(v28 + 20)], v17);
    uint64_t v29 = v13[9];
    uint64_t v30 = (char *)v8 + v29;
    uint64_t v31 = (char *)v9 + v29;
    uint64_t v83 = a2;
    if (v26((char *)v9 + v29, 1, v10))
    {
      sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v30, v31, v10);
      uint64_t v26 = v86;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v30, 0, 1, v10);
    }
    uint64_t v33 = _s6StylesV6NoDataVMa(0);
    v87(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v17);
    v30[*(int *)(v33 + 24)] = v31[*(int *)(v33 + 24)];
    uint64_t v34 = v13[10];
    uint64_t v35 = (char *)v8 + v34;
    uint64_t v36 = (char *)v9 + v34;
    if (v26((char *)v9 + v34, 1, v10))
    {
      sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v35, v36, v10);
      uint64_t v26 = v86;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v35, 0, 1, v10);
    }
    uint64_t v38 = _s6StylesV11PlaceholderVMa(0);
    v87(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v17);
    uint64_t v39 = v13[11];
    uint64_t v40 = (char *)v8 + v39;
    uint64_t v41 = (char *)v9 + v39;
    if (v26((char *)v9 + v39, 1, v10))
    {
      sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v40, v41, v10);
      uint64_t v26 = v86;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v40, 0, 1, v10);
    }
    uint64_t v43 = _s6StylesV6SymbolVMa(0);
    v87(&v40[*(int *)(v43 + 20)], &v41[*(int *)(v43 + 20)], v17);
    uint64_t v44 = v13[12];
    uint64_t v45 = (char *)v8 + v44;
    uint64_t v46 = (char *)v9 + v44;
    if (v26((char *)v9 + v44, 1, v10))
    {
      sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v45, v46, v10);
      uint64_t v26 = v86;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v45, 0, 1, v10);
    }
    uint64_t v48 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v87(&v45[v48[5]], &v46[v48[5]], v17);
    v45[v48[6]] = v46[v48[6]];
    ((void (*)(char *, char *, uint64_t))v80)(&v45[v48[7]], &v46[v48[7]], v81);
    uint64_t v49 = v13[13];
    uint64_t v50 = (char *)v8 + v49;
    uint64_t v51 = (char *)v9 + v49;
    if (v26((char *)v9 + v49, 1, v10))
    {
      sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v50, v51, v10);
      uint64_t v26 = v86;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v50, 0, 1, v10);
    }
    uint64_t v53 = _s6StylesV5EmptyVMa(0);
    v87(&v50[*(int *)(v53 + 20)], &v51[*(int *)(v53 + 20)], v17);
    v50[*(int *)(v53 + 24)] = v51[*(int *)(v53 + 24)];
    uint64_t v54 = v13[14];
    uint64_t v55 = (char *)v8 + v54;
    uint64_t v56 = (char *)v9 + v54;
    if (v26((char *)v9 + v54, 1, v10))
    {
      sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v55, v56, v10);
      uint64_t v26 = v86;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v55, 0, 1, v10);
    }
    uint64_t v58 = _s6StylesV5DailyVMa(0);
    v87(&v55[*(int *)(v58 + 20)], &v56[*(int *)(v58 + 20)], v17);
    v55[*(int *)(v58 + 24)] = v56[*(int *)(v58 + 24)];
    uint64_t v59 = v13[15];
    uint64_t v60 = (char *)v8 + v59;
    uint64_t v61 = (char *)v9 + v59;
    if (v26((char *)v9 + v59, 1, v10))
    {
      sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v60, v61, v10);
      uint64_t v26 = v86;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v60, 0, 1, v10);
    }
    a2 = v83;
    uint64_t v63 = _s6StylesV9MomentaryVMa(0);
    v87(&v60[*(int *)(v63 + 20)], &v61[*(int *)(v63 + 20)], v17);
    uint64_t v64 = v13[16];
    uint64_t v65 = (char *)v8 + v64;
    uint64_t v66 = (char *)v9 + v64;
    if (v26((char *)v9 + v64, 1, v10))
    {
      sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v65, v66, v10);
      uint64_t v26 = v86;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v65, 0, 1, v10);
    }
    uint64_t v68 = _s6StylesV6HeaderVMa(0);
    v87(&v65[*(int *)(v68 + 20)], &v66[*(int *)(v68 + 20)], v17);
    uint64_t v69 = v13[17];
    uint64_t v70 = (char *)v8 + v69;
    uint64_t v71 = (char *)v9 + v69;
    if (v26((char *)v9 + v69, 1, v10))
    {
      sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v70, v71, v10);
      uint64_t v26 = v86;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v70, 0, 1, v10);
    }
    uint64_t v73 = _s6StylesV11ChartButtonVMa(0);
    v87(&v70[*(int *)(v73 + 20)], &v71[*(int *)(v73 + 20)], v17);
    uint64_t v74 = v13[18];
    uint64_t v75 = (char *)v8 + v74;
    uint64_t v76 = (char *)v9 + v74;
    if (v26((char *)v9 + v74, 1, v10))
    {
      sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v75, v76, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v75, 0, 1, v10);
    }
    uint64_t v78 = _s6StylesV15LogButtonFooterVMa(0);
    v87(&v75[*(int *)(v78 + 20)], &v76[*(int *)(v78 + 20)], v17);
    a1 = v84;
    a3 = v82;
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_255FC7EE4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2;
  if (a1 != a2)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    sub_255FC8D9C((uint64_t)a1, &qword_269F47D00, MEMORY[0x263F18520]);
    sub_255FCC794(0, &qword_269F47D00, v6, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, v4, v7);
    }
    else
    {
      *a1 = *v4;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (void *)((char *)v4 + v8);
    sub_255FC8D9C((uint64_t)a1 + v8, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles);
    sub_255FCC794(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v84 = a3;
      uint64_t v11 = sub_256176AA8();
      uint64_t v12 = *(void *)(v11 - 8);
      uint64_t v88 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48);
      uint64_t v85 = v4;
      if (v88(v10, 1, v11))
      {
        sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      uint64_t v14 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v15 = v14[5];
      uint64_t v16 = (char *)v9 + v15;
      uint64_t v17 = (char *)v10 + v15;
      uint64_t v18 = sub_256176158();
      uint64_t v19 = (void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
      uint64_t v87 = *v19;
      (*v19)(v16, v17, v18);
      *((unsigned char *)v9 + v14[6]) = *((unsigned char *)v10 + v14[6]);
      uint64_t v20 = v14[7];
      uint64_t v21 = (char *)v9 + v20;
      uint64_t v22 = (char *)v10 + v20;
      uint64_t v23 = sub_256175D98();
      uint64_t v82 = *(void (**)(char *, char *))(*(void *)(v23 - 8) + 16);
      uint64_t v83 = v23;
      v82(v21, v22);
      uint64_t v24 = v14[8];
      uint64_t v25 = (char *)v9 + v24;
      uint64_t v26 = (char *)v10 + v24;
      if (v88((void *)((char *)v10 + v24), 1, v11))
      {
        sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v25, v26, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v25, 0, 1, v11);
      }
      uint64_t v28 = _s6StylesV8TimelineVMa(0);
      v87(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v18);
      uint64_t v29 = v14[9];
      uint64_t v30 = (char *)v9 + v29;
      uint64_t v31 = (char *)v10 + v29;
      uint64_t v86 = v12;
      if (v88((void *)((char *)v10 + v29), 1, v11))
      {
        sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v30, v31, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v30, 0, 1, v11);
      }
      uint64_t v33 = _s6StylesV6NoDataVMa(0);
      v87(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v18);
      v30[*(int *)(v33 + 24)] = v31[*(int *)(v33 + 24)];
      uint64_t v34 = v14[10];
      uint64_t v35 = (char *)v9 + v34;
      uint64_t v36 = (char *)v10 + v34;
      if (v88((void *)((char *)v10 + v34), 1, v11))
      {
        sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
        uint64_t v38 = v86;
      }
      else
      {
        uint64_t v38 = v86;
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v35, v36, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v35, 0, 1, v11);
      }
      uint64_t v39 = _s6StylesV11PlaceholderVMa(0);
      v87(&v35[*(int *)(v39 + 20)], &v36[*(int *)(v39 + 20)], v18);
      uint64_t v40 = v14[11];
      uint64_t v41 = (char *)v9 + v40;
      uint64_t v42 = (char *)v10 + v40;
      if (v88((void *)((char *)v10 + v40), 1, v11))
      {
        sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v41, v42, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v41, 0, 1, v11);
      }
      uint64_t v44 = _s6StylesV6SymbolVMa(0);
      v87(&v41[*(int *)(v44 + 20)], &v42[*(int *)(v44 + 20)], v18);
      uint64_t v45 = v14[12];
      uint64_t v46 = (char *)v9 + v45;
      uint64_t v47 = (char *)v10 + v45;
      if (v88((void *)((char *)v10 + v45), 1, v11))
      {
        sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v46, v47, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v46, 0, 1, v11);
      }
      uint64_t v49 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v87(&v46[v49[5]], &v47[v49[5]], v18);
      v46[v49[6]] = v47[v49[6]];
      ((void (*)(char *, char *, uint64_t))v82)(&v46[v49[7]], &v47[v49[7]], v83);
      uint64_t v50 = v14[13];
      uint64_t v51 = (char *)v9 + v50;
      uint64_t v52 = (char *)v10 + v50;
      if (v88((void *)((char *)v10 + v50), 1, v11))
      {
        sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v51, v52, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v51, 0, 1, v11);
      }
      uint64_t v54 = _s6StylesV5EmptyVMa(0);
      v87(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v18);
      v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
      uint64_t v55 = v14[14];
      uint64_t v56 = (char *)v9 + v55;
      uint64_t v57 = (char *)v10 + v55;
      if (v88((void *)((char *)v10 + v55), 1, v11))
      {
        sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v56, v57, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v56, 0, 1, v11);
      }
      uint64_t v59 = _s6StylesV5DailyVMa(0);
      v87(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v18);
      v56[*(int *)(v59 + 24)] = v57[*(int *)(v59 + 24)];
      uint64_t v60 = v14[15];
      uint64_t v61 = (char *)v9 + v60;
      uint64_t v62 = (char *)v10 + v60;
      if (v88((void *)((char *)v10 + v60), 1, v11))
      {
        sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
        uint64_t v64 = v86;
      }
      else
      {
        uint64_t v64 = v86;
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v61, v62, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v61, 0, 1, v11);
      }
      uint64_t v65 = _s6StylesV9MomentaryVMa(0);
      v87(&v61[*(int *)(v65 + 20)], &v62[*(int *)(v65 + 20)], v18);
      uint64_t v66 = v14[16];
      uint64_t v67 = (char *)v9 + v66;
      uint64_t v68 = (char *)v10 + v66;
      if (v88((void *)((char *)v10 + v66), 1, v11))
      {
        sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v67, v68, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v67, 0, 1, v11);
      }
      uint64_t v70 = _s6StylesV6HeaderVMa(0);
      v87(&v67[*(int *)(v70 + 20)], &v68[*(int *)(v70 + 20)], v18);
      uint64_t v71 = v14[17];
      uint64_t v72 = (char *)v9 + v71;
      uint64_t v73 = (char *)v10 + v71;
      if (v88((void *)((char *)v10 + v71), 1, v11))
      {
        sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v72, v73, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v72, 0, 1, v11);
      }
      uint64_t v75 = _s6StylesV11ChartButtonVMa(0);
      v87(&v72[*(int *)(v75 + 20)], &v73[*(int *)(v75 + 20)], v18);
      uint64_t v76 = v14[18];
      uint64_t v77 = (char *)v9 + v76;
      uint64_t v78 = (char *)v10 + v76;
      if (v88((void *)((char *)v10 + v76), 1, v11))
      {
        sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v77, v78, *(void *)(*(void *)(v79 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v77, v78, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v77, 0, 1, v11);
      }
      a3 = v84;
      uint64_t v80 = _s6StylesV15LogButtonFooterVMa(0);
      v87(&v77[*(int *)(v80 + 20)], &v78[*(int *)(v80 + 20)], v18);
      uint64_t v4 = v85;
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)v4 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_255FC8D9C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_255FCC794(0, a2, a3, MEMORY[0x263F185C8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

char *sub_255FC8E0C(char *a1, char *a2, uint64_t a3)
{
  sub_255FCC794(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  uint64_t v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_256175D98();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  sub_255FCC794(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  uint64_t v13 = v12;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_256176AA8();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v90 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    uint64_t v88 = a1;
    uint64_t v89 = v15;
    uint64_t v86 = a3;
    if (v90(v11, 1, v14))
    {
      sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v10, v11, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
    }
    uint64_t v17 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v18 = v17[5];
    uint64_t v19 = &v10[v18];
    uint64_t v20 = &v11[v18];
    uint64_t v21 = sub_256176158();
    uint64_t v22 = (void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32);
    uint64_t v91 = *v22;
    (*v22)(v19, v20, v21);
    v10[v17[6]] = v11[v17[6]];
    uint64_t v23 = v17[7];
    uint64_t v24 = &v10[v23];
    uint64_t v25 = &v11[v23];
    uint64_t v26 = sub_256175D98();
    uint64_t v84 = *(void (**)(char *, char *))(*(void *)(v26 - 8) + 32);
    uint64_t v85 = v26;
    v84(v24, v25);
    uint64_t v27 = v17[8];
    uint64_t v28 = &v10[v27];
    uint64_t v29 = &v11[v27];
    uint64_t v30 = v90;
    if (v90(&v11[v27], 1, v14))
    {
      sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v28, v29, v14);
      uint64_t v30 = v90;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v28, 0, 1, v14);
    }
    uint64_t v32 = _s6StylesV8TimelineVMa(0);
    v91(&v28[*(int *)(v32 + 20)], &v29[*(int *)(v32 + 20)], v21);
    uint64_t v33 = v17[9];
    uint64_t v34 = &v10[v33];
    uint64_t v35 = &v11[v33];
    uint64_t v87 = a2;
    if (v30(&v11[v33], 1, v14))
    {
      sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v34, v35, v14);
      uint64_t v30 = v90;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v34, 0, 1, v14);
    }
    uint64_t v37 = _s6StylesV6NoDataVMa(0);
    v91(&v34[*(int *)(v37 + 20)], &v35[*(int *)(v37 + 20)], v21);
    v34[*(int *)(v37 + 24)] = v35[*(int *)(v37 + 24)];
    uint64_t v38 = v17[10];
    uint64_t v39 = &v10[v38];
    uint64_t v40 = &v11[v38];
    if (v30(&v11[v38], 1, v14))
    {
      sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v39, v40, v14);
      uint64_t v30 = v90;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v39, 0, 1, v14);
    }
    uint64_t v42 = _s6StylesV11PlaceholderVMa(0);
    v91(&v39[*(int *)(v42 + 20)], &v40[*(int *)(v42 + 20)], v21);
    uint64_t v43 = v17[11];
    uint64_t v44 = &v10[v43];
    uint64_t v45 = &v11[v43];
    if (v30(&v11[v43], 1, v14))
    {
      sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v44, v45, v14);
      uint64_t v30 = v90;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v44, 0, 1, v14);
    }
    uint64_t v47 = _s6StylesV6SymbolVMa(0);
    v91(&v44[*(int *)(v47 + 20)], &v45[*(int *)(v47 + 20)], v21);
    uint64_t v48 = v17[12];
    uint64_t v49 = &v10[v48];
    uint64_t v50 = &v11[v48];
    if (v30(&v11[v48], 1, v14))
    {
      sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v49, v50, v14);
      uint64_t v30 = v90;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v49, 0, 1, v14);
    }
    uint64_t v52 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v91(&v49[v52[5]], &v50[v52[5]], v21);
    v49[v52[6]] = v50[v52[6]];
    ((void (*)(char *, char *, uint64_t))v84)(&v49[v52[7]], &v50[v52[7]], v85);
    uint64_t v53 = v17[13];
    uint64_t v54 = &v10[v53];
    uint64_t v55 = &v11[v53];
    if (v30(&v11[v53], 1, v14))
    {
      sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v54, v55, v14);
      uint64_t v30 = v90;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v54, 0, 1, v14);
    }
    uint64_t v57 = _s6StylesV5EmptyVMa(0);
    v91(&v54[*(int *)(v57 + 20)], &v55[*(int *)(v57 + 20)], v21);
    v54[*(int *)(v57 + 24)] = v55[*(int *)(v57 + 24)];
    uint64_t v58 = v17[14];
    uint64_t v59 = &v10[v58];
    uint64_t v60 = &v11[v58];
    if (v30(&v11[v58], 1, v14))
    {
      sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v59, v60, v14);
      uint64_t v30 = v90;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v59, 0, 1, v14);
    }
    uint64_t v62 = _s6StylesV5DailyVMa(0);
    v91(&v59[*(int *)(v62 + 20)], &v60[*(int *)(v62 + 20)], v21);
    v59[*(int *)(v62 + 24)] = v60[*(int *)(v62 + 24)];
    uint64_t v63 = v17[15];
    uint64_t v64 = &v10[v63];
    uint64_t v65 = &v11[v63];
    if (v30(&v11[v63], 1, v14))
    {
      sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v64, v65, v14);
      uint64_t v30 = v90;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v64, 0, 1, v14);
    }
    a2 = v87;
    uint64_t v67 = _s6StylesV9MomentaryVMa(0);
    v91(&v64[*(int *)(v67 + 20)], &v65[*(int *)(v67 + 20)], v21);
    uint64_t v68 = v17[16];
    uint64_t v69 = &v10[v68];
    uint64_t v70 = &v11[v68];
    if (v30(&v11[v68], 1, v14))
    {
      sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v69, v70, v14);
      uint64_t v30 = v90;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v69, 0, 1, v14);
    }
    uint64_t v72 = _s6StylesV6HeaderVMa(0);
    v91(&v69[*(int *)(v72 + 20)], &v70[*(int *)(v72 + 20)], v21);
    uint64_t v73 = v17[17];
    uint64_t v74 = &v10[v73];
    uint64_t v75 = &v11[v73];
    if (v30(&v11[v73], 1, v14))
    {
      sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v74, v75, v14);
      uint64_t v30 = v90;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v74, 0, 1, v14);
    }
    uint64_t v77 = _s6StylesV11ChartButtonVMa(0);
    v91(&v74[*(int *)(v77 + 20)], &v75[*(int *)(v77 + 20)], v21);
    uint64_t v78 = v17[18];
    uint64_t v79 = &v10[v78];
    uint64_t v80 = &v11[v78];
    if (v30(&v11[v78], 1, v14))
    {
      sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v79, v80, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v79, 0, 1, v14);
    }
    uint64_t v82 = _s6StylesV15LogButtonFooterVMa(0);
    v91(&v79[*(int *)(v82 + 20)], &v80[*(int *)(v82 + 20)], v21);
    swift_storeEnumTagMultiPayload();
    a1 = v88;
    a3 = v86;
  }
  else
  {
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_255FC9CD4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v4 = a2;
  if (a1 != a2)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    sub_255FC8D9C((uint64_t)a1, &qword_269F47D00, MEMORY[0x263F18520]);
    sub_255FCC794(0, &qword_269F47D00, v6, MEMORY[0x263F185C8]);
    uint64_t v8 = v7;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_256175D98();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, v4, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, v4, *(void *)(*(void *)(v8 - 8) + 64));
    }
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &v4[v10];
    sub_255FC8D9C((uint64_t)&a1[v10], &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles);
    sub_255FCC794(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    uint64_t v14 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v88 = a3;
      uint64_t v15 = sub_256176AA8();
      uint64_t v16 = *(void *)(v15 - 8);
      unint64_t v92 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      uint64_t v89 = v4;
      if (v92(v12, 1, v15))
      {
        sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v11, v12, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v11, 0, 1, v15);
      }
      uint64_t v18 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v19 = v18[5];
      uint64_t v20 = &v11[v19];
      uint64_t v21 = &v12[v19];
      uint64_t v22 = sub_256176158();
      uint64_t v23 = (void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32);
      uint64_t v91 = *v23;
      (*v23)(v20, v21, v22);
      v11[v18[6]] = v12[v18[6]];
      uint64_t v24 = v18[7];
      uint64_t v25 = &v11[v24];
      uint64_t v26 = &v12[v24];
      uint64_t v27 = sub_256175D98();
      uint64_t v86 = *(void (**)(char *, char *))(*(void *)(v27 - 8) + 32);
      uint64_t v87 = v27;
      v86(v25, v26);
      uint64_t v28 = v18[8];
      uint64_t v29 = &v11[v28];
      uint64_t v30 = &v12[v28];
      if (v92(&v12[v28], 1, v15))
      {
        sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v29, v30, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v29, 0, 1, v15);
      }
      uint64_t v32 = _s6StylesV8TimelineVMa(0);
      v91(&v29[*(int *)(v32 + 20)], &v30[*(int *)(v32 + 20)], v22);
      uint64_t v33 = v18[9];
      uint64_t v34 = &v11[v33];
      uint64_t v35 = &v12[v33];
      uint64_t v90 = v16;
      if (v92(&v12[v33], 1, v15))
      {
        sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v34, v35, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v34, 0, 1, v15);
      }
      uint64_t v37 = _s6StylesV6NoDataVMa(0);
      v91(&v34[*(int *)(v37 + 20)], &v35[*(int *)(v37 + 20)], v22);
      v34[*(int *)(v37 + 24)] = v35[*(int *)(v37 + 24)];
      uint64_t v38 = v18[10];
      uint64_t v39 = &v11[v38];
      uint64_t v40 = &v12[v38];
      if (v92(&v12[v38], 1, v15))
      {
        sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
        uint64_t v42 = v90;
      }
      else
      {
        uint64_t v42 = v90;
        (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v39, v40, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v39, 0, 1, v15);
      }
      uint64_t v43 = _s6StylesV11PlaceholderVMa(0);
      v91(&v39[*(int *)(v43 + 20)], &v40[*(int *)(v43 + 20)], v22);
      uint64_t v44 = v18[11];
      uint64_t v45 = &v11[v44];
      uint64_t v46 = &v12[v44];
      if (v92(&v12[v44], 1, v15))
      {
        sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v45, v46, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v45, 0, 1, v15);
      }
      uint64_t v48 = _s6StylesV6SymbolVMa(0);
      v91(&v45[*(int *)(v48 + 20)], &v46[*(int *)(v48 + 20)], v22);
      uint64_t v49 = v18[12];
      uint64_t v50 = &v11[v49];
      uint64_t v51 = &v12[v49];
      if (v92(&v12[v49], 1, v15))
      {
        sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v50, v51, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v50, 0, 1, v15);
      }
      uint64_t v53 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v91(&v50[v53[5]], &v51[v53[5]], v22);
      v50[v53[6]] = v51[v53[6]];
      ((void (*)(char *, char *, uint64_t))v86)(&v50[v53[7]], &v51[v53[7]], v87);
      uint64_t v54 = v18[13];
      uint64_t v55 = &v11[v54];
      uint64_t v56 = &v12[v54];
      if (v92(&v12[v54], 1, v15))
      {
        sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v55, v56, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v55, 0, 1, v15);
      }
      uint64_t v58 = _s6StylesV5EmptyVMa(0);
      v91(&v55[*(int *)(v58 + 20)], &v56[*(int *)(v58 + 20)], v22);
      v55[*(int *)(v58 + 24)] = v56[*(int *)(v58 + 24)];
      uint64_t v59 = v18[14];
      uint64_t v60 = &v11[v59];
      uint64_t v61 = &v12[v59];
      if (v92(&v12[v59], 1, v15))
      {
        sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v60, v61, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v60, 0, 1, v15);
      }
      uint64_t v63 = _s6StylesV5DailyVMa(0);
      v91(&v60[*(int *)(v63 + 20)], &v61[*(int *)(v63 + 20)], v22);
      v60[*(int *)(v63 + 24)] = v61[*(int *)(v63 + 24)];
      uint64_t v64 = v18[15];
      uint64_t v65 = &v11[v64];
      uint64_t v66 = &v12[v64];
      if (v92(&v12[v64], 1, v15))
      {
        sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
        uint64_t v68 = v90;
      }
      else
      {
        uint64_t v68 = v90;
        (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v65, v66, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v65, 0, 1, v15);
      }
      uint64_t v69 = _s6StylesV9MomentaryVMa(0);
      v91(&v65[*(int *)(v69 + 20)], &v66[*(int *)(v69 + 20)], v22);
      uint64_t v70 = v18[16];
      uint64_t v71 = &v11[v70];
      uint64_t v72 = &v12[v70];
      if (v92(&v12[v70], 1, v15))
      {
        sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v71, v72, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v71, 0, 1, v15);
      }
      uint64_t v74 = _s6StylesV6HeaderVMa(0);
      v91(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v22);
      uint64_t v75 = v18[17];
      uint64_t v76 = &v11[v75];
      uint64_t v77 = &v12[v75];
      if (v92(&v12[v75], 1, v15))
      {
        sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v76, v77, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v76, 0, 1, v15);
      }
      uint64_t v79 = _s6StylesV11ChartButtonVMa(0);
      v91(&v76[*(int *)(v79 + 20)], &v77[*(int *)(v79 + 20)], v22);
      uint64_t v80 = v18[18];
      uint64_t v81 = &v11[v80];
      uint64_t v82 = &v12[v80];
      if (v92(&v12[v80], 1, v15))
      {
        sub_255FCC794(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v81, v82, *(void *)(*(void *)(v83 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v81, v82, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v81, 0, 1, v15);
      }
      a3 = v88;
      uint64_t v84 = _s6StylesV15LogButtonFooterVMa(0);
      v91(&v81[*(int *)(v84 + 20)], &v82[*(int *)(v84 + 20)], v22);
      swift_storeEnumTagMultiPayload();
      uint64_t v4 = v89;
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
  }
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&v4[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_255FCAB98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255FCABAC);
}

uint64_t sub_255FCABAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_255FCC794(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  sub_255FCC794(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_255FCAD20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255FCAD34);
}

void sub_255FCAD34(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_255FCC794(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    sub_255FCC794(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return;
    }
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  v11(v12, a2, a2, v10);
}

uint64_t _s14EntryEmptyViewVMa()
{
  uint64_t result = qword_269F43C30;
  if (!qword_269F43C30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_255FCAEF0()
{
  sub_255FCC794(319, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (v0 <= 0x3F)
  {
    sub_255FCC794(319, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_255FCB024()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255FCB040@<X0>(uint64_t a1@<X8>)
{
  uint64_t v45 = a1;
  uint64_t v2 = sub_256176BB8();
  uint64_t v41 = *(void *)(v2 - 8);
  uint64_t v42 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = _s6StylesV5EmptyVMa(0);
  uint64_t v6 = v5 - 8;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StateOfMindTimeline.Styles(0);
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FCC700();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_255FCC700;
  sub_255FCC9CC(0, &qword_269F43C78, (void (*)(uint64_t))sub_255FCC700);
  uint64_t v17 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v38 - v18;
  sub_255FCCA30();
  uint64_t v43 = *(void *)(v20 - 8);
  uint64_t v44 = v20;
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FCCBEC(0, &qword_269F43C98, (void (*)(uint64_t))sub_255FCCA30);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v40 = (char *)&v38 - v24;
  *(void *)uint64_t v15 = sub_256176788();
  *((void *)v15 + 1) = 0;
  v15[16] = 0;
  sub_255FCCC58();
  sub_255FCB5C4(v1, &v15[*(int *)(v25 + 44)]);
  _s14EntryEmptyViewVMa();
  sub_256119CA0((uint64_t)v12);
  sub_255FCCE38((uint64_t)&v12[*(int *)(v10 + 60)], (uint64_t)v8, _s6StylesV5EmptyVMa);
  sub_255FCCCF0((uint64_t)v12, type metadata accessor for StateOfMindTimeline.Styles);
  if (v8[*(int *)(v6 + 32)]) {
    double v26 = 321.0;
  }
  else {
    double v26 = 0.0;
  }
  char v27 = v8[*(int *)(v6 + 32)] ^ 1;
  sub_255FCCCF0((uint64_t)v8, _s6StylesV5EmptyVMa);
  uint64_t v28 = sub_2561778E8();
  sub_25611663C(0.0, 1, 0.0, 1, INFINITY, 0, v26, v27, (uint64_t)v19, 0.0, 1, INFINITY, 0, v28, v29);
  sub_255FCCCF0((uint64_t)v15, (uint64_t (*)(void))sub_255FCC700);
  sub_256176B98();
  unint64_t v30 = sub_255FCCAD8();
  sub_256177208();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v4, v42);
  sub_255FCCD50((uint64_t)v19, &qword_269F43C78, (void (*)(uint64_t))v39);
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v31 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_2561755B8();
  uint64_t v34 = v33;
  swift_bridgeObjectRelease();

  uint64_t v48 = v32;
  uint64_t v49 = v34;
  uint64_t v46 = v17;
  unint64_t v47 = v30;
  swift_getOpaqueTypeConformance2();
  sub_255F5CE90();
  uint64_t v35 = (uint64_t)v40;
  uint64_t v36 = v44;
  sub_2561771C8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v22, v36);
  return sub_255FCCDAC(v35, v45);
}

uint64_t sub_255FCB5C4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v159 = a1;
  uint64_t v155 = a2;
  uint64_t v2 = sub_2561762D8();
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v146 = (char *)&v129 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = sub_256177958();
  uint64_t v144 = *(void *)(v145 - 8);
  MEMORY[0x270FA5388](v145);
  unint64_t v143 = (char *)&v129 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = sub_256175D98();
  uint64_t v141 = *(void *)(v142 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v142);
  unint64_t v137 = (char *)&v129 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v157 = (uint64_t)&v129 - v7;
  uint64_t v135 = sub_256176EE8();
  uint64_t v134 = *(void *)(v135 - 8);
  MEMORY[0x270FA5388](v135);
  uint64_t v133 = (char *)&v129 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F7285C();
  uint64_t v136 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v139 = (char *)&v129 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F964CC();
  uint64_t v140 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v138 = (uint64_t)&v129 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FCCBEC(0, &qword_269F43C68, (void (*)(uint64_t))sub_255F964CC);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v149 = (char *)&v129 - v14;
  sub_255FCC8C8();
  uint64_t v147 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v152 = (uint64_t)&v129 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FCC9CC(0, &qword_269F43C58, (void (*)(uint64_t))sub_255FCC8C8);
  uint64_t v150 = v17;
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v154 = (uint64_t)&v129 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v151 = (uint64_t)&v129 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v153 = (uint64_t)&v129 - v22;
  uint64_t v23 = _s6StylesV5EmptyVMa(0);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v129 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for StateOfMindTimeline.Styles(0);
  uint64_t v27 = v26 - 8;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v156 = (uint64_t)&v129 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  id v31 = (char *)&v129 - v30;
  uint64_t v32 = _s21StateOfMindSymbolViewVMa();
  uint64_t v33 = v32 - 8;
  MEMORY[0x270FA5388](v32);
  uint64_t v35 = (uint64_t *)((char *)&v129 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v131 = (void (*)(uint64_t))_s21StateOfMindSymbolViewVMa;
  sub_255FCC9CC(0, &qword_269F42D48, (void (*)(uint64_t))_s21StateOfMindSymbolViewVMa);
  uint64_t v37 = v36 - 8;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v148 = (uint64_t)&v129 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  uint64_t v42 = (char *)&v129 - v41;
  MEMORY[0x270FA5388](v40);
  uint64_t v158 = (uint64_t)&v129 - v43;
  *uint64_t v35 = swift_getKeyPath();
  uint64_t v44 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  sub_255FCC794(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  uint64_t v45 = (uint64_t *)((char *)v35 + *(int *)(v33 + 28));
  uint64_t *v45 = swift_getKeyPath();
  sub_255FCC794(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, v44);
  swift_storeEnumTagMultiPayload();
  *((unsigned char *)v35 + *(int *)(v33 + 32)) = 0;
  uint64_t v132 = _s14EntryEmptyViewVMa();
  uint64_t v46 = v159 + *(int *)(v132 + 20);
  sub_256119CA0((uint64_t)v31);
  sub_255FCCE38((uint64_t)&v31[*(int *)(v27 + 60)], (uint64_t)v25, _s6StylesV5EmptyVMa);
  sub_255FCCCF0((uint64_t)v31, type metadata accessor for StateOfMindTimeline.Styles);
  sub_255FCCCF0((uint64_t)v25, _s6StylesV5EmptyVMa);
  sub_2561778E8();
  sub_256175F38();
  sub_255FCCE38((uint64_t)v35, (uint64_t)v42, (uint64_t (*)(void))_s21StateOfMindSymbolViewVMa);
  unint64_t v47 = &v42[*(int *)(v37 + 44)];
  long long v48 = v163;
  *(_OWORD *)unint64_t v47 = v162;
  *((_OWORD *)v47 + 1) = v48;
  *((_OWORD *)v47 + 2) = v164;
  sub_255FCCCF0((uint64_t)v35, (uint64_t (*)(void))_s21StateOfMindSymbolViewVMa);
  sub_255FCD018((uint64_t)v42, v158, &qword_269F42D48, v131);
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v49 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v50 = sub_2561755B8();
  uint64_t v52 = v51;
  swift_bridgeObjectRelease();

  unint64_t v160 = (void *)v50;
  uint64_t v161 = v52;
  sub_255F5CE90();
  uint64_t v53 = sub_256177028();
  uint64_t v55 = v54;
  uint64_t v130 = v56;
  char v58 = v57 & 1;
  uint64_t v59 = v156;
  sub_256119CA0(v156);
  uint64_t v131 = (void (*)(uint64_t))type metadata accessor for StateOfMindTimeline.Styles;
  sub_255FCCCF0(v59, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256176EB8();
  sub_256176E88();
  sub_256176ED8();
  swift_release();
  uint64_t v60 = v134;
  uint64_t v61 = v133;
  uint64_t v62 = v135;
  (*(void (**)(char *, void, uint64_t))(v134 + 104))(v133, *MEMORY[0x263F1A680], v135);
  sub_256176F08();
  swift_release();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v62);
  uint64_t v63 = sub_256176FD8();
  uint64_t v65 = v64;
  uint64_t v129 = v66;
  LOBYTE(v49) = v67 & 1;
  sub_255F67B2C(v53, v55, v58);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v135 = v46;
  sub_256119CA0(v59);
  sub_255FCCCF0(v59, (uint64_t (*)(void))v131);
  id v68 = objc_msgSend(self, sel_tertiaryLabelColor);
  unint64_t v160 = (void *)MEMORY[0x25A29FE80](v68);
  uint64_t v133 = (char *)sub_256176FA8();
  uint64_t v131 = v69;
  uint64_t v134 = v70;
  int v72 = v71 & 1;
  sub_255F67B2C(v63, v65, (char)v49);
  swift_release();
  swift_bridgeObjectRelease();
  sub_25611A114(v157);
  uint64_t v73 = v141;
  uint64_t v74 = v137;
  uint64_t v75 = v142;
  (*(void (**)(char *, void, uint64_t))(v141 + 104))(v137, *MEMORY[0x263F18508], v142);
  LOBYTE(v62) = sub_256175D88();
  uint64_t v141 = *(void *)(v73 + 8);
  ((void (*)(char *, uint64_t))v141)(v74, v75);
  uint64_t v76 = v144;
  uint64_t v77 = (unsigned int *)MEMORY[0x263F1B950];
  if ((v62 & 1) == 0) {
    uint64_t v77 = (unsigned int *)MEMORY[0x263F1B968];
  }
  uint64_t v78 = v143;
  uint64_t v79 = v145;
  (*(void (**)(char *, void, uint64_t))(v144 + 104))(v143, *v77, v145);
  uint64_t v80 = (uint64_t)v146;
  (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v146, v78, v79);
  uint64_t v81 = (uint64_t)v139;
  sub_255FCCE38(v80, (uint64_t)&v139[*(int *)(v136 + 36)], MEMORY[0x263F190D8]);
  uint64_t v82 = (uint64_t)v133;
  uint64_t v83 = v131;
  *(void *)uint64_t v81 = v133;
  *(void *)(v81 + 8) = v83;
  char v84 = v72;
  LODWORD(v13__isPlatformVersionAtLeast(2, 18, 1, 0) = v72;
  *(unsigned char *)(v81 + 16) = v72;
  *(void *)(v81 + 24) = v134;
  uint64_t v85 = (uint64_t)v83;
  sub_255F67B94(v82, (uint64_t)v83, v84);
  swift_bridgeObjectRetain();
  sub_255FCCCF0(v80, MEMORY[0x263F190D8]);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v78, v79);
  ((void (*)(uint64_t, uint64_t))v141)(v157, v75);
  sub_255F67B2C(v82, v85, v130);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v87 = v138;
  sub_255FCCE38(v81, v138, (uint64_t (*)(void))sub_255F7285C);
  uint64_t v88 = v87 + *(int *)(v140 + 36);
  *(void *)uint64_t v88 = KeyPath;
  *(unsigned char *)(v88 + 8) = 1;
  sub_255FCCCF0(v81, (uint64_t (*)(void))sub_255F7285C);
  uint64_t v89 = *(void **)(v159 + *(int *)(v132 + 24));
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v91 = v87;
  uint64_t v92 = v156;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v89 = sub_256095C94(0, v89[2] + 1, 1, v89);
  }
  unint64_t v94 = v89[2];
  unint64_t v93 = v89[3];
  if (v94 >= v93 >> 1) {
    uint64_t v89 = sub_256095C94((void *)(v93 > 1), v94 + 1, 1, v89);
  }
  v89[2] = v94 + 1;
  uint64_t v95 = &v89[2 * v94];
  v95[4] = 0x62614C7974706D45;
  v95[5] = 0xEA00000000006C65;
  unint64_t v160 = &unk_2704B5358;
  uint64_t v96 = swift_bridgeObjectRetain();
  sub_255FCD3A4(v96);
  sub_255F96DFC(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_255FCCEA8();
  uint64_t v97 = (uint64_t)v149;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_255FCCCF0(v91, (uint64_t (*)(void))sub_255F964CC);
  char v98 = sub_256176D98();
  sub_256119CA0(v92);
  sub_255FCCCF0(v92, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256175D48();
  uint64_t v100 = v99;
  uint64_t v102 = v101;
  uint64_t v104 = v103;
  uint64_t v106 = v105;
  uint64_t v107 = v152;
  sub_255FCCF20(v97, v152);
  uint64_t v108 = v107 + *(int *)(v147 + 36);
  *(unsigned char *)uint64_t v108 = v98;
  *(void *)(v108 + 8) = v100;
  *(void *)(v108 + 16) = v102;
  *(void *)(v108 + 24) = v104;
  *(void *)(v108 + 32) = v106;
  *(unsigned char *)(v108 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
  sub_255FCCFA0(v97);
  char v109 = sub_256176D78();
  sub_256119CA0(v92);
  sub_255FCCCF0(v92, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256175D48();
  uint64_t v111 = v110;
  uint64_t v113 = v112;
  uint64_t v115 = v114;
  uint64_t v117 = v116;
  uint64_t v118 = v151;
  sub_255FCCE38(v107, v151, (uint64_t (*)(void))sub_255FCC8C8);
  uint64_t v119 = v118 + *(int *)(v150 + 36);
  *(unsigned char *)uint64_t v119 = v109;
  *(void *)(v119 + 8) = v111;
  *(void *)(v119 + 16) = v113;
  *(void *)(v119 + 24) = v115;
  *(void *)(v119 + 32) = v117;
  *(unsigned char *)(v119 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
  sub_255FCCCF0(v107, (uint64_t (*)(void))sub_255FCC8C8);
  uint64_t v120 = v153;
  sub_255FCD018(v118, v153, &qword_269F43C58, (void (*)(uint64_t))sub_255FCC8C8);
  uint64_t v121 = v158;
  uint64_t v122 = v148;
  sub_255FCD088(v158, v148, &qword_269F42D48, (void (*)(uint64_t))_s21StateOfMindSymbolViewVMa);
  uint64_t v123 = v154;
  sub_255FCD088(v120, v154, &qword_269F43C58, (void (*)(uint64_t))sub_255FCC8C8);
  uint64_t v124 = v155;
  *uint64_t v155 = 0;
  *((unsigned char *)v124 + 8) = 1;
  sub_255FCC7F8();
  uint64_t v126 = v125;
  sub_255FCD088(v122, (uint64_t)v124 + *(int *)(v125 + 48), &qword_269F42D48, (void (*)(uint64_t))_s21StateOfMindSymbolViewVMa);
  sub_255FCD088(v123, (uint64_t)v124 + *(int *)(v126 + 64), &qword_269F43C58, (void (*)(uint64_t))sub_255FCC8C8);
  uint64_t v127 = (char *)v124 + *(int *)(v126 + 80);
  *(void *)uint64_t v127 = 0;
  v127[8] = 1;
  sub_255FCCD50(v120, &qword_269F43C58, (void (*)(uint64_t))sub_255FCC8C8);
  sub_255FCCD50(v121, &qword_269F42D48, (void (*)(uint64_t))_s21StateOfMindSymbolViewVMa);
  sub_255FCCD50(v123, &qword_269F43C58, (void (*)(uint64_t))sub_255FCC8C8);
  return sub_255FCCD50(v122, &qword_269F42D48, (void (*)(uint64_t))_s21StateOfMindSymbolViewVMa);
}

void sub_255FCC700()
{
  if (!qword_269F43C40)
  {
    sub_255FCC794(255, &qword_269F43C48, (uint64_t (*)(uint64_t))sub_255FCC7F8, MEMORY[0x263F1BAC8]);
    sub_255FCC944();
    unint64_t v0 = sub_2561776F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43C40);
    }
  }
}

void sub_255FCC794(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_255FCC7F8()
{
  if (!qword_269F43C50)
  {
    sub_255FCC9CC(255, &qword_269F42D48, (void (*)(uint64_t))_s21StateOfMindSymbolViewVMa);
    sub_255FCC9CC(255, &qword_269F43C58, (void (*)(uint64_t))sub_255FCC8C8);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_269F43C50);
    }
  }
}

void sub_255FCC8C8()
{
  if (!qword_269F43C60)
  {
    sub_255FCCBEC(255, &qword_269F43C68, (void (*)(uint64_t))sub_255F964CC);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43C60);
    }
  }
}

unint64_t sub_255FCC944()
{
  unint64_t result = qword_269F43C70;
  if (!qword_269F43C70)
  {
    sub_255FCC794(255, &qword_269F43C48, (uint64_t (*)(uint64_t))sub_255FCC7F8, MEMORY[0x263F1BAC8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43C70);
  }
  return result;
}

void sub_255FCC9CC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_255FCCA30()
{
  if (!qword_269F43C80)
  {
    sub_255FCC9CC(255, &qword_269F43C78, (void (*)(uint64_t))sub_255FCC700);
    sub_255FCCAD8();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F43C80);
    }
  }
}

unint64_t sub_255FCCAD8()
{
  unint64_t result = qword_269F43C88;
  if (!qword_269F43C88)
  {
    sub_255FCC9CC(255, &qword_269F43C78, (void (*)(uint64_t))sub_255FCC700);
    sub_255FCCBA4(&qword_269F43C90, (void (*)(uint64_t))sub_255FCC700);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43C88);
  }
  return result;
}

uint64_t sub_255FCCBA4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_255FCCBEC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_256176D38();
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_255FCCC58()
{
  if (!qword_269F43CA0)
  {
    sub_255FCC794(255, &qword_269F43C48, (uint64_t (*)(uint64_t))sub_255FCC7F8, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_256176048();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43CA0);
    }
  }
}

uint64_t sub_255FCCCF0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_255FCCD50(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_255FCC9CC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_255FCCDAC(uint64_t a1, uint64_t a2)
{
  sub_255FCCBEC(0, &qword_269F43C98, (void (*)(uint64_t))sub_255FCCA30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_255FCCE38(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_255FCCEA8()
{
  unint64_t result = qword_269F434E8;
  if (!qword_269F434E8)
  {
    sub_255F964CC();
    sub_255F74810();
    sub_255F96F04();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F434E8);
  }
  return result;
}

uint64_t sub_255FCCF20(uint64_t a1, uint64_t a2)
{
  sub_255FCCBEC(0, &qword_269F43C68, (void (*)(uint64_t))sub_255F964CC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_255FCCFA0(uint64_t a1)
{
  sub_255FCCBEC(0, &qword_269F43C68, (void (*)(uint64_t))sub_255F964CC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_255FCD018(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_255FCC9CC(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_255FCD088(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_255FCC9CC(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

unint64_t sub_255FCD0FC()
{
  unint64_t result = qword_269F43CA8;
  if (!qword_269F43CA8)
  {
    sub_255FCCBEC(255, &qword_269F43C98, (void (*)(uint64_t))sub_255FCCA30);
    sub_255FCC9CC(255, &qword_269F43C78, (void (*)(uint64_t))sub_255FCC700);
    sub_255FCCAD8();
    swift_getOpaqueTypeConformance2();
    sub_255FCCBA4(&qword_269F42EA0, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43CA8);
  }
  return result;
}

uint64_t MentalHealthAccessibilityCategory.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_2561786F8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t MentalHealthAccessibilityCategory.rawValue.getter()
{
  return 0x746567646957;
}

uint64_t sub_255FCD280()
{
  return 1;
}

uint64_t sub_255FCD288()
{
  return sub_256178928();
}

uint64_t sub_255FCD2D8()
{
  return sub_256177F38();
}

uint64_t sub_255FCD2EC()
{
  return sub_256178928();
}

uint64_t sub_255FCD338@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_2561786F8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_255FCD38C(void *a1@<X8>)
{
  *a1 = 0x746567646957;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_255FCD3A4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_256095C94(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_2561786C8();
  __break(1u);
  return result;
}

uint64_t sub_255FCD4F8(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_256178678();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_256178678();
    swift_bridgeObjectRelease();
    uint64_t v6 = v5 + v3;
    if (!__OFADD__(v5, v3)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v4;
  uint64_t v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v5 = 1;
  }
  if (v4 >> 62) {
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    swift_bridgeObjectRetain();
    unint64_t v4 = MEMORY[0x25A2A1010](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *uint64_t v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = sub_255FB54B8(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_256178678();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x1__isPlatformVersionAtLeast(2, 18, 1, 0) = v14;
  }
  swift_bridgeObjectRelease();

  return sub_256178018();
}

uint64_t sub_255FCD6C4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_2560970AC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = &v3[v8 + 4];
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + 8 * v2) {
    goto LABEL_24;
  }
  memcpy(v9, (const void *)(a1 + 32), 8 * v2);
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_2561786C8();
  __break(1u);
  return result;
}

uint64_t sub_255FCD80C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_2560971DC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = &v3[v8 + 4];
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + 8 * v2) {
    goto LABEL_24;
  }
  memcpy(v9, (const void *)(a1 + 32), 8 * v2);
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_2561786C8();
  __break(1u);
  return result;
}

uint64_t static String.mindAccessibilityIdentifier(_:)()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_255FCD3A4(v0);
  sub_255FCD9E0();
  sub_255F744D8();
  uint64_t v1 = sub_256177E28();
  swift_bridgeObjectRelease();
  return v1;
}

void sub_255FCD9E0()
{
  if (!qword_26B2AD350)
  {
    unint64_t v0 = sub_256178078();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B2AD350);
    }
  }
}

uint64_t static String.mindAccessibilityIdentifier(_:components:)()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_255FCD3A4(v0);
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_255FCD3A4(v1);
  sub_255FCD9E0();
  sub_255F744D8();
  uint64_t v2 = sub_256177E28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2;
}

unint64_t sub_255FCDAF4()
{
  unint64_t result = qword_269F43CB0;
  if (!qword_269F43CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43CB0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MentalHealthAccessibilityCategory(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for MentalHealthAccessibilityCategory(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x255FCDC38);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_255FCDC60()
{
  return 0;
}

ValueMetadata *type metadata accessor for MentalHealthAccessibilityCategory()
{
  return &type metadata for MentalHealthAccessibilityCategory;
}

uint64_t *sub_255FCDC78(uint64_t *a1, uint64_t *a2)
{
  sub_255FD3BF8(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_256176AA8();
      uint64_t v7 = *(void *)(v6 - 8);
      uint64_t v81 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48);
      if (v81(a2, 1, v6))
      {
        sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      uint64_t v10 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v11 = v10[5];
      BOOL v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_256176158();
      uint64_t v15 = (void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      uint64_t v80 = *v15;
      (*v15)(v12, v13, v14);
      *((unsigned char *)a1 + v10[6]) = *((unsigned char *)a2 + v10[6]);
      uint64_t v16 = v10[7];
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = sub_256175D98();
      uint64_t v78 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
      v78(v17, v18, v19);
      uint64_t v20 = v10[8];
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      if (v81((uint64_t *)((char *)a2 + v20), 1, v6))
      {
        sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v21, v22, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v21, 0, 1, v6);
      }
      uint64_t v24 = _s6StylesV8TimelineVMa(0);
      v80(&v21[*(int *)(v24 + 20)], &v22[*(int *)(v24 + 20)], v14);
      uint64_t v25 = v10[9];
      uint64_t v26 = (char *)a1 + v25;
      uint64_t v27 = (char *)a2 + v25;
      uint64_t v79 = v7;
      if (v81((uint64_t *)((char *)a2 + v25), 1, v6))
      {
        sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v26, v27, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v26, 0, 1, v6);
      }
      uint64_t v29 = _s6StylesV6NoDataVMa(0);
      v80(&v26[*(int *)(v29 + 20)], &v27[*(int *)(v29 + 20)], v14);
      v26[*(int *)(v29 + 24)] = v27[*(int *)(v29 + 24)];
      uint64_t v30 = v10[10];
      id v31 = (char *)a1 + v30;
      uint64_t v32 = (char *)a2 + v30;
      if (v81((uint64_t *)((char *)a2 + v30), 1, v6))
      {
        sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
        uint64_t v34 = v79;
      }
      else
      {
        uint64_t v34 = v79;
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v31, v32, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v31, 0, 1, v6);
      }
      uint64_t v35 = _s6StylesV11PlaceholderVMa(0);
      v80(&v31[*(int *)(v35 + 20)], &v32[*(int *)(v35 + 20)], v14);
      uint64_t v36 = v10[11];
      uint64_t v37 = (char *)a1 + v36;
      uint64_t v38 = (char *)a2 + v36;
      if (v81((uint64_t *)((char *)a2 + v36), 1, v6))
      {
        sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v37, v38, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v37, 0, 1, v6);
      }
      uint64_t v40 = _s6StylesV6SymbolVMa(0);
      v80(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v14);
      uint64_t v41 = v10[12];
      uint64_t v42 = (char *)a1 + v41;
      uint64_t v43 = (char *)a2 + v41;
      if (v81((uint64_t *)((char *)a2 + v41), 1, v6))
      {
        sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v42, v43, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v42, 0, 1, v6);
      }
      uint64_t v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v80(&v42[v45[5]], &v43[v45[5]], v14);
      v42[v45[6]] = v43[v45[6]];
      v78(&v42[v45[7]], &v43[v45[7]], v19);
      uint64_t v46 = v10[13];
      unint64_t v47 = (char *)a1 + v46;
      long long v48 = (char *)a2 + v46;
      if (v81((uint64_t *)((char *)a2 + v46), 1, v6))
      {
        sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
        uint64_t v50 = v79;
      }
      else
      {
        uint64_t v50 = v79;
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v47, v48, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v47, 0, 1, v6);
      }
      uint64_t v51 = _s6StylesV5EmptyVMa(0);
      v80(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v14);
      v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
      uint64_t v52 = v10[14];
      uint64_t v53 = (char *)a1 + v52;
      uint64_t v54 = (char *)a2 + v52;
      if (v81((uint64_t *)((char *)a2 + v52), 1, v6))
      {
        sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v53, v54, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v6);
      }
      uint64_t v56 = _s6StylesV5DailyVMa(0);
      v80(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v14);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      uint64_t v57 = v10[15];
      char v58 = (char *)a1 + v57;
      uint64_t v59 = (char *)a2 + v57;
      if (v81((uint64_t *)((char *)a2 + v57), 1, v6))
      {
        sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v58, v59, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v6);
      }
      uint64_t v61 = _s6StylesV9MomentaryVMa(0);
      v80(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v14);
      uint64_t v62 = v10[16];
      uint64_t v63 = (char *)a1 + v62;
      uint64_t v64 = (char *)a2 + v62;
      if (v81((uint64_t *)((char *)a2 + v62), 1, v6))
      {
        sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v63, v64, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v6);
      }
      uint64_t v66 = _s6StylesV6HeaderVMa(0);
      v80(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v14);
      uint64_t v67 = v10[17];
      id v68 = (char *)a1 + v67;
      uint64_t v69 = (char *)a2 + v67;
      if (v81((uint64_t *)((char *)a2 + v67), 1, v6))
      {
        sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v68, v69, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v6);
      }
      uint64_t v71 = _s6StylesV11ChartButtonVMa(0);
      v80(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v14);
      uint64_t v72 = v10[18];
      uint64_t v73 = (char *)a1 + v72;
      uint64_t v74 = (char *)a2 + v72;
      if (v81((uint64_t *)v74, 1, v6))
      {
        sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v73, v74, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v6);
      }
      uint64_t v76 = _s6StylesV15LogButtonFooterVMa(0);
      v80(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v14);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_255FCEA50(uint64_t a1)
{
  sub_255FD3BF8(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_256176AA8();
    uint64_t v3 = *(void *)(v2 - 8);
    uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
    if (!v4(a1, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    }
    int v5 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v6 = a1 + v5[5];
    uint64_t v7 = sub_256176158();
    uint64_t v34 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    v34(v6, v7);
    uint64_t v8 = a1 + v5[7];
    uint64_t v9 = sub_256175D98();
    uint64_t v33 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    v33(v8, v9);
    uint64_t v10 = a1 + v5[8];
    if (!v4(v10, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v10, v2);
    }
    uint64_t v11 = _s6StylesV8TimelineVMa(0);
    v34(v10 + *(int *)(v11 + 20), v7);
    uint64_t v12 = a1 + v5[9];
    if (!v4(v12, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v12, v2);
    }
    uint64_t v13 = _s6StylesV6NoDataVMa(0);
    v34(v12 + *(int *)(v13 + 20), v7);
    uint64_t v14 = a1 + v5[10];
    if (!v4(v14, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v14, v2);
    }
    uint64_t v15 = _s6StylesV11PlaceholderVMa(0);
    v34(v14 + *(int *)(v15 + 20), v7);
    uint64_t v16 = a1 + v5[11];
    if (!v4(v16, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v16, v2);
    }
    uint64_t v17 = _s6StylesV6SymbolVMa(0);
    v34(v16 + *(int *)(v17 + 20), v7);
    uint64_t v18 = a1 + v5[12];
    if (!v4(v18, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v18, v2);
    }
    uint64_t v19 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v34(v18 + *(int *)(v19 + 20), v7);
    v33(v18 + *(int *)(v19 + 28), v9);
    uint64_t v20 = a1 + v5[13];
    if (!v4(v20, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v20, v2);
    }
    uint64_t v21 = _s6StylesV5EmptyVMa(0);
    v34(v20 + *(int *)(v21 + 20), v7);
    uint64_t v22 = a1 + v5[14];
    if (!v4(v22, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v22, v2);
    }
    uint64_t v23 = _s6StylesV5DailyVMa(0);
    v34(v22 + *(int *)(v23 + 20), v7);
    uint64_t v24 = a1 + v5[15];
    if (!v4(v24, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v24, v2);
    }
    uint64_t v25 = _s6StylesV9MomentaryVMa(0);
    v34(v24 + *(int *)(v25 + 20), v7);
    uint64_t v26 = a1 + v5[16];
    if (!v4(v26, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v26, v2);
    }
    uint64_t v27 = _s6StylesV6HeaderVMa(0);
    v34(v26 + *(int *)(v27 + 20), v7);
    uint64_t v28 = a1 + v5[17];
    if (!v4(v28, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v28, v2);
    }
    uint64_t v29 = _s6StylesV11ChartButtonVMa(0);
    v34(v28 + *(int *)(v29 + 20), v7);
    uint64_t v30 = a1 + v5[18];
    if (!v4(v30, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v30, v2);
    }
    uint64_t v31 = v30 + *(int *)(_s6StylesV15LogButtonFooterVMa(0) + 20);
    return ((uint64_t (*)(uint64_t, uint64_t))v34)(v31, v7);
  }
  else
  {
    return swift_release();
  }
}

void *sub_255FCF0B4(void *a1, void *a2)
{
  sub_255FD3BF8(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256176AA8();
    uint64_t v5 = *(void *)(v4 - 8);
    uint64_t v78 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
    if (v78((char *)a2, 1, v4))
    {
      sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, v4);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
    }
    uint64_t v7 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v8 = v7[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_256176158();
    uint64_t v12 = (void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    uint64_t v77 = *v12;
    (*v12)(v9, v10, v11);
    *((unsigned char *)a1 + v7[6]) = *((unsigned char *)a2 + v7[6]);
    uint64_t v13 = v7[7];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_256175D98();
    uint64_t v75 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    v75(v14, v15, v16);
    uint64_t v17 = v7[8];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    if (v78((char *)a2 + v17, 1, v4))
    {
      sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v18, v19, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v18, 0, 1, v4);
    }
    uint64_t v21 = _s6StylesV8TimelineVMa(0);
    v77(&v18[*(int *)(v21 + 20)], &v19[*(int *)(v21 + 20)], v11);
    uint64_t v22 = v7[9];
    uint64_t v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v76 = v5;
    if (v78((char *)a2 + v22, 1, v4))
    {
      sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v23, v24, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v23, 0, 1, v4);
    }
    uint64_t v26 = _s6StylesV6NoDataVMa(0);
    v77(&v23[*(int *)(v26 + 20)], &v24[*(int *)(v26 + 20)], v11);
    v23[*(int *)(v26 + 24)] = v24[*(int *)(v26 + 24)];
    uint64_t v27 = v7[10];
    uint64_t v28 = (char *)a1 + v27;
    uint64_t v29 = (char *)a2 + v27;
    if (v78((char *)a2 + v27, 1, v4))
    {
      sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
      uint64_t v31 = v76;
    }
    else
    {
      uint64_t v31 = v76;
      (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v28, v29, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v28, 0, 1, v4);
    }
    uint64_t v32 = _s6StylesV11PlaceholderVMa(0);
    v77(&v28[*(int *)(v32 + 20)], &v29[*(int *)(v32 + 20)], v11);
    uint64_t v33 = v7[11];
    uint64_t v34 = (char *)a1 + v33;
    uint64_t v35 = (char *)a2 + v33;
    if (v78((char *)a2 + v33, 1, v4))
    {
      sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v34, v35, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v34, 0, 1, v4);
    }
    uint64_t v37 = _s6StylesV6SymbolVMa(0);
    v77(&v34[*(int *)(v37 + 20)], &v35[*(int *)(v37 + 20)], v11);
    uint64_t v38 = v7[12];
    uint64_t v39 = (char *)a1 + v38;
    uint64_t v40 = (char *)a2 + v38;
    if (v78((char *)a2 + v38, 1, v4))
    {
      sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v39, v40, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v39, 0, 1, v4);
    }
    uint64_t v42 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v77(&v39[v42[5]], &v40[v42[5]], v11);
    v39[v42[6]] = v40[v42[6]];
    v75(&v39[v42[7]], &v40[v42[7]], v16);
    uint64_t v43 = v7[13];
    uint64_t v44 = (char *)a1 + v43;
    uint64_t v45 = (char *)a2 + v43;
    if (v78((char *)a2 + v43, 1, v4))
    {
      sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
      uint64_t v47 = v76;
    }
    else
    {
      uint64_t v47 = v76;
      (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v44, v45, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v44, 0, 1, v4);
    }
    uint64_t v48 = _s6StylesV5EmptyVMa(0);
    v77(&v44[*(int *)(v48 + 20)], &v45[*(int *)(v48 + 20)], v11);
    v44[*(int *)(v48 + 24)] = v45[*(int *)(v48 + 24)];
    uint64_t v49 = v7[14];
    uint64_t v50 = (char *)a1 + v49;
    uint64_t v51 = (char *)a2 + v49;
    if (v78((char *)a2 + v49, 1, v4))
    {
      sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v50, v51, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v50, 0, 1, v4);
    }
    uint64_t v53 = _s6StylesV5DailyVMa(0);
    v77(&v50[*(int *)(v53 + 20)], &v51[*(int *)(v53 + 20)], v11);
    v50[*(int *)(v53 + 24)] = v51[*(int *)(v53 + 24)];
    uint64_t v54 = v7[15];
    uint64_t v55 = (char *)a1 + v54;
    uint64_t v56 = (char *)a2 + v54;
    if (v78((char *)a2 + v54, 1, v4))
    {
      sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v55, v56, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v55, 0, 1, v4);
    }
    uint64_t v58 = _s6StylesV9MomentaryVMa(0);
    v77(&v55[*(int *)(v58 + 20)], &v56[*(int *)(v58 + 20)], v11);
    uint64_t v59 = v7[16];
    uint64_t v60 = (char *)a1 + v59;
    uint64_t v61 = (char *)a2 + v59;
    if (v78((char *)a2 + v59, 1, v4))
    {
      sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v60, v61, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v60, 0, 1, v4);
    }
    uint64_t v63 = _s6StylesV6HeaderVMa(0);
    v77(&v60[*(int *)(v63 + 20)], &v61[*(int *)(v63 + 20)], v11);
    uint64_t v64 = v7[17];
    uint64_t v65 = (char *)a1 + v64;
    uint64_t v66 = (char *)a2 + v64;
    if (v78((char *)a2 + v64, 1, v4))
    {
      sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v65, v66, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v65, 0, 1, v4);
    }
    uint64_t v68 = _s6StylesV11ChartButtonVMa(0);
    v77(&v65[*(int *)(v68 + 20)], &v66[*(int *)(v68 + 20)], v11);
    uint64_t v69 = v7[18];
    uint64_t v70 = (char *)a1 + v69;
    uint64_t v71 = (char *)a2 + v69;
    if (v78(v71, 1, v4))
    {
      sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v70, v71, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v70, 0, 1, v4);
    }
    uint64_t v73 = _s6StylesV15LogButtonFooterVMa(0);
    v77(&v70[*(int *)(v73 + 20)], &v71[*(int *)(v73 + 20)], v11);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_255FCFE3C(void *a1, void *a2)
{
  if (a1 != a2)
  {
    uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_255FD3F14((uint64_t)a1, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    sub_255FD3BF8(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, v4);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_256176AA8();
      uint64_t v6 = *(void *)(v5 - 8);
      uint64_t v79 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
      if (v79((char *)a2, 1, v5))
      {
        sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      }
      uint64_t v8 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v9 = v8[5];
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_256176158();
      uint64_t v13 = (void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      uint64_t v78 = *v13;
      (*v13)(v10, v11, v12);
      *((unsigned char *)a1 + v8[6]) = *((unsigned char *)a2 + v8[6]);
      uint64_t v14 = v8[7];
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = sub_256175D98();
      uint64_t v76 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
      v76(v15, v16, v17);
      uint64_t v18 = v8[8];
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      if (v79((char *)a2 + v18, 1, v5))
      {
        sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v19, v20, v5);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v19, 0, 1, v5);
      }
      uint64_t v22 = _s6StylesV8TimelineVMa(0);
      v78(&v19[*(int *)(v22 + 20)], &v20[*(int *)(v22 + 20)], v12);
      uint64_t v23 = v8[9];
      uint64_t v24 = (char *)a1 + v23;
      uint64_t v25 = (char *)a2 + v23;
      uint64_t v77 = v6;
      if (v79((char *)a2 + v23, 1, v5))
      {
        sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v24, v25, v5);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v24, 0, 1, v5);
      }
      uint64_t v27 = _s6StylesV6NoDataVMa(0);
      v78(&v24[*(int *)(v27 + 20)], &v25[*(int *)(v27 + 20)], v12);
      v24[*(int *)(v27 + 24)] = v25[*(int *)(v27 + 24)];
      uint64_t v28 = v8[10];
      uint64_t v29 = (char *)a1 + v28;
      uint64_t v30 = (char *)a2 + v28;
      if (v79((char *)a2 + v28, 1, v5))
      {
        sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
        uint64_t v32 = v77;
      }
      else
      {
        uint64_t v32 = v77;
        (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v29, v30, v5);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v29, 0, 1, v5);
      }
      uint64_t v33 = _s6StylesV11PlaceholderVMa(0);
      v78(&v29[*(int *)(v33 + 20)], &v30[*(int *)(v33 + 20)], v12);
      uint64_t v34 = v8[11];
      uint64_t v35 = (char *)a1 + v34;
      uint64_t v36 = (char *)a2 + v34;
      if (v79((char *)a2 + v34, 1, v5))
      {
        sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v35, v36, v5);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v35, 0, 1, v5);
      }
      uint64_t v38 = _s6StylesV6SymbolVMa(0);
      v78(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v12);
      uint64_t v39 = v8[12];
      uint64_t v40 = (char *)a1 + v39;
      uint64_t v41 = (char *)a2 + v39;
      if (v79((char *)a2 + v39, 1, v5))
      {
        sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v40, v41, v5);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v40, 0, 1, v5);
      }
      uint64_t v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v78(&v40[v43[5]], &v41[v43[5]], v12);
      v40[v43[6]] = v41[v43[6]];
      v76(&v40[v43[7]], &v41[v43[7]], v17);
      uint64_t v44 = v8[13];
      uint64_t v45 = (char *)a1 + v44;
      uint64_t v46 = (char *)a2 + v44;
      if (v79((char *)a2 + v44, 1, v5))
      {
        sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
        uint64_t v48 = v77;
      }
      else
      {
        uint64_t v48 = v77;
        (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v45, v46, v5);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v45, 0, 1, v5);
      }
      uint64_t v49 = _s6StylesV5EmptyVMa(0);
      v78(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v12);
      v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
      uint64_t v50 = v8[14];
      uint64_t v51 = (char *)a1 + v50;
      uint64_t v52 = (char *)a2 + v50;
      if (v79((char *)a2 + v50, 1, v5))
      {
        sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v52, v5);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v5);
      }
      uint64_t v54 = _s6StylesV5DailyVMa(0);
      v78(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v12);
      v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
      uint64_t v55 = v8[15];
      uint64_t v56 = (char *)a1 + v55;
      uint64_t v57 = (char *)a2 + v55;
      if (v79((char *)a2 + v55, 1, v5))
      {
        sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v56, v57, v5);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v5);
      }
      uint64_t v59 = _s6StylesV9MomentaryVMa(0);
      v78(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v12);
      uint64_t v60 = v8[16];
      uint64_t v61 = (char *)a1 + v60;
      uint64_t v62 = (char *)a2 + v60;
      if (v79((char *)a2 + v60, 1, v5))
      {
        sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v5);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v5);
      }
      uint64_t v64 = _s6StylesV6HeaderVMa(0);
      v78(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v12);
      uint64_t v65 = v8[17];
      uint64_t v66 = (char *)a1 + v65;
      uint64_t v67 = (char *)a2 + v65;
      if (v79((char *)a2 + v65, 1, v5))
      {
        sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v67, v5);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v5);
      }
      uint64_t v69 = _s6StylesV11ChartButtonVMa(0);
      v78(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v12);
      uint64_t v70 = v8[18];
      uint64_t v71 = (char *)a1 + v70;
      uint64_t v72 = (char *)a2 + v70;
      if (v79(v72, 1, v5))
      {
        sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v72, v5);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v5);
      }
      uint64_t v74 = _s6StylesV15LogButtonFooterVMa(0);
      v78(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v12);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_255FD0BE8(char *a1, char *a2)
{
  sub_255FD3BF8(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  uint64_t v5 = v4;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256176AA8();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v80 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
    if (v80(a2, 1, v6))
    {
      sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    uint64_t v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v10 = v9[5];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = sub_256176158();
    uint64_t v14 = (void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32);
    uint64_t v79 = *v14;
    (*v14)(v11, v12, v13);
    a1[v9[6]] = a2[v9[6]];
    uint64_t v15 = v9[7];
    uint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    uint64_t v18 = sub_256175D98();
    uint64_t v77 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32);
    v77(v16, v17, v18);
    uint64_t v19 = v9[8];
    uint64_t v20 = &a1[v19];
    uint64_t v21 = &a2[v19];
    if (v80(&a2[v19], 1, v6))
    {
      sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v20, v21, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v20, 0, 1, v6);
    }
    uint64_t v23 = _s6StylesV8TimelineVMa(0);
    v79(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
    uint64_t v24 = v9[9];
    uint64_t v25 = &a1[v24];
    uint64_t v26 = &a2[v24];
    uint64_t v78 = v7;
    if (v80(&a2[v24], 1, v6))
    {
      sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v25, v26, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v25, 0, 1, v6);
    }
    uint64_t v28 = _s6StylesV6NoDataVMa(0);
    v79(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
    v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
    uint64_t v29 = v9[10];
    uint64_t v30 = &a1[v29];
    uint64_t v31 = &a2[v29];
    if (v80(&a2[v29], 1, v6))
    {
      sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
      uint64_t v33 = v78;
    }
    else
    {
      uint64_t v33 = v78;
      (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v30, v31, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v30, 0, 1, v6);
    }
    uint64_t v34 = _s6StylesV11PlaceholderVMa(0);
    v79(&v30[*(int *)(v34 + 20)], &v31[*(int *)(v34 + 20)], v13);
    uint64_t v35 = v9[11];
    uint64_t v36 = &a1[v35];
    uint64_t v37 = &a2[v35];
    if (v80(&a2[v35], 1, v6))
    {
      sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v36, v37, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v36, 0, 1, v6);
    }
    uint64_t v39 = _s6StylesV6SymbolVMa(0);
    v79(&v36[*(int *)(v39 + 20)], &v37[*(int *)(v39 + 20)], v13);
    uint64_t v40 = v9[12];
    uint64_t v41 = &a1[v40];
    uint64_t v42 = &a2[v40];
    if (v80(&a2[v40], 1, v6))
    {
      sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v41, v42, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v41, 0, 1, v6);
    }
    uint64_t v44 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v79(&v41[v44[5]], &v42[v44[5]], v13);
    v41[v44[6]] = v42[v44[6]];
    v77(&v41[v44[7]], &v42[v44[7]], v18);
    uint64_t v45 = v9[13];
    uint64_t v46 = &a1[v45];
    uint64_t v47 = &a2[v45];
    if (v80(&a2[v45], 1, v6))
    {
      sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
      uint64_t v49 = v78;
    }
    else
    {
      uint64_t v49 = v78;
      (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v46, v47, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v46, 0, 1, v6);
    }
    uint64_t v50 = _s6StylesV5EmptyVMa(0);
    v79(&v46[*(int *)(v50 + 20)], &v47[*(int *)(v50 + 20)], v13);
    v46[*(int *)(v50 + 24)] = v47[*(int *)(v50 + 24)];
    uint64_t v51 = v9[14];
    uint64_t v52 = &a1[v51];
    uint64_t v53 = &a2[v51];
    if (v80(&a2[v51], 1, v6))
    {
      sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v52, v53, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v52, 0, 1, v6);
    }
    uint64_t v55 = _s6StylesV5DailyVMa(0);
    v79(&v52[*(int *)(v55 + 20)], &v53[*(int *)(v55 + 20)], v13);
    v52[*(int *)(v55 + 24)] = v53[*(int *)(v55 + 24)];
    uint64_t v56 = v9[15];
    uint64_t v57 = &a1[v56];
    uint64_t v58 = &a2[v56];
    if (v80(&a2[v56], 1, v6))
    {
      sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v57, v58, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v57, 0, 1, v6);
    }
    uint64_t v60 = _s6StylesV9MomentaryVMa(0);
    v79(&v57[*(int *)(v60 + 20)], &v58[*(int *)(v60 + 20)], v13);
    uint64_t v61 = v9[16];
    uint64_t v62 = &a1[v61];
    uint64_t v63 = &a2[v61];
    if (v80(&a2[v61], 1, v6))
    {
      sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v62, v63, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v62, 0, 1, v6);
    }
    uint64_t v65 = _s6StylesV6HeaderVMa(0);
    v79(&v62[*(int *)(v65 + 20)], &v63[*(int *)(v65 + 20)], v13);
    uint64_t v66 = v9[17];
    uint64_t v67 = &a1[v66];
    uint64_t v68 = &a2[v66];
    if (v80(&a2[v66], 1, v6))
    {
      sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v67, v68, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v67, 0, 1, v6);
    }
    uint64_t v70 = _s6StylesV11ChartButtonVMa(0);
    v79(&v67[*(int *)(v70 + 20)], &v68[*(int *)(v70 + 20)], v13);
    uint64_t v71 = v9[18];
    uint64_t v72 = &a1[v71];
    uint64_t v73 = &a2[v71];
    if (v80(v73, 1, v6))
    {
      sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v72, v73, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v72, 0, 1, v6);
    }
    uint64_t v75 = _s6StylesV15LogButtonFooterVMa(0);
    v79(&v72[*(int *)(v75 + 20)], &v73[*(int *)(v75 + 20)], v13);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
  }
  return a1;
}

char *sub_255FD1978(char *a1, char *a2)
{
  if (a1 != a2)
  {
    uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_255FD3F14((uint64_t)a1, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    sub_255FD3BF8(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, v4);
    uint64_t v6 = v5;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_256176AA8();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v81 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
      if (v81(a2, 1, v7))
      {
        sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      uint64_t v10 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v11 = v10[5];
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      uint64_t v14 = sub_256176158();
      uint64_t v15 = (void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32);
      uint64_t v80 = *v15;
      (*v15)(v12, v13, v14);
      a1[v10[6]] = a2[v10[6]];
      uint64_t v16 = v10[7];
      uint64_t v17 = &a1[v16];
      uint64_t v18 = &a2[v16];
      uint64_t v19 = sub_256175D98();
      uint64_t v78 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32);
      v78(v17, v18, v19);
      uint64_t v20 = v10[8];
      uint64_t v21 = &a1[v20];
      uint64_t v22 = &a2[v20];
      if (v81(&a2[v20], 1, v7))
      {
        sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v21, v22, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
      }
      uint64_t v24 = _s6StylesV8TimelineVMa(0);
      v80(&v21[*(int *)(v24 + 20)], &v22[*(int *)(v24 + 20)], v14);
      uint64_t v25 = v10[9];
      uint64_t v26 = &a1[v25];
      uint64_t v27 = &a2[v25];
      uint64_t v79 = v8;
      if (v81(&a2[v25], 1, v7))
      {
        sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v26, v27, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v26, 0, 1, v7);
      }
      uint64_t v29 = _s6StylesV6NoDataVMa(0);
      v80(&v26[*(int *)(v29 + 20)], &v27[*(int *)(v29 + 20)], v14);
      v26[*(int *)(v29 + 24)] = v27[*(int *)(v29 + 24)];
      uint64_t v30 = v10[10];
      uint64_t v31 = &a1[v30];
      uint64_t v32 = &a2[v30];
      if (v81(&a2[v30], 1, v7))
      {
        sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
        uint64_t v34 = v79;
      }
      else
      {
        uint64_t v34 = v79;
        (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v31, v32, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v31, 0, 1, v7);
      }
      uint64_t v35 = _s6StylesV11PlaceholderVMa(0);
      v80(&v31[*(int *)(v35 + 20)], &v32[*(int *)(v35 + 20)], v14);
      uint64_t v36 = v10[11];
      uint64_t v37 = &a1[v36];
      uint64_t v38 = &a2[v36];
      if (v81(&a2[v36], 1, v7))
      {
        sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v37, v38, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v37, 0, 1, v7);
      }
      uint64_t v40 = _s6StylesV6SymbolVMa(0);
      v80(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v14);
      uint64_t v41 = v10[12];
      uint64_t v42 = &a1[v41];
      uint64_t v43 = &a2[v41];
      if (v81(&a2[v41], 1, v7))
      {
        sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v42, v43, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v42, 0, 1, v7);
      }
      uint64_t v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v80(&v42[v45[5]], &v43[v45[5]], v14);
      v42[v45[6]] = v43[v45[6]];
      v78(&v42[v45[7]], &v43[v45[7]], v19);
      uint64_t v46 = v10[13];
      uint64_t v47 = &a1[v46];
      uint64_t v48 = &a2[v46];
      if (v81(&a2[v46], 1, v7))
      {
        sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
        uint64_t v50 = v79;
      }
      else
      {
        uint64_t v50 = v79;
        (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v47, v48, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v47, 0, 1, v7);
      }
      uint64_t v51 = _s6StylesV5EmptyVMa(0);
      v80(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v14);
      v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
      uint64_t v52 = v10[14];
      uint64_t v53 = &a1[v52];
      uint64_t v54 = &a2[v52];
      if (v81(&a2[v52], 1, v7))
      {
        sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v53, v54, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v7);
      }
      uint64_t v56 = _s6StylesV5DailyVMa(0);
      v80(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v14);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      uint64_t v57 = v10[15];
      uint64_t v58 = &a1[v57];
      uint64_t v59 = &a2[v57];
      if (v81(&a2[v57], 1, v7))
      {
        sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v58, v59, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v7);
      }
      uint64_t v61 = _s6StylesV9MomentaryVMa(0);
      v80(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v14);
      uint64_t v62 = v10[16];
      uint64_t v63 = &a1[v62];
      uint64_t v64 = &a2[v62];
      if (v81(&a2[v62], 1, v7))
      {
        sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v63, v64, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v7);
      }
      uint64_t v66 = _s6StylesV6HeaderVMa(0);
      v80(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v14);
      uint64_t v67 = v10[17];
      uint64_t v68 = &a1[v67];
      uint64_t v69 = &a2[v67];
      if (v81(&a2[v67], 1, v7))
      {
        sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v68, v69, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v7);
      }
      uint64_t v71 = _s6StylesV11ChartButtonVMa(0);
      v80(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v14);
      uint64_t v72 = v10[18];
      uint64_t v73 = &a1[v72];
      uint64_t v74 = &a2[v72];
      if (v81(v74, 1, v7))
      {
        sub_255FD3BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v73, v74, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v7);
      }
      uint64_t v76 = _s6StylesV15LogButtonFooterVMa(0);
      v80(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_255FD2730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255FD2744);
}

uint64_t sub_255FD2744(uint64_t a1, uint64_t a2)
{
  sub_255FD3BF8(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_255FD27E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255FD27F4);
}

uint64_t sub_255FD27F4(uint64_t a1, uint64_t a2)
{
  sub_255FD3BF8(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t _s14EntryViewStackVMa()
{
  uint64_t result = qword_269F43CB8;
  if (!qword_269F43CB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_255FD28E0()
{
  sub_255FD3BF8(319, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_255FD29A0()
{
  unint64_t result = qword_269F43CC8;
  if (!qword_269F43CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43CC8);
  }
  return result;
}

uint64_t sub_255FD29F4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v43 = a5;
  uint64_t v42 = sub_256176018();
  uint64_t v9 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for StateOfMindTimeline.Styles(0);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v41 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v41 - v19;
  uint64_t v21 = _s14EntryViewStackVMa();
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v23 = (char *)&v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FD402C(v6, (uint64_t)v23);
  if (a2)
  {
    sub_256119CA0((uint64_t)v20);
    sub_255FD3FCC((uint64_t)v23, (uint64_t (*)(void))_s14EntryViewStackVMa);
    sub_255FD3FCC((uint64_t)v20, type metadata accessor for StateOfMindTimeline.Styles);
    double v24 = 373.0;
  }
  else
  {
    sub_255FD3FCC((uint64_t)v23, (uint64_t (*)(void))_s14EntryViewStackVMa);
    double v24 = *(double *)&a1;
  }
  sub_256119CA0((uint64_t)v20);
  sub_255FD3FCC((uint64_t)v20, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256119CA0((uint64_t)v18);
  sub_255FD3FCC((uint64_t)v18, type metadata accessor for StateOfMindTimeline.Styles);
  double v25 = v24 + -40.0;
  sub_256119CA0((uint64_t)v15);
  sub_255FD3FCC((uint64_t)v15, type metadata accessor for StateOfMindTimeline.Styles);
  if (v24 + -40.0 > 373.0) {
    double v25 = 373.0;
  }
  sub_256176098();
  sub_255FD3ECC((unint64_t *)&qword_269F43D18, MEMORY[0x263F18AB8]);
  uint64_t v26 = sub_256178138();
  uint64_t v27 = MEMORY[0x263F8EE78];
  if (!v26) {
    return v27;
  }
  uint64_t v28 = v26;
  uint64_t v46 = MEMORY[0x263F8EE78];
  sub_2560E86FC(0, v26 & ~(v26 >> 63), 0);
  uint64_t result = sub_256178128();
  if ((v28 & 0x8000000000000000) == 0)
  {
    double v41 = v25;
    uint64_t v30 = (void (**)(char *))(v9 + 16);
    uint64_t v31 = (void (**)(char *, uint64_t))(v9 + 8);
    do
    {
      uint64_t v32 = (void (*)(char *, void))sub_256178168();
      uint64_t v33 = v42;
      (*v30)(v11);
      v32(v45, 0);
      v45[0] = 0;
      char v44 = 1;
      sub_256175FF8();
      uint64_t v35 = v34;
      uint64_t v37 = v36;
      (*v31)(v11, v33);
      uint64_t v27 = v46;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2560E86FC(0, *(void *)(v27 + 16) + 1, 1);
        uint64_t v27 = v46;
      }
      unint64_t v39 = *(void *)(v27 + 16);
      unint64_t v38 = *(void *)(v27 + 24);
      if (v39 >= v38 >> 1)
      {
        sub_2560E86FC(v38 > 1, v39 + 1, 1);
        uint64_t v27 = v46;
      }
      *(void *)(v27 + 16) = v39 + 1;
      uint64_t v40 = v27 + 16 * v39;
      *(void *)(v40 + 32) = v35;
      *(void *)(v40 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v37;
      sub_256178158();
      --v28;
    }
    while (v28);
    return v27;
  }
  __break(1u);
  return result;
}

double sub_255FD2E5C(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5 = sub_255FD29F4(a1, a2 & 1, a3, a4 & 1, a5);
  double v7 = v6;
  uint64_t v8 = *(void *)(v5 + 16);
  if (v8)
  {
    uint64_t v9 = (double *)(v5 + 40);
    double v10 = 0.0;
    do
    {
      double v11 = *v9;
      v9 += 2;
      double v12 = v11;
      if (v10 <= v11) {
        double v10 = v12;
      }
      --v8;
    }
    while (v8);
  }
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_255FD2ED0(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, double a6, double a7, double a8, double a9)
{
  sub_255FD3CC4(0, &qword_269F43CD8, MEMORY[0x263F8DC60]);
  uint64_t v20 = v19;
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v40 - v21;
  LOBYTE(v43) = a2 & 1;
  char v44 = a4 & 1;
  uint64_t v23 = sub_255FD29F4(a1, a2 & 1, a3, a4 & 1, a5);
  uint64_t v24 = v23;
  int64_t v25 = *(void *)(v23 + 16);
  if (v25)
  {
    uint64_t v41 = a5;
    uint64_t v42 = v9;
    double v26 = 0.0;
    uint64_t v27 = 40;
    int64_t v28 = v25;
    do
    {
      if (v26 <= *(double *)(v23 + v27)) {
        double v26 = *(double *)(v23 + v27);
      }
      v27 += 16;
      --v28;
    }
    while (v28);
    double v43 = MEMORY[0x263F8EE78];
    sub_2560E871C(0, v25, 0);
    double v29 = v43;
    unint64_t v30 = *(void *)(*(void *)&v43 + 16);
    uint64_t v31 = 32 * v30 + 56;
    uint64_t v32 = 32;
    do
    {
      uint64_t v33 = *(void *)(v24 + v32);
      double v43 = v29;
      unint64_t v34 = *(void *)(*(void *)&v29 + 24);
      unint64_t v35 = v30 + 1;
      if (v30 >= v34 >> 1)
      {
        sub_2560E871C(v34 > 1, v30 + 1, 1);
        double v29 = v43;
      }
      *(void *)(*(void *)&v29 + 16) = v35;
      uint64_t v36 = (unsigned char *)(*(void *)&v29 + v31);
      *((void *)v36 - 3) = v33;
      *(v36 - 16) = 0;
      *((double *)v36 - 1) = v26;
      v31 += 32;
      v32 += 16;
      unint64_t v30 = v35;
      *uint64_t v36 = 0;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease();
    a5 = v41;
    uint64_t v9 = v42;
  }
  else
  {
    swift_bridgeObjectRelease();
    double v29 = MEMORY[0x263F8EE78];
  }
  double v43 = a6;
  uint64_t v37 = sub_256176098();
  uint64_t v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16))(v22, a5, v37);
  *(double *)&v22[*(int *)(v20 + 52)] = v29;
  MEMORY[0x270FA5388](v38);
  *(&v40 - 6) = (uint64_t)&v43;
  *((double *)&v40 - 5) = a6;
  *((double *)&v40 - 4) = a7;
  *((double *)&v40 - 3) = a8;
  *((double *)&v40 - 2) = a9;
  *(&v40 - 1) = v9;
  sub_255FD3544((uint64_t)v22, (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t, void))sub_255FD3518, (uint64_t)(&v40 - 8));
  return sub_255FD3F70((uint64_t)v22, &qword_269F43CD8, MEMORY[0x263F8DC60]);
}

uint64_t sub_255FD3190(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, double *a6)
{
  char v10 = a3 & 1;
  uint64_t v11 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = &v15[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2561779A8();
  v15[8] = v10;
  v15[0] = a5 & 1;
  uint64_t result = sub_256176008();
  if (a3)
  {
    __break(1u);
  }
  else
  {
    sub_256119CA0((uint64_t)v13);
    uint64_t result = sub_255FD3FCC((uint64_t)v13, type metadata accessor for StateOfMindTimeline.Styles);
    *a6 = *(double *)&a2 + 10.0 + *a6;
  }
  return result;
}

double sub_255FD32D8(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  return sub_255FD2E5C(a1, a2 & 1, a3, a4 & 1, a5);
}

uint64_t sub_255FD32F0(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, double a6, double a7, double a8, double a9)
{
  return sub_255FD2ED0(a1, a2 & 1, a3, a4 & 1, a5, a6, a7, a8, a9);
}

uint64_t sub_255FD3308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_255FD3378(a1, a2, a3, a4, a5, a6, a7, a8, a9, MEMORY[0x263F1B668]);
}

uint64_t sub_255FD3340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_255FD3378(a1, a2, a3, a4, a5, a6, a7, a8, a9, MEMORY[0x263F1B670]);
}

uint64_t sub_255FD3378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t))
{
  return a10(a1);
}

void (*sub_255FD33BC(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_256175D08();
  return sub_255FD342C;
}

void sub_255FD342C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t sub_255FD3478()
{
  return sub_255FD3ECC(&qword_269F43CD0, (void (*)(uint64_t))_s14EntryViewStackVMa);
}

void sub_255FD34C0()
{
  if (!qword_269F43CE0)
  {
    unint64_t v0 = sub_256178078();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43CE0);
    }
  }
}

uint64_t sub_255FD3518(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  return sub_255FD3190(a1, a2, a3 & 1, a4, a5 & 1, *(double **)(v5 + 16));
}

uint64_t sub_255FD3544(uint64_t a1, void (*a2)(unsigned char *, uint64_t, uint64_t, uint64_t, void), uint64_t a3)
{
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  sub_255FD3BF8(0, (unint64_t *)&qword_269F43CF8, MEMORY[0x263F18940], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  double v6 = &v48[-v5];
  uint64_t v64 = sub_256176018();
  uint64_t v49 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v67 = &v48[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_255FD3C5C();
  uint64_t v53 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v52 = &v48[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_256176098();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = &v48[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_255FD3CC4(0, &qword_269F43CD8, MEMORY[0x263F8DC60]);
  uint64_t v66 = (void *)(v14 - 8);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = &v48[-v15];
  sub_255FD3CC4(0, &qword_269F43D08, MEMORY[0x263F8DC58]);
  uint64_t v18 = v17 - 8;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = &v48[-v19];
  sub_255FD3DB8(a1, (uint64_t)v16);
  uint64_t v21 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 32);
  v11 += 32;
  v21(v13, v16, v10);
  uint64_t v22 = (void (*)(uint64_t))MEMORY[0x263F18AB8];
  sub_255FD3ECC(&qword_269F43CE8, MEMORY[0x263F18AB8]);
  uint64_t v61 = v13;
  sub_256177FA8();
  uint64_t v23 = &v20[*(int *)(v18 + 60)];
  *uint64_t v23 = *(void *)&v16[*((int *)v66 + 15)];
  v23[1] = 0;
  uint64_t v66 = v23;
  uint64_t v62 = *(int *)(v18 + 64);
  v20[v62] = 0;
  sub_255FD3E38();
  int64_t v25 = &v20[*(int *)(v24 + 36)];
  uint64_t v26 = sub_255FD3ECC((unint64_t *)&qword_269F43D18, v22);
  uint64_t v59 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v11 - 16);
  uint64_t v60 = (void (**)(unsigned char *))(v49 + 16);
  uint64_t v63 = (void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v49 + 56);
  uint64_t v57 = (unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v49 + 48);
  uint64_t v58 = (void (**)(unsigned char *, uint64_t))(v11 - 24);
  uint64_t v65 = (uint64_t (**)(unsigned char *, unsigned char *, uint64_t))(v49 + 32);
  uint64_t v56 = v20;
  uint64_t v51 = v25;
  uint64_t v50 = v10;
  while (1)
  {
    uint64_t v27 = *v25;
    sub_256178148();
    if (v27 == v68[0])
    {
      (*v63)(v6, 1, 1, v64);
LABEL_9:
      sub_255FD3F14((uint64_t)v6, (unint64_t *)&qword_269F43CF8, MEMORY[0x263F18940], MEMORY[0x263F8D8F0]);
      goto LABEL_11;
    }
    int64_t v28 = (void (*)(uint64_t *, void))sub_256178168();
    uint64_t v29 = v64;
    (*v60)(v6);
    v28(v68, 0);
    unint64_t v30 = v61;
    (*v59)(v61, v20, v10);
    sub_256178158();
    (*v58)(v30, v10);
    (*v63)(v6, 0, 1, v29);
    if ((*v57)(v6, 1, v29) == 1) {
      goto LABEL_9;
    }
    uint64_t v31 = *v65;
    uint64_t result = (*v65)(v67, v6, v29);
    unint64_t v33 = v66[1];
    unint64_t v34 = *(void *)(*v66 + 16);
    if (v33 == v34)
    {
      (*(void (**)(unsigned char *, uint64_t))(v49 + 8))(v67, v29);
      uint64_t v20 = v56;
LABEL_11:
      v20[v62] = 1;
      return sub_255FD3F70((uint64_t)v20, &qword_269F43D08, MEMORY[0x263F8DC58]);
    }
    if (v33 >= v34) {
      break;
    }
    unint64_t v35 = v33 + 1;
    uint64_t v36 = *v66 + 32 * v33;
    unsigned __int8 v37 = *(unsigned char *)(v36 + 56);
    uint64_t v38 = *(void *)(v36 + 48);
    uint64_t v39 = *(unsigned __int8 *)(v36 + 40);
    uint64_t v40 = v29;
    uint64_t v41 = *(void *)(v36 + 32);
    uint64_t v42 = v67;
    v66[1] = v35;
    double v43 = v52;
    uint64_t v44 = v26;
    uint64_t v45 = v6;
    uint64_t v46 = &v52[*(int *)(v53 + 48)];
    v31(v52, v42, v40);
    *(void *)uint64_t v46 = v41;
    v46[8] = v39;
    *((void *)v46 + 2) = v38;
    v46[24] = v37;
    double v6 = v45;
    uint64_t v26 = v44;
    LOBYTE(v68[0]) = v39;
    unsigned __int8 v69 = v37;
    v54(v43, v41, v39, v38, v37);
    uint64_t v47 = (uint64_t)v43;
    int64_t v25 = v51;
    sub_255FD3FCC(v47, (uint64_t (*)(void))sub_255FD3C5C);
    uint64_t v20 = v56;
    uint64_t v10 = v50;
    if (v56[v62]) {
      return sub_255FD3F70((uint64_t)v20, &qword_269F43D08, MEMORY[0x263F8DC58]);
    }
  }
  __break(1u);
  return result;
}

void sub_255FD3BF8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_255FD3C5C()
{
  if (!qword_269F43D00)
  {
    sub_256176018();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F43D00);
    }
  }
}

void sub_255FD3CC4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    uint64_t v6 = sub_256176098();
    sub_255FD34C0();
    v10[0] = v6;
    v10[1] = v7;
    void v10[2] = sub_255FD3ECC(&qword_269F43CE8, MEMORY[0x263F18AB8]);
    v10[3] = sub_255FD3ECC(&qword_269F43CF0, (void (*)(uint64_t))sub_255FD34C0);
    unint64_t v8 = a3(a1, v10);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_255FD3DB8(uint64_t a1, uint64_t a2)
{
  sub_255FD3CC4(0, &qword_269F43CD8, MEMORY[0x263F8DC60]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_255FD3E38()
{
  if (!qword_269F43D10)
  {
    sub_256176098();
    sub_255FD3ECC((unint64_t *)&qword_269F43D18, MEMORY[0x263F18AB8]);
    unint64_t v0 = sub_256178638();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43D10);
    }
  }
}

uint64_t sub_255FD3ECC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255FD3F14(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_255FD3BF8(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_255FD3F70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  sub_255FD3CC4(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_255FD3FCC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_255FD402C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s14EntryViewStackVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_255FD4090(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    uint64_t v8 = a2[4];
    uint64_t v9 = *(int *)(a3 + 32);
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    sub_255FD438C(0);
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_256176AA8();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_255FD751C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      uint64_t v16 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      uint64_t v17 = (char *)v10 + v16;
      uint64_t v18 = (char *)v11 + v16;
      uint64_t v19 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = *(int *)(a3 + 36);
    uint64_t v21 = (void *)((char *)v4 + v20);
    uint64_t v22 = (uint64_t *)((char *)a2 + v20);
    sub_255F63CB4(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      void *v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

void sub_255FD438C(uint64_t a1)
{
}

uint64_t sub_255FD43C0(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  sub_255FD438C(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_256176AA8();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
    uint64_t v7 = v4 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    uint64_t v8 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = a1 + *(int *)(a2 + 36);
  sub_255F63CB4(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_256175D98();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    return v11(v9, v10);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_255FD4594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  sub_255FD438C(0);
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_256176AA8();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      sub_255FD751C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v14 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    uint64_t v15 = (char *)v9 + v14;
    uint64_t v16 = (char *)v10 + v14;
    uint64_t v17 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  else
  {
    *uint64_t v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = *(int *)(a3 + 36);
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  sub_255F63CB4(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = sub_256175D98();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  else
  {
    *uint64_t v19 = *v20;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_255FD4838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 32);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    sub_255FD7A58(a1 + v7, (uint64_t (*)(void))sub_255FD438C);
    sub_255FD438C(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_256176AA8();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        sub_255FD751C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      uint64_t v13 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      uint64_t v14 = (char *)v8 + v13;
      uint64_t v15 = (char *)v9 + v13;
      uint64_t v16 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = *(int *)(a3 + 36);
    uint64_t v18 = (void *)(a1 + v17);
    uint64_t v19 = (void *)(a2 + v17);
    sub_255FD7A58(a1 + v17, (uint64_t (*)(void))sub_255F63CB4);
    sub_255F63CB4(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      void *v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_255FD4B3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  sub_255FD438C(0);
  uint64_t v10 = v9;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_256176AA8();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
    {
      sub_255FD751C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v7, v8, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
    }
    uint64_t v14 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    uint64_t v15 = &v7[v14];
    uint64_t v16 = &v8[v14];
    uint64_t v17 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v18 = *(int *)(a3 + 36);
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (const void *)(a2 + v18);
  sub_255F63CB4(0);
  uint64_t v22 = v21;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v23 = sub_256175D98();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 32))(v19, v20, v23);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
  }
  return a1;
}

uint64_t sub_255FD4DF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 32);
    uint64_t v8 = (char *)(a1 + v7);
    uint64_t v9 = (char *)(a2 + v7);
    sub_255FD7A58(a1 + v7, (uint64_t (*)(void))sub_255FD438C);
    sub_255FD438C(0);
    uint64_t v11 = v10;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_256176AA8();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12))
      {
        sub_255FD751C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v8, v9, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
      }
      uint64_t v15 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      uint64_t v16 = &v8[v15];
      uint64_t v17 = &v9[v15];
      uint64_t v18 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    uint64_t v19 = *(int *)(a3 + 36);
    uint64_t v20 = (void *)(a1 + v19);
    uint64_t v21 = (const void *)(a2 + v19);
    sub_255FD7A58(a1 + v19, (uint64_t (*)(void))sub_255F63CB4);
    sub_255F63CB4(0);
    uint64_t v23 = v22;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = sub_256175D98();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v20, v21, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_255FD50FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255FD5110);
}

uint64_t sub_255FD5110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_255FD751C(0, &qword_269F43D20, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_255FD751C(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 36);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_255FD529C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255FD52B0);
}

uint64_t sub_255FD52B0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_255FD751C(0, &qword_269F43D20, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_255FD751C(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 36);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for LabelsSelectionPhase_iOS()
{
  uint64_t result = qword_269F43D28;
  if (!qword_269F43D28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_255FD5488()
{
  sub_255FD438C(319);
  if (v0 <= 0x3F)
  {
    sub_255F63CB4(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_255FD5574()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255FD5590@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v49 = a1;
  uint64_t v3 = sub_256175D98();
  uint64_t v47 = *(void *)(v3 - 8);
  uint64_t v48 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v46 = (uint64_t)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for LabelsSelectionPhaseContent();
  MEMORY[0x270FA5388](v43);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FD64A8(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FD66A8(0);
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FD6724(0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v44 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FD6864(0);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v45 = (uint64_t)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + 17))
  {
    unint64_t v18 = 0;
    unint64_t v19 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    long long v26 = 0uLL;
  }
  else
  {
    sub_255FD5B9C(&v52);
    unint64_t v19 = v52.n128_u64[1];
    unint64_t v18 = v52.n128_u64[0];
    uint64_t v20 = v53;
    uint64_t v21 = v54;
    uint64_t v22 = v55;
    uint64_t v23 = v56;
    uint64_t v24 = v57;
    long long v26 = v58;
    uint64_t v25 = v59;
  }
  *(void *)uint64_t v13 = v18;
  *((void *)v13 + 1) = v19;
  *((void *)v13 + 2) = v20;
  *((void *)v13 + 3) = v21;
  *((void *)v13 + 4) = v22;
  *((void *)v13 + 5) = v23;
  *((void *)v13 + 6) = v24;
  *(_OWORD *)(v13 + 56) = v26;
  *((void *)v13 + 9) = v25;
  uint64_t v42 = &v13[*(int *)(v11 + 36)];
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_256175C88();
  swift_release();
  swift_release();
  swift_release();
  double v27 = v50;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_256175C88();
  swift_release();
  swift_release();
  uint64_t v28 = sub_256178318();
  swift_release();
  type metadata accessor for StateOfMindEntryModel(0);
  sub_255FD662C(&qword_269F42CB0, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel);
  uint64_t v29 = v11;
  sub_2561760F8();
  swift_getKeyPath();
  sub_256176108();
  swift_release();
  swift_release();
  double v30 = v50;
  char v31 = *(unsigned char *)(v2 + 16);
  uint64_t v32 = *(void *)(v2 + 24);
  uint64_t v33 = *(void *)(v2 + 32);
  *(double *)uint64_t v6 = v27;
  *((void *)v6 + 1) = v28;
  *((double *)v6 + 2) = v30;
  *(_OWORD *)(v6 + 24) = v51;
  v6[40] = v31;
  *((void *)v6 + 6) = v32;
  *((void *)v6 + 7) = v33;
  unint64_t v34 = (uint64_t *)&v6[*(int *)(v43 + 36)];
  *unint64_t v34 = swift_getKeyPath();
  sub_255FD438C(0);
  swift_storeEnumTagMultiPayload();
  swift_retain();
  *uint64_t v9 = sub_256176D58();
  sub_255FD6DD4();
  sub_255FD69E0((uint64_t)v6, (uint64_t)&v9[*(int *)(v35 + 44)]);
  sub_255FD7A58((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for LabelsSelectionPhaseContent);
  sub_255FD7288((uint64_t)v9, (uint64_t)v42, (uint64_t (*)(void))sub_255FD64A8);
  uint64_t v36 = (uint64_t *)&v13[*(int *)(v29 + 40)];
  *uint64_t v36 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  uint64_t v37 = (uint64_t)v44;
  sub_255FD5D40(*(unsigned char *)(v2 + 16), *(unsigned char *)(v2 + 17));
  sub_255FD7A58((uint64_t)v13, (uint64_t (*)(void))sub_255FD66A8);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_256175C88();
  swift_release();
  swift_release();
  swift_release();
  double v38 = v50;
  type metadata accessor for LabelsSelectionPhase_iOS();
  uint64_t v39 = v46;
  sub_25611A114(v46);
  uint64_t v40 = v45;
  sub_2560D5C20(v39, v37, v45, v38);
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v39, v48);
  sub_255FD7A58(v37, (uint64_t (*)(void))sub_255FD6724);
  return sub_255FD7288(v40, v49, (uint64_t (*)(void))sub_255FD6864);
}

__n128 sub_255FD5B9C@<Q0>(__n128 *a1@<X8>)
{
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v3 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_2561755B8();
  unint64_t v6 = v5;
  swift_bridgeObjectRelease();

  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_256175C88();
  swift_release();
  swift_release();
  swift_release();
  unint64_t v8 = *(void *)(v1 + 24);
  unint64_t v7 = *(void *)(v1 + 32);
  sub_255FC595C();
  swift_retain();
  sub_256177768();
  __n128 result = v10;
  a1->n128_u64[0] = v4;
  a1->n128_u64[1] = v6;
  a1[1] = v10;
  a1[2].n128_u64[0] = v11;
  a1[2].n128_u8[8] = v12;
  a1[3].n128_u64[0] = 0x747475427478654ELL;
  a1[3].n128_u64[1] = 0xEA00000000006E6FLL;
  a1[4].n128_u64[0] = v8;
  a1[4].n128_u64[1] = v7;
  return result;
}

uint64_t sub_255FD5D40(char a1, char a2)
{
  sub_255FD66A8(0);
  MEMORY[0x270FA5388](v5);
  unint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FD7880(0, &qword_269F43DC8, (uint64_t (*)(uint64_t))sub_255FD676C, (uint64_t (*)(uint64_t))sub_255FD66A8, MEMORY[0x263F19B20]);
  MEMORY[0x270FA5388](v8);
  __n128 v10 = (char *)&v25 - v9;
  sub_255FD676C(0);
  uint64_t v12 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v15 = sub_2561778E8();
    uint64_t v17 = v16;
    sub_2560D71BC(a1 & 1, (uint64_t)&v26);
    uint64_t v18 = v26;
    long long v25 = v27;
    uint64_t v19 = v28;
    uint64_t v20 = v29;
    sub_255FD79F0(v2, (uint64_t)v14, (uint64_t (*)(void))sub_255FD66A8);
    uint64_t v21 = &v14[*(int *)(v12 + 36)];
    *(void *)uint64_t v21 = v15;
    *((void *)v21 + 1) = v17;
    *((void *)v21 + 2) = v18;
    *(_OWORD *)(v21 + 24) = v25;
    *((void *)v21 + 5) = v19;
    *((void *)v21 + 6) = v20;
    sub_255FD79F0((uint64_t)v14, (uint64_t)v10, (uint64_t (*)(void))sub_255FD676C);
    swift_storeEnumTagMultiPayload();
    sub_255FD7B14(&qword_269F43DD0, sub_255FD676C, (void (*)(void))sub_255FD72F0, (void (*)(void))sub_255FD7324);
    sub_255FD72F0();
    sub_256176898();
    uint64_t v22 = sub_255FD676C;
    uint64_t v23 = (uint64_t)v14;
  }
  else
  {
    sub_255FD79F0(v2, (uint64_t)v7, (uint64_t (*)(void))sub_255FD66A8);
    sub_255FD79F0((uint64_t)v7, (uint64_t)v10, (uint64_t (*)(void))sub_255FD66A8);
    swift_storeEnumTagMultiPayload();
    sub_255FD7B14(&qword_269F43DD0, sub_255FD676C, (void (*)(void))sub_255FD72F0, (void (*)(void))sub_255FD7324);
    sub_255FD72F0();
    sub_256176898();
    uint64_t v22 = sub_255FD66A8;
    uint64_t v23 = (uint64_t)v7;
  }
  return sub_255FD7A58(v23, (uint64_t (*)(void))v22);
}

uint64_t sub_255FD60AC@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v35 = a3;
  sub_255FD7358();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FD7880(0, &qword_269F43E38, (uint64_t (*)(uint64_t))sub_255FD7838, (uint64_t (*)(uint64_t))sub_255FD7358, MEMORY[0x263F19B20]);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v34 - v13;
  sub_255FD7838(0);
  uint64_t v16 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v19 = sub_2561778E8();
    uint64_t v21 = v20;
    sub_2560D71BC(a1 & 1, (uint64_t)&v36);
    uint64_t v22 = v36;
    long long v34 = v37;
    uint64_t v23 = v38;
    uint64_t v24 = v39;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v18, v4, v8);
    long long v25 = &v18[*(int *)(v16 + 36)];
    *(void *)long long v25 = v19;
    *((void *)v25 + 1) = v21;
    *((void *)v25 + 2) = v22;
    *(_OWORD *)(v25 + 24) = v34;
    *((void *)v25 + 5) = v23;
    *((void *)v25 + 6) = v24;
    sub_255FD79F0((uint64_t)v18, (uint64_t)v14, (uint64_t (*)(void))sub_255FD7838);
    swift_storeEnumTagMultiPayload();
    sub_255FD7904();
    sub_255FD7468(255, &qword_269F43DF0, (uint64_t (*)(uint64_t))sub_255FD7420, sub_255FD7768, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for StateOfMindEntryPhase_iOS);
    uint64_t v27 = v26;
    unint64_t v28 = sub_255FD779C();
    uint64_t v36 = v27;
    *(void *)&long long v37 = v28;
    swift_getOpaqueTypeConformance2();
    sub_256176898();
    return sub_255FD7A58((uint64_t)v18, (uint64_t (*)(void))sub_255FD7838);
  }
  else
  {
    double v30 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v30(v11, v4, v8);
    v30(v14, (uint64_t)v11, v8);
    swift_storeEnumTagMultiPayload();
    sub_255FD7904();
    sub_255FD7468(255, &qword_269F43DF0, (uint64_t (*)(uint64_t))sub_255FD7420, sub_255FD7768, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for StateOfMindEntryPhase_iOS);
    uint64_t v32 = v31;
    unint64_t v33 = sub_255FD779C();
    uint64_t v36 = v32;
    *(void *)&long long v37 = v33;
    swift_getOpaqueTypeConformance2();
    sub_256176898();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

void sub_255FD64A8(uint64_t a1)
{
}

void sub_255FD64F0(uint64_t a1)
{
}

void sub_255FD6524()
{
  if (!qword_269F43D48)
  {
    type metadata accessor for LabelsSelectionPhaseContent();
    sub_255FD7620(255, &qword_269F43D50, (void (*)(uint64_t))type metadata accessor for LabelsSelectionPhaseContent, (void (*)(void))sub_255FD65F8);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F43D48);
    }
  }
}

uint64_t sub_255FD65C4()
{
  return sub_255FD662C(&qword_269F43358, MEMORY[0x263F18D80]);
}

uint64_t sub_255FD65F8()
{
  return sub_255FD662C(&qword_269F43D58, (void (*)(uint64_t))type metadata accessor for LabelsSelectionPhaseContent);
}

uint64_t sub_255FD662C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255FD6674()
{
  return sub_255FD662C(&qword_269F43D60, sub_255FD64F0);
}

void sub_255FD66A8(uint64_t a1)
{
}

uint64_t sub_255FD66F0()
{
  return sub_255FD662C(&qword_269F43D70, sub_255FD64A8);
}

void sub_255FD6724(uint64_t a1)
{
}

void sub_255FD676C(uint64_t a1)
{
}

void sub_255FD67B4()
{
  if (!qword_269F43D88)
  {
    sub_255FD6810();
    unint64_t v0 = sub_256176998();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43D88);
    }
  }
}

unint64_t sub_255FD6810()
{
  unint64_t result = qword_269F43D90;
  if (!qword_269F43D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43D90);
  }
  return result;
}

void sub_255FD6864(uint64_t a1)
{
}

void sub_255FD68AC(uint64_t a1)
{
}

void sub_255FD68F4()
{
  if (!qword_269F43DA8)
  {
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43DA8);
    }
  }
}

unint64_t sub_255FD6954()
{
  unint64_t result = qword_269F43DB0;
  if (!qword_269F43DB0)
  {
    sub_255FD68F4();
    sub_255FD6810();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43DB0);
  }
  return result;
}

uint64_t sub_255FD69E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  sub_255F89A5C();
  v27[1] = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FD7620(0, &qword_269F43D50, (void (*)(uint64_t))type metadata accessor for LabelsSelectionPhaseContent, (void (*)(void))sub_255FD65F8);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v27 - v12;
  uint64_t v14 = type metadata accessor for LabelsSelectionPhaseContent();
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v27 - v18;
  v27[2] = a1;
  sub_255FD79F0(a1, (uint64_t)v27 - v18, (uint64_t (*)(void))type metadata accessor for LabelsSelectionPhaseContent);
  uint64_t v20 = *MEMORY[0x263F18CD8];
  uint64_t v21 = sub_256176158();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v5, v20, v21);
  sub_255FD662C(&qword_269F433E0, MEMORY[0x263F18D80]);
  uint64_t result = sub_256177E98();
  if (result)
  {
    sub_255FD65F8();
    sub_255FD662C((unint64_t *)&qword_269F43368, (void (*)(uint64_t))sub_255F89A5C);
    sub_256177138();
    sub_255FD7A58((uint64_t)v5, (uint64_t (*)(void))sub_255F89A5C);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v11, v7);
    sub_255FD79F0((uint64_t)v19, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for LabelsSelectionPhaseContent);
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v23(v11, v13, v7);
    uint64_t v24 = v28;
    sub_255FD79F0((uint64_t)v17, v28, (uint64_t (*)(void))type metadata accessor for LabelsSelectionPhaseContent);
    sub_255FD6524();
    v23((char *)(v24 + *(int *)(v25 + 48)), v11, v7);
    uint64_t v26 = *(void (**)(char *, uint64_t))(v8 + 8);
    v26(v13, v7);
    sub_255FD7A58((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for LabelsSelectionPhaseContent);
    v26(v11, v7);
    return sub_255FD7A58((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for LabelsSelectionPhaseContent);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_255FD6DD4()
{
  if (!qword_269F43DB8)
  {
    sub_255FD64F0(255);
    sub_255FD6E40();
    unint64_t v0 = sub_256176048();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43DB8);
    }
  }
}

unint64_t sub_255FD6E40()
{
  unint64_t result = qword_269F43DC0;
  if (!qword_269F43DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43DC0);
  }
  return result;
}

uint64_t sub_255FD6E94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  sub_255F89A5C();
  v27[1] = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FD7620(0, &qword_269F43E10, (void (*)(uint64_t))type metadata accessor for DomainsSelectionPhaseContent, (void (*)(void))sub_255FD7700);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v27 - v12;
  uint64_t v14 = type metadata accessor for DomainsSelectionPhaseContent();
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v27 - v18;
  v27[2] = a1;
  sub_255FD79F0(a1, (uint64_t)v27 - v18, (uint64_t (*)(void))type metadata accessor for DomainsSelectionPhaseContent);
  uint64_t v20 = *MEMORY[0x263F18CD8];
  uint64_t v21 = sub_256176158();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v5, v20, v21);
  sub_255FD662C(&qword_269F433E0, MEMORY[0x263F18D80]);
  uint64_t result = sub_256177E98();
  if (result)
  {
    sub_255FD7700();
    sub_255FD662C((unint64_t *)&qword_269F43368, (void (*)(uint64_t))sub_255F89A5C);
    sub_256177138();
    sub_255FD7A58((uint64_t)v5, (uint64_t (*)(void))sub_255F89A5C);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v11, v7);
    sub_255FD79F0((uint64_t)v19, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for DomainsSelectionPhaseContent);
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v23(v11, v13, v7);
    uint64_t v24 = v28;
    sub_255FD79F0((uint64_t)v17, v28, (uint64_t (*)(void))type metadata accessor for DomainsSelectionPhaseContent);
    sub_255FD7580();
    v23((char *)(v24 + *(int *)(v25 + 48)), v11, v7);
    uint64_t v26 = *(void (**)(char *, uint64_t))(v8 + 8);
    v26(v13, v7);
    sub_255FD7A58((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for DomainsSelectionPhaseContent);
    v26(v11, v7);
    return sub_255FD7A58((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for DomainsSelectionPhaseContent);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_255FD7288(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_255FD72F0()
{
  return sub_255FD662C(&qword_269F43DD8, sub_255FD66A8);
}

uint64_t sub_255FD7324()
{
  return sub_255FD662C(&qword_269F43DE0, (void (*)(uint64_t))sub_255FD67B4);
}

void sub_255FD7358()
{
  if (!qword_269F43DE8)
  {
    sub_255FD7468(255, &qword_269F43DF0, (uint64_t (*)(uint64_t))sub_255FD7420, sub_255FD7768, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for StateOfMindEntryPhase_iOS);
    sub_255FD779C();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F43DE8);
    }
  }
}

void sub_255FD7420(uint64_t a1)
{
}

void sub_255FD7468(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_255FD74E8(uint64_t a1)
{
}

void sub_255FD751C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_255FD7580()
{
  if (!qword_269F43E08)
  {
    type metadata accessor for DomainsSelectionPhaseContent();
    sub_255FD7620(255, &qword_269F43E10, (void (*)(uint64_t))type metadata accessor for DomainsSelectionPhaseContent, (void (*)(void))sub_255FD7700);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F43E08);
    }
  }
}

void sub_255FD7620(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    sub_255F89A5C();
    a4();
    sub_255FD662C((unint64_t *)&qword_269F43368, (void (*)(uint64_t))sub_255F89A5C);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v7) {
      atomic_store(OpaqueTypeMetadata2, a2);
    }
  }
}

uint64_t sub_255FD7700()
{
  return sub_255FD662C(&qword_269F43E18, (void (*)(uint64_t))type metadata accessor for DomainsSelectionPhaseContent);
}

uint64_t sub_255FD7734()
{
  return sub_255FD662C(&qword_269F43E20, sub_255FD74E8);
}

uint64_t sub_255FD7768()
{
  return sub_255FD662C(&qword_269F43E28, sub_255FD7420);
}

unint64_t sub_255FD779C()
{
  unint64_t result = qword_269F43E30;
  if (!qword_269F43E30)
  {
    sub_255FD7468(255, &qword_269F43DF0, (uint64_t (*)(uint64_t))sub_255FD7420, sub_255FD7768, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for StateOfMindEntryPhase_iOS);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43E30);
  }
  return result;
}

void sub_255FD7838(uint64_t a1)
{
}

void sub_255FD7880(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4(255);
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

unint64_t sub_255FD7904()
{
  unint64_t result = qword_269F43E48;
  if (!qword_269F43E48)
  {
    sub_255FD7838(255);
    sub_255FD7468(255, &qword_269F43DF0, (uint64_t (*)(uint64_t))sub_255FD7420, sub_255FD7768, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for StateOfMindEntryPhase_iOS);
    sub_255FD779C();
    swift_getOpaqueTypeConformance2();
    sub_255FD7324();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43E48);
  }
  return result;
}

uint64_t sub_255FD79F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_255FD7A58(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_255FD7AB8()
{
  return sub_255FD7B14(&qword_269F43E50, sub_255FD6864, (void (*)(void))sub_255FD7BA0, (void (*)(void))sub_255FD7C5C);
}

uint64_t sub_255FD7B14(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_255FD7BA0()
{
  unint64_t result = qword_269F43E58;
  if (!qword_269F43E58)
  {
    sub_255FD6724(255);
    sub_255FD7B14(&qword_269F43DD0, sub_255FD676C, (void (*)(void))sub_255FD72F0, (void (*)(void))sub_255FD7324);
    sub_255FD72F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43E58);
  }
  return result;
}

uint64_t sub_255FD7C5C()
{
  return sub_255FD662C(&qword_269F43E60, sub_255FD68AC);
}

uint64_t sub_255FD7C90(uint64_t a1, uint64_t a2)
{
  char v2 = sub_255FD7D40(a1, a2);
  uint64_t v3 = 0x4075400000000000;
  if ((v2 & 1) == 0) {
    return 0;
  }
  return v3;
}

uint64_t sub_255FD7CC4(uint64_t a1, uint64_t a2)
{
  if (sub_255FD7D40(a1, a2)) {
    return 0;
  }
  else {
    return 0x7FF0000000000000;
  }
}

double sub_255FD7CE8(uint64_t a1, uint64_t a2)
{
  char v4 = sub_255FD7D40(a1, a2);
  double result = 0.0;
  if (v4)
  {
    char v6 = sub_255FD8124(a1, a2);
    double result = 56.0;
    if (v6) {
      return 14.0;
    }
  }
  return result;
}

uint64_t sub_255FD7D40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_256176AA8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FD821C();
  uint64_t v9 = v8 - 8;
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FD8280();
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v28 = (uint64_t)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v27 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v27 - v18;
  (*(void (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v17, *MEMORY[0x263F19F08], v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v17, 0, 1, v4);
  uint64_t v20 = (uint64_t)&v11[*(int *)(v9 + 56)];
  sub_255FD82D8((uint64_t)v19, (uint64_t)v11);
  sub_255FD82D8((uint64_t)v17, v20);
  uint64_t v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v21((uint64_t)v11, 1, v4) == 1)
  {
    uint64_t v22 = sub_255FD8280;
    sub_255FD833C((uint64_t)v17, (uint64_t (*)(void))sub_255FD8280);
    sub_255FD833C((uint64_t)v19, (uint64_t (*)(void))sub_255FD8280);
    if (v21(v20, 1, v4) == 1)
    {
      char v23 = -1;
    }
    else
    {
      uint64_t v22 = sub_255FD821C;
      char v23 = 0;
    }
  }
  else
  {
    uint64_t v24 = v28;
    sub_255FD82D8((uint64_t)v11, v28);
    if (v21(v20, 1, v4) == 1)
    {
      sub_255FD833C((uint64_t)v17, (uint64_t (*)(void))sub_255FD8280);
      sub_255FD833C((uint64_t)v19, (uint64_t (*)(void))sub_255FD8280);
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v24, v4);
      char v23 = 0;
      uint64_t v22 = sub_255FD821C;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v20, v4);
      sub_255FD839C();
      char v23 = sub_256177E98();
      uint64_t v25 = *(void (**)(char *, uint64_t))(v5 + 8);
      v25(v7, v4);
      uint64_t v22 = sub_255FD8280;
      sub_255FD833C((uint64_t)v17, (uint64_t (*)(void))sub_255FD8280);
      sub_255FD833C((uint64_t)v19, (uint64_t (*)(void))sub_255FD8280);
      v25((char *)v24, v4);
    }
  }
  sub_255FD833C((uint64_t)v11, (uint64_t (*)(void))v22);
  return v23 & 1;
}

uint64_t sub_255FD8124(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_256176158();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  LOBYTE(a2) = sub_256176138();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return a2 & 1;
}

void sub_255FD821C()
{
  if (!qword_269F43E68)
  {
    sub_255FD8280();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F43E68);
    }
  }
}

void sub_255FD8280()
{
  if (!qword_269F42AE0)
  {
    sub_256176AA8();
    unint64_t v0 = sub_256178448();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F42AE0);
    }
  }
}

uint64_t sub_255FD82D8(uint64_t a1, uint64_t a2)
{
  sub_255FD8280();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_255FD833C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_255FD839C()
{
  unint64_t result = qword_269F43E70[0];
  if (!qword_269F43E70[0])
  {
    sub_256176AA8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269F43E70);
  }
  return result;
}

void sub_255FD83F4(uint64_t a1, uint64_t a2)
{
  if (sub_255FD8124(a1, a2))
  {
    id v2 = (id)MobileGestalt_get_current_device();
    if (v2)
    {
      uint64_t v3 = v2;
      MobileGestalt_get_homeButtonType();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_255FD8458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 56);
}

uint64_t sub_255FD8460()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_255FD8554(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64) + 7;
  if ((v9 | v6) > 7
    || ((*(_DWORD *)(v8 + 80) | *(_DWORD *)(v5 + 80)) & 0x100000) != 0
    || ((v10 + ((v7 + v9 + ((v6 + 40) & ~v6)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v13 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v13 + (((v9 | v6) & 0xF8 ^ 0x1F8) & ((v9 | v6) + 16)));
  }
  else
  {
    uint64_t v14 = ~v6;
    uint64_t v29 = ~v9;
    uint64_t v30 = *(void *)(a3 + 24);
    *a1 = *a2;
    unint64_t v15 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v16 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v17 = *(void *)v16;
    *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
    *(void *)unint64_t v15 = v17;
    unint64_t v18 = ((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v19 = ((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8;
    if (*(void *)v19 < 0xFFFFFFFFuLL)
    {
      *(_OWORD *)unint64_t v18 = *(_OWORD *)v19;
    }
    else
    {
      uint64_t v20 = *(void *)(v19 + 8);
      *(void *)unint64_t v18 = *(void *)v19;
      *(void *)(v18 + 8) = v20;
      uint64_t v28 = v4;
      swift_retain();
      uint64_t v4 = v28;
    }
    unint64_t v21 = v19 + v6;
    uint64_t v22 = (v18 + v6 + 16) & v14;
    uint64_t v23 = (v21 + 16) & v14;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v22, v23, v4);
    uint64_t v24 = (v22 + v7 + v9) & v29;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v24, (v23 + v7 + v9) & v29, v30);
    unint64_t v25 = (v10 + v24) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v26 = (v10 + ((v23 + v7 + v9) & v29)) & 0xFFFFFFFFFFFFFFF8;
    *(unsigned char *)unint64_t v25 = *(unsigned char *)v26;
    *(void *)(v25 + 8) = *(void *)(v26 + 8);
  }
  swift_retain();
  return v3;
}

uint64_t sub_255FD8794(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)((a1 + 31) & 0xFFFFFFFFFFFFFFF8);
  if (*v3 >= 0xFFFFFFFFuLL) {
    swift_release();
  }
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = v4 + 8;
  unint64_t v6 = ((unint64_t)v3 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v6);
  (*(void (**)(unint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 8))((v6
                                                                                            + *(void *)(v5 + 56)
                                                                                            + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80));

  return swift_release();
}

void *sub_255FD8884(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  unint64_t v5 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)v6;
  *(unsigned char *)(v5 + 8) = *(unsigned char *)(v6 + 8);
  *(void *)unint64_t v5 = v7;
  unint64_t v8 = ((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = ((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v9 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)unint64_t v8 = *(_OWORD *)v9;
  }
  else
  {
    uint64_t v10 = *(void *)(v9 + 8);
    *(void *)unint64_t v8 = *(void *)v9;
    *(void *)(v8 + 8) = v10;
    swift_retain();
  }
  uint64_t v11 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v12 = v11 + 16;
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = (v8 + v13 + 16) & ~v13;
  uint64_t v15 = (v9 + v13 + 16) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v11 + 16))(v14, v15);
  uint64_t v16 = *(void *)(v12 + 48);
  uint64_t v17 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v18 = v17 + 16;
  uint64_t v19 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v20 = v16 + v19;
  uint64_t v21 = (v20 + v14) & ~v19;
  uint64_t v22 = (v20 + v15) & ~v19;
  (*(void (**)(uint64_t, uint64_t))(v17 + 16))(v21, v22);
  uint64_t v23 = *(void *)(v18 + 48) + 7;
  unint64_t v24 = (v23 + v21) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v23 + v22) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v24 = *(unsigned char *)v25;
  *(void *)(v24 + 8) = *(void *)(v25 + 8);
  swift_retain();
  return a1;
}

void *sub_255FD89E4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  unint64_t v5 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)v6;
  *(unsigned char *)(v5 + 8) = *(unsigned char *)(v6 + 8);
  *(void *)unint64_t v5 = v7;
  unint64_t v8 = (void *)(((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v9 = (unint64_t *)(((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = *v9;
  if (*v8 < 0xFFFFFFFFuLL)
  {
    if (v10 >= 0xFFFFFFFF)
    {
      unint64_t v12 = v9[1];
      *unint64_t v8 = v10;
      v8[1] = v12;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)unint64_t v8 = *(_OWORD *)v9;
    goto LABEL_8;
  }
  if (v10 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  unint64_t v11 = v9[1];
  *unint64_t v8 = v10;
  v8[1] = v11;
  swift_retain();
  swift_release();
LABEL_8:
  uint64_t v13 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v14 = v13 + 24;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = ((unint64_t)v8 + v15 + 16) & ~v15;
  uint64_t v17 = ((unint64_t)v9 + v15 + 16) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v16, v17);
  uint64_t v18 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v19 = v18 + 24;
  uint64_t v20 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v21 = *(void *)(v14 + 40) + v20;
  uint64_t v22 = (v21 + v16) & ~v20;
  uint64_t v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v18 + 24))(v22, v23);
  uint64_t v24 = *(void *)(v19 + 40) + 7;
  unint64_t v25 = (v24 + v22) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v24 + v23) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v25 = *(unsigned char *)v26;
  *(void *)(v25 + 8) = *(void *)(v26 + 8);
  swift_retain();
  swift_release();
  return a1;
}

void *sub_255FD8B90(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  unint64_t v5 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)v6;
  *(unsigned char *)(v5 + 8) = *(unsigned char *)(v6 + 8);
  *(void *)unint64_t v5 = v7;
  unint64_t v8 = ((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = ((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v9 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)unint64_t v8 = *(_OWORD *)v9;
  }
  else
  {
    uint64_t v10 = *(void *)(v9 + 8);
    *(void *)unint64_t v8 = *(void *)v9;
    *(void *)(v8 + 8) = v10;
  }
  uint64_t v11 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v12 = v11 + 32;
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = (v8 + v13 + 16) & ~v13;
  uint64_t v15 = (v9 + v13 + 16) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v11 + 32))(v14, v15);
  uint64_t v16 = *(void *)(v12 + 32);
  uint64_t v17 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v18 = v17 + 32;
  uint64_t v19 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v20 = v16 + v19;
  uint64_t v21 = (v20 + v14) & ~v19;
  uint64_t v22 = (v20 + v15) & ~v19;
  (*(void (**)(uint64_t, uint64_t))(v17 + 32))(v21, v22);
  *(_OWORD *)((*(void *)(v18 + 32) + 7 + v21) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v18 + 32)
                                                                                       + 7
                                                                                       + v22) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_255FD8CE0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  unint64_t v5 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)v6;
  *(unsigned char *)(v5 + 8) = *(unsigned char *)(v6 + 8);
  *(void *)unint64_t v5 = v7;
  unint64_t v8 = (void *)(((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v9 = (unint64_t *)(((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = *v9;
  if (*v8 < 0xFFFFFFFFuLL)
  {
    if (v10 >= 0xFFFFFFFF)
    {
      unint64_t v12 = v9[1];
      *unint64_t v8 = v10;
      v8[1] = v12;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)unint64_t v8 = *(_OWORD *)v9;
    goto LABEL_8;
  }
  if (v10 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  unint64_t v11 = v9[1];
  *unint64_t v8 = v10;
  v8[1] = v11;
  swift_release();
LABEL_8:
  uint64_t v13 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v14 = v13 + 40;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = ((unint64_t)v8 + v15 + 16) & ~v15;
  uint64_t v17 = ((unint64_t)v9 + v15 + 16) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v13 + 40))(v16, v17);
  uint64_t v18 = *(void *)(v14 + 24);
  uint64_t v19 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v20 = v19 + 40;
  uint64_t v21 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v22 = v18 + v21;
  uint64_t v23 = (v22 + v16) & ~v21;
  uint64_t v24 = (v22 + v17) & ~v21;
  (*(void (**)(uint64_t, uint64_t))(v19 + 40))(v23, v24);
  uint64_t v25 = *(void *)(v20 + 24) + 7;
  unint64_t v26 = (v25 + v23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = (v25 + v24) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v26 = *(unsigned char *)v27;
  *(void *)(v26 + 8) = *(void *)(v27 + 8);
  swift_release();
  return a1;
}

uint64_t sub_255FD8E78(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v10 = *(void *)(v4 + 64);
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  if (v5 <= v8) {
    unsigned int v12 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v4 + 84);
  }
  if (v12 <= 0x7FFFFFFE) {
    unsigned int v13 = 2147483646;
  }
  else {
    unsigned int v13 = v12;
  }
  if (!a2) {
    return 0;
  }
  if (v13 < a2)
  {
    unint64_t v14 = ((*(void *)(*(void *)(v6 - 8) + 64) + ((v10 + v11 + ((v9 + 40) & ~v9)) & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    if ((v14 & 0xFFFFFFF8) != 0) {
      unsigned int v15 = 2;
    }
    else {
      unsigned int v15 = a2 - v13 + 1;
    }
    if (v15 >= 0x10000) {
      unsigned int v16 = 4;
    }
    else {
      unsigned int v16 = 2;
    }
    if (v15 < 0x100) {
      unsigned int v16 = 1;
    }
    if (v15 >= 2) {
      uint64_t v17 = v16;
    }
    else {
      uint64_t v17 = 0;
    }
    switch(v17)
    {
      case 1:
        int v18 = *((unsigned __int8 *)a1 + v14);
        if (!*((unsigned char *)a1 + v14)) {
          break;
        }
        goto LABEL_25;
      case 2:
        int v18 = *(unsigned __int16 *)((char *)a1 + v14);
        if (*(_WORD *)((char *)a1 + v14)) {
          goto LABEL_25;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x255FD9088);
      case 4:
        int v18 = *(_DWORD *)((char *)a1 + v14);
        if (!v18) {
          break;
        }
LABEL_25:
        int v20 = v18 - 1;
        if ((v14 & 0xFFFFFFF8) != 0)
        {
          int v20 = 0;
          int v21 = *a1;
        }
        else
        {
          int v21 = 0;
        }
        return v13 + (v21 | v20) + 1;
      default:
        break;
    }
  }
  uint64_t v22 = (uint64_t *)(((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8);
  if (v12 > 0x7FFFFFFE)
  {
    uint64_t v24 = ((unint64_t)v22 + v9 + 16) & ~v9;
    if (v5 == v13) {
      return (*(uint64_t (**)(uint64_t))(v4 + 48))(v24);
    }
    else {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))((v24 + v10 + v11) & ~v11, v8, v6);
    }
  }
  else
  {
    uint64_t v23 = *v22;
    if ((unint64_t)*v22 >= 0xFFFFFFFF) {
      LODWORD(v23) = -1;
    }
    if ((v23 + 1) >= 2) {
      return v23;
    }
    else {
      return 0;
    }
  }
}

void sub_255FD909C(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = *(void *)(v6 + 64);
  uint64_t v12 = *(unsigned __int8 *)(v9 + 80);
  if (v7 <= *(_DWORD *)(v9 + 84)) {
    unsigned int v13 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v13 = *(_DWORD *)(v6 + 84);
  }
  if (v13 <= 0x7FFFFFFE) {
    unsigned int v14 = 2147483646;
  }
  else {
    unsigned int v14 = v13;
  }
  size_t v15 = ((*(void *)(*(void *)(v8 - 8) + 64) + ((v11 + v12 + ((v10 + 40) & ~v10)) & ~v12) + 7) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v14 >= a3)
  {
    int v19 = 0;
    int v20 = a2 - v14;
    if (a2 <= v14)
    {
LABEL_20:
      switch(v19)
      {
        case 1:
          a1[v15] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_33;
        case 2:
          *(_WORD *)&a1[v15] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_33;
        case 3:
          goto LABEL_49;
        case 4:
          *(_DWORD *)&a1[v15] = 0;
          goto LABEL_32;
        default:
LABEL_32:
          if (a2)
          {
LABEL_33:
            uint64_t v23 = (void *)((unint64_t)(a1 + 31) & 0xFFFFFFFFFFFFFFF8);
            if (v13 > 0x7FFFFFFE)
            {
              uint64_t v24 = ((unint64_t)v23 + v10 + 16) & ~v10;
              if (v7 == v14)
              {
                uint64_t v25 = *(void (**)(uint64_t))(v6 + 56);
                v25(v24);
              }
              else
              {
                uint64_t v26 = (v24 + v11 + v12) & ~v12;
                unint64_t v27 = *(void (**)(uint64_t))(v9 + 56);
                v27(v26);
              }
            }
            else if (a2 > 0x7FFFFFFE)
            {
              *uint64_t v23 = 0;
              v23[1] = 0;
              *(_DWORD *)uint64_t v23 = a2 - 0x7FFFFFFF;
            }
            else
            {
              *uint64_t v23 = a2;
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v16 = a3 - v14;
    if (((*(_DWORD *)(*(void *)(v8 - 8) + 64)
         + ((v11 + v12 + ((v10 + 40) & ~v10)) & ~v12)
         + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      unsigned int v17 = v16 + 1;
    else {
      unsigned int v17 = 2;
    }
    if (v17 >= 0x10000) {
      int v18 = 4;
    }
    else {
      int v18 = 2;
    }
    if (v17 < 0x100) {
      int v18 = 1;
    }
    if (v17 >= 2) {
      int v19 = v18;
    }
    else {
      int v19 = 0;
    }
    int v20 = a2 - v14;
    if (a2 <= v14) {
      goto LABEL_20;
    }
  }
  if (((*(_DWORD *)(*(void *)(v8 - 8) + 64)
       + ((v11 + v12 + ((v10 + 40) & ~v10)) & ~v12)
       + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
    int v21 = v20;
  else {
    int v21 = 1;
  }
  if (((*(_DWORD *)(*(void *)(v8 - 8) + 64)
       + ((v11 + v12 + ((v10 + 40) & ~v10)) & ~v12)
       + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    unsigned int v22 = ~v14 + a2;
    bzero(a1, v15);
    *(_DWORD *)a1 = v22;
  }
  switch(v19)
  {
    case 1:
      a1[v15] = v21;
      break;
    case 2:
      *(_WORD *)&a1[v15] = v21;
      break;
    case 3:
LABEL_49:
      __break(1u);
      JUMPOUT(0x255FD9364);
    case 4:
      *(_DWORD *)&a1[v15] = v21;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for UnlimitedHeightVStackWithFooter()
{
  return swift_getGenericMetadata();
}

uint64_t sub_255FD93A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255FD93E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  v18[0] = a6;
  v18[1] = a7;
  uint64_t v13 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  size_t v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_256175E98();
  MEMORY[0x270FA5388](v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v7, a3);
  sub_256175EA8();
  v18[4] = a3;
  v18[5] = a4;
  v18[6] = a5;
  v18[7] = v18[0];
  void v18[8] = a1;
  _OWORD v18[9] = a2;
  swift_getWitnessTable();
  return sub_256176058();
}

uint64_t sub_255FD9590@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v80 = a2;
  uint64_t v78 = *(a1 - 1);
  uint64_t v79 = *(void *)(v78 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v77 = (char *)v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FDA974(255, &qword_269F43EF8, (uint64_t (*)(void))sub_255FDA920, (uint64_t)&_s21UnlimitedHeightVStackVN, MEMORY[0x263F186D0]);
  uint64_t v67 = a1[2];
  sub_2561761B8();
  sub_255FDA974(255, (unint64_t *)&qword_269F43F08, (uint64_t (*)(void))sub_255F85944, MEMORY[0x263F8EF38], MEMORY[0x263F1A098]);
  sub_2561761B8();
  sub_255FDA9DC(&qword_269F43F10);
  uint64_t v4 = sub_256176048();
  uint64_t v75 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v71 = (uint64_t)v50 - v5;
  uint64_t v51 = v4;
  uint64_t v6 = sub_2561761B8();
  uint64_t v73 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v70 = (char *)v50 - v7;
  sub_255FDA974(255, &qword_269F43F18, (uint64_t (*)(void))sub_255F9E154, MEMORY[0x263F1BA90], MEMORY[0x263F186B8]);
  uint64_t v52 = v6;
  uint64_t v8 = sub_2561761B8();
  uint64_t v72 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v66 = (char *)v50 - v9;
  uint64_t v58 = a1[3];
  uint64_t v69 = sub_256178448();
  uint64_t v56 = a1[5];
  uint64_t v65 = a1;
  uint64_t v106 = v56;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_2561762F8();
  uint64_t v54 = v8;
  uint64_t v10 = sub_2561761B8();
  uint64_t v74 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v64 = (char *)v50 - v11;
  uint64_t v12 = sub_255FDA9DC(&qword_269F43F20);
  uint64_t v104 = a1[4];
  uint64_t v13 = v104;
  uint64_t v105 = MEMORY[0x263F19100];
  uint64_t v14 = swift_getWitnessTable();
  unint64_t v15 = sub_255FDAA58();
  uint64_t v102 = v14;
  unint64_t v103 = v15;
  uint64_t v16 = swift_getWitnessTable();
  uint64_t v100 = v12;
  uint64_t v101 = v16;
  uint64_t v98 = swift_getWitnessTable();
  uint64_t v99 = MEMORY[0x263F18860];
  uint64_t v17 = swift_getWitnessTable();
  v50[1] = v17;
  unint64_t v18 = sub_255FDAAE8();
  uint64_t v96 = v17;
  unint64_t v97 = v18;
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v53 = v19;
  uint64_t v20 = swift_getWitnessTable();
  uint64_t v94 = v19;
  uint64_t v95 = v20;
  uint64_t v59 = v10;
  uint64_t v60 = swift_getWitnessTable();
  uint64_t v92 = v10;
  uint64_t v93 = v60;
  uint64_t v61 = MEMORY[0x263F1AA48];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v63 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v55 = (char *)v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v57 = (char *)v50 - v23;
  uint64_t v24 = (void *)swift_allocObject();
  uint64_t v25 = v67;
  uint64_t v26 = v58;
  void v24[2] = v67;
  v24[3] = v26;
  uint64_t v27 = v56;
  v24[4] = v13;
  v24[5] = v27;
  uint64_t v87 = v25;
  uint64_t v88 = v26;
  uint64_t v89 = v13;
  uint64_t v90 = v27;
  uint64_t v28 = v76;
  uint64_t v91 = v76;
  uint64_t v29 = v71;
  sub_255FD9F94((uint64_t)sub_255FDAB78, (uint64_t)v86, v71);
  swift_release();
  sub_2561778E8();
  uint64_t v30 = v70;
  uint64_t v31 = v51;
  sub_2561772C8();
  (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v29, v31);
  uint64_t v32 = v66;
  uint64_t v33 = v52;
  sub_256177308();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v30, v33);
  sub_2561778D8();
  uint64_t v81 = v25;
  uint64_t v82 = v26;
  uint64_t v83 = v13;
  uint64_t v84 = v27;
  uint64_t v85 = v28;
  long long v34 = v64;
  uint64_t v35 = v54;
  sub_256177328();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v32, v35);
  uint64_t v36 = v78;
  long long v37 = v77;
  uint64_t v38 = v28;
  uint64_t v39 = v65;
  (*(void (**)(char *, uint64_t, void *))(v78 + 16))(v77, v38, v65);
  unint64_t v40 = (*(unsigned __int8 *)(v36 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  uint64_t v41 = (char *)swift_allocObject();
  *((void *)v41 + 2) = v25;
  *((void *)v41 + 3) = v26;
  *((void *)v41 + 4) = v13;
  *((void *)v41 + 5) = v27;
  (*(void (**)(char *, char *, void *))(v36 + 32))(&v41[v40], v37, v39);
  uint64_t v42 = v55;
  uint64_t v43 = v59;
  uint64_t v44 = v60;
  sub_2561770E8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v34, v43);
  uint64_t v92 = v43;
  uint64_t v93 = v44;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v46 = v57;
  uint64_t v47 = OpaqueTypeMetadata2;
  sub_25605CACC(v42, OpaqueTypeMetadata2, OpaqueTypeConformance2);
  uint64_t v48 = *(void (**)(char *, uint64_t))(v63 + 8);
  v48(v42, v47);
  sub_25605CACC(v46, v47, OpaqueTypeConformance2);
  return ((uint64_t (*)(char *, uint64_t))v48)(v46, v47);
}

uint64_t sub_255FD9F94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_2561761B8();
  sub_255FDA974(255, (unint64_t *)&qword_269F43F08, (uint64_t (*)(void))sub_255F85944, MEMORY[0x263F8EF38], MEMORY[0x263F1A098]);
  uint64_t v6 = sub_2561761B8();
  unint64_t v7 = sub_255FDA920();
  swift_getWitnessTable();
  sub_255FDAA58();
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_255FD93E8(a1, a2, (uint64_t)&_s21UnlimitedHeightVStackVN, v6, v7, WitnessTable, a3);
}

uint64_t sub_255FDA0C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v38 = a3;
  uint64_t v39 = a5;
  uint64_t v42 = a6;
  uint64_t v47 = a2;
  uint64_t v48 = a3;
  uint64_t v49 = a4;
  uint64_t v50 = a5;
  uint64_t v9 = type metadata accessor for UnlimitedHeightVStackWithFooter();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v36 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v35 = (char *)&v32 - v11;
  uint64_t v34 = sub_2561761B8();
  uint64_t v41 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v32 = (char *)&v32 - v12;
  sub_255FDA974(255, (unint64_t *)&qword_269F43F08, (uint64_t (*)(void))sub_255F85944, MEMORY[0x263F8EF38], MEMORY[0x263F1A098]);
  uint64_t v13 = sub_2561761B8();
  uint64_t v40 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v33 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  long long v37 = (char *)&v32 - v16;
  uint64_t v17 = v9;
  sub_2561778E8();
  sub_2561772D8();
  unint64_t v18 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v35, a1, v9);
  unint64_t v19 = (*(unsigned __int8 *)(v10 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v20 = (char *)swift_allocObject();
  uint64_t v21 = v38;
  *((void *)v20 + 2) = a2;
  *((void *)v20 + 3) = v21;
  uint64_t v22 = v39;
  *((void *)v20 + 4) = a4;
  *((void *)v20 + 5) = v22;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v20[v19], v18, v17);
  uint64_t v45 = a4;
  uint64_t v46 = MEMORY[0x263F19100];
  uint64_t v23 = v34;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_255F85944();
  uint64_t v25 = v32;
  uint64_t v26 = v33;
  sub_256177178();
  swift_release();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v25, v23);
  unint64_t v27 = sub_255FDAA58();
  uint64_t v43 = WitnessTable;
  unint64_t v44 = v27;
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v29 = v37;
  sub_25605CACC(v26, v13, v28);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v40 + 8);
  v30(v26, v13);
  sub_25605CACC(v29, v13, v28);
  return ((uint64_t (*)(char *, uint64_t))v30)(v29, v13);
}

uint64_t sub_255FDA51C@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_256175FA8();
  *a1 = v3;
  return result;
}

uint64_t sub_255FDA548()
{
  return sub_256177588();
}

uint64_t sub_255FDA5C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v33 = a6;
  uint64_t v11 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_256178448();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  unint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v31 = (char *)&v30 - v19;
  uint64_t v32 = a5;
  uint64_t v36 = a2;
  uint64_t v37 = a3;
  uint64_t v38 = a4;
  uint64_t v39 = a5;
  uint64_t v20 = type metadata accessor for UnlimitedHeightVStackWithFooter();
  uint64_t v21 = (char *)(a1 + *(int *)(v20 + 68));
  char v22 = *v21;
  uint64_t v23 = *((void *)v21 + 1);
  LOBYTE(v36) = v22;
  uint64_t v37 = v23;
  sub_255FA0F78();
  sub_256177578();
  if (v35 == 1)
  {
    uint64_t v24 = a1 + *(int *)(v20 + 64);
    uint64_t v25 = v32;
    sub_25605CACC(v24, a3, v32);
    sub_25605CACC(v13, a3, v25);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, a3);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v18, 0, 1, a3);
    uint64_t v26 = (uint64_t)v31;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v18, 1, 1, a3);
    uint64_t v26 = (uint64_t)v31;
    uint64_t v25 = v32;
  }
  sub_25605CB08((uint64_t)v18, v26);
  unint64_t v27 = *(void (**)(char *, uint64_t))(v15 + 8);
  v27(v18, v14);
  uint64_t v34 = v25;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_25605CACC(v26, v14, WitnessTable);
  return ((uint64_t (*)(uint64_t, uint64_t))v27)(v26, v14);
}

uint64_t sub_255FDA894(uint64_t a1)
{
  type metadata accessor for UnlimitedHeightVStackWithFooter();
  sub_255FA0F78();
  uint64_t result = sub_256177578();
  if (v4 == 1)
  {
    uint64_t v3 = *(uint64_t (**)(uint64_t))(a1 + 24);
    if (v3) {
      return v3(result);
    }
  }
  return result;
}

unint64_t sub_255FDA920()
{
  unint64_t result = qword_269F43F00;
  if (!qword_269F43F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43F00);
  }
  return result;
}

void sub_255FDA974(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_255FDA9DC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_255FDA974(255, &qword_269F43EF8, (uint64_t (*)(void))sub_255FDA920, (uint64_t)&_s21UnlimitedHeightVStackVN, MEMORY[0x263F186D0]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_255FDAA58()
{
  unint64_t result = qword_269F43F28;
  if (!qword_269F43F28)
  {
    sub_255FDA974(255, (unint64_t *)&qword_269F43F08, (uint64_t (*)(void))sub_255F85944, MEMORY[0x263F8EF38], MEMORY[0x263F1A098]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43F28);
  }
  return result;
}

unint64_t sub_255FDAAE8()
{
  unint64_t result = qword_269F43F30;
  if (!qword_269F43F30)
  {
    sub_255FDA974(255, &qword_269F43F18, (uint64_t (*)(void))sub_255F9E154, MEMORY[0x263F1BA90], MEMORY[0x263F186B8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43F30);
  }
  return result;
}

uint64_t sub_255FDAB78()
{
  return sub_255FDABA8((uint64_t (*)(void, void, void, void, void))sub_255FDA0C8);
}

uint64_t sub_255FDAB90()
{
  return sub_255FDABA8((uint64_t (*)(void, void, void, void, void))sub_255FDA5C8);
}

uint64_t sub_255FDABA8(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_255FDABC4()
{
  uint64_t v1 = *(void *)(type metadata accessor for UnlimitedHeightVStackWithFooter() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_255FDA894(v2);
}

uint64_t objectdestroyTm_4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  long long v5 = *(_OWORD *)(v0 + 24);
  uint64_t v2 = type metadata accessor for UnlimitedHeightVStackWithFooter();
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  if (*(void *)(v3 + 24)) {
    swift_release();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3 + *(int *)(v2 + 60), v1);
  (*(void (**)(uint64_t))(*(void *)(v5 - 8) + 8))(v3 + *(int *)(v2 + 64));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_255FDADCC()
{
  type metadata accessor for UnlimitedHeightVStackWithFooter();

  return sub_255FDA548();
}

uint64_t sub_255FDAE78()
{
  return swift_deallocObject();
}

uint64_t sub_255FDAE88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *(void *)(a4 - 8);
  uint64_t v9 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void (*)(void))MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v17 - v13;
  v12();
  sub_25605CACC(v11, a4, a6);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v8 + 8);
  v15(v11, a4);
  sub_25605CACC(v14, a4, a6);
  return ((uint64_t (*)(char *, uint64_t))v15)(v14, a4);
}

uint64_t sub_255FDAFBC()
{
  return sub_255FDAE88(v0[6], v0[7], v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_255FDAFCC()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_255FDB2EC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  char v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *char v4 = *a2;
    char v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    uint64_t v7 = a2[3];
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(void *)(a1 + 24) = v7;
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    sub_255FDB5F8(0);
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_256176AA8();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        sub_255FDB62C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      uint64_t v15 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      uint64_t v16 = (char *)v9 + v15;
      uint64_t v17 = (char *)v10 + v15;
      uint64_t v18 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v19 = *(int *)(a3 + 28);
    uint64_t v20 = (void *)((char *)v4 + v19);
    uint64_t v21 = (uint64_t *)((char *)a2 + v19);
    sub_255F63CB4(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    }
    else
    {
      *uint64_t v20 = *v21;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

void sub_255FDB5F8(uint64_t a1)
{
}

void sub_255FDB62C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_255FDB690(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  sub_255FDB5F8(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_256176AA8();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
    uint64_t v7 = v4 + *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    uint64_t v8 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = a1 + *(int *)(a2 + 28);
  sub_255F63CB4(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_256175D98();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    return v11(v9, v10);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_255FDB864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  sub_255FDB5F8(0);
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_256176AA8();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      sub_255FDB62C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v13 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    uint64_t v14 = (char *)v8 + v13;
    uint64_t v15 = (char *)v9 + v13;
    uint64_t v16 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = *(int *)(a3 + 28);
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  sub_255F63CB4(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = sub_256175D98();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  }
  else
  {
    void *v18 = *v19;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_255FDBB18(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_255FDBE0C((uint64_t)a1 + v7, (uint64_t (*)(void))sub_255FDB5F8);
    sub_255FDB5F8(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_256176AA8();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        sub_255FDB62C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      uint64_t v13 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      uint64_t v14 = (char *)v8 + v13;
      uint64_t v15 = (char *)v9 + v13;
      uint64_t v16 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = *(int *)(a3 + 28);
    uint64_t v18 = (void *)((char *)a1 + v17);
    uint64_t v19 = (void *)((char *)a2 + v17);
    sub_255FDBE0C((uint64_t)a1 + v17, (uint64_t (*)(void))sub_255F63CB4);
    sub_255F63CB4(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      void *v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_255FDBE0C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *sub_255FDBE6C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  sub_255FDB5F8(0);
  uint64_t v11 = v10;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_256176AA8();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12))
    {
      sub_255FDB62C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v8, v9, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
    }
    uint64_t v15 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    uint64_t v16 = &v8[v15];
    uint64_t v17 = &v9[v15];
    uint64_t v18 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v19 = *(int *)(a3 + 28);
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  sub_255F63CB4(0);
  uint64_t v23 = v22;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = sub_256175D98();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v20, v21, v24);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
  }
  return a1;
}

uint64_t sub_255FDC110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)(a1 + v7);
    uint64_t v9 = (char *)(a2 + v7);
    sub_255FDBE0C(a1 + v7, (uint64_t (*)(void))sub_255FDB5F8);
    sub_255FDB5F8(0);
    uint64_t v11 = v10;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_256176AA8();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12))
      {
        sub_255FDB62C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v8, v9, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
      }
      uint64_t v15 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      uint64_t v16 = &v8[v15];
      uint64_t v17 = &v9[v15];
      uint64_t v18 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    uint64_t v19 = *(int *)(a3 + 28);
    uint64_t v20 = (void *)(a1 + v19);
    uint64_t v21 = (const void *)(a2 + v19);
    sub_255FDBE0C(a1 + v19, (uint64_t (*)(void))sub_255F63CB4);
    sub_255F63CB4(0);
    uint64_t v23 = v22;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = sub_256175D98();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v20, v21, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_255FDC40C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255FDC420);
}

uint64_t sub_255FDC420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_255FDB62C(0, &qword_269F43F38, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_255FDB62C(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_255FDC5AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255FDC5C0);
}

uint64_t sub_255FDC5C0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_255FDB62C(0, &qword_269F43F38, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_255FDB62C(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for NotificationsSetupPhase_iOS()
{
  uint64_t result = qword_269F43F40;
  if (!qword_269F43F40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_255FDC798()
{
  sub_255FDB5F8(319);
  if (v0 <= 0x3F)
  {
    sub_255F63CB4(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_255FDC878()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_255FDC894@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v58 = a2;
  sub_255FDDE28(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FDDE00(0);
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FDDDD8(0);
  uint64_t v11 = v10 - 8;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FDDD4C(0);
  uint64_t v57 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_2561778E8();
  sub_2561166AC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v5, 0.0, 1, 0.0, 1, v17, v18);
  char v19 = sub_256176D78();
  uint64_t v20 = a1[3];
  uint64_t v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_255FD83F4(v20, v21);
  sub_256175D48();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  sub_255FDE428((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(void))sub_255FDDE28);
  uint64_t v30 = &v9[*(int *)(v7 + 44)];
  *uint64_t v30 = v19;
  *((void *)v30 + 1) = v23;
  *((void *)v30 + 2) = v25;
  *((void *)v30 + 3) = v27;
  *((void *)v30 + 4) = v29;
  v30[40] = 0;
  sub_255FDBE0C((uint64_t)v5, (uint64_t (*)(void))sub_255FDDE28);
  char v31 = sub_256176D78();
  uint64_t v32 = a1[3];
  uint64_t v33 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v32);
  sub_255FD7CE8(v32, v33);
  sub_256175D48();
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  sub_255FDE428((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(void))sub_255FDDE00);
  uint64_t v42 = &v13[*(int *)(v11 + 44)];
  char *v42 = v31;
  *((void *)v42 + 1) = v35;
  *((void *)v42 + 2) = v37;
  *((void *)v42 + 3) = v39;
  *((void *)v42 + 4) = v41;
  v42[40] = 0;
  sub_255FDBE0C((uint64_t)v9, (uint64_t (*)(void))sub_255FDDE00);
  char v43 = sub_256176DA8();
  id result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    uint64_t v45 = result;
    MobileGestalt_get_homeButtonType();

    sub_256175D48();
    uint64_t v47 = v46;
    uint64_t v49 = v48;
    uint64_t v51 = v50;
    uint64_t v53 = v52;
    sub_255FDE428((uint64_t)v13, (uint64_t)v16, (uint64_t (*)(void))sub_255FDDDD8);
    uint64_t v54 = &v16[*(int *)(v57 + 36)];
    char *v54 = v43;
    *((void *)v54 + 1) = v47;
    *((void *)v54 + 2) = v49;
    *((void *)v54 + 3) = v51;
    *((void *)v54 + 4) = v53;
    v54[40] = 0;
    sub_255FDBE0C((uint64_t)v13, (uint64_t (*)(void))sub_255FDDDD8);
    uint64_t v55 = sub_2561778E8();
    sub_25611671C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v58, 0.0, 1, 0.0, 1, v55, v56);
    return (id)sub_255FDBE0C((uint64_t)v16, (uint64_t (*)(void))sub_255FDDD4C);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_255FDCC98@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v58 = a2;
  sub_255FDE97C();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FDF3C8(0);
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FDF3F0(0);
  uint64_t v11 = v10 - 8;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FDF418(0);
  uint64_t v57 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_2561778E8();
  sub_256116D60(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v5, 0.0, 1, 0.0, 1, v17, v18);
  char v19 = sub_256176D78();
  uint64_t v20 = a1[3];
  uint64_t v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_255FD83F4(v20, v21);
  sub_256175D48();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  sub_255FDE428((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(void))sub_255FDE97C);
  uint64_t v30 = &v9[*(int *)(v7 + 44)];
  *uint64_t v30 = v19;
  *((void *)v30 + 1) = v23;
  *((void *)v30 + 2) = v25;
  *((void *)v30 + 3) = v27;
  *((void *)v30 + 4) = v29;
  v30[40] = 0;
  sub_255FDBE0C((uint64_t)v5, (uint64_t (*)(void))sub_255FDE97C);
  char v31 = sub_256176D78();
  uint64_t v32 = a1[3];
  uint64_t v33 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v32);
  sub_255FD7CE8(v32, v33);
  sub_256175D48();
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  sub_255FDE428((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(void))sub_255FDF3C8);
  uint64_t v42 = &v13[*(int *)(v11 + 44)];
  char *v42 = v31;
  *((void *)v42 + 1) = v35;
  *((void *)v42 + 2) = v37;
  *((void *)v42 + 3) = v39;
  *((void *)v42 + 4) = v41;
  v42[40] = 0;
  sub_255FDBE0C((uint64_t)v9, (uint64_t (*)(void))sub_255FDF3C8);
  char v43 = sub_256176DA8();
  id result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    uint64_t v45 = result;
    MobileGestalt_get_homeButtonType();

    sub_256175D48();
    uint64_t v47 = v46;
    uint64_t v49 = v48;
    uint64_t v51 = v50;
    uint64_t v53 = v52;
    sub_255FDE428((uint64_t)v13, (uint64_t)v16, (uint64_t (*)(void))sub_255FDF3F0);
    uint64_t v54 = &v16[*(int *)(v57 + 36)];
    char *v54 = v43;
    *((void *)v54 + 1) = v47;
    *((void *)v54 + 2) = v49;
    *((void *)v54 + 3) = v51;
    *((void *)v54 + 4) = v53;
    v54[40] = 0;
    sub_255FDBE0C((uint64_t)v13, (uint64_t (*)(void))sub_255FDF3F0);
    uint64_t v55 = sub_2561778E8();
    sub_256116DD0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v58, 0.0, 1, 0.0, 1, v55, v56);
    return (id)sub_255FDBE0C((uint64_t)v16, (uint64_t (*)(void))sub_255FDF418);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_255FDD09C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v73 = a1;
  uint64_t v83 = a3;
  uint64_t v4 = sub_256175D98();
  uint64_t v81 = *(void *)(v4 - 8);
  uint64_t v82 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v80 = (uint64_t)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for NotificationsNextButtonView(0) - 8;
  MEMORY[0x270FA5388](v78);
  uint64_t v7 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FDEA20(0, &qword_269F43F50, type metadata accessor for NotificationsNextButtonView, sub_255FDDCF0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for StateOfMindEntryButtonTray);
  uint64_t v77 = v8 - 8;
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v75 = (uint64_t)&v65 - v9;
  uint64_t v10 = sub_2561778B8();
  uint64_t v87 = *(void *)(v10 - 8);
  uint64_t v88 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v86 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for NotificationsSetupPhase_iOS();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v89 = v12 - 8;
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v74 = (uint64_t)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v65 - v16;
  uint64_t v18 = type metadata accessor for NotificationsSetupPhaseContent();
  uint64_t v19 = v18 - 8;
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (uint64_t *)((char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_255FDDD24(0);
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v85 = (uint64_t)&v65 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FDDE50();
  uint64_t v25 = (int *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v65 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FDE1B8(0);
  uint64_t v79 = v28;
  MEMORY[0x270FA5388](v28);
  uint64_t v76 = (uint64_t)&v65 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = a2;
  uint64_t v72 = type metadata accessor for NotificationsSetupPhase_iOS;
  uint64_t v66 = v17;
  sub_255FDE428(a2, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for NotificationsSetupPhase_iOS);
  uint64_t v30 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v71 = ((v30 + 16) & ~v30) + v14;
  uint64_t v31 = (v30 + 16) & ~v30;
  uint64_t v70 = v30 | 7;
  uint64_t v32 = swift_allocObject();
  uint64_t v69 = type metadata accessor for NotificationsSetupPhase_iOS;
  sub_255FDE5DC((uint64_t)v17, v32 + v31, (uint64_t (*)(void))type metadata accessor for NotificationsSetupPhase_iOS);
  uint64_t v33 = (char *)v21 + *(int *)(v19 + 32);
  uint64_t v34 = sub_256175FC8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v33, v73, v34);
  type metadata accessor for StateOfMindEntryModel(0);
  sub_255FDF380(&qword_269F42CB0, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel);
  swift_retain();
  uint64_t *v21 = sub_2561760E8();
  v21[1] = v35;
  v21[2] = (uint64_t)sub_255FDE420;
  v21[3] = v32;
  uint64_t v36 = (uint64_t *)((char *)v21 + *(int *)(v19 + 36));
  *uint64_t v36 = swift_getKeyPath();
  sub_255FDB5F8(0);
  uint64_t v73 = v37;
  swift_storeEnumTagMultiPayload();
  uint64_t v93 = type metadata accessor for NotificationsSetupPhaseSpecs();
  uint64_t v94 = &off_2704BA090;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v91);
  uint64_t v39 = v84;
  sub_25611B298((uint64_t)boxed_opaque_existential_1);
  uint64_t v40 = v85;
  sub_255FDC894(&v91, v85);
  sub_255FDBE0C((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for NotificationsSetupPhaseContent);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v91);
  uint64_t v41 = v86;
  sub_2561778A8();
  (*(void (**)(unsigned char *, char *, uint64_t))(v87 + 16))(&v27[v25[19]], v41, v88);
  unsigned char *v27 = 1;
  uint64_t v42 = (uint64_t)&v27[v25[20]];
  uint64_t v68 = v27;
  sub_255FDE428(v40, v42, (uint64_t (*)(void))sub_255FDDD24);
  uint64_t v67 = &v27[v25[21]];
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_256175C88();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v43 = *(void *)&v91;
  uint64_t v44 = (uint64_t)v66;
  uint64_t v45 = v72;
  sub_255FDE428(v39, (uint64_t)v66, (uint64_t (*)(void))v72);
  uint64_t v46 = swift_allocObject();
  uint64_t v47 = v69;
  sub_255FDE5DC(v44, v46 + v31, (uint64_t (*)(void))v69);
  uint64_t v48 = v74;
  sub_255FDE428(v39, v74, (uint64_t (*)(void))v45);
  uint64_t v49 = swift_allocObject();
  sub_255FDE5DC(v48, v49 + v31, (uint64_t (*)(void))v47);
  *(void *)uint64_t v7 = v43;
  *((void *)v7 + 1) = sub_255FDE420;
  *((void *)v7 + 2) = v46;
  *((void *)v7 + 3) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F55050]), sel_init);
  *((void *)v7 + 4) = sub_255FDE504;
  *((void *)v7 + 5) = v49;
  LOBYTE(v9__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
  sub_256177568();
  uint64_t v50 = v92;
  v7[48] = LOBYTE(v91);
  *((void *)v7 + 7) = v50;
  LOBYTE(v9__isPlatformVersionAtLeast(2, 18, 1, 0) = 2;
  sub_255FDE584();
  sub_256177568();
  uint64_t v51 = v92;
  v7[64] = LOBYTE(v91);
  *((void *)v7 + 9) = v51;
  uint64_t v52 = (uint64_t *)&v7[*(int *)(v78 + 48)];
  *uint64_t v52 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  uint64_t v53 = v75;
  sub_255FDE5DC((uint64_t)v7, v75, type metadata accessor for NotificationsNextButtonView);
  uint64_t v54 = (uint64_t *)(v53 + *(int *)(v77 + 44));
  uint64_t *v54 = swift_getKeyPath();
  sub_255FDB62C(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  sub_255FDE648(v53, (uint64_t)v67);
  uint64_t v55 = (uint64_t)v68;
  uint64_t v56 = (double *)&v68[v25[22]];
  uint64_t v90 = 0;
  sub_256177568();
  uint64_t v57 = v92;
  *uint64_t v56 = v91;
  *((void *)v56 + 1) = v57;
  uint64_t v58 = (double *)(v55 + v25[23]);
  uint64_t v90 = 0;
  sub_256177568();
  uint64_t v59 = v92;
  double *v58 = v91;
  *((void *)v58 + 1) = v59;
  (*(void (**)(char *, uint64_t))(v87 + 8))(v86, v88);
  sub_255FDBE0C(v85, (uint64_t (*)(void))sub_255FDDD24);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_256175C88();
  swift_release();
  swift_release();
  swift_release();
  double v60 = v91;
  uint64_t v61 = v80;
  sub_25611A114(v80);
  uint64_t v62 = v76;
  sub_2560D5EBC(v61, v55, v76, v60);
  (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v61, v82);
  sub_255FDBE0C(v55, (uint64_t (*)(void))sub_255FDDE50);
  unint64_t v63 = sub_255FDE6F0();
  MEMORY[0x25A29FDE0](2, MEMORY[0x263F8EE78], v79, v63);
  return sub_255FDBE0C(v62, (uint64_t (*)(void))sub_255FDE1B8);
}

uint64_t sub_255FDDAFC(uint64_t a1, char a2)
{
  swift_retain();
  sub_255FFDBD0(a1, a2);

  return swift_release();
}

uint64_t sub_255FDDB58@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](a1 - 8);
  sub_255FDE428(v2, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for NotificationsSetupPhase_iOS);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  uint64_t result = sub_255FDE5DC((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, (uint64_t (*)(void))type metadata accessor for NotificationsSetupPhase_iOS);
  *a2 = sub_255FDDC70;
  a2[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v7;
  return result;
}

uint64_t sub_255FDDC70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for NotificationsSetupPhase_iOS() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_255FDD09C(a1, v6, a2);
}

uint64_t sub_255FDDCF0()
{
  return sub_255FDF380(&qword_269F43F58, (void (*)(uint64_t))type metadata accessor for NotificationsNextButtonView);
}

void sub_255FDDD24(uint64_t a1)
{
}

void sub_255FDDD4C(uint64_t a1)
{
}

void sub_255FDDD74(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_255FDDDD8(uint64_t a1)
{
}

void sub_255FDDE00(uint64_t a1)
{
}

void sub_255FDDE28(uint64_t a1)
{
}

void sub_255FDDE50()
{
  if (!qword_269F43F88)
  {
    sub_255FDDD24(255);
    sub_255FDEA20(255, &qword_269F43F50, type metadata accessor for NotificationsNextButtonView, sub_255FDDCF0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for StateOfMindEntryButtonTray);
    sub_2561778B8();
    sub_255FDDFB4(&qword_269F43F90, sub_255FDDD24, (void (*)(void))sub_255FDDF78);
    sub_255FDE11C();
    unint64_t v0 = type metadata accessor for ScrollableWithPinnedFooter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43F88);
    }
  }
}

uint64_t sub_255FDDF78()
{
  return sub_255FDDFB4(&qword_269F43F98, sub_255FDDD4C, (void (*)(void))sub_255FDE034);
}

uint64_t sub_255FDDFB4(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255FDE034()
{
  return sub_255FDDFB4(&qword_269F43FA0, sub_255FDDDD8, (void (*)(void))sub_255FDE070);
}

uint64_t sub_255FDE070()
{
  return sub_255FDDFB4(&qword_269F43FA8, sub_255FDDE00, (void (*)(void))sub_255FDE0AC);
}

uint64_t sub_255FDE0AC()
{
  return sub_255FDDFB4(&qword_269F43FB0, sub_255FDDE28, (void (*)(void))sub_255FDE0E8);
}

uint64_t sub_255FDE0E8()
{
  return sub_255FDF380(&qword_269F43FB8, (void (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseContent);
}

unint64_t sub_255FDE11C()
{
  unint64_t result = qword_269F43FC0;
  if (!qword_269F43FC0)
  {
    sub_255FDEA20(255, &qword_269F43F50, type metadata accessor for NotificationsNextButtonView, sub_255FDDCF0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for StateOfMindEntryButtonTray);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43FC0);
  }
  return result;
}

void sub_255FDE1B8(uint64_t a1)
{
}

uint64_t objectdestroyTm_5()
{
  uint64_t v1 = type metadata accessor for NotificationsSetupPhase_iOS();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_release();
  swift_release();
  uint64_t v3 = v2 + *(int *)(v1 + 24);
  sub_255FDB5F8(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256176AA8();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    }
    uint64_t v6 = v3 + *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    uint64_t v7 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = v2 + *(int *)(v1 + 28);
  sub_255F63CB4(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_255FDE428(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_255FDE49C()
{
  uint64_t v1 = *(void *)(type metadata accessor for NotificationsSetupPhase_iOS() - 8);
  return (*(uint64_t (**)(void))(v0
                              + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
                              + 16))();
}

uint64_t sub_255FDE504(uint64_t a1, char a2)
{
  type metadata accessor for NotificationsSetupPhase_iOS();

  return sub_255FDDAFC(a1, a2);
}

void sub_255FDE584()
{
  if (!qword_269F43FD0)
  {
    unint64_t v0 = sub_256178448();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43FD0);
    }
  }
}

uint64_t sub_255FDE5DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_255FDE648(uint64_t a1, uint64_t a2)
{
  sub_255FDEA20(0, &qword_269F43F50, type metadata accessor for NotificationsNextButtonView, sub_255FDDCF0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for StateOfMindEntryButtonTray);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_255FDE6F0()
{
  unint64_t result = qword_269F43FD8;
  if (!qword_269F43FD8)
  {
    sub_255FDE1B8(255);
    sub_255FDF380(&qword_269F43FE0, (void (*)(uint64_t))sub_255FDDE50);
    sub_255FDF380(&qword_269F43E60, sub_255FD68AC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43FD8);
  }
  return result;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_255FDE80C()
{
  return sub_255FDF380(&qword_269F43FE8, (void (*)(uint64_t))sub_255FDE854);
}

void sub_255FDE854()
{
  if (!qword_269F43FF0)
  {
    sub_255FDE8F8();
    sub_255FDE1B8(255);
    sub_255FDE6F0();
    swift_getOpaqueTypeConformance2();
    unint64_t v0 = sub_256176088();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43FF0);
    }
  }
}

void sub_255FDE8F8()
{
  if (!qword_269F43FF8)
  {
    sub_255FDE1B8(255);
    sub_255FDE6F0();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F43FF8);
    }
  }
}

void sub_255FDE97C()
{
  if (!qword_269F44000)
  {
    sub_255FDEA20(255, (unint64_t *)&qword_269F44008, (uint64_t (*)(uint64_t))sub_255FDEAA0, sub_255FDF34C, MEMORY[0x263F1B6D0]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44000);
    }
  }
}

void sub_255FDEA20(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_255FDEAA0(uint64_t a1)
{
}

void sub_255FDEAD4()
{
  if (!qword_269F44018)
  {
    sub_255FDDD74(255, &qword_269F44020, sub_255FDEC1C);
    sub_255FDEC78();
    sub_255FDDD74(255, (unint64_t *)&qword_269F44078, sub_255FDEF1C);
    sub_255FDDD74(255, &qword_269F44090, (void (*)(uint64_t))sub_255FDEF6C);
    sub_255FDB62C(255, &qword_269F440A8, (uint64_t (*)(uint64_t))sub_255FDEFF8, MEMORY[0x263F8D8F0]);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_269F44018);
    }
  }
}

void sub_255FDEC1C(uint64_t a1)
{
}

void sub_255FDEC44(uint64_t a1)
{
}

void sub_255FDEC78()
{
  if (!qword_269F44038)
  {
    sub_255FDED04();
    sub_255FDDD74(255, &qword_269F44068, (void (*)(uint64_t))sub_255FDEEBC);
    unint64_t v0 = sub_2561768A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44038);
    }
  }
}

void sub_255FDED04()
{
  if (!qword_269F44040)
  {
    sub_255FDDD74(255, &qword_269F44048, sub_255FDEDD4);
    sub_255FDEA20(255, (unint64_t *)&qword_269F44058, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, sub_255FDEE88, MEMORY[0x263F1A098]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44040);
    }
  }
}

void sub_255FDEDD4(uint64_t a1)
{
}

void sub_255FDEDFC()
{
  if (!qword_269F43B70)
  {
    sub_255FDF1DC(255, (unint64_t *)&qword_269F42BD0, MEMORY[0x263F1B440], MEMORY[0x263F1B420], MEMORY[0x263F1A180]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43B70);
    }
  }
}

uint64_t sub_255FDEE88()
{
  return sub_255FDF380(&qword_269F44060, type metadata accessor for CGRect);
}

void sub_255FDEEBC()
{
  if (!qword_269F44070)
  {
    sub_256176D38();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44070);
    }
  }
}

void sub_255FDEF1C(uint64_t a1)
{
}

void sub_255FDEF44(uint64_t a1)
{
}

void sub_255FDEF6C()
{
  if (!qword_269F44098)
  {
    sub_255FDDD74(255, &qword_269F440A0, (void (*)(uint64_t))type metadata accessor for ValenceSlider);
    sub_256176D38();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44098);
    }
  }
}

void sub_255FDEFF8(uint64_t a1)
{
}

void sub_255FDF020(uint64_t a1)
{
}

void sub_255FDF054(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    unint64_t v6 = sub_2561761B8();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_255FDF0C8()
{
  if (!qword_269F440C0)
  {
    sub_255FDF1DC(255, (unint64_t *)&qword_269F435E0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for ActionButton);
    sub_255FDEA20(255, (unint64_t *)&qword_269F43350, MEMORY[0x263F18D80], sub_255FD65C4, MEMORY[0x263F8DFB8]);
    sub_255FDF22C();
    sub_255FDF2B0();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F440C0);
    }
  }
}

void sub_255FDF1DC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_255FDF22C()
{
  unint64_t result = qword_269F435F0;
  if (!qword_269F435F0)
  {
    sub_255FDF1DC(255, (unint64_t *)&qword_269F435E0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for ActionButton);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F435F0);
  }
  return result;
}

unint64_t sub_255FDF2B0()
{
  unint64_t result = qword_269F43368;
  if (!qword_269F43368)
  {
    sub_255FDEA20(255, (unint64_t *)&qword_269F43350, MEMORY[0x263F18D80], sub_255FD65C4, MEMORY[0x263F8DFB8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43368);
  }
  return result;
}

uint64_t sub_255FDF34C()
{
  return sub_255FDF380(&qword_269F440C8, sub_255FDEAA0);
}

uint64_t sub_255FDF380(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_255FDF3C8(uint64_t a1)
{
}

void sub_255FDF3F0(uint64_t a1)
{
}

void sub_255FDF418(uint64_t a1)
{
}

BOOL static AssessmentRiskInformationalView.Configuration.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t AssessmentRiskInformationalView.Configuration.hash(into:)()
{
  return sub_2561788F8();
}

uint64_t AssessmentRiskInformationalView.Configuration.hashValue.getter()
{
  return sub_256178928();
}

BOOL sub_255FDF4CC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

double AssessmentRiskInformationalView.init(configuration:)@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (int *)type metadata accessor for AssessmentRiskInformationalView();
  uint64_t v3 = (uint64_t *)(a1 + v2[5]);
  *uint64_t v3 = swift_getKeyPath();
  sub_255F63CB4(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v4 = (uint64_t *)(a1 + v2[6]);
  *uint64_t v4 = swift_getKeyPath();
  sub_255FE1280(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v5 = (uint64_t *)(a1 + v2[7]);
  *uint64_t v5 = swift_getKeyPath();
  sub_255FE13C8(0);
  swift_storeEnumTagMultiPayload();
  unint64_t v6 = (uint64_t *)(a1 + v2[8]);
  *unint64_t v6 = swift_getKeyPath();
  sub_255FE14C0(0);
  swift_storeEnumTagMultiPayload();
  sub_256128CD8((uint64_t *)v9);
  long long v7 = v9[1];
  *(_OWORD *)a1 = v9[0];
  *(_OWORD *)(a1 + 16) = v7;
  double result = *(double *)&v10;
  *(_OWORD *)(a1 + 32) = v10;
  *(void *)(a1 + 48) = v11;
  return result;
}

uint64_t type metadata accessor for AssessmentRiskInformationalView()
{
  uint64_t result = qword_269F44198;
  if (!qword_269F44198) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t AssessmentRiskInformationalView.body.getter()
{
  return sub_2561761D8();
}

uint64_t sub_255FDF6C8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v97 = a2;
  uint64_t v3 = sub_256175D98();
  uint64_t v95 = *(void *)(v3 - 8);
  uint64_t v96 = v3;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v94 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v93 = (uint64_t)&v74 - v6;
  uint64_t v89 = sub_256176618();
  uint64_t v87 = *(void *)(v89 - 8);
  MEMORY[0x270FA5388](v89);
  uint64_t v86 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_256176158();
  uint64_t v77 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  uint64_t v9 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FD8280();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FE18E4();
  uint64_t v76 = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FE54F8(0, &qword_269F44118, (uint64_t (*)(uint64_t))sub_255FE18E4, MEMORY[0x263F18C18], MEMORY[0x263F18E28]);
  uint64_t v18 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v74 - v19;
  sub_255FE1828();
  uint64_t v81 = v21;
  uint64_t v82 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v75 = (char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FE1734();
  uint64_t v84 = v23;
  uint64_t v85 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v78 = (char *)&v74 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FE1590();
  uint64_t v92 = v25;
  uint64_t v91 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v83 = (char *)&v74 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FE14FC();
  uint64_t v90 = v27 - 8;
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v88 = (char *)&v74 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = a1;
  sub_255FE1964();
  sub_255FE19CC();
  sub_256176F68();
  char v29 = sub_256176D78();
  uint64_t v80 = type metadata accessor for AssessmentRiskInformationalView();
  sub_25611B864((uint64_t)v12);
  sub_25611B56C((uint64_t)v9);
  sub_255FE42BC((uint64_t)v12);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v9, v79);
  sub_255FE4EB0((uint64_t)v12, (uint64_t (*)(void))sub_255FD8280);
  sub_256175D48();
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v38 = v76;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v20, v16, v76);
  uint64_t v39 = &v20[*(int *)(v18 + 36)];
  *uint64_t v39 = v29;
  *((void *)v39 + 1) = v31;
  *((void *)v39 + 2) = v33;
  *((void *)v39 + 3) = v35;
  *((void *)v39 + 4) = v37;
  v39[40] = 0;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v38);
  unint64_t v40 = a1[1];
  uint64_t v100 = *a1;
  unint64_t v101 = v40;
  sub_255F5CE90();
  swift_bridgeObjectRetain();
  uint64_t v41 = sub_256177028();
  uint64_t v43 = v42;
  char v45 = v44 & 1;
  unint64_t v46 = sub_255FE1AA4();
  uint64_t v47 = v75;
  sub_256177148();
  sub_255F67B2C(v41, v43, v45);
  swift_bridgeObjectRelease();
  sub_255FE4A1C((uint64_t)v20);
  uint64_t v48 = v87;
  uint64_t v49 = v86;
  uint64_t v50 = v89;
  (*(void (**)(char *, void, uint64_t))(v87 + 104))(v86, *MEMORY[0x263F19698], v89);
  uint64_t v100 = v18;
  unint64_t v101 = v46;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v52 = v78;
  uint64_t v53 = v81;
  sub_256177288();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v47, v53);
  uint64_t v98 = a1;
  sub_255FE1B84();
  uint64_t v100 = v53;
  unint64_t v101 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_255FE1C38();
  uint64_t v55 = v54;
  uint64_t v56 = sub_255FE5564(&qword_269F44160, (void (*)(uint64_t))sub_255FE1C38);
  uint64_t v100 = v55;
  unint64_t v101 = v56;
  swift_getOpaqueTypeConformance2();
  uint64_t v57 = v83;
  uint64_t v58 = v84;
  sub_256177348();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v52, v58);
  uint64_t v59 = v93;
  sub_25611A114(v93);
  double v60 = v94;
  uint64_t v61 = v95;
  uint64_t v62 = v96;
  (*(void (**)(char *, void, uint64_t))(v95 + 104))(v94, *MEMORY[0x263F184F8], v96);
  unint64_t v63 = v60;
  LOBYTE(v6__isPlatformVersionAtLeast(2, 18, 1, 0) = sub_256175D88();
  uint64_t v64 = *(void (**)(char *, uint64_t))(v61 + 8);
  v64(v63, v62);
  v64((char *)v59, v62);
  uint64_t v65 = self;
  uint64_t v66 = &selRef_systemBackgroundColor;
  if ((v60 & 1) == 0) {
    uint64_t v66 = &selRef_systemGroupedBackgroundColor;
  }
  uint64_t v67 = MEMORY[0x25A29FF60]([v65 *v66]);
  char v68 = sub_256176D88();
  uint64_t v69 = v91;
  uint64_t v70 = (uint64_t)v88;
  uint64_t v71 = v92;
  (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v88, v57, v92);
  uint64_t v72 = v70 + *(int *)(v90 + 44);
  *(void *)uint64_t v72 = v67;
  *(unsigned char *)(v72 + 8) = v68;
  (*(void (**)(char *, uint64_t))(v69 + 8))(v57, v71);
  return sub_255FE4D80(v70, v97, (uint64_t (*)(void))sub_255FE14FC);
}

uint64_t sub_255FE00D8()
{
  return sub_256177838();
}

uint64_t sub_255FE018C(uint64_t a1)
{
  uint64_t v2 = sub_256176958();
  MEMORY[0x270FA5388](v2 - 8);
  sub_255FE1C38();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_256176928();
  uint64_t v11 = a1;
  sub_255FE54A8(0, (unint64_t *)&qword_269F42ED0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
  sub_255F738A0();
  sub_256175E68();
  uint64_t v8 = sub_255FE5564(&qword_269F44160, (void (*)(uint64_t))sub_255FE1C38);
  MEMORY[0x25A29F470](v7, v4, v8);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_255FE0358(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AssessmentRiskInformationalView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2 - 8);
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v5 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_2561755B8();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();

  v12[0] = v6;
  v12[1] = v8;
  sub_255FE4E48(a1, (uint64_t)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for AssessmentRiskInformationalView);
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  sub_255FE4D80((uint64_t)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, (uint64_t (*)(void))type metadata accessor for AssessmentRiskInformationalView);
  sub_255F5CE90();
  return sub_2561775D8();
}

uint64_t sub_255FE0554()
{
  uint64_t v0 = sub_256175F88();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AssessmentRiskInformationalView();
  sub_25611A6E4((uint64_t)v3);
  sub_256175F78();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_255FE0638()
{
  return sub_2561761D8();
}

uint64_t sub_255FE069C@<X0>(void (*a1)()@<X0>, uint64_t a2@<X1>, void (*a3)()@<X2>, uint64_t a4@<X8>)
{
  uint64_t v99 = a3;
  uint64_t v102 = a2;
  unint64_t v101 = a1;
  sub_255FE3FB8();
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v108 = &v86[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v6);
  uint64_t v107 = (uint64_t *)&v86[-v8];
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v9 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_2561755B8();
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();

  uint64_t v110 = (void (*)())v10;
  uint64_t v111 = v12;
  unint64_t v89 = sub_255F5CE90();
  uint64_t v13 = sub_256177028();
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  sub_256176E48();
  sub_256176E28();
  swift_release();
  uint64_t v18 = sub_256176FD8();
  uint64_t v20 = v19;
  LOBYTE(v1__isPlatformVersionAtLeast(2, 18, 1, 0) = v21;
  swift_release();
  sub_255F67B2C(v13, v15, v17);
  swift_bridgeObjectRelease();
  uint64_t v22 = self;
  id v100 = v22;
  MEMORY[0x25A29FF60](objc_msgSend(v22, sel_labelColor));
  uint64_t v23 = sub_256176F98();
  uint64_t v104 = v24;
  uint64_t v105 = v23;
  char v26 = v25;
  uint64_t v106 = v27;
  swift_release();
  int v103 = v26 & 1;
  sub_255F67B2C(v18, v20, v10 & 1);
  swift_bridgeObjectRelease();
  int v98 = sub_256176DA8();
  sub_256175D48();
  uint64_t v97 = v28;
  uint64_t v96 = v29;
  uint64_t v95 = v30;
  uint64_t v94 = v31;
  uint64_t v110 = v101;
  uint64_t v111 = v102;
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_256177028();
  uint64_t v34 = v33;
  LOBYTE(v18) = v35 & 1;
  MEMORY[0x25A29FF60](objc_msgSend(v22, sel_labelColor));
  uint64_t v91 = sub_256176F98();
  uint64_t v92 = v36;
  LOBYTE(v2__isPlatformVersionAtLeast(2, 18, 1, 0) = v37;
  uint64_t v93 = v38;
  swift_release();
  LODWORD(v102) = v20 & 1;
  sub_255F67B2C(v32, v34, v18);
  swift_bridgeObjectRelease();
  int v90 = sub_256176DA8();
  sub_256175D48();
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  id v47 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v48 = sub_2561755B8();
  uint64_t v50 = v49;
  swift_bridgeObjectRelease();

  uint64_t v110 = (void (*)())v48;
  uint64_t v111 = v50;
  uint64_t v51 = sub_256177028();
  uint64_t v53 = v52;
  LOBYTE(v5__isPlatformVersionAtLeast(2, 18, 1, 0) = v54 & 1;
  sub_256176E48();
  sub_256176E28();
  swift_release();
  uint64_t v55 = sub_256176FD8();
  uint64_t v57 = v56;
  char v59 = v58;
  swift_release();
  sub_255F67B2C(v51, v53, v50);
  swift_bridgeObjectRelease();
  MEMORY[0x25A29FF60](objc_msgSend(v100, sel_labelColor));
  unint64_t v89 = sub_256176F98();
  uint64_t v88 = v60;
  LOBYTE(v5__isPlatformVersionAtLeast(2, 18, 1, 0) = v61;
  unint64_t v101 = v62;
  swift_release();
  LODWORD(v10__isPlatformVersionAtLeast(2, 18, 1, 0) = v50 & 1;
  sub_255F67B2C(v55, v57, v59 & 1);
  swift_bridgeObjectRelease();
  int v87 = sub_256176DA8();
  sub_256175D48();
  uint64_t v64 = v63;
  uint64_t v66 = v65;
  uint64_t v68 = v67;
  uint64_t v70 = v69;
  uint64_t v71 = sub_256176798();
  uint64_t v72 = v107;
  *uint64_t v107 = v71;
  v72[1] = 0x4034000000000000;
  *((unsigned char *)v72 + 16) = 0;
  uint64_t v73 = (uint64_t)v72;
  sub_255FE4250(0, &qword_269F44210, (void (*)(uint64_t))sub_255FE401C);
  uint64_t v110 = v99;
  swift_getKeyPath();
  sub_255FE40E0();
  sub_255FE5564(&qword_269F441F0, (void (*)(uint64_t))sub_255FE40E0);
  sub_255FE4138();
  sub_255FE41FC();
  swift_bridgeObjectRetain();
  sub_2561777C8();
  char v74 = v103;
  LOBYTE(v11__isPlatformVersionAtLeast(2, 18, 1, 0) = v103;
  LOBYTE(v57) = v102;
  char v109 = v102;
  uint64_t v99 = sub_255FE3FB8;
  uint64_t v75 = v108;
  sub_255FE4E48(v73, (uint64_t)v108, (uint64_t (*)(void))sub_255FE3FB8);
  uint64_t v77 = v104;
  uint64_t v76 = v105;
  *(void *)a4 = v105;
  *(void *)(a4 + 8) = v77;
  *(unsigned char *)(a4 + 16) = v74;
  *(void *)(a4 + 24) = v106;
  *(unsigned char *)(a4 + 32) = v98;
  uint64_t v78 = v96;
  *(void *)(a4 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v97;
  *(void *)(a4 + 48) = v78;
  uint64_t v79 = v94;
  *(void *)(a4 + 56) = v95;
  *(void *)(a4 + 64) = v79;
  *(unsigned char *)(a4 + 72) = 0;
  uint64_t v80 = v91;
  uint64_t v81 = v92;
  *(void *)(a4 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v91;
  *(void *)(a4 + 88) = v81;
  *(unsigned char *)(a4 + 96) = v57;
  *(void *)(a4 + 104) = v93;
  *(unsigned char *)(a4 + 112) = v90;
  *(void *)(a4 + 12__isPlatformVersionAtLeast(2, 18, 1, 0) = v40;
  *(void *)(a4 + 128) = v42;
  *(void *)(a4 + 136) = v44;
  *(void *)(a4 + 144) = v46;
  *(unsigned char *)(a4 + 152) = 0;
  uint64_t v82 = v89;
  uint64_t v83 = v88;
  *(void *)(a4 + 16__isPlatformVersionAtLeast(2, 18, 1, 0) = v89;
  *(void *)(a4 + 168) = v83;
  *(unsigned char *)(a4 + 176) = (_BYTE)v100;
  *(void *)(a4 + 184) = v101;
  *(unsigned char *)(a4 + 192) = v87;
  *(void *)(a4 + 20__isPlatformVersionAtLeast(2, 18, 1, 0) = v64;
  *(void *)(a4 + 208) = v66;
  *(void *)(a4 + 216) = v68;
  *(void *)(a4 + 224) = v70;
  *(unsigned char *)(a4 + 232) = 0;
  sub_255FE3F0C();
  sub_255FE4E48((uint64_t)v75, a4 + *(int *)(v84 + 80), (uint64_t (*)(void))v99);
  sub_255F67B94(v76, v77, v103);
  swift_bridgeObjectRetain();
  sub_255F67B94(v80, v81, v102);
  swift_bridgeObjectRetain();
  LOBYTE(v77) = (_BYTE)v100;
  sub_255F67B94(v82, v83, (char)v100);
  swift_bridgeObjectRetain();
  sub_255FE4EB0((uint64_t)v107, (uint64_t (*)(void))sub_255FE3FB8);
  sub_255FE4EB0((uint64_t)v108, (uint64_t (*)(void))sub_255FE3FB8);
  sub_255F67B2C(v82, v83, v77);
  swift_bridgeObjectRelease();
  sub_255F67B2C(v80, v81, v109);
  swift_bridgeObjectRelease();
  sub_255F67B2C(v105, v104, (char)v110);
  return swift_bridgeObjectRelease();
}

uint64_t sub_255FE0F04@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_255FE0F4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void (**)())v1;
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v5 = *(void (**)())(v1 + 16);
  *(void *)a1 = sub_256176798();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  sub_255FE4250(0, &qword_269F441B8, sub_255FE3ED8);
  return sub_255FE069C(v3, v4, v5, a1 + *(int *)(v6 + 44));
}

uint64_t sub_255FE0FC4@<X0>(uint64_t a1@<X8>)
{
  sub_255F5CE90();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_256177028();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  sub_256176F38();
  uint64_t v7 = sub_256176FD8();
  uint64_t v9 = v8;
  char v11 = v10;
  swift_release();
  char v12 = v11 & 1;
  sub_255F67B2C(v2, v4, v6);
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(self, sel_labelColor);
  MEMORY[0x25A29FF60](v13);
  uint64_t v14 = sub_256176F98();
  uint64_t v16 = v15;
  char v18 = v17;
  uint64_t v20 = v19;
  swift_release();
  char v21 = v18 & 1;
  sub_255F67B2C(v7, v9, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_256177028();
  uint64_t v24 = v23;
  char v26 = v25 & 1;
  *(void *)a1 = v14;
  *(void *)(a1 + 8) = v16;
  *(unsigned char *)(a1 + 16) = v21;
  *(void *)(a1 + 24) = v20;
  *(void *)(a1 + 32) = v22;
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v23;
  *(unsigned char *)(a1 + 48) = v25 & 1;
  *(void *)(a1 + 56) = v27;
  *(_WORD *)(a1 + 64) = 256;
  *(void *)(a1 + 72) = 0x3FF0000000000000;
  sub_255F67B94(v14, v16, v21);
  swift_bridgeObjectRetain();
  sub_255F67B94(v22, v24, v26);
  swift_bridgeObjectRetain();
  sub_255F67B2C(v22, v24, v26);
  swift_bridgeObjectRelease();
  sub_255F67B2C(v14, v16, v21);
  return swift_bridgeObjectRelease();
}

double sub_255FE11CC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_256176798();
  sub_255FE0FC4((uint64_t)&v12);
  char v3 = v13;
  uint64_t v4 = v14;
  char v5 = v16;
  uint64_t v6 = v17;
  char v7 = v18;
  char v8 = v19;
  double result = v20;
  long long v10 = v12;
  long long v11 = v15;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  *(_OWORD *)(a1 + 24) = v10;
  *(unsigned char *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v3;
  *(void *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 72) = v5;
  *(void *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v6;
  *(unsigned char *)(a1 + 88) = v7;
  *(unsigned char *)(a1 + 89) = v8;
  *(double *)(a1 + 96) = result;
  return result;
}

void sub_255FE1280(uint64_t a1)
{
}

uint64_t sub_255FE12B4()
{
  return sub_2561763E8();
}

uint64_t sub_255FE12D8()
{
  return sub_2561763E8();
}

uint64_t sub_255FE12FC(uint64_t a1)
{
  uint64_t v2 = sub_256176158();
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_2561763F8();
}

void sub_255FE13C8(uint64_t a1)
{
}

uint64_t sub_255FE13FC()
{
  return sub_256176498();
}

uint64_t sub_255FE1420(uint64_t a1)
{
  sub_255FD8280();
  MEMORY[0x270FA5388](v2 - 8);
  sub_255FE4E48(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))sub_255FD8280);
  return sub_2561764A8();
}

void sub_255FE14C0(uint64_t a1)
{
}

uint64_t sub_255FE14F4@<X0>(uint64_t a1@<X8>)
{
  return sub_255FDF6C8(*(void **)(v1 + 16), a1);
}

void sub_255FE14FC()
{
  if (!qword_269F440F8)
  {
    sub_255FE1590();
    sub_255FE54A8(255, &qword_269F44168, MEMORY[0x263F1B440], MEMORY[0x263F1B420], MEMORY[0x263F1A158]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F440F8);
    }
  }
}

void sub_255FE1590()
{
  if (!qword_269F44100)
  {
    sub_255FE1734();
    sub_255FE1B84();
    sub_255FE1828();
    sub_255FE54F8(255, &qword_269F44118, (uint64_t (*)(uint64_t))sub_255FE18E4, MEMORY[0x263F18C18], MEMORY[0x263F18E28]);
    sub_255FE1AA4();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_255FE1C38();
    sub_255FE5564(&qword_269F44160, (void (*)(uint64_t))sub_255FE1C38);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F44100);
    }
  }
}

void sub_255FE1734()
{
  if (!qword_269F44108)
  {
    sub_255FE1828();
    sub_255FE54F8(255, &qword_269F44118, (uint64_t (*)(uint64_t))sub_255FE18E4, MEMORY[0x263F18C18], MEMORY[0x263F18E28]);
    sub_255FE1AA4();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F44108);
    }
  }
}

void sub_255FE1828()
{
  if (!qword_269F44110)
  {
    sub_255FE54F8(255, &qword_269F44118, (uint64_t (*)(uint64_t))sub_255FE18E4, MEMORY[0x263F18C18], MEMORY[0x263F18E28]);
    sub_255FE1AA4();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F44110);
    }
  }
}

void sub_255FE18E4()
{
  if (!qword_269F44120)
  {
    sub_255FE1964();
    sub_255FE19CC();
    unint64_t v0 = sub_256176F78();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44120);
    }
  }
}

void sub_255FE1964()
{
  if (!qword_269F44128)
  {
    unint64_t v0 = sub_256177848();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44128);
    }
  }
}

unint64_t sub_255FE19CC()
{
  unint64_t result = qword_269F44130;
  if (!qword_269F44130)
  {
    sub_255FE1964();
    sub_255FE1A50();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44130);
  }
  return result;
}

unint64_t sub_255FE1A50()
{
  unint64_t result = qword_269F44138;
  if (!qword_269F44138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44138);
  }
  return result;
}

unint64_t sub_255FE1AA4()
{
  unint64_t result = qword_269F44140;
  if (!qword_269F44140)
  {
    sub_255FE54F8(255, &qword_269F44118, (uint64_t (*)(uint64_t))sub_255FE18E4, MEMORY[0x263F18C18], MEMORY[0x263F18E28]);
    sub_255FE5564(&qword_269F44148, (void (*)(uint64_t))sub_255FE18E4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44140);
  }
  return result;
}

void sub_255FE1B84()
{
  if (!qword_269F44150)
  {
    sub_255FE1C38();
    sub_255FE5564(&qword_269F44160, (void (*)(uint64_t))sub_255FE1C38);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F44150);
    }
  }
}

void sub_255FE1C38()
{
  if (!qword_269F44158)
  {
    sub_255FE54A8(255, (unint64_t *)&qword_269F42ED0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
    sub_255F738A0();
    unint64_t v0 = sub_256175E78();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44158);
    }
  }
}

unint64_t sub_255FE1CD4()
{
  unint64_t result = qword_269F44170;
  if (!qword_269F44170)
  {
    sub_255FE14FC();
    sub_255FE1734();
    sub_255FE1B84();
    sub_255FE1828();
    sub_255FE54F8(255, &qword_269F44118, (uint64_t (*)(uint64_t))sub_255FE18E4, MEMORY[0x263F18C18], MEMORY[0x263F18E28]);
    sub_255FE1AA4();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_255FE1C38();
    sub_255FE5564(&qword_269F44160, (void (*)(uint64_t))sub_255FE1C38);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_255FE1E9C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44170);
  }
  return result;
}

unint64_t sub_255FE1E9C()
{
  unint64_t result = qword_269F44178;
  if (!qword_269F44178)
  {
    sub_255FE54A8(255, &qword_269F44168, MEMORY[0x263F1B440], MEMORY[0x263F1B420], MEMORY[0x263F1A158]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44178);
  }
  return result;
}

unint64_t sub_255FE1F24()
{
  unint64_t result = qword_269F44180;
  if (!qword_269F44180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44180);
  }
  return result;
}

uint64_t sub_255FE1F78()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for AssessmentRiskInformationalView(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v10 = a3[5];
    long long v11 = (uint64_t *)((char *)a1 + v10);
    long long v12 = (uint64_t *)((char *)a2 + v10);
    a1[6] = a2[6];
    sub_255F63CB4(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *long long v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = a3[6];
    char v16 = (uint64_t *)((char *)v4 + v15);
    uint64_t v17 = (uint64_t *)((char *)a2 + v15);
    sub_255FE1280(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = sub_256175F88();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *char v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v19 = a3[7];
    double v20 = (uint64_t *)((char *)v4 + v19);
    char v21 = (uint64_t *)((char *)a2 + v19);
    sub_255FE13C8(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = sub_256176158();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    }
    else
    {
      *double v20 = *v21;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v23 = a3[8];
    uint64_t v24 = (uint64_t *)((char *)v4 + v23);
    char v25 = (uint64_t *)((char *)a2 + v23);
    sub_255FE14C0(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = sub_256176AA8();
      uint64_t v27 = *(void *)(v26 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      {
        sub_255FD8280();
        memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v27 + 16))(v24, v25, v26);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      }
    }
    else
    {
      *uint64_t v24 = *v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t destroy for AssessmentRiskInformationalView(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  sub_255F63CB4(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + a2[6];
  sub_255FE1280(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_256175F88();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = a1 + a2[7];
  sub_255FE13C8(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = a1 + a2[8];
  sub_255FE14C0(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_256176AA8();
    uint64_t v14 = *(void *)(v11 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v10, 1, v11);
    if (!result)
    {
      uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8);
      return v13(v10, v11);
    }
  }
  else
  {
    return swift_release();
  }
  return result;
}

void *initializeWithCopy for AssessmentRiskInformationalView(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v9 = a3[5];
  uint64_t v10 = (void *)((char *)a1 + v9);
  uint64_t v11 = (void *)((char *)a2 + v9);
  a1[6] = a2[6];
  sub_255F63CB4(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_256175D98();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  else
  {
    *uint64_t v10 = *v11;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = a3[6];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  sub_255FE1280(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_256175F88();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    *uint64_t v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  sub_255FE13C8(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = sub_256176158();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  }
  else
  {
    void *v18 = *v19;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  sub_255FE14C0(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = sub_256176AA8();
    uint64_t v25 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      sub_255FD8280();
      memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
  }
  else
  {
    void *v22 = *v23;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for AssessmentRiskInformationalView(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_255FE4EB0((uint64_t)a1 + v6, (uint64_t (*)(void))sub_255F63CB4);
    sub_255F63CB4(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = a3[6];
    uint64_t v11 = (void *)((char *)a1 + v10);
    uint64_t v12 = (void *)((char *)a2 + v10);
    sub_255FE4EB0((uint64_t)a1 + v10, (uint64_t (*)(void))sub_255FE1280);
    sub_255FE1280(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_256175F88();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = a3[7];
    uint64_t v15 = (void *)((char *)a1 + v14);
    uint64_t v16 = (void *)((char *)a2 + v14);
    sub_255FE4EB0((uint64_t)a1 + v14, (uint64_t (*)(void))sub_255FE13C8);
    sub_255FE13C8(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_256176158();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = a3[8];
    uint64_t v19 = (void *)((char *)a1 + v18);
    uint64_t v20 = (void *)((char *)a2 + v18);
    sub_255FE4EB0((uint64_t)a1 + v18, (uint64_t (*)(void))sub_255FE14C0);
    sub_255FE14C0(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_256176AA8();
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        sub_255FD8280();
        memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v22 + 16))(v19, v20, v21);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
    }
    else
    {
      *uint64_t v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for AssessmentRiskInformationalView(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  sub_255F63CB4(0);
  uint64_t v11 = v10;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_256175D98();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v8, v9, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  sub_255FE1280(0);
  uint64_t v17 = v16;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = sub_256175F88();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(v14, v15, v18);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  uint64_t v19 = a3[7];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (const void *)(a2 + v19);
  sub_255FE13C8(0);
  uint64_t v23 = v22;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = sub_256176158();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v20, v21, v24);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
  }
  uint64_t v25 = a3[8];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (const void *)(a2 + v25);
  sub_255FE14C0(0);
  uint64_t v29 = v28;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v30 = sub_256176AA8();
    uint64_t v31 = *(void *)(v30 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v31 + 48))(v27, 1, v30))
    {
      sub_255FD8280();
      memcpy(v26, v27, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v31 + 32))(v26, v27, v30);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v26, 0, 1, v30);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for AssessmentRiskInformationalView(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[6];
  a1[5] = a2[5];
  a1[6] = v8;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    sub_255FE4EB0((uint64_t)a1 + v9, (uint64_t (*)(void))sub_255F63CB4);
    sub_255F63CB4(0);
    uint64_t v13 = v12;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_256175D98();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v10, v11, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
    }
    uint64_t v15 = a3[6];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    sub_255FE4EB0((uint64_t)a1 + v15, (uint64_t (*)(void))sub_255FE1280);
    sub_255FE1280(0);
    uint64_t v19 = v18;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = sub_256175F88();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v16, v17, v20);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
    }
    uint64_t v21 = a3[7];
    uint64_t v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    sub_255FE4EB0((uint64_t)a1 + v21, (uint64_t (*)(void))sub_255FE13C8);
    sub_255FE13C8(0);
    uint64_t v25 = v24;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v22, v23, v26);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
    }
    uint64_t v27 = a3[8];
    uint64_t v28 = (char *)a1 + v27;
    uint64_t v29 = (char *)a2 + v27;
    sub_255FE4EB0((uint64_t)a1 + v27, (uint64_t (*)(void))sub_255FE14C0);
    sub_255FE14C0(0);
    uint64_t v31 = v30;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v32 = sub_256176AA8();
      uint64_t v33 = *(void *)(v32 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v29, 1, v32))
      {
        sub_255FD8280();
        memcpy(v28, v29, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v28, v29, v32);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v28, 0, 1, v32);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for AssessmentRiskInformationalView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255FE34B0);
}

uint64_t sub_255FE34B0(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  sub_255FE5310(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_11:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v14(a1 + v11, a2, v9);
  }
  sub_255FE5310(0, &qword_269F42CC8, MEMORY[0x263F188C0], MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[6];
    goto LABEL_11;
  }
  sub_255FE5310(0, &qword_269F44188, MEMORY[0x263F18D80], MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a3[7];
    goto LABEL_11;
  }
  sub_255FE5310(0, &qword_269F44190, (uint64_t (*)(uint64_t))sub_255FD8280, MEMORY[0x263F185D0]);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a3[8];

  return v16(v18, a2, v17);
}

uint64_t storeEnumTagSinglePayload for AssessmentRiskInformationalView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255FE3748);
}

uint64_t sub_255FE3748(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  sub_255FE5310(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_9:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v14(v5 + v11, a2, a2, v9);
  }
  sub_255FE5310(0, &qword_269F42CC8, MEMORY[0x263F188C0], MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_9;
  }
  sub_255FE5310(0, &qword_269F44188, MEMORY[0x263F18D80], MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[7];
    goto LABEL_9;
  }
  sub_255FE5310(0, &qword_269F44190, (uint64_t (*)(uint64_t))sub_255FD8280, MEMORY[0x263F185D0]);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = v5 + a4[8];

  return v16(v18, a2, a2, v17);
}

void sub_255FE39CC()
{
  sub_255F63CB4(319);
  if (v0 <= 0x3F)
  {
    sub_255FE1280(319);
    if (v1 <= 0x3F)
    {
      sub_255FE13C8(319);
      if (v2 <= 0x3F)
      {
        sub_255FE14C0(319);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

unsigned char *storeEnumTagSinglePayload for AssessmentRiskInformationalView.Configuration(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x255FE3BE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssessmentRiskInformationalView.Configuration()
{
  return &type metadata for AssessmentRiskInformationalView.Configuration;
}

uint64_t sub_255FE3C1C()
{
  return sub_255FE5564(&qword_269F441A8, (void (*)(uint64_t))sub_255FE3C64);
}

void sub_255FE3C64()
{
  if (!qword_269F441B0)
  {
    sub_2561760D8();
    sub_255FE14FC();
    sub_255FE1CD4();
    unint64_t v0 = sub_2561761E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F441B0);
    }
  }
}

uint64_t destroy for AssessmentRiskInformationalContent()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s14MentalHealthUI34AssessmentRiskInformationalContentVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for AssessmentRiskInformationalContent(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for AssessmentRiskInformationalContent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AssessmentRiskInformationalContent(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssessmentRiskInformationalContent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssessmentRiskInformationalContent()
{
  return &type metadata for AssessmentRiskInformationalContent;
}

uint64_t sub_255FE3EBC()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_255FE3ED8(uint64_t a1)
{
}

void sub_255FE3F0C()
{
  if (!qword_269F441C8)
  {
    sub_255FE54A8(255, &qword_269F441D0, MEMORY[0x263F1A830], MEMORY[0x263F18C18], MEMORY[0x263F18E28]);
    sub_255FE3FB8();
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_269F441C8);
    }
  }
}

void sub_255FE3FB8()
{
  if (!qword_269F441D8)
  {
    sub_255FE401C();
    sub_255FE418C();
    unint64_t v0 = sub_2561776F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F441D8);
    }
  }
}

void sub_255FE401C()
{
  if (!qword_269F441E0)
  {
    sub_255FE40E0();
    sub_255FE5564(&qword_269F441F0, (void (*)(uint64_t))sub_255FE40E0);
    sub_255FE4138();
    unint64_t v0 = sub_2561777E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F441E0);
    }
  }
}

void sub_255FE40E0()
{
  if (!qword_269F441E8)
  {
    unint64_t v0 = sub_256178078();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F441E8);
    }
  }
}

unint64_t sub_255FE4138()
{
  unint64_t result = qword_269F441F8;
  if (!qword_269F441F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F441F8);
  }
  return result;
}

unint64_t sub_255FE418C()
{
  unint64_t result = qword_269F44200;
  if (!qword_269F44200)
  {
    sub_255FE401C();
    sub_255FE41FC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44200);
  }
  return result;
}

unint64_t sub_255FE41FC()
{
  unint64_t result = qword_269F44208;
  if (!qword_269F44208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44208);
  }
  return result;
}

void sub_255FE4250(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_256176048();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_255FE42B4()
{
  return sub_255FE00D8();
}

id sub_255FE42BC(uint64_t a1)
{
  uint64_t v38 = a1;
  uint64_t v1 = sub_256176AA8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v36 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FD821C();
  uint64_t v5 = v4;
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v35 - v9;
  sub_255FD8280();
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v37 = (uint64_t)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v35 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v35 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v35 - v20;
  char v22 = sub_256176138();
  id result = (id)MobileGestalt_get_current_device();
  uint64_t v24 = result;
  if ((v22 & 1) == 0)
  {
    if (result)
    {
      MobileGestalt_get_homeButtonType();

      (*(void (**)(char *, void, uint64_t))(v2 + 104))(v16, *MEMORY[0x263F19F08], v1);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v2 + 56))(v16, 0, 1, v1);
      uint64_t v27 = (uint64_t)&v8[*(int *)(v5 + 48)];
      sub_255FE4E48(v38, (uint64_t)v8, (uint64_t (*)(void))sub_255FD8280);
      sub_255FE4E48((uint64_t)v16, v27, (uint64_t (*)(void))sub_255FD8280);
      uint64_t v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 48);
      int v29 = v28(v8, 1, v1);
      uint64_t v30 = v37;
      if (v29 == 1)
      {
        sub_255FE4EB0((uint64_t)v16, (uint64_t (*)(void))sub_255FD8280);
        if (v28((char *)v27, 1, v1) == 1) {
          return (id)sub_255FE4EB0((uint64_t)v8, (uint64_t (*)(void))sub_255FD8280);
        }
      }
      else
      {
        sub_255FE4E48((uint64_t)v8, v37, (uint64_t (*)(void))sub_255FD8280);
        if (v28((char *)v27, 1, v1) != 1)
        {
          uint64_t v33 = v36;
          (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v36, v27, v1);
          sub_255FE5564(qword_269F43E70, MEMORY[0x263F19F18]);
          sub_256177E98();
          uint64_t v34 = *(void (**)(char *, uint64_t))(v2 + 8);
          v34(v33, v1);
          sub_255FE4EB0((uint64_t)v16, (uint64_t (*)(void))sub_255FD8280);
          v34((char *)v30, v1);
          return (id)sub_255FE4EB0((uint64_t)v8, (uint64_t (*)(void))sub_255FD8280);
        }
        sub_255FE4EB0((uint64_t)v16, (uint64_t (*)(void))sub_255FD8280);
        (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v30, v1);
      }
      return (id)sub_255FE4EB0((uint64_t)v8, (uint64_t (*)(void))sub_255FD821C);
    }
LABEL_20:
    __break(1u);
    return result;
  }
  if (!result)
  {
    __break(1u);
    goto LABEL_20;
  }
  MobileGestalt_get_homeButtonType();

  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v21, *MEMORY[0x263F19F08], v1);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v2 + 56))(v21, 0, 1, v1);
  uint64_t v25 = (uint64_t)&v10[*(int *)(v5 + 48)];
  sub_255FE4E48(v38, (uint64_t)v10, (uint64_t (*)(void))sub_255FD8280);
  sub_255FE4E48((uint64_t)v21, v25, (uint64_t (*)(void))sub_255FD8280);
  uint64_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v26((uint64_t)v10, 1, v1) == 1)
  {
    sub_255FE4EB0((uint64_t)v21, (uint64_t (*)(void))sub_255FD8280);
    if (v26(v25, 1, v1) == 1) {
      return (id)sub_255FE4EB0((uint64_t)v10, (uint64_t (*)(void))sub_255FD8280);
    }
    return (id)sub_255FE4EB0((uint64_t)v10, (uint64_t (*)(void))sub_255FD821C);
  }
  sub_255FE4E48((uint64_t)v10, (uint64_t)v19, (uint64_t (*)(void))sub_255FD8280);
  if (v26(v25, 1, v1) == 1)
  {
    sub_255FE4EB0((uint64_t)v21, (uint64_t (*)(void))sub_255FD8280);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v19, v1);
    return (id)sub_255FE4EB0((uint64_t)v10, (uint64_t (*)(void))sub_255FD821C);
  }
  uint64_t v31 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v36, v25, v1);
  sub_255FE5564(qword_269F43E70, MEMORY[0x263F19F18]);
  sub_256177E98();
  uint64_t v32 = *(void (**)(char *, uint64_t))(v2 + 8);
  v32(v31, v1);
  sub_255FE4EB0((uint64_t)v21, (uint64_t (*)(void))sub_255FD8280);
  v32(v19, v1);
  return (id)sub_255FE4EB0((uint64_t)v10, (uint64_t (*)(void))sub_255FD8280);
}

uint64_t sub_255FE4A1C(uint64_t a1)
{
  sub_255FE54F8(0, &qword_269F44118, (uint64_t (*)(uint64_t))sub_255FE18E4, MEMORY[0x263F18C18], MEMORY[0x263F18E28]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_255FE4AB0()
{
  return sub_255FE018C(*(void *)(v0 + 16));
}

uint64_t sub_255FE4AB8()
{
  return sub_255FE0358(*(void *)(v0 + 16));
}

uint64_t sub_255FE4AC0()
{
  uint64_t v1 = (int *)type metadata accessor for AssessmentRiskInformationalView();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + v1[5];
  sub_255F63CB4(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = v2 + v1[6];
  sub_255FE1280(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256175F88();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v2 + v1[7];
  sub_255FE13C8(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = v2 + v1[8];
  sub_255FE14C0(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_256176AA8();
    uint64_t v11 = *(void *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    }
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_255FE4D80(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_255FE4DE8()
{
  type metadata accessor for AssessmentRiskInformationalView();

  return sub_255FE0554();
}

uint64_t sub_255FE4E48(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_255FE4EB0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_255FE4F10@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 16);
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  *a1 = v2[2];
  a1[1] = v3;
  a1[2] = v4;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t destroy for LocalizedAssessmentInformationalContent.Section()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for LocalizedAssessmentInformationalContent.Section(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for LocalizedAssessmentInformationalContent.Section(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for LocalizedAssessmentInformationalContent.Section(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalizedAssessmentInformationalContent.Section(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalizedAssessmentInformationalContent.Section(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)id result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssessmentRiskInformationalSection()
{
  return &type metadata for AssessmentRiskInformationalSection;
}

uint64_t sub_255FE5124()
{
  return sub_255FE5564(&qword_269F44218, sub_255FE516C);
}

void sub_255FE516C(uint64_t a1)
{
}

void sub_255FE51A8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, void (*a5)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_255FE5564(a4, a5);
    unint64_t v8 = sub_2561776F8();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_255FE523C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255FE5258()
{
  return sub_255FE5564(&qword_269F44230, sub_255FE52A0);
}

void sub_255FE52A0(uint64_t a1)
{
}

void sub_255FE52DC(uint64_t a1)
{
}

void sub_255FE5310(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_255FE5374()
{
  if (!qword_269F44248)
  {
    sub_255FE53DC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F44248);
    }
  }
}

void sub_255FE53DC()
{
  if (!qword_269F44250)
  {
    sub_255FE54A8(255, (unint64_t *)&qword_269F43530, MEMORY[0x263F1A830], MEMORY[0x263F190F0], MEMORY[0x263F18E28]);
    sub_255FE54F8(255, &qword_269F44258, MEMORY[0x263F19E60], MEMORY[0x263F19E58], MEMORY[0x263F19DC0]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44250);
    }
  }
}

void sub_255FE54A8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_255FE54F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    unint64_t v10 = a5(a1, v9, a4);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_255FE5564(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_255FE55B4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v6 = a2[5];
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    uint64_t v7 = *(int *)(a3 + 28);
    unint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (uint64_t *)((char *)a2 + v7);
    *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v6;
    sub_255FE5864(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
    swift_retain();
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_256176AA8();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        sub_255FE5864(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      uint64_t v14 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      uint64_t v15 = (char *)v8 + v14;
      uint64_t v16 = (char *)v9 + v14;
      uint64_t v17 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *unint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

void sub_255FE5864(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_255FE58C8(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  sub_255FE5864(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_256176AA8();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
    uint64_t v7 = v4 + *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    uint64_t v8 = sub_256176158();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v9(v7, v8);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_255FE5A60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v5;
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  sub_255FE5864(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  swift_retain();
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_256176AA8();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      sub_255FE5864(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    uint64_t v12 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    uint64_t v13 = (char *)v7 + v12;
    uint64_t v14 = (char *)v8 + v12;
    uint64_t v15 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else
  {
    *uint64_t v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_255FE5CB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_255FE8440(a1 + v7, (uint64_t)&qword_269F439D0, (uint64_t)type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8], (uint64_t (*)(void))sub_255FE5864);
    sub_255FE5864(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_256176AA8();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      {
        sub_255FE5864(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v8, v9, v11);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
      }
      uint64_t v14 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      uint64_t v15 = (char *)v8 + v14;
      uint64_t v16 = (char *)v9 + v14;
      uint64_t v17 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_255FE5F64(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  sub_255FE5864(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  uint64_t v9 = v8;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_256176AA8();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10))
    {
      sub_255FE5864(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v6, v7, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v6, v7, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
    }
    uint64_t v13 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    uint64_t v14 = &v6[v13];
    uint64_t v15 = &v7[v13];
    uint64_t v16 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_255FE6194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = (char *)(a1 + v7);
    uint64_t v9 = (char *)(a2 + v7);
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_255FE8440(a1 + v7, (uint64_t)&qword_269F439D0, (uint64_t)type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8], (uint64_t (*)(void))sub_255FE5864);
    sub_255FE5864(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v10);
    uint64_t v12 = v11;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_256176AA8();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13))
      {
        sub_255FE5864(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v8, v9, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
      }
      uint64_t v16 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      uint64_t v17 = &v8[v16];
      uint64_t v18 = &v9[v16];
      uint64_t v19 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_255FE6430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255FE6444);
}

uint64_t sub_255FE6444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_255FE5864(0, &qword_269F43F38, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_255FE6524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255FE6538);
}

uint64_t sub_255FE6538(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_255FE5864(0, &qword_269F43F38, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for EditButton()
{
  uint64_t result = qword_269F44268;
  if (!qword_269F44268) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_255FE665C()
{
  sub_255FE5864(319, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_255FE673C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255FE6758@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v60 = a2;
  uint64_t v3 = type metadata accessor for EditButton();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3);
  sub_255FE7C28(0, (unint64_t *)&qword_269F42ED0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
  uint64_t v53 = v6;
  uint64_t v52 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v51 - v7;
  sub_255FE7B94();
  uint64_t v66 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FE7AC0();
  uint64_t v63 = *(void *)(v12 - 8);
  uint64_t v64 = v12;
  MEMORY[0x270FA5388](v12);
  char v61 = (char *)v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FE7C78(0, &qword_269F44290, (void (*)(uint64_t))sub_255FE7AC0, MEMORY[0x263F1A470]);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v65 = (char *)v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v62 = (uint64_t)v51 - v17;
  uint64_t v18 = type metadata accessor for NotificationsSetupPhaseSpecs();
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25611B298((uint64_t)v20);
  sub_255FE826C((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for NotificationsSetupPhaseSpecs);
  sub_2561778E8();
  sub_256175F38();
  uint64_t v59 = v73;
  int v58 = v74;
  uint64_t v57 = v75;
  int v56 = v76;
  uint64_t v55 = v77;
  uint64_t v54 = v78;
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v21 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_2561755B8();
  uint64_t v24 = v23;
  swift_bridgeObjectRelease();

  uint64_t v67 = (void *)v22;
  uint64_t v68 = v24;
  sub_255FE8120(a1, (uint64_t)v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v26 = (char *)v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = (v25 + 16) & ~v25;
  v51[1] = v27 + v5;
  uint64_t v28 = swift_allocObject();
  sub_255FE8188((uint64_t)v26, v28 + v27);
  sub_255F5CE90();
  int v29 = v8;
  sub_2561775D8();
  uint64_t v30 = sub_256177438();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v32 = v52;
  uint64_t v33 = v53;
  (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v11, v29, v53);
  uint64_t v34 = (uint64_t *)&v11[v66[9]];
  *uint64_t v34 = KeyPath;
  v34[1] = v30;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v29, v33);
  uint64_t v35 = *(void *)(a1 + 24);
  char v71 = *(unsigned char *)(a1 + 16);
  uint64_t v72 = v35;
  sub_255FE82CC(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
  sub_256177598();
  sub_255FE8120(a1, (uint64_t)v26);
  uint64_t v36 = swift_allocObject();
  sub_255FE8188((uint64_t)v26, v36 + v27);
  sub_255FE7C78(0, &qword_269F442A8, (void (*)(uint64_t))sub_255FE7CEC, (void (*)(uint64_t))sub_255F85F4C);
  uint64_t v38 = v37;
  unint64_t v49 = sub_255FE7F70();
  unint64_t v50 = sub_255FE8018();
  uint64_t v39 = v61;
  uint64_t v40 = v66;
  sub_2561772E8();
  swift_release();
  swift_release();
  swift_release();
  sub_255FE826C((uint64_t)v11, (uint64_t (*)(void))sub_255FE7B94);
  uint64_t v67 = &unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B6048);
  sub_255FE82CC(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  uint64_t v67 = v40;
  uint64_t v68 = v38;
  unint64_t v69 = v49;
  unint64_t v70 = v50;
  swift_getOpaqueTypeConformance2();
  uint64_t v41 = v64;
  uint64_t v42 = (uint64_t)v65;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v39, v41);
  uint64_t v43 = v62;
  sub_255FE8318(v42, v62);
  sub_255FE83AC(v43, v42);
  uint64_t v44 = v60;
  *uint64_t v60 = 0;
  *((unsigned char *)v44 + 8) = 1;
  v44[2] = v59;
  *((unsigned char *)v44 + 24) = v58;
  v44[4] = v57;
  *((unsigned char *)v44 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v56;
  uint64_t v45 = v54;
  v44[6] = v55;
  v44[7] = v45;
  sub_255FE79F4();
  sub_255FE83AC(v42, (uint64_t)v44 + *(int *)(v46 + 48));
  uint64_t v47 = MEMORY[0x263F1A470];
  sub_255FE8440(v43, (uint64_t)&qword_269F44290, (uint64_t)sub_255FE7AC0, MEMORY[0x263F1A470], (uint64_t (*)(void))sub_255FE7C78);
  return sub_255FE8440(v42, (uint64_t)&qword_269F44290, (uint64_t)sub_255FE7AC0, v47, (uint64_t (*)(void))sub_255FE7C78);
}

uint64_t sub_255FE6FE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_255FE7CEC();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = a1;
  sub_255FE7E1C();
  sub_255FE1B84();
  uint64_t v10 = v9;
  unint64_t v11 = sub_255FE7F1C();
  sub_255FE1C38();
  uint64_t v13 = v12;
  uint64_t v14 = sub_255FE87A4(&qword_269F44160, (void (*)(uint64_t))sub_255FE1C38);
  uint64_t v22 = v13;
  uint64_t v23 = v14;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v22 = &type metadata for NotificationSOMSettingsView;
  uint64_t v23 = v10;
  unint64_t v24 = v11;
  uint64_t v25 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_2561761D8();
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v6 + 16))(a2, v8, v5);
  sub_255FE7C78(0, &qword_269F442A8, (void (*)(uint64_t))sub_255FE7CEC, (void (*)(uint64_t))sub_255F85F4C);
  uint64_t v18 = (uint64_t *)(a2 + *(int *)(v17 + 36));
  uint64_t *v18 = KeyPath;
  v18[1] = 0;
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_255FE7208()
{
  id v0 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for NotificationSettingsModel()), sel_init);
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v1 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  sub_2561755B8();
  swift_bridgeObjectRelease();

  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  uint64_t v4 = (void *)v2;
  MEMORY[0x270FA5388](v2);
  sub_255FE1B84();
  sub_255FE7F1C();
  sub_255FE1C38();
  sub_255FE87A4(&qword_269F44160, (void (*)(uint64_t))sub_255FE1C38);
  swift_getOpaqueTypeConformance2();
  sub_256177348();
  sub_255FE84F8((uint64_t)sub_255FE84E8, v4, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_255FE7434(uint64_t a1)
{
  uint64_t v2 = sub_256176958();
  MEMORY[0x270FA5388](v2 - 8);
  sub_255FE1C38();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_256176928();
  uint64_t v11 = a1;
  sub_255FE7C28(0, (unint64_t *)&qword_269F42ED0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
  sub_255F738A0();
  sub_256175E68();
  uint64_t v8 = sub_255FE87A4(&qword_269F44160, (void (*)(uint64_t))sub_255FE1C38);
  MEMORY[0x25A29F470](v7, v4, v8);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_255FE7600(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EditButton();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2 - 8);
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v5 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_2561755B8();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();

  v12[0] = v6;
  v12[1] = v8;
  sub_255FE8120(a1, (uint64_t)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  sub_255FE8188((uint64_t)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9);
  sub_255F5CE90();
  return sub_2561775D8();
}

uint64_t sub_255FE77D4()
{
  return swift_release();
}

uint64_t sub_255FE7888@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for NotificationsSetupPhaseSpecs();
  MEMORY[0x270FA5388](v3 - 8);
  id v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25611B298((uint64_t)v5);
  sub_255FE826C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for NotificationsSetupPhaseSpecs);
  *(void *)a1 = sub_256176678();
  *(void *)(a1 + 8) = 0x4024000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  sub_255FE795C();
  return sub_255FE6758(v1, (void *)(a1 + *(int *)(v6 + 44)));
}

void sub_255FE795C()
{
  if (!qword_269F44278)
  {
    sub_255FE5864(255, &qword_269F44280, (uint64_t (*)(uint64_t))sub_255FE79F4, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_256176048();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44278);
    }
  }
}

void sub_255FE79F4()
{
  if (!qword_269F44288)
  {
    sub_255FE7C28(255, (unint64_t *)&qword_269F42B18, MEMORY[0x263F1B6B0], MEMORY[0x263F18868], MEMORY[0x263F18E28]);
    sub_255FE7C78(255, &qword_269F44290, (void (*)(uint64_t))sub_255FE7AC0, MEMORY[0x263F1A470]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F44288);
    }
  }
}

void sub_255FE7AC0()
{
  if (!qword_269F44298)
  {
    sub_255FE7B94();
    sub_255FE7C78(255, &qword_269F442A8, (void (*)(uint64_t))sub_255FE7CEC, (void (*)(uint64_t))sub_255F85F4C);
    sub_255FE7F70();
    sub_255FE8018();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F44298);
    }
  }
}

void sub_255FE7B94()
{
  if (!qword_269F442A0)
  {
    sub_255FE7C28(255, (unint64_t *)&qword_269F42ED0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
    sub_255F85F4C();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F442A0);
    }
  }
}

void sub_255FE7C28(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_255FE7C78(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    unint64_t v6 = sub_2561761B8();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_255FE7CEC()
{
  if (!qword_269F442B0)
  {
    sub_2561760D8();
    sub_255FE7E1C();
    sub_255FE1B84();
    sub_255FE7F1C();
    sub_255FE1C38();
    sub_255FE87A4(&qword_269F44160, (void (*)(uint64_t))sub_255FE1C38);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t v0 = sub_2561761E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F442B0);
    }
  }
}

void sub_255FE7E1C()
{
  if (!qword_269F442B8)
  {
    sub_255FE1B84();
    sub_255FE7F1C();
    sub_255FE1C38();
    sub_255FE87A4(&qword_269F44160, (void (*)(uint64_t))sub_255FE1C38);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F442B8);
    }
  }
}

unint64_t sub_255FE7F1C()
{
  unint64_t result = qword_269F442C0;
  if (!qword_269F442C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F442C0);
  }
  return result;
}

unint64_t sub_255FE7F70()
{
  unint64_t result = qword_269F442C8;
  if (!qword_269F442C8)
  {
    sub_255FE7B94();
    sub_255F738A0();
    sub_255FE87A4((unint64_t *)&qword_269F43298, (void (*)(uint64_t))sub_255F85F4C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F442C8);
  }
  return result;
}

unint64_t sub_255FE8018()
{
  unint64_t result = qword_269F442D0;
  if (!qword_269F442D0)
  {
    sub_255FE7C78(255, &qword_269F442A8, (void (*)(uint64_t))sub_255FE7CEC, (void (*)(uint64_t))sub_255F85F4C);
    sub_255FE87A4(&qword_269F442D8, (void (*)(uint64_t))sub_255FE7CEC);
    sub_255FE87A4((unint64_t *)&qword_269F43298, (void (*)(uint64_t))sub_255F85F4C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F442D0);
  }
  return result;
}

uint64_t sub_255FE8120(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EditButton();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_255FE8188(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EditButton();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_255FE81FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for EditButton() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_255FE6FE0(v4, a1);
}

uint64_t sub_255FE826C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_255FE82CC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_255FE8318(uint64_t a1, uint64_t a2)
{
  sub_255FE7C78(0, &qword_269F44290, (void (*)(uint64_t))sub_255FE7AC0, MEMORY[0x263F1A470]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_255FE83AC(uint64_t a1, uint64_t a2)
{
  sub_255FE7C78(0, &qword_269F44290, (void (*)(uint64_t))sub_255FE7AC0, MEMORY[0x263F1A470]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_255FE8440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_255FE84A0()
{
  return sub_255FE7208();
}

uint64_t sub_255FE84B0()
{
  return swift_deallocObject();
}

id sub_255FE84E8()
{
  return *(id *)(v0 + 16);
}

uint64_t sub_255FE84F0()
{
  return sub_255FE7434(*(void *)(v0 + 16));
}

void sub_255FE84F8(uint64_t a1, void *a2, char a3)
{
  if (a3) {

  }
  else {
    swift_release();
  }
}

uint64_t sub_255FE8508()
{
  return sub_255FE7600(*(void *)(v0 + 16));
}

uint64_t objectdestroyTm_6()
{
  uint64_t v1 = (int *)(type metadata accessor for EditButton() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_release();
  swift_release();
  swift_release();
  uint64_t v3 = v2 + v1[9];
  sub_255FE5864(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256176AA8();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    }
    uint64_t v6 = v3 + *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    uint64_t v7 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_255FE8708()
{
  return sub_255FE77D4();
}

uint64_t sub_255FE875C()
{
  return sub_255FE87A4(&qword_269F442E0, (void (*)(uint64_t))sub_255FE87EC);
}

uint64_t sub_255FE87A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_255FE87EC()
{
  if (!qword_269F442E8)
  {
    sub_255FE5864(255, &qword_269F44280, (uint64_t (*)(uint64_t))sub_255FE79F4, MEMORY[0x263F1BAC8]);
    sub_255FE8880();
    unint64_t v0 = sub_2561775F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F442E8);
    }
  }
}

unint64_t sub_255FE8880()
{
  unint64_t result = qword_269F442F0;
  if (!qword_269F442F0)
  {
    sub_255FE5864(255, &qword_269F44280, (uint64_t (*)(uint64_t))sub_255FE79F4, MEMORY[0x263F1BAC8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F442F0);
  }
  return result;
}

void *sub_255FE8908(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v16 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    uint64_t v7 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v7;
    uint64_t v8 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v8;
    uint64_t v9 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v9;
    *(_WORD *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *((_WORD *)a2 + 40);
    uint64_t v10 = a2[12];
    uint64_t v11 = a2[13];
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = v10;
    uint64_t v12 = *(int *)(a3 + 52);
    uint64_t v23 = (void *)(a1 + v12);
    uint64_t v22 = (uint64_t *)((char *)a2 + v12);
    *(void *)(a1 + 104) = v11;
    sub_255FD438C(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_256176AA8();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(v22, 1, v13))
      {
        sub_255FE8BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v23, v22, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v23, v22, v13);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v23, 0, 1, v13);
      }
      uint64_t v17 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      uint64_t v18 = (char *)v23 + v17;
      uint64_t v19 = (char *)v22 + v17;
      uint64_t v20 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      *uint64_t v23 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

void sub_255FE8BF8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_255FE8C5C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 52);
  sub_255FD438C(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_256176AA8();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
    uint64_t v7 = v4 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    uint64_t v8 = sub_256176158();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v9(v7, v8);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_255FE8DF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  *(_WORD *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *(_WORD *)(a2 + 80);
  uint64_t v9 = *(void *)(a2 + 96);
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  uint64_t v11 = *(int *)(a3 + 52);
  uint64_t v21 = (void *)(a1 + v11);
  uint64_t v20 = (void *)(a2 + v11);
  *(void *)(a1 + 104) = v10;
  sub_255FD438C(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_256176AA8();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(v20, 1, v12))
    {
      sub_255FE8BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v21, v20, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v21, v20, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v21, 0, 1, v12);
    }
    uint64_t v15 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    uint64_t v16 = (char *)v21 + v15;
    uint64_t v17 = (char *)v20 + v15;
    uint64_t v18 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  }
  else
  {
    void *v21 = *v20;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_255FE908C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v6 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 52);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    sub_255FEAD4C(a1 + v7, (uint64_t (*)(void))sub_255FD438C);
    sub_255FD438C(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_256176AA8();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        sub_255FE8BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      uint64_t v13 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      uint64_t v14 = (char *)v8 + v13;
      uint64_t v15 = (char *)v9 + v13;
      uint64_t v16 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_255FE9398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + 40);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_WORD *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *(_WORD *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v5 = *(int *)(a3 + 52);
  uint64_t v6 = (char *)(a1 + v5);
  uint64_t v7 = (char *)(a2 + v5);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  sub_255FD438C(0);
  uint64_t v9 = v8;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_256176AA8();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10))
    {
      sub_255FE8BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v6, v7, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v6, v7, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
    }
    uint64_t v13 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    uint64_t v14 = &v6[v13];
    uint64_t v15 = &v7[v13];
    uint64_t v16 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_255FE95C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 52);
    uint64_t v8 = (char *)(a1 + v7);
    uint64_t v9 = (char *)(a2 + v7);
    sub_255FEAD4C(a1 + v7, (uint64_t (*)(void))sub_255FD438C);
    sub_255FD438C(0);
    uint64_t v11 = v10;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_256176AA8();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12))
      {
        sub_255FE8BF8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v8, v9, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
      }
      uint64_t v15 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      uint64_t v16 = &v8[v15];
      uint64_t v17 = &v9[v15];
      uint64_t v18 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_255FE9894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255FE98A8);
}

uint64_t sub_255FE98A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_255FE8BF8(0, &qword_269F43D20, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 52);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_255FE9988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255FE999C);
}

uint64_t sub_255FE999C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_255FE8BF8(0, &qword_269F43D20, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 52);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for DomainsSelectionPhaseContent()
{
  uint64_t result = qword_269F442F8;
  if (!qword_269F442F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_255FE9AC0()
{
  sub_255FD438C(319);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_255FE9B9C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255FE9BB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v128 = a2;
  uint64_t v3 = type metadata accessor for DomainsSelectionPhaseContent();
  uint64_t v4 = *(void *)(v3 - 8);
  *(void *)&long long v120 = v3 - 8;
  v111[0] = v4;
  MEMORY[0x270FA5388](v3 - 8);
  v111[1] = v5;
  uint64_t v112 = (uint64_t)v111 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F9A1B0();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v114 = (char *)v111 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FEACEC(0);
  uint64_t v125 = v8;
  uint64_t v126 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v113 = (uint64_t)v111 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FEACB8(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v127 = (uint64_t)v111 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v124 = (uint64_t)v111 - v13;
  uint64_t v122 = type metadata accessor for DomainsAndContextEntry() - 8;
  uint64_t v14 = MEMORY[0x270FA5388](v122);
  uint64_t v121 = (char *)v111 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v131 = (uint64_t)v111 - v16;
  uint64_t v119 = type metadata accessor for AssociationSelectionPhaseSpecs();
  uint64_t v17 = MEMORY[0x270FA5388](v119);
  uint64_t v129 = (uint64_t)v111 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v116 = (char *)v111 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v115 = (char *)v111 - v21;
  sub_255FEAD0C(0);
  MEMORY[0x270FA5388](v22 - 8);
  unint64_t v24 = (void *)((char *)v111 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = type metadata accessor for ValenceSelectionSummary();
  uint64_t v26 = v25 - 8;
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)v111 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FEAC3C(0);
  uint64_t v30 = v29 - 8;
  MEMORY[0x270FA5388](v29);
  uint64_t v32 = (char *)v111 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FEAC1C(0);
  uint64_t v117 = v33 - 8;
  uint64_t v34 = MEMORY[0x270FA5388](v33 - 8);
  uint64_t v123 = (uint64_t)v111 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v38 = (char *)v111 - v37;
  MEMORY[0x270FA5388](v36);
  uint64_t v130 = (uint64_t)v111 - v39;
  uint64_t v40 = *(void *)a1;
  uint64_t v41 = *(void *)(a1 + 8);
  char v42 = *(unsigned char *)(a1 + 80);
  *unint64_t v24 = swift_getKeyPath();
  sub_255FE8BF8(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  *(void *)uint64_t v28 = v40;
  *((void *)v28 + 1) = v41;
  v28[16] = v42;
  uint64_t v43 = (uint64_t *)&v28[*(int *)(v26 + 36)];
  uint64_t *v43 = swift_getKeyPath();
  sub_255FD438C(0);
  uint64_t v118 = v44;
  swift_storeEnumTagMultiPayload();
  sub_255FEAE14((uint64_t)v24, (uint64_t)&v28[*(int *)(v26 + 40)], (uint64_t (*)(void))sub_255FEAD0C);
  swift_bridgeObjectRetain();
  char v45 = sub_256176DA8();
  if (*(void *)(*(void *)(a1 + 8) + 16)) {
    uint64_t v46 = (uint64_t)v116;
  }
  else {
    uint64_t v46 = (uint64_t)v115;
  }
  sub_25611AFC4(v46);
  sub_255FEAD4C(v46, (uint64_t (*)(void))type metadata accessor for AssociationSelectionPhaseSpecs);
  sub_256175D48();
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  uint64_t v54 = v53;
  sub_255FEADAC((uint64_t)v28, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for ValenceSelectionSummary);
  uint64_t v55 = &v32[*(int *)(v30 + 44)];
  *uint64_t v55 = v45;
  *((void *)v55 + 1) = v48;
  *((void *)v55 + 2) = v50;
  *((void *)v55 + 3) = v52;
  *((void *)v55 + 4) = v54;
  v55[40] = 0;
  sub_255FEAD4C((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for ValenceSelectionSummary);
  char v56 = sub_256176D98();
  uint64_t v57 = v129;
  sub_25611AFC4(v129);
  sub_25604A240(*(unsigned char *)(a1 + 80));
  sub_255FEAD4C(v57, (uint64_t (*)(void))type metadata accessor for AssociationSelectionPhaseSpecs);
  sub_256175D48();
  uint64_t v59 = v58;
  uint64_t v61 = v60;
  uint64_t v63 = v62;
  uint64_t v65 = v64;
  sub_255FEADAC((uint64_t)v32, (uint64_t)v38, (uint64_t (*)(void))sub_255FEAC3C);
  uint64_t v66 = (uint64_t)v121;
  uint64_t v67 = &v38[*(int *)(v117 + 44)];
  *uint64_t v67 = v56;
  *((void *)v67 + 1) = v59;
  *((void *)v67 + 2) = v61;
  *((void *)v67 + 3) = v63;
  *((void *)v67 + 4) = v65;
  v67[40] = 0;
  sub_255FEAD4C((uint64_t)v32, (uint64_t (*)(void))sub_255FEAC3C);
  sub_255FEAE14((uint64_t)v38, v130, (uint64_t (*)(void))sub_255FEAC1C);
  uint64_t v68 = *(void *)(a1 + 16);
  *(void *)uint64_t v135 = *(void *)(a1 + 24);
  *(_OWORD *)&v135[8] = *(_OWORD *)(a1 + 32);
  sub_255FE8BF8(0, &qword_269F44340, (uint64_t (*)(uint64_t))sub_255FEAE7C, MEMORY[0x263F1B750]);
  swift_bridgeObjectRetain();
  sub_256177748();
  uint64_t v69 = *(void *)v138;
  sub_255FEB108(0, &qword_269F44350, MEMORY[0x263F8D310], MEMORY[0x263F1B750]);
  long long v120 = *(_OWORD *)&v138[8];
  uint64_t v70 = *(void *)(a1 + 64);
  uint64_t v71 = *(void *)(a1 + 72);
  *(_OWORD *)uint64_t v135 = *(_OWORD *)(a1 + 48);
  *(void *)&v135[16] = v70;
  uint64_t v136 = v71;
  sub_256177748();
  long long v72 = *(_OWORD *)v138;
  uint64_t v73 = *(void *)&v138[16];
  uint64_t v74 = v139;
  char v75 = *(unsigned char *)(a1 + 81);
  uint64_t v76 = *(void *)(a1 + 88);
  *(void *)uint64_t v66 = v68;
  *(void *)(v66 + 8) = v69;
  *(_OWORD *)(v66 + 16) = v120;
  *(_OWORD *)(v66 + 32) = v72;
  *(void *)(v66 + 48) = v73;
  *(void *)(v66 + 56) = v74;
  *(unsigned char *)(v66 + 64) = v75;
  *(void *)(v66 + 72) = v76;
  uint64_t v77 = v122;
  uint64_t v78 = (uint64_t *)(v66 + *(int *)(v122 + 44));
  *uint64_t v78 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  uint64_t v79 = v66 + *(int *)(v77 + 48);
  v135[0] = 0;
  sub_256177568();
  uint64_t v80 = *(void *)&v138[8];
  *(unsigned char *)uint64_t v79 = v138[0];
  *(void *)(v79 + 8) = v80;
  sub_255FEAE14(v66, v131, (uint64_t (*)(void))type metadata accessor for DomainsAndContextEntry);
  sub_25611AFC4(v57);
  uint64_t v81 = v119;
  LOBYTE(v79) = sub_256176138();
  sub_255FEAD4C(v57, (uint64_t (*)(void))type metadata accessor for AssociationSelectionPhaseSpecs);
  if (v79)
  {
    uint64_t v82 = *(void *)a1;
    uint64_t v136 = v81;
    unint64_t v137 = &off_2704B9168;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)v135);
    sub_25611AFC4((uint64_t)boxed_opaque_existential_1);
    uint64_t v84 = v112;
    sub_255FEADAC(a1, v112, (uint64_t (*)(void))type metadata accessor for DomainsSelectionPhaseContent);
    unint64_t v85 = (*(unsigned __int8 *)(v111[0] + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v111[0] + 80);
    uint64_t v86 = swift_allocObject();
    sub_255FEAE14(v84, v86 + v85, (uint64_t (*)(void))type metadata accessor for DomainsSelectionPhaseContent);
    *(void *)uint64_t v138 = v82;
    v138[8] = 0;
    sub_255FEB108(0, (unint64_t *)&qword_269F43C20, MEMORY[0x263F8D538], MEMORY[0x263F8D8F0]);
    sub_256177768();
    long long v140 = v132;
    uint64_t v141 = v133;
    char v142 = v134;
    sub_255F9A6BC((long long *)v135, (uint64_t)&v138[16]);
    *(void *)uint64_t v138 = sub_255FEB0A4;
    *(void *)&v138[8] = v86;
    unint64_t v143 = sub_255FEA9B0;
    uint64_t v144 = 0;
    *(void *)uint64_t v135 = &unk_2704B5358;
    sub_255FCD3A4((uint64_t)&unk_2704B6078);
    sub_255FEB108(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
    sub_255F744D8();
    sub_256177E28();
    swift_bridgeObjectRelease();
    sub_255F9A218();
    sub_255FEB154((unint64_t *)&qword_269F435F0, (void (*)(uint64_t))sub_255F9A218);
    uint64_t v87 = (uint64_t)v114;
    sub_256177238();
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    sub_255FEAD4C((uint64_t)v138, (uint64_t (*)(void))sub_255F9A218);
    LOBYTE(v86) = sub_256176D98();
    uint64_t v88 = v129;
    sub_25611AFC4(v129);
    sub_255FEAD4C(v88, (uint64_t (*)(void))type metadata accessor for AssociationSelectionPhaseSpecs);
    sub_256175D48();
    uint64_t v90 = v89;
    uint64_t v92 = v91;
    uint64_t v94 = v93;
    uint64_t v96 = v95;
    uint64_t v97 = v113;
    sub_255FEADAC(v87, v113, (uint64_t (*)(void))sub_255F9A1B0);
    uint64_t v98 = v125;
    uint64_t v99 = v97 + *(int *)(v125 + 36);
    *(unsigned char *)uint64_t v99 = v86;
    *(void *)(v99 + 8) = v90;
    *(void *)(v99 + 16) = v92;
    *(void *)(v99 + 24) = v94;
    *(void *)(v99 + 32) = v96;
    *(unsigned char *)(v99 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
    sub_255FEAD4C(v87, (uint64_t (*)(void))sub_255F9A1B0);
    uint64_t v100 = v124;
    sub_255FEAE14(v97, v124, (uint64_t (*)(void))sub_255FEACEC);
    uint64_t v101 = 0;
    uint64_t v102 = v98;
  }
  else
  {
    uint64_t v101 = 1;
    uint64_t v100 = v124;
    uint64_t v102 = v125;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v126 + 56))(v100, v101, 1, v102);
  uint64_t v103 = v130;
  uint64_t v104 = v123;
  sub_255FEADAC(v130, v123, (uint64_t (*)(void))sub_255FEAC1C);
  uint64_t v105 = v131;
  sub_255FEADAC(v131, v66, (uint64_t (*)(void))type metadata accessor for DomainsAndContextEntry);
  uint64_t v106 = v127;
  sub_255FEADAC(v100, v127, (uint64_t (*)(void))sub_255FEACB8);
  uint64_t v107 = v128;
  sub_255FEADAC(v104, v128, (uint64_t (*)(void))sub_255FEAC1C);
  sub_255FEAB94();
  uint64_t v109 = v108;
  sub_255FEADAC(v66, v107 + *(int *)(v108 + 48), (uint64_t (*)(void))type metadata accessor for DomainsAndContextEntry);
  sub_255FEADAC(v106, v107 + *(int *)(v109 + 64), (uint64_t (*)(void))sub_255FEACB8);
  sub_255FEAD4C(v100, (uint64_t (*)(void))sub_255FEACB8);
  sub_255FEAD4C(v105, (uint64_t (*)(void))type metadata accessor for DomainsAndContextEntry);
  sub_255FEAD4C(v103, (uint64_t (*)(void))sub_255FEAC1C);
  sub_255FEAD4C(v106, (uint64_t (*)(void))sub_255FEACB8);
  sub_255FEAD4C(v66, (uint64_t (*)(void))type metadata accessor for DomainsAndContextEntry);
  return sub_255FEAD4C(v104, (uint64_t (*)(void))sub_255FEAC1C);
}

uint64_t sub_255FEA9B0@<X0>(uint64_t a1@<X8>)
{
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v2 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  sub_2561755B8();
  swift_bridgeObjectRelease();

  sub_255F5CE90();
  uint64_t result = sub_256177028();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5 & 1;
  *(void *)(a1 + 24) = v6;
  return result;
}

uint64_t sub_255FEAAB4@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_256176788();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  sub_255FEAAF8();
  return sub_255FE9BB8(v1, a1 + *(int *)(v3 + 44));
}

void sub_255FEAAF8()
{
  if (!qword_269F44308)
  {
    sub_255FEAB60(255);
    unint64_t v0 = sub_256176048();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44308);
    }
  }
}

void sub_255FEAB60(uint64_t a1)
{
}

void sub_255FEAB94()
{
  if (!qword_269F44318)
  {
    sub_255FEAC1C(255);
    type metadata accessor for DomainsAndContextEntry();
    sub_255FEACB8(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_269F44318);
    }
  }
}

void sub_255FEAC1C(uint64_t a1)
{
}

void sub_255FEAC3C(uint64_t a1)
{
}

void sub_255FEAC5C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_255FEACB8(uint64_t a1)
{
}

void sub_255FEACEC(uint64_t a1)
{
}

void sub_255FEAD0C(uint64_t a1)
{
}

uint64_t sub_255FEAD4C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_255FEADAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_255FEAE14(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_255FEAE7C(uint64_t a1)
{
}

uint64_t sub_255FEAEB0()
{
  uint64_t v1 = (int *)(type metadata accessor for DomainsSelectionPhaseContent() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = v2 + v1[15];
  sub_255FD438C(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256176AA8();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    }
    uint64_t v6 = v3 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    uint64_t v7 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_255FEB0A4()
{
  uint64_t v1 = *(void *)(type metadata accessor for DomainsSelectionPhaseContent() - 8);
  return (*(uint64_t (**)(void))(v0
                              + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
                              + 96))();
}

void sub_255FEB108(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_255FEB154(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255FEB19C()
{
  return sub_255FEB154(&qword_269F44358, (void (*)(uint64_t))sub_255FEB1E4);
}

void sub_255FEB1E4()
{
  if (!qword_269F44360)
  {
    sub_255FEAB60(255);
    sub_255FEB154(&qword_269F44368, sub_255FEAB60);
    unint64_t v0 = sub_2561776F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44360);
    }
  }
}

ValueMetadata *type metadata accessor for TagLayout()
{
  return &type metadata for TagLayout;
}

uint64_t sub_255FEB288@<X0>(uint64_t a1@<X8>)
{
  sub_256176098();
  sub_255FEC200();
  sub_256178128();
  sub_256178148();
  if (v9[4] == v9[0])
  {
    uint64_t v2 = sub_256176018();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
  }
  else
  {
    uint64_t v4 = (void (*)(void *, void))sub_256178168();
    uint64_t v6 = v5;
    uint64_t v7 = sub_256176018();
    uint64_t v8 = *(void *)(v7 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, v6, v7);
    v4(v9, 0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
}

double sub_255FEB3F4(uint64_t a1, char a2, uint64_t a3, int a4, uint64_t a5, double a6, double a7)
{
  uint64_t v68 = a3;
  double v69 = *(double *)&a1;
  uint64_t v72 = *MEMORY[0x263EF8340];
  sub_255FEC0F4();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_256176018();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v63 - v19;
  sub_255FEB288((uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
  {
    int v66 = a4;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v20, v13, v14);
    sub_2561762A8();
    LOBYTE(v71) = v22 & 1;
    LOBYTE(v7__isPlatformVersionAtLeast(2, 18, 1, 0) = v23 & 1;
    sub_256175FF8();
    uint64_t v25 = v24;
    uint64_t v27 = v26;
    sub_255FEC1A8();
    uint64_t inited = swift_initStackObject();
    long long v67 = xmmword_2561A0960;
    *(_OWORD *)(inited + 16) = xmmword_2561A0960;
    *(void *)(inited + 32) = v25;
    uint64_t v29 = a5;
    uint64_t v30 = swift_initStackObject();
    *(_OWORD *)(v30 + 16) = v67;
    *(void *)(v30 + 32) = v27;
    sub_256176098();
    sub_255FEC200();
    sub_256178128();
    *(void *)&long long v67 = v29;
    sub_256178148();
    uint64_t v31 = v70;
    if (v70 >= v71)
    {
      if (__OFSUB__(v70, v71))
      {
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
      uint64_t v65 = v15;
      uint64_t v64 = v20;
      if (v70 == v71) {
        goto LABEL_10;
      }
      uint64_t v32 = v71 + 1;
      if (__OFADD__(v71, 1)) {
        goto LABEL_46;
      }
      if (v32 < v71 || v70 < v32) {
        goto LABEL_47;
      }
      if (v32 == v70)
      {
LABEL_10:
        uint64_t v33 = *(void *)(inited + 16);
        if (v33)
        {
          uint64_t v34 = (double *)(inited + 32);
          double v21 = 0.0;
          uint64_t v35 = v65;
          uint64_t v36 = v64;
          do
          {
            double v37 = *v34++;
            double v38 = v37;
            if (v21 <= v37) {
              double v21 = v38;
            }
            --v33;
          }
          while (v33);
          uint64_t v39 = *(void *)(v30 + 16);
          if (!v39) {
            goto LABEL_25;
          }
        }
        else
        {
          double v21 = 0.0;
          uint64_t v35 = v65;
          uint64_t v36 = v64;
          uint64_t v39 = *(void *)(v30 + 16);
          if (!v39) {
            goto LABEL_25;
          }
        }
        if (v39 == 1)
        {
          uint64_t v40 = 0;
          double v41 = 0.0;
        }
        else
        {
          uint64_t v40 = v39 & 0x7FFFFFFFFFFFFFFELL;
          char v42 = (double *)(v30 + 40);
          double v41 = 0.0;
          uint64_t v43 = v39 & 0x7FFFFFFFFFFFFFFELL;
          do
          {
            double v41 = v41 + *(v42 - 1) + *v42;
            v42 += 2;
            v43 -= 2;
          }
          while (v43);
          if (v39 == v40) {
            goto LABEL_25;
          }
        }
        uint64_t v44 = v39 - v40;
        char v45 = (double *)(v30 + 8 * v40 + 32);
        do
        {
          double v46 = *v45++;
          double v41 = v41 + v46;
          --v44;
        }
        while (v44);
LABEL_25:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v14);
        swift_bridgeObjectRelease();
        return v21;
      }
      if (v32 >= v70) {
LABEL_48:
      }
        __break(1u);
      double v48 = v69;
      uint64_t v49 = (void (**)(char *, uint64_t))(v15 + 8);
      v66 &= 1u;
      while (1)
      {
        uint64_t v50 = v14;
        sub_2561760A8();
        LOBYTE(v71) = a2 & 1;
        LOBYTE(v7__isPlatformVersionAtLeast(2, 18, 1, 0) = v66;
        sub_256175FF8();
        unint64_t v53 = *(void *)(inited + 16);
        if (!v53) {
          break;
        }
        double v54 = v51;
        double v55 = v52;
        double v56 = v51 + a7 + *(double *)(inited + 32 + 8 * (v53 - 1));
        if ((a2 & 1) != 0 || v56 <= v48)
        {
          *(double *)(inited + 32 + 8 * (v53 - 1)) = v56;
          uint64_t v60 = *(void *)(v30 + 16);
          if (!v60) {
            goto LABEL_43;
          }
          uint64_t v61 = v30 + 8 * v60;
          double v62 = *(double *)(v61 + 24);
          if (v62 <= v52) {
            double v62 = v52;
          }
          *(double *)(v61 + 24) = v62;
        }
        else
        {
          unint64_t v57 = *(void *)(inited + 24);
          if (v53 >= v57 >> 1) {
            uint64_t inited = (uint64_t)sub_2560965B8((void *)(v57 > 1), v53 + 1, 1, (void *)inited);
          }
          *(void *)(inited + 16) = v53 + 1;
          *(double *)(inited + 8 * v53 + 32) = v54;
          unint64_t v59 = *(void *)(v30 + 16);
          unint64_t v58 = *(void *)(v30 + 24);
          if (v59 >= v58 >> 1) {
            uint64_t v30 = (uint64_t)sub_2560965B8((void *)(v58 > 1), v59 + 1, 1, (void *)v30);
          }
          *(void *)(v30 + 16) = v59 + 1;
          *(double *)(v30 + 8 * v59 + 32) = v55;
        }
        ++v32;
        uint64_t v14 = v50;
        (*v49)(v18, v50);
        if (v31 == v32) {
          goto LABEL_10;
        }
      }
      __break(1u);
LABEL_43:
      __break(1u);
    }
    __break(1u);
    goto LABEL_45;
  }
  sub_255FEC14C((uint64_t)v13);
  return 0.0;
}

uint64_t sub_255FEB958(uint64_t a1, char a2, uint64_t a3, int a4, uint64_t a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9, double a10, double a11)
{
  double v78 = a10;
  int v80 = a4;
  uint64_t v79 = a3;
  double v81 = *(double *)&a1;
  uint64_t v84 = *MEMORY[0x263EF8340];
  sub_255FEC0F4();
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_256176018();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v71 - v26;
  sub_255FEB288((uint64_t)v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1) {
    return sub_255FEC14C((uint64_t)v20);
  }
  uint64_t v73 = v22;
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v27, v20, v21);
  sub_2561762A8();
  char v30 = v29;
  char v32 = v31;
  sub_2561779A8();
  LOBYTE(v83) = v30 & 1;
  LOBYTE(v82) = v32 & 1;
  sub_256176008();
  sub_2561762A8();
  LOBYTE(v83) = v33 & 1;
  LOBYTE(v82) = v34 & 1;
  uint64_t v72 = v27;
  sub_256175FF8();
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  sub_255FEC1A8();
  uint64_t inited = swift_initStackObject();
  long long v77 = xmmword_2561A0960;
  *(_OWORD *)(inited + 16) = xmmword_2561A0960;
  *(void *)(inited + 32) = v36;
  uint64_t v40 = swift_initStackObject();
  *(_OWORD *)(v40 + 16) = v77;
  *(void *)(v40 + 32) = v38;
  sub_256176098();
  sub_255FEC200();
  sub_256178128();
  sub_256178148();
  uint64_t v41 = v82;
  if (v82 < v83) {
    goto LABEL_42;
  }
  if (__OFSUB__(v82, v83))
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if (v82 == v83)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v72, v21);
    return swift_bridgeObjectRelease();
  }
  uint64_t v42 = v83 + 1;
  if (__OFADD__(v83, 1)) {
    goto LABEL_44;
  }
  if (v42 < v83 || v82 < v42) {
LABEL_45:
  }
    __break(1u);
  if (v42 == v82) {
    goto LABEL_10;
  }
  *(void *)&long long v77 = v21;
  double v74 = v81;
  uint64_t v43 = (void (**)(char *, void))(v73 + 8);
  uint64_t v73 = (v73 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  double v76 = a11;
  double v75 = a9;
  do
  {
    if (v42 >= v41)
    {
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    sub_2561760A8();
    LOBYTE(v83) = a2 & 1;
    LOBYTE(v82) = v80 & 1;
    sub_256175FF8();
    uint64_t v47 = *(void *)(inited + 16);
    if (!v47) {
      goto LABEL_38;
    }
    double v48 = v45;
    double v49 = v46;
    uint64_t v50 = a5;
    double v51 = v45 + a11;
    uint64_t v52 = inited + 32;
    if ((a2 & 1) != 0 || v51 + *(double *)(v52 + 8 * v47 - 8) <= v74)
    {
      v86.origin.x = a6;
      v86.origin.y = a7;
      v86.size.width = a8;
      v86.size.height = a9;
      CGRectGetMinX(v86);
      if (!*(void *)(inited + 16)) {
        goto LABEL_39;
      }
      v87.size.height = a9;
      v87.origin.x = a6;
      v87.origin.y = a7;
      v87.size.width = a8;
      CGRectGetMinY(v87);
      unint64_t v57 = *(void *)(v40 + 16);
      unint64_t v58 = v57 - 1;
      double v59 = 0.0;
      if (v57 >= 2)
      {
        uint64_t v60 = (double *)(v40 + 32);
        unint64_t v61 = v58;
        do
        {
          double v62 = *v60++;
          double v59 = v59 + v62;
          --v61;
        }
        while (v61);
      }
      sub_2561779A8();
      LOBYTE(v83) = a2 & 1;
      LOBYTE(v82) = v80 & 1;
      sub_256176008();
      uint64_t v63 = *(void *)(inited + 16);
      if (!v63) {
        goto LABEL_40;
      }
      *(double *)(v52 + 8 * v63 - 8) = v51 + *(double *)(v52 + 8 * v63 - 8);
      uint64_t v64 = *(void *)(v40 + 16);
      if (!v64) {
        goto LABEL_41;
      }
      uint64_t v65 = v40 + 8 * v64;
      double v66 = *(double *)(v65 + 24);
      if (v66 <= v49) {
        double v66 = v49;
      }
      *(double *)(v65 + 24) = v66;
      a11 = v76;
      a9 = v75;
    }
    else
    {
      v85.origin.x = a6;
      v85.origin.y = a7;
      v85.size.width = a8;
      v85.size.height = a9;
      CGRectGetMinY(v85);
      if (*(void *)(v40 + 16))
      {
        unint64_t v53 = (double *)(v40 + 32);
        double v54 = 0.0;
        uint64_t v55 = *(void *)(v40 + 16);
        do
        {
          double v56 = *v53++;
          double v54 = v54 + v56;
          --v55;
        }
        while (v55);
      }
      v88.origin.x = a6;
      v88.origin.y = a7;
      v88.size.width = a8;
      v88.size.height = a9;
      CGRectGetMinX(v88);
      sub_2561779A8();
      LOBYTE(v83) = 0;
      LOBYTE(v82) = v80 & 1;
      sub_256176008();
      unint64_t v68 = *(void *)(inited + 16);
      unint64_t v67 = *(void *)(inited + 24);
      if (v68 >= v67 >> 1) {
        uint64_t inited = (uint64_t)sub_2560965B8((void *)(v67 > 1), v68 + 1, 1, (void *)inited);
      }
      *(void *)(inited + 16) = v68 + 1;
      *(double *)(inited + 8 * v68 + 32) = v48;
      unint64_t v70 = *(void *)(v40 + 16);
      unint64_t v69 = *(void *)(v40 + 24);
      a11 = v76;
      a9 = v75;
      if (v70 >= v69 >> 1) {
        uint64_t v40 = (uint64_t)sub_2560965B8((void *)(v69 > 1), v70 + 1, 1, (void *)v40);
      }
      *(void *)(v40 + 16) = v70 + 1;
      *(double *)(v40 + 8 * v70 + 32) = v49;
    }
    ++v42;
    uint64_t v44 = *v43;
    (*v43)(v25, v77);
    a5 = v50;
  }
  while (v42 != v41);
  swift_bridgeObjectRelease();
  v44(v72, v77);
  return swift_bridgeObjectRelease();
}

double sub_255FEC064(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  return sub_255FEB3F4(a1, a2 & 1, a3, a4 & 1, a5, *v5, v5[1]);
}

uint64_t sub_255FEC080(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  return sub_255FEB958(a1, a2 & 1, a3, a4 & 1, a5, a6, a7, a8, a9, *v9, v9[1]);
}

unint64_t sub_255FEC0A0()
{
  unint64_t result = qword_269F44370;
  if (!qword_269F44370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44370);
  }
  return result;
}

void sub_255FEC0F4()
{
  if (!qword_269F43CF8)
  {
    sub_256176018();
    unint64_t v0 = sub_256178448();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43CF8);
    }
  }
}

uint64_t sub_255FEC14C(uint64_t a1)
{
  sub_255FEC0F4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_255FEC1A8()
{
  if (!qword_269F44378)
  {
    unint64_t v0 = sub_2561787F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44378);
    }
  }
}

unint64_t sub_255FEC200()
{
  unint64_t result = qword_269F43D18;
  if (!qword_269F43D18)
  {
    sub_256176098();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F43D18);
  }
  return result;
}

uint64_t *sub_255FEC258(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    sub_255FEE900(0, &qword_269F42FB8, MEMORY[0x263F18DD8], MEMORY[0x263F185C8]);
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_256176178();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (uint64_t *)((char *)v4 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    sub_255FEE900(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *uint64_t v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_255FEC47C(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_255FEE900(0, &qword_269F42FB8, MEMORY[0x263F18DD8], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_256176178();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  sub_255FEE900(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_256175D98();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v6, v7);
  }
  else
  {
    return swift_release();
  }
}

void *sub_255FEC604(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_255FEE900(0, &qword_269F42FB8, MEMORY[0x263F18DD8], MEMORY[0x263F185C8]);
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_256176178();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  sub_255FEE900(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_256175D98();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    *uint64_t v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_255FEC7D0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    uint64_t v9 = (uint64_t (*)(uint64_t))MEMORY[0x263F18DD8];
    sub_255FEC9E4((uint64_t)a1 + v6, &qword_269F42FB8, MEMORY[0x263F18DD8]);
    sub_255FEE900(0, &qword_269F42FB8, v9, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_256176178();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v7, v8, v10);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = (void *)((char *)a1 + v11);
    uint64_t v13 = (void *)((char *)a2 + v11);
    uint64_t v14 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    sub_255FEC9E4((uint64_t)a1 + v11, &qword_269F47D00, MEMORY[0x263F18520]);
    sub_255FEE900(0, &qword_269F47D00, v14, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v12, v13, v15);
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_255FEC9E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_255FEE900(0, a2, a3, MEMORY[0x263F185C8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

_OWORD *sub_255FECA54(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  sub_255FEE900(0, &qword_269F42FB8, MEMORY[0x263F18DD8], MEMORY[0x263F185C8]);
  uint64_t v10 = v9;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_256176178();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v7, v8, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  sub_255FEE900(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  uint64_t v16 = v15;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_256175D98();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v13, v14, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  return a1;
}

void *sub_255FECC30(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = (uint64_t (*)(uint64_t))MEMORY[0x263F18DD8];
    sub_255FEC9E4((uint64_t)a1 + v6, &qword_269F42FB8, MEMORY[0x263F18DD8]);
    sub_255FEE900(0, &qword_269F42FB8, v9, MEMORY[0x263F185C8]);
    uint64_t v11 = v10;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_256176178();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v7, v8, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    sub_255FEC9E4((uint64_t)a1 + v13, &qword_269F47D00, MEMORY[0x263F18520]);
    sub_255FEE900(0, &qword_269F47D00, v16, MEMORY[0x263F185C8]);
    uint64_t v18 = v17;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_256175D98();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v14, v15, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_255FECE5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255FECE70);
}

uint64_t sub_255FECE70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_255FEE900(0, &qword_269F42FD0, MEMORY[0x263F18DD8], MEMORY[0x263F185D0]);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_255FEE900(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_255FECFFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255FED010);
}

uint64_t sub_255FED010(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_255FEE900(0, &qword_269F42FD0, MEMORY[0x263F18DD8], MEMORY[0x263F185D0]);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_255FEE900(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for ValenceSliderStyle()
{
  uint64_t result = qword_269F44380;
  if (!qword_269F44380) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_255FED1E8()
{
  sub_255FEE900(319, &qword_269F42FB8, MEMORY[0x263F18DD8], MEMORY[0x263F185C8]);
  if (v0 <= 0x3F)
  {
    sub_255FEE900(319, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_255FED31C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255FED338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v63 = a4;
  uint64_t v7 = sub_256176B68();
  uint64_t v55 = *(void *)(v7 - 8);
  uint64_t v56 = v7;
  uint64_t v58 = *(void *)(v55 + 64);
  MEMORY[0x270FA5388](v7);
  double v54 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_256175FC8();
  uint64_t v49 = *(void *)(v52 - 8);
  uint64_t v53 = *(void *)(v49 + 64);
  MEMORY[0x270FA5388](v52);
  uint64_t v47 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ValenceSliderStyle();
  uint64_t v48 = *(void *)(v10 - 8);
  uint64_t v11 = *(void *)(v48 + 64);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v45 = (uint64_t)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_2561768D8();
  MEMORY[0x270FA5388](v12);
  uint64_t v57 = sub_256175DF8();
  uint64_t v60 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  double v46 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F85220();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v61 = v14;
  uint64_t v62 = v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v50 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FEE86C();
  uint64_t v59 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (uint64_t *)((char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_256176B48();
  double v21 = v20;
  sub_256175FA8();
  double v23 = v22;
  sub_256175FA8();
  if (v24 >= v23) {
    double v24 = v23;
  }
  double v25 = *a3 * v24;
  *uint64_t v19 = sub_2561778F8();
  v19[1] = v26;
  double v51 = v19;
  sub_255FEEC90();
  sub_255FED9D0(a3, a1, (uint64_t)v19 + *(int *)(v27 + 44), v25, v21);
  sub_256176AB8();
  sub_256175DC8();
  sub_255FEF294((uint64_t)a3, (uint64_t)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ValenceSliderStyle);
  uint64_t v28 = v49;
  char v29 = v47;
  uint64_t v30 = v52;
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v47, a1, v52);
  char v31 = v54;
  uint64_t v32 = v55;
  uint64_t v33 = a2;
  uint64_t v34 = v56;
  (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v54, v33, v56);
  unint64_t v35 = (*(unsigned __int8 *)(v48 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  unint64_t v36 = (v11 + *(unsigned __int8 *)(v28 + 80) + v35) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  unint64_t v37 = (v53 + *(unsigned __int8 *)(v32 + 80) + v36) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  uint64_t v38 = swift_allocObject();
  sub_255FEF22C(v45, v38 + v35, (uint64_t (*)(void))type metadata accessor for ValenceSliderStyle);
  (*(void (**)(unint64_t, char *, uint64_t))(v28 + 32))(v38 + v36, v29, v30);
  (*(void (**)(unint64_t, char *, uint64_t))(v32 + 32))(v38 + v37, v31, v34);
  sub_255FEE824(&qword_269F43178, MEMORY[0x263F185B8]);
  sub_255FEE824(&qword_269F43180, MEMORY[0x263F18588]);
  uint64_t v39 = v50;
  uint64_t v40 = v57;
  uint64_t v41 = v46;
  sub_256177808();
  swift_release();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v41, v40);
  sub_256175E18();
  sub_255FEE824(&qword_269F443F0, (void (*)(uint64_t))sub_255FEE86C);
  sub_255FEE824(&qword_269F43188, (void (*)(uint64_t))sub_255F85220);
  uint64_t v42 = v61;
  uint64_t v43 = (uint64_t)v51;
  sub_256177318();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v39, v42);
  return sub_255FEF174(v43, (uint64_t (*)(void))sub_255FEE86C);
}

uint64_t sub_255FED9D0@<X0>(double *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v80 = a2;
  uint64_t v81 = a3;
  uint64_t v73 = a1;
  uint64_t v78 = sub_256177958();
  uint64_t v7 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  long long v77 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_256175D98();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v71 - v14;
  sub_255FEEAF4();
  uint64_t v17 = v16 - 8;
  MEMORY[0x270FA5388](v16);
  double v75 = (uint64_t *)((char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = sub_256177798();
  MEMORY[0x270FA5388](v19 - 8);
  double v21 = (char *)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = v21;
  sub_255FEE9F8();
  uint64_t v23 = v22 - 8;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v79 = (uint64_t)&v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  double v74 = (char *)&v71 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v76 = (uint64_t)&v71 - v28;
  uint64_t v29 = *MEMORY[0x263F19860];
  uint64_t v30 = sub_2561766E8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104))(v21, v29, v30);
  id v31 = objc_msgSend(self, sel_systemGray6Color);
  uint64_t v32 = MEMORY[0x25A29FE80](v31);
  type metadata accessor for ValenceSliderStyle();
  uint64_t v71 = v15;
  sub_25611A114((uint64_t)v15);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v13, *MEMORY[0x263F184F8], v9);
  LOBYTE(v29) = sub_256175D88();
  uint64_t v33 = *(void (**)(char *, uint64_t))(v10 + 8);
  v33(v13, v9);
  uint64_t v34 = v7;
  unint64_t v35 = (unsigned int *)MEMORY[0x263F1B968];
  if ((v29 & 1) == 0) {
    unint64_t v35 = (unsigned int *)MEMORY[0x263F1B950];
  }
  unint64_t v37 = v77;
  uint64_t v36 = v78;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v77, *v35, v78);
  uint64_t v38 = v75;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))((char *)v75 + *(int *)(v17 + 44), v37, v36);
  uint64_t *v38 = v32;
  uint64_t v39 = *(void (**)(char *, uint64_t))(v34 + 8);
  swift_retain();
  v39(v37, v36);
  v33(v71, v9);
  swift_release();
  uint64_t v40 = (uint64_t)v74;
  sub_255FEF294((uint64_t)v38, (uint64_t)&v74[*(int *)(v23 + 44)], (uint64_t (*)(void))sub_255FEEAF4);
  uint64_t v41 = (uint64_t)v72;
  sub_255FEF294((uint64_t)v72, v40, MEMORY[0x263F1B7A0]);
  sub_255FEF174((uint64_t)v38, (uint64_t (*)(void))sub_255FEEAF4);
  sub_255FEF174(v41, MEMORY[0x263F1B7A0]);
  uint64_t v42 = v76;
  sub_255FEF22C(v40, v76, (uint64_t (*)(void))sub_255FEE9F8);
  sub_256175FA8();
  double v44 = v43;
  sub_256175FA8();
  if (v45 >= v44) {
    double v45 = v44;
  }
  double v46 = v73;
  double v47 = *v73;
  double v48 = v45 * (1.0 - (v47 + v47));
  sub_256175FA8();
  double v50 = v49;
  sub_256175FA8();
  if (v51 >= v50) {
    double v51 = v50;
  }
  double v52 = v47 * v51;
  sub_256175FA8();
  double v54 = v53 - v48 - (v52 + v52);
  uint64_t v55 = *((void *)v46 + 1);
  swift_retain();
  sub_256177468();
  uint64_t v56 = sub_256177498();
  swift_release();
  char v57 = sub_256176DD8();
  sub_256175D48();
  uint64_t v59 = v58;
  uint64_t v61 = v60;
  uint64_t v63 = v62;
  uint64_t v65 = v64;
  uint64_t v66 = v79;
  sub_255FEF294(v42, v79, (uint64_t (*)(void))sub_255FEE9F8);
  uint64_t v67 = v81;
  sub_255FEF294(v66, v81, (uint64_t (*)(void))sub_255FEE9F8);
  sub_255FEE964();
  uint64_t v69 = v67 + *(int *)(v68 + 48);
  *(void *)uint64_t v69 = v55;
  *(_WORD *)(v69 + 8) = 256;
  *(void *)(v69 + 16) = v56;
  *(_OWORD *)(v69 + 24) = xmmword_2561A2460;
  *(void *)(v69 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0x3FF0000000000000;
  *(unsigned char *)(v69 + 48) = v57;
  *(void *)(v69 + 56) = v59;
  *(void *)(v69 + 64) = v61;
  *(void *)(v69 + 72) = v63;
  *(void *)(v69 + 8__isPlatformVersionAtLeast(2, 18, 1, 0) = v65;
  *(unsigned char *)(v69 + 88) = 0;
  *(double *)(v69 + 96) = v54 * a5 + a4;
  *(void *)(v69 + 104) = 0;
  swift_retain();
  swift_retain();
  sub_255FEF174(v42, (uint64_t (*)(void))sub_255FEE9F8);
  swift_release();
  swift_release();
  return sub_255FEF174(v66, (uint64_t (*)(void))sub_255FEE9F8);
}

uint64_t sub_255FEE048(uint64_t a1, double *a2)
{
  uint64_t v3 = sub_256176178();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v39 - v8;
  sub_256175FA8();
  double v11 = v10;
  sub_256175FA8();
  if (v12 >= v11) {
    double v12 = v11;
  }
  double v13 = *a2;
  double v14 = 1.0 - (v13 + v13);
  double v15 = v12 * v14;
  sub_256175FA8();
  double v17 = v16;
  sub_256175FA8();
  if (v18 >= v17) {
    double v18 = v17;
  }
  double v19 = v13 * v18;
  sub_256175FA8();
  double v21 = v20;
  sub_256175FA8();
  if (v22 >= v21) {
    double v22 = v21;
  }
  double v23 = v14 * v22;
  sub_256175FA8();
  double v25 = v24;
  sub_256175FA8();
  if (v26 >= v25) {
    double v26 = v25;
  }
  double v27 = v13 * v26;
  sub_256175FA8();
  double v29 = v28 - v23 - (v27 + v27);
  sub_256175DE8();
  double v31 = v30 - v19 + v15 * -0.5;
  type metadata accessor for ValenceSliderStyle();
  sub_25611A9DC((uint64_t)v9);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v7, *MEMORY[0x263F18DD0], v3);
  char v32 = sub_256176168();
  uint64_t v33 = *(void (**)(char *, uint64_t))(v4 + 8);
  v33(v7, v3);
  v33(v9, v3);
  double v34 = v29 - v31;
  if ((v32 & 1) == 0) {
    double v34 = v31;
  }
  double v35 = v34 / v29;
  uint64_t v42 = sub_256176B58();
  uint64_t v43 = v36;
  uint64_t v44 = v37;
  double v40 = v35;
  long long v39 = xmmword_2561A2470;
  sub_256177E38();
  *(void *)&long long v39 = v41;
  sub_255FEF1D4();
  sub_256177728();
  swift_release();
  return swift_release();
}

uint64_t sub_255FEE2E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v7 = *(void *)(a2 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_256176B68();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  sub_255FEF294(v4, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ValenceSliderStyle);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = (v12 + *(unsigned __int8 *)(v7 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v15 + v13, (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  uint64_t result = sub_255FEF22C((uint64_t)v9, v15 + v14, (uint64_t (*)(void))type metadata accessor for ValenceSliderStyle);
  *a3 = sub_255FEE740;
  a3[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v15;
  return result;
}

uint64_t sub_255FEE4D4()
{
  uint64_t v1 = sub_256176B68();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = type metadata accessor for ValenceSliderStyle();
  unint64_t v6 = (v3 + v4 + *(unsigned __int8 *)(*(void *)(v5 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  unint64_t v7 = v0 + v6 + *(int *)(v5 + 20);
  sub_255FEE900(0, &qword_269F42FB8, MEMORY[0x263F18DD8], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_256176178();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  unint64_t v9 = v0 + v6 + *(int *)(v5 + 24);
  sub_255FEE900(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_256175D98();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_255FEE740@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_256176B68() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(type metadata accessor for ValenceSliderStyle() - 8);
  unint64_t v9 = (double *)(v2 + ((v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)));

  return sub_255FED338(a1, v2 + v6, v9, a2);
}

uint64_t sub_255FEE824(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_255FEE86C()
{
  if (!qword_269F44390)
  {
    sub_255FEE900(255, &qword_269F44398, (uint64_t (*)(uint64_t))sub_255FEE964, MEMORY[0x263F1BAC8]);
    sub_255FEEC08();
    unint64_t v0 = sub_256177708();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44390);
    }
  }
}

void sub_255FEE900(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_255FEE964()
{
  if (!qword_269F443A0)
  {
    sub_255FEE9F8();
    sub_255FEEBA4(255, &qword_269F443C8, sub_255FEEB54);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F443A0);
    }
  }
}

void sub_255FEE9F8()
{
  if (!qword_269F443A8)
  {
    sub_256177798();
    sub_255FEEA60();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F443A8);
    }
  }
}

void sub_255FEEA60()
{
  if (!qword_269F443B0)
  {
    sub_255FEEAF4();
    sub_255FEE824(&qword_269F443C0, (void (*)(uint64_t))sub_255FEEAF4);
    unint64_t v0 = sub_256176B78();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F443B0);
    }
  }
}

void sub_255FEEAF4()
{
  if (!qword_269F443B8)
  {
    unint64_t v0 = sub_256176988();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F443B8);
    }
  }
}

void sub_255FEEB54(uint64_t a1)
{
}

void sub_255FEEB7C(uint64_t a1)
{
}

void sub_255FEEBA4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_255FEEC08()
{
  unint64_t result = qword_269F443E0;
  if (!qword_269F443E0)
  {
    sub_255FEE900(255, &qword_269F44398, (uint64_t (*)(uint64_t))sub_255FEE964, MEMORY[0x263F1BAC8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F443E0);
  }
  return result;
}

void sub_255FEEC90()
{
  if (!qword_269F443E8)
  {
    sub_255FEE900(255, &qword_269F44398, (uint64_t (*)(uint64_t))sub_255FEE964, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_256176048();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F443E8);
    }
  }
}

uint64_t sub_255FEED28()
{
  uint64_t v1 = type metadata accessor for ValenceSliderStyle();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v17 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v18 = sub_256175FC8();
  uint64_t v3 = *(void *)(v18 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v16 = *(void *)(v3 + 64);
  uint64_t v5 = sub_256176B68();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  uint64_t v9 = v8 + *(int *)(v1 + 20);
  sub_255FEE900(0, &qword_269F42FB8, MEMORY[0x263F18DD8], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_256176178();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = v8 + *(int *)(v1 + 24);
  sub_255FEE900(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  uint64_t v13 = (((v2 + 16) & ~v2) + v17 + v4) & ~v4;
  uint64_t v14 = (v13 + v16 + v7) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v13, v18);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v14, v5);

  return swift_deallocObject();
}

uint64_t sub_255FEF03C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for ValenceSliderStyle() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_256175FC8();
  sub_256176B68();

  return sub_255FEE048(a1, (double *)(v1 + v4));
}

uint64_t sub_255FEF174(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_255FEF1D4()
{
  if (!qword_269F443F8)
  {
    unint64_t v0 = sub_256177778();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F443F8);
    }
  }
}

uint64_t sub_255FEF22C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_255FEF294(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void *initializeBufferWithCopyOfBuffer for ValenceSliderStyle.StyleConfiguration(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for ValenceSliderStyle.StyleConfiguration()
{
  return swift_release();
}

void *assignWithCopy for ValenceSliderStyle.StyleConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for ValenceSliderStyle.StyleConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ValenceSliderStyle.StyleConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ValenceSliderStyle.StyleConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ValenceSliderStyle.StyleConfiguration()
{
  return &type metadata for ValenceSliderStyle.StyleConfiguration;
}

uint64_t sub_255FEF448()
{
  return sub_255FEE824(&qword_269F44400, (void (*)(uint64_t))sub_255FEF490);
}

void sub_255FEF490()
{
  if (!qword_269F44408)
  {
    sub_255FEF5B4();
    sub_255FEE86C();
    sub_255F85220();
    sub_255FEE824(&qword_269F443F0, (void (*)(uint64_t))sub_255FEE86C);
    sub_255FEE824(&qword_269F43188, (void (*)(uint64_t))sub_255F85220);
    swift_getOpaqueTypeConformance2();
    unint64_t v0 = sub_256176088();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44408);
    }
  }
}

void sub_255FEF5B4()
{
  if (!qword_269F44410)
  {
    sub_255FEE86C();
    sub_255F85220();
    sub_255FEE824(&qword_269F443F0, (void (*)(uint64_t))sub_255FEE86C);
    sub_255FEE824(&qword_269F43188, (void (*)(uint64_t))sub_255F85220);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F44410);
    }
  }
}

void sub_255FEF784(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_255FEF898(void *a1, uint64_t a2, double a3)
{
  v82[1] = *(id *)MEMORY[0x263EF8340];
  sub_255FF0E78();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_256175628();
  uint64_t v78 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  double v75 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  long long v77 = (char *)&v72 - v13;
  *(void *)&v3[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_framerateDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v3[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_displayLink] = 0;
  *(void *)&v3[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_displayLinkTarget] = 0;
  uint64_t v14 = &v3[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_displayLinkWillRenderFrame];
  *uint64_t v14 = 0;
  v14[1] = 0;
  v3[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_commandQueueIsEmpty] = 1;
  *(void *)&v3[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_metalArchive] = 0;
  uint64_t v15 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_layer;
  *(void *)&v3[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_layer] = 0;
  uint64_t v16 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_sampleCount;
  *(void *)&v3[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_sampleCount] = 1;
  uint64_t v17 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_superSampling;
  *(void *)&v3[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_superSampling] = 0x3FF0000000000000;
  *(_DWORD *)&v3[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_currentTime] = 0;
  *(_DWORD *)&v3[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_timeDelta] = 0;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)&v3[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_lastDrawableSize] = _Q0;
  double v23 = *(void **)&v3[v15];
  *(void *)&v3[v15] = a1;
  double v24 = v3;
  id v25 = a1;

  *(void *)&v3[v16] = a2;
  *(double *)&v3[v17] = a3;
  double v74 = a1;
  if (a1)
  {
    id v26 = v25;
    id v27 = objc_msgSend(v26, sel_device);
    if (!v27)
    {
LABEL_23:
      uint64_t result = sub_256178658();
      __break(1u);
      return result;
    }
    id v28 = v27;

    double v29 = v75;
  }
  else
  {
    id v28 = MTLCreateSystemDefaultDevice();
    double v29 = v75;
    if (!v28)
    {
      __break(1u);
      goto LABEL_23;
    }
  }
  uint64_t v76 = v10;
  *(void *)&v24[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_device] = v28;
  id v30 = objc_msgSend(v28, sel_newCommandQueue);
  if (!v30) {
    goto LABEL_23;
  }
  double v31 = v30;
  id v73 = v25;
  *(void *)&v24[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_commandQueue] = v30;
  swift_unknownObjectRetain_n();
  char v32 = (void *)sub_256177EA8();
  objc_msgSend(v31, sel_setLabel_, v32);
  swift_unknownObjectRelease();

  uint64_t v33 = (objc_class *)type metadata accessor for MetalRenderer();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  double v35 = (char *)objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v36 = (void *)sub_256177EA8();
  uint64_t v37 = (void *)sub_256177EA8();
  double v75 = v35;
  id v38 = objc_msgSend(v35, sel_URLForResource_withExtension_, v36, v37);

  if (!v38)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v78 + 56))(v9, 1, 1, v76);
    goto LABEL_21;
  }
  sub_256175608();

  uint64_t v39 = v78;
  double v40 = *(void (**)(char *, char *, uint64_t))(v78 + 32);
  uint64_t v41 = v76;
  v40(v9, v29, v76);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v9, 0, 1, v41);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v9, 1, v41) == 1)
  {
LABEL_21:
    sub_255FF0ED0((uint64_t)v9);
    goto LABEL_23;
  }
  uint64_t v42 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_device;
  v40(v77, v9, v41);
  uint64_t v43 = *(void **)&v24[v42];
  swift_unknownObjectRetain();
  uint64_t v44 = (void *)sub_2561755F8();
  v82[0] = 0;
  id v45 = objc_msgSend(v43, sel_newLibraryWithURL_error_, v44, v82);
  swift_unknownObjectRelease();

  id v46 = v82[0];
  if (!v45)
  {
    id v70 = v82[0];
    uint64_t v71 = (void *)sub_2561755D8();

    swift_willThrow();
    goto LABEL_23;
  }
  *(void *)&v24[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_defaultLibrary] = v45;
  swift_unknownObjectRetain();
  id v47 = v46;

  v81.receiver = v24;
  v81.super_class = v33;
  double v48 = (char *)objc_msgSendSuper2(&v81, sel_init);
  if (v74)
  {
    sub_255FF01B4();
    double v49 = *(void **)&v48[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_displayLink];
    if (v49) {
      objc_msgSend(v49, sel_setPaused_, 0);
    }
  }
  double v50 = (void *)sub_256177EA8();
  double v51 = (void *)sub_256177EA8();
  id v52 = v75;
  id v53 = objc_msgSend(v75, sel_pathForResource_ofType_, v50, v51);

  if (v53)
  {
    sub_256177EE8();

    id v54 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F127D0]), sel_init);
    sub_2561755E8();
    uint64_t v55 = v76;
    swift_bridgeObjectRelease();
    uint64_t v56 = (void *)sub_2561755F8();
    uint64_t v57 = v78 + 8;
    uint64_t v58 = *(void (**)(char *, uint64_t))(v78 + 8);
    v58(v29, v55);
    objc_msgSend(v54, sel_setUrl_, v56);

    uint64_t v59 = *(void **)&v48[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_device];
    v82[0] = 0;
    id v60 = objc_msgSend(v59, sel_newBinaryArchiveWithDescriptor_error_, v54, v82);
    id v61 = v82[0];
    if (v60)
    {

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      v58(v77, v55);
      *(void *)&v48[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_metalArchive] = v60;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v62 = v61;
      uint64_t v63 = (void *)sub_2561755D8();

      swift_willThrow();
      sub_255FF0DA8();
      uint64_t v64 = swift_allocObject();
      *(_OWORD *)(v64 + 16) = xmmword_2561A0040;
      *(void *)(v64 + 56) = MEMORY[0x263F8D310];
      *(void *)(v64 + 32) = 0xD000000000000049;
      *(void *)(v64 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0x80000002561AAFC0;
      uint64_t v78 = v57;
      swift_getErrorValue();
      uint64_t v65 = v58;
      uint64_t v66 = v79;
      uint64_t v67 = v80;
      *(void *)(v64 + 88) = v80;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v64 + 64));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v67 - 8) + 16))(boxed_opaque_existential_1, v66, v67);
      sub_2561788C8();

      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      v65(v77, v76);
    }
  }
  else
  {
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    (*(void (**)(char *, uint64_t))(v78 + 8))(v77, v41);
  }
  return (uint64_t)v48;
}

void sub_255FF01B4()
{
  uint64_t v1 = *(void **)((char *)v0 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_layer);
  if (v1)
  {
    id v2 = v1;
    objc_msgSend(v2, sel_bounds);
    if (!CGRectIsEmpty(v12)) {
      (*(void (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x260))();
    }
    uint64_t v3 = (objc_class *)type metadata accessor for MetalRenderer.DisplayLinkTarget();
    id v4 = objc_allocWithZone(v3);
    swift_unknownObjectWeakInit();
    swift_unknownObjectWeakAssign();
    v11.receiver = v4;
    v11.super_class = v3;
    id v5 = objc_msgSendSuper2(&v11, sel_init);
    uint64_t v6 = *(void **)((char *)v0 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_displayLinkTarget);
    *(void *)((char *)v0 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_displayLinkTarget) = v5;
    id v7 = v5;

    id v8 = objc_msgSend(self, sel_displayLinkWithTarget_selector_, v7, sel_fireWithLink_);
    objc_msgSend(v8, sel_setPreferredFramesPerSecond_, 60);
    id v9 = objc_msgSend(self, sel_currentRunLoop);
    objc_msgSend(v8, sel_addToRunLoop_forMode_, v9, *MEMORY[0x263EFF588]);

    uint64_t v10 = *(void **)((char *)v0 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_displayLink);
    *(void *)((char *)v0 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_displayLink) = v8;
  }
  else
  {
    sub_256178658();
    __break(1u);
  }
}

void sub_255FF03A4(void *a1)
{
  uint64_t v3 = MEMORY[0x25A2A1F80](v1+ OBJC_IVAR____TtCC14MentalHealthUI13MetalRendererP33_3D7E1FDF28A65721717625FA5324475917DisplayLinkTarget_renderer);
  if (!v3) {
    return;
  }
  id v4 = (void *)v3;
  id v5 = *(void **)(v3 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_displayLink);
  if (v5) {
    BOOL v6 = v5 == a1;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    id v9 = (void *)v3;
    id v7 = *(void **)(v3 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_layer);
    if (v7)
    {
      objc_msgSend(v7, sel_bounds);
      v12.origin.x = 0.0;
      v12.origin.y = 0.0;
      v12.size.width = 0.0;
      v12.size.height = 0.0;
      BOOL v8 = CGRectEqualToRect(v11, v12);
      id v4 = v9;
      if (v8) {
        goto LABEL_13;
      }
      sub_255FF055C();
    }
    else
    {
      objc_msgSend(a1, sel_setPaused_, 1);
    }
    id v4 = v9;
  }
LABEL_13:
}

id sub_255FF0514()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_255FF055C()
{
  uint64_t v1 = v0;
  objc_super v2 = *(void (**)(void *))((char *)v0
                                     + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_displayLinkWillRenderFrame);
  if (v2)
  {
    uint64_t v3 = *(void **)((char *)v0 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_displayLink);
    sub_255FF0D20((uint64_t)v2);
    id v4 = v3;
    v2(v3);
    sub_255FF0D30((uint64_t)v2);
  }
  id v5 = *(void **)((char *)v0 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_displayLink);
  if (!v5) {
    goto LABEL_19;
  }
  id v6 = v5;
  objc_msgSend(v6, sel_targetTimestamp);
  double v8 = v7;
  objc_msgSend(v6, sel_timestamp);
  *(float *)&double v9 = v8 - v9;
  *(_DWORD *)((char *)v1 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_timeDelta) = LODWORD(v9);
  *(float *)((char *)v1 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_currentTime) = *(float *)((char *)v1
                                                                                                  + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_currentTime)
                                                                                       + *(float *)&v9;

  uint64_t v10 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_commandQueueIsEmpty;
  if ((*((unsigned char *)v1 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_commandQueueIsEmpty) & 1) == 0) {
    return;
  }
  uint64_t v11 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_layer;
  CGRect v12 = *(void **)((char *)v1 + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_layer);
  if (!v12)
  {
LABEL_8:
    uint64_t v14 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_commandQueue;
    uint64_t v15 = (void *)MEMORY[0x263F8EED0];
    uint64_t v16 = *(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v1) + 0x268);
    uint64_t v17 = swift_unknownObjectRetain();
    char v18 = v16(v17);
    swift_unknownObjectRelease();
    if ((v18 & 1) == 0) {
      return;
    }
    id v19 = objc_msgSend(*(id *)((char *)v1 + v14), sel_commandBuffer);
    if (v19)
    {
      double v20 = v19;
      *((unsigned char *)v1 + v1__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = v1;
      aBlock[4] = sub_255FF0D78;
      aBlock[5] = v21;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_255FF09C4;
      aBlock[3] = &block_descriptor_2;
      double v22 = _Block_copy(aBlock);
      double v23 = v1;
      swift_release();
      objc_msgSend(v20, sel_addCompletedHandler_, v22);
      _Block_release(v22);
      double v24 = *(void **)((char *)v1 + v11);
      if (v24 && (id v25 = objc_msgSend(v24, sel_nextDrawable)) != 0)
      {
        id v26 = v25;
        (*(void (**)(id, void *))((*v15 & *v23) + 0x278))(objc_msgSend(v25, sel_texture), v20);
        swift_unknownObjectRelease();
        objc_msgSend(v26, sel_present);
        swift_unknownObjectRelease();
      }
      else
      {
        objc_msgSend(v20, sel_commit);
      }
      swift_unknownObjectRelease();
      return;
    }
    while (1)
    {
LABEL_19:
      sub_256178658();
      __break(1u);
    }
  }
  id v13 = v12;
  if (objc_msgSend(v13, sel_isDrawableAvailable))
  {

    goto LABEL_8;
  }
  sub_255FF0DA8();
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_2561A0960;
  *(void *)(v27 + 56) = MEMORY[0x263F8D310];
  *(void *)(v27 + 32) = 0xD00000000000003DLL;
  *(void *)(v27 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0x80000002561AAE90;
  sub_2561788C8();

  swift_bridgeObjectRelease();
}

uint64_t sub_255FF09C4(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();

  return swift_unknownObjectRelease();
}

void sub_255FF0A24()
{
}

void sub_255FF0A88()
{
}

void sub_255FF0AEC()
{
}

id sub_255FF0B50()
{
  uint64_t v1 = OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_displayLink;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_displayLink];
  if (v2)
  {
    objc_msgSend(v2, sel_setPaused_, 1);
    uint64_t v3 = *(void **)&v0[v1];
    if (v3) {
      objc_msgSend(v3, sel_invalidate);
    }
  }
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for MetalRenderer();
  return objc_msgSendSuper2(&v5, sel_dealloc);
}

uint64_t type metadata accessor for MetalRenderer()
{
  return self;
}

uint64_t type metadata accessor for MetalRenderer.DisplayLinkTarget()
{
  return self;
}

uint64_t sub_255FF0D20(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_255FF0D30(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_255FF0D40()
{
  return swift_deallocObject();
}

void sub_255FF0D78()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC14MentalHealthUI13MetalRenderer_commandQueueIsEmpty) = 1;
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

void sub_255FF0DA8()
{
  if (!qword_269F444B0)
  {
    unint64_t v0 = sub_2561787F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F444B0);
    }
  }
}

uint64_t sub_255FF0E04()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_255FF0E3C()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_255FF0E50(uint64_t a1)
{
  return a1;
}

void sub_255FF0E78()
{
  if (!qword_26B2AD320)
  {
    sub_256175628();
    unint64_t v0 = sub_256178448();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B2AD320);
    }
  }
}

uint64_t sub_255FF0ED0(uint64_t a1)
{
  sub_255FF0E78();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t View.mindAccessibilityIdentifierComponents(_:components:)()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_255FCD3A4(v0);
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_255FCD3A4(v1);
  sub_255FCD9E0();
  sub_255FF10F4((unint64_t *)&qword_26B2AD358, (void (*)(uint64_t))sub_255FCD9E0);
  sub_256177E28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_256177238();
  return swift_bridgeObjectRelease();
}

uint64_t sub_255FF1058()
{
  return swift_getWitnessTable();
}

uint64_t sub_255FF10F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255FF113C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v6;
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v7 = *(int *)(a3 + 24);
    double v8 = (void *)(a1 + v7);
    double v9 = (uint64_t *)((char *)a2 + v7);
    sub_255FF3314(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_256176AA8();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        sub_255FF3314(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      uint64_t v13 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
      uint64_t v14 = (char *)v8 + v13;
      uint64_t v15 = (char *)v9 + v13;
      uint64_t v16 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *double v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v5;
}

uint64_t sub_255FF13C8(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  sub_255FF3314(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_256176AA8();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
    uint64_t v7 = v4 + *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    uint64_t v8 = sub_256176158();
    double v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v9(v7, v8);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_255FF1558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (void *)(a2 + v5);
  sub_255FF3314(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_256176AA8();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      sub_255FF3314(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
    uint64_t v11 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    uint64_t v12 = (char *)v6 + v11;
    uint64_t v13 = (char *)v7 + v11;
    uint64_t v14 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    *uint64_t v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_255FF1790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (void *)(a2 + v6);
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_255FF35D4(a1 + v6, (uint64_t)&qword_269F439D8, (uint64_t)type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8], (uint64_t (*)(void))sub_255FF3314);
    sub_255FF3314(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, v9);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_256176AA8();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        sub_255FF3314(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v7, v8, v10);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      uint64_t v13 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
      uint64_t v14 = (char *)v7 + v13;
      uint64_t v15 = (char *)v8 + v13;
      uint64_t v16 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_255FF1A24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)(a1 + v4);
  uint64_t v6 = (char *)(a2 + v4);
  sub_255FF3314(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  uint64_t v8 = v7;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_256176AA8();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9))
    {
      sub_255FF3314(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v5, v6, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v5, v6, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
    }
    uint64_t v12 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    uint64_t v13 = &v5[v12];
    uint64_t v14 = &v6[v12];
    uint64_t v15 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_255FF1C5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)(a1 + v6);
    uint64_t v8 = (char *)(a2 + v6);
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_255FF35D4(a1 + v6, (uint64_t)&qword_269F439D8, (uint64_t)type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8], (uint64_t (*)(void))sub_255FF3314);
    sub_255FF3314(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, v9);
    uint64_t v11 = v10;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_256176AA8();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12))
      {
        sub_255FF3314(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v7, v8, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v7, 0, 1, v12);
      }
      uint64_t v15 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
      uint64_t v16 = &v7[v15];
      uint64_t v17 = &v8[v15];
      uint64_t v18 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_255FF1EF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255FF1F04);
}

uint64_t sub_255FF1F04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_255FF3314(0, &qword_269F444B8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_255FF1FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255FF1FF8);
}

uint64_t sub_255FF1FF8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_255FF3314(0, &qword_269F444B8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ValenceSlider()
{
  uint64_t result = qword_269F444C0;
  if (!qword_269F444C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_255FF211C()
{
  sub_255FF3314(319, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_255FF21EC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255FF2208@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v116 = a2;
  uint64_t v110 = type metadata accessor for ValenceSliderCaptions() - 8;
  MEMORY[0x270FA5388](v110);
  uint64_t v109 = (uint64_t *)((char *)&v94 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v115 = type metadata accessor for ValenceSliderCaptions;
  sub_255FF324C(0, &qword_269F44520, (void (*)(uint64_t))type metadata accessor for ValenceSliderCaptions);
  uint64_t v113 = v4 - 8;
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v114 = (uint64_t)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v111 = (uint64_t)&v94 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v112 = (uint64_t)&v94 - v9;
  uint64_t v10 = type metadata accessor for ValenceSelectionPhaseSpecs();
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v108 = (uint64_t)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v106 = (uint64_t)&v94 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v100 = (uint64_t)&v94 - v15;
  uint64_t v16 = type metadata accessor for ValenceSliderStyle();
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  id v19 = (uint64_t *)((char *)&v94 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v94 - v20;
  sub_255FF319C();
  uint64_t v94 = v22;
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  id v25 = (char *)&v94 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FF3098();
  uint64_t v98 = v26;
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  double v29 = (char *)&v94 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_255FF3098;
  sub_255FF324C(0, &qword_269F444F8, (void (*)(uint64_t))sub_255FF3098);
  uint64_t v96 = v30;
  MEMORY[0x270FA5388](v30);
  char v32 = (char *)&v94 - v31;
  sub_255FF300C();
  MEMORY[0x270FA5388](v33 - 8);
  uint64_t v99 = (char *)&v94 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_255FF300C;
  sub_255FF324C(0, &qword_269F444E8, (void (*)(uint64_t))sub_255FF300C);
  uint64_t v103 = v35 - 8;
  uint64_t v36 = MEMORY[0x270FA5388](v35 - 8);
  uint64_t v107 = (uint64_t)&v94 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v101 = (uint64_t)&v94 - v39;
  MEMORY[0x270FA5388](v38);
  uint64_t v102 = (uint64_t)&v94 - v40;
  uint64_t v41 = *a1;
  uint64_t v42 = a1[1];
  uint64_t v43 = a1[2];
  uint64_t v117 = a1;
  *(void *)&long long v118 = v41;
  *((void *)&v118 + 1) = v42;
  uint64_t v119 = v43;
  sub_255FF343C(0, (unint64_t *)&qword_269F443F8, MEMORY[0x263F8D538], MEMORY[0x263F1B750]);
  sub_256177748();
  long long v118 = xmmword_2561A2570;
  sub_255FF32B0();
  sub_256177688();
  uint64_t v44 = sub_256177488();
  *id v19 = 0x3FB0000000000000;
  v19[1] = v44;
  id v45 = (void *)((char *)v19 + *(int *)(v16 + 20));
  uint64_t *v45 = swift_getKeyPath();
  id v46 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  uint64_t v95 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  sub_255FF3314(0, &qword_269F42FB8, MEMORY[0x263F18DD8], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  id v47 = (void *)((char *)v19 + *(int *)(v16 + 24));
  uint64_t *v47 = swift_getKeyPath();
  sub_255FF3314(0, &qword_269F47D00, MEMORY[0x263F18520], v46);
  uint64_t v97 = v48;
  swift_storeEnumTagMultiPayload();
  sub_255FF3378((uint64_t)v19, (uint64_t)v21);
  sub_255FF3204(&qword_269F44510, (void (*)(uint64_t))sub_255FF319C);
  sub_255FF3204(&qword_269F44518, (void (*)(uint64_t))type metadata accessor for ValenceSliderStyle);
  uint64_t v49 = v94;
  sub_2561770B8();
  sub_255FF33DC((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for ValenceSliderStyle);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v49);
  type metadata accessor for ValenceSlider();
  uint64_t v50 = v100;
  sub_25611BB38(v100);
  sub_255FF33DC(v50, (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhaseSpecs);
  sub_2561778E8();
  sub_256175F38();
  uint64_t v51 = v98;
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v32, v29, v98);
  id v52 = &v32[*(int *)(v96 + 36)];
  long long v53 = v121;
  *(_OWORD *)id v52 = v120;
  *((_OWORD *)v52 + 1) = v53;
  *((_OWORD *)v52 + 2) = v122;
  (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v51);
  *(void *)&long long v118 = &unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B6100);
  sub_255FF343C(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_255FF3488();
  uint64_t v54 = (uint64_t)v99;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_255FF35D4((uint64_t)v32, (uint64_t)&qword_269F444F8, (uint64_t)v104, MEMORY[0x263F18868], (uint64_t (*)(void))sub_255FF324C);
  LOBYTE(v32) = sub_256176DA8();
  uint64_t v55 = v106;
  sub_25611BB38(v106);
  sub_255FF33DC(v55, (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhaseSpecs);
  sub_256175D48();
  uint64_t v57 = v56;
  uint64_t v59 = v58;
  uint64_t v61 = v60;
  uint64_t v63 = v62;
  uint64_t v64 = v101;
  sub_255FF36B0(v54, v101, (uint64_t (*)(void))sub_255FF300C);
  uint64_t v65 = v64 + *(int *)(v103 + 44);
  *(unsigned char *)uint64_t v65 = (_BYTE)v32;
  *(void *)(v65 + 8) = v57;
  *(void *)(v65 + 16) = v59;
  *(void *)(v65 + 24) = v61;
  *(void *)(v65 + 32) = v63;
  *(unsigned char *)(v65 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
  sub_255FF33DC(v54, (uint64_t (*)(void))sub_255FF300C);
  uint64_t v66 = v102;
  uint64_t v67 = (void (*)(uint64_t))v105;
  sub_255FF3634(v64, v102, &qword_269F444E8, (void (*)(uint64_t))v105);
  LOBYTE(v51) = *((unsigned char *)v117 + 24);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v69 = (uint64_t)v109;
  *uint64_t v109 = KeyPath;
  sub_255FF3314(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, v95);
  swift_storeEnumTagMultiPayload();
  uint64_t v70 = v110;
  uint64_t v71 = (uint64_t *)(v69 + *(int *)(v110 + 28));
  *uint64_t v71 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  *(unsigned char *)(v69 + *(int *)(v70 + 32)) = v51;
  LOBYTE(v71) = sub_256176D78();
  uint64_t v72 = v108;
  sub_25611BB38(v108);
  sub_255FF33DC(v72, (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhaseSpecs);
  sub_256175D48();
  uint64_t v74 = v73;
  uint64_t v76 = v75;
  uint64_t v78 = v77;
  uint64_t v80 = v79;
  uint64_t v81 = v111;
  sub_255FF36B0(v69, v111, (uint64_t (*)(void))type metadata accessor for ValenceSliderCaptions);
  uint64_t v82 = v81 + *(int *)(v113 + 44);
  *(unsigned char *)uint64_t v82 = (_BYTE)v71;
  *(void *)(v82 + 8) = v74;
  *(void *)(v82 + 16) = v76;
  *(void *)(v82 + 24) = v78;
  *(void *)(v82 + 32) = v80;
  *(unsigned char *)(v82 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
  sub_255FF33DC(v69, (uint64_t (*)(void))type metadata accessor for ValenceSliderCaptions);
  uint64_t v83 = v112;
  uint64_t v84 = (void (*)(uint64_t))v115;
  sub_255FF3634(v81, v112, &qword_269F44520, (void (*)(uint64_t))v115);
  uint64_t v85 = v66;
  uint64_t v86 = v66;
  uint64_t v87 = v107;
  sub_255FF3718(v85, v107, &qword_269F444E8, v67);
  uint64_t v88 = v114;
  uint64_t v89 = v84;
  sub_255FF3718(v83, v114, &qword_269F44520, v84);
  uint64_t v90 = v116;
  sub_255FF3718(v87, v116, &qword_269F444E8, v67);
  sub_255FF2F4C();
  sub_255FF3718(v88, v90 + *(int *)(v91 + 48), &qword_269F44520, v89);
  uint64_t v92 = MEMORY[0x263F18C18];
  sub_255FF35D4(v83, (uint64_t)&qword_269F44520, (uint64_t)v89, MEMORY[0x263F18C18], (uint64_t (*)(void))sub_255FF324C);
  sub_255FF35D4(v86, (uint64_t)&qword_269F444E8, (uint64_t)v67, v92, (uint64_t (*)(void))sub_255FF324C);
  sub_255FF35D4(v88, (uint64_t)&qword_269F44520, (uint64_t)v89, v92, (uint64_t (*)(void))sub_255FF324C);
  return sub_255FF35D4(v87, (uint64_t)&qword_269F444E8, (uint64_t)v67, v92, (uint64_t (*)(void))sub_255FF324C);
}

uint64_t sub_255FF2E70@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_256176788();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  sub_255FF2EB4();
  return sub_255FF2208(v1, a1 + *(int *)(v3 + 44));
}

void sub_255FF2EB4()
{
  if (!qword_269F444D0)
  {
    sub_255FF3314(255, &qword_269F444D8, (uint64_t (*)(uint64_t))sub_255FF2F4C, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_256176048();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F444D0);
    }
  }
}

void sub_255FF2F4C()
{
  if (!qword_269F444E0)
  {
    sub_255FF324C(255, &qword_269F444E8, (void (*)(uint64_t))sub_255FF300C);
    sub_255FF324C(255, &qword_269F44520, (void (*)(uint64_t))type metadata accessor for ValenceSliderCaptions);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F444E0);
    }
  }
}

void sub_255FF300C()
{
  if (!qword_269F444F0)
  {
    sub_255FF324C(255, &qword_269F444F8, (void (*)(uint64_t))sub_255FF3098);
    sub_256176D38();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F444F0);
    }
  }
}

void sub_255FF3098()
{
  if (!qword_269F44500)
  {
    sub_255FF319C();
    type metadata accessor for ValenceSliderStyle();
    sub_255FF3204(&qword_269F44510, (void (*)(uint64_t))sub_255FF319C);
    sub_255FF3204(&qword_269F44518, (void (*)(uint64_t))type metadata accessor for ValenceSliderStyle);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F44500);
    }
  }
}

void sub_255FF319C()
{
  if (!qword_269F44508)
  {
    unint64_t v0 = sub_256177698();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44508);
    }
  }
}

uint64_t sub_255FF3204(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_255FF324C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_255FF32B0()
{
  unint64_t result = qword_269F44528;
  if (!qword_269F44528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44528);
  }
  return result;
}

void sub_255FF3314(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_255FF3378(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ValenceSliderStyle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_255FF33DC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_255FF343C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_255FF3488()
{
  unint64_t result = qword_269F44530;
  if (!qword_269F44530)
  {
    sub_255FF324C(255, &qword_269F444F8, (void (*)(uint64_t))sub_255FF3098);
    sub_255FF319C();
    type metadata accessor for ValenceSliderStyle();
    sub_255FF3204(&qword_269F44510, (void (*)(uint64_t))sub_255FF319C);
    sub_255FF3204(&qword_269F44518, (void (*)(uint64_t))type metadata accessor for ValenceSliderStyle);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44530);
  }
  return result;
}

uint64_t sub_255FF35D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_255FF3634(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_255FF324C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_255FF36B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_255FF3718(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_255FF324C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_255FF3790()
{
  return sub_255FF3204(&qword_269F44538, (void (*)(uint64_t))sub_255FF37D8);
}

void sub_255FF37D8()
{
  if (!qword_269F44540)
  {
    sub_255FF3314(255, &qword_269F444D8, (uint64_t (*)(uint64_t))sub_255FF2F4C, MEMORY[0x263F1BAC8]);
    sub_255FF386C();
    unint64_t v0 = sub_2561776F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44540);
    }
  }
}

unint64_t sub_255FF386C()
{
  unint64_t result = qword_269F44548;
  if (!qword_269F44548)
  {
    sub_255FF3314(255, &qword_269F444D8, (uint64_t (*)(uint64_t))sub_255FF2F4C, MEMORY[0x263F1BAC8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44548);
  }
  return result;
}

uint64_t *sub_255FF38F4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    sub_255FF47BC(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_256176AA8();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v104 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
      uint64_t v102 = v8;
      uint64_t v101 = v6;
      if (v104(a2, 1, v7))
      {
        sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      uint64_t v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v12 = v11[5];
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = sub_256176158();
      uint64_t v16 = (void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
      uint64_t v103 = *v16;
      (*v16)(v13, v14, v15);
      *((unsigned char *)a1 + v11[6]) = *((unsigned char *)a2 + v11[6]);
      uint64_t v17 = v11[7];
      uint64_t v18 = (char *)a1 + v17;
      id v19 = (char *)a2 + v17;
      uint64_t v20 = sub_256175D98();
      uint64_t v100 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
      v100(v18, v19, v20);
      uint64_t v21 = v11[8];
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      if (v104((uint64_t *)((char *)a2 + v21), 1, v7))
      {
        sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v22, v23, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v102 + 56))(v22, 0, 1, v7);
      }
      uint64_t v25 = _s6StylesV8TimelineVMa(0);
      v103(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
      uint64_t v26 = v11[9];
      uint64_t v27 = (char *)a1 + v26;
      uint64_t v28 = (char *)a2 + v26;
      if (v104((uint64_t *)((char *)a2 + v26), 1, v7))
      {
        sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v27, v28, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v102 + 56))(v27, 0, 1, v7);
      }
      uint64_t v30 = _s6StylesV6NoDataVMa(0);
      v103(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
      v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
      uint64_t v31 = v11[10];
      char v32 = (char *)a1 + v31;
      uint64_t v33 = (char *)a2 + v31;
      if (v104((uint64_t *)((char *)a2 + v31), 1, v7))
      {
        sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v32, v33, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v102 + 56))(v32, 0, 1, v7);
      }
      uint64_t v35 = _s6StylesV11PlaceholderVMa(0);
      v103(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
      uint64_t v36 = v11[11];
      uint64_t v37 = (char *)a1 + v36;
      uint64_t v38 = (char *)a2 + v36;
      if (v104((uint64_t *)((char *)a2 + v36), 1, v7))
      {
        sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v37, v38, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v102 + 56))(v37, 0, 1, v7);
      }
      uint64_t v40 = _s6StylesV6SymbolVMa(0);
      v103(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
      uint64_t v41 = v11[12];
      uint64_t v42 = (char *)a1 + v41;
      uint64_t v43 = (char *)a2 + v41;
      if (v104((uint64_t *)((char *)a2 + v41), 1, v7))
      {
        sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v42, v43, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v102 + 56))(v42, 0, 1, v7);
      }
      id v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v103(&v42[v45[5]], &v43[v45[5]], v15);
      v42[v45[6]] = v43[v45[6]];
      v100(&v42[v45[7]], &v43[v45[7]], v20);
      uint64_t v46 = v11[13];
      id v47 = (char *)a1 + v46;
      uint64_t v48 = (char *)a2 + v46;
      if (v104((uint64_t *)((char *)a2 + v46), 1, v7))
      {
        sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
        uint64_t v50 = v102;
      }
      else
      {
        uint64_t v50 = v102;
        (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v47, v48, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v102 + 56))(v47, 0, 1, v7);
      }
      uint64_t v51 = _s6StylesV5EmptyVMa(0);
      v103(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
      v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
      uint64_t v52 = v11[14];
      long long v53 = (char *)a1 + v52;
      uint64_t v54 = (char *)a2 + v52;
      if (v104((uint64_t *)((char *)a2 + v52), 1, v7))
      {
        sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v53, v54, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v7);
      }
      uint64_t v56 = _s6StylesV5DailyVMa(0);
      v103(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      uint64_t v57 = v11[15];
      uint64_t v58 = (char *)a1 + v57;
      uint64_t v59 = (char *)a2 + v57;
      if (v104((uint64_t *)((char *)a2 + v57), 1, v7))
      {
        sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v58, v59, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v7);
      }
      uint64_t v61 = _s6StylesV9MomentaryVMa(0);
      v103(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
      uint64_t v62 = v11[16];
      uint64_t v63 = (char *)a1 + v62;
      uint64_t v64 = (char *)a2 + v62;
      if (v104((uint64_t *)((char *)a2 + v62), 1, v7))
      {
        sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v63, v64, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v7);
      }
      uint64_t v66 = _s6StylesV6HeaderVMa(0);
      v103(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
      uint64_t v67 = v11[17];
      uint64_t v68 = (char *)a1 + v67;
      uint64_t v69 = (char *)a2 + v67;
      if (v104((uint64_t *)((char *)a2 + v67), 1, v7))
      {
        sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v68, v69, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v7);
      }
      uint64_t v71 = _s6StylesV11ChartButtonVMa(0);
      v103(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
      uint64_t v72 = v11[18];
      uint64_t v73 = (char *)a1 + v72;
      uint64_t v74 = (char *)a2 + v72;
      if (v104((uint64_t *)((char *)a2 + v72), 1, v7))
      {
        sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v73, v74, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v7);
      }
      uint64_t v76 = _s6StylesV15LogButtonFooterVMa(0);
      v103(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
      swift_storeEnumTagMultiPayload();
      uint64_t v6 = v101;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v77 = *(int *)(v6 + 20);
    uint64_t v78 = (char *)a1 + v77;
    uint64_t v79 = (char *)a2 + v77;
    uint64_t v80 = sub_2561758A8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 16))(v78, v79, v80);
    uint64_t v81 = (int *)_s5EntryVMa();
    uint64_t v82 = v81[5];
    uint64_t v83 = &v78[v82];
    uint64_t v84 = &v79[v82];
    uint64_t v86 = *(void *)v84;
    uint64_t v85 = *((void *)v84 + 1);
    *(void *)uint64_t v83 = v86;
    *((void *)v83 + 1) = v85;
    uint64_t v87 = v81[6];
    uint64_t v88 = &v78[v87];
    uint64_t v89 = &v79[v87];
    uint64_t v90 = *((void *)v89 + 1);
    *(void *)uint64_t v88 = *(void *)v89;
    *((void *)v88 + 1) = v90;
    uint64_t v91 = v81[7];
    uint64_t v92 = &v78[v91];
    uint64_t v93 = &v79[v91];
    uint64_t v94 = *((void *)v93 + 1);
    *(void *)uint64_t v92 = *(void *)v93;
    *((void *)v92 + 1) = v94;
    uint64_t v95 = v81[8];
    uint64_t v96 = &v78[v95];
    uint64_t v97 = &v79[v95];
    uint64_t v98 = *((void *)v97 + 1);
    *(void *)uint64_t v96 = *(void *)v97;
    *((void *)v96 + 1) = v98;
    *(void *)&v78[v81[9]] = *(void *)&v79[v81[9]];
    *(uint64_t *)((char *)a1 + *(int *)(v6 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v6 + 24));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

void sub_255FF47BC(uint64_t a1)
{
}

void sub_255FF47F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_255FF4854(uint64_t a1, uint64_t a2)
{
  sub_255FF47BC(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v44 = a2;
    uint64_t v4 = sub_256176AA8();
    uint64_t v5 = *(void *)(v4 - 8);
    uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (!v6(a1, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    }
    uint64_t v7 = type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v8 = a1 + *(int *)(v7 + 20);
    uint64_t v9 = sub_256176158();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    uint64_t v11 = v8;
    uint64_t v12 = (int *)v7;
    v10(v11, v9);
    uint64_t v13 = a1 + *(int *)(v7 + 28);
    uint64_t v14 = sub_256175D98();
    uint64_t v42 = *(void (**)(uint64_t))(*(void *)(v14 - 8) + 8);
    uint64_t v43 = v14;
    v42(v13);
    uint64_t v15 = a1 + v12[8];
    if (!v6(v15, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v15, v4);
    }
    uint64_t v16 = _s6StylesV8TimelineVMa(0);
    v10(v15 + *(int *)(v16 + 20), v9);
    uint64_t v17 = a1 + v12[9];
    if (!v6(v17, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v17, v4);
    }
    uint64_t v18 = _s6StylesV6NoDataVMa(0);
    v10(v17 + *(int *)(v18 + 20), v9);
    uint64_t v19 = a1 + v12[10];
    if (!v6(v19, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v19, v4);
    }
    uint64_t v20 = _s6StylesV11PlaceholderVMa(0);
    v10(v19 + *(int *)(v20 + 20), v9);
    uint64_t v21 = a1 + v12[11];
    if (!v6(v21, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v21, v4);
    }
    uint64_t v22 = _s6StylesV6SymbolVMa(0);
    v10(v21 + *(int *)(v22 + 20), v9);
    uint64_t v23 = a1 + v12[12];
    if (!v6(v23, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v23, v4);
    }
    uint64_t v45 = v5;
    uint64_t v24 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v10(v23 + *(int *)(v24 + 20), v9);
    ((void (*)(uint64_t, uint64_t))v42)(v23 + *(int *)(v24 + 28), v43);
    uint64_t v25 = v12;
    uint64_t v26 = a1 + v12[13];
    if (!v6(v26, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v26, v4);
    }
    uint64_t v27 = _s6StylesV5EmptyVMa(0);
    v10(v26 + *(int *)(v27 + 20), v9);
    uint64_t v28 = a1 + v25[14];
    if (!v6(v28, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v28, v4);
    }
    uint64_t v29 = _s6StylesV5DailyVMa(0);
    v10(v28 + *(int *)(v29 + 20), v9);
    uint64_t v30 = a1 + v25[15];
    if (!v6(v30, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v30, v4);
    }
    uint64_t v31 = _s6StylesV9MomentaryVMa(0);
    v10(v30 + *(int *)(v31 + 20), v9);
    uint64_t v32 = a1 + v25[16];
    uint64_t v33 = v9;
    if (!v6(v32, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v32, v4);
    }
    uint64_t v34 = _s6StylesV6HeaderVMa(0);
    v10(v32 + *(int *)(v34 + 20), v9);
    uint64_t v35 = a1 + v25[17];
    if (!v6(v35, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v35, v4);
    }
    uint64_t v36 = _s6StylesV11ChartButtonVMa(0);
    v10(v35 + *(int *)(v36 + 20), v9);
    uint64_t v37 = a1 + v25[18];
    if (!v6(v37, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v37, v4);
    }
    uint64_t v38 = _s6StylesV15LogButtonFooterVMa(0);
    v10(v37 + *(int *)(v38 + 20), v33);
    a2 = v44;
  }
  else
  {
    swift_release();
  }
  uint64_t v39 = a1 + *(int *)(a2 + 20);
  uint64_t v40 = sub_2561758A8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v39, v40);
  _s5EntryVMa();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_255FF4EEC(void *a1, void *a2, uint64_t a3)
{
  sub_255FF47BC(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256176AA8();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v102 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48);
    uint64_t v99 = a3;
    uint64_t v100 = v7;
    if (v102(a2, 1, v6))
    {
      sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    uint64_t v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v10 = v9[5];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_256176158();
    uint64_t v14 = (void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    uint64_t v101 = *v14;
    (*v14)(v11, v12, v13);
    *((unsigned char *)a1 + v9[6]) = *((unsigned char *)a2 + v9[6]);
    uint64_t v15 = v9[7];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_256175D98();
    uint64_t v98 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
    v98(v16, v17, v18);
    uint64_t v19 = v9[8];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    if (v102((void *)((char *)a2 + v19), 1, v6))
    {
      sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v20, v21, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v100 + 56))(v20, 0, 1, v6);
    }
    uint64_t v23 = _s6StylesV8TimelineVMa(0);
    v101(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
    uint64_t v24 = v9[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    if (v102((void *)((char *)a2 + v24), 1, v6))
    {
      sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v25, v26, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v100 + 56))(v25, 0, 1, v6);
    }
    uint64_t v28 = _s6StylesV6NoDataVMa(0);
    v101(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
    v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
    uint64_t v29 = v9[10];
    uint64_t v30 = (char *)a1 + v29;
    uint64_t v31 = (char *)a2 + v29;
    if (v102((void *)((char *)a2 + v29), 1, v6))
    {
      sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v30, v31, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v100 + 56))(v30, 0, 1, v6);
    }
    uint64_t v33 = _s6StylesV11PlaceholderVMa(0);
    v101(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v13);
    uint64_t v34 = v9[11];
    uint64_t v35 = (char *)a1 + v34;
    uint64_t v36 = (char *)a2 + v34;
    if (v102((void *)((char *)a2 + v34), 1, v6))
    {
      sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v35, v36, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v100 + 56))(v35, 0, 1, v6);
    }
    uint64_t v38 = _s6StylesV6SymbolVMa(0);
    v101(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v13);
    uint64_t v39 = v9[12];
    uint64_t v40 = (char *)a1 + v39;
    uint64_t v41 = (char *)a2 + v39;
    if (v102((void *)((char *)a2 + v39), 1, v6))
    {
      sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v40, v41, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v100 + 56))(v40, 0, 1, v6);
    }
    uint64_t v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v101(&v40[v43[5]], &v41[v43[5]], v13);
    v40[v43[6]] = v41[v43[6]];
    v98(&v40[v43[7]], &v41[v43[7]], v18);
    uint64_t v44 = v9[13];
    uint64_t v45 = (char *)a1 + v44;
    uint64_t v46 = (char *)a2 + v44;
    if (v102((void *)((char *)a2 + v44), 1, v6))
    {
      sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
      uint64_t v48 = v100;
    }
    else
    {
      uint64_t v48 = v100;
      (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v45, v46, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v100 + 56))(v45, 0, 1, v6);
    }
    uint64_t v49 = _s6StylesV5EmptyVMa(0);
    v101(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v13);
    v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
    uint64_t v50 = v9[14];
    uint64_t v51 = (char *)a1 + v50;
    uint64_t v52 = (char *)a2 + v50;
    if (v102((void *)((char *)a2 + v50), 1, v6))
    {
      sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v52, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v6);
    }
    uint64_t v54 = _s6StylesV5DailyVMa(0);
    v101(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v13);
    v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
    uint64_t v55 = v9[15];
    uint64_t v56 = (char *)a1 + v55;
    uint64_t v57 = (char *)a2 + v55;
    if (v102((void *)((char *)a2 + v55), 1, v6))
    {
      sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v56, v57, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v6);
    }
    uint64_t v59 = _s6StylesV9MomentaryVMa(0);
    v101(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v13);
    uint64_t v60 = v9[16];
    uint64_t v61 = (char *)a1 + v60;
    uint64_t v62 = (char *)a2 + v60;
    if (v102((void *)((char *)a2 + v60), 1, v6))
    {
      sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v6);
    }
    uint64_t v64 = _s6StylesV6HeaderVMa(0);
    v101(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v13);
    uint64_t v65 = v9[17];
    uint64_t v66 = (char *)a1 + v65;
    uint64_t v67 = (char *)a2 + v65;
    if (v102((void *)((char *)a2 + v65), 1, v6))
    {
      sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v67, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v6);
    }
    uint64_t v69 = _s6StylesV11ChartButtonVMa(0);
    v101(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v13);
    uint64_t v70 = v9[18];
    uint64_t v71 = (char *)a1 + v70;
    uint64_t v72 = (char *)a2 + v70;
    if (v102((void *)((char *)a2 + v70), 1, v6))
    {
      sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v72, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v6);
    }
    uint64_t v74 = _s6StylesV15LogButtonFooterVMa(0);
    v101(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v13);
    swift_storeEnumTagMultiPayload();
    a3 = v99;
  }
  else
  {
    *a1 = *a2;
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v75 = *(int *)(a3 + 20);
  uint64_t v76 = (char *)a1 + v75;
  uint64_t v77 = (char *)a2 + v75;
  uint64_t v78 = sub_2561758A8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16))(v76, v77, v78);
  uint64_t v79 = (int *)_s5EntryVMa();
  uint64_t v80 = v79[5];
  uint64_t v81 = &v76[v80];
  uint64_t v82 = &v77[v80];
  uint64_t v84 = *(void *)v82;
  uint64_t v83 = *((void *)v82 + 1);
  *(void *)uint64_t v81 = v84;
  *((void *)v81 + 1) = v83;
  uint64_t v85 = v79[6];
  uint64_t v86 = &v76[v85];
  uint64_t v87 = &v77[v85];
  uint64_t v88 = *((void *)v87 + 1);
  *(void *)uint64_t v86 = *(void *)v87;
  *((void *)v86 + 1) = v88;
  uint64_t v89 = v79[7];
  uint64_t v90 = &v76[v89];
  uint64_t v91 = &v77[v89];
  uint64_t v92 = *((void *)v91 + 1);
  *(void *)uint64_t v90 = *(void *)v91;
  *((void *)v90 + 1) = v92;
  uint64_t v93 = v79[8];
  uint64_t v94 = &v76[v93];
  uint64_t v95 = &v77[v93];
  uint64_t v96 = *((void *)v95 + 1);
  *(void *)uint64_t v94 = *(void *)v95;
  *((void *)v94 + 1) = v96;
  *(void *)&v76[v79[9]] = *(void *)&v77[v79[9]];
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_255FF5D60(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_255FFD640((uint64_t)a1, (uint64_t (*)(void))sub_255FF47BC);
    sub_255FF47BC(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_256176AA8();
      uint64_t v7 = *(void *)(v6 - 8);
      uint64_t v97 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48);
      uint64_t v94 = a3;
      uint64_t v95 = v7;
      if (v97(a2, 1, v6))
      {
        sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      uint64_t v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v10 = v9[5];
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_256176158();
      uint64_t v14 = (void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
      uint64_t v96 = *v14;
      (*v14)(v11, v12, v13);
      *((unsigned char *)a1 + v9[6]) = *((unsigned char *)a2 + v9[6]);
      uint64_t v15 = v9[7];
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = sub_256175D98();
      uint64_t v93 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
      v93(v16, v17, v18);
      uint64_t v19 = v9[8];
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      if (v97((void *)((char *)a2 + v19), 1, v6))
      {
        sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v20, v21, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v20, 0, 1, v6);
      }
      uint64_t v23 = _s6StylesV8TimelineVMa(0);
      v96(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
      uint64_t v24 = v9[9];
      uint64_t v25 = (char *)a1 + v24;
      uint64_t v26 = (char *)a2 + v24;
      if (v97((void *)((char *)a2 + v24), 1, v6))
      {
        sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v25, v26, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v25, 0, 1, v6);
      }
      uint64_t v28 = _s6StylesV6NoDataVMa(0);
      v96(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
      v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
      uint64_t v29 = v9[10];
      uint64_t v30 = (char *)a1 + v29;
      uint64_t v31 = (char *)a2 + v29;
      if (v97((void *)((char *)a2 + v29), 1, v6))
      {
        sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v30, v31, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v30, 0, 1, v6);
      }
      uint64_t v33 = _s6StylesV11PlaceholderVMa(0);
      v96(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v13);
      uint64_t v34 = v9[11];
      uint64_t v35 = (char *)a1 + v34;
      uint64_t v36 = (char *)a2 + v34;
      if (v97((void *)((char *)a2 + v34), 1, v6))
      {
        sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v35, v36, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v35, 0, 1, v6);
      }
      uint64_t v38 = _s6StylesV6SymbolVMa(0);
      v96(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v13);
      uint64_t v39 = v9[12];
      uint64_t v40 = (char *)a1 + v39;
      uint64_t v41 = (char *)a2 + v39;
      if (v97((void *)((char *)a2 + v39), 1, v6))
      {
        sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v40, v41, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v40, 0, 1, v6);
      }
      uint64_t v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v96(&v40[v43[5]], &v41[v43[5]], v13);
      v40[v43[6]] = v41[v43[6]];
      v93(&v40[v43[7]], &v41[v43[7]], v18);
      uint64_t v44 = v9[13];
      uint64_t v45 = (char *)a1 + v44;
      uint64_t v46 = (char *)a2 + v44;
      if (v97((void *)((char *)a2 + v44), 1, v6))
      {
        sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
        uint64_t v48 = v95;
      }
      else
      {
        uint64_t v48 = v95;
        (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v45, v46, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v45, 0, 1, v6);
      }
      uint64_t v49 = _s6StylesV5EmptyVMa(0);
      v96(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v13);
      v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
      uint64_t v50 = v9[14];
      uint64_t v51 = (char *)a1 + v50;
      uint64_t v52 = (char *)a2 + v50;
      if (v97((void *)((char *)a2 + v50), 1, v6))
      {
        sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v52, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v6);
      }
      uint64_t v54 = _s6StylesV5DailyVMa(0);
      v96(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v13);
      v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
      uint64_t v55 = v9[15];
      uint64_t v56 = (char *)a1 + v55;
      uint64_t v57 = (char *)a2 + v55;
      if (v97((void *)((char *)a2 + v55), 1, v6))
      {
        sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v56, v57, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v6);
      }
      uint64_t v59 = _s6StylesV9MomentaryVMa(0);
      v96(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v13);
      uint64_t v60 = v9[16];
      uint64_t v61 = (char *)a1 + v60;
      uint64_t v62 = (char *)a2 + v60;
      if (v97((void *)((char *)a2 + v60), 1, v6))
      {
        sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v6);
      }
      uint64_t v64 = _s6StylesV6HeaderVMa(0);
      v96(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v13);
      uint64_t v65 = v9[17];
      uint64_t v66 = (char *)a1 + v65;
      uint64_t v67 = (char *)a2 + v65;
      if (v97((void *)((char *)a2 + v65), 1, v6))
      {
        sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v67, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v6);
      }
      uint64_t v69 = _s6StylesV11ChartButtonVMa(0);
      v96(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v13);
      uint64_t v70 = v9[18];
      uint64_t v71 = (char *)a1 + v70;
      uint64_t v72 = (char *)a2 + v70;
      if (v97((void *)((char *)a2 + v70), 1, v6))
      {
        sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v72, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v6);
      }
      uint64_t v74 = _s6StylesV15LogButtonFooterVMa(0);
      v96(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v13);
      a3 = v94;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v75 = *(int *)(a3 + 20);
  uint64_t v76 = (char *)a1 + v75;
  uint64_t v77 = (char *)a2 + v75;
  uint64_t v78 = sub_2561758A8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 24))(v76, v77, v78);
  uint64_t v79 = (int *)_s5EntryVMa();
  uint64_t v80 = v79[5];
  uint64_t v81 = &v76[v80];
  uint64_t v82 = &v77[v80];
  *(void *)uint64_t v81 = *(void *)v82;
  *((void *)v81 + 1) = *((void *)v82 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v83 = v79[6];
  uint64_t v84 = &v76[v83];
  uint64_t v85 = &v77[v83];
  *(void *)uint64_t v84 = *(void *)v85;
  *((void *)v84 + 1) = *((void *)v85 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v86 = v79[7];
  uint64_t v87 = &v76[v86];
  uint64_t v88 = &v77[v86];
  *(void *)uint64_t v87 = *(void *)v88;
  *((void *)v87 + 1) = *((void *)v88 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v89 = v79[8];
  uint64_t v90 = &v76[v89];
  uint64_t v91 = &v77[v89];
  *(void *)uint64_t v90 = *(void *)v91;
  *((void *)v90 + 1) = *((void *)v91 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v76[v79[9]] = *(void *)&v77[v79[9]];
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_255FF6C40(char *a1, char *a2, uint64_t a3)
{
  sub_255FF47BC(0);
  uint64_t v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v84 = a3;
    uint64_t v8 = sub_256176AA8();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v87 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    uint64_t v85 = v9;
    if (v87(a2, 1, v8))
    {
      sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    uint64_t v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v12 = v11[5];
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    uint64_t v15 = sub_256176158();
    uint64_t v16 = (void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
    uint64_t v86 = *v16;
    (*v16)(v13, v14, v15);
    a1[v11[6]] = a2[v11[6]];
    uint64_t v17 = v11[7];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    uint64_t v20 = sub_256175D98();
    uint64_t v83 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32);
    v83(v18, v19, v20);
    uint64_t v21 = v11[8];
    uint64_t v22 = &a1[v21];
    uint64_t v23 = &a2[v21];
    if (v87(&a2[v21], 1, v8))
    {
      sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v22, v23, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v22, 0, 1, v8);
    }
    uint64_t v25 = _s6StylesV8TimelineVMa(0);
    v86(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
    uint64_t v26 = v11[9];
    uint64_t v27 = &a1[v26];
    uint64_t v28 = &a2[v26];
    if (v87(&a2[v26], 1, v8))
    {
      sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v27, v28, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v27, 0, 1, v8);
    }
    uint64_t v30 = _s6StylesV6NoDataVMa(0);
    v86(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
    v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
    uint64_t v31 = v11[10];
    uint64_t v32 = &a1[v31];
    uint64_t v33 = &a2[v31];
    if (v87(&a2[v31], 1, v8))
    {
      sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v32, v33, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v32, 0, 1, v8);
    }
    uint64_t v35 = _s6StylesV11PlaceholderVMa(0);
    v86(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
    uint64_t v36 = v11[11];
    uint64_t v37 = &a1[v36];
    uint64_t v38 = &a2[v36];
    if (v87(&a2[v36], 1, v8))
    {
      sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v37, v38, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v37, 0, 1, v8);
    }
    uint64_t v40 = _s6StylesV6SymbolVMa(0);
    v86(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
    uint64_t v41 = v11[12];
    uint64_t v42 = &a1[v41];
    uint64_t v43 = &a2[v41];
    if (v87(&a2[v41], 1, v8))
    {
      sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v42, v43, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v42, 0, 1, v8);
    }
    uint64_t v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v86(&v42[v45[5]], &v43[v45[5]], v15);
    v42[v45[6]] = v43[v45[6]];
    v83(&v42[v45[7]], &v43[v45[7]], v20);
    uint64_t v46 = v11[13];
    uint64_t v47 = &a1[v46];
    uint64_t v48 = &a2[v46];
    if (v87(&a2[v46], 1, v8))
    {
      sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
      uint64_t v50 = v85;
    }
    else
    {
      uint64_t v50 = v85;
      (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v47, v48, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v47, 0, 1, v8);
    }
    uint64_t v51 = _s6StylesV5EmptyVMa(0);
    v86(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
    v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
    uint64_t v52 = v11[14];
    uint64_t v53 = &a1[v52];
    uint64_t v54 = &a2[v52];
    if (v87(&a2[v52], 1, v8))
    {
      sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v53, v54, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v8);
    }
    uint64_t v56 = _s6StylesV5DailyVMa(0);
    v86(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
    v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
    uint64_t v57 = v11[15];
    uint64_t v58 = &a1[v57];
    uint64_t v59 = &a2[v57];
    if (v87(&a2[v57], 1, v8))
    {
      sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v58, v59, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v8);
    }
    uint64_t v61 = _s6StylesV9MomentaryVMa(0);
    v86(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
    uint64_t v62 = v11[16];
    uint64_t v63 = &a1[v62];
    uint64_t v64 = &a2[v62];
    if (v87(&a2[v62], 1, v8))
    {
      sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v63, v64, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v8);
    }
    uint64_t v66 = _s6StylesV6HeaderVMa(0);
    v86(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
    uint64_t v67 = v11[17];
    uint64_t v68 = &a1[v67];
    uint64_t v69 = &a2[v67];
    if (v87(&a2[v67], 1, v8))
    {
      sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v68, v69, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v8);
    }
    uint64_t v71 = _s6StylesV11ChartButtonVMa(0);
    v86(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
    uint64_t v72 = v11[18];
    uint64_t v73 = &a1[v72];
    uint64_t v74 = &a2[v72];
    if (v87(&a2[v72], 1, v8))
    {
      sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v73, v74, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v8);
    }
    a3 = v84;
    uint64_t v76 = _s6StylesV15LogButtonFooterVMa(0);
    v86(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  uint64_t v77 = *(int *)(a3 + 20);
  uint64_t v78 = &a1[v77];
  uint64_t v79 = &a2[v77];
  uint64_t v80 = sub_2561758A8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 32))(v78, v79, v80);
  uint64_t v81 = (int *)_s5EntryVMa();
  *(_OWORD *)&v78[v81[5]] = *(_OWORD *)&v79[v81[5]];
  *(_OWORD *)&v78[v81[6]] = *(_OWORD *)&v79[v81[6]];
  *(_OWORD *)&v78[v81[7]] = *(_OWORD *)&v79[v81[7]];
  *(_OWORD *)&v78[v81[8]] = *(_OWORD *)&v79[v81[8]];
  *(void *)&v78[v81[9]] = *(void *)&v79[v81[9]];
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_255FF7A74(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_255FFD640((uint64_t)a1, (uint64_t (*)(void))sub_255FF47BC);
    sub_255FF47BC(0);
    uint64_t v7 = v6;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_256176AA8();
      uint64_t v9 = *(void *)(v8 - 8);
      uint64_t v107 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
      uint64_t v104 = a3;
      uint64_t v105 = v9;
      if (v107(a2, 1, v8))
      {
        sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      uint64_t v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v12 = v11[5];
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      uint64_t v15 = sub_256176158();
      uint64_t v16 = (void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
      uint64_t v106 = *v16;
      (*v16)(v13, v14, v15);
      a1[v11[6]] = a2[v11[6]];
      uint64_t v17 = v11[7];
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      uint64_t v20 = sub_256175D98();
      uint64_t v103 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32);
      v103(v18, v19, v20);
      uint64_t v21 = v11[8];
      uint64_t v22 = &a1[v21];
      uint64_t v23 = &a2[v21];
      if (v107(&a2[v21], 1, v8))
      {
        sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v22, v23, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v22, 0, 1, v8);
      }
      uint64_t v25 = _s6StylesV8TimelineVMa(0);
      v106(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
      uint64_t v26 = v11[9];
      uint64_t v27 = &a1[v26];
      uint64_t v28 = &a2[v26];
      if (v107(&a2[v26], 1, v8))
      {
        sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v27, v28, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v27, 0, 1, v8);
      }
      uint64_t v30 = _s6StylesV6NoDataVMa(0);
      v106(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
      v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
      uint64_t v31 = v11[10];
      uint64_t v32 = &a1[v31];
      uint64_t v33 = &a2[v31];
      if (v107(&a2[v31], 1, v8))
      {
        sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v32, v33, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v32, 0, 1, v8);
      }
      uint64_t v35 = _s6StylesV11PlaceholderVMa(0);
      v106(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
      uint64_t v36 = v11[11];
      uint64_t v37 = &a1[v36];
      uint64_t v38 = &a2[v36];
      if (v107(&a2[v36], 1, v8))
      {
        sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v37, v38, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v37, 0, 1, v8);
      }
      uint64_t v40 = _s6StylesV6SymbolVMa(0);
      v106(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
      uint64_t v41 = v11[12];
      uint64_t v42 = &a1[v41];
      uint64_t v43 = &a2[v41];
      if (v107(&a2[v41], 1, v8))
      {
        sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v42, v43, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v42, 0, 1, v8);
      }
      uint64_t v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v106(&v42[v45[5]], &v43[v45[5]], v15);
      v42[v45[6]] = v43[v45[6]];
      v103(&v42[v45[7]], &v43[v45[7]], v20);
      uint64_t v46 = v11[13];
      uint64_t v47 = &a1[v46];
      uint64_t v48 = &a2[v46];
      if (v107(&a2[v46], 1, v8))
      {
        sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
        uint64_t v50 = v105;
      }
      else
      {
        uint64_t v50 = v105;
        (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v47, v48, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v47, 0, 1, v8);
      }
      uint64_t v51 = _s6StylesV5EmptyVMa(0);
      v106(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
      v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
      uint64_t v52 = v11[14];
      uint64_t v53 = &a1[v52];
      uint64_t v54 = &a2[v52];
      if (v107(&a2[v52], 1, v8))
      {
        sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v53, v54, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v8);
      }
      uint64_t v56 = _s6StylesV5DailyVMa(0);
      v106(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      uint64_t v57 = v11[15];
      uint64_t v58 = &a1[v57];
      uint64_t v59 = &a2[v57];
      if (v107(&a2[v57], 1, v8))
      {
        sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v58, v59, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v8);
      }
      uint64_t v61 = _s6StylesV9MomentaryVMa(0);
      v106(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
      uint64_t v62 = v11[16];
      uint64_t v63 = &a1[v62];
      uint64_t v64 = &a2[v62];
      if (v107(&a2[v62], 1, v8))
      {
        sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v63, v64, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v8);
      }
      uint64_t v66 = _s6StylesV6HeaderVMa(0);
      v106(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
      uint64_t v67 = v11[17];
      uint64_t v68 = &a1[v67];
      uint64_t v69 = &a2[v67];
      if (v107(&a2[v67], 1, v8))
      {
        sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v68, v69, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v8);
      }
      uint64_t v71 = _s6StylesV11ChartButtonVMa(0);
      v106(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
      uint64_t v72 = v11[18];
      uint64_t v73 = &a1[v72];
      uint64_t v74 = &a2[v72];
      if (v107(&a2[v72], 1, v8))
      {
        sub_255FF47F0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v73, v74, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v8);
      }
      uint64_t v76 = _s6StylesV15LogButtonFooterVMa(0);
      v106(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
      swift_storeEnumTagMultiPayload();
      a3 = v104;
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
  }
  uint64_t v77 = *(int *)(a3 + 20);
  uint64_t v78 = &a1[v77];
  uint64_t v79 = &a2[v77];
  uint64_t v80 = sub_2561758A8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 40))(v78, v79, v80);
  uint64_t v81 = (int *)_s5EntryVMa();
  uint64_t v82 = v81[5];
  uint64_t v83 = &v78[v82];
  uint64_t v84 = &v79[v82];
  uint64_t v86 = *(void *)v84;
  uint64_t v85 = *((void *)v84 + 1);
  *(void *)uint64_t v83 = v86;
  *((void *)v83 + 1) = v85;
  swift_bridgeObjectRelease();
  uint64_t v87 = v81[6];
  uint64_t v88 = &v78[v87];
  uint64_t v89 = &v79[v87];
  uint64_t v91 = *(void *)v89;
  uint64_t v90 = *((void *)v89 + 1);
  *(void *)uint64_t v88 = v91;
  *((void *)v88 + 1) = v90;
  swift_bridgeObjectRelease();
  uint64_t v92 = v81[7];
  uint64_t v93 = &v78[v92];
  uint64_t v94 = &v79[v92];
  uint64_t v96 = *(void *)v94;
  uint64_t v95 = *((void *)v94 + 1);
  *(void *)uint64_t v93 = v96;
  *((void *)v93 + 1) = v95;
  swift_bridgeObjectRelease();
  uint64_t v97 = v81[8];
  uint64_t v98 = &v78[v97];
  uint64_t v99 = &v79[v97];
  uint64_t v101 = *(void *)v99;
  uint64_t v100 = *((void *)v99 + 1);
  *(void *)uint64_t v98 = v101;
  *((void *)v98 + 1) = v100;
  swift_bridgeObjectRelease();
  *(void *)&v78[v81[9]] = *(void *)&v79[v81[9]];
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_255FF8914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_255FF8928);
}

uint64_t sub_255FF8928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_255FF47F0(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = _s5EntryVMa();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_255FF8A6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_255FF8A80);
}

uint64_t sub_255FF8A80(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_255FF47F0(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = _s5EntryVMa();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t _s19EntryMomentDataViewVMa()
{
  uint64_t result = qword_269F44550;
  if (!qword_269F44550) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_255FF8C0C()
{
  sub_255FF47BC(319);
  if (v0 <= 0x3F)
  {
    _s5EntryVMa();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_255FF8CE0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_255FF8CFC()
{
  return sub_256178928();
}

uint64_t sub_255FF8DD0()
{
  swift_bridgeObjectRetain();
  sub_256177F38();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_256176E38();
  swift_release();
  swift_retain();
  sub_256177448();
  swift_release();
  swift_bridgeObjectRetain();
  sub_256177F38();

  return swift_bridgeObjectRelease();
}

uint64_t sub_255FF8E98()
{
  return sub_256178928();
}

uint64_t sub_255FF8F60(_OWORD *a1, long long *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = *a2;
  long long v4 = a2[1];
  v7[2] = a1[2];
  v8[0] = v3;
  long long v5 = a2[2];
  v8[1] = v4;
  void v8[2] = v5;
  return sub_255FFDA04(v7, v8) & 1;
}

uint64_t sub_255FF8FA8()
{
  uint64_t v0 = sub_256176158();
  unint64_t v1 = *(void **)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  long long v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v15 - v5;
  uint64_t v7 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256119CA0((uint64_t)v9);
  uint64_t v10 = &v9[*(int *)(v7 + 20)];
  uint64_t v17 = (void (*)(char *, char *, uint64_t))v1[2];
  uint64_t v18 = v7;
  v17(v6, v10, v0);
  sub_255FFD640((uint64_t)v9, type metadata accessor for StateOfMindTimeline.Styles);
  uint64_t v11 = *MEMORY[0x263F18CF8];
  uint64_t v16 = (void (*)(char *, uint64_t, uint64_t))v1[13];
  v16(v4, v11, v0);
  LOBYTE(v7) = sub_256176148();
  uint64_t v12 = (void (*)(char *, uint64_t))v1[1];
  v12(v4, v0);
  v12(v6, v0);
  if (v7) {
    return 2;
  }
  sub_256119CA0((uint64_t)v9);
  v17(v6, &v9[*(int *)(v18 + 20)], v0);
  sub_255FFD640((uint64_t)v9, type metadata accessor for StateOfMindTimeline.Styles);
  v16(v4, *MEMORY[0x263F18CB8], v0);
  sub_255FFD6A0(&qword_269F43358, MEMORY[0x263F18D80]);
  char v14 = sub_256177E48();
  v12(v4, v0);
  v12(v6, v0);
  return (v14 & 1) == 0;
}

uint64_t sub_255FF927C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v42[6] = a2;
  sub_255FFC774(0);
  v42[7] = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FFC634(0);
  v42[3] = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F19B20];
  sub_255FFCB70(0, &qword_269F446A8, (uint64_t (*)(uint64_t))sub_255FFBD3C, (uint64_t (*)(uint64_t))sub_255FFC774, MEMORY[0x263F19B20]);
  v42[5] = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v42 - v11;
  sub_255FFCB70(0, &qword_269F446B0, (uint64_t (*)(uint64_t))sub_255FFBD84, (uint64_t (*)(uint64_t))sub_255FFC634, v9);
  v42[2] = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v42 - v14;
  sub_255FFBD3C(0);
  v42[4] = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FFBD84(0);
  v42[1] = v19;
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v25 = (char *)v42 - v24;
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v28 = (char *)v42 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)v42 - v29;
  int v31 = sub_255FF8FA8();
  if (v31)
  {
    if (v31 == 1)
    {
      uint64_t v32 = sub_255FF9934();
      *(void *)uint64_t v8 = sub_256176798();
      *((void *)v8 + 1) = 0;
      v8[16] = 0;
      sub_255FFCCF4(0, &qword_269F446C0, sub_255FFC67C);
      sub_255FFA6B4(a1, v32, (uint64_t)&v8[*(int *)(v33 + 44)]);
      swift_bridgeObjectRelease();
      sub_255FFCDFC((uint64_t)v8, (uint64_t)v15, (uint64_t (*)(void))sub_255FFC634);
      swift_storeEnumTagMultiPayload();
      sub_255FFCAD4();
      sub_255FFCB08();
      sub_256176898();
      sub_255FFCDFC((uint64_t)v18, (uint64_t)v12, (uint64_t (*)(void))sub_255FFBD3C);
      swift_storeEnumTagMultiPayload();
      sub_255FFCA00();
      sub_255FFCB3C();
      sub_256176898();
      sub_255FFD640((uint64_t)v18, (uint64_t (*)(void))sub_255FFBD3C);
      uint64_t v34 = sub_255FFC634;
      uint64_t v35 = (uint64_t)v8;
    }
    else
    {
      uint64_t v38 = sub_255FF9934();
      *(void *)uint64_t v5 = sub_256176798();
      *((void *)v5 + 1) = 0;
      v5[16] = 0;
      sub_255FFCCF4(0, &qword_269F446B8, sub_255FFC83C);
      sub_255FFA8D0(a1, (uint64_t)v38, (uint64_t)&v5[*(int *)(v39 + 44)]);
      swift_bridgeObjectRelease();
      sub_255FFCDFC((uint64_t)v5, (uint64_t)v12, (uint64_t (*)(void))sub_255FFC774);
      swift_storeEnumTagMultiPayload();
      sub_255FFCA00();
      sub_255FFCB3C();
      sub_256176898();
      uint64_t v34 = sub_255FFC774;
      uint64_t v35 = (uint64_t)v5;
    }
  }
  else
  {
    uint64_t v36 = sub_255FF9934();
    if (v36[2] < 2uLL) {
      uint64_t v37 = sub_256176678();
    }
    else {
      uint64_t v37 = sub_256176658();
    }
    *(void *)uint64_t v22 = v37;
    *((void *)v22 + 1) = 0;
    v22[16] = 0;
    sub_255FFCCF4(0, &qword_269F446C8, sub_255FFBDCC);
    sub_255FFA148(a1, v36, (uint64_t)&v22[*(int *)(v40 + 44)]);
    sub_255FFCD94((uint64_t)v22, (uint64_t)v25, (uint64_t (*)(void))sub_255FFBD84);
    sub_255FFCD94((uint64_t)v25, (uint64_t)v28, (uint64_t (*)(void))sub_255FFBD84);
    swift_bridgeObjectRelease();
    sub_255FFCD94((uint64_t)v28, (uint64_t)v30, (uint64_t (*)(void))sub_255FFBD84);
    sub_255FFCDFC((uint64_t)v30, (uint64_t)v15, (uint64_t (*)(void))sub_255FFBD84);
    swift_storeEnumTagMultiPayload();
    sub_255FFCAD4();
    sub_255FFCB08();
    sub_256176898();
    sub_255FFCDFC((uint64_t)v18, (uint64_t)v12, (uint64_t (*)(void))sub_255FFBD3C);
    swift_storeEnumTagMultiPayload();
    sub_255FFCA00();
    sub_255FFCB3C();
    sub_256176898();
    sub_255FFD640((uint64_t)v18, (uint64_t (*)(void))sub_255FFBD3C);
    uint64_t v34 = sub_255FFBD84;
    uint64_t v35 = (uint64_t)v30;
  }
  return sub_255FFD640(v35, (uint64_t (*)(void))v34);
}

void *sub_255FF9934()
{
  uint64_t v1 = sub_256176EE8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v69 = v1;
  uint64_t v70 = v2;
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FFD60C(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_256176F48();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256119CA0((uint64_t)v14);
  uint64_t v67 = type metadata accessor for StateOfMindTimeline.Styles;
  sub_255FFD640((uint64_t)v14, type metadata accessor for StateOfMindTimeline.Styles);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F1A6C8], v8);
  uint64_t v15 = *MEMORY[0x263F1A610];
  uint64_t v16 = sub_256176E58();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v7, v15, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v7, 0, 1, v16);
  sub_256176E88();
  sub_256176EA8();
  sub_255FFD640((uint64_t)v7, (uint64_t (*)(void))sub_255FFD60C);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v18 = *MEMORY[0x263F1A680];
  uint64_t v19 = v69;
  uint64_t v20 = v70;
  uint64_t v68 = *(void (**)(char *, uint64_t, uint64_t))(v70 + 104);
  LODWORD(v65) = v18;
  v68(v4, v18, v69);
  uint64_t v66 = sub_256176F08();
  swift_release();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v20 + 8);
  v21(v4, v19);
  sub_256119CA0((uint64_t)v14);
  uint64_t v22 = v67;
  sub_255FFD640((uint64_t)v14, v67);
  sub_256176DF8();
  uint64_t v23 = v18;
  uint64_t v24 = v68;
  v68(v4, v23, v19);
  uint64_t v70 = sub_256176F08();
  swift_release();
  v21(v4, v19);
  sub_256119CA0((uint64_t)v14);
  sub_255FFD640((uint64_t)v14, v22);
  sub_256176DF8();
  v24(v4, v65, v19);
  uint64_t v68 = (void (*)(char *, uint64_t, uint64_t))sub_256176F08();
  swift_release();
  v21(v4, v19);
  sub_256119CA0((uint64_t)v14);
  sub_255FFD640((uint64_t)v14, v22);
  uint64_t v25 = self;
  uint64_t v26 = MEMORY[0x25A29FE80](objc_msgSend(v25, sel_labelColor));
  sub_256119CA0((uint64_t)v14);
  sub_255FFD640((uint64_t)v14, v22);
  uint64_t v27 = MEMORY[0x25A29FE80](objc_msgSend(v25, sel_labelColor));
  sub_256119CA0((uint64_t)v14);
  sub_255FFD640((uint64_t)v14, v22);
  uint64_t v67 = (uint64_t (*)(uint64_t))MEMORY[0x25A29FE80](objc_msgSend(v25, sel_secondaryLabelColor));
  uint64_t v28 = v0 + *(int *)(_s19EntryMomentDataViewVMa() + 20);
  uint64_t v29 = _s5EntryVMa();
  uint64_t v30 = v29;
  int v31 = (uint64_t *)(v28 + *(int *)(v29 + 24));
  uint64_t v32 = *v31;
  unint64_t v33 = v31[1];
  uint64_t v34 = HIBYTE(v33) & 0xF;
  if ((v33 & 0x2000000000000000) == 0) {
    uint64_t v34 = v32 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v35 = (uint64_t *)(v28 + *(int *)(v29 + 20));
  uint64_t v36 = *v35;
  uint64_t v37 = v35[1];
  uint64_t v69 = v27;
  if (v34)
  {
    uint64_t v63 = v36;
    uint64_t v64 = v29;
    uint64_t v65 = v28;
    swift_bridgeObjectRetain();
    uint64_t v38 = v66;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v39 = sub_256096CD0(0, 2, 1, MEMORY[0x263F8EE78]);
    unint64_t v40 = v39[2];
    unint64_t v41 = v39[3];
    unint64_t v42 = v40 + 1;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    if (v40 >= v41 >> 1) {
      uint64_t v39 = sub_256096CD0((void *)(v41 > 1), v40 + 1, 1, v39);
    }
    v39[2] = v42;
    uint64_t v43 = &v39[6 * v40];
    v43[4] = v32;
    v43[5] = v33;
    v43[6] = v38;
    v43[7] = v26;
    v43[8] = 0x736C6562614CLL;
    v43[9] = 0xE600000000000000;
    unint64_t v44 = v39[3];
    int64_t v45 = v40 + 2;
    swift_bridgeObjectRetain();
    uint64_t v46 = v70;
    swift_retain();
    uint64_t v47 = v69;
    swift_retain();
    if (v42 >= v44 >> 1) {
      uint64_t v39 = sub_256096CD0((void *)(v44 > 1), v45, 1, v39);
    }
    v39[2] = v45;
    uint64_t v48 = &v39[6 * v42];
    v48[4] = v63;
    v48[5] = v37;
    v48[6] = v46;
    v48[7] = v47;
    v48[8] = 0x746E656D6F4DLL;
    v48[9] = 0xE600000000000000;
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v49 = v67;
    uint64_t v30 = v64;
    uint64_t v28 = v65;
  }
  else
  {
    uint64_t v50 = v66;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_256096CD0(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v52 = v39[2];
    unint64_t v51 = v39[3];
    if (v52 >= v51 >> 1) {
      uint64_t v39 = sub_256096CD0((void *)(v51 > 1), v52 + 1, 1, v39);
    }
    uint64_t v49 = v67;
    v39[2] = v52 + 1;
    uint64_t v53 = &v39[6 * v52];
    v53[4] = v36;
    v53[5] = v37;
    v53[6] = v50;
    v53[7] = v26;
    v53[8] = 0x746E656D6F4DLL;
    v53[9] = 0xE600000000000000;
  }
  uint64_t v54 = (uint64_t *)(v28 + *(int *)(v30 + 28));
  uint64_t v56 = *v54;
  unint64_t v55 = v54[1];
  uint64_t v57 = HIBYTE(v55) & 0xF;
  if ((v55 & 0x2000000000000000) == 0) {
    uint64_t v57 = v56 & 0xFFFFFFFFFFFFLL;
  }
  if (v57)
  {
    unint64_t v58 = v39[2];
    unint64_t v59 = v39[3];
    swift_bridgeObjectRetain();
    uint64_t v60 = v68;
    swift_retain();
    swift_retain();
    if (v58 >= v59 >> 1) {
      uint64_t v39 = sub_256096CD0((void *)(v59 > 1), v58 + 1, 1, v39);
    }
    v39[2] = v58 + 1;
    uint64_t v61 = &v39[6 * v58];
    v61[4] = v56;
    v61[5] = v55;
    v61[6] = v60;
    v61[7] = v49;
    v61[8] = 0xD000000000000011;
    v61[9] = 0x80000002561AA5C0;
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v39;
}

uint64_t sub_255FFA148@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v38 = a2;
  sub_255FFBF58(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v37 - v9;
  uint64_t v11 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FFBEE4(0, (unint64_t *)&qword_269F43440, &qword_269F43448);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v37 - v15;
  sub_255FFBE64();
  uint64_t v18 = v17 - 8;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v37 - v22;
  sub_255FFA500();
  char v24 = sub_256176DC8();
  sub_256119CA0((uint64_t)v13);
  sub_255FFD640((uint64_t)v13, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256175D48();
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  sub_255FFCBF4((uint64_t)v16, (uint64_t)v21);
  unint64_t v33 = &v21[*(int *)(v18 + 44)];
  *unint64_t v33 = v24;
  *((void *)v33 + 1) = v26;
  *((void *)v33 + 2) = v28;
  *((void *)v33 + 3) = v30;
  *((void *)v33 + 4) = v32;
  v33[40] = 0;
  sub_255FFCC78((uint64_t)v16);
  sub_255FFCD94((uint64_t)v21, (uint64_t)v23, (uint64_t (*)(void))sub_255FFBE64);
  *(void *)uint64_t v10 = sub_256176798();
  *((void *)v10 + 1) = 0;
  unsigned char v10[16] = 0;
  sub_255FFCCF4(0, &qword_269F446D0, sub_255FFBFA0);
  sub_255FFAFE8(v38, a1, (uint64_t)&v10[*(int *)(v34 + 44)]);
  sub_255FFCDFC((uint64_t)v23, (uint64_t)v21, (uint64_t (*)(void))sub_255FFBE64);
  sub_255FFCDFC((uint64_t)v10, (uint64_t)v8, (uint64_t (*)(void))sub_255FFBF58);
  sub_255FFCDFC((uint64_t)v21, a3, (uint64_t (*)(void))sub_255FFBE64);
  sub_255FFBFDC(0, &qword_269F44588, (void (*)(uint64_t))sub_255FFBE64, sub_255FFBF58);
  sub_255FFCDFC((uint64_t)v8, a3 + *(int *)(v35 + 48), (uint64_t (*)(void))sub_255FFBF58);
  sub_255FFD640((uint64_t)v10, (uint64_t (*)(void))sub_255FFBF58);
  sub_255FFD640((uint64_t)v23, (uint64_t (*)(void))sub_255FFBE64);
  sub_255FFD640((uint64_t)v8, (uint64_t (*)(void))sub_255FFBF58);
  return sub_255FFD640((uint64_t)v21, (uint64_t (*)(void))sub_255FFBE64);
}

uint64_t sub_255FFA500()
{
  uint64_t v1 = type metadata accessor for StateOfMindTimeline.Styles(0);
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v14 - v5;
  uint64_t v7 = _s19EntryMomentDataViewVMa();
  uint64_t v8 = v0 + *(int *)(v7 + 20);
  double v9 = *(double *)(v8 + *(int *)(_s5EntryVMa() + 36));
  LOBYTE(v15) = 5;
  StateOfMindVisualization.ValenceImageProvider.init(valence:imageScale:)(&v20, v9);
  uint64_t v11 = v20;
  uint64_t v10 = v21;
  uint64_t v12 = v22;
  sub_256119CA0((uint64_t)v6);
  sub_255FFD640((uint64_t)v6, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256119CA0((uint64_t)v4);
  sub_255FFD640((uint64_t)v4, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2561778E8();
  sub_256175F38();
  uint64_t v20 = v11;
  uint64_t v21 = v10;
  uint64_t v22 = v12;
  uint64_t v23 = v15;
  char v24 = v16;
  uint64_t v25 = v17;
  char v26 = v18;
  long long v27 = v19;
  sub_255F916B8(*(void **)(v0 + *(int *)(v7 + 24)), 0x7A696C6175736956, 0xED00006E6F697461);
  return swift_bridgeObjectRelease();
}

uint64_t sub_255FFA6B4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  sub_255FFBF58(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  double v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v21 - v10;
  sub_255FFBEE4(0, (unint64_t *)&qword_269F43440, &qword_269F43448);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v21 - v16;
  sub_255FFA500();
  *(void *)uint64_t v11 = sub_256176798();
  *((void *)v11 + 1) = 0;
  v11[16] = 0;
  sub_255FFCCF4(0, &qword_269F446D0, sub_255FFBFA0);
  sub_255FFAFE8(a2, a1, (uint64_t)&v11[*(int *)(v18 + 44)]);
  sub_255FFCBF4((uint64_t)v17, (uint64_t)v15);
  sub_255FFCDFC((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(void))sub_255FFBF58);
  sub_255FFCBF4((uint64_t)v15, a3);
  sub_255FFC6B0();
  sub_255FFCDFC((uint64_t)v9, a3 + *(int *)(v19 + 48), (uint64_t (*)(void))sub_255FFBF58);
  sub_255FFD640((uint64_t)v11, (uint64_t (*)(void))sub_255FFBF58);
  sub_255FFCC78((uint64_t)v17);
  sub_255FFD640((uint64_t)v9, (uint64_t (*)(void))sub_255FFBF58);
  return sub_255FFCC78((uint64_t)v15);
}

uint64_t sub_255FFA8D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v38 = a3;
  uint64_t v5 = _s19EntryMomentDataViewVMa();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5 - 8);
  sub_255FFC2B8(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v37 = (uint64_t)v34 - v12;
  sub_255FFC224();
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v36 = (uint64_t)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v34 - v16;
  uint64_t v35 = (uint64_t)v34 - v16;
  sub_255FFBEE4(0, (unint64_t *)&qword_269F43440, &qword_269F43448);
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  uint64_t v21 = (char *)v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)v34 - v22;
  sub_255FFA500();
  sub_255FFADA8((uint64_t)v17);
  *(void *)uint64_t v11 = sub_256176798();
  *((void *)v11 + 1) = 0;
  v11[16] = 0;
  sub_255FFCCF4(0, &qword_269F446E0, (void (*)(uint64_t))sub_255FFC300);
  void v34[2] = &v11[*(int *)(v24 + 44)];
  uint64_t v39 = a2;
  v34[1] = swift_getKeyPath();
  sub_255FFCDFC(a1, (uint64_t)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))_s19EntryMomentDataViewVMa);
  unint64_t v25 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v26 = swift_allocObject();
  sub_255FFCD94((uint64_t)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v26 + v25, (uint64_t (*)(void))_s19EntryMomentDataViewVMa);
  sub_255FFC3E8();
  sub_255FFBEE4(0, &qword_269F445D0, (unint64_t *)&qword_269F43530);
  sub_255FFD6A0(&qword_269F44608, (void (*)(uint64_t))sub_255FFC3E8);
  sub_255FFC440();
  sub_255FFC504();
  swift_bridgeObjectRetain();
  sub_2561777C8();
  uint64_t v27 = v37;
  sub_255FFCD94((uint64_t)v11, v37, (uint64_t (*)(void))sub_255FFC2B8);
  sub_255FFCBF4((uint64_t)v23, (uint64_t)v21);
  uint64_t v28 = v35;
  uint64_t v29 = v36;
  sub_255FFCDFC(v35, v36, (uint64_t (*)(void))sub_255FFC224);
  sub_255FFCDFC(v27, (uint64_t)v11, (uint64_t (*)(void))sub_255FFC2B8);
  uint64_t v30 = v38;
  sub_255FFCBF4((uint64_t)v21, v38);
  sub_255FFC870();
  uint64_t v32 = v31;
  sub_255FFCDFC(v29, v30 + *(int *)(v31 + 48), (uint64_t (*)(void))sub_255FFC224);
  sub_255FFCDFC((uint64_t)v11, v30 + *(int *)(v32 + 64), (uint64_t (*)(void))sub_255FFC2B8);
  sub_255FFD640(v27, (uint64_t (*)(void))sub_255FFC2B8);
  sub_255FFD640(v28, (uint64_t (*)(void))sub_255FFC224);
  sub_255FFCC78((uint64_t)v23);
  sub_255FFD640((uint64_t)v11, (uint64_t (*)(void))sub_255FFC2B8);
  sub_255FFD640(v29, (uint64_t (*)(void))sub_255FFC224);
  return sub_255FFCC78((uint64_t)v21);
}

uint64_t sub_255FFADA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v2 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = _s19EntryMomentDataViewVMa();
  uint64_t v5 = v1 + *(int *)(v29 + 20);
  uint64_t v6 = (uint64_t *)(v5 + *(int *)(_s5EntryVMa() + 32));
  uint64_t v7 = v6[1];
  uint64_t v31 = *v6;
  uint64_t v32 = v7;
  sub_255F5CE90();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_256177028();
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  sub_256119CA0((uint64_t)v4);
  sub_255FFD640((uint64_t)v4, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256176F28();
  uint64_t v27 = sub_256176FD8();
  uint64_t v28 = v13;
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  sub_255F67B2C(v8, v10, v12);
  swift_release();
  swift_bridgeObjectRelease();
  sub_256119CA0((uint64_t)v4);
  sub_255FFD640((uint64_t)v4, type metadata accessor for StateOfMindTimeline.Styles);
  id v18 = objc_msgSend(self, sel_secondaryLabelColor);
  uint64_t v31 = MEMORY[0x25A29FE80](v18);
  uint64_t v19 = v27;
  uint64_t v20 = sub_256176FA8();
  uint64_t v22 = v21;
  char v24 = v23 & 1;
  sub_255F67B2C(v19, v15, v17);
  swift_release();
  swift_bridgeObjectRelease();
  sub_255F91864(*(void **)(v1 + *(int *)(v29 + 24)), 1701669204, 0xE400000000000000);
  sub_255F67B2C(v20, v22, v24);
  return swift_bridgeObjectRelease();
}

uint64_t sub_255FFAFE8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v37 = a3;
  uint64_t v5 = _s19EntryMomentDataViewVMa();
  uint64_t v33 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v33 + 64);
  MEMORY[0x270FA5388](v5 - 8);
  sub_255FFC2B8(0);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v36 = (uint64_t)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  char v12 = (char *)&v33 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v35 = (uint64_t)&v33 - v13;
  sub_255FFC058(0);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  char v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v33 - v18;
  *(void *)uint64_t v19 = sub_256176648();
  *((void *)v19 + 1) = 0;
  unsigned char v19[16] = 1;
  sub_255FFCCF4(0, &qword_269F446D8, sub_255FFC0A0);
  uint64_t v21 = (uint64_t)&v19[*(int *)(v20 + 44)];
  uint64_t v34 = a2;
  sub_255FFB54C(a1, v21);
  uint64_t v22 = a1[2];
  sub_256178848();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  uint64_t v23 = swift_dynamicCastClass();
  if (!v23)
  {
    swift_bridgeObjectRelease();
    uint64_t v23 = MEMORY[0x263F8EE78];
  }
  uint64_t v24 = *(void *)(v23 + 16);
  swift_release();
  if (v24 == v22 - (v22 != 0))
  {
    uint64_t v25 = swift_dynamicCastClass();
    if (!v25)
    {
      swift_bridgeObjectRelease();
      uint64_t v25 = MEMORY[0x263F8EE78];
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v25 = sub_255FB3394((uint64_t)a1, (uint64_t)(a1 + 4), v22 != 0, (2 * v22) | 1);
  }
  swift_bridgeObjectRelease();
  *(void *)char v12 = sub_256176798();
  *((void *)v12 + 1) = 0;
  v12[16] = 0;
  sub_255FFCCF4(0, &qword_269F446E0, (void (*)(uint64_t))sub_255FFC300);
  uint64_t v38 = v25;
  swift_getKeyPath();
  sub_255FFCDFC(v34, (uint64_t)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))_s19EntryMomentDataViewVMa);
  unint64_t v26 = (*(unsigned __int8 *)(v33 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v27 = swift_allocObject();
  sub_255FFCD94((uint64_t)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v27 + v26, (uint64_t (*)(void))_s19EntryMomentDataViewVMa);
  sub_255FFC3E8();
  sub_255FFBEE4(0, &qword_269F445D0, (unint64_t *)&qword_269F43530);
  sub_255FFD6A0(&qword_269F44608, (void (*)(uint64_t))sub_255FFC3E8);
  sub_255FFC440();
  sub_255FFC504();
  sub_2561777C8();
  uint64_t v28 = v35;
  sub_255FFCD94((uint64_t)v12, v35, (uint64_t (*)(void))sub_255FFC2B8);
  sub_255FFCDFC((uint64_t)v19, (uint64_t)v17, (uint64_t (*)(void))sub_255FFC058);
  uint64_t v29 = v36;
  sub_255FFCDFC(v28, v36, (uint64_t (*)(void))sub_255FFC2B8);
  uint64_t v30 = v37;
  sub_255FFCDFC((uint64_t)v17, v37, (uint64_t (*)(void))sub_255FFC058);
  sub_255FFBFDC(0, &qword_269F445A8, sub_255FFC058, sub_255FFC2B8);
  sub_255FFCDFC(v29, v30 + *(int *)(v31 + 48), (uint64_t (*)(void))sub_255FFC2B8);
  sub_255FFD640(v28, (uint64_t (*)(void))sub_255FFC2B8);
  sub_255FFD640((uint64_t)v19, (uint64_t (*)(void))sub_255FFC058);
  sub_255FFD640(v29, (uint64_t (*)(void))sub_255FFC2B8);
  return sub_255FFD640((uint64_t)v17, (uint64_t (*)(void))sub_255FFC058);
}

uint64_t sub_255FFB54C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FFC224();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FFC1C4();
  uint64_t v48 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v45 - v14;
  sub_255FFC14C();
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v45 - v20;
  if (a1[2])
  {
    uint64_t v22 = a1[4];
    uint64_t v23 = a1[5];
    uint64_t v46 = v6;
    uint64_t v47 = v19;
    uint64_t v24 = v15;
    uint64_t v25 = a2;
    uint64_t v27 = a1[6];
    uint64_t v26 = a1[7];
    uint64_t v28 = a1[8];
    uint64_t v29 = a1[9];
    v49[0] = v22;
    v49[1] = v23;
    v49[2] = v27;
    v49[3] = v26;
    v49[4] = v28;
    v49[5] = v29;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_255FFB9E4(v49);
    swift_bridgeObjectRelease();
    a2 = v25;
    uint64_t v15 = v24;
    uint64_t v19 = v47;
    swift_release();
    uint64_t v6 = v46;
    swift_release();
    swift_bridgeObjectRelease();
    sub_255FFBEE4(0, &qword_269F445D0, (unint64_t *)&qword_269F43530);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v21, 0, 1, v30);
  }
  else
  {
    sub_255FFBEE4(0, &qword_269F445D0, (unint64_t *)&qword_269F43530);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v21, 1, 1, v31);
  }
  sub_255FFADA8((uint64_t)v9);
  char v32 = sub_256176DB8();
  sub_256119CA0((uint64_t)v6);
  sub_255FFD640((uint64_t)v6, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256175D48();
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  sub_255FFCDFC((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(void))sub_255FFC224);
  unint64_t v41 = &v13[*(int *)(v48 + 36)];
  *unint64_t v41 = v32;
  *((void *)v41 + 1) = v34;
  *((void *)v41 + 2) = v36;
  *((void *)v41 + 3) = v38;
  *((void *)v41 + 4) = v40;
  v41[40] = 0;
  sub_255FFD640((uint64_t)v9, (uint64_t (*)(void))sub_255FFC224);
  sub_255FFCD94((uint64_t)v13, (uint64_t)v15, (uint64_t (*)(void))sub_255FFC1C4);
  sub_255FFCDFC((uint64_t)v21, (uint64_t)v19, (uint64_t (*)(void))sub_255FFC14C);
  sub_255FFCDFC((uint64_t)v15, (uint64_t)v13, (uint64_t (*)(void))sub_255FFC1C4);
  sub_255FFCDFC((uint64_t)v19, a2, (uint64_t (*)(void))sub_255FFC14C);
  sub_255FFC0D4();
  uint64_t v43 = a2 + *(int *)(v42 + 48);
  *(void *)uint64_t v43 = 0;
  *(unsigned char *)(v43 + 8) = 1;
  sub_255FFCDFC((uint64_t)v13, a2 + *(int *)(v42 + 64), (uint64_t (*)(void))sub_255FFC1C4);
  sub_255FFD640((uint64_t)v15, (uint64_t (*)(void))sub_255FFC1C4);
  sub_255FFD640((uint64_t)v21, (uint64_t (*)(void))sub_255FFC14C);
  sub_255FFD640((uint64_t)v13, (uint64_t (*)(void))sub_255FFC1C4);
  return sub_255FFD640((uint64_t)v19, (uint64_t (*)(void))sub_255FFC14C);
}

uint64_t sub_255FFB9E4(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t v24 = *a1;
  uint64_t v25 = v3;
  sub_255F5CE90();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_256177028();
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  uint64_t v9 = sub_256176FD8();
  uint64_t v11 = v10;
  char v13 = v12 & 1;
  sub_255F67B2C(v4, v6, v8);
  swift_bridgeObjectRelease();
  uint64_t v23 = a1[3];
  uint64_t v24 = v23;
  swift_retain();
  uint64_t v14 = sub_256176FA8();
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  char v20 = v19 & 1;
  sub_255F67B2C(v9, v11, v13);
  swift_bridgeObjectRelease();
  sub_255FFCD68((uint64_t)&v23);
  uint64_t v24 = v14;
  uint64_t v25 = v16;
  char v26 = v20;
  uint64_t v27 = v18;
  __int16 v28 = 256;
  uint64_t v21 = _s19EntryMomentDataViewVMa();
  sub_255F91A00(*(void **)(v1 + *(int *)(v21 + 24)), a1[4], a1[5]);
  sub_255F67B2C(v14, v16, v20);
  return swift_bridgeObjectRelease();
}

uint64_t sub_255FFBB5C()
{
  uint64_t v1 = sub_256176BB8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FFBCC0(0);
  MEMORY[0x270FA5388](v5);
  char v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FF927C(v0, (uint64_t)v7);
  sub_256176B98();
  sub_255FFC94C();
  sub_256177208();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_255FFD640((uint64_t)v7, (uint64_t (*)(void))sub_255FFBCC0);
}

void sub_255FFBCC0(uint64_t a1)
{
}

void sub_255FFBCF4(uint64_t a1)
{
}

void sub_255FFBD3C(uint64_t a1)
{
}

void sub_255FFBD84(uint64_t a1)
{
}

void sub_255FFBDCC(uint64_t a1)
{
}

void sub_255FFBE08(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t), void (*a5)(uint64_t))
{
  if (!*a2)
  {
    sub_255FFBFDC(255, a3, a4, a5);
    unint64_t v6 = sub_256177978();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_255FFBE64()
{
  if (!qword_269F44590)
  {
    sub_255FFBEE4(255, (unint64_t *)&qword_269F43440, &qword_269F43448);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44590);
    }
  }
}

void sub_255FFBEE4(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_255F97354(255, a3);
    sub_256176D38();
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_255FFBF58(uint64_t a1)
{
}

void sub_255FFBFA0(uint64_t a1)
{
}

void sub_255FFBFDC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_255FFC058(uint64_t a1)
{
}

void sub_255FFC0A0(uint64_t a1)
{
}

void sub_255FFC0D4()
{
  if (!qword_269F445C0)
  {
    sub_255FFC14C();
    sub_255FFC1C4();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_269F445C0);
    }
  }
}

void sub_255FFC14C()
{
  if (!qword_269F445C8)
  {
    sub_255FFBEE4(255, &qword_269F445D0, (unint64_t *)&qword_269F43530);
    unint64_t v0 = sub_256178448();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F445C8);
    }
  }
}

void sub_255FFC1C4()
{
  if (!qword_269F445D8)
  {
    sub_255FFC224();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F445D8);
    }
  }
}

void sub_255FFC224()
{
  if (!qword_269F445E0)
  {
    sub_256176D38();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F445E0);
    }
  }
}

uint64_t sub_255FFC284()
{
  return sub_255FFD6A0(&qword_269F445E8, sub_255FFC0A0);
}

void sub_255FFC2B8(uint64_t a1)
{
}

void sub_255FFC300()
{
  if (!qword_269F445F8)
  {
    sub_255FFC3E8();
    sub_255FFBEE4(255, &qword_269F445D0, (unint64_t *)&qword_269F43530);
    sub_255FFD6A0(&qword_269F44608, (void (*)(uint64_t))sub_255FFC3E8);
    sub_255FFC440();
    unint64_t v0 = sub_2561777E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F445F8);
    }
  }
}

void sub_255FFC3E8()
{
  if (!qword_269F44600)
  {
    unint64_t v0 = sub_256178078();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44600);
    }
  }
}

unint64_t sub_255FFC440()
{
  unint64_t result = qword_269F44610;
  if (!qword_269F44610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44610);
  }
  return result;
}

unint64_t sub_255FFC494()
{
  unint64_t result = qword_269F44618;
  if (!qword_269F44618)
  {
    sub_255FFC300();
    sub_255FFC504();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44618);
  }
  return result;
}

unint64_t sub_255FFC504()
{
  unint64_t result = qword_269F44620;
  if (!qword_269F44620)
  {
    sub_255FFBEE4(255, &qword_269F445D0, (unint64_t *)&qword_269F43530);
    sub_255F973A0();
    sub_255FFD6A0(&qword_269F42EA0, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44620);
  }
  return result;
}

uint64_t sub_255FFC5CC()
{
  return sub_255FFD6A0(&qword_269F44628, sub_255FFBFA0);
}

uint64_t sub_255FFC600()
{
  return sub_255FFD6A0(&qword_269F44630, sub_255FFBDCC);
}

void sub_255FFC634(uint64_t a1)
{
}

void sub_255FFC67C(uint64_t a1)
{
}

void sub_255FFC6B0()
{
  if (!qword_269F44648)
  {
    sub_255FFBEE4(255, (unint64_t *)&qword_269F43440, &qword_269F43448);
    sub_255FFBF58(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F44648);
    }
  }
}

uint64_t sub_255FFC740()
{
  return sub_255FFD6A0(&qword_269F44650, sub_255FFC67C);
}

void sub_255FFC774(uint64_t a1)
{
}

void sub_255FFC7BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_255FFC83C(uint64_t a1)
{
}

void sub_255FFC870()
{
  if (!qword_269F44668)
  {
    sub_255FFBEE4(255, (unint64_t *)&qword_269F43440, &qword_269F43448);
    sub_255FFC224();
    sub_255FFC2B8(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_269F44668);
    }
  }
}

uint64_t sub_255FFC918()
{
  return sub_255FFD6A0(&qword_269F44670, sub_255FFC83C);
}

unint64_t sub_255FFC94C()
{
  unint64_t result = qword_269F44678;
  if (!qword_269F44678)
  {
    sub_255FFBCC0(255);
    sub_255FFCA48(&qword_269F44680, sub_255FFBCF4, (void (*)(void))sub_255FFCA00, (void (*)(void))sub_255FFCB3C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44678);
  }
  return result;
}

uint64_t sub_255FFCA00()
{
  return sub_255FFCA48(&qword_269F44688, sub_255FFBD3C, (void (*)(void))sub_255FFCAD4, (void (*)(void))sub_255FFCB08);
}

uint64_t sub_255FFCA48(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_255FFCAD4()
{
  return sub_255FFD6A0(&qword_269F44690, sub_255FFBD84);
}

uint64_t sub_255FFCB08()
{
  return sub_255FFD6A0(&qword_269F44698, sub_255FFC634);
}

uint64_t sub_255FFCB3C()
{
  return sub_255FFD6A0(&qword_269F446A0, sub_255FFC774);
}

void sub_255FFCB70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4(255);
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_255FFCBF4(uint64_t a1, uint64_t a2)
{
  sub_255FFBEE4(0, (unint64_t *)&qword_269F43440, &qword_269F43448);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_255FFCC78(uint64_t a1)
{
  sub_255FFBEE4(0, (unint64_t *)&qword_269F43440, &qword_269F43448);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_255FFCCF4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_256176048();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_255FFCD68(uint64_t a1)
{
  return a1;
}

uint64_t sub_255FFCD94(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_255FFCDFC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t objectdestroyTm_7()
{
  uint64_t v1 = _s19EntryMomentDataViewVMa();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v0 + v3;
  sub_255FF47BC(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v45 = v1;
    uint64_t v5 = sub_256176AA8();
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    if (!v7(v0 + v3, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
    }
    uint64_t v8 = type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v9 = v4 + *(int *)(v8 + 20);
    uint64_t v10 = sub_256176158();
    unint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    uint64_t v12 = v9;
    char v13 = (int *)v8;
    v11(v12, v10);
    uint64_t v14 = v4 + *(int *)(v8 + 28);
    uint64_t v15 = sub_256175D98();
    uint64_t v43 = *(void (**)(uint64_t))(*(void *)(v15 - 8) + 8);
    uint64_t v44 = v15;
    v43(v14);
    uint64_t v16 = v4 + v13[8];
    if (!v7(v16, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v16, v5);
    }
    uint64_t v17 = _s6StylesV8TimelineVMa(0);
    v11(v16 + *(int *)(v17 + 20), v10);
    uint64_t v18 = v4 + v13[9];
    if (!v7(v18, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v18, v5);
    }
    uint64_t v19 = _s6StylesV6NoDataVMa(0);
    v11(v18 + *(int *)(v19 + 20), v10);
    uint64_t v20 = v4 + v13[10];
    if (!v7(v20, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v20, v5);
    }
    uint64_t v21 = _s6StylesV11PlaceholderVMa(0);
    v11(v20 + *(int *)(v21 + 20), v10);
    uint64_t v22 = v4 + v13[11];
    if (!v7(v22, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v22, v5);
    }
    uint64_t v23 = _s6StylesV6SymbolVMa(0);
    v11(v22 + *(int *)(v23 + 20), v10);
    uint64_t v24 = v4 + v13[12];
    if (!v7(v24, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v24, v5);
    }
    uint64_t v46 = v6;
    uint64_t v25 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v11(v24 + *(int *)(v25 + 20), v10);
    ((void (*)(uint64_t, uint64_t))v43)(v24 + *(int *)(v25 + 28), v44);
    char v26 = v13;
    uint64_t v27 = v4 + v13[13];
    if (!v7(v27, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v27, v5);
    }
    uint64_t v28 = _s6StylesV5EmptyVMa(0);
    v11(v27 + *(int *)(v28 + 20), v10);
    uint64_t v29 = v4 + v26[14];
    if (!v7(v29, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v29, v5);
    }
    uint64_t v30 = _s6StylesV5DailyVMa(0);
    v11(v29 + *(int *)(v30 + 20), v10);
    uint64_t v31 = v4 + v26[15];
    if (!v7(v31, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v31, v5);
    }
    uint64_t v32 = _s6StylesV9MomentaryVMa(0);
    v11(v31 + *(int *)(v32 + 20), v10);
    uint64_t v33 = v4 + v26[16];
    uint64_t v34 = v10;
    if (!v7(v33, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v33, v5);
    }
    uint64_t v35 = _s6StylesV6HeaderVMa(0);
    v11(v33 + *(int *)(v35 + 20), v10);
    uint64_t v36 = v4 + v26[17];
    if (!v7(v36, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v36, v5);
    }
    uint64_t v37 = _s6StylesV11ChartButtonVMa(0);
    v11(v36 + *(int *)(v37 + 20), v10);
    uint64_t v38 = v4 + v26[18];
    if (!v7(v38, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v38, v5);
    }
    uint64_t v39 = _s6StylesV15LogButtonFooterVMa(0);
    v11(v38 + *(int *)(v39 + 20), v34);
    uint64_t v1 = v45;
  }
  else
  {
    swift_release();
  }
  uint64_t v40 = v4 + *(int *)(v1 + 20);
  uint64_t v41 = sub_2561758A8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8))(v40, v41);
  _s5EntryVMa();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_255FFD580(_OWORD *a1)
{
  _s19EntryMomentDataViewVMa();
  long long v2 = a1[1];
  v4[0] = *a1;
  v4[1] = v2;
  v4[2] = a1[2];
  return sub_255FFB9E4((uint64_t *)v4);
}

void sub_255FFD60C(uint64_t a1)
{
}

uint64_t sub_255FFD640(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_255FFD6A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s19EntryMomentDataViewV15ItemDescriptionVwxx()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

void *_s19EntryMomentDataViewV15ItemDescriptionVwcp(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s19EntryMomentDataViewV15ItemDescriptionVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s19EntryMomentDataViewV15ItemDescriptionVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s19EntryMomentDataViewV15ItemDescriptionVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s19EntryMomentDataViewV15ItemDescriptionVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s19EntryMomentDataViewV15ItemDescriptionVMa()
{
  return &_s19EntryMomentDataViewV15ItemDescriptionVN;
}

uint64_t sub_255FFD954()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_255FFD9B0()
{
  unint64_t result = qword_269F446E8;
  if (!qword_269F446E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F446E8);
  }
  return result;
}

uint64_t sub_255FFDA04(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (char v5 = sub_256178828(), result = 0, (v5 & 1) != 0))
  {
    if (sub_256176E08() & 1) != 0 && (sub_256177418())
    {
      if (a1[4] == a2[4] && a1[5] == a2[5])
      {
        return 1;
      }
      else
      {
        return sub_256178828();
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_255FFDAB8()
{
  uint64_t v1 = OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel____lazy_storage___isCompletingFirstTimeFlow;
  int v2 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel____lazy_storage___isCompletingFirstTimeFlow);
  if (v2 == 2)
  {
    char v3 = sub_256001C6C(*(void *)(v0 + 16)) ^ 1;
    *(unsigned char *)(v0 + v1) = v3 & 1;
  }
  else
  {
    char v3 = v2 & 1;
  }
  return v3 & 1;
}

double StateOfMindEntryModel.effectiveValence.getter()
{
  return sub_255FFDB64();
}

double StateOfMindEntryModel.valence.getter()
{
  return sub_255FFDB64();
}

double sub_255FFDB64()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_255FFDBD0(uint64_t a1, char a2)
{
  uint64_t v23 = *v2;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();
  swift_release();
  BOOL v21 = aBlock[0] == 2;
  BOOL v4 = (char *)v2 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_configuration;
  swift_beginAccess();
  uint64_t v5 = type metadata accessor for StateOfMindEntryModel.Configuration(0);
  char v6 = v4[*(int *)(v5 + 32)];
  char v7 = v4[*(int *)(v5 + 36)];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();
  swift_release();
  uint64_t v8 = *(void *)(aBlock[0] + 16);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();
  swift_release();
  uint64_t v9 = *(void *)(aBlock[0] + 16);
  swift_bridgeObjectRelease();
  BOOL v10 = v9 != 0;
  unint64_t v11 = (uint64_t *)((char *)v2 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_completedAnalyticsSteps);
  swift_beginAccess();
  uint64_t v12 = *v11;
  swift_bridgeObjectRetain();
  char v13 = sub_2561730E0(a1, v12);
  swift_bridgeObjectRelease();
  char v14 = sub_255FFDAB8();
  type metadata accessor for StateOfMindLoggingEvent();
  uint64_t v15 = (unsigned char *)swift_allocObject();
  unsigned char v15[16] = a1;
  v15[17] = a2;
  v15[18] = v6;
  v15[19] = v7;
  v15[20] = v21;
  v15[21] = v8 != 0;
  v15[22] = v10;
  v15[23] = (v13 & 1) == 0;
  unsigned char v15[24] = v14 & 1;
  id v16 = sub_2560020C8();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v23;
  aBlock[4] = sub_25600AE0C;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25617381C;
  aBlock[3] = &block_descriptor_83;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v16, sel_submitEvent_completion_, v15, v18);
  _Block_release(v18);

  swift_release();
  uint64_t v19 = *v11;
  swift_bridgeObjectRetain();
  LOBYTE(v18) = sub_2561730E0(a1, v19);
  swift_bridgeObjectRelease();
  if ((v18 & 1) == 0)
  {
    swift_beginAccess();
    sub_25614E4DC(&v24, a1);
    swift_endAccess();
  }
  return swift_release();
}

uint64_t StateOfMindEntryModel.valence.setter()
{
  return sub_255FFDF64();
}

uint64_t StateOfMindEntryModel.effectiveValence.setter()
{
  return sub_255FFDF64();
}

uint64_t sub_255FFDF64()
{
  return sub_256175C98();
}

uint64_t StateOfMindEntryModel.labels.setter()
{
  return sub_255FFDFFC();
}

uint64_t StateOfMindEntryModel.domains.setter()
{
  return sub_255FFDFFC();
}

uint64_t sub_255FFDFFC()
{
  return sub_256175C98();
}

uint64_t StateOfMindEntryModel.context.setter()
{
  return sub_25600146C();
}

uint64_t StateOfMindEntryModel.saveSample()()
{
  v1[2] = v0;
  sub_2561780C8();
  v1[3] = sub_2561780B8();
  uint64_t v3 = sub_256178088();
  v1[4] = v3;
  v1[5] = v2;
  return MEMORY[0x270FA2498](sub_255FFE180, v3, v2);
}

uint64_t sub_255FFE180()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_hasInitiatedSampleSave;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_hasInitiatedSampleSave))
  {
    swift_release();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
  else
  {
    uint64_t v5 = sub_256002708();
    v0[6] = v5;
    *(unsigned char *)(v1 + v2) = 1;
    char v6 = (void *)swift_task_alloc();
    v0[7] = v6;
    *char v6 = v0;
    v6[1] = sub_255FFE280;
    return sub_2560029F0(v5);
  }
}

uint64_t sub_255FFE280()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 32);
  return MEMORY[0x270FA2498](sub_255FFE3A0, v3, v2);
}

uint64_t sub_255FFE3A0()
{
  sub_255FFDBD0(7, 0);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_255FFE440;
  return sub_256003B10();
}

uint64_t sub_255FFE440()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 72) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_255FFE580;
  return sub_2560044C8();
}

uint64_t sub_255FFE580()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 32);
  return MEMORY[0x270FA2498](sub_255FFE6A0, v3, v2);
}

uint64_t sub_255FFE6A0()
{
  uint64_t v1 = *(void **)(v0 + 48);
  swift_release();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t StateOfMindEntryModel.labels.getter()
{
  return sub_256000F80();
}

uint64_t sub_255FFE71C@<X0>(void *a1@<X8>)
{
  return sub_256001000(a1);
}

uint64_t sub_255FFE730()
{
  return sub_256001090();
}

void StateOfMindEntryModel.Configuration.initialReflectiveInterval.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 8);
  *(void *)a1 = *(void *)v1;
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t StateOfMindEntryModel.Configuration.initialReflectiveInterval.setter(uint64_t result)
{
  char v2 = *(unsigned char *)(result + 8);
  *(void *)uint64_t v1 = *(void *)result;
  *(unsigned char *)(v1 + 8) = v2;
  return result;
}

uint64_t (*StateOfMindEntryModel.Configuration.initialReflectiveInterval.modify())()
{
  return nullsub_1;
}

uint64_t StateOfMindEntryModel.Configuration.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StateOfMindEntryModel.Configuration(0) + 20);
  uint64_t v4 = sub_256175868();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t StateOfMindEntryModel.Configuration.date.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StateOfMindEntryModel.Configuration(0) + 20);
  uint64_t v4 = sub_256175868();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*StateOfMindEntryModel.Configuration.date.modify())()
{
  return nullsub_1;
}

uint64_t StateOfMindEntryModel.Configuration.parentSampleUUID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StateOfMindEntryModel.Configuration(0);
  return sub_25600501C(v1 + *(int *)(v3 + 24), a1, (uint64_t (*)(void))sub_256004CF0);
}

uint64_t StateOfMindEntryModel.Configuration.parentSampleUUID.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StateOfMindEntryModel.Configuration(0) + 24);

  return sub_256004D24(a1, v3);
}

uint64_t (*StateOfMindEntryModel.Configuration.parentSampleUUID.modify())()
{
  return nullsub_1;
}

uint64_t StateOfMindEntryModel.Configuration.fitnessPlusSessionID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StateOfMindEntryModel.Configuration(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StateOfMindEntryModel.Configuration.fitnessPlusSessionID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for StateOfMindEntryModel.Configuration(0) + 28));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*StateOfMindEntryModel.Configuration.fitnessPlusSessionID.modify())()
{
  return nullsub_1;
}

uint64_t StateOfMindEntryModel.Configuration.entryPoint.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for StateOfMindEntryModel.Configuration(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t StateOfMindEntryModel.Configuration.entryPoint.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for StateOfMindEntryModel.Configuration(0);
  *(unsigned char *)(v1 + *(int *)(result + 32)) = v2;
  return result;
}

uint64_t (*StateOfMindEntryModel.Configuration.entryPoint.modify())()
{
  return nullsub_1;
}

uint64_t StateOfMindEntryModel.Configuration.provenance.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for StateOfMindEntryModel.Configuration(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t StateOfMindEntryModel.Configuration.provenance.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for StateOfMindEntryModel.Configuration(0);
  *(unsigned char *)(v1 + *(int *)(result + 36)) = v2;
  return result;
}

uint64_t (*StateOfMindEntryModel.Configuration.provenance.modify())()
{
  return nullsub_1;
}

uint64_t StateOfMindEntryModel.Configuration.init(reflectiveInterval:date:parentSampleUUID:fitnessPlusSessionID:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11 = *a1;
  char v12 = *((unsigned char *)a1 + 8);
  char v13 = (int *)type metadata accessor for StateOfMindEntryModel.Configuration(0);
  uint64_t v14 = a6 + v13[6];
  uint64_t v15 = sub_2561758A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  id v16 = (void *)(a6 + v13[7]);
  *id v16 = 0;
  v16[1] = 0;
  *(unsigned char *)(a6 + v13[8]) = 11;
  *(unsigned char *)(a6 + v13[9]) = 6;
  *(void *)a6 = v11;
  *(unsigned char *)(a6 + 8) = v12;
  uint64_t v17 = a6 + v13[5];
  uint64_t v18 = sub_256175868();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v17, a2, v18);
  sub_256004D24(a3, v14);
  uint64_t result = swift_bridgeObjectRelease();
  *id v16 = a4;
  v16[1] = a5;
  return result;
}

uint64_t StateOfMindEntryModel.Configuration.init(reflectiveInterval:date:parentSampleUUID:fitnessPlusSessionID:entryPoint:provenance:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, char *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v11 = *a1;
  char v12 = *((unsigned char *)a1 + 8);
  char v22 = *a7;
  char v23 = *a6;
  char v13 = (int *)type metadata accessor for StateOfMindEntryModel.Configuration(0);
  uint64_t v14 = a8 + v13[6];
  uint64_t v15 = sub_2561758A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  id v16 = (void *)(a8 + v13[7]);
  *id v16 = 0;
  v16[1] = 0;
  uint64_t v17 = v13[8];
  *(unsigned char *)(a8 + v17) = 11;
  uint64_t v18 = v13[9];
  *(unsigned char *)(a8 + v18) = 6;
  *(void *)a8 = v11;
  *(unsigned char *)(a8 + 8) = v12;
  uint64_t v19 = a8 + v13[5];
  uint64_t v20 = sub_256175868();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v19, a2, v20);
  sub_256004D24(a3, v14);
  uint64_t result = swift_bridgeObjectRelease();
  *id v16 = a4;
  v16[1] = a5;
  *(unsigned char *)(a8 + v17) = v23;
  *(unsigned char *)(a8 + v18) = v22;
  return result;
}

unint64_t sub_255FFEE54(char a1)
{
  unint64_t result = 0xD000000000000019;
  switch(a1)
  {
    case 1:
      unint64_t result = 1702125924;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0x696F507972746E65;
      break;
    case 5:
      unint64_t result = 0x6E616E65766F7270;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_255FFEF3C()
{
  return sub_255FFEE54(*v0);
}

uint64_t sub_255FFEF44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_256007AF8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_255FFEF6C()
{
  return 0;
}

void sub_255FFEF78(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_255FFEF84(uint64_t a1)
{
  unint64_t v2 = sub_256004D88();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_255FFEFC0(uint64_t a1)
{
  unint64_t v2 = sub_256004D88();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StateOfMindEntryModel.Configuration.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_25600ACE4(0, &qword_269F44740, (uint64_t (*)(void))sub_256004D88, (uint64_t)&type metadata for StateOfMindEntryModel.Configuration.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_256004D88();
  sub_256178948();
  char v10 = *((unsigned char *)v3 + 8);
  uint64_t v13 = *v3;
  char v14 = v10;
  char v15 = 0;
  sub_256004DDC();
  sub_2561787B8();
  if (!v2)
  {
    uint64_t v11 = type metadata accessor for StateOfMindEntryModel.Configuration(0);
    LOBYTE(v13) = 1;
    sub_256175868();
    sub_256004F2C(&qword_269F44758, MEMORY[0x263F07490]);
    sub_2561787B8();
    LOBYTE(v13) = 2;
    sub_2561758A8();
    sub_256004F2C(&qword_269F44760, MEMORY[0x263F07508]);
    sub_256178798();
    LOBYTE(v13) = 3;
    sub_256178788();
    LOBYTE(v13) = *((unsigned char *)v3 + *(int *)(v11 + 32));
    char v15 = 4;
    sub_256004E30();
    sub_256178798();
    LOBYTE(v13) = *((unsigned char *)v3 + *(int *)(v11 + 36));
    char v15 = 5;
    sub_256004E84();
    sub_256178798();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t StateOfMindEntryModel.Configuration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  sub_256004CF0(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v38 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_256175868();
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v41 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v39 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25600ACE4(0, &qword_269F44778, (uint64_t (*)(void))sub_256004D88, (uint64_t)&type metadata for StateOfMindEntryModel.Configuration.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v44 = v7;
  uint64_t v42 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v34 - v8;
  char v10 = (int *)type metadata accessor for StateOfMindEntryModel.Configuration(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (uint64_t)&v13[*(int *)(v11 + 24)];
  uint64_t v15 = sub_2561758A8();
  id v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v45 = v14;
  v16(v14, 1, 1, v15);
  uint64_t v17 = &v13[v10[7]];
  *(void *)uint64_t v17 = 0;
  *((void *)v17 + 1) = 0;
  uint64_t v47 = v17;
  uint64_t v37 = v10[8];
  v13[v37] = 11;
  uint64_t v18 = v10[9];
  v13[v18] = 6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_256004D88();
  uint64_t v43 = v9;
  uint64_t v19 = v46;
  sub_256178938();
  uint64_t v20 = a1;
  if (v19)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_256005084(v45, (uint64_t (*)(void))sub_256004CF0);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v46 = v13;
    uint64_t v34 = v18;
    uint64_t v35 = v10;
    char v22 = v39;
    uint64_t v21 = v40;
    uint64_t v23 = v41;
    uint64_t v24 = (uint64_t)v20;
    char v50 = 0;
    sub_256004ED8();
    sub_256178758();
    char v25 = v49;
    char v26 = v46;
    *uint64_t v46 = v48;
    *((unsigned char *)v26 + 8) = v25;
    LOBYTE(v48) = 1;
    sub_256004F2C(&qword_269F44788, MEMORY[0x263F07490]);
    sub_256178758();
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))((char *)v26 + v35[5], v22, v23);
    LOBYTE(v48) = 2;
    sub_256004F2C(&qword_269F44790, MEMORY[0x263F07508]);
    uint64_t v27 = (uint64_t)v38;
    sub_256178738();
    sub_256004D24(v27, v45);
    LOBYTE(v48) = 3;
    uint64_t v28 = sub_256178728();
    uint64_t v30 = v29;
    uint64_t v31 = (uint64_t *)v47;
    swift_bridgeObjectRelease();
    uint64_t *v31 = v28;
    v31[1] = v30;
    char v50 = 4;
    sub_256004F74();
    sub_256178738();
    uint64_t v32 = (uint64_t)v46;
    *((unsigned char *)v46 + v37) = v48;
    char v50 = 5;
    sub_256004FC8();
    sub_256178738();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v44);
    *(unsigned char *)(v32 + v34) = v48;
    sub_25600501C(v32, v36, type metadata accessor for StateOfMindEntryModel.Configuration);
    __swift_destroy_boxed_opaque_existential_1(v24);
    return sub_256005084(v32, type metadata accessor for StateOfMindEntryModel.Configuration);
  }
}

uint64_t sub_255FFF99C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StateOfMindEntryModel.Configuration.init(from:)(a1, a2);
}

uint64_t sub_255FFF9B4(void *a1)
{
  return StateOfMindEntryModel.Configuration.encode(to:)(a1);
}

uint64_t StateOfMindEntryModel.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_configuration;
  swift_beginAccess();
  return sub_25600501C(v3, a1, type metadata accessor for StateOfMindEntryModel.Configuration);
}

uint64_t StateOfMindEntryModel.date.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();

  return swift_release();
}

uint64_t sub_255FFFAAC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();

  return swift_release();
}

uint64_t sub_255FFFB28(uint64_t a1)
{
  uint64_t v2 = sub_256175868();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  swift_getKeyPath();
  swift_getKeyPath();
  v9(v6, (uint64_t)v8, v2);
  swift_retain();
  sub_256175C98();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t StateOfMindEntryModel.date.setter(uint64_t a1)
{
  uint64_t v2 = sub_256175868();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  swift_retain();
  sub_256175C98();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*StateOfMindEntryModel.date.modify(void *a1))(void *)
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_256175C78();
  return sub_255FFFE4C;
}

uint64_t StateOfMindEntryModel.$date.getter()
{
  return sub_256000234((uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__date, sub_2560050EC);
}

uint64_t StateOfMindEntryModel.$date.setter(uint64_t a1)
{
  return sub_2560004CC(a1, (uint64_t (*)(void))sub_256005184, (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__date, sub_2560050EC);
}

void (*StateOfMindEntryModel.$date.modify(void *a1))(uint64_t, char)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  sub_256005184(0);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__date;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  sub_2560050EC(0);
  v3[16] = v9;
  sub_256175C58();
  swift_endAccess();
  return sub_255FFFFAC;
}

uint64_t StateOfMindEntryModel.reflectiveInterval.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_256000024@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_2560000A4()
{
  return sub_256175C98();
}

uint64_t StateOfMindEntryModel.reflectiveInterval.setter()
{
  return sub_256175C98();
}

void (*StateOfMindEntryModel.reflectiveInterval.modify(void *a1))(void *)
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_256175C78();
  return sub_255FFFE4C;
}

uint64_t StateOfMindEntryModel.$reflectiveInterval.getter()
{
  return sub_256000234((uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__reflectiveInterval, sub_2560051C0);
}

uint64_t sub_256000234(uint64_t a1, void (*a2)(void))
{
  return swift_endAccess();
}

uint64_t sub_2560002A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  return swift_endAccess();
}

uint64_t sub_256000314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t a6, void (*a7)(void))
{
  uint64_t v9 = a5(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v18 - v14;
  id v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v16((char *)&v18 - v14, a1, v9);
  v16(v13, (uint64_t)v15, v9);
  swift_beginAccess();
  a7(0);
  sub_256175C68();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
}

uint64_t StateOfMindEntryModel.$reflectiveInterval.setter(uint64_t a1)
{
  return sub_2560004CC(a1, (uint64_t (*)(void))sub_2560051F4, (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__reflectiveInterval, sub_2560051C0);
}

uint64_t sub_2560004CC(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, void (*a4)(void))
{
  uint64_t v6 = a2(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v10 - v8, a1, v6);
  swift_beginAccess();
  a4(0);
  sub_256175C68();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
}

void (*StateOfMindEntryModel.$reflectiveInterval.modify(void *a1))(uint64_t, char)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  sub_2560051F4(0);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__reflectiveInterval;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  sub_2560051C0(0);
  v3[16] = v9;
  sub_256175C58();
  swift_endAccess();
  return sub_255FFFFAC;
}

double sub_256000708@<D0>(double *a1@<X8>)
{
  return sub_256001918(a1);
}

uint64_t sub_25600071C()
{
  return sub_2560019AC();
}

void (*StateOfMindEntryModel.valence.modify(void *a1))(void *)
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_256175C78();
  return sub_255FFFE4C;
}

uint64_t StateOfMindEntryModel.$valence.getter()
{
  return sub_2560007D8((uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__valence, &qword_269F447D8, MEMORY[0x263F8D538]);
}

uint64_t sub_2560007D8(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  return swift_endAccess();
}

uint64_t sub_256000860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6)
{
  return swift_endAccess();
}

uint64_t sub_2560008F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6, uint64_t a7, unint64_t *a8)
{
  uint64_t v20 = a8;
  sub_25600AE94(0, a5, a6, MEMORY[0x263EFDE48]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v20 - v16;
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v18((char *)&v20 - v16, a1, v11);
  v18(v15, (uint64_t)v17, v11);
  swift_beginAccess();
  sub_25600AE94(0, v20, a6, MEMORY[0x263EFDE58]);
  sub_256175C68();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
}

uint64_t StateOfMindEntryModel.$valence.setter(uint64_t a1)
{
  return sub_256000ACC(a1, &qword_269F447E0, MEMORY[0x263F8D538], (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__valence, &qword_269F447D8);
}

uint64_t sub_256000ACC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, unint64_t *a5)
{
  sub_25600AE94(0, a2, a3, MEMORY[0x263EFDE48]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v13 - v11, a1, v9);
  swift_beginAccess();
  sub_25600AE94(0, a5, a3, MEMORY[0x263EFDE58]);
  sub_256175C68();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
}

void (*StateOfMindEntryModel.$valence.modify(void *a1))(uint64_t, char)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = MEMORY[0x263F8D538];
  sub_25600AE94(0, &qword_269F447E0, MEMORY[0x263F8D538], MEMORY[0x263EFDE48]);
  v3[10] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[11] = v6;
  size_t v7 = *(void *)(v6 + 64);
  v3[12] = malloc(v7);
  v3[13] = malloc(v7);
  uint64_t v8 = malloc(v7);
  uint64_t v9 = OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__valence;
  v3[14] = v8;
  v3[15] = v9;
  swift_beginAccess();
  sub_25600AE94(0, &qword_269F447D8, v4, MEMORY[0x263EFDE58]);
  v3[16] = v10;
  sub_256175C58();
  swift_endAccess();
  return sub_255FFFFAC;
}

void (*StateOfMindEntryModel.labels.modify(void *a1))(void *)
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_256175C78();
  return sub_255FFFE4C;
}

uint64_t StateOfMindEntryModel.$labels.getter()
{
  return sub_256000234((uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__labels, sub_256005228);
}

uint64_t StateOfMindEntryModel.$labels.setter(uint64_t a1)
{
  return sub_2560004CC(a1, (uint64_t (*)(void))sub_256005290, (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__labels, sub_256005228);
}

void (*StateOfMindEntryModel.$labels.modify(void *a1))(uint64_t, char)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  sub_256005290(0);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  size_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__labels;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  sub_256005228(0);
  v3[16] = v9;
  sub_256175C58();
  swift_endAccess();
  return sub_255FFFFAC;
}

uint64_t StateOfMindEntryModel.domains.getter()
{
  return sub_256000F80();
}

uint64_t sub_256000F80()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_256000FEC@<X0>(void *a1@<X8>)
{
  return sub_256001000(a1);
}

uint64_t sub_256001000@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_25600107C()
{
  return sub_256001090();
}

uint64_t sub_256001090()
{
  return sub_256175C98();
}

void (*StateOfMindEntryModel.domains.modify(void *a1))(void *)
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_256175C78();
  return sub_255FFFE4C;
}

uint64_t StateOfMindEntryModel.$domains.getter()
{
  return sub_256000234((uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__domains, sub_2560052C4);
}

uint64_t StateOfMindEntryModel.$domains.setter(uint64_t a1)
{
  return sub_2560004CC(a1, (uint64_t (*)(void))sub_2560052F8, (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__domains, sub_2560052C4);
}

void (*StateOfMindEntryModel.$domains.modify(void *a1))(uint64_t, char)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  sub_2560052F8(0);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  size_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__domains;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  sub_2560052C4(0);
  v3[16] = v9;
  sub_256175C58();
  swift_endAccess();
  return sub_255FFFFAC;
}

uint64_t StateOfMindEntryModel.context.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_256001364@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_2560013E4()
{
  return sub_25600146C();
}

uint64_t sub_25600146C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();
  swift_release();
  uint64_t v0 = sub_256177F48();
  uint64_t result = swift_bridgeObjectRelease();
  if (v0 >= 61)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_256175C88();
    swift_release();
    swift_release();
    uint64_t v3 = sub_256007A5C(60, v11, v12, v2);
    uint64_t v5 = v4;
    uint64_t v7 = v6;
    uint64_t v9 = v8;
    swift_bridgeObjectRelease();
    MEMORY[0x25A2A09B0](v3, v5, v7, v9);
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    uint64_t v10 = sub_256175C98();
    return sub_25600146C(v10);
  }
  return result;
}

void (*StateOfMindEntryModel.context.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();
  swift_release();
  uint64_t v4 = v3[3];
  *uint64_t v3 = v3[2];
  v3[1] = v4;
  return sub_256001690;
}

void sub_256001690(uint64_t **a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = **a1;
  uint64_t v5 = (*a1)[1];
  swift_getKeyPath();
  swift_getKeyPath();
  v3[2] = v4;
  v3[3] = v5;
  swift_retain();
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_256175C98();
    sub_25600146C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_256175C98();
    sub_25600146C();
  }

  free(v3);
}

uint64_t StateOfMindEntryModel.$context.getter()
{
  return sub_2560007D8((uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__context, &qword_269F44810, MEMORY[0x263F8D310]);
}

uint64_t StateOfMindEntryModel.$context.setter(uint64_t a1)
{
  return sub_256000ACC(a1, &qword_269F44818, MEMORY[0x263F8D310], (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__context, &qword_269F44810);
}

void (*StateOfMindEntryModel.$context.modify(void *a1))(uint64_t, char)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = MEMORY[0x263F8D310];
  sub_25600AE94(0, &qword_269F44818, MEMORY[0x263F8D310], MEMORY[0x263EFDE48]);
  v3[10] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[11] = v6;
  size_t v7 = *(void *)(v6 + 64);
  v3[12] = malloc(v7);
  v3[13] = malloc(v7);
  uint64_t v8 = malloc(v7);
  uint64_t v9 = OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__context;
  v3[14] = v8;
  v3[15] = v9;
  swift_beginAccess();
  sub_25600AE94(0, &qword_269F44810, v4, MEMORY[0x263EFDE58]);
  v3[16] = v10;
  sub_256175C58();
  swift_endAccess();
  return sub_255FFFFAC;
}

double sub_256001904@<D0>(double *a1@<X8>)
{
  return sub_256001918(a1);
}

double sub_256001918@<D0>(double *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();
  swift_release();
  double result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_256001998()
{
  return sub_2560019AC();
}

uint64_t sub_2560019AC()
{
  return sub_256175C98();
}

void (*StateOfMindEntryModel.effectiveValence.modify(void *a1))(void *)
{
  unint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_256175C78();
  return sub_255FFFE4C;
}

uint64_t StateOfMindEntryModel.$effectiveValence.getter()
{
  return sub_2560007D8((uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__effectiveValence, &qword_269F447D8, MEMORY[0x263F8D538]);
}

uint64_t StateOfMindEntryModel.$effectiveValence.setter(uint64_t a1)
{
  return sub_256000ACC(a1, &qword_269F447E0, MEMORY[0x263F8D538], (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__effectiveValence, &qword_269F447D8);
}

void (*StateOfMindEntryModel.$effectiveValence.modify(void *a1))(uint64_t, char)
{
  double v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = MEMORY[0x263F8D538];
  sub_25600AE94(0, &qword_269F447E0, MEMORY[0x263F8D538], MEMORY[0x263EFDE48]);
  v3[10] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[11] = v6;
  size_t v7 = *(void *)(v6 + 64);
  v3[12] = malloc(v7);
  v3[13] = malloc(v7);
  uint64_t v8 = malloc(v7);
  uint64_t v9 = OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__effectiveValence;
  v3[14] = v8;
  v3[15] = v9;
  swift_beginAccess();
  sub_25600AE94(0, &qword_269F447D8, v4, MEMORY[0x263EFDE58]);
  v3[16] = v10;
  sub_256175C58();
  swift_endAccess();
  return sub_255FFFFAC;
}

uint64_t sub_256001C6C(uint64_t a1)
{
  v35[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = sub_256175B68();
  double v3 = *(void (***)(char *, void))(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v32 - v7;
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A3B8]), sel_initWithFeatureIdentifier_healthStore_, *MEMORY[0x263F09800], a1);
  v35[0] = 0;
  id v10 = objc_msgSend(v9, sel_featureOnboardingRecordWithError_, v35);
  if (v10)
  {
    uint64_t v11 = v10;
    id v12 = v35[0];
    sub_256175B48();
    uint64_t v13 = sub_256175B58();
    os_log_type_t v14 = sub_256178238();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = (void *)swift_slowAlloc();
      uint64_t v32 = (void (**)(char *, void))v9;
      uint64_t v17 = v3;
      uint64_t v18 = v16;
      v35[0] = v16;
      *(_DWORD *)uint64_t v15 = 136446210;
      uint64_t v33 = v2;
      uint64_t v19 = sub_256178978();
      uint64_t v34 = sub_255FB29A8(v19, v20, (uint64_t *)v35);
      sub_256178458();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_255F58000, v13, v14, "[%{public}s]: Retrieved onboarding record", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A1E90](v18, -1, -1);
      MEMORY[0x25A2A1E90](v15, -1, -1);

      v17[1](v8, v33);
      id v9 = v32;
    }
    else
    {

      v3[1](v8, v2);
    }
    uint64_t v30 = (uint64_t)objc_msgSend(v11, sel_isOnboardingPresent);
  }
  else
  {
    id v21 = v35[0];
    char v22 = (void *)sub_2561755D8();

    swift_willThrow();
    sub_256175B48();
    uint64_t v23 = sub_256175B58();
    os_log_type_t v24 = sub_256178218();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v33 = v2;
      char v25 = (uint8_t *)swift_slowAlloc();
      char v26 = (void *)swift_slowAlloc();
      uint64_t v32 = v3;
      uint64_t v27 = v26;
      v35[0] = v26;
      *(_DWORD *)char v25 = 136446210;
      uint64_t v28 = sub_256178978();
      uint64_t v34 = sub_255FB29A8(v28, v29, (uint64_t *)v35);
      sub_256178458();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_255F58000, v23, v24, "[%{public}s]: Error checking state of mind onboarding record", v25, 0xCu);
      uint64_t v30 = 1;
      swift_arrayDestroy();
      MEMORY[0x25A2A1E90](v27, -1, -1);
      MEMORY[0x25A2A1E90](v25, -1, -1);

      v32[1](v6, v33);
    }
    else
    {

      v3[1](v6, v2);
      return 1;
    }
  }
  return v30;
}

id sub_2560020C8()
{
  uint64_t v1 = OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel____lazy_storage___eventSubmissionManager;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel____lazy_storage___eventSubmissionManager);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel____lazy_storage___eventSubmissionManager);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A0C0]), sel_initWithLoggingCategory_healthDataSource_, *MEMORY[0x263F09938], *(void *)(v0 + 16));
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void *StateOfMindEntryModel.__allocating_init(healthStore:configuration:onSampleSave:)(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  swift_allocObject();
  uint64_t v8 = sub_256007D60(a1, a2, a3, a4);

  swift_release();
  return v8;
}

void *StateOfMindEntryModel.init(healthStore:configuration:onSampleSave:)(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = sub_256007D60(a1, a2, a3, a4);

  swift_release();
  return v5;
}

void *StateOfMindEntryModel.__allocating_init(healthStore:date:reflectiveInterval:valence:labels:domains:context:parentSampleUUID:onSampleSave:)(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, void *a10, uint64_t a11)
{
  uint64_t v49 = a8;
  double v50 = *(double *)&a4;
  double v52 = *(double *)&a6;
  uint64_t v53 = a7;
  double v51 = *(double *)&a5;
  uint64_t v43 = a3;
  uint64_t v47 = a2;
  uint64_t v45 = a10;
  uint64_t v54 = a11;
  uint64_t v42 = sub_256175868();
  uint64_t v14 = *(void *)(v42 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v42);
  uint64_t v46 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v41 - v17;
  sub_256004CF0(0);
  MEMORY[0x270FA5388](v19 - 8);
  id v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for StateOfMindEntryModel.Configuration(0);
  uint64_t v23 = (int *)(v22 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  char v26 = (char *)&v41 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)&v41 - v27;
  uint64_t v48 = sub_256004CF0;
  sub_25600501C(a8, (uint64_t)v21, (uint64_t (*)(void))sub_256004CF0);
  id v29 = a1;
  sub_256175858();
  uint64_t v30 = (uint64_t)&v26[v23[8]];
  uint64_t v31 = sub_2561758A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 1, 1, v31);
  uint64_t v32 = &v26[v23[9]];
  *(void *)uint64_t v32 = 0;
  *((void *)v32 + 1) = 0;
  v26[v23[10]] = 11;
  v26[v23[11]] = 6;
  *(void *)char v26 = v43;
  v26[8] = 0;
  uint64_t v33 = &v26[v23[7]];
  uint64_t v34 = v42;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v33, v18, v42);
  sub_256004D24((uint64_t)v21, v30);
  swift_bridgeObjectRelease();
  *(void *)uint64_t v32 = 0;
  *((void *)v32 + 1) = 0;
  sub_256008A00((uint64_t)v26, (uint64_t)v28);
  swift_allocObject();
  uint64_t v35 = v54;
  swift_retain();
  id v44 = v29;
  uint64_t v36 = sub_256007D60(v29, (uint64_t)v28, v45, v35);

  swift_release();
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v38 = v47;
  v37(v18, (uint64_t)v47, v34);
  swift_getKeyPath();
  swift_getKeyPath();
  v37(v46, (uint64_t)v18, v34);
  swift_retain_n();
  sub_256175C98();
  uint64_t v39 = *(void (**)(char *, uint64_t))(v14 + 8);
  v39(v18, v34);
  swift_getKeyPath();
  swift_getKeyPath();
  double v55 = a9;
  swift_retain();
  sub_256175C98();
  swift_getKeyPath();
  swift_getKeyPath();
  double v55 = v50;
  swift_retain();
  sub_256175C98();
  swift_getKeyPath();
  swift_getKeyPath();
  double v55 = v51;
  swift_retain();
  sub_256175C98();
  swift_getKeyPath();
  swift_getKeyPath();
  double v55 = v52;
  uint64_t v56 = v53;
  swift_retain();
  sub_256175C98();
  sub_25600146C();

  swift_release();
  swift_release();
  sub_256005084(v49, (uint64_t (*)(void))v48);
  v39(v38, v34);
  return v36;
}

uint64_t static StateOfMindEntryModel.Configuration.InitialReflectiveInterval.explicit(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_256002708()
{
  uint64_t v0 = sub_256175868();
  MEMORY[0x270FA5388](v0 - 8);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v3 + 16);
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_256175C88();
    swift_release();
    swift_release();
  }
  sub_255FB58F8(0, (unint64_t *)&qword_269F47780);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();
  swift_release();
  sub_25613372C(MEMORY[0x263F8EE78]);
  return sub_2561781C8();
}

uint64_t sub_2560029F0(uint64_t a1)
{
  v2[34] = a1;
  v2[35] = v1;
  v2[36] = *v1;
  uint64_t v3 = sub_256175B68();
  v2[37] = v3;
  v2[38] = *(void *)(v3 - 8);
  v2[39] = swift_task_alloc();
  v2[40] = swift_task_alloc();
  sub_256004CF0(0);
  v2[41] = swift_task_alloc();
  uint64_t v4 = sub_2561758A8();
  v2[42] = v4;
  v2[43] = *(void *)(v4 - 8);
  v2[44] = swift_task_alloc();
  v2[45] = swift_task_alloc();
  sub_2561780C8();
  v2[46] = sub_2561780B8();
  uint64_t v6 = sub_256178088();
  v2[47] = v6;
  v2[48] = v5;
  return MEMORY[0x270FA2498](sub_256002BB4, v6, v5);
}

uint64_t sub_256002BB4()
{
  uint64_t v1 = (void *)v0[34];
  uint64_t v2 = *(void **)(v0[35] + 16);
  v0[49] = v2;
  sub_25600AE94(0, (unint64_t *)&qword_269F43AB0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_2561A27B0;
  *(void *)(v3 + 32) = v1;
  sub_256178018();
  sub_255FB58F8(0, &qword_269F44938);
  id v4 = v1;
  uint64_t v5 = sub_256177FF8();
  v0[50] = v5;
  swift_bridgeObjectRelease();
  v0[2] = v0;
  v0[3] = sub_256002D64;
  uint64_t v6 = swift_continuation_init();
  v0[23] = MEMORY[0x263EF8330];
  v0[24] = 0x40000000;
  v0[25] = sub_256005778;
  v0[26] = &block_descriptor_84;
  v0[27] = v6;
  objc_msgSend(v2, sel_saveObjects_skipInsertionFilter_completion_, v5, 1, v0 + 23);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_256002D64()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 408) = v2;
  uint64_t v3 = *(void *)(v1 + 384);
  uint64_t v4 = *(void *)(v1 + 376);
  if (v2) {
    uint64_t v5 = sub_256003558;
  }
  else {
    uint64_t v5 = sub_256002E94;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_256002E94()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 416) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_256002F34;
  uint64_t v2 = *(void *)(v0 + 328);
  return sub_256005814(v2);
}

uint64_t sub_256002F34()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 384);
  uint64_t v3 = *(void *)(v1 + 376);
  return MEMORY[0x270FA2498](sub_256003054, v3, v2);
}

uint64_t sub_256003054()
{
  uint64_t v1 = v0[42];
  uint64_t v2 = v0[43];
  uint64_t v3 = v0[41];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    swift_release();
    sub_256005084(v3, (uint64_t (*)(void))sub_256004CF0);
    (*(void (**)(void))(v0[35] + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_didSaveSample))(v0[34]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    id v16 = (id)v0[49];
    uint64_t v6 = v0[44];
    uint64_t v7 = (void *)v0[34];
    uint64_t v8 = *(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32);
    v8(v0[45], v3, v1);
    sub_256005120(0, &qword_269F44948, MEMORY[0x263F07508], MEMORY[0x263F8E0F8]);
    unint64_t v9 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_2561A0960;
    unint64_t v11 = v10 + v9;
    id v12 = objc_msgSend(v7, sel_UUID);
    sub_256175898();

    v8(v11, v6, v1);
    uint64_t v13 = sub_256177FF8();
    v0[53] = v13;
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_256175878();
    v0[54] = v14;
    v0[10] = v0;
    v0[11] = sub_256003344;
    uint64_t v15 = swift_continuation_init();
    v0[18] = MEMORY[0x263EF8330];
    v0[19] = 0x40000000;
    v0[20] = sub_256005778;
    v0[21] = &block_descriptor_86;
    v0[22] = v15;
    objc_msgSend(v16, sel_associateSampleUUIDs_withSampleUUID_completion_, v13, v14);
    return MEMORY[0x270FA23F0](v0 + 10);
  }
}

uint64_t sub_256003344()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 112);
  *(void *)(*v0 + 44__isPlatformVersionAtLeast(2, 18, 1, 0) = v2;
  uint64_t v3 = *(void *)(v1 + 384);
  uint64_t v4 = *(void *)(v1 + 376);
  if (v2) {
    uint64_t v5 = sub_256003818;
  }
  else {
    uint64_t v5 = sub_256003474;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_256003474()
{
  uint64_t v2 = (void *)v0[53];
  uint64_t v1 = (void *)v0[54];
  uint64_t v3 = v0[45];
  uint64_t v4 = v0[42];
  uint64_t v5 = v0[43];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);

  (*(void (**)(void))(v0[35] + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_didSaveSample))(v0[34]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_256003558()
{
  char v26 = v0;
  uint64_t v2 = (void *)v0[50];
  uint64_t v1 = (void *)v0[51];
  swift_release();
  swift_willThrow();

  sub_256175B48();
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_256175B58();
  os_log_type_t v6 = sub_256178218();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (void *)v0[51];
    uint64_t v8 = v0[38];
    uint64_t v23 = v0[37];
    uint64_t v24 = v0[40];
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    v25[0] = v10;
    *(_DWORD *)uint64_t v9 = 136446466;
    uint64_t v11 = sub_256178978();
    v0[30] = sub_255FB29A8(v11, v12, v25);
    sub_256178458();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    v0[29] = v7;
    id v13 = v7;
    sub_255FB3160();
    uint64_t v14 = sub_256177F18();
    v0[28] = sub_255FB29A8(v14, v15, v25);
    sub_256178458();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_255F58000, v5, v6, "[%{public}s] Failed to save sample: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A2A1E90](v10, -1, -1);
    MEMORY[0x25A2A1E90](v9, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v24, v23);
  }
  else
  {
    id v16 = (void *)v0[51];
    uint64_t v17 = v0[40];
    uint64_t v18 = v0[37];
    uint64_t v19 = v0[38];

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  }
  uint64_t v20 = (void *)v0[51];
  sub_255FFDBD0(8, 0);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_256003818()
{
  id v29 = v0;
  uint64_t v2 = (void *)v0[54];
  uint64_t v1 = (void *)v0[55];
  id v3 = (void *)v0[53];
  uint64_t v4 = v0[45];
  uint64_t v5 = v0[42];
  uint64_t v6 = v0[43];
  swift_release();
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);

  sub_256175B48();
  id v7 = v1;
  id v8 = v1;
  uint64_t v9 = sub_256175B58();
  os_log_type_t v10 = sub_256178218();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (void *)v0[55];
    uint64_t v25 = v0[38];
    uint64_t v26 = v0[37];
    uint64_t v27 = v0[39];
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    v28[0] = v13;
    *(_DWORD *)uint64_t v12 = 136446466;
    uint64_t v14 = sub_256178978();
    v0[31] = sub_255FB29A8(v14, v15, v28);
    sub_256178458();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    v0[32] = v11;
    id v16 = v11;
    sub_255FB3160();
    uint64_t v17 = sub_256177F18();
    v0[33] = sub_255FB29A8(v17, v18, v28);
    sub_256178458();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_255F58000, v9, v10, "[%{public}s] Failed to save association: %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A2A1E90](v13, -1, -1);
    MEMORY[0x25A2A1E90](v12, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v27, v26);
  }
  else
  {
    uint64_t v19 = (void *)v0[55];
    uint64_t v21 = v0[38];
    uint64_t v20 = v0[39];
    uint64_t v22 = v0[37];

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  }
  (*(void (**)(void))(v0[35] + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_didSaveSample))(v0[34]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
  return v23();
}

uint64_t sub_256003B10()
{
  v1[19] = v0;
  v1[20] = *v0;
  uint64_t v2 = sub_256175B68();
  v1[21] = v2;
  v1[22] = *(void *)(v2 - 8);
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  uint64_t v3 = sub_256175868();
  v1[25] = v3;
  v1[26] = *(void *)(v3 - 8);
  v1[27] = swift_task_alloc();
  sub_2561780C8();
  v1[28] = sub_2561780B8();
  uint64_t v5 = sub_256178088();
  v1[29] = v5;
  v1[30] = v4;
  return MEMORY[0x270FA2498](sub_256003C98, v5, v4);
}

uint64_t sub_256003C98()
{
  if (sub_255FFDAB8())
  {
    uint64_t v2 = v0[26];
    uint64_t v1 = v0[27];
    uint64_t v3 = v0[25];
    uint64_t v4 = (void *)*MEMORY[0x263F09800];
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A3B8]), sel_initWithFeatureIdentifier_healthStore_, *MEMORY[0x263F09800], *(void *)(v0[19] + 16));
    v0[31] = v5;
    id v6 = v4;
    sub_256175828();
    id v7 = objc_allocWithZone(MEMORY[0x263F0A5B0]);
    id v8 = (void *)sub_2561757F8();
    id v9 = objc_msgSend(v7, sel_initWithFeatureIdentifier_version_completionDate_countryCode_countryCodeProvenance_, v6, 1, v8, 0, 0);
    v0[32] = v9;

    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
    v0[2] = v0;
    v0[3] = sub_256003ED0;
    uint64_t v10 = swift_continuation_init();
    v0[10] = MEMORY[0x263EF8330];
    v0[11] = 0x40000000;
    v0[12] = sub_256005778;
    v0[13] = &block_descriptor_81;
    v0[14] = v10;
    objc_msgSend(v5, sel_saveOnboardingCompletion_settings_completion_, v9, 0, v0 + 10);
    return MEMORY[0x270FA23F0](v0 + 2);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
}

uint64_t sub_256003ED0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 264) = v2;
  uint64_t v3 = *(void *)(v1 + 240);
  uint64_t v4 = *(void *)(v1 + 232);
  if (v2) {
    id v5 = sub_25600420C;
  }
  else {
    id v5 = sub_256004000;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_256004000()
{
  uint64_t v19 = v0;
  swift_release();
  sub_256175B48();
  uint64_t v1 = sub_256175B58();
  os_log_type_t v2 = sub_256178238();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void **)(v0 + 256);
    uint64_t v17 = *(void *)(v0 + 192);
    uint64_t v4 = *(void *)(v0 + 176);
    unint64_t v15 = *(void **)(v0 + 248);
    uint64_t v16 = *(void *)(v0 + 168);
    id v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v18 = v6;
    *(_DWORD *)id v5 = 136446210;
    uint64_t v7 = sub_256178978();
    *(void *)(v0 + 144) = sub_255FB29A8(v7, v8, &v18);
    sub_256178458();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_255F58000, v1, v2, "[%{public}s]: Successfully saved onboarding record", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2A1E90](v6, -1, -1);
    MEMORY[0x25A2A1E90](v5, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v17, v16);
  }
  else
  {
    id v9 = *(void **)(v0 + 248);
    uint64_t v10 = *(void *)(v0 + 192);
    uint64_t v11 = *(void *)(v0 + 168);
    uint64_t v12 = *(void *)(v0 + 176);

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_25600420C()
{
  uint64_t v27 = v0;
  uint64_t v1 = *(void **)(v0 + 264);
  swift_release();
  swift_willThrow();
  sub_256175B48();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_256175B58();
  os_log_type_t v5 = sub_256178218();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void **)(v0 + 264);
    uint64_t v22 = *(void **)(v0 + 256);
    uint64_t v23 = *(void **)(v0 + 248);
    uint64_t v7 = *(void *)(v0 + 176);
    uint64_t v24 = *(void *)(v0 + 168);
    uint64_t v25 = *(void *)(v0 + 184);
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    v26[0] = v9;
    *(_DWORD *)uint64_t v8 = 136446466;
    uint64_t v10 = sub_256178978();
    *(void *)(v0 + 12__isPlatformVersionAtLeast(2, 18, 1, 0) = sub_255FB29A8(v10, v11, v26);
    sub_256178458();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2082;
    *(void *)(v0 + 128) = v6;
    id v12 = v6;
    sub_255FB3160();
    uint64_t v13 = sub_256177F18();
    *(void *)(v0 + 136) = sub_255FB29A8(v13, v14, v26);
    sub_256178458();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_255F58000, v4, v5, "[%{public}s]: Error saving onboarding record: %{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A2A1E90](v9, -1, -1);
    MEMORY[0x25A2A1E90](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v25, v24);
  }
  else
  {
    unint64_t v15 = *(void **)(v0 + 264);
    uint64_t v16 = *(void **)(v0 + 248);
    uint64_t v18 = *(void *)(v0 + 176);
    uint64_t v17 = *(void *)(v0 + 184);
    uint64_t v19 = *(void *)(v0 + 168);

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_2560044C8()
{
  v1[19] = v0;
  v1[20] = *v0;
  uint64_t v2 = sub_256175B68();
  v1[21] = v2;
  v1[22] = *(void *)(v2 - 8);
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  sub_2561780C8();
  v1[25] = sub_2561780B8();
  uint64_t v4 = sub_256178088();
  v1[26] = v4;
  v1[27] = v3;
  return MEMORY[0x270FA2498](sub_2560045F4, v4, v3);
}

uint64_t sub_2560045F4()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A558]), sel_initWithHealthStore_, *(void *)(v0[19] + 16));
  v0[28] = v1;
  v0[2] = v0;
  v0[3] = sub_256004718;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_256005778;
  v0[13] = &block_descriptor;
  v0[14] = v2;
  objc_msgSend(v1, sel_forceNanoSyncWithOptions_completion_, 0, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_256004718()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 232) = v2;
  uint64_t v3 = *(void *)(v1 + 216);
  uint64_t v4 = *(void *)(v1 + 208);
  if (v2) {
    os_log_type_t v5 = sub_256004A34;
  }
  else {
    os_log_type_t v5 = sub_256004848;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_256004848()
{
  uint64_t v17 = v0;
  swift_release();
  sub_256175B48();
  uint64_t v1 = sub_256175B58();
  os_log_type_t v2 = sub_256178238();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void **)(v0 + 224);
    uint64_t v4 = *(void *)(v0 + 176);
    uint64_t v14 = *(void *)(v0 + 168);
    uint64_t v15 = *(void *)(v0 + 192);
    os_log_type_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v16 = v6;
    *(_DWORD *)os_log_type_t v5 = 136446210;
    uint64_t v7 = sub_256178978();
    *(void *)(v0 + 144) = sub_255FB29A8(v7, v8, &v16);
    sub_256178458();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_255F58000, v1, v2, "[%{public}s] Successfully completed nano sync", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2A1E90](v6, -1, -1);
    MEMORY[0x25A2A1E90](v5, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v15, v14);
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 192);
    uint64_t v10 = *(void *)(v0 + 168);
    uint64_t v11 = *(void *)(v0 + 176);

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  id v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_256004A34()
{
  uint64_t v25 = v0;
  uint64_t v1 = *(void **)(v0 + 232);
  swift_release();
  swift_willThrow();
  sub_256175B48();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_256175B58();
  os_log_type_t v5 = sub_256178218();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void **)(v0 + 232);
    uint64_t v7 = *(void *)(v0 + 176);
    uint64_t v23 = *(void *)(v0 + 184);
    uint64_t v21 = *(void **)(v0 + 224);
    uint64_t v22 = *(void *)(v0 + 168);
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    v24[0] = v9;
    *(_DWORD *)uint64_t v8 = 136446466;
    uint64_t v10 = sub_256178978();
    *(void *)(v0 + 12__isPlatformVersionAtLeast(2, 18, 1, 0) = sub_255FB29A8(v10, v11, v24);
    sub_256178458();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2082;
    *(void *)(v0 + 128) = v6;
    id v12 = v6;
    sub_255FB3160();
    uint64_t v13 = sub_256177F18();
    *(void *)(v0 + 136) = sub_255FB29A8(v13, v14, v24);
    sub_256178458();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_255F58000, v4, v5, "[%{public}s] Nano sync finished with error: %{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A2A1E90](v9, -1, -1);
    MEMORY[0x25A2A1E90](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v23, v22);
  }
  else
  {
    uint64_t v15 = *(void **)(v0 + 232);
    uint64_t v17 = *(void *)(v0 + 176);
    uint64_t v16 = *(void *)(v0 + 184);
    uint64_t v18 = *(void *)(v0 + 168);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t type metadata accessor for StateOfMindEntryModel.Configuration(uint64_t a1)
{
  return sub_256008F08(a1, qword_26B2AD330);
}

void sub_256004CF0(uint64_t a1)
{
}

uint64_t sub_256004D24(uint64_t a1, uint64_t a2)
{
  sub_256004CF0(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_256004D88()
{
  unint64_t result = qword_269F44748;
  if (!qword_269F44748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44748);
  }
  return result;
}

unint64_t sub_256004DDC()
{
  unint64_t result = qword_269F44750;
  if (!qword_269F44750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44750);
  }
  return result;
}

unint64_t sub_256004E30()
{
  unint64_t result = qword_269F44768;
  if (!qword_269F44768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44768);
  }
  return result;
}

unint64_t sub_256004E84()
{
  unint64_t result = qword_269F44770;
  if (!qword_269F44770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44770);
  }
  return result;
}

unint64_t sub_256004ED8()
{
  unint64_t result = qword_269F44780;
  if (!qword_269F44780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44780);
  }
  return result;
}

uint64_t sub_256004F2C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_256004F74()
{
  unint64_t result = qword_269F44798;
  if (!qword_269F44798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44798);
  }
  return result;
}

unint64_t sub_256004FC8()
{
  unint64_t result = qword_269F447A0;
  if (!qword_269F447A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F447A0);
  }
  return result;
}

uint64_t sub_25600501C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_256005084(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_2560050EC(uint64_t a1)
{
}

void sub_256005120(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_256005184(uint64_t a1)
{
}

void sub_2560051C0(uint64_t a1)
{
}

void sub_2560051F4(uint64_t a1)
{
}

void sub_256005228(uint64_t a1)
{
}

void sub_25600525C(uint64_t a1)
{
}

void sub_256005290(uint64_t a1)
{
}

void sub_2560052C4(uint64_t a1)
{
}

void sub_2560052F8(uint64_t a1)
{
}

uint64_t sub_25600532C(char a1, void *a2)
{
  v36[1] = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_256175B68();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v32 - v9;
  if (a1)
  {
    sub_256175B48();
    unint64_t v11 = sub_256175B58();
    os_log_type_t v12 = sub_2561781F8();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      v36[0] = v14;
      *(_DWORD *)uint64_t v13 = 136446210;
      uint64_t v15 = sub_256178978();
      uint64_t v35 = sub_255FB29A8(v15, v16, v36);
      sub_256178458();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_255F58000, v11, v12, "[%{public}s] Successfully submitted analytics", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A1E90](v14, -1, -1);
      MEMORY[0x25A2A1E90](v13, -1, -1);
    }

    uint64_t v17 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
    uint64_t v18 = v10;
    goto LABEL_9;
  }
  sub_256175B48();
  id v19 = a2;
  id v20 = a2;
  uint64_t v21 = sub_256175B58();
  os_log_type_t v22 = sub_256178218();
  if (!os_log_type_enabled(v21, v22))
  {

    uint64_t v17 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
    uint64_t v18 = v8;
LABEL_9:
    uint64_t v29 = v4;
    return v17(v18, v29);
  }
  uint64_t v34 = v4;
  uint64_t v23 = swift_slowAlloc();
  uint64_t v24 = (void *)swift_slowAlloc();
  uint64_t v33 = swift_slowAlloc();
  v36[0] = v33;
  *(_DWORD *)uint64_t v23 = 136446466;
  uint64_t v25 = sub_256178978();
  uint64_t v35 = sub_255FB29A8(v25, v26, v36);
  sub_256178458();
  swift_bridgeObjectRelease();
  *(_WORD *)(v23 + 12) = 2112;
  if (a2)
  {
    id v27 = a2;
    uint64_t v28 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v35 = v28;
    sub_256178458();
  }
  else
  {
    uint64_t v35 = 0;
    sub_256178458();
    uint64_t v28 = 0;
  }
  *uint64_t v24 = v28;

  _os_log_impl(&dword_255F58000, v21, v22, "[%{public}s] Failed to submit analytics with error: %@", (uint8_t *)v23, 0x16u);
  sub_25600AE2C(0, &qword_269F44928, &qword_269F44930, 0x263F8C6D0, MEMORY[0x263F8D8F0]);
  swift_arrayDestroy();
  MEMORY[0x25A2A1E90](v24, -1, -1);
  uint64_t v30 = v33;
  swift_arrayDestroy();
  MEMORY[0x25A2A1E90](v30, -1, -1);
  MEMORY[0x25A2A1E90](v23, -1, -1);

  uint64_t v17 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  uint64_t v18 = v8;
  uint64_t v29 = v34;
  return v17(v18, v29);
}

uint64_t sub_256005778(uint64_t a1, int a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a2)
  {
    a1 = *(void *)(a1 + 32);
    return MEMORY[0x270FA2408](a1);
  }
  if (!a3)
  {
    __break(1u);
    return MEMORY[0x270FA2408](a1);
  }
  sub_255FB3160();
  uint64_t v5 = swift_allocError();
  *uint64_t v6 = a3;
  id v7 = a3;

  return MEMORY[0x270FA2410](v3, v5);
}

uint64_t sub_256005814(uint64_t a1)
{
  v2[9] = a1;
  v2[10] = v1;
  v2[11] = *v1;
  uint64_t v3 = sub_256175B68();
  v2[12] = v3;
  v2[13] = *(void *)(v3 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  sub_25600AE2C(0, &qword_269F44950, &qword_269F44958, 0x263F0A6B8, MEMORY[0x263F09010]);
  v2[16] = v4;
  v2[17] = *(void *)(v4 - 8);
  v2[18] = swift_task_alloc();
  sub_2561780C8();
  v2[19] = sub_2561780B8();
  uint64_t v6 = sub_256178088();
  v2[20] = v6;
  v2[21] = v5;
  return MEMORY[0x270FA2498](sub_2560059C8, v6, v5);
}

uint64_t sub_2560059C8()
{
  uint64_t v1 = v0[10] + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_configuration;
  swift_beginAccess();
  uint64_t v2 = type metadata accessor for StateOfMindEntryModel.Configuration(0);
  if (*(void *)(v1 + *(int *)(v2 + 28) + 8))
  {
    uint64_t v20 = v0[10];
    uint64_t v3 = self;
    uint64_t v4 = (void *)*MEMORY[0x263F54FA0];
    swift_bridgeObjectRetain();
    id v5 = v4;
    uint64_t v6 = (void *)sub_256177EA8();
    swift_bridgeObjectRelease();
    id v7 = objc_msgSend(v3, sel_predicateForObjectsWithMetadataKey_operatorType_value_, v5, 4, v6);
    v0[22] = v7;

    uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F08FD0];
    sub_25600AEE0(0, (unint64_t *)&qword_269F44960, &qword_269F44968, MEMORY[0x263F08FD0]);
    sub_25600AE2C(0, &qword_269F44968, &qword_269F44958, 0x263F0A6B8, v8);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_2561A0960;
    sub_255FB58F8(0, &qword_269F44970);
    uint64_t v9 = (void *)MEMORY[0x25A2A0CE0]((id)*MEMORY[0x263F09388]);
    sub_255FB58F8(0, &qword_269F44958);
    id v10 = v7;
    sub_256177CD8();

    unint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F06408];
    sub_25600AEE0(0, &qword_269F44978, &qword_269F44980, MEMORY[0x263F06408]);
    sub_25600AE2C(0, &qword_269F44980, &qword_269F44958, 0x263F0A6B8, v11);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_2561A0960;
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x25A29E030](KeyPath, 1);
    sub_256177CE8();
    uint64_t v13 = *(void *)(v20 + 16);
    uint64_t v14 = (void *)swift_task_alloc();
    v0[23] = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_256005E10;
    uint64_t v15 = v0[16];
    return MEMORY[0x270EF3200](v13, v15);
  }
  else
  {
    uint64_t v16 = v2;
    uint64_t v17 = v0[9];
    swift_release();
    sub_25600501C(v1 + *(int *)(v16 + 24), v17, (uint64_t (*)(void))sub_256004CF0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    return v18();
  }
}

uint64_t sub_256005E10(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 192) = a1;
  *(void *)(v4 + 20__isPlatformVersionAtLeast(2, 18, 1, 0) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 168);
  uint64_t v6 = *(void *)(v3 + 160);
  if (v1) {
    id v7 = sub_2560062E8;
  }
  else {
    id v7 = sub_256005F54;
  }
  return MEMORY[0x270FA2498](v7, v6, v5);
}

uint64_t sub_256005F54()
{
  uint64_t v32 = v0;
  unint64_t v1 = v0[24];
  uint64_t result = swift_release();
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_256178678();
    uint64_t result = swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    sub_256175B48();
    os_log_type_t v12 = sub_256175B58();
    os_log_type_t v13 = sub_256178218();
    BOOL v14 = os_log_type_enabled(v12, v13);
    uint64_t v15 = (void *)v0[22];
    uint64_t v17 = v0[17];
    uint64_t v16 = v0[18];
    uint64_t v19 = v0[15];
    uint64_t v18 = v0[16];
    uint64_t v20 = v0[12];
    uint64_t v21 = v0[13];
    if (v14)
    {
      uint64_t v30 = v0[16];
      os_log_type_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = v20;
      uint64_t v23 = swift_slowAlloc();
      uint64_t v31 = v23;
      *(_DWORD *)os_log_type_t v22 = 136446210;
      uint64_t v24 = sub_256178978();
      v0[8] = sub_255FB29A8(v24, v25, &v31);
      sub_256178458();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_255F58000, v12, v13, "[%{public}s] Unable to find associated Fitness+ meditation session sample", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A1E90](v23, -1, -1);
      MEMORY[0x25A2A1E90](v22, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v29);
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v30);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    }
    uint64_t v26 = v0[9];
    uint64_t v27 = sub_2561758A8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 1, 1, v27);
    goto LABEL_12;
  }
  if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    id v3 = (id)MEMORY[0x25A2A1000](0, v0[24]);
  }
  else
  {
    if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    id v3 = *(id *)(v0[24] + 32);
  }
  uint64_t v4 = (void *)v0[22];
  uint64_t v6 = v0[17];
  uint64_t v5 = v0[18];
  uint64_t v7 = v0[16];
  uint64_t v8 = v0[9];
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v3, sel_UUID);
  sub_256175898();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  uint64_t v10 = sub_2561758A8();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 0, 1, v10);
LABEL_12:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = (uint64_t (*)(void))v0[1];
  return v28();
}

uint64_t sub_2560062E8()
{
  uint64_t v34 = v0;
  unint64_t v1 = (void *)v0[25];
  swift_release();
  sub_256175B48();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_256175B58();
  os_log_type_t v5 = sub_256178218();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[25];
    uint64_t v30 = v0[17];
    uint64_t v31 = v0[16];
    uint64_t v32 = v0[18];
    uint64_t v7 = v0[13];
    uint64_t v28 = (void *)v0[22];
    uint64_t v29 = v0[14];
    uint64_t v27 = v0[12];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v33 = v9;
    *(_DWORD *)uint64_t v8 = 136446466;
    uint64_t v10 = sub_256178978();
    v0[5] = sub_255FB29A8(v10, v11, &v33);
    sub_256178458();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    v0[6] = v6;
    id v12 = v6;
    sub_255FB3160();
    uint64_t v13 = sub_256177F18();
    v0[7] = sub_255FB29A8(v13, v14, &v33);
    sub_256178458();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_255F58000, v4, v5, "[%{public}s] Error querying find associated samples: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A2A1E90](v9, -1, -1);
    MEMORY[0x25A2A1E90](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v29, v27);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v32, v31);
  }
  else
  {
    uint64_t v15 = (void *)v0[25];
    uint64_t v16 = (void *)v0[22];
    uint64_t v18 = v0[17];
    uint64_t v17 = v0[18];
    uint64_t v19 = v0[16];
    uint64_t v21 = v0[13];
    uint64_t v20 = v0[14];
    uint64_t v22 = v0[12];

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  uint64_t v23 = v0[9];
  uint64_t v24 = sub_2561758A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v25 = (uint64_t (*)(void))v0[1];
  return v25();
}

void sub_256006624(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_startDate);
  sub_256175818();
}

uint64_t StateOfMindEntryModel.deinit()
{
  sub_256005084(v0 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_configuration, type metadata accessor for StateOfMindEntryModel.Configuration);
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__date;
  sub_2560050EC(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__reflectiveInterval;
  sub_2560051C0(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__valence;
  uint64_t v6 = (uint64_t (*)(void, uint64_t))MEMORY[0x263EFDE58];
  sub_25600AE94(0, &qword_269F447D8, MEMORY[0x263F8D538], MEMORY[0x263EFDE58]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v9(v5, v7);
  uint64_t v10 = v0 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__labels;
  sub_256005228(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = v0 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__domains;
  sub_2560052C4(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  uint64_t v14 = v0 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__context;
  sub_25600AE94(0, &qword_269F44810, MEMORY[0x263F8D310], v6);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  v9(v0 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__effectiveValence, v8);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel____lazy_storage___eventSubmissionManager));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t StateOfMindEntryModel.__deallocating_deinit()
{
  StateOfMindEntryModel.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_256006960(void *a1, uint64_t a2, int a3)
{
  int v31 = a3;
  uint64_t v29 = a2;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F8E0C0];
  sub_25600ACE4(0, &qword_269F448B8, (uint64_t (*)(void))sub_25600A3F8, (uint64_t)&type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.InferredCodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v24 = (char *)&v22 - v6;
  sub_25600ACE4(0, &qword_269F448C8, (uint64_t (*)(void))sub_25600A44C, (uint64_t)&type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.FixedCodingKeys, v4);
  uint64_t v25 = *(void *)(v7 - 8);
  uint64_t v26 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v22 - v8;
  sub_25600ACE4(0, &qword_269F448D8, (uint64_t (*)(void))sub_25600A4A0, (uint64_t)&type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.ExplicitCodingKeys, v4);
  uint64_t v11 = v10;
  uint64_t v23 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v22 - v12;
  sub_25600ACE4(0, &qword_269F448E8, (uint64_t (*)(void))sub_25600A4F4, (uint64_t)&type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.CodingKeys, v4);
  uint64_t v15 = v14;
  uint64_t v30 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v22 - v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25600A4F4();
  sub_256178948();
  if (!(_BYTE)v31)
  {
    uint64_t v19 = v23;
    char v32 = 0;
    sub_25600A4A0();
    sub_256178778();
    sub_2561787A8();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v13, v11);
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v17, v15);
  }
  if (v31 == 1)
  {
    char v33 = 1;
    sub_25600A44C();
    sub_256178778();
    uint64_t v18 = v26;
    sub_2561787A8();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v18);
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v17, v15);
  }
  char v34 = 2;
  sub_25600A3F8();
  uint64_t v21 = v24;
  sub_256178778();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v21, v28);
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v17, v15);
}

uint64_t sub_256006DD8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_256175C08();
  *a1 = result;
  return result;
}

uint64_t sub_256006E28()
{
  uint64_t v1 = 0x6465786966;
  if (*v0 != 1) {
    uint64_t v1 = 0x6465727265666E69;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746963696C707865;
  }
}

uint64_t sub_256006E80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25600A548(a1, a2);
  *a3 = result;
  return result;
}

void sub_256006EA8(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_256006EB4(uint64_t a1)
{
  unint64_t v2 = sub_25600A4F4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256006EF0(uint64_t a1)
{
  unint64_t v2 = sub_25600A4F4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256006F34()
{
  return 0x65756C6156776172;
}

void sub_256006F50(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_256006F5C(uint64_t a1)
{
  unint64_t v2 = sub_25600A4A0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_256006F98(uint64_t a1)
{
  unint64_t v2 = sub_25600A4A0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256006FD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x65756C6156776172 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_256178828();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_25600706C(uint64_t a1)
{
  unint64_t v2 = sub_25600A44C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2560070A8(uint64_t a1)
{
  unint64_t v2 = sub_25600A44C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2560070E4()
{
  return 0;
}

uint64_t sub_2560070F0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_256007120(uint64_t a1)
{
  unint64_t v2 = sub_25600A3F8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25600715C(uint64_t a1)
{
  unint64_t v2 = sub_25600A3F8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_256007198()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 8);
  sub_2561788E8();
  if (v1 <= 1) {
    sub_2561788F8();
  }
  sub_2561788F8();
  return sub_256178928();
}

uint64_t sub_25600720C()
{
  if (!*(unsigned char *)(v0 + 8) || *(unsigned char *)(v0 + 8) == 1) {
    sub_2561788F8();
  }
  return sub_2561788F8();
}

uint64_t sub_256007254()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 8);
  sub_2561788E8();
  if (v1 <= 1) {
    sub_2561788F8();
  }
  sub_2561788F8();
  return sub_256178928();
}

uint64_t sub_2560072C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_25600A698(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5;
  }
  return result;
}

uint64_t sub_2560072F4(void *a1)
{
  return sub_256006960(a1, *(void *)v1, *(unsigned __int8 *)(v1 + 8));
}

uint64_t sub_256007314(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  int v4 = *((unsigned __int8 *)a2 + 8);
  if (*((unsigned char *)a2 + 8)) {
    BOOL v5 = 0;
  }
  else {
    BOOL v5 = v2 == v3;
  }
  unsigned int v6 = v5;
  BOOL v8 = v4 == 1 && v2 == v3;
  BOOL v10 = v4 == 2 && v3 == 0;
  if (*((unsigned char *)a1 + 8) != 1) {
    BOOL v8 = v10;
  }
  if (*((unsigned char *)a1 + 8)) {
    return v8;
  }
  else {
    return v6;
  }
}

uint64_t static StateOfMindEntryModel.Configuration.InitialReflectiveInterval.explicitFromKind(_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = HKStateOfMindReflectiveIntervalFromKind();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = 0;
  return result;
}

uint64_t static StateOfMindEntryModel.Configuration.InitialReflectiveInterval.fixed(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = 1;
  return result;
}

void static StateOfMindEntryModel.Configuration.InitialReflectiveInterval.inferred.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 2;
}

uint64_t StateOfMindEntryModel.Configuration.InitialReflectiveInterval.hash(into:)()
{
  if (!*(unsigned char *)(v0 + 8) || *(unsigned char *)(v0 + 8) == 1) {
    sub_2561788F8();
  }
  return sub_2561788F8();
}

BOOL static StateOfMindEntryModel.Configuration.InitialReflectiveInterval.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  int v4 = *((unsigned __int8 *)a2 + 8);
  if (!*((unsigned char *)a1 + 8)) {
    return !*((unsigned char *)a2 + 8) && v2 == v3;
  }
  if (*((unsigned char *)a1 + 8) != 1) {
    return v4 == 2 && v3 == 0;
  }
  return v4 == 1 && v2 == v3;
}

uint64_t sub_256007444()
{
  return sub_256178928();
}

uint64_t sub_256007488()
{
  return sub_2561788F8();
}

uint64_t sub_2560074B0()
{
  return sub_256178928();
}

uint64_t sub_2560074F0()
{
  return 0x656761726F7473;
}

uint64_t sub_256007508@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x656761726F7473 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_256178828();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2560075A0(uint64_t a1)
{
  unint64_t v2 = sub_256008A64();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2560075DC(uint64_t a1)
{
  unint64_t v2 = sub_256008A64();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StateOfMindEntryModel.Configuration.InitialReflectiveInterval.encode(to:)(void *a1)
{
  sub_25600ACE4(0, &qword_269F44838, (uint64_t (*)(void))sub_256008A64, (uint64_t)&type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v7 = (char *)&v11 - v6;
  uint64_t v8 = *v1;
  char v9 = *((unsigned char *)v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_256008A64();
  sub_256178948();
  uint64_t v11 = v8;
  char v12 = v9;
  sub_256008AB8();
  sub_2561787B8();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t StateOfMindEntryModel.Configuration.InitialReflectiveInterval.hashValue.getter()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 8);
  sub_2561788E8();
  if (v1 <= 1) {
    sub_2561788F8();
  }
  sub_2561788F8();
  return sub_256178928();
}

uint64_t StateOfMindEntryModel.Configuration.InitialReflectiveInterval.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v14 = a2;
  sub_25600ACE4(0, &qword_269F44850, (uint64_t (*)(void))sub_256008A64, (uint64_t)&type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v12 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_256008A64();
  sub_256178938();
  if (!v2)
  {
    uint64_t v9 = v14;
    sub_256008B0C();
    sub_256178758();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v10 = v13;
    *(void *)uint64_t v9 = v12;
    *(unsigned char *)(v9 + 8) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_2560079D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StateOfMindEntryModel.Configuration.InitialReflectiveInterval.init(from:)(a1, a2);
}

uint64_t sub_2560079F0(void *a1)
{
  return StateOfMindEntryModel.Configuration.InitialReflectiveInterval.encode(to:)(a1);
}

BOOL sub_256007A08(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  int v4 = *((unsigned __int8 *)a2 + 8);
  if (!*((unsigned char *)a1 + 8)) {
    return !*((unsigned char *)a2 + 8) && v2 == v3;
  }
  if (*((unsigned char *)a1 + 8) != 1) {
    return v4 == 2 && v3 == 0;
  }
  return v4 == 1 && v2 == v3;
}

uint64_t sub_256007A5C(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v4 = a3;
    uint64_t v5 = a2;
    uint64_t v6 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0) {
      uint64_t v6 = a2;
    }
    uint64_t v7 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
      uint64_t v7 = 11;
    }
    uint64_t v8 = v7 | (v6 << 16);
    uint64_t v9 = sub_256177F58();
    if (v10) {
      a2 = v8;
    }
    else {
      a2 = v9;
    }
    a1 = 15;
    a3 = v5;
    a4 = v4;
  }
  return MEMORY[0x270F9D8F0](a1, a2, a3, a4);
}

uint64_t sub_256007AF8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000019 && a2 == 0x80000002561AB270 || (sub_256178828() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000 || (sub_256178828() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002561AB290 || (sub_256178828() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002561AB2B0 || (sub_256178828() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x696F507972746E65 && a2 == 0xEA0000000000746ELL || (sub_256178828() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E616E65766F7270 && a2 == 0xEA00000000006563)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_256178828();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

void *sub_256007D60(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v87 = a4;
  uint64_t v88 = a3;
  uint64_t v89 = a2;
  uint64_t v86 = a1;
  uint64_t v83 = *v4;
  uint64_t v5 = sub_256175B68();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v84 = v5;
  uint64_t v85 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v80 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v79 = (char *)&v77 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v82 = (char *)&v77 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v81 = (char *)&v77 - v13;
  uint64_t v14 = sub_256175868();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v77 - v19;
  sub_25600AE94(0, &qword_269F447D8, MEMORY[0x263F8D538], MEMORY[0x263EFDE58]);
  uint64_t v22 = v21;
  uint64_t v23 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v77 - v24;
  uint64_t v26 = (char *)v4 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__effectiveValence;
  v92[0] = 0;
  sub_256175C48();
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v26, v25, v22);
  *((unsigned char *)v4 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel____lazy_storage___isCompletingFirstTimeFlow) = 2;
  *((unsigned char *)v4 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_hasInitiatedSampleSave) = 0;
  *(void *)((char *)v4
            + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel____lazy_storage___eventSubmissionManager) = 0;
  *(void *)((char *)v4 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_completedAnalyticsSteps) = MEMORY[0x263F8EE88];
  uint64_t v27 = v86;
  v4[2] = v86;
  uint64_t v28 = v89;
  sub_25600501C(v89, (uint64_t)v4 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_configuration, type metadata accessor for StateOfMindEntryModel.Configuration);
  uint64_t v29 = (void *)((char *)v4 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_didSaveSample);
  uint64_t v30 = v87;
  *uint64_t v29 = v88;
  v29[1] = v30;
  uint64_t v31 = type metadata accessor for StateOfMindEntryModel.Configuration(0);
  char v32 = *(void (**)(char *))(v15 + 16);
  uint64_t v78 = v28 + *(int *)(v31 + 20);
  v32(v20);
  uint64_t v88 = v4;
  swift_beginAccess();
  ((void (*)(char *, char *, uint64_t))v32)(v18, v20, v14);
  id v33 = v27;
  swift_retain();
  sub_256175C48();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  swift_endAccess();
  uint64_t v34 = *(void *)v28;
  if (!*(unsigned char *)(v28 + 8))
  {
    swift_beginAccess();
    uint64_t v90 = v34;
    type metadata accessor for __HKStateOfMindReflectiveInterval(0);
    sub_256175C48();
    swift_endAccess();
    uint64_t v35 = v81;
    sub_256175B48();
    uint64_t v36 = sub_256175B58();
    os_log_type_t v37 = sub_256178238();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      v92[0] = v39;
      *(_DWORD *)uint64_t v38 = 136446466;
      uint64_t v45 = sub_256178978();
      uint64_t v90 = sub_255FB29A8(v45, v46, v92);
      sub_256178458();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 12) = 2082;
      uint64_t v90 = v34;
      uint64_t v47 = sub_256177F08();
      uint64_t v90 = sub_255FB29A8(v47, v48, v92);
      sub_256178458();
      swift_bridgeObjectRelease();
      id v44 = "[%{public}s] Initialized with explicit: %{public}s";
      goto LABEL_7;
    }
LABEL_8:

    goto LABEL_9;
  }
  if (*(unsigned char *)(v28 + 8) == 1)
  {
    swift_beginAccess();
    uint64_t v90 = v34;
    type metadata accessor for __HKStateOfMindReflectiveInterval(0);
    sub_256175C48();
    swift_endAccess();
    uint64_t v35 = v82;
    sub_256175B48();
    uint64_t v36 = sub_256175B58();
    os_log_type_t v37 = sub_256178238();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      v92[0] = v39;
      *(_DWORD *)uint64_t v38 = 136446466;
      uint64_t v40 = sub_256178978();
      uint64_t v90 = sub_255FB29A8(v40, v41, v92);
      sub_256178458();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 12) = 2082;
      uint64_t v90 = v34;
      uint64_t v42 = sub_256177F08();
      uint64_t v90 = sub_255FB29A8(v42, v43, v92);
      sub_256178458();
      swift_bridgeObjectRelease();
      id v44 = "[%{public}s] Initialized with fixed: %{public}s";
LABEL_7:
      _os_log_impl(&dword_255F58000, v36, v37, v44, (uint8_t *)v38, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25A2A1E90](v39, -1, -1);
      MEMORY[0x25A2A1E90](v38, -1, -1);
      goto LABEL_8;
    }
    goto LABEL_8;
  }
  uint64_t result = objc_msgSend(self, sel_sharedBehavior);
  if (result)
  {
    uint64_t v56 = result;
    unsigned int v57 = objc_msgSend(result, sel_isAppleWatch);

    if (v57)
    {
      swift_beginAccess();
      uint64_t v90 = 1;
      type metadata accessor for __HKStateOfMindReflectiveInterval(0);
      sub_256175C48();
      swift_endAccess();
      uint64_t v35 = v79;
      sub_256175B48();
      unint64_t v58 = sub_256175B58();
      os_log_type_t v59 = sub_256178238();
      if (os_log_type_enabled(v58, v59))
      {
        uint64_t v60 = (uint8_t *)swift_slowAlloc();
        uint64_t v61 = swift_slowAlloc();
        v92[0] = v61;
        *(_DWORD *)uint64_t v60 = 136446210;
        uint64_t v62 = sub_256178978();
        uint64_t v90 = sub_255FB29A8(v62, v63, v92);
        sub_256178458();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_255F58000, v58, v59, "[%{public}s] Initialized (not inferring reflective interval)", v60, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x25A2A1E90](v61, -1, -1);
        MEMORY[0x25A2A1E90](v60, -1, -1);
      }
    }
    else
    {
      id v64 = objc_allocWithZone(MEMORY[0x263F75EA8]);
      id v65 = v33;
      uint64_t v66 = (void *)sub_256177EA8();
      id v67 = objc_msgSend(v64, sel_initWithIdentifier_healthStore_, v66, v65);

      type metadata accessor for PreferredReflectiveIntervalProvider();
      *(void *)(swift_initStackObject() + 16) = v67;
      uint64_t v68 = sub_25609AB44(v78);
      swift_beginAccess();
      uint64_t v90 = v68;
      type metadata accessor for __HKStateOfMindReflectiveInterval(0);
      sub_256175C48();
      swift_endAccess();
      uint64_t v35 = v80;
      sub_256175B48();
      uint64_t v69 = sub_256175B58();
      os_log_type_t v70 = sub_256178238();
      if (os_log_type_enabled(v69, v70))
      {
        uint64_t v71 = swift_slowAlloc();
        uint64_t v72 = swift_slowAlloc();
        v92[0] = v72;
        *(_DWORD *)uint64_t v71 = 136446466;
        uint64_t v73 = sub_256178978();
        uint64_t v90 = sub_255FB29A8(v73, v74, v92);
        sub_256178458();
        swift_bridgeObjectRelease();
        *(_WORD *)(v71 + 12) = 2082;
        uint64_t v90 = v68;
        uint64_t v75 = sub_256177F08();
        uint64_t v90 = sub_255FB29A8(v75, v76, v92);
        sub_256178458();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_255F58000, v69, v70, "[%{public}s] Initialized with inferred: %{public}s", (uint8_t *)v71, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x25A2A1E90](v72, -1, -1);
        MEMORY[0x25A2A1E90](v71, -1, -1);

        swift_release();
        (*(void (**)(char *, uint64_t))(v85 + 8))(v80, v84);
        goto LABEL_10;
      }

      swift_release();
    }
LABEL_9:
    (*(void (**)(char *, uint64_t))(v85 + 8))(v35, v84);
LABEL_10:
    double v50 = v88;
    uint64_t v49 = v89;
    swift_beginAccess();
    uint64_t v90 = 0;
    sub_256175C48();
    swift_endAccess();
    swift_beginAccess();
    uint64_t v51 = MEMORY[0x263F8EE78];
    uint64_t v90 = MEMORY[0x263F8EE78];
    sub_25600525C(0);
    sub_256175C48();
    swift_endAccess();
    swift_beginAccess();
    uint64_t v90 = v51;
    sub_255FEAE7C(0);
    sub_256175C48();
    swift_endAccess();
    swift_beginAccess();
    uint64_t v90 = 0;
    unint64_t v91 = 0xE000000000000000;
    sub_256175C48();
    swift_endAccess();
    id v52 = objc_msgSend(self, sel_hkmh_mentalHealthDefaults);
    uint64_t v53 = (void *)sub_256177EA8();
    unsigned __int8 v54 = objc_msgSend(v52, sel_BOOLForKey_, v53);

    sub_256005084(v49, type metadata accessor for StateOfMindEntryModel.Configuration);
    *((unsigned char *)v50 + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_useLiveVisualization) = v54 ^ 1;
    return v50;
  }
  __break(1u);
  return result;
}

uint64_t sub_256008A00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StateOfMindEntryModel.Configuration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_256008A64()
{
  unint64_t result = qword_269F44840;
  if (!qword_269F44840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44840);
  }
  return result;
}

unint64_t sub_256008AB8()
{
  unint64_t result = qword_269F44848;
  if (!qword_269F44848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44848);
  }
  return result;
}

unint64_t sub_256008B0C()
{
  unint64_t result = qword_269F44858;
  if (!qword_269F44858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44858);
  }
  return result;
}

unint64_t sub_256008B64()
{
  unint64_t result = qword_269F44860;
  if (!qword_269F44860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44860);
  }
  return result;
}

uint64_t sub_256008BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2560002A0(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__date, sub_2560050EC);
}

uint64_t sub_256008BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_256000314(a1, a2, a3, a4, (uint64_t (*)(void))sub_256005184, (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__date, sub_2560050EC);
}

uint64_t sub_256008C34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2560002A0(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__reflectiveInterval, sub_2560051C0);
}

uint64_t sub_256008C68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_256000314(a1, a2, a3, a4, (uint64_t (*)(void))sub_2560051F4, (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__reflectiveInterval, sub_2560051C0);
}

uint64_t sub_256008CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256000860(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__valence, &qword_269F447D8, MEMORY[0x263F8D538]);
}

uint64_t sub_256008CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2560008F0(a1, a2, a3, a4, &qword_269F447E0, MEMORY[0x263F8D538], (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__valence, &qword_269F447D8);
}

uint64_t sub_256008D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2560002A0(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__labels, sub_256005228);
}

uint64_t sub_256008D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_256000314(a1, a2, a3, a4, (uint64_t (*)(void))sub_256005290, (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__labels, sub_256005228);
}

uint64_t sub_256008D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2560002A0(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__domains, sub_2560052C4);
}

uint64_t sub_256008DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_256000314(a1, a2, a3, a4, (uint64_t (*)(void))sub_2560052F8, (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__domains, sub_2560052C4);
}

uint64_t sub_256008E10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256000860(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__context, &qword_269F44810, MEMORY[0x263F8D310]);
}

uint64_t sub_256008E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2560008F0(a1, a2, a3, a4, &qword_269F44818, MEMORY[0x263F8D310], (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__context, &qword_269F44810);
}

uint64_t sub_256008E78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_256000860(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__effectiveValence, &qword_269F447D8, MEMORY[0x263F8D538]);
}

uint64_t sub_256008EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2560008F0(a1, a2, a3, a4, &qword_269F447E0, MEMORY[0x263F8D538], (uint64_t)&OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel__effectiveValence, &qword_269F447D8);
}

uint64_t sub_256008EE0()
{
  return type metadata accessor for StateOfMindEntryModel(0);
}

uint64_t type metadata accessor for StateOfMindEntryModel(uint64_t a1)
{
  return sub_256008F08(a1, (uint64_t *)&unk_269F44870);
}

uint64_t sub_256008F08(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_256008F40()
{
  type metadata accessor for StateOfMindEntryModel.Configuration(319);
  if (v0 <= 0x3F)
  {
    sub_2560050EC(319);
    if (v1 <= 0x3F)
    {
      sub_2560051C0(319);
      if (v2 <= 0x3F)
      {
        sub_25600AE94(319, &qword_269F447D8, MEMORY[0x263F8D538], MEMORY[0x263EFDE58]);
        if (v3 <= 0x3F)
        {
          sub_256005228(319);
          if (v4 <= 0x3F)
          {
            sub_2560052C4(319);
            if (v5 <= 0x3F)
            {
              sub_25600AE94(319, &qword_269F44810, MEMORY[0x263F8D310], MEMORY[0x263EFDE58]);
              if (v6 <= 0x3F) {
                swift_updateClassMetadata2();
              }
            }
          }
        }
      }
    }
  }
}

uint64_t method lookup function for StateOfMindEntryModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for StateOfMindEntryModel);
}

uint64_t dispatch thunk of StateOfMindEntryModel.__allocating_init(healthStore:configuration:onSampleSave:)()
{
  return (*(uint64_t (**)(void))(v0 + 200))();
}

void *initializeBufferWithCopyOfBuffer for StateOfMindEntryModel.Configuration(uint64_t a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v7 = a3[5];
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = sub_256175868();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[6];
    uint64_t v12 = (char *)v4 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_2561758A8();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      sub_256004CF0(0);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    uint64_t v18 = a3[7];
    uint64_t v19 = a3[8];
    uint64_t v20 = (void *)((char *)v4 + v18);
    uint64_t v21 = (uint64_t *)((char *)a2 + v18);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    *((unsigned char *)v4 + v19) = *((unsigned char *)a2 + v19);
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for StateOfMindEntryModel.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_256175868();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_2561758A8();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StateOfMindEntryModel.Configuration(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_256175868();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  uint64_t v13 = sub_2561758A8();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    sub_256004CF0(0);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = (void *)(a1 + v16);
  uint64_t v19 = (void *)(a2 + v16);
  uint64_t v20 = v19[1];
  void *v18 = *v19;
  v18[1] = v20;
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StateOfMindEntryModel.Configuration(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t)a2 + v7;
  uint64_t v10 = sub_256175868();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_2561758A8();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, char *, uint64_t))(v15 + 24))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    sub_256004CF0(0);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  uint64_t v20 = a3[7];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (uint64_t *)((char *)a2 + v20);
  void *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  return a1;
}

uint64_t initializeWithTake for StateOfMindEntryModel.Configuration(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_256175868();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  uint64_t v13 = sub_2561758A8();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    sub_256004CF0(0);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v16 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for StateOfMindEntryModel.Configuration(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_256175868();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = sub_2561758A8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    sub_256004CF0(0);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v11, v12, v13);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  uint64_t v19 = a3[7];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (uint64_t *)(a2 + v19);
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  *uint64_t v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v24) = *(unsigned char *)(a2 + v24);
  return a1;
}

uint64_t getEnumTagSinglePayload for StateOfMindEntryModel.Configuration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256009C48);
}

uint64_t sub_256009C48(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_256175868();
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  sub_256004CF0(0);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[6];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[7] + 8);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  int v14 = v13 - 1;
  if (v14 < 0) {
    int v14 = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for StateOfMindEntryModel.Configuration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256009D7C);
}

void sub_256009D7C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_256175868();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
  }
  else
  {
    sub_256004CF0(0);
    if (*(_DWORD *)(*(void *)(v12 - 8) + 84) != a3)
    {
      *(void *)(a1 + a4[7] + 8) = a2;
      return;
    }
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
  }
  unint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);

  v13(a1 + v11, a2, a2, v9);
}

void sub_256009E8C()
{
  sub_256175868();
  if (v0 <= 0x3F)
  {
    sub_256004CF0(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindEntryModel.Configuration.InitialReflectiveInterval()
{
  return &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval;
}

uint64_t _s14MentalHealthUI21StateOfMindEntryModelC13ConfigurationV25InitialReflectiveIntervalV7StorageOwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s14MentalHealthUI21StateOfMindEntryModelC13ConfigurationV25InitialReflectiveIntervalV7StorageOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_25600A034(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_25600A04C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage()
{
  return &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage;
}

ValueMetadata *type metadata accessor for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.CodingKeys()
{
  return &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for StateOfMindEntryModel.Configuration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25600A158);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindEntryModel.Configuration.CodingKeys()
{
  return &type metadata for StateOfMindEntryModel.Configuration.CodingKeys;
}

unint64_t sub_25600A194()
{
  unint64_t result = qword_269F44880;
  if (!qword_269F44880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44880);
  }
  return result;
}

unint64_t sub_25600A1EC()
{
  unint64_t result = qword_269F44888;
  if (!qword_269F44888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44888);
  }
  return result;
}

unint64_t sub_25600A244()
{
  unint64_t result = qword_269F44890;
  if (!qword_269F44890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44890);
  }
  return result;
}

unint64_t sub_25600A29C()
{
  unint64_t result = qword_269F44898;
  if (!qword_269F44898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44898);
  }
  return result;
}

unint64_t sub_25600A2F4()
{
  unint64_t result = qword_269F448A0;
  if (!qword_269F448A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F448A0);
  }
  return result;
}

unint64_t sub_25600A34C()
{
  unint64_t result = qword_269F448A8;
  if (!qword_269F448A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F448A8);
  }
  return result;
}

unint64_t sub_25600A3A4()
{
  unint64_t result = qword_269F448B0;
  if (!qword_269F448B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F448B0);
  }
  return result;
}

unint64_t sub_25600A3F8()
{
  unint64_t result = qword_269F448C0;
  if (!qword_269F448C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F448C0);
  }
  return result;
}

unint64_t sub_25600A44C()
{
  unint64_t result = qword_269F448D0;
  if (!qword_269F448D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F448D0);
  }
  return result;
}

unint64_t sub_25600A4A0()
{
  unint64_t result = qword_269F448E0;
  if (!qword_269F448E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F448E0);
  }
  return result;
}

unint64_t sub_25600A4F4()
{
  unint64_t result = qword_269F448F0;
  if (!qword_269F448F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F448F0);
  }
  return result;
}

uint64_t sub_25600A548(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746963696C707865 && a2 == 0xE800000000000000;
  if (v2 || (sub_256178828() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465786966 && a2 == 0xE500000000000000 || (sub_256178828() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6465727265666E69 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_256178828();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_25600A698(void *a1)
{
  BOOL v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F8E040];
  sub_25600ACE4(0, &qword_269F448F8, (uint64_t (*)(void))sub_25600A3F8, (uint64_t)&type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.InferredCodingKeys, MEMORY[0x263F8E040]);
  uint64_t v34 = v3;
  uint64_t v32 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  os_log_type_t v37 = (char *)&v29 - v4;
  sub_25600ACE4(0, &qword_269F44900, (uint64_t (*)(void))sub_25600A44C, (uint64_t)&type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.FixedCodingKeys, v2);
  uint64_t v33 = v5;
  uint64_t v31 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v36 = (char *)&v29 - v6;
  sub_25600ACE4(0, &qword_269F44908, (uint64_t (*)(void))sub_25600A4A0, (uint64_t)&type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.ExplicitCodingKeys, v2);
  uint64_t v8 = v7;
  uint64_t v30 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v29 - v9;
  sub_25600ACE4(0, &qword_269F44910, (uint64_t (*)(void))sub_25600A4F4, (uint64_t)&type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.CodingKeys, v2);
  uint64_t v12 = v11;
  uint64_t v35 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  int v14 = (char *)&v29 - v13;
  uint64_t v15 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25600A4F4();
  uint64_t v16 = (uint64_t)v38;
  sub_256178938();
  if (!v16)
  {
    uint64_t v29 = v8;
    int v17 = v36;
    uint64_t v18 = v37;
    uint64_t v38 = a1;
    uint64_t v19 = sub_256178768();
    if (*(void *)(v19 + 16) == 1)
    {
      if (*(unsigned char *)(v19 + 32))
      {
        if (*(unsigned char *)(v19 + 32) != 1)
        {
          char v41 = 2;
          sub_25600A3F8();
          sub_256178708();
          (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v34);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v12);
          uint64_t v15 = 0;
LABEL_12:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
          return v15;
        }
        char v40 = 1;
        sub_25600A44C();
        uint64_t v20 = v17;
        sub_256178708();
        uint64_t v21 = v33;
        uint64_t v22 = sub_256178748();
        uint64_t v23 = v35;
        uint64_t v15 = v22;
        (*(void (**)(char *, uint64_t))(v31 + 8))(v20, v21);
        swift_bridgeObjectRelease();
      }
      else
      {
        char v39 = 0;
        sub_25600A4A0();
        sub_256178708();
        uint64_t v28 = v29;
        uint64_t v15 = sub_256178748();
        (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v28);
        swift_bridgeObjectRelease();
        uint64_t v23 = v35;
      }
      (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v12);
      goto LABEL_12;
    }
    uint64_t v24 = sub_2561785B8();
    swift_allocError();
    uint64_t v26 = v25;
    sub_25600AD4C();
    void *v26 = &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage;
    uint64_t v15 = (uint64_t)v14;
    sub_256178718();
    sub_256178598();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v24 - 8) + 104))(v26, *MEMORY[0x263F8DCB0], v24);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v12);
    a1 = v38;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v15;
}

void sub_25600ACE4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_25600AD4C()
{
  if (!qword_269F44918)
  {
    sub_25600ADBC();
    sub_2561785A8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F44918);
    }
  }
}

unint64_t sub_25600ADBC()
{
  unint64_t result = qword_269F44920;
  if (!qword_269F44920)
  {
    unint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_269F44920);
  }
  return result;
}

uint64_t sub_25600ADFC()
{
  return swift_deallocObject();
}

uint64_t sub_25600AE0C(char a1, void *a2)
{
  return sub_25600532C(a1, a2);
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

void sub_25600AE2C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_255FB58F8(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_25600AE94(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_25600AEE0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_25600AE2C(255, a3, &qword_269F44958, 0x263F0A6B8, a4);
    unint64_t v5 = sub_2561787F8();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

char *keypath_get_selector_startDate()
{
  return sel_startDate;
}

unsigned char *storeEnumTagSinglePayload for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25600B028);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.CodingKeys()
{
  return &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.ExplicitCodingKeys()
{
  return &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.ExplicitCodingKeys;
}

unsigned char *_s14MentalHealthUI21StateOfMindEntryModelC13ConfigurationV25InitialReflectiveIntervalV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25600B10CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.FixedCodingKeys()
{
  return &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.FixedCodingKeys;
}

ValueMetadata *type metadata accessor for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.InferredCodingKeys()
{
  return &type metadata for StateOfMindEntryModel.Configuration.InitialReflectiveInterval.Storage.InferredCodingKeys;
}

unint64_t sub_25600B158()
{
  unint64_t result = qword_269F44988;
  if (!qword_269F44988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44988);
  }
  return result;
}

unint64_t sub_25600B1B0()
{
  unint64_t result = qword_269F44990;
  if (!qword_269F44990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44990);
  }
  return result;
}

unint64_t sub_25600B208()
{
  unint64_t result = qword_269F44998;
  if (!qword_269F44998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44998);
  }
  return result;
}

unint64_t sub_25600B260()
{
  unint64_t result = qword_269F449A0;
  if (!qword_269F449A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F449A0);
  }
  return result;
}

unint64_t sub_25600B2B8()
{
  unint64_t result = qword_269F449A8;
  if (!qword_269F449A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F449A8);
  }
  return result;
}

unint64_t sub_25600B310()
{
  unint64_t result = qword_269F449B0;
  if (!qword_269F449B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F449B0);
  }
  return result;
}

unint64_t sub_25600B368()
{
  unint64_t result = qword_269F449B8;
  if (!qword_269F449B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F449B8);
  }
  return result;
}

unint64_t sub_25600B3C0()
{
  unint64_t result = qword_269F449C0;
  if (!qword_269F449C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F449C0);
  }
  return result;
}

unint64_t sub_25600B418()
{
  unint64_t result = qword_269F449C8;
  if (!qword_269F449C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F449C8);
  }
  return result;
}

unint64_t sub_25600B470()
{
  unint64_t result = qword_269F449D0;
  if (!qword_269F449D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F449D0);
  }
  return result;
}

unint64_t sub_25600B4C8()
{
  unint64_t result = qword_269F449D8;
  if (!qword_269F449D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F449D8);
  }
  return result;
}

ValueMetadata *_s21UnlimitedHeightVStackVMa()
{
  return &_s21UnlimitedHeightVStackVN;
}

double sub_25600B538(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  return sub_25600B858(a1, a2 & 1, a3, a4 & 1, a5);
}

uint64_t sub_25600B550(uint64_t a1, char a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_25600B94C(a1, a2 & 1, a7, a3, a4);
}

unint64_t sub_25600B564()
{
  unint64_t result = qword_269F449E0[0];
  if (!qword_269F449E0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269F449E0);
  }
  return result;
}

uint64_t sub_25600B5B8(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v28 = a1;
  uint64_t v27 = sub_256176018();
  uint64_t v5 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_256176098();
  sub_25600C258((unint64_t *)&qword_269F43D18, MEMORY[0x263F18AB8]);
  uint64_t v9 = sub_256178138();
  uint64_t v10 = MEMORY[0x263F8EE78];
  if (!v9) {
    return v10;
  }
  uint64_t v11 = v9;
  uint64_t v31 = MEMORY[0x263F8EE78];
  sub_2560E86FC(0, v9 & ~(v9 >> 63), 0);
  uint64_t result = sub_256178128();
  if ((v11 & 0x8000000000000000) == 0)
  {
    char v13 = a2;
    int v14 = (void (**)(char *))(v5 + 16);
    uint64_t v15 = (void (**)(char *, uint64_t))(v5 + 8);
    char v16 = v13 & 1;
    v26[1] = v8;
    uint64_t v26[2] = a3;
    do
    {
      int v17 = (void (*)(char *, void))sub_256178168();
      uint64_t v18 = v27;
      (*v14)(v7);
      v17(v30, 0);
      v30[0] = v16;
      char v29 = 1;
      sub_256175FF8();
      uint64_t v20 = v19;
      uint64_t v22 = v21;
      (*v15)(v7, v18);
      uint64_t v10 = v31;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2560E86FC(0, *(void *)(v10 + 16) + 1, 1);
        uint64_t v10 = v31;
      }
      unint64_t v24 = *(void *)(v10 + 16);
      unint64_t v23 = *(void *)(v10 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_2560E86FC(v23 > 1, v24 + 1, 1);
        uint64_t v10 = v31;
      }
      *(void *)(v10 + 16) = v24 + 1;
      uint64_t v25 = v10 + 16 * v24;
      *(void *)(v25 + 32) = v20;
      *(void *)(v25 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v22;
      sub_256178158();
      --v11;
    }
    while (v11);
    return v10;
  }
  __break(1u);
  return result;
}

double sub_25600B858(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v6 = sub_25600B5B8(a1, a2 & 1, a5);
  unint64_t v7 = *(void *)(v6 + 16);
  if (!v7)
  {
    double v8 = 0.0;
    goto LABEL_16;
  }
  double v8 = 0.0;
  uint64_t v9 = 32;
  uint64_t v10 = *(void *)(v6 + 16);
  do
  {
    if (v8 <= *(double *)(v6 + v9)) {
      double v8 = *(double *)(v6 + v9);
    }
    v9 += 16;
    --v10;
  }
  while (v10);
  if (a4)
  {
    if (v7 < 2)
    {
      uint64_t v11 = 0;
      double v12 = 0.0;
LABEL_14:
      unint64_t v17 = v7 - v11;
      uint64_t v18 = (double *)(v6 + 16 * v11 + 40);
      do
      {
        double v19 = *v18;
        v18 += 2;
        double v12 = v12 + v19;
        --v17;
      }
      while (v17);
      goto LABEL_16;
    }
    uint64_t v11 = v7 & 0x7FFFFFFFFFFFFFFELL;
    char v13 = (double *)(v6 + 56);
    double v12 = 0.0;
    uint64_t v14 = v7 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      double v15 = *(v13 - 2);
      double v16 = *v13;
      v13 += 4;
      double v12 = v12 + v15 + v16;
      v14 -= 2;
    }
    while (v14);
    if (v7 != v11) {
      goto LABEL_14;
    }
  }
LABEL_16:
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_25600B94C(uint64_t a1, char a2, uint64_t a3, double a4, double a5)
{
  char v8 = a2 & 1;
  sub_255FEC0F4();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_256176018();
  uint64_t v65 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v82 = (char *)v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FD3C5C();
  uint64_t v70 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v69 = (char *)v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_256176098();
  unint64_t v17 = *(void (***)(char *))(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v80 = (char *)v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25600C164(0, &qword_269F43D08, MEMORY[0x263F8DC58]);
  uint64_t v81 = v19;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)v64 - v20;
  sub_25600C164(0, &qword_269F43CD8, MEMORY[0x263F8DC60]);
  uint64_t v79 = v22;
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v78 = (uint64_t)v64 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v66 = (uint64_t)v64 - v25;
  uint64_t v26 = sub_25600B5B8(a1, v8, a3);
  int64_t v27 = *(void *)(v26 + 16);
  unint64_t v76 = v21;
  uint64_t v77 = v16;
  if (v27)
  {
    uint64_t v73 = v17;
    unint64_t v74 = (void (*)(char *))a3;
    uint64_t v75 = v12;
    v84[0] = MEMORY[0x263F8EE78];
    sub_2560E871C(0, v27, 0);
    uint64_t v28 = v84[0];
    unint64_t v29 = *(void *)(v84[0] + 16);
    uint64_t v30 = 32 * v29 + 56;
    uint64_t v31 = (uint64_t *)(v26 + 40);
    do
    {
      uint64_t v33 = *(v31 - 1);
      uint64_t v32 = *v31;
      v84[0] = v28;
      unint64_t v34 = *(void *)(v28 + 24);
      unint64_t v35 = v29 + 1;
      if (v29 >= v34 >> 1)
      {
        sub_2560E871C(v34 > 1, v29 + 1, 1);
        uint64_t v28 = v84[0];
      }
      v31 += 2;
      *(void *)(v28 + 16) = v35;
      uint64_t v36 = (unsigned char *)(v28 + v30);
      *((void *)v36 - 3) = v33;
      *(v36 - 16) = 0;
      *((void *)v36 - 1) = v32;
      v30 += 32;
      unint64_t v29 = v35;
      *uint64_t v36 = 0;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease();
    uint64_t v12 = v75;
    uint64_t v21 = v76;
    uint64_t v16 = v77;
    unint64_t v17 = v73;
    a3 = (uint64_t)v74;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v28 = MEMORY[0x263F8EE78];
  }
  uint64_t v37 = v66;
  unint64_t v74 = v17[2];
  uint64_t v75 = (uint64_t)(v17 + 2);
  ((void (*)(uint64_t, uint64_t, uint64_t))v74)(v66, a3, v16);
  v64[1] = v64;
  uint64_t v38 = v79;
  *(void *)(v37 + *(int *)(v79 + 52)) = v28;
  uint64_t v39 = v78;
  sub_255FD3DB8(v37, v78);
  ((void (*)(char *, uint64_t, uint64_t))v17[4])(v80, v39, v16);
  char v40 = (void (*)(uint64_t))MEMORY[0x263F18AB8];
  sub_25600C258(&qword_269F43CE8, MEMORY[0x263F18AB8]);
  sub_256177FA8();
  uint64_t v41 = v81;
  uint64_t v42 = &v21[*(int *)(v81 + 52)];
  *(void *)uint64_t v42 = *(void *)(v39 + *(int *)(v38 + 52));
  *((void *)v42 + 1) = 0;
  uint64_t v78 = *(int *)(v41 + 56);
  v21[v78] = 0;
  sub_255FD3E38();
  id v44 = &v21[*(int *)(v43 + 36)];
  uint64_t v45 = sub_25600C258((unint64_t *)&qword_269F43D18, v40);
  uint64_t v72 = (void (**)(char *, uint64_t))(v17 + 1);
  uint64_t v73 = (void (**)(char *))(v65 + 16);
  uint64_t v79 = v65 + 56;
  uint64_t v71 = (unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48);
  uint64_t v81 = v65 + 32;
  uint64_t v68 = v44;
  uint64_t v67 = v45;
  while (1)
  {
    uint64_t v46 = *(void *)v44;
    sub_256178148();
    if (v46 == v84[0])
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v79)(v11, 1, 1, v12);
LABEL_17:
      sub_25600C2FC((uint64_t)v11, (uint64_t (*)(void))sub_255FEC0F4);
      goto LABEL_19;
    }
    uint64_t v47 = (void (*)(uint64_t *, void))sub_256178168();
    (*v73)(v11);
    v47(v84, 0);
    unint64_t v48 = v80;
    ((void (*)(char *, char *, uint64_t))v74)(v80, v21, v16);
    sub_256178158();
    (*v72)(v48, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))v79)(v11, 0, 1, v12);
    if ((*v71)(v11, 1, v12) == 1) {
      goto LABEL_17;
    }
    uint64_t v49 = *(uint64_t (**)(char *, char *, uint64_t))v81;
    uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))v81)(v82, v11, v12);
    unint64_t v51 = *((void *)v42 + 1);
    unint64_t v52 = *(void *)(*(void *)v42 + 16);
    if (v51 == v52)
    {
      (*(void (**)(char *, uint64_t))(v65 + 8))(v82, v12);
LABEL_19:
      v21[v78] = 1;
LABEL_20:
      sub_25600C2A0((uint64_t)v21, &qword_269F43D08, MEMORY[0x263F8DC58]);
      return sub_25600C2A0(v66, &qword_269F43CD8, MEMORY[0x263F8DC60]);
    }
    if (v51 >= v52) {
      break;
    }
    uint64_t v53 = v11;
    uint64_t v54 = *(void *)v42 + 32 * v51;
    double v55 = *(double *)(v54 + 48);
    uint64_t v56 = v12;
    char v57 = *(unsigned char *)(v54 + 56);
    char v58 = *(unsigned char *)(v54 + 40);
    uint64_t v59 = *(void *)(v54 + 32);
    uint64_t v60 = v42;
    *((void *)v42 + 1) = v51 + 1;
    uint64_t v61 = (uint64_t)v69;
    uint64_t v62 = &v69[*(int *)(v70 + 48)];
    uint64_t v63 = v56;
    ((void (*)(char *, char *))v49)(v69, v82);
    *(void *)uint64_t v62 = v59;
    v62[8] = v58;
    *((double *)v62 + 2) = v55;
    v62[24] = v57;
    sub_2561779A8();
    LOBYTE(v84[0]) = v58;
    char v83 = v57;
    uint64_t result = sub_256176008();
    if (v57) {
      goto LABEL_22;
    }
    a5 = a5 + v55;
    sub_25600C2FC(v61, (uint64_t (*)(void))sub_255FD3C5C);
    uint64_t v21 = v76;
    uint64_t v16 = v77;
    uint64_t v11 = v53;
    uint64_t v12 = v63;
    uint64_t v42 = v60;
    id v44 = v68;
    if (v76[v78]) {
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

void sub_25600C164(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    uint64_t v6 = sub_256176098();
    sub_255FD34C0();
    v10[0] = v6;
    v10[1] = v7;
    void v10[2] = sub_25600C258(&qword_269F43CE8, MEMORY[0x263F18AB8]);
    v10[3] = sub_25600C258(&qword_269F43CF0, (void (*)(uint64_t))sub_255FD34C0);
    unint64_t v8 = a3(a1, v10);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_25600C258(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25600C2A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  sub_25600C164(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_25600C2FC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25600C35C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

void sub_25600C364()
{
  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_255FD438C(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_25600C430(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v39 = sub_256176AA8();
  uint64_t v8 = *(void *)(v39 - 8);
  uint64_t v9 = v8;
  int v10 = *(_DWORD *)(v8 + 80);
  uint64_t v11 = sub_256176158();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(_DWORD *)(v12 + 80);
  int v14 = *(_DWORD *)(v12 + 80) | v10;
  uint64_t v15 = v14 & 0xF8 | 7u;
  uint64_t v16 = v7 + v15;
  if (*(_DWORD *)(v8 + 84)) {
    size_t v17 = *(void *)(v8 + 64);
  }
  else {
    size_t v17 = *(void *)(v8 + 64) + 1;
  }
  if (((v17 + v13) & ~v13) + *(void *)(*(void *)(v11 - 8) + 64) <= 8) {
    uint64_t v18 = 8;
  }
  else {
    uint64_t v18 = ((v17 + v13) & ~v13) + *(void *)(*(void *)(v11 - 8) + 64);
  }
  uint64_t v19 = *(_DWORD *)(v6 + 80) & 0xF8 | v15;
  int v20 = (*(_DWORD *)(v6 + 80) | v14) & 0x100000;
  if (v19 != 7 || v20 != 0 || v18 + (v16 & (unint64_t)~v15) + 1 > 0x18)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v19 + 16) & ~v19));
LABEL_35:
    swift_retain();
    return a1;
  }
  size_t v36 = v17 + v13;
  uint64_t v37 = *(void *)(v11 - 8);
  uint64_t v38 = v11;
  uint64_t v24 = ~v15;
  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
  uint64_t v25 = (void *)(((unint64_t)a1 + v16) & v24);
  uint64_t v26 = (unsigned __int8 *)(((unint64_t)a2 + v16) & v24);
  unsigned int v27 = v26[v18];
  unsigned int v28 = v27 - 2;
  if (v27 < 2)
  {
    uint64_t v30 = v39;
LABEL_23:
    if (v27 != 1)
    {
LABEL_34:
      *uint64_t v25 = *(void *)v26;
      *((unsigned char *)v25 + v18) = 0;
      goto LABEL_35;
    }
  }
  else
  {
    if (v18 <= 3) {
      uint64_t v29 = v18;
    }
    else {
      uint64_t v29 = 4;
    }
    uint64_t v30 = v39;
    switch(v29)
    {
      case 1:
        int v31 = *v26;
        break;
      case 2:
        int v31 = *(unsigned __int16 *)v26;
        break;
      case 3:
        int v31 = *(unsigned __int16 *)v26 | (v26[2] << 16);
        break;
      case 4:
        int v31 = *(_DWORD *)v26;
        break;
      default:
        goto LABEL_23;
    }
    int v33 = (v31 | (v28 << (8 * v18))) + 2;
    int v34 = v31 + 2;
    if (v18 < 4) {
      int v34 = v33;
    }
    if (v34 != 1) {
      goto LABEL_34;
    }
  }
  uint64_t v32 = ~v13;
  if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v9 + 48))(v26, 1, v30))
  {
    memcpy((void *)(((unint64_t)a1 + v16) & v24), v26, v17);
  }
  else
  {
    (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v9 + 16))(((unint64_t)a1 + v16) & v24, v26, v30);
    (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v9 + 56))(((unint64_t)a1 + v16) & v24, 0, 1, v30);
  }
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v37 + 16))(((unint64_t)v25 + v36) & v32, (unint64_t)&v26[v36] & v32, v38);
  *((unsigned char *)v25 + v18) = 1;
  return a1;
}

uint64_t sub_25600C788(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  uint64_t v4 = *(void *)(v3 + 56);
  uint64_t v5 = sub_256176AA8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6;
  int v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = sub_256176158();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80);
  uint64_t v12 = (*(_DWORD *)(v10 + 80) | v8) & 0xF8 | 7u;
  uint64_t v13 = (unsigned __int8 *)((v4 + a1 + v12) & ~v12);
  if (*(_DWORD *)(v6 + 84)) {
    uint64_t v14 = *(void *)(v6 + 64);
  }
  else {
    uint64_t v14 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v15 = v14 + v11;
  unint64_t v16 = ((v14 + v11) & ~v11) + *(void *)(*(void *)(v9 - 8) + 64);
  if (v16 <= 8) {
    unint64_t v16 = 8;
  }
  unsigned int v17 = v13[v16];
  unsigned int v18 = v17 - 2;
  if (v17 >= 2)
  {
    if (v16 <= 3) {
      uint64_t v19 = v16;
    }
    else {
      uint64_t v19 = 4;
    }
    switch(v19)
    {
      case 1:
        int v20 = *v13;
        goto LABEL_15;
      case 2:
        int v20 = *(unsigned __int16 *)v13;
        goto LABEL_15;
      case 3:
        int v20 = *(unsigned __int16 *)v13 | (v13[2] << 16);
        goto LABEL_15;
      case 4:
        int v20 = *(_DWORD *)v13;
LABEL_15:
        int v21 = (v20 | (v18 << (8 * v16))) + 2;
        unsigned int v17 = v20 + 2;
        if (v16 < 4) {
          unsigned int v17 = v21;
        }
        break;
      default:
        break;
    }
  }
  if (v17 == 1)
  {
    uint64_t v25 = *(void *)(v9 - 8);
    uint64_t v22 = ~v11;
    if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v5)) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(v13, v5);
    }
    uint64_t v23 = *(uint64_t (**)(unint64_t, uint64_t))(v25 + 8);
    return v23((unint64_t)&v13[v15] & v22, v9);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_25600CA14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = sub_256176AA8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8;
  int v10 = *(_DWORD *)(v8 + 80);
  uint64_t v11 = sub_256176158();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = v8;
  uint64_t v14 = *(_DWORD *)(v12 + 80);
  uint64_t v15 = (*(_DWORD *)(v12 + 80) | v10) & 0xF8 | 7u;
  unint64_t v16 = (void *)((v6 + v15 + a1) & ~v15);
  unsigned int v17 = (unsigned __int8 *)((v6 + v15 + a2) & ~v15);
  if (*(_DWORD *)(v9 + 84)) {
    size_t v18 = *(void *)(v13 + 64);
  }
  else {
    size_t v18 = *(void *)(v13 + 64) + 1;
  }
  size_t v19 = v18 + v14;
  if (((v18 + v14) & ~v14) + *(void *)(*(void *)(v11 - 8) + 64) <= 8) {
    uint64_t v20 = 8;
  }
  else {
    uint64_t v20 = ((v18 + v14) & ~v14) + *(void *)(*(void *)(v11 - 8) + 64);
  }
  unsigned int v21 = v17[v20];
  unsigned int v22 = v21 - 2;
  if (v21 >= 2)
  {
    if (v20 <= 3) {
      uint64_t v23 = v20;
    }
    else {
      uint64_t v23 = 4;
    }
    switch(v23)
    {
      case 1:
        int v24 = *v17;
        goto LABEL_16;
      case 2:
        int v24 = *(unsigned __int16 *)v17;
        goto LABEL_16;
      case 3:
        int v24 = *(unsigned __int16 *)v17 | (v17[2] << 16);
        goto LABEL_16;
      case 4:
        int v24 = *(_DWORD *)v17;
LABEL_16:
        int v25 = (v24 | (v22 << (8 * v20))) + 2;
        unsigned int v21 = v24 + 2;
        if (v20 < 4) {
          unsigned int v21 = v25;
        }
        break;
      default:
        break;
    }
  }
  if (v21 == 1)
  {
    uint64_t v28 = v11;
    uint64_t v26 = ~v14;
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v9 + 48))(v17, 1, v7))
    {
      memcpy(v16, v17, v18);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v9 + 16))(v16, v17, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v16, 0, 1, v7);
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v12 + 16))(((unint64_t)v16 + v19) & v26, (unint64_t)&v17[v19] & v26, v28);
    *((unsigned char *)v16 + v2__isPlatformVersionAtLeast(2, 18, 1, 0) = 1;
  }
  else
  {
    *unint64_t v16 = *(void *)v17;
    *((unsigned char *)v16 + v2__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
    swift_retain();
  }
  return a1;
}

uint64_t sub_25600CCD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = sub_256176AA8();
  uint64_t v8 = *(void *)(v7 - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = sub_256176158();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = (*(_DWORD *)(v11 + 80) | v9) & 0xF8 | 7u;
  uint64_t v13 = v6 + v12;
  uint64_t v14 = (unsigned __int8 *)((v6 + v12 + a1) & ~v12);
  uint64_t v15 = (unsigned __int8 *)((v13 + a2) & ~v12);
  if (v14 != v15)
  {
    uint64_t v16 = v10;
    uint64_t v17 = *(void *)(v10 - 8);
    uint64_t v18 = *(_DWORD *)(v11 + 80);
    if (*(_DWORD *)(v8 + 84)) {
      size_t v19 = *(void *)(v8 + 64);
    }
    else {
      size_t v19 = *(void *)(v8 + 64) + 1;
    }
    if (((v19 + v18) & ~v18) + *(void *)(v11 + 64) <= 8) {
      uint64_t v20 = 8;
    }
    else {
      uint64_t v20 = ((v19 + v18) & ~v18) + *(void *)(v11 + 64);
    }
    unsigned int v21 = v14[v20];
    unsigned int v22 = v21 - 2;
    if (v21 >= 2)
    {
      if (v20 <= 3) {
        uint64_t v23 = v20;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *v14;
          goto LABEL_17;
        case 2:
          int v24 = *(unsigned __int16 *)v14;
          goto LABEL_17;
        case 3:
          int v24 = *(unsigned __int16 *)v14 | (v14[2] << 16);
          goto LABEL_17;
        case 4:
          int v24 = *(_DWORD *)v14;
LABEL_17:
          int v25 = (v24 | (v22 << (8 * v20))) + 2;
          unsigned int v21 = v24 + 2;
          if (v20 < 4) {
            unsigned int v21 = v25;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v32 = ~v18;
    if (v21 == 1)
    {
      if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v8 + 48))(v14, 1, v7)) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v8 + 8))(v14, v7);
      }
      (*(void (**)(unint64_t, uint64_t))(v17 + 8))((unint64_t)&v14[v18 + v19] & v32, v16);
    }
    else
    {
      swift_release();
    }
    unsigned int v26 = v15[v20];
    unsigned int v27 = v26 - 2;
    if (v26 >= 2)
    {
      if (v20 <= 3) {
        uint64_t v28 = v20;
      }
      else {
        uint64_t v28 = 4;
      }
      switch(v28)
      {
        case 1:
          int v29 = *v15;
          goto LABEL_33;
        case 2:
          int v29 = *(unsigned __int16 *)v15;
          goto LABEL_33;
        case 3:
          int v29 = *(unsigned __int16 *)v15 | (v15[2] << 16);
          goto LABEL_33;
        case 4:
          int v29 = *(_DWORD *)v15;
LABEL_33:
          int v30 = (v29 | (v27 << (8 * v20))) + 2;
          unsigned int v26 = v29 + 2;
          if (v20 < 4) {
            unsigned int v26 = v30;
          }
          break;
        default:
          break;
      }
    }
    if (v26 == 1)
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v8 + 48))(v15, 1, v7))
      {
        memcpy(v14, v15, v19);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v8 + 16))(v14, v15, v7);
        (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v8 + 56))(v14, 0, 1, v7);
      }
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v17 + 16))((unint64_t)&v14[v18 + v19] & v32, (unint64_t)&v15[v18 + v19] & v32, v16);
      v14[v20] = 1;
    }
    else
    {
      *(void *)uint64_t v14 = *(void *)v15;
      v14[v20] = 0;
      swift_retain();
    }
  }
  return a1;
}

uint64_t sub_25600D08C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = sub_256176AA8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8;
  int v10 = *(_DWORD *)(v8 + 80);
  uint64_t v11 = sub_256176158();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = v8;
  uint64_t v14 = *(_DWORD *)(v12 + 80);
  uint64_t v15 = (*(_DWORD *)(v12 + 80) | v10) & 0xF8 | 7u;
  uint64_t v16 = (void *)((v6 + v15 + a1) & ~v15);
  uint64_t v17 = (unsigned __int8 *)((v6 + v15 + a2) & ~v15);
  if (*(_DWORD *)(v9 + 84)) {
    size_t v18 = *(void *)(v13 + 64);
  }
  else {
    size_t v18 = *(void *)(v13 + 64) + 1;
  }
  size_t v19 = v18 + v14;
  if (((v18 + v14) & ~v14) + *(void *)(*(void *)(v11 - 8) + 64) <= 8) {
    uint64_t v20 = 8;
  }
  else {
    uint64_t v20 = ((v18 + v14) & ~v14) + *(void *)(*(void *)(v11 - 8) + 64);
  }
  unsigned int v21 = v17[v20];
  unsigned int v22 = v21 - 2;
  if (v21 >= 2)
  {
    if (v20 <= 3) {
      uint64_t v23 = v20;
    }
    else {
      uint64_t v23 = 4;
    }
    switch(v23)
    {
      case 1:
        int v24 = *v17;
        goto LABEL_16;
      case 2:
        int v24 = *(unsigned __int16 *)v17;
        goto LABEL_16;
      case 3:
        int v24 = *(unsigned __int16 *)v17 | (v17[2] << 16);
        goto LABEL_16;
      case 4:
        int v24 = *(_DWORD *)v17;
LABEL_16:
        int v25 = (v24 | (v22 << (8 * v20))) + 2;
        unsigned int v21 = v24 + 2;
        if (v20 < 4) {
          unsigned int v21 = v25;
        }
        break;
      default:
        break;
    }
  }
  if (v21 == 1)
  {
    uint64_t v29 = v11;
    uint64_t v26 = ~v14;
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v9 + 48))(v17, 1, v7))
    {
      memcpy(v16, v17, v18);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v9 + 32))(v16, v17, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v16, 0, 1, v7);
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v12 + 32))(((unint64_t)v16 + v19) & v26, (unint64_t)&v17[v19] & v26, v29);
    char v27 = 1;
  }
  else
  {
    char v27 = 0;
    *uint64_t v16 = *(void *)v17;
  }
  *((unsigned char *)v16 + v2__isPlatformVersionAtLeast(2, 18, 1, 0) = v27;
  return a1;
}

uint64_t sub_25600D348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = sub_256176AA8();
  uint64_t v8 = *(void *)(v7 - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = sub_256176158();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = (*(_DWORD *)(v11 + 80) | v9) & 0xF8 | 7u;
  uint64_t v13 = v6 + v12;
  uint64_t v14 = (unsigned __int8 *)((v6 + v12 + a1) & ~v12);
  uint64_t v15 = (unsigned __int8 *)((v13 + a2) & ~v12);
  if (v14 != v15)
  {
    uint64_t v16 = v10;
    uint64_t v17 = *(void *)(v10 - 8);
    uint64_t v18 = *(_DWORD *)(v11 + 80);
    if (*(_DWORD *)(v8 + 84)) {
      size_t v19 = *(void *)(v8 + 64);
    }
    else {
      size_t v19 = *(void *)(v8 + 64) + 1;
    }
    if (((v19 + v18) & ~v18) + *(void *)(v11 + 64) <= 8) {
      uint64_t v20 = 8;
    }
    else {
      uint64_t v20 = ((v19 + v18) & ~v18) + *(void *)(v11 + 64);
    }
    unsigned int v21 = v14[v20];
    unsigned int v22 = v21 - 2;
    if (v21 >= 2)
    {
      if (v20 <= 3) {
        uint64_t v23 = v20;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *v14;
          goto LABEL_17;
        case 2:
          int v24 = *(unsigned __int16 *)v14;
          goto LABEL_17;
        case 3:
          int v24 = *(unsigned __int16 *)v14 | (v14[2] << 16);
          goto LABEL_17;
        case 4:
          int v24 = *(_DWORD *)v14;
LABEL_17:
          int v25 = (v24 | (v22 << (8 * v20))) + 2;
          unsigned int v21 = v24 + 2;
          if (v20 < 4) {
            unsigned int v21 = v25;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v33 = ~v18;
    if (v21 == 1)
    {
      if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v8 + 48))(v14, 1, v7)) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v8 + 8))(v14, v7);
      }
      (*(void (**)(unint64_t, uint64_t))(v17 + 8))((unint64_t)&v14[v18 + v19] & v33, v16);
    }
    else
    {
      swift_release();
    }
    unsigned int v26 = v15[v20];
    unsigned int v27 = v26 - 2;
    if (v26 >= 2)
    {
      if (v20 <= 3) {
        uint64_t v28 = v20;
      }
      else {
        uint64_t v28 = 4;
      }
      switch(v28)
      {
        case 1:
          int v29 = *v15;
          goto LABEL_33;
        case 2:
          int v29 = *(unsigned __int16 *)v15;
          goto LABEL_33;
        case 3:
          int v29 = *(unsigned __int16 *)v15 | (v15[2] << 16);
          goto LABEL_33;
        case 4:
          int v29 = *(_DWORD *)v15;
LABEL_33:
          int v30 = (v29 | (v27 << (8 * v20))) + 2;
          unsigned int v26 = v29 + 2;
          if (v20 < 4) {
            unsigned int v26 = v30;
          }
          break;
        default:
          break;
      }
    }
    if (v26 == 1)
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v8 + 48))(v15, 1, v7))
      {
        memcpy(v14, v15, v19);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v8 + 32))(v14, v15, v7);
        (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v8 + 56))(v14, 0, 1, v7);
      }
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v17 + 32))((unint64_t)&v14[v18 + v19] & v33, (unint64_t)&v15[v18 + v19] & v33, v16);
      char v31 = 1;
    }
    else
    {
      char v31 = 0;
      *(void *)uint64_t v14 = *(void *)v15;
    }
    v14[v20] = v31;
  }
  return a1;
}

uint64_t sub_25600D6FC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = *(void *)(sub_256176AA8() - 8);
  int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v11 = *(void *)(sub_256176158() - 8);
  if (v7 <= 0xFE) {
    unsigned int v12 = 254;
  }
  else {
    unsigned int v12 = v7;
  }
  int v13 = *(_DWORD *)(v11 + 80);
  uint64_t v14 = *(void *)(v11 + 64);
  if (v9) {
    uint64_t v15 = v10;
  }
  else {
    uint64_t v15 = v10 + 1;
  }
  unint64_t v16 = ((v15 + v13) & ~(unint64_t)v13) + v14;
  if (v16 <= 8) {
    unint64_t v16 = 8;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v17 = (*(_DWORD *)(v8 + 80) | v13) & 0xF8 | 7u;
  uint64_t v18 = *(void *)(v6 + 64) + v17;
  if (a2 <= v12) {
    goto LABEL_30;
  }
  uint64_t v19 = v16 + (v18 & ~v17) + 1;
  char v20 = 8 * v19;
  if (v19 <= 3)
  {
    unsigned int v23 = ((a2 - v12 + ~(-1 << v20)) >> v20) + 1;
    if (HIWORD(v23))
    {
      int v21 = *(_DWORD *)((char *)a1 + v19);
      if (!v21) {
        goto LABEL_30;
      }
      goto LABEL_20;
    }
    if (v23 > 0xFF)
    {
      int v21 = *(unsigned __int16 *)((char *)a1 + v19);
      if (!*(unsigned __int16 *)((char *)a1 + v19)) {
        goto LABEL_30;
      }
      goto LABEL_20;
    }
    if (v23 < 2)
    {
LABEL_30:
      if (v7 < 0xFE)
      {
        unsigned int v28 = *(unsigned __int8 *)((((unint64_t)a1 + v18) & ~v17) + v16);
        if (v28 >= 2) {
          return (v28 ^ 0xFF) + 1;
        }
        else {
          return 0;
        }
      }
      else
      {
        unsigned int v27 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
        return v27(a1, v7, v5);
      }
    }
  }
  int v21 = *((unsigned __int8 *)a1 + v19);
  if (!*((unsigned char *)a1 + v19)) {
    goto LABEL_30;
  }
LABEL_20:
  int v24 = (v21 - 1) << v20;
  if (v19 > 3) {
    int v24 = 0;
  }
  if (v19)
  {
    if (v19 <= 3) {
      int v25 = v19;
    }
    else {
      int v25 = 4;
    }
    switch(v25)
    {
      case 2:
        int v26 = *a1;
        break;
      case 3:
        int v26 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v26 = *(_DWORD *)a1;
        break;
      default:
        int v26 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v26 = 0;
  }
  return v12 + (v26 | v24) + 1;
}

void sub_25600D9E8(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v34 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(void *)(sub_256176AA8() - 8);
  int v11 = *(_DWORD *)(v10 + 84);
  uint64_t v12 = *(void *)(v10 + 64);
  uint64_t v13 = *(void *)(sub_256176158() - 8);
  uint64_t v14 = v13;
  if (v9 <= 0xFE) {
    unsigned int v15 = 254;
  }
  else {
    unsigned int v15 = v9;
  }
  uint64_t v16 = *(void *)(v13 + 64);
  uint64_t v17 = (*(_DWORD *)(v10 + 80) | *(_DWORD *)(v14 + 80)) & 0xF8 | 7u;
  uint64_t v18 = *(void *)(v8 + 64) + v17;
  if (v11) {
    uint64_t v19 = v12;
  }
  else {
    uint64_t v19 = v12 + 1;
  }
  unint64_t v20 = ((v19 + *(_DWORD *)(v14 + 80)) & ~(unint64_t)*(_DWORD *)(v14 + 80))
      + v16;
  if (v20 <= 8) {
    unint64_t v20 = 8;
  }
  size_t v21 = v20 + (v18 & ~v17) + 1;
  if (a3 <= v15)
  {
    int v22 = 0;
  }
  else if (v21 <= 3)
  {
    unsigned int v25 = ((a3 - v15 + ~(-1 << (8 * v21))) >> (8 * v21)) + 1;
    if (HIWORD(v25))
    {
      int v22 = 4;
    }
    else if (v25 >= 0x100)
    {
      int v22 = 2;
    }
    else
    {
      int v22 = v25 > 1;
    }
  }
  else
  {
    int v22 = 1;
  }
  if (v15 < a2)
  {
    unsigned int v23 = ~v15 + a2;
    if (v21 < 4)
    {
      int v24 = (v23 >> (8 * v21)) + 1;
      if (v20 + (v18 & ~v17) != -1)
      {
        int v26 = v23 & ~(-1 << (8 * v21));
        bzero(a1, v21);
        if (v21 == 3)
        {
          *(_WORD *)a1 = v26;
          a1[2] = BYTE2(v26);
        }
        else if (v21 == 2)
        {
          *(_WORD *)a1 = v26;
        }
        else
        {
          *a1 = v26;
        }
      }
    }
    else
    {
      bzero(a1, v21);
      *(_DWORD *)a1 = v23;
      int v24 = 1;
    }
    switch(v22)
    {
      case 1:
        a1[v21] = v24;
        return;
      case 2:
        *(_WORD *)&a1[v21] = v24;
        return;
      case 3:
        goto LABEL_57;
      case 4:
        *(_DWORD *)&a1[v21] = v24;
        return;
      default:
        return;
    }
  }
  switch(v22)
  {
    case 1:
      a1[v21] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 2:
      *(_WORD *)&a1[v21] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 3:
LABEL_57:
      __break(1u);
      JUMPOUT(0x25600DDC8);
    case 4:
      *(_DWORD *)&a1[v21] = 0;
      goto LABEL_28;
    default:
LABEL_28:
      if (a2)
      {
LABEL_29:
        if (v9 < 0xFE)
        {
          unsigned int v28 = (unsigned char *)((unint64_t)&a1[v18] & ~v17);
          if (a2 > 0xFE)
          {
            size_t v29 = (v20 + 1);
            int v30 = -1 << (8 * (v20 + 1));
            if (v29 <= 3) {
              int v31 = ~v30;
            }
            else {
              int v31 = -1;
            }
            if (v29)
            {
              int v32 = v31 & (a2 - 255);
              if (v29 <= 3) {
                int v33 = v29;
              }
              else {
                int v33 = 4;
              }
              bzero(v28, v29);
              switch(v33)
              {
                case 2:
                  *(_WORD *)unsigned int v28 = v32;
                  break;
                case 3:
                  *(_WORD *)unsigned int v28 = v32;
                  uint64_t v28[2] = BYTE2(v32);
                  break;
                case 4:
                  *(_DWORD *)unsigned int v28 = v32;
                  break;
                default:
                  *unsigned int v28 = v32;
                  break;
              }
            }
          }
          else
          {
            v28[v20] = -(char)a2;
          }
        }
        else
        {
          unsigned int v27 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v34 + 56);
          v27(a1, a2, v9, v7);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for StateOfMindEntryButtonTray()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25600DE18()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_25600DE5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v58 = a2;
  uint64_t v65 = type metadata accessor for AssociationSelectionPhaseSpecs() - 8;
  uint64_t v4 = MEMORY[0x270FA5388](v65);
  uint64_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v49 - v8;
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_2561761B8();
  uint64_t v63 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  unsigned int v15 = (char *)&v49 - v14;
  uint64_t v62 = sub_2561761B8();
  uint64_t v64 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v59 = (char *)&v49 - v16;
  uint64_t v17 = sub_2561761B8();
  uint64_t v49 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v61 = (char *)&v49 - v18;
  uint64_t v50 = v19;
  uint64_t v20 = sub_2561761B8();
  uint64_t v54 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  unint64_t v51 = (char *)&v49 - v21;
  uint64_t v55 = v22;
  uint64_t v23 = sub_2561761B8();
  uint64_t v56 = *(void *)(v23 - 8);
  uint64_t v57 = v23;
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  unint64_t v52 = (char *)&v49 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v53 = (char *)&v49 - v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v2, v10);
  sub_256176D98();
  sub_25611AFC4((uint64_t)v9);
  sub_25600E628((uint64_t)v9);
  uint64_t v27 = *(void *)(a1 + 24);
  sub_256177338();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_256176DA8();
  sub_25611AFC4((uint64_t)v9);
  sub_25600E628((uint64_t)v9);
  uint64_t v28 = MEMORY[0x263F18C10];
  uint64_t v74 = v27;
  uint64_t v75 = MEMORY[0x263F18C10];
  uint64_t v29 = v60;
  uint64_t WitnessTable = swift_getWitnessTable();
  int v31 = v59;
  sub_256177338();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v15, v29);
  sub_25611AFC4((uint64_t)v9);
  sub_25600E628((uint64_t)v9);
  sub_2561778E8();
  uint64_t v72 = WitnessTable;
  uint64_t v73 = v28;
  uint64_t v32 = v62;
  uint64_t v33 = swift_getWitnessTable();
  uint64_t v34 = v61;
  sub_2561772D8();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v31, v32);
  sub_256176D78();
  sub_25611AFC4((uint64_t)v6);
  if ((sub_256176138() & 1) == 0) {
    goto LABEL_4;
  }
  id result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    size_t v36 = result;
    MobileGestalt_get_homeButtonType();

LABEL_4:
    uint64_t v38 = v56;
    uint64_t v37 = v57;
    sub_25600E628((uint64_t)v6);
    uint64_t v39 = MEMORY[0x263F19100];
    uint64_t v70 = v33;
    uint64_t v71 = MEMORY[0x263F19100];
    uint64_t v40 = v50;
    uint64_t v41 = swift_getWitnessTable();
    uint64_t v42 = v51;
    sub_256177338();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v34, v40);
    sub_2561778E8();
    uint64_t v68 = v41;
    uint64_t v69 = MEMORY[0x263F18C10];
    uint64_t v47 = v55;
    uint64_t v48 = swift_getWitnessTable();
    uint64_t v43 = v52;
    sub_2561772D8();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v42, v47);
    uint64_t v66 = v48;
    uint64_t v67 = v39;
    uint64_t v44 = swift_getWitnessTable();
    uint64_t v45 = v53;
    sub_25605CACC(v43, v37, v44);
    uint64_t v46 = *(void (**)(char *, uint64_t))(v38 + 8);
    v46(v43, v37);
    sub_25605CACC(v45, v37, v44);
    return (id)((uint64_t (*)(char *, uint64_t))v46)(v45, v37);
  }
  __break(1u);
  return result;
}

uint64_t sub_25600E628(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AssociationSelectionPhaseSpecs();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25600E684()
{
  return swift_getWitnessTable();
}

uint64_t *sub_25600E7BC(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = (void *)a2[1];
    *a1 = *a2;
    a1[1] = (uint64_t)v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *(_OWORD *)uint64_t v9 = *(_OWORD *)((char *)a2 + v8);
    *((_WORD *)v9 + 8) = *(_WORD *)((char *)a2 + v8 + 16);
    uint64_t v11 = *(int *)(type metadata accessor for CustomReminderModel() + 32);
    __dst = &v9[v11];
    uint64_t v37 = v9;
    uint64_t v12 = &v10[v11];
    uint64_t v13 = sub_256175568();
    uint64_t v14 = *(void *)(v13 - 8);
    unsigned int v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    id v16 = v7;
    if (v15(v12, 1, v13))
    {
      sub_25600EB64(0, &qword_269F43608, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
      memcpy(__dst, v12, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
    uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F1B5D0];
    sub_25600EB64(0, &qword_269F43610, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, MEMORY[0x263F1B5D0]);
    *(void *)&v37[*(int *)(v20 + 28)] = *(void *)&v10[*(int *)(v20 + 28)];
    uint64_t v21 = a3[6];
    uint64_t v22 = (char *)v4 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = sub_256175868();
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
    swift_retain();
    v25(v22, v23, v24);
    sub_25600EB64(0, &qword_269F44A68, MEMORY[0x263F07490], v19);
    *(void *)&v22[*(int *)(v26 + 28)] = *(void *)&v23[*(int *)(v26 + 28)];
    uint64_t v27 = a3[7];
    uint64_t v28 = a3[8];
    uint64_t v29 = (char *)v4 + v27;
    int v30 = (char *)a2 + v27;
    uint64_t v31 = *((void *)v30 + 1);
    *(void *)uint64_t v29 = *(void *)v30;
    *((void *)v29 + 1) = v31;
    v29[16] = v30[16];
    uint64_t v32 = (uint64_t *)((char *)v4 + v28);
    uint64_t v33 = (uint64_t *)((char *)a2 + v28);
    sub_25600EB64(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    swift_retain();
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v34 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
    }
    else
    {
      void *v32 = *v33;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

void sub_25600EB64(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_25600EBC8(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = v4 + *(int *)(type metadata accessor for CustomReminderModel() + 32);
  uint64_t v6 = sub_256175568();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  unint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F1B5D0];
  sub_25600EB64(0, &qword_269F43610, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, MEMORY[0x263F1B5D0]);
  swift_release();
  uint64_t v9 = a1 + a2[6];
  uint64_t v10 = sub_256175868();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  sub_25600EB64(0, &qword_269F44A68, MEMORY[0x263F07490], v8);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v11 = a1 + a2[8];
  sub_25600EB64(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_256175D98();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
    return v13(v11, v12);
  }
  else
  {
    return swift_release();
  }
}

void *sub_25600EE24(void *a1, void *a2, int *a3)
{
  uint64_t v5 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  unint64_t v8 = (char *)a2 + v6;
  *(_OWORD *)uint64_t v7 = *(_OWORD *)((char *)a2 + v6);
  *((_WORD *)v7 + 8) = *(_WORD *)((char *)a2 + v6 + 16);
  uint64_t v9 = *(int *)(type metadata accessor for CustomReminderModel() + 32);
  __dst = &v7[v9];
  uint64_t v10 = &v8[v9];
  uint64_t v11 = sub_256175568();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  id v14 = v5;
  if (v13(v10, 1, v11))
  {
    sub_25600EB64(0, &qword_269F43608, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
    memcpy(__dst, v10, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  id v16 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F1B5D0];
  sub_25600EB64(0, &qword_269F43610, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, MEMORY[0x263F1B5D0]);
  *(void *)&v7[*(int *)(v17 + 28)] = *(void *)&v8[*(int *)(v17 + 28)];
  uint64_t v18 = a3[6];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_256175868();
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
  swift_retain();
  v22(v19, v20, v21);
  sub_25600EB64(0, &qword_269F44A68, MEMORY[0x263F07490], v16);
  *(void *)&v19[*(int *)(v23 + 28)] = *(void *)&v20[*(int *)(v23 + 28)];
  uint64_t v24 = a3[7];
  uint64_t v25 = a3[8];
  uint64_t v26 = (char *)a1 + v24;
  uint64_t v27 = (char *)a2 + v24;
  uint64_t v28 = *((void *)v27 + 1);
  *(void *)uint64_t v26 = *(void *)v27;
  *((void *)v26 + 1) = v28;
  v26[16] = v27[16];
  uint64_t v29 = (void *)((char *)a1 + v25);
  int v30 = (void *)((char *)a2 + v25);
  sub_25600EB64(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  swift_retain();
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v31 = sub_256175D98();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  }
  else
  {
    *uint64_t v29 = *v30;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_25600F174(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = (void *)a2[1];
  uint64_t v7 = (void *)a1[1];
  a1[1] = v6;
  id v8 = v6;

  uint64_t v39 = a3;
  uint64_t v9 = a3[5];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v38 = a2;
  uint64_t v11 = (char *)a2 + v9;
  *(void *)uint64_t v10 = *(void *)((char *)a2 + v9);
  *((void *)v10 + 1) = *(void *)((char *)a2 + v9 + 8);
  unsigned char v10[16] = *((unsigned char *)a2 + v9 + 16);
  v10[17] = *((unsigned char *)a2 + v9 + 17);
  uint64_t v12 = *(int *)(type metadata accessor for CustomReminderModel() + 32);
  uint64_t v13 = &v10[v12];
  id v14 = &v11[v12];
  uint64_t v15 = sub_256175568();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    sub_25600EB64(0, &qword_269F43608, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
LABEL_7:
  uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F1B5D0];
  sub_25600EB64(0, &qword_269F43610, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, MEMORY[0x263F1B5D0]);
  *(void *)&v10[*(int *)(v22 + 28)] = *(void *)&v11[*(int *)(v22 + 28)];
  swift_retain();
  swift_release();
  uint64_t v23 = v39[6];
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)v38 + v23;
  uint64_t v26 = sub_256175868();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  sub_25600EB64(0, &qword_269F44A68, MEMORY[0x263F07490], v21);
  *(void *)&v24[*(int *)(v27 + 28)] = *(void *)&v25[*(int *)(v27 + 28)];
  swift_retain();
  swift_release();
  uint64_t v28 = v39[7];
  uint64_t v29 = (char *)a1 + v28;
  int v30 = (char *)v38 + v28;
  *(void *)((char *)a1 + v28) = *(void *)((char *)v38 + v28);
  swift_retain();
  swift_release();
  *((void *)v29 + 1) = *((void *)v30 + 1);
  swift_retain();
  swift_release();
  v29[16] = v30[16];
  if (a1 != v38)
  {
    uint64_t v31 = v39[8];
    uint64_t v32 = (void *)((char *)a1 + v31);
    uint64_t v33 = (void *)((char *)v38 + v31);
    uint64_t v34 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    unint64_t v35 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_256014C0C((uint64_t)a1 + v31, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    sub_25600EB64(0, &qword_269F47D00, v34, v35);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v36 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 16))(v32, v33, v36);
    }
    else
    {
      void *v32 = *v33;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_25600F598(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  *(_OWORD *)uint64_t v7 = *(_OWORD *)((char *)a2 + v6);
  *((_WORD *)v7 + 8) = *(_WORD *)((char *)a2 + v6 + 16);
  uint64_t v9 = *(int *)(type metadata accessor for CustomReminderModel() + 32);
  uint64_t v10 = &v7[v9];
  uint64_t v11 = &v8[v9];
  uint64_t v12 = sub_256175568();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    sub_25600EB64(0, &qword_269F43608, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F1B5D0];
  sub_25600EB64(0, &qword_269F43610, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, MEMORY[0x263F1B5D0]);
  *(void *)&v7[*(int *)(v16 + 28)] = *(void *)&v8[*(int *)(v16 + 28)];
  uint64_t v17 = a3[6];
  int v18 = (char *)a1 + v17;
  int v19 = (char *)a2 + v17;
  uint64_t v20 = sub_256175868();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  sub_25600EB64(0, &qword_269F44A68, MEMORY[0x263F07490], v15);
  *(void *)&v18[*(int *)(v21 + 28)] = *(void *)&v19[*(int *)(v21 + 28)];
  uint64_t v22 = a3[7];
  uint64_t v23 = a3[8];
  uint64_t v24 = (char *)a1 + v22;
  uint64_t v25 = (char *)a2 + v22;
  v24[16] = v25[16];
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  uint64_t v26 = (char *)a1 + v23;
  uint64_t v27 = (char *)a2 + v23;
  sub_25600EB64(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  uint64_t v29 = v28;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v30 = sub_256175D98();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v26, v27, v30);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
  }
  return a1;
}

void *sub_25600F8BC(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  uint64_t v7 = (void *)a1[1];
  *a1 = *a2;
  a1[1] = v6;

  uint64_t v42 = a3;
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)((char *)a2 + v8);
  v9[16] = *((unsigned char *)a2 + v8 + 16);
  v9[17] = *((unsigned char *)a2 + v8 + 17);
  uint64_t v11 = *(int *)(type metadata accessor for CustomReminderModel() + 32);
  uint64_t v12 = &v9[v11];
  uint64_t v13 = &v10[v11];
  uint64_t v14 = sub_256175568();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  uint64_t v41 = v12;
  LODWORD(v12) = v16(v12, 1, v14);
  int v17 = v16(v13, 1, v14);
  if (v12)
  {
    if (v17)
    {
      sub_25600EB64(0, &qword_269F43608, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
      size_t v19 = *(void *)(*(void *)(v18 - 8) + 64);
      uint64_t v20 = v41;
LABEL_6:
      memcpy(v20, v13, v19);
      goto LABEL_9;
    }
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v41, v13, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v41, 0, 1, v14);
  }
  else
  {
    if (v17)
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v41, v14);
      sub_25600EB64(0, &qword_269F43608, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
      size_t v19 = *(void *)(*(void *)(v21 - 8) + 64);
      uint64_t v20 = v41;
      goto LABEL_6;
    }
    (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v41, v13, v14);
  }
LABEL_9:
  uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F1B5D0];
  sub_25600EB64(0, &qword_269F43610, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, MEMORY[0x263F1B5D0]);
  *(void *)&v9[*(int *)(v23 + 28)] = *(void *)&v10[*(int *)(v23 + 28)];
  swift_release();
  uint64_t v24 = v42[6];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = sub_256175868();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 40))(v25, v26, v27);
  sub_25600EB64(0, &qword_269F44A68, MEMORY[0x263F07490], v22);
  *(void *)&v25[*(int *)(v28 + 28)] = *(void *)&v26[*(int *)(v28 + 28)];
  swift_release();
  uint64_t v29 = v42[7];
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  *(void *)((char *)a1 + v29) = *(void *)((char *)a2 + v29);
  swift_release();
  *((void *)v30 + 1) = *((void *)v31 + 1);
  swift_release();
  v30[16] = v31[16];
  if (a1 != a2)
  {
    uint64_t v32 = v42[8];
    uint64_t v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    unint64_t v35 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    uint64_t v36 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_256014C0C((uint64_t)a1 + v32, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    sub_25600EB64(0, &qword_269F47D00, v35, v36);
    uint64_t v38 = v37;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v39 = sub_256175D98();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v33, v34, v39);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v33, v34, *(void *)(*(void *)(v38 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_25600FD0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25600FD20);
}

uint64_t sub_25600FD20(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  sub_25600EB64(0, &qword_269F43610, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, MEMORY[0x263F1B5D0]);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  sub_25600EB64(0, &qword_269F44A68, MEMORY[0x263F07490], MEMORY[0x263F1B5D0]);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[6];
    goto LABEL_9;
  }
  sub_25600EB64(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[8];

  return v15(v17, a2, v16);
}

uint64_t sub_25600FF28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25600FF3C);
}

uint64_t sub_25600FF3C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  sub_25600EB64(0, &qword_269F43610, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, MEMORY[0x263F1B5D0]);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  sub_25600EB64(0, &qword_269F44A68, MEMORY[0x263F07490], MEMORY[0x263F1B5D0]);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_7;
  }
  sub_25600EB64(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[8];

  return v15(v17, a2, a2, v16);
}

uint64_t type metadata accessor for CustomReminderView(uint64_t a1)
{
  return sub_256008F08(a1, (uint64_t *)&unk_269F44A70);
}

void sub_256010164()
{
  sub_25600EB64(319, &qword_269F43610, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, MEMORY[0x263F1B5D0]);
  if (v0 <= 0x3F)
  {
    sub_25600EB64(319, &qword_269F44A68, MEMORY[0x263F07490], MEMORY[0x263F1B5D0]);
    if (v1 <= 0x3F)
    {
      sub_25600EB64(319, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_25601030C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_256010328@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v3 = sub_256176B08();
  uint64_t v46 = *(void *)(v3 - 8);
  uint64_t v47 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v45 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CustomReminderModel();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25601380C();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256013708();
  uint64_t v13 = v12;
  uint64_t v41 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560135B8();
  uint64_t v43 = *(void *)(v16 - 8);
  uint64_t v44 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256013438();
  uint64_t v42 = v19;
  uint64_t v40 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v39 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v11 = sub_256176788();
  *((void *)v11 + 1) = 0x4034000000000000;
  v11[16] = 0;
  sub_25601400C();
  sub_256010998(a1, (uint64_t)&v11[*(int *)(v21 + 44)]);
  uint64_t v49 = a1;
  sub_25600EB64(0, &qword_269F44B10, (uint64_t (*)(uint64_t))sub_256013F20, MEMORY[0x263F19AD0]);
  uint64_t v23 = v22;
  uint64_t v24 = sub_2560154E8(&qword_269F44B20, (void (*)(uint64_t))sub_25601380C);
  unint64_t v25 = sub_256013F84();
  uint64_t v38 = v9;
  sub_256177348();
  sub_2560140AC((uint64_t)v11, (uint64_t (*)(void))sub_25601380C);
  type metadata accessor for CustomReminderView(0);
  sub_25600EB64(0, &qword_269F43610, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, MEMORY[0x263F1B5D0]);
  sub_256177578();
  LODWORD(v9) = v7[17];
  sub_2560140AC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for CustomReminderModel);
  if (v9 == 1)
  {
    if (qword_269F42348 == -1) {
      goto LABEL_5;
    }
    goto LABEL_6;
  }
  if (qword_269F42348 != -1) {
LABEL_6:
  }
    swift_once();
LABEL_5:
  id v26 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_2561755B8();
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();

  uint64_t v54 = v27;
  uint64_t v55 = v29;
  uint64_t v50 = v38;
  uint64_t v51 = v23;
  uint64_t v52 = v24;
  unint64_t v53 = v25;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  unint64_t v31 = sub_255F5CE90();
  uint64_t v32 = MEMORY[0x263F8D310];
  sub_256177158();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v13);
  uint64_t v33 = v45;
  sub_256176AF8();
  uint64_t v50 = v13;
  uint64_t v51 = v32;
  uint64_t v52 = OpaqueTypeConformance2;
  unint64_t v53 = v31;
  swift_getOpaqueTypeConformance2();
  uint64_t v34 = v39;
  uint64_t v35 = v44;
  sub_256177258();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v33, v47);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v18, v35);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v40 + 32))(v48, v34, v42);
}

uint64_t sub_256010998@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v150 = a1;
  uint64_t v147 = a2;
  uint64_t v125 = type metadata accessor for RemoveReminderButton(0);
  uint64_t v2 = MEMORY[0x270FA5388](v125);
  uint64_t v117 = (uint64_t *)((char *)&v112 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v2);
  uint64_t v119 = (uint64_t)&v112 - v4;
  uint64_t v5 = type metadata accessor for CustomReminderView(0);
  uint64_t v113 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v114 = v6;
  uint64_t v115 = (uint64_t)&v112 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x263F1A830];
  uint64_t v8 = MEMORY[0x263F1A820];
  sub_256015880(0, (unint64_t *)&qword_269F42ED0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
  long long v121 = v9;
  uint64_t v118 = *((void *)v9 - 1);
  MEMORY[0x270FA5388](v9);
  uint64_t v116 = (char *)&v112 - v10;
  sub_256013CEC();
  uint64_t v124 = v11;
  uint64_t v123 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  long long v122 = (char *)&v112 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256013C84();
  uint64_t v145 = v13;
  uint64_t v143 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  long long v120 = (char *)&v112 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CustomReminderModel();
  MEMORY[0x270FA5388](v15 - 8);
  char v142 = (char *)&v112 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25600EB64(0, &qword_269F44AE8, (uint64_t (*)(uint64_t))sub_256013C84, MEMORY[0x263F8D8F0]);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v146 = (uint64_t)&v112 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v144 = (char *)&v112 - v20;
  uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F1B750];
  sub_25600EB64(0, &qword_269F44B40, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, MEMORY[0x263F1B750]);
  uint64_t v136 = v22;
  MEMORY[0x270FA5388](v22);
  uint64_t v135 = (char *)&v112 - v23;
  sub_256015880(0, &qword_269F44AE0, v7, v8, MEMORY[0x263F1B6B8]);
  uint64_t v140 = v24;
  uint64_t v139 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v138 = (char *)&v112 - v25;
  sub_256013BF8();
  uint64_t v137 = v26;
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  uint64_t v148 = (char *)&v112 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v153 = (uint64_t)&v112 - v29;
  uint64_t v133 = sub_256176978();
  uint64_t v134 = *(void *)(v133 - 8);
  MEMORY[0x270FA5388](v133);
  long long v132 = (char *)&v112 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_2561768C8();
  MEMORY[0x270FA5388](v31 - 8);
  uint64_t v128 = (char *)&v112 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_25600EB64(0, &qword_269F44B48, MEMORY[0x263F07490], v21);
  MEMORY[0x270FA5388](v33 - 8);
  uint64_t v127 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x263F18390];
  sub_256015880(0, &qword_269F44AC0, v7, v8, MEMORY[0x263F18390]);
  uint64_t v35 = v34;
  uint64_t v129 = *((void *)v34 - 1);
  MEMORY[0x270FA5388](v34);
  uint64_t v37 = (char *)&v112 - v36;
  sub_256013AC4();
  uint64_t v130 = v38;
  uint64_t v131 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v40 = (char *)&v112 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256013960();
  uint64_t v151 = *(void *)(v41 - 8);
  uint64_t v152 = v41;
  uint64_t v42 = MEMORY[0x270FA5388](v41);
  uint64_t v44 = (char *)&v112 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v42);
  uint64_t v154 = (char *)&v112 - v45;
  sub_2561766C8();
  uint64_t v141 = v5;
  sub_25600EB64(0, &qword_269F44A68, v126, MEMORY[0x263F1B5D0]);
  sub_256177598();
  sub_2561768B8();
  sub_256175D28();
  uint64_t v46 = v132;
  sub_256176968();
  uint64_t v47 = sub_256013E40((unint64_t *)&qword_269F44AC8, &qword_269F44AC0, v127);
  uint64_t v48 = sub_2560154E8(&qword_269F44AD0, MEMORY[0x263F19C28]);
  uint64_t v49 = v133;
  sub_256177128();
  (*(void (**)(char *, uint64_t))(v134 + 8))(v46, v49);
  (*(void (**)(char *, void *))(v129 + 8))(v37, v35);
  uint64_t v157 = v35;
  uint64_t v158 = v49;
  uint64_t v159 = v47;
  uint64_t v160 = v48;
  swift_getOpaqueTypeConformance2();
  uint64_t v50 = v130;
  sub_2561770D8();
  (*(void (**)(char *, uint64_t))(v131 + 8))(v40, v50);
  uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v151 + 32);
  uint64_t v149 = v44;
  v51(v154, v44, v152);
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v52 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v53 = sub_2561755B8();
  uint64_t v55 = v54;
  swift_bridgeObjectRelease();

  uint64_t v155 = v53;
  uint64_t v156 = v55;
  uint64_t v56 = v150;
  sub_25600EB64(0, &qword_269F43610, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, MEMORY[0x263F1B5D0]);
  uint64_t v57 = (uint64_t)v135;
  sub_256177598();
  swift_getKeyPath();
  sub_256177738();
  swift_release();
  sub_256014C0C(v57, &qword_269F44B40, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, MEMORY[0x263F1B750]);
  sub_255F5CE90();
  uint64_t v58 = v138;
  sub_2561776D8();
  char v59 = sub_256176D88();
  sub_256175D48();
  uint64_t v61 = v60;
  uint64_t v63 = v62;
  uint64_t v65 = v64;
  uint64_t v67 = v66;
  uint64_t v68 = v139;
  uint64_t v69 = (uint64_t)v148;
  uint64_t v70 = v140;
  (*(void (**)(char *, char *, uint64_t))(v139 + 16))(v148, v58, v140);
  uint64_t v71 = v69 + *(int *)(v137 + 36);
  *(unsigned char *)uint64_t v71 = v59;
  *(void *)(v71 + 8) = v61;
  *(void *)(v71 + 16) = v63;
  *(void *)(v71 + 24) = v65;
  *(void *)(v71 + 32) = v67;
  *(unsigned char *)(v71 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
  (*(void (**)(char *, uint64_t))(v68 + 8))(v58, v70);
  uint64_t v72 = v153;
  sub_2560147CC(v69, v153, (uint64_t (*)(void))sub_256013BF8);
  uint64_t v73 = (uint64_t)v142;
  sub_256177578();
  char v74 = *(unsigned char *)(v73 + 17);
  sub_2560140AC(v73, (uint64_t (*)(void))type metadata accessor for CustomReminderModel);
  uint64_t v75 = 1;
  uint64_t v76 = (uint64_t)v144;
  uint64_t v77 = v72;
  if ((v74 & 1) == 0)
  {
    id v78 = (id)qword_269F50C88;
    swift_bridgeObjectRetain();
    uint64_t v79 = sub_2561755B8();
    uint64_t v81 = v80;
    swift_bridgeObjectRelease();

    uint64_t v157 = (void *)v79;
    uint64_t v158 = v81;
    uint64_t v82 = v115;
    sub_256014B10(v56, v115, type metadata accessor for CustomReminderView);
    unint64_t v83 = (*(unsigned __int8 *)(v113 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80);
    uint64_t v84 = swift_allocObject();
    sub_2560147CC(v82, v84 + v83, type metadata accessor for CustomReminderView);
    uint64_t v85 = MEMORY[0x263F8D310];
    uint64_t v86 = v116;
    sub_2561775D8();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v88 = (uint64_t)v117;
    *uint64_t v117 = KeyPath;
    sub_25600EB64(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    swift_storeEnumTagMultiPayload();
    uint64_t v89 = v119;
    sub_2560147CC(v88, v119, type metadata accessor for RemoveReminderButton);
    uint64_t v90 = sub_256013E40((unint64_t *)&qword_269F42EE0, (unint64_t *)&qword_269F42ED0, MEMORY[0x263F1B5E8]);
    uint64_t v91 = sub_2560154E8(&qword_269F44B00, (void (*)(uint64_t))type metadata accessor for RemoveReminderButton);
    uint64_t v92 = v122;
    uint64_t v93 = v121;
    uint64_t v94 = v125;
    sub_256177088();
    sub_2560140AC(v89, type metadata accessor for RemoveReminderButton);
    (*(void (**)(char *, void *))(v118 + 8))(v86, v93);
    uint64_t v157 = &unk_2704B5358;
    sub_255FCD3A4((uint64_t)&unk_2704B6130);
    sub_2560146F0(0, (unint64_t *)&qword_26B2AD350, v85, MEMORY[0x263F8D488]);
    sub_255F744D8();
    sub_256177E28();
    swift_bridgeObjectRelease();
    uint64_t v157 = v93;
    uint64_t v158 = v94;
    uint64_t v159 = v90;
    uint64_t v160 = v91;
    swift_getOpaqueTypeConformance2();
    uint64_t v95 = (uint64_t)v120;
    uint64_t v96 = v124;
    sub_256177238();
    swift_bridgeObjectRelease();
    uint64_t v77 = v153;
    swift_arrayDestroy();
    uint64_t v97 = v92;
    uint64_t v69 = (uint64_t)v148;
    (*(void (**)(char *, uint64_t))(v123 + 8))(v97, v96);
    sub_2560147CC(v95, v76, (uint64_t (*)(void))sub_256013C84);
    uint64_t v75 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v143 + 56))(v76, v75, 1, v145);
  uint64_t v99 = v151;
  uint64_t v98 = v152;
  uint64_t v100 = *(void (**)(void))(v151 + 16);
  uint64_t v101 = v77;
  uint64_t v102 = v149;
  v100();
  sub_256014B10(v101, v69, (uint64_t (*)(void))sub_256013BF8);
  uint64_t v103 = v146;
  sub_256014B78(v76, v146);
  LOBYTE(v157) = 1;
  uint64_t v104 = v147;
  ((void (*)(uint64_t, char *, uint64_t))v100)(v147, v102, v98);
  sub_2560138A0();
  uint64_t v106 = v105;
  sub_256014B10(v69, v104 + *(int *)(v105 + 48), (uint64_t (*)(void))sub_256013BF8);
  sub_256014B78(v103, v104 + *(int *)(v106 + 64));
  uint64_t v107 = v104 + *(int *)(v106 + 80);
  char v108 = (char)v157;
  *(void *)uint64_t v107 = 0;
  *(unsigned char *)(v107 + 8) = v108;
  uint64_t v109 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_256014C0C(v76, &qword_269F44AE8, (uint64_t (*)(uint64_t))sub_256013C84, MEMORY[0x263F8D8F0]);
  sub_2560140AC(v153, (uint64_t (*)(void))sub_256013BF8);
  uint64_t v110 = *(void (**)(char *, uint64_t))(v99 + 8);
  v110(v154, v98);
  sub_256014C0C(v103, &qword_269F44AE8, (uint64_t (*)(uint64_t))sub_256013C84, v109);
  sub_2560140AC(v69, (uint64_t (*)(void))sub_256013BF8);
  return ((uint64_t (*)(char *, uint64_t))v110)(v149, v98);
}

uint64_t sub_256011C58(uint64_t a1)
{
  uint64_t v2 = sub_256175B68();
  uint64_t v28 = *(void *)(v2 - 8);
  uint64_t v29 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25600EB64(0, &qword_269F43608, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v28 - v6;
  uint64_t v8 = type metadata accessor for CustomReminderModel();
  uint64_t v9 = v8 - 8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_256175568();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for CustomReminderView(0);
  uint64_t v17 = a1;
  sub_25600EB64(0, &qword_269F43610, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, MEMORY[0x263F1B5D0]);
  sub_256177578();
  sub_25601465C((uint64_t)&v11[*(int *)(v9 + 40)], (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v7, 1, v12) == 1)
  {
    uint64_t v19 = v28;
    uint64_t v18 = v29;
    sub_256014C0C((uint64_t)v7, &qword_269F43608, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
    sub_256175B48();
    uint64_t v20 = sub_256175B58();
    os_log_type_t v21 = sub_256178238();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl(&dword_255F58000, v20, v21, "CustomReminderRow should have a source component always.", v22, 2u);
      MEMORY[0x25A2A1E90](v22, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v4, v18);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v7, v12);
    id v24 = *(id *)(a1 + 8);
    sub_255FB1D58((uint64_t)v15);

    uint64_t v25 = (uint64_t *)(v17 + *(int *)(v16 + 28));
    uint64_t v26 = *v25;
    uint64_t v27 = v25[1];
    LOBYTE(v25) = *((unsigned char *)v25 + 16);
    uint64_t v31 = v26;
    uint64_t v32 = v27;
    char v33 = (char)v25;
    char v30 = 0;
    sub_2560146F0(0, (unint64_t *)&qword_269F47D40, MEMORY[0x263F8D4F8], MEMORY[0x263F1B750]);
    sub_256177728();
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
}

uint64_t sub_25601204C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v20[1] = a2;
  sub_256013F20();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_256176958();
  MEMORY[0x270FA5388](v7 - 8);
  sub_255F73708();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v20 - v14;
  sub_256176918();
  v20[8] = a1;
  sub_255F737BC();
  sub_255FAC464();
  sub_256175E68();
  sub_256176928();
  v20[4] = a1;
  sub_256175E68();
  uint64_t v16 = &v6[*(int *)(v4 + 48)];
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v17(v6, v15, v9);
  v17(v16, v13, v9);
  sub_2561767A8();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v18(v13, v9);
  return ((uint64_t (*)(char *, uint64_t))v18)(v15, v9);
}

uint64_t sub_2560122C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v19[1] = a2;
  uint64_t v3 = type metadata accessor for CustomReminderView(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  sub_256015880(0, (unint64_t *)&qword_269F42ED0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
  v19[0] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v19 - v8;
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v10 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_2561755B8();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();

  uint64_t v20 = (void *)v11;
  uint64_t v21 = v13;
  sub_256014B10(a1, (uint64_t)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CustomReminderView);
  unint64_t v14 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v15 = swift_allocObject();
  sub_2560147CC((uint64_t)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, type metadata accessor for CustomReminderView);
  sub_255F5CE90();
  uint64_t v16 = MEMORY[0x263F8D310];
  sub_2561775D8();
  uint64_t v20 = &unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B6170);
  sub_2560146F0(0, (unint64_t *)&qword_26B2AD350, v16, MEMORY[0x263F8D488]);
  sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_256013E40((unint64_t *)&qword_269F42EE0, (unint64_t *)&qword_269F42ED0, MEMORY[0x263F1B5E8]);
  uint64_t v17 = v19[0];
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v17);
}

uint64_t sub_256012664()
{
  return sub_256177728();
}

uint64_t sub_2560126EC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CustomReminderView(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x263F1B5E8];
  sub_256015880(0, (unint64_t *)&qword_269F42ED0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v10 = (char *)v16 - v9;
  v16[0] = sub_2560129E4();
  v16[1] = v11;
  sub_256014B10(a1, (uint64_t)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CustomReminderView);
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v13 = swift_allocObject();
  sub_2560147CC((uint64_t)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, type metadata accessor for CustomReminderView);
  sub_255F5CE90();
  uint64_t v14 = MEMORY[0x263F8D310];
  sub_2561775D8();
  v16[0] = &unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B61A0);
  sub_2560146F0(0, (unint64_t *)&qword_26B2AD350, v14, MEMORY[0x263F8D488]);
  sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_256013E40((unint64_t *)&qword_269F42EE0, (unint64_t *)&qword_269F42ED0, v5);
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_2560129E4()
{
  uint64_t v0 = type metadata accessor for CustomReminderModel();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CustomReminderView(0);
  sub_25600EB64(0, &qword_269F43610, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, MEMORY[0x263F1B5D0]);
  sub_256177578();
  int v3 = v2[17];
  sub_2560140AC((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for CustomReminderModel);
  if (v3 == 1)
  {
    if (qword_269F42348 == -1) {
      goto LABEL_5;
    }
    goto LABEL_6;
  }
  if (qword_269F42348 != -1) {
LABEL_6:
  }
    swift_once();
LABEL_5:
  id v4 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_2561755B8();
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t sub_256012BE4(uint64_t a1)
{
  uint64_t v52 = a1;
  sub_25600EB64(0, &qword_269F43608, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v54 = (char *)&v45 - v2;
  uint64_t v55 = type metadata accessor for CustomReminderModel() - 8;
  uint64_t v3 = MEMORY[0x270FA5388](v55);
  uint64_t v56 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v53 = (char *)&v45 - v5;
  uint64_t v6 = sub_256175868();
  uint64_t v50 = *(void *)(v6 - 8);
  uint64_t v51 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_256175A08();
  uint64_t v48 = *(void *)(v9 - 8);
  uint64_t v49 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_256175568();
  uint64_t v47 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v46 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v45 - v15;
  sub_2561759C8();
  sub_25600EB64(0, &qword_269F44B38, MEMORY[0x263F07908], MEMORY[0x263F8E0F8]);
  uint64_t v17 = sub_2561759E8();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 72);
  unint64_t v20 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_2561A0040;
  unint64_t v22 = v21 + v20;
  uint64_t v23 = *(void (**)(unint64_t, void, uint64_t))(v18 + 104);
  v23(v22, *MEMORY[0x263F07890], v17);
  unint64_t v24 = v22 + v19;
  uint64_t v25 = v12;
  v23(v24, *MEMORY[0x263F078C0], v17);
  sub_2560D0A18(v21);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v26 = type metadata accessor for CustomReminderView(0);
  uint64_t v27 = v52;
  uint64_t v28 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F1B5D0];
  sub_25600EB64(0, &qword_269F44A68, MEMORY[0x263F07490], MEMORY[0x263F1B5D0]);
  sub_256177578();
  sub_256175928();
  uint64_t v29 = v27;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v8, v51);
  char v30 = v11;
  uint64_t v31 = (uint64_t)v54;
  (*(void (**)(char *, uint64_t))(v48 + 8))(v30, v49);
  uint64_t v32 = v47;
  sub_25600EB64(0, &qword_269F43610, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, v28);
  char v33 = v53;
  sub_256177578();
  sub_25601465C((uint64_t)&v33[*(int *)(v55 + 40)], v31);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v31, 1, v25) == 1)
  {
    sub_256014C0C(v31, &qword_269F43608, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
    id v34 = *(id *)(v29 + 8);
    uint64_t v35 = (uint64_t)v56;
    sub_256177578();
    char v36 = *(unsigned char *)(v35 + 16);
    sub_2560140AC(v35, (uint64_t (*)(void))type metadata accessor for CustomReminderModel);
    sub_255FB1AD0((uint64_t)v16, v36);
  }
  else
  {
    uint64_t v37 = (uint64_t)v46;
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v46, v31, v25);
    id v38 = *(id *)(v29 + 8);
    uint64_t v39 = (uint64_t)v56;
    sub_256177578();
    char v40 = *(unsigned char *)(v39 + 16);
    sub_2560140AC(v39, (uint64_t (*)(void))type metadata accessor for CustomReminderModel);
    sub_255FB1D58(v37);
    sub_255FB1AD0((uint64_t)v16, v40);

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v37, v25);
  }
  uint64_t v41 = (uint64_t *)(v29 + *(int *)(v26 + 28));
  uint64_t v42 = *v41;
  uint64_t v43 = v41[1];
  LOBYTE(v41) = *((unsigned char *)v41 + 16);
  uint64_t v58 = v42;
  uint64_t v59 = v43;
  char v60 = (char)v41;
  char v57 = 0;
  sub_2560146F0(0, (unint64_t *)&qword_269F47D40, MEMORY[0x263F8D4F8], MEMORY[0x263F1B750]);
  sub_256177728();
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v16, v25);
}

uint64_t sub_256013298()
{
  return sub_2561761D8();
}

uint64_t sub_256013430@<X0>(uint64_t a1@<X8>)
{
  return sub_256010328(*(void *)(v1 + 16), a1);
}

void sub_256013438()
{
  if (!qword_269F44A80)
  {
    sub_2560135B8();
    sub_256013708();
    sub_25601380C();
    sub_25600EB64(255, &qword_269F44B10, (uint64_t (*)(uint64_t))sub_256013F20, MEMORY[0x263F19AD0]);
    sub_2560154E8(&qword_269F44B20, (void (*)(uint64_t))sub_25601380C);
    sub_256013F84();
    swift_getOpaqueTypeConformance2();
    sub_255F5CE90();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F44A80);
    }
  }
}

void sub_2560135B8()
{
  if (!qword_269F44A88)
  {
    sub_256013708();
    sub_25601380C();
    sub_25600EB64(255, &qword_269F44B10, (uint64_t (*)(uint64_t))sub_256013F20, MEMORY[0x263F19AD0]);
    sub_2560154E8(&qword_269F44B20, (void (*)(uint64_t))sub_25601380C);
    sub_256013F84();
    swift_getOpaqueTypeConformance2();
    sub_255F5CE90();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F44A88);
    }
  }
}

void sub_256013708()
{
  if (!qword_269F44A90)
  {
    sub_25601380C();
    sub_25600EB64(255, &qword_269F44B10, (uint64_t (*)(uint64_t))sub_256013F20, MEMORY[0x263F19AD0]);
    sub_2560154E8(&qword_269F44B20, (void (*)(uint64_t))sub_25601380C);
    sub_256013F84();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F44A90);
    }
  }
}

void sub_25601380C()
{
  if (!qword_269F44A98)
  {
    sub_25600EB64(255, &qword_269F44AA0, (uint64_t (*)(uint64_t))sub_2560138A0, MEMORY[0x263F1BAC8]);
    sub_256013E98();
    unint64_t v0 = sub_2561776F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44A98);
    }
  }
}

void sub_2560138A0()
{
  if (!qword_269F44AA8)
  {
    sub_256013960();
    sub_256013BF8();
    sub_25600EB64(255, &qword_269F44AE8, (uint64_t (*)(uint64_t))sub_256013C84, MEMORY[0x263F8D8F0]);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_269F44AA8);
    }
  }
}

void sub_256013960()
{
  if (!qword_269F44AB0)
  {
    sub_256013AC4();
    unint64_t v0 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x263F18390];
    sub_256015880(255, &qword_269F44AC0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F18390]);
    sub_256176978();
    sub_256013E40((unint64_t *)&qword_269F44AC8, &qword_269F44AC0, v0);
    sub_2560154E8(&qword_269F44AD0, MEMORY[0x263F19C28]);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v2) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F44AB0);
    }
  }
}

void sub_256013AC4()
{
  if (!qword_269F44AB8)
  {
    unint64_t v0 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x263F18390];
    sub_256015880(255, &qword_269F44AC0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F18390]);
    sub_256176978();
    sub_256013E40((unint64_t *)&qword_269F44AC8, &qword_269F44AC0, v0);
    sub_2560154E8(&qword_269F44AD0, MEMORY[0x263F19C28]);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v2) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F44AB8);
    }
  }
}

void sub_256013BF8()
{
  if (!qword_269F44AD8)
  {
    sub_256015880(255, &qword_269F44AE0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B6B8]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44AD8);
    }
  }
}

void sub_256013C84()
{
  if (!qword_269F44AF0)
  {
    sub_256013CEC();
    sub_256176D38();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44AF0);
    }
  }
}

void sub_256013CEC()
{
  if (!qword_269F44AF8)
  {
    unint64_t v0 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x263F1B5E8];
    sub_256015880(255, (unint64_t *)&qword_269F42ED0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
    type metadata accessor for RemoveReminderButton(255);
    sub_256013E40((unint64_t *)&qword_269F42EE0, (unint64_t *)&qword_269F42ED0, v0);
    sub_2560154E8(&qword_269F44B00, (void (*)(uint64_t))type metadata accessor for RemoveReminderButton);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v2) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F44AF8);
    }
  }
}

uint64_t type metadata accessor for RemoveReminderButton(uint64_t a1)
{
  return sub_256008F08(a1, (uint64_t *)&unk_269F44B50);
}

uint64_t sub_256013E40(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(void, uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_256015880(255, a2, MEMORY[0x263F1A830], MEMORY[0x263F1A820], a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_256013E98()
{
  unint64_t result = qword_269F44B08;
  if (!qword_269F44B08)
  {
    sub_25600EB64(255, &qword_269F44AA0, (uint64_t (*)(uint64_t))sub_2560138A0, MEMORY[0x263F1BAC8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44B08);
  }
  return result;
}

void sub_256013F20()
{
  if (!qword_269F44B18)
  {
    sub_255F73708();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F44B18);
    }
  }
}

unint64_t sub_256013F84()
{
  unint64_t result = qword_269F44B28;
  if (!qword_269F44B28)
  {
    sub_25600EB64(255, &qword_269F44B10, (uint64_t (*)(uint64_t))sub_256013F20, MEMORY[0x263F19AD0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44B28);
  }
  return result;
}

void sub_25601400C()
{
  if (!qword_269F44B30)
  {
    sub_25600EB64(255, &qword_269F44AA0, (uint64_t (*)(uint64_t))sub_2560138A0, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_256176048();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44B30);
    }
  }
}

uint64_t sub_2560140A4@<X0>(uint64_t a1@<X8>)
{
  return sub_25601204C(*(void *)(v1 + 16), a1);
}

uint64_t sub_2560140AC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25601410C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v51 = a1;
  uint64_t v50 = sub_256175D98();
  uint64_t v1 = *(void *)(v50 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v50);
  uint64_t v47 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v45 - v4;
  uint64_t v46 = sub_256176B28();
  uint64_t v6 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560156FC(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (uint64_t)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256015788(0);
  uint64_t v13 = v12 - 8;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560157B0(0);
  uint64_t v49 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560157EC(0, &qword_269F44B88, sub_2560157B0, (unint64_t *)&qword_269F42BD0, MEMORY[0x263F1A180]);
  uint64_t v48 = v19;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v45 - v20;
  sub_256176B38();
  uint64_t v22 = sub_2561778F8();
  double v24 = sub_25611678C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v11, 0.0, 1, 0.0, 1, v22, v23);
  (*(void (**)(char *, uint64_t, double))(v6 + 8))(v8, v46, v24);
  char v25 = sub_256176D88();
  sub_256175D48();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  sub_256014B10(v11, (uint64_t)v15, (uint64_t (*)(void))sub_2560156FC);
  id v34 = &v15[*(int *)(v13 + 44)];
  *id v34 = v25;
  *((void *)v34 + 1) = v27;
  *((void *)v34 + 2) = v29;
  *((void *)v34 + 3) = v31;
  *((void *)v34 + 4) = v33;
  v34[40] = 0;
  sub_2560140AC(v11, (uint64_t (*)(void))sub_2560156FC);
  sub_25611A114((uint64_t)v5);
  uint64_t v35 = v47;
  uint64_t v36 = v50;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v47, *MEMORY[0x263F184F8], v50);
  LOBYTE(v11) = sub_256175D88();
  uint64_t v37 = *(void (**)(char *, uint64_t))(v1 + 8);
  v37(v35, v36);
  v37(v5, v36);
  id v38 = objc_msgSend(self, sel_systemGray5Color);
  uint64_t v39 = MEMORY[0x25A29FF60](v38);
  if ((v11 & 1) == 0)
  {
    uint64_t v40 = sub_256177498();
    swift_release();
    uint64_t v39 = v40;
  }
  char v41 = sub_256176D88();
  sub_256014B10((uint64_t)v15, (uint64_t)v18, (uint64_t (*)(void))sub_256015788);
  uint64_t v42 = &v18[*(int *)(v49 + 36)];
  *(void *)uint64_t v42 = v39;
  void v42[8] = v41;
  sub_2560140AC((uint64_t)v15, (uint64_t (*)(void))sub_256015788);
  uint64_t v43 = sub_256177428();
  sub_256014B10((uint64_t)v18, (uint64_t)v21, (uint64_t (*)(void))sub_2560157B0);
  *(void *)&v21[*(int *)(v48 + 36)] = v43;
  sub_2560140AC((uint64_t)v18, (uint64_t (*)(void))sub_2560157B0);
  return sub_2560158D0((uint64_t)v21, v51);
}

uint64_t sub_256014630@<X0>(uint64_t a1@<X8>)
{
  return sub_2560122C0(*(void *)(v1 + 16), a1);
}

uint64_t sub_256014638()
{
  return sub_2560126EC(*(void *)(v0 + 16));
}

uint64_t sub_256014644()
{
  return sub_256014758(sub_256012BE4);
}

uint64_t sub_25601465C(uint64_t a1, uint64_t a2)
{
  sub_25600EB64(0, &qword_269F43608, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_2560146F0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_256014740()
{
  return sub_256014758((uint64_t (*)(uint64_t))sub_256012664);
}

uint64_t sub_256014758(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for CustomReminderView(0) - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_2560147CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t objectdestroyTm_8()
{
  uint64_t v1 = (int *)type metadata accessor for CustomReminderView(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));

  uint64_t v3 = v2 + v1[5];
  uint64_t v4 = v3 + *(int *)(type metadata accessor for CustomReminderModel() + 32);
  uint64_t v5 = sub_256175568();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F1B5D0];
  sub_25600EB64(0, &qword_269F43610, (uint64_t (*)(uint64_t))type metadata accessor for CustomReminderModel, MEMORY[0x263F1B5D0]);
  swift_release();
  uint64_t v8 = v2 + v1[6];
  uint64_t v9 = sub_256175868();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  sub_25600EB64(0, &qword_269F44A68, MEMORY[0x263F07490], v7);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v10 = v2 + v1[8];
  sub_25600EB64(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_256014AF0()
{
  return sub_256014758(sub_256011C58);
}

uint64_t sub_256014B10(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_256014B78(uint64_t a1, uint64_t a2)
{
  sub_25600EB64(0, &qword_269F44AE8, (uint64_t (*)(uint64_t))sub_256013C84, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_256014C0C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_25600EB64(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t *sub_256014C68(uint64_t *a1, uint64_t *a2)
{
  sub_25600EB64(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_256175D98();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_256014DA0(uint64_t a1)
{
  sub_25600EB64(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_256175D98();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_release();
  }
}

void *sub_256014E70(void *a1, void *a2)
{
  sub_25600EB64(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256175D98();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_256014F58(void *a1, void *a2)
{
  if (a1 != a2)
  {
    uint64_t v4 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    int v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_256014C0C((uint64_t)a1, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    sub_25600EB64(0, &qword_269F47D00, v4, v5);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_256015070(void *a1, const void *a2)
{
  sub_25600EB64(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  uint64_t v5 = v4;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256175D98();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
  }
  return a1;
}

void *sub_256015160(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    uint64_t v4 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_256014C0C((uint64_t)a1, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    sub_25600EB64(0, &qword_269F47D00, v4, v5);
    uint64_t v7 = v6;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_256175D98();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_256015280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256015294);
}

uint64_t sub_256015294(uint64_t a1, uint64_t a2)
{
  sub_25600EB64(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_256015330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256015344);
}

uint64_t sub_256015344(uint64_t a1, uint64_t a2)
{
  sub_25600EB64(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

void sub_2560153E4()
{
  sub_25600EB64(319, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_2560154A0()
{
  return sub_2560154E8(&qword_269F44B60, (void (*)(uint64_t))sub_256015530);
}

uint64_t sub_2560154E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_256015530()
{
  if (!qword_269F44B68)
  {
    sub_2561760D8();
    sub_256013438();
    sub_2560135B8();
    sub_256013708();
    sub_25601380C();
    sub_25600EB64(255, &qword_269F44B10, (uint64_t (*)(uint64_t))sub_256013F20, MEMORY[0x263F19AD0]);
    sub_2560154E8(&qword_269F44B20, (void (*)(uint64_t))sub_25601380C);
    sub_256013F84();
    swift_getOpaqueTypeConformance2();
    sub_255F5CE90();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t v0 = sub_2561761E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44B68);
    }
  }
}

uint64_t sub_2560156E0()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_2560156FC(uint64_t a1)
{
}

void sub_256015724(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_256015788(uint64_t a1)
{
}

void sub_2560157B0(uint64_t a1)
{
}

void sub_2560157EC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_256015880(255, a4, MEMORY[0x263F1B440], MEMORY[0x263F1B420], a5);
    unint64_t v8 = sub_2561761B8();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_256015880(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_2560158D0(uint64_t a1, uint64_t a2)
{
  sub_2560157EC(0, &qword_269F44B88, sub_2560157B0, (unint64_t *)&qword_269F42BD0, MEMORY[0x263F1A180]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_256015970()
{
  unint64_t result = qword_269F44B90;
  if (!qword_269F44B90)
  {
    uint64_t v1 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x263F1A180];
    sub_2560157EC(255, &qword_269F44B88, sub_2560157B0, (unint64_t *)&qword_269F42BD0, MEMORY[0x263F1A180]);
    sub_256015A54();
    sub_256015C24((unint64_t *)&qword_269F42C00, (unint64_t *)&qword_269F42BD0, v1);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44B90);
  }
  return result;
}

unint64_t sub_256015A54()
{
  unint64_t result = qword_269F44B98;
  if (!qword_269F44B98)
  {
    sub_2560157B0(255);
    sub_256015B04();
    sub_256015C24((unint64_t *)&qword_269F44178, &qword_269F44168, MEMORY[0x263F1A158]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44B98);
  }
  return result;
}

unint64_t sub_256015B04()
{
  unint64_t result = qword_269F44BA0;
  if (!qword_269F44BA0)
  {
    sub_256015788(255);
    sub_256015B7C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44BA0);
  }
  return result;
}

unint64_t sub_256015B7C()
{
  unint64_t result = qword_269F44BA8;
  if (!qword_269F44BA8)
  {
    sub_2560156FC(255);
    sub_2560154E8(&qword_269F44BB0, MEMORY[0x263F1A0D0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44BA8);
  }
  return result;
}

uint64_t sub_256015C24(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(void, uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_256015880(255, a2, MEMORY[0x263F1B440], MEMORY[0x263F1B420], a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_256015C7C(char a1)
{
  if (*(unsigned char *)(v1 + 16) == 1 && (a1 & 1) == 0)
  {
    if (qword_269F42348 == -1) {
      goto LABEL_6;
    }
    goto LABEL_7;
  }
  if (qword_269F42348 != -1) {
LABEL_7:
  }
    swift_once();
LABEL_6:
  id v2 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_2561755B8();
  swift_bridgeObjectRelease();

  return v3;
}

uint64_t sub_256015DD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v57 = a1;
  uint64_t v53 = type metadata accessor for CustomReminderModel();
  uint64_t v1 = MEMORY[0x270FA5388](v53);
  uint64_t v63 = (uint64_t)v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v1);
  uint64_t v54 = (void *)((char *)v52 - v3);
  uint64_t v4 = sub_256175B68();
  uint64_t v55 = *(void *)(v4 - 8);
  uint64_t v56 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v66 = (char *)v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560174F4(0, (unint64_t *)&qword_269F44D30, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v61 = (char *)v52 - v7;
  uint64_t v8 = sub_256175568();
  uint64_t v64 = *(void *)(v8 - 8);
  uint64_t v65 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v67 = (char *)v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_256175A08();
  uint64_t v59 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_256175868();
  uint64_t v68 = *(void *)(v14 - 8);
  uint64_t v15 = v68;
  uint64_t v69 = v14;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)v52 - v19;
  sub_2561759C8();
  sub_256175828();
  sub_2561758F8();
  v52[0] = *(void *)(v15 + 8);
  v52[1] = v15 + 8;
  ((void (*)(char *, uint64_t))v52[0])(v18, v14);
  uint64_t v58 = *(void (**)(char *, uint64_t))(v11 + 8);
  v58(v13, v10);
  sub_2561759C8();
  sub_2560174F4(0, &qword_269F44B38, MEMORY[0x263F07908], MEMORY[0x263F8E0F8]);
  uint64_t v21 = sub_2561759E8();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(void *)(v22 + 72);
  unint64_t v24 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_2561A35E0;
  unint64_t v26 = v25 + v24;
  uint64_t v27 = *(void (**)(unint64_t, void, uint64_t))(v22 + 104);
  v27(v26, *MEMORY[0x263F07878], v21);
  v27(v26 + v23, *MEMORY[0x263F078A0], v21);
  v27(v26 + 2 * v23, *MEMORY[0x263F078A8], v21);
  uint64_t v28 = 3 * v23;
  uint64_t v29 = v62;
  uint64_t v30 = v67;
  v27(v26 + v28, *MEMORY[0x263F07870], v21);
  uint64_t v31 = v68;
  sub_2560D0A18(v25);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  char v60 = v20;
  sub_256175928();
  uint64_t v32 = v69;
  swift_bridgeObjectRelease();
  uint64_t v33 = v58;
  uint64_t v34 = v59;
  v58(v13, v59);
  sub_256175518();
  sub_256175538();
  sub_2561759C8();
  uint64_t v35 = (uint64_t)v61;
  sub_256175998();
  v33(v13, v34);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v35, 1, v32) == 1)
  {
    uint64_t v36 = v53;
    sub_256017558(v35, (unint64_t *)&qword_269F44D30, MEMORY[0x263F07490]);
    sub_256175B48();
    uint64_t v37 = v54;
    sub_2560175C8(v29, (uint64_t)v54);
    sub_2560175C8(v29, v63);
    id v38 = sub_256175B58();
    os_log_type_t v39 = sub_256178218();
    BOOL v40 = os_log_type_enabled(v38, v39);
    uint64_t v41 = v57;
    if (v40)
    {
      uint64_t v42 = swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      uint64_t v70 = v36;
      uint64_t v71 = v43;
      *(_DWORD *)uint64_t v42 = 136446722;
      sub_256017688();
      uint64_t v44 = sub_256177F08();
      uint64_t v70 = sub_255FB29A8(v44, v45, &v71);
      sub_256178458();
      swift_bridgeObjectRelease();
      *(_WORD *)(v42 + 12) = 2048;
      uint64_t v46 = (uint64_t)v37;
      uint64_t v47 = *v37;
      sub_25601762C(v46);
      uint64_t v70 = v47;
      sub_256178458();
      *(_WORD *)(v42 + 22) = 2048;
      uint64_t v48 = *(void *)(v63 + 8);
      sub_25601762C(v63);
      uint64_t v70 = v48;
      sub_256178458();
      _os_log_impl(&dword_255F58000, v38, v39, "[%{public}s] Could not construct date with time components: %ld:%ld", (uint8_t *)v42, 0x20u);
      swift_arrayDestroy();
      uint64_t v49 = v43;
      uint64_t v31 = v68;
      MEMORY[0x25A2A1E90](v49, -1, -1);
      uint64_t v50 = v42;
      uint64_t v32 = v69;
      MEMORY[0x25A2A1E90](v50, -1, -1);

      (*(void (**)(char *, uint64_t))(v55 + 8))(v66, v56);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v67, v65);
    }
    else
    {
      sub_25601762C(v63);
      sub_25601762C((uint64_t)v37);

      (*(void (**)(char *, uint64_t))(v55 + 8))(v66, v56);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v30, v65);
    }
    uint64_t v35 = (uint64_t)v60;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v64 + 8))(v30, v65);
    ((void (*)(char *, uint64_t))v52[0])(v60, v32);
    uint64_t v41 = v57;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v41, v35, v32);
}

uint64_t sub_256016624@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_2560174F4(0, &qword_269F43608, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v35 - v8;
  uint64_t v10 = sub_256175568();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v35 - v15;
  uint64_t v17 = (SEL *)&unk_2653F3000;
  if (a1)
  {
    id v18 = objc_msgSend(a1, sel_dateComponents);
    sub_2561754F8();

    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v19(v9, v14, v10);
    uint64_t v20 = *(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56);
    v20(v9, 0, 1, v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
    {
      v19(v16, v9, v10);
      uint64_t v23 = sub_256175508();
      if (v24) {
        uint64_t v25 = 0;
      }
      else {
        uint64_t v25 = v23;
      }
      *(void *)a2 = v25;
      uint64_t v26 = sub_256175528();
      uint64_t v27 = v20;
      char v29 = v28;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      BOOL v30 = (v29 & 1) == 0;
      uint64_t v20 = v27;
      if (v30) {
        uint64_t v31 = v26;
      }
      else {
        uint64_t v31 = 0;
      }
      *(void *)(a2 + 8) = v31;
      *(unsigned char *)(a2 + 17) = 0;
      uint64_t v17 = (SEL *)&unk_2653F3000;
      goto LABEL_14;
    }
    uint64_t v17 = (SEL *)&unk_2653F3000;
  }
  else
  {
    uint64_t v20 = *(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56);
    v20(v9, 1, 1, v10);
  }
  sub_256017558((uint64_t)v9, &qword_269F43608, MEMORY[0x263F063B0]);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 17) = 1;
  if (a1)
  {
LABEL_14:
    *(unsigned char *)(a2 + 16) = objc_msgSend(a1, sel_isEnabled);
    id v32 = [a1 v17[470]];
    sub_2561754F8();

    uint64_t v21 = v7;
    uint64_t v22 = 0;
    goto LABEL_15;
  }
  *(unsigned char *)(a2 + 16) = 1;
  uint64_t v21 = v7;
  uint64_t v22 = 1;
LABEL_15:
  v20(v21, v22, 1, v10);
  uint64_t v33 = type metadata accessor for CustomReminderModel();
  return sub_25601465C((uint64_t)v7, a2 + *(int *)(v33 + 32));
}

uint64_t type metadata accessor for CustomReminderModel()
{
  uint64_t result = qword_269F44BB8;
  if (!qword_269F44BB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_2560169D4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    uint64_t v5 = *(int *)(a3 + 32);
    uint64_t v6 = (void *)(a1 + v5);
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_256175568();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      sub_2560174F4(0, &qword_269F43608, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
      memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t sub_256016B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 32);
  uint64_t v3 = sub_256175568();
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(v2, v3);
  }
  return result;
}

uint64_t sub_256016C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_256175568();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_2560174F4(0, &qword_269F43608, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_256016D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (void *)(a2 + v4);
  uint64_t v7 = sub_256175568();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(v5, 1, v7);
  int v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 24))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    sub_2560174F4(0, &qword_269F43608, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
    memcpy(v5, v6, *(void *)(*(void *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v5, v6, v7);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t sub_256016F44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_256175568();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_2560174F4(0, &qword_269F43608, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_25601708C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (void *)(a2 + v4);
  uint64_t v7 = sub_256175568();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(v5, 1, v7);
  int v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    sub_2560174F4(0, &qword_269F43608, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
    memcpy(v5, v6, *(void *)(*(void *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v5, v6, v7);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t sub_256017240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256017254);
}

uint64_t sub_256017254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_2560174F4(0, &qword_269F43608, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
    int v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 32);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_256017334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256017348);
}

uint64_t sub_256017348(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 16) = a2 + 1;
  }
  else
  {
    sub_2560174F4(0, &qword_269F43608, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_25601741C()
{
  sub_2560174F4(319, &qword_269F43608, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_2560174F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_256017558(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_2560174F4(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_2560175C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CustomReminderModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25601762C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CustomReminderModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_256017688()
{
  unint64_t result = qword_269F44BC8;
  if (!qword_269F44BC8)
  {
    type metadata accessor for CustomReminderModel();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_269F44BC8);
  }
  return result;
}

uint64_t sub_2560176C4()
{
  return sub_2561763E8();
}

uint64_t type metadata accessor for ValenceSelectionPhaseSpecs()
{
  uint64_t result = qword_269F44BD0;
  if (!qword_269F44BD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_256017748(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_256176AA8();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_255FD8280();
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t sub_2560178F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_256176AA8();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t v7 = sub_256176158();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

char *sub_2560179F8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_256176AA8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_255FD8280();
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_256176158();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

char *sub_256017B58(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_256176AA8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_255FD8280();
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_256176158();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

char *sub_256017D1C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_256176AA8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_255FD8280();
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_256176158();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

char *sub_256017E7C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_256176AA8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_255FD8280();
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_256176158();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t sub_256018040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256018054);
}

uint64_t sub_256018054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_255FD8280();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_256176158();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_25601814C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256018160);
}

uint64_t sub_256018160(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_255FD8280();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_256176158();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_256018264()
{
  sub_255FD8280();
  if (v0 <= 0x3F)
  {
    sub_256176158();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

id sub_25601832C@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_256176158();
  uint64_t v16 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = (id)MobileGestalt_get_current_device();
  uint64_t v8 = result;
  if (a1)
  {
    if (result)
    {
      int homeButtonType = MobileGestalt_get_homeButtonType();

      uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 104);
      if (homeButtonType == 2) {
        uint64_t v11 = (unsigned int *)MEMORY[0x263F18CB8];
      }
      else {
        uint64_t v11 = (unsigned int *)MEMORY[0x263F18D70];
      }
      uint64_t v14 = *v11;
      return (id)v10(a2, v14, v4);
    }
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if (!result) {
    goto LABEL_14;
  }
  int v12 = MobileGestalt_get_homeButtonType();

  uint64_t v13 = (unsigned int *)MEMORY[0x263F18CD8];
  if (v12 != 2) {
    uint64_t v13 = (unsigned int *)MEMORY[0x263F18CB8];
  }
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v6, *v13, v4);
  return (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v16 + 32))(a2, v6, v4);
}

id sub_2560184DC(char a1)
{
  uint64_t v3 = type metadata accessor for ValenceSelectionPhaseSpecs();
  id result = (id)MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    id result = (id)MobileGestalt_get_current_device();
    if (result)
    {
      uint64_t v7 = result;
      int homeButtonType = MobileGestalt_get_homeButtonType();

      sub_25601879C(v1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhaseSpecs);
      if (homeButtonType == 2)
      {
        sub_256176138();
        return (id)sub_256018804((uint64_t)v6);
      }
      else
      {
        return (id)sub_256018804((uint64_t)v6);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_2560185F0(char a1)
{
  uint64_t v3 = type metadata accessor for ValenceSelectionPhaseSpecs();
  id result = (id)MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    id result = (id)MobileGestalt_get_current_device();
    if (result)
    {
      uint64_t v7 = result;
      int homeButtonType = MobileGestalt_get_homeButtonType();

      sub_25601879C(v1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhaseSpecs);
      if (homeButtonType == 2)
      {
        sub_256176138();
        return (id)sub_256018804((uint64_t)v6);
      }
      else
      {
        return (id)sub_256018804((uint64_t)v6);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_2560186F8@<X0>(uint64_t a1@<X8>)
{
  return sub_25601879C(v1, a1, (uint64_t (*)(void))sub_255FD8280);
}

uint64_t sub_25601872C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = sub_256176158();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_25601879C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_256018804(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ValenceSelectionPhaseSpecs();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_256018860(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    sub_2560E86DC(0, v1, 0);
    uint64_t v2 = v13;
    uint64_t v4 = a1 + 32;
    do
    {
      v4 += 8;
      id v5 = (id)HKUILocalizedStringForStateOfMindLabel();
      uint64_t v6 = sub_256177EE8();
      uint64_t v8 = v7;

      unint64_t v10 = *(void *)(v13 + 16);
      unint64_t v9 = *(void *)(v13 + 24);
      if (v10 >= v9 >> 1) {
        sub_2560E86DC(v9 > 1, v10 + 1, 1);
      }
      *(void *)(v13 + 16) = v10 + 1;
      uint64_t v11 = v13 + 16 * v10;
      *(void *)(v11 + 32) = v6;
      *(void *)(v11 + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

BOOL sub_256018950(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)_s5EntryVMa();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v10 = (char *)&v41 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2) {
      return 1;
    }
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v13 = *(void *)(v8 + 72);
    uint64_t v14 = v11 - 1;
    while (1)
    {
      sub_25601CB74(a1 + v12, (uint64_t)v10, (uint64_t (*)(void))_s5EntryVMa);
      sub_25601CB74(a2 + v12, (uint64_t)v7, (uint64_t (*)(void))_s5EntryVMa);
      if ((sub_256175888() & 1) == 0) {
        break;
      }
      uint64_t v15 = v4[5];
      uint64_t v16 = *(void *)&v10[v15];
      uint64_t v17 = *(void *)&v10[v15 + 8];
      id v18 = &v7[v15];
      BOOL v19 = v16 == *(void *)v18 && v17 == *((void *)v18 + 1);
      if (!v19 && (sub_256178828() & 1) == 0) {
        break;
      }
      uint64_t v20 = v4[6];
      uint64_t v21 = *(void *)&v10[v20];
      uint64_t v22 = *(void *)&v10[v20 + 8];
      uint64_t v23 = &v7[v20];
      BOOL v24 = v21 == *(void *)v23 && v22 == *((void *)v23 + 1);
      if (!v24 && (sub_256178828() & 1) == 0) {
        break;
      }
      uint64_t v25 = v4[7];
      uint64_t v26 = *(void *)&v10[v25];
      uint64_t v27 = *(void *)&v10[v25 + 8];
      char v28 = &v7[v25];
      BOOL v29 = v26 == *(void *)v28 && v27 == *((void *)v28 + 1);
      if (!v29 && (sub_256178828() & 1) == 0) {
        break;
      }
      uint64_t v30 = v4[8];
      uint64_t v31 = *(void *)&v10[v30];
      uint64_t v32 = *(void *)&v10[v30 + 8];
      uint64_t v33 = &v7[v30];
      BOOL v34 = v31 == *(void *)v33 && v32 == *((void *)v33 + 1);
      if (!v34 && (sub_256178828() & 1) == 0) {
        break;
      }
      uint64_t v35 = v4[9];
      double v36 = *(double *)&v10[v35];
      double v37 = *(double *)&v7[v35];
      sub_25601CC88((uint64_t)v7, (uint64_t (*)(void))_s5EntryVMa);
      sub_25601CC88((uint64_t)v10, (uint64_t (*)(void))_s5EntryVMa);
      BOOL v39 = v14-- != 0;
      BOOL result = v36 == v37;
      if (v36 == v37)
      {
        v12 += v13;
        if (v39) {
          continue;
        }
      }
      return result;
    }
    sub_25601CC88((uint64_t)v7, (uint64_t (*)(void))_s5EntryVMa);
    sub_25601CC88((uint64_t)v10, (uint64_t (*)(void))_s5EntryVMa);
  }
  return 0;
}

uint64_t sub_256018BEC(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (char v6 = sub_256178828(), result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a1 + 7;
    for (unint64_t i = a2 + 7; ; i += 2)
    {
      BOOL v11 = *(v9 - 1) == *(i - 1) && *v9 == *i;
      if (!v11 && (sub_256178828() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t StateOfMindTimeline.DaySummary.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = _s5EntryVMa();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25601B780();
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2561788F8();
  BOOL v11 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  sub_256177DB8();
  sub_25601CC40(&qword_269F46790, MEMORY[0x263F090E8]);
  sub_256177E18();
  swift_bridgeObjectRetain();
  sub_256177F38();
  swift_bridgeObjectRelease();
  sub_25601CB74(v1 + v11[7], (uint64_t)v10, (uint64_t (*)(void))sub_25601B780);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_256178908();
  }
  else
  {
    sub_25601CACC((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))_s5EntryVMa);
    sub_256178908();
    sub_25610622C();
    sub_25601CC88((uint64_t)v7, (uint64_t (*)(void))_s5EntryVMa);
  }
  uint64_t v12 = *(void *)(v1 + v11[8]);
  swift_bridgeObjectRetain();
  sub_25601B04C(a1, v12);
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(v2 + v11[9]);
  uint64_t result = sub_2561788F8();
  uint64_t v15 = *(void *)(v13 + 16);
  if (v15)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = v13 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_256177F38();
      swift_bridgeObjectRelease();
      v16 += 16;
      --v15;
    }
    while (v15);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t StateOfMindTimeline.DaySummary.hashValue.getter()
{
  sub_2561788E8();
  StateOfMindTimeline.DaySummary.hash(into:)((uint64_t)v1);
  return sub_256178928();
}

uint64_t sub_256018FC8()
{
  sub_2561788E8();
  StateOfMindTimeline.DaySummary.hash(into:)((uint64_t)v1);
  return sub_256178928();
}

uint64_t sub_25601900C()
{
  sub_2561788E8();
  StateOfMindTimeline.DaySummary.hash(into:)((uint64_t)v1);
  return sub_256178928();
}

uint64_t StateOfMindTimeline.DaySummary.id.getter()
{
  return sub_256177D78();
}

uint64_t sub_256019078@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_256177D78();
  *a1 = result;
  return result;
}

uint64_t sub_2560190A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, void *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v115 = a6;
  uint64_t v114 = a4;
  uint64_t v113 = a3;
  uint64_t v112 = a1;
  uint64_t v139 = sub_256175758();
  uint64_t v148 = *(void *)(v139 - 8);
  MEMORY[0x270FA5388](v139);
  uint64_t v138 = (char *)&v103 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = sub_256175708();
  uint64_t v147 = *(void *)(v137 - 8);
  MEMORY[0x270FA5388](v137);
  uint64_t v136 = (char *)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = sub_256175718();
  unint64_t v146 = *(void *)(v135 - 8);
  MEMORY[0x270FA5388](v135);
  uint64_t v134 = (char *)&v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = sub_2561757B8();
  uint64_t v145 = *(void *)(v133 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v133);
  long long v132 = (char *)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v131 = (char *)&v103 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v130 = (char *)&v103 - v17;
  uint64_t v129 = sub_256175868();
  uint64_t v144 = *(void *)(v129 - 8);
  MEMORY[0x270FA5388](v129);
  uint64_t v128 = (char *)&v103 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = _s5EntryVMa();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v141 = (char *)&v103 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25601B780();
  MEMORY[0x270FA5388](v22 - 8);
  BOOL v24 = (char *)&v103 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_256177DB8();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  char v28 = (char *)&v103 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for StateOfMindTimeline.DaySummary();
  uint64_t v30 = MEMORY[0x270FA5388](v29);
  char v108 = (uint64_t *)((char *)&v103 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v107 = (int *)v30;
  uint64_t v32 = a7 + *(int *)(v30 + 28);
  uint64_t v127 = v20;
  uint64_t v33 = *(void (**)(void))(v20 + 56);
  uint64_t v105 = v32;
  v33();
  uint64_t v106 = v26;
  BOOL v34 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  uint64_t v104 = v28;
  uint64_t v111 = a2;
  uint64_t v109 = v25;
  v34(v28, a2, v25);
  uint64_t v117 = v24;
  uint64_t v116 = a7;
  id v110 = a5;
  if (!a5)
  {
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v33)(v24, 1, 1, v19);
    goto LABEL_34;
  }
  uint64_t v140 = (int *)v19;
  id v35 = objc_msgSend(a5, sel_dailyStateOfMind);
  if (v35)
  {
    id v36 = v35;
    uint64_t v37 = (uint64_t)v117;
    sub_256106014(v36, (uint64_t)v117);
    ((void (*)(uint64_t, void, uint64_t, int *))v33)(v37, 0, 1, v140);
  }
  else
  {
    ((void (*)(char *, uint64_t, uint64_t, int *))v33)(v117, 1, 1, v140);
  }
  id v38 = objc_msgSend(a5, sel_momentaryStatesOfMind);
  sub_25601CB34();
  uint64_t v39 = sub_256178008();

  if (v39 < 0 || (v39 & 0x4000000000000000) != 0)
  {
    unint64_t v87 = swift_bridgeObjectRetain();
    uint64_t v40 = (uint64_t)sub_255FB3544(v87);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v40 = v39 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v149[0] = v40;
  uint64_t v41 = 0;
  sub_256019F00(v149);
  swift_bridgeObjectRelease();
  uint64_t v42 = v149[0];
  if (v149[0] < 0 || (v149[0] & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_256178678();
    swift_release();
    if (v43) {
      goto LABEL_12;
    }
    goto LABEL_33;
  }
  uint64_t v43 = *(void *)(v149[0] + 16);
  if (!v43)
  {
LABEL_33:
    swift_release();
LABEL_34:
    uint64_t v84 = MEMORY[0x263F8EE78];
LABEL_35:
    uint64_t v88 = v111;
    v149[0] = sub_256177D78();
    uint64_t v89 = sub_2561787E8();
    uint64_t v91 = v90;
    swift_bridgeObjectRetain();
    uint64_t v92 = v115;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v92 = sub_256095C94(0, v92[2] + 1, 1, v92);
    }
    unint64_t v94 = v92[2];
    unint64_t v93 = v92[3];
    if (v94 >= v93 >> 1) {
      uint64_t v92 = sub_256095C94((void *)(v93 > 1), v94 + 1, 1, v92);
    }
    v92[2] = v94 + 1;
    uint64_t v95 = &v92[2 * v94];
    v95[4] = v89;
    v95[5] = v91;
    swift_bridgeObjectRelease();

    uint64_t v96 = v106;
    uint64_t v97 = v109;
    (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v88, v109);
    uint64_t v98 = (uint64_t)v108;
    *char v108 = v112;
    uint64_t v99 = v107;
    (*(void (**)(uint64_t, char *, uint64_t))(v96 + 32))(v98 + v107[5], v104, v97);
    uint64_t v100 = (void *)(v98 + v99[6]);
    uint64_t v101 = v114;
    *uint64_t v100 = v113;
    v100[1] = v101;
    sub_25601CACC((uint64_t)v117, v98 + v99[7], (uint64_t (*)(void))sub_25601B780);
    *(void *)(v98 + v99[8]) = v84;
    *(void *)(v98 + v99[9]) = v92;
    sub_25601CC88(v105, (uint64_t (*)(void))sub_25601B780);
    return sub_25601CACC(v98, v116, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.DaySummary);
  }
LABEL_12:
  uint64_t v150 = MEMORY[0x263F8EE78];
  sub_2560E875C(0, v43 & ~(v43 >> 63), 0);
  if ((v43 & 0x8000000000000000) == 0)
  {
    uint64_t v44 = 0;
    unint64_t v124 = v42 & 0xC000000000000001;
    uint64_t v123 = (void (**)(char *, uint64_t))(v147 + 8);
    long long v122 = (void (**)(char *, uint64_t))(v146 + 8);
    long long v121 = (void (**)(char *, uint64_t))(v145 + 8);
    long long v120 = (void (**)(char *, uint64_t))(v148 + 8);
    uint64_t v119 = (void (**)(char *, uint64_t))(v144 + 8);
    unint64_t v118 = 0x80000002561AB4C0;
    uint64_t v126 = v42;
    uint64_t v125 = v43;
    while (1)
    {
      if (v124) {
        id v45 = (id)MEMORY[0x25A2A1000](v44, v42);
      }
      else {
        id v45 = *(id *)(v42 + 8 * v44 + 32);
      }
      uint64_t v46 = v45;
      id v47 = objc_msgSend(v45, sel_UUID);
      sub_256175898();

      id v48 = objc_msgSend(v46, sel_reflectiveInterval);
      if (v48 == (id)2)
      {
        objc_msgSend(v46, sel_valenceClassification);
        objc_msgSend(v46, sel_reflectiveInterval);
        uint64_t v49 = (void *)HKUILocalizedStringForValenceClassificationAndReflectiveInterval();
      }
      else
      {
        if (v48 != (id)1)
        {
          unint64_t v146 = 0xE000000000000000;
          uint64_t v147 = 0;
          goto LABEL_23;
        }
        objc_msgSend(v46, sel_valenceClassification);
        uint64_t v49 = (void *)HKUILocalizedStringForValenceClassification();
      }
      id v50 = v49;
      uint64_t v51 = sub_256177EE8();
      unint64_t v146 = v52;
      uint64_t v147 = v51;

LABEL_23:
      uint64_t v53 = sub_2561781D8();
      uint64_t v54 = sub_256018860(v53);
      uint64_t v148 = v41;
      swift_bridgeObjectRelease();
      v149[0] = v54;
      if (qword_269F42348 != -1) {
        swift_once();
      }
      id v55 = (id)qword_269F50C88;
      swift_bridgeObjectRetain();
      sub_2561755B8();
      swift_bridgeObjectRelease();

      sub_255FCD9E0();
      sub_25601CC40((unint64_t *)&qword_26B2AD358, (void (*)(uint64_t))sub_255FCD9E0);
      uint64_t v56 = sub_256177E28();
      uint64_t v144 = v57;
      uint64_t v145 = v56;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v58 = sub_256106624();
      uint64_t v142 = v59;
      uint64_t v143 = v58;
      id v60 = objc_msgSend(v46, sel_startDate);
      uint64_t v61 = v128;
      sub_256175818();

      uint64_t v62 = v132;
      MEMORY[0x25A29DDD0]();
      uint64_t v63 = v136;
      sub_2561756F8();
      uint64_t v64 = v134;
      sub_2561756E8();
      (*v123)(v63, v137);
      uint64_t v65 = v131;
      sub_2561756A8();
      (*v122)(v64, v135);
      uint64_t v66 = *v121;
      uint64_t v67 = v62;
      uint64_t v68 = v133;
      (*v121)(v67, v133);
      uint64_t v69 = v138;
      sub_256175748();
      uint64_t v70 = v130;
      sub_256175798();
      (*v120)(v69, v139);
      v66(v65, v68);
      sub_25601CC40(&qword_269F44BF8, MEMORY[0x263F07258]);
      sub_256175848();
      v66(v70, v68);
      (*v119)(v61, v129);
      uint64_t v71 = v149[0];
      uint64_t v72 = v149[1];
      objc_msgSend(v46, sel_valence);
      uint64_t v74 = v73;

      uint64_t v75 = v140;
      uint64_t v76 = (uint64_t)v141;
      uint64_t v77 = &v141[v140[5]];
      unint64_t v78 = v146;
      *(void *)uint64_t v77 = v147;
      *((void *)v77 + 1) = v78;
      uint64_t v79 = (uint64_t *)(v76 + v75[6]);
      uint64_t v80 = v144;
      *uint64_t v79 = v145;
      v79[1] = v80;
      uint64_t v81 = (uint64_t *)(v76 + v75[7]);
      uint64_t v82 = v142;
      *uint64_t v81 = v143;
      v81[1] = v82;
      unint64_t v83 = (uint64_t *)(v76 + v75[8]);
      *unint64_t v83 = v71;
      v83[1] = v72;
      *(void *)(v76 + v75[9]) = v74;
      uint64_t v84 = v150;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2560E875C(0, *(void *)(v84 + 16) + 1, 1);
        uint64_t v84 = v150;
      }
      unint64_t v86 = *(void *)(v84 + 16);
      unint64_t v85 = *(void *)(v84 + 24);
      uint64_t v41 = v148;
      if (v86 >= v85 >> 1)
      {
        sub_2560E875C(v85 > 1, v86 + 1, 1);
        uint64_t v84 = v150;
      }
      ++v44;
      *(void *)(v84 + 16) = v86 + 1;
      sub_25601CACC(v76, v84+ ((*(unsigned __int8 *)(v127 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v127 + 80))+ *(void *)(v127 + 72) * v86, (uint64_t (*)(void))_s5EntryVMa);
      uint64_t v42 = v126;
      if (v125 == v44)
      {
        swift_release();
        goto LABEL_35;
      }
    }
  }
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_256019F00(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_256154FCC();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_256019F7C(v6);
  return sub_2561785E8();
}

void sub_256019F7C(uint64_t *a1)
{
  uint64_t v136 = sub_256175868();
  uint64_t v2 = *(void *)(v136 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v136);
  uint64_t v135 = (char *)&v121 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v134 = (char *)&v121 - v5;
  uint64_t v6 = a1[1];
  uint64_t v7 = sub_2561787D8();
  if (v7 >= v6)
  {
    if (v6 < 0) {
      goto LABEL_134;
    }
    if (v6) {
      sub_25601A904(0, v6, 1, a1);
    }
    return;
  }
  if (v6 >= 0) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = v6 + 1;
  }
  if (v6 < -1) {
    goto LABEL_142;
  }
  uint64_t v126 = v7;
  if (v6 < 2)
  {
    uint64_t v11 = (char *)MEMORY[0x263F8EE78];
    uint64_t v139 = MEMORY[0x263F8EE78];
    uint64_t v131 = (void **)((MEMORY[0x263F8EE78] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v6 != 1)
    {
      unint64_t v14 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_100:
      uint64_t v112 = v132;
      if (v14 >= 2)
      {
        uint64_t v113 = *a1;
        do
        {
          unint64_t v114 = v14 - 2;
          if (v14 < 2) {
            goto LABEL_129;
          }
          if (!v113) {
            goto LABEL_141;
          }
          uint64_t v115 = v11;
          uint64_t v116 = v11 + 32;
          uint64_t v117 = *(void *)&v11[16 * v114 + 32];
          uint64_t v118 = *(void *)&v11[16 * v14 + 24];
          sub_25601AB3C(v113 + 8 * v117, (id *)(v113 + 8 * *(void *)&v116[16 * v14 - 16]), (id *)(v113 + 8 * v118), v131);
          if (v112) {
            break;
          }
          if (v118 < v117) {
            goto LABEL_130;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v115 = sub_256152458((uint64_t)v115);
          }
          if (v114 >= *((void *)v115 + 2)) {
            goto LABEL_131;
          }
          uint64_t v119 = &v115[16 * v114 + 32];
          *(void *)uint64_t v119 = v117;
          *((void *)v119 + 1) = v118;
          unint64_t v120 = *((void *)v115 + 2);
          if (v14 > v120) {
            goto LABEL_132;
          }
          uint64_t v11 = v115;
          memmove(&v115[16 * v14 + 16], &v115[16 * v14 + 32], 16 * (v120 - v14));
          *((void *)v115 + 2) = v120 - 1;
          unint64_t v14 = v120 - 1;
        }
        while (v120 > 2);
      }
LABEL_111:
      swift_bridgeObjectRelease();
      *(void *)((v139 & 0xFFFFFFFFFFFFFF8) + 0x1__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
      sub_256178018();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v9 = v8 >> 1;
    sub_25601CB34();
    uint64_t v10 = sub_256178048();
    *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x1__isPlatformVersionAtLeast(2, 18, 1, 0) = v9;
    uint64_t v131 = (void **)((v10 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v139 = v10;
  }
  uint64_t v12 = 0;
  uint64_t v13 = *a1;
  uint64_t v133 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v124 = v13 + 16;
  long long v122 = a1;
  uint64_t v123 = v13 - 8;
  uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v129 = v6;
  uint64_t v137 = v13;
  while (1)
  {
    uint64_t v15 = v12;
    uint64_t v16 = v12 + 1;
    uint64_t v128 = v12;
    if (v12 + 1 < v6)
    {
      uint64_t v17 = *(void **)(v13 + 8 * v12);
      id v18 = *(id *)(v13 + 8 * v16);
      id v19 = v17;
      id v20 = objc_msgSend(v18, sel_startDate);
      uint64_t v21 = v134;
      sub_256175818();

      id v22 = objc_msgSend(v19, sel_startDate);
      uint64_t v23 = v135;
      sub_256175818();

      LODWORD(v138) = sub_256175808();
      BOOL v24 = *v133;
      uint64_t v25 = v23;
      uint64_t v26 = v136;
      (*v133)(v25, v136);
      v24(v21, v26);

      uint64_t v6 = v129;
      uint64_t v16 = v15 + 2;
      if (v15 + 2 < v6)
      {
        uint64_t v125 = v11;
        uint64_t v27 = (id *)(v124 + 8 * v15);
        while (1)
        {
          char v28 = *(v27 - 1);
          id v29 = *v27;
          id v30 = v28;
          id v31 = objc_msgSend(v29, sel_startDate);
          uint64_t v32 = v134;
          sub_256175818();

          id v33 = objc_msgSend(v30, sel_startDate);
          BOOL v34 = v135;
          sub_256175818();

          LODWORD(v33) = sub_256175808();
          id v35 = v34;
          uint64_t v36 = v136;
          v24(v35, v136);
          v24(v32, v36);

          if ((v138 ^ v33)) {
            break;
          }
          ++v27;
          uint64_t v6 = v129;
          if (v129 == ++v16)
          {
            uint64_t v16 = v129;
            uint64_t v11 = v125;
            goto LABEL_22;
          }
        }
        uint64_t v11 = v125;
        uint64_t v6 = v129;
LABEL_22:
        uint64_t v15 = v128;
      }
      uint64_t v13 = v137;
      if (v138)
      {
        if (v16 < v15) {
          goto LABEL_135;
        }
        if (v15 < v16)
        {
          uint64_t v37 = (uint64_t *)(v123 + 8 * v16);
          uint64_t v38 = v16;
          uint64_t v39 = v15;
          uint64_t v40 = (uint64_t *)(v137 + 8 * v15);
          do
          {
            if (v39 != --v38)
            {
              if (!v13) {
                goto LABEL_140;
              }
              uint64_t v41 = *v40;
              *uint64_t v40 = *v37;
              uint64_t *v37 = v41;
            }
            ++v39;
            --v37;
            ++v40;
          }
          while (v39 < v38);
        }
      }
    }
    if (v16 >= v6) {
      goto LABEL_50;
    }
    if (__OFSUB__(v16, v15)) {
      goto LABEL_133;
    }
    if (v16 - v15 >= v126) {
      goto LABEL_50;
    }
    if (__OFADD__(v15, v126)) {
      goto LABEL_136;
    }
    uint64_t v42 = v15 + v126 >= v6 ? v6 : v15 + v126;
    if (v42 < v15) {
      break;
    }
    if (v16 != v42)
    {
      uint64_t v125 = v11;
      uint64_t v43 = v123 + 8 * v16;
      uint64_t v127 = v42;
      do
      {
        uint64_t v44 = *(void **)(v13 + 8 * v16);
        uint64_t v45 = v15;
        uint64_t v130 = v43;
        while (1)
        {
          uint64_t v46 = v16;
          id v47 = *(void **)v43;
          id v48 = v44;
          id v138 = v48;
          id v49 = v47;
          id v50 = objc_msgSend(v48, sel_startDate);
          uint64_t v51 = v134;
          sub_256175818();

          id v52 = objc_msgSend(v49, sel_startDate);
          uint64_t v53 = v135;
          sub_256175818();

          LOBYTE(v52) = sub_256175808();
          uint64_t v54 = *v133;
          id v55 = v53;
          uint64_t v56 = v136;
          (*v133)(v55, v136);
          v54(v51, v56);

          if ((v52 & 1) == 0) {
            break;
          }
          uint64_t v13 = v137;
          if (!v137) {
            goto LABEL_138;
          }
          uint64_t v16 = v46;
          uint64_t v57 = *(void **)v43;
          uint64_t v44 = *(void **)(v43 + 8);
          *(void *)uint64_t v43 = v44;
          *(void *)(v43 + 8) = v57;
          v43 -= 8;
          if (v46 == ++v45) {
            goto LABEL_43;
          }
        }
        uint64_t v13 = v137;
        uint64_t v16 = v46;
LABEL_43:
        ++v16;
        uint64_t v43 = v130 + 8;
        uint64_t v15 = v128;
      }
      while (v16 != v127);
      uint64_t v16 = v127;
      uint64_t v11 = v125;
    }
LABEL_50:
    if (v16 < v15) {
      goto LABEL_128;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v138 = (id)v16;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v11 = sub_2561522A0(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v60 = *((void *)v11 + 2);
    unint64_t v59 = *((void *)v11 + 3);
    unint64_t v14 = v60 + 1;
    uint64_t v13 = v137;
    if (v60 >= v59 >> 1)
    {
      uint64_t v111 = sub_2561522A0((char *)(v59 > 1), v60 + 1, 1, v11);
      uint64_t v13 = v137;
      uint64_t v11 = v111;
    }
    *((void *)v11 + 2) = v14;
    uint64_t v61 = v11 + 32;
    uint64_t v62 = &v11[16 * v60 + 32];
    id v63 = v138;
    *(void *)uint64_t v62 = v15;
    *((void *)v62 + 1) = v63;
    if (v60)
    {
      while (1)
      {
        unint64_t v64 = v14 - 1;
        if (v14 >= 4)
        {
          uint64_t v69 = &v61[16 * v14];
          uint64_t v70 = *((void *)v69 - 8);
          uint64_t v71 = *((void *)v69 - 7);
          BOOL v75 = __OFSUB__(v71, v70);
          uint64_t v72 = v71 - v70;
          if (v75) {
            goto LABEL_117;
          }
          uint64_t v74 = *((void *)v69 - 6);
          uint64_t v73 = *((void *)v69 - 5);
          BOOL v75 = __OFSUB__(v73, v74);
          uint64_t v67 = v73 - v74;
          char v68 = v75;
          if (v75) {
            goto LABEL_118;
          }
          unint64_t v76 = v14 - 2;
          uint64_t v77 = &v61[16 * v14 - 32];
          uint64_t v79 = *(void *)v77;
          uint64_t v78 = *((void *)v77 + 1);
          BOOL v75 = __OFSUB__(v78, v79);
          uint64_t v80 = v78 - v79;
          if (v75) {
            goto LABEL_120;
          }
          BOOL v75 = __OFADD__(v67, v80);
          uint64_t v81 = v67 + v80;
          if (v75) {
            goto LABEL_123;
          }
          if (v81 >= v72)
          {
            uint64_t v99 = &v61[16 * v64];
            uint64_t v101 = *(void *)v99;
            uint64_t v100 = *((void *)v99 + 1);
            BOOL v75 = __OFSUB__(v100, v101);
            uint64_t v102 = v100 - v101;
            if (v75) {
              goto LABEL_127;
            }
            BOOL v92 = v67 < v102;
            goto LABEL_87;
          }
        }
        else
        {
          if (v14 != 3)
          {
            uint64_t v93 = *((void *)v11 + 4);
            uint64_t v94 = *((void *)v11 + 5);
            BOOL v75 = __OFSUB__(v94, v93);
            uint64_t v86 = v94 - v93;
            char v87 = v75;
            goto LABEL_81;
          }
          uint64_t v66 = *((void *)v11 + 4);
          uint64_t v65 = *((void *)v11 + 5);
          BOOL v75 = __OFSUB__(v65, v66);
          uint64_t v67 = v65 - v66;
          char v68 = v75;
        }
        if (v68) {
          goto LABEL_119;
        }
        unint64_t v76 = v14 - 2;
        uint64_t v82 = &v61[16 * v14 - 32];
        uint64_t v84 = *(void *)v82;
        uint64_t v83 = *((void *)v82 + 1);
        BOOL v85 = __OFSUB__(v83, v84);
        uint64_t v86 = v83 - v84;
        char v87 = v85;
        if (v85) {
          goto LABEL_122;
        }
        uint64_t v88 = &v61[16 * v64];
        uint64_t v90 = *(void *)v88;
        uint64_t v89 = *((void *)v88 + 1);
        BOOL v75 = __OFSUB__(v89, v90);
        uint64_t v91 = v89 - v90;
        if (v75) {
          goto LABEL_125;
        }
        if (__OFADD__(v86, v91)) {
          goto LABEL_126;
        }
        if (v86 + v91 >= v67)
        {
          BOOL v92 = v67 < v91;
LABEL_87:
          if (v92) {
            unint64_t v64 = v76;
          }
          goto LABEL_89;
        }
LABEL_81:
        if (v87) {
          goto LABEL_121;
        }
        uint64_t v95 = &v61[16 * v64];
        uint64_t v97 = *(void *)v95;
        uint64_t v96 = *((void *)v95 + 1);
        BOOL v75 = __OFSUB__(v96, v97);
        uint64_t v98 = v96 - v97;
        if (v75) {
          goto LABEL_124;
        }
        if (v98 < v86) {
          goto LABEL_14;
        }
LABEL_89:
        unint64_t v103 = v64 - 1;
        if (v64 - 1 >= v14)
        {
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
          goto LABEL_137;
        }
        if (!v13) {
          goto LABEL_139;
        }
        uint64_t v104 = v11;
        uint64_t v105 = &v61[16 * v103];
        uint64_t v106 = *(void *)v105;
        uint64_t v107 = &v61[16 * v64];
        uint64_t v108 = *((void *)v107 + 1);
        uint64_t v109 = v132;
        sub_25601AB3C(v13 + 8 * *(void *)v105, (id *)(v13 + 8 * *(void *)v107), (id *)(v13 + 8 * v108), v131);
        uint64_t v132 = v109;
        if (v109) {
          goto LABEL_111;
        }
        if (v108 < v106) {
          goto LABEL_114;
        }
        if (v64 > *((void *)v104 + 2)) {
          goto LABEL_115;
        }
        *(void *)uint64_t v105 = v106;
        *(void *)&v61[16 * v103 + 8] = v108;
        unint64_t v110 = *((void *)v104 + 2);
        if (v64 >= v110) {
          goto LABEL_116;
        }
        uint64_t v11 = v104;
        unint64_t v14 = v110 - 1;
        memmove(&v61[16 * v64], v107 + 16, 16 * (v110 - 1 - v64));
        *((void *)v104 + 2) = v110 - 1;
        uint64_t v13 = v137;
        if (v110 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v14 = 1;
LABEL_14:
    uint64_t v6 = v129;
    uint64_t v12 = (uint64_t)v138;
    if ((uint64_t)v138 >= v129)
    {
      a1 = v122;
      goto LABEL_100;
    }
  }
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  sub_256178648();
  __break(1u);
}

void sub_25601A904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v30 = a1;
  uint64_t v35 = sub_256175868();
  uint64_t v7 = MEMORY[0x270FA5388](v35);
  BOOL v34 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  id v33 = (char *)&v28 - v10;
  uint64_t v29 = a2;
  if (a3 != a2)
  {
    uint64_t v11 = *a4;
    uint64_t v32 = v9 + 8;
    uint64_t v36 = v11;
    uint64_t v12 = v11 + 8 * a3 - 8;
    uint64_t v13 = (void (**)(char *, uint64_t))(v9 + 8);
LABEL_5:
    unint64_t v14 = *(void **)(v36 + 8 * a3);
    uint64_t v15 = v30;
    uint64_t v31 = v12;
    while (1)
    {
      uint64_t v16 = *(void **)v12;
      id v17 = v14;
      id v37 = v17;
      id v18 = v16;
      id v19 = objc_msgSend(v17, sel_startDate);
      id v20 = v33;
      sub_256175818();

      id v21 = objc_msgSend(v18, sel_startDate);
      id v22 = v34;
      sub_256175818();

      LOBYTE(v21) = sub_256175808();
      uint64_t v23 = a3;
      BOOL v24 = *v13;
      uint64_t v25 = v22;
      uint64_t v26 = v35;
      (*v13)(v25, v35);
      v24(v20, v26);
      a3 = v23;

      if ((v21 & 1) == 0)
      {
LABEL_4:
        a3 = v23 + 1;
        uint64_t v12 = v31 + 8;
        if (v23 + 1 == v29) {
          return;
        }
        goto LABEL_5;
      }
      if (!v36) {
        break;
      }
      uint64_t v27 = *(void **)v12;
      unint64_t v14 = *(void **)(v12 + 8);
      *(void *)uint64_t v12 = v14;
      *(void *)(v12 + 8) = v27;
      v12 -= 8;
      if (v23 == ++v15) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_25601AB3C(uint64_t a1, id *a2, id *a3, void **a4)
{
  uint64_t v57 = sub_256175868();
  uint64_t v8 = *(void *)(v57 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v57);
  uint64_t v56 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v54 = a3;
  id v55 = (char *)&v48 - v12;
  uint64_t v13 = (uint64_t)a2 - a1;
  uint64_t v14 = v13 / 8;
  uint64_t v15 = a2;
  uint64_t v16 = (char *)a3 - (char *)a2;
  uint64_t v17 = v16 / 8;
  uint64_t v61 = v11;
  unint64_t v60 = a4;
  uint64_t v58 = v11;
  if (v13 / 8 >= v16 / 8)
  {
    if (v16 < -7) {
      goto LABEL_41;
    }
    if (a4 != v15 || &v15[v17] <= a4)
    {
      memmove(a4, v15, 8 * v17);
      uint64_t v11 = v58;
    }
    uint64_t v31 = &a4[v17];
    unint64_t v59 = v31;
    uint64_t v61 = v15;
    if (v16 < 8 || v11 >= v15) {
      goto LABEL_40;
    }
    id v49 = (void (**)(char *, uint64_t))(v8 + 8);
    id v50 = a4;
    uint64_t v32 = v54 - 1;
    id v33 = v15;
    while (1)
    {
      uint64_t v54 = v15;
      id v52 = v31;
      uint64_t v53 = v32 + 1;
      uint64_t v35 = v31 - 1;
      uint64_t v36 = *--v33;
      id v37 = *(v31 - 1);
      id v51 = v37;
      id v38 = v36;
      id v39 = objc_msgSend(v37, sel_startDate);
      uint64_t v40 = v55;
      sub_256175818();

      id v41 = objc_msgSend(v38, sel_startDate);
      uint64_t v42 = v56;
      sub_256175818();

      LOBYTE(v41) = sub_256175808();
      uint64_t v43 = *v49;
      uint64_t v44 = v42;
      uint64_t v45 = v57;
      (*v49)(v44, v57);
      v43(v40, v45);

      if (v41) {
        break;
      }
      unint64_t v59 = v35;
      if (v53 < v52 || v32 >= v52)
      {
        id *v32 = *v35;
        id v33 = v54;
        uint64_t v31 = v35;
        goto LABEL_28;
      }
      unint64_t v46 = (unint64_t)v50;
      BOOL v34 = v58;
      id v33 = v54;
      if (v53 != v52) {
        id *v32 = *v35;
      }
      uint64_t v31 = v35;
      if ((unint64_t)v35 <= v46) {
        goto LABEL_40;
      }
LABEL_29:
      --v32;
      uint64_t v15 = v33;
      if (v33 <= v34) {
        goto LABEL_40;
      }
    }
    uint64_t v31 = v52;
    if (v53 != v54 || v32 >= v54) {
      id *v32 = *v33;
    }
    uint64_t v61 = v33;
LABEL_28:
    BOOL v34 = v58;
    if (v31 <= v50) {
      goto LABEL_40;
    }
    goto LABEL_29;
  }
  if (v13 >= -7)
  {
    if (a4 != v11 || &v11[v14] <= a4)
    {
      memmove(a4, v58, 8 * v14);
      uint64_t v11 = v58;
    }
    uint64_t v53 = &a4[v14];
    unint64_t v59 = v53;
    if (v13 >= 8 && v15 < v54)
    {
      id v52 = (void **)(v8 + 8);
      id v18 = v55;
      do
      {
        uint64_t v58 = v11;
        id v19 = *a4;
        id v20 = *v15;
        id v21 = v19;
        id v22 = a4;
        id v23 = objc_msgSend(v20, sel_startDate);
        sub_256175818();

        id v24 = objc_msgSend(v21, sel_startDate);
        uint64_t v25 = v56;
        sub_256175818();

        LOBYTE(v24) = sub_256175808();
        uint64_t v26 = (void (*)(char *, uint64_t))*v52;
        uint64_t v27 = v25;
        uint64_t v28 = v57;
        ((void (*)(char *, uint64_t))*v52)(v27, v57);
        v26(v18, v28);

        if (v24)
        {
          a4 = v22;
          unint64_t v29 = (unint64_t)(v15 + 1);
          uint64_t v30 = v58;
          if (v58 < v15 || (unint64_t)v58 >= v29 || v58 != v15) {
            id *v58 = *v15;
          }
        }
        else
        {
          uint64_t v30 = v58;
          if (v58 != v22) {
            id *v58 = *v22;
          }
          a4 = v22 + 1;
          unint64_t v60 = v22 + 1;
          unint64_t v29 = (unint64_t)v15;
        }
        uint64_t v11 = v30 + 1;
        uint64_t v61 = v11;
        if (a4 >= v53) {
          break;
        }
        uint64_t v15 = (id *)v29;
      }
      while (v29 < (unint64_t)v54);
    }
LABEL_40:
    sub_256152398(&v61, &v60, &v59);
    return 1;
  }
LABEL_41:
  uint64_t result = sub_2561786C8();
  __break(1u);
  return result;
}

uint64_t sub_25601B04C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = _s5EntryVMa();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t result = sub_2561788F8();
  if (v7)
  {
    uint64_t v9 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v10 = *(void *)(v4 + 72);
    do
    {
      sub_25601CB74(v9, (uint64_t)v6, (uint64_t (*)(void))_s5EntryVMa);
      sub_2561758A8();
      sub_25601CC40(&qword_269F44C00, MEMORY[0x263F07508]);
      sub_256177E18();
      swift_bridgeObjectRetain();
      sub_256177F38();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_256177F38();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_256177F38();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_256177F38();
      swift_bridgeObjectRelease();
      sub_256178918();
      uint64_t result = sub_25601CC88((uint64_t)v6, (uint64_t (*)(void))_s5EntryVMa);
      v9 += v10;
      --v7;
    }
    while (v7);
  }
  return result;
}

uint64_t _s14MentalHealthUI19StateOfMindTimelineO10DaySummaryV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = _s5EntryVMa();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25601CBDC();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25601B780();
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v38 - v15;
  MEMORY[0x270FA5388](v14);
  id v19 = (char *)&v38 - v18;
  if (*a1 != *a2) {
    goto LABEL_3;
  }
  id v41 = v7;
  uint64_t v42 = v17;
  uint64_t v43 = v5;
  uint64_t v44 = v11;
  uint64_t v20 = type metadata accessor for StateOfMindTimeline.DaySummary();
  sub_256177DB8();
  sub_25601CC40((unint64_t *)&unk_269F467B0, MEMORY[0x263F090E8]);
  sub_256178488();
  if (v45) {
    goto LABEL_3;
  }
  uint64_t v23 = *(int *)(v20 + 24);
  uint64_t v24 = *(void *)((char *)a1 + v23);
  uint64_t v25 = *(void *)((char *)a1 + v23 + 8);
  uint64_t v26 = (void *)((char *)a2 + v23);
  uint64_t v27 = a2;
  if (v24 == *v26 && v25 == v26[1] || (char v28 = sub_256178828(), v21 = 0, (v28 & 1) != 0))
  {
    uint64_t v29 = *(int *)(v20 + 28);
    uint64_t v40 = a1;
    sub_25601CB74((uint64_t)a1 + v29, (uint64_t)v19, (uint64_t (*)(void))sub_25601B780);
    uint64_t v39 = v20;
    sub_25601CB74((uint64_t)a2 + *(int *)(v20 + 28), (uint64_t)v16, (uint64_t (*)(void))sub_25601B780);
    uint64_t v30 = (uint64_t)v44;
    uint64_t v31 = (uint64_t)&v44[*(int *)(v9 + 48)];
    sub_25601CB74((uint64_t)v19, (uint64_t)v44, (uint64_t (*)(void))sub_25601B780);
    sub_25601CB74((uint64_t)v16, v31, (uint64_t (*)(void))sub_25601B780);
    uint64_t v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48);
    if (v32(v30, 1, v4) == 1)
    {
      sub_25601CC88((uint64_t)v16, (uint64_t (*)(void))sub_25601B780);
      sub_25601CC88((uint64_t)v19, (uint64_t (*)(void))sub_25601B780);
      if (v32(v31, 1, v4) == 1)
      {
        sub_25601CC88(v30, (uint64_t (*)(void))sub_25601B780);
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v33 = v42;
      sub_25601CB74(v30, v42, (uint64_t (*)(void))sub_25601B780);
      if (v32(v31, 1, v4) != 1)
      {
        uint64_t v34 = (uint64_t)v41;
        sub_25601CACC(v31, (uint64_t)v41, (uint64_t (*)(void))_s5EntryVMa);
        BOOL v35 = sub_256106E8C(v33, v34);
        sub_25601CC88(v34, (uint64_t (*)(void))_s5EntryVMa);
        sub_25601CC88((uint64_t)v16, (uint64_t (*)(void))sub_25601B780);
        sub_25601CC88((uint64_t)v19, (uint64_t (*)(void))sub_25601B780);
        sub_25601CC88(v33, (uint64_t (*)(void))_s5EntryVMa);
        sub_25601CC88(v30, (uint64_t (*)(void))sub_25601B780);
        if (v35)
        {
LABEL_15:
          uint64_t v37 = v39;
          uint64_t v36 = v40;
          if (sub_256018950(*(void *)((char *)v40 + *(int *)(v39 + 32)), *(void *)((char *)v27 + *(int *)(v39 + 32))))
          {
            char v21 = sub_256018BEC(*(void **)((char *)v36 + *(int *)(v37 + 36)), *(void **)((char *)v27 + *(int *)(v37 + 36)));
            return v21 & 1;
          }
        }
LABEL_3:
        char v21 = 0;
        return v21 & 1;
      }
      sub_25601CC88((uint64_t)v16, (uint64_t (*)(void))sub_25601B780);
      sub_25601CC88((uint64_t)v19, (uint64_t (*)(void))sub_25601B780);
      sub_25601CC88(v33, (uint64_t (*)(void))_s5EntryVMa);
    }
    sub_25601CC88(v30, (uint64_t (*)(void))sub_25601CBDC);
    goto LABEL_3;
  }
  return v21 & 1;
}

void sub_25601B780()
{
  if (!qword_269F43410)
  {
    _s5EntryVMa();
    unint64_t v0 = sub_256178448();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43410);
    }
  }
}

uint64_t type metadata accessor for StateOfMindTimeline.DaySummary()
{
  uint64_t result = qword_269F44BE8;
  if (!qword_269F44BE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25601B824()
{
  return sub_25601CC40(&qword_269F44BE0, (void (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary);
}

uint64_t sub_25601B86C()
{
  return MEMORY[0x263F8D6D8];
}

uint64_t *_s10DaySummaryVwCP(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_256177DB8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[6];
    uint64_t v12 = a3[7];
    uint64_t v13 = (uint64_t *)((char *)v4 + v11);
    uint64_t v14 = (uint64_t *)((char *)a2 + v11);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = (char *)v4 + v12;
    uint64_t v17 = (char *)a2 + v12;
    uint64_t v18 = (int *)_s5EntryVMa();
    uint64_t v19 = *((void *)v18 - 1);
    uint64_t v20 = *(unsigned int (**)(char *, uint64_t, int *))(v19 + 48);
    swift_bridgeObjectRetain();
    if (v20(v17, 1, v18))
    {
      sub_25601B780();
      memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      uint64_t v23 = sub_2561758A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v16, v17, v23);
      uint64_t v24 = v18[5];
      uint64_t v25 = &v16[v24];
      uint64_t v26 = &v17[v24];
      uint64_t v27 = *((void *)v26 + 1);
      *(void *)uint64_t v25 = *(void *)v26;
      *((void *)v25 + 1) = v27;
      uint64_t v28 = v18[6];
      uint64_t v29 = &v16[v28];
      uint64_t v30 = &v17[v28];
      uint64_t v31 = *((void *)v30 + 1);
      *(void *)uint64_t v29 = *(void *)v30;
      *((void *)v29 + 1) = v31;
      uint64_t v32 = v18[7];
      uint64_t v33 = &v16[v32];
      uint64_t v34 = &v17[v32];
      uint64_t v35 = *((void *)v34 + 1);
      *(void *)uint64_t v33 = *(void *)v34;
      *((void *)v33 + 1) = v35;
      uint64_t v36 = v18[8];
      uint64_t v37 = &v16[v36];
      uint64_t v38 = &v17[v36];
      uint64_t v39 = *((void *)v38 + 1);
      *(void *)uint64_t v37 = *(void *)v38;
      *((void *)v37 + 1) = v39;
      *(void *)&v16[v18[9]] = *(void *)&v17[v18[9]];
      uint64_t v40 = *(void (**)(char *, void, uint64_t, int *))(v19 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v40(v16, 0, 1, v18);
    }
    uint64_t v41 = a3[9];
    *(uint64_t *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    *(uint64_t *)((char *)v4 + v41) = *(uint64_t *)((char *)a2 + v41);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t _s10DaySummaryVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_256177DB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = _s5EntryVMa();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    uint64_t v8 = sub_2561758A8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s10DaySummaryVwcp(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_256177DB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)((char *)a1 + v10);
  uint64_t v13 = (void *)((char *)a2 + v10);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = (char *)a1 + v11;
  uint64_t v16 = (char *)a2 + v11;
  uint64_t v17 = (int *)_s5EntryVMa();
  uint64_t v18 = *((void *)v17 - 1);
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, int *))(v18 + 48);
  swift_bridgeObjectRetain();
  if (v19(v16, 1, v17))
  {
    sub_25601B780();
    memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    uint64_t v21 = sub_2561758A8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v15, v16, v21);
    uint64_t v22 = v17[5];
    uint64_t v23 = &v15[v22];
    uint64_t v24 = &v16[v22];
    uint64_t v25 = *((void *)v24 + 1);
    *(void *)uint64_t v23 = *(void *)v24;
    *((void *)v23 + 1) = v25;
    uint64_t v26 = v17[6];
    uint64_t v27 = &v15[v26];
    uint64_t v28 = &v16[v26];
    uint64_t v29 = *((void *)v28 + 1);
    *(void *)uint64_t v27 = *(void *)v28;
    *((void *)v27 + 1) = v29;
    uint64_t v30 = v17[7];
    uint64_t v31 = &v15[v30];
    uint64_t v32 = &v16[v30];
    uint64_t v33 = *((void *)v32 + 1);
    *(void *)uint64_t v31 = *(void *)v32;
    *((void *)v31 + 1) = v33;
    uint64_t v34 = v17[8];
    uint64_t v35 = &v15[v34];
    uint64_t v36 = &v16[v34];
    uint64_t v37 = *((void *)v36 + 1);
    *(void *)uint64_t v35 = *(void *)v36;
    *((void *)v35 + 1) = v37;
    *(void *)&v15[v17[9]] = *(void *)&v16[v17[9]];
    uint64_t v38 = *(void (**)(char *, void, uint64_t, int *))(v18 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v38(v15, 0, 1, v17);
  }
  uint64_t v39 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v39) = *(void *)((char *)a2 + v39);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s10DaySummaryVwca(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_256177DB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = (int *)_s5EntryVMa();
  uint64_t v17 = *((void *)v16 - 1);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, int *))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      uint64_t v37 = sub_2561758A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 24))(v14, v15, v37);
      uint64_t v38 = v16[5];
      uint64_t v39 = &v14[v38];
      uint64_t v40 = &v15[v38];
      *(void *)uint64_t v39 = *(void *)v40;
      *((void *)v39 + 1) = *((void *)v40 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v41 = v16[6];
      uint64_t v42 = &v14[v41];
      uint64_t v43 = &v15[v41];
      *(void *)uint64_t v42 = *(void *)v43;
      *((void *)v42 + 1) = *((void *)v43 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v44 = v16[7];
      uint64_t v45 = &v14[v44];
      unint64_t v46 = &v15[v44];
      *(void *)uint64_t v45 = *(void *)v46;
      *((void *)v45 + 1) = *((void *)v46 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v47 = v16[8];
      uint64_t v48 = &v14[v47];
      id v49 = &v15[v47];
      *(void *)uint64_t v48 = *(void *)v49;
      *((void *)v48 + 1) = *((void *)v49 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v14[v16[9]] = *(void *)&v15[v16[9]];
      goto LABEL_7;
    }
    sub_25601CC88((uint64_t)v14, (uint64_t (*)(void))_s5EntryVMa);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    sub_25601B780();
    memcpy(v14, v15, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v21 = sub_2561758A8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v14, v15, v21);
  uint64_t v22 = v16[5];
  uint64_t v23 = &v14[v22];
  uint64_t v24 = &v15[v22];
  *(void *)uint64_t v23 = *(void *)v24;
  *((void *)v23 + 1) = *((void *)v24 + 1);
  uint64_t v25 = v16[6];
  uint64_t v26 = &v14[v25];
  uint64_t v27 = &v15[v25];
  *(void *)uint64_t v26 = *(void *)v27;
  *((void *)v26 + 1) = *((void *)v27 + 1);
  uint64_t v28 = v16[7];
  uint64_t v29 = &v14[v28];
  uint64_t v30 = &v15[v28];
  *(void *)uint64_t v29 = *(void *)v30;
  *((void *)v29 + 1) = *((void *)v30 + 1);
  uint64_t v31 = v16[8];
  uint64_t v32 = &v14[v31];
  uint64_t v33 = &v15[v31];
  *(void *)uint64_t v32 = *(void *)v33;
  *((void *)v32 + 1) = *((void *)v33 + 1);
  *(void *)&v14[v16[9]] = *(void *)&v15[v16[9]];
  uint64_t v34 = *(void (**)(char *, void, uint64_t, int *))(v17 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v34(v14, 0, 1, v16);
LABEL_7:
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s10DaySummaryVwtk(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_256177DB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = (int *)_s5EntryVMa();
  uint64_t v14 = *((void *)v13 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
  {
    sub_25601B780();
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    uint64_t v16 = sub_2561758A8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v11, v12, v16);
    *(_OWORD *)&v11[v13[5]] = *(_OWORD *)&v12[v13[5]];
    *(_OWORD *)&v11[v13[6]] = *(_OWORD *)&v12[v13[6]];
    *(_OWORD *)&v11[v13[7]] = *(_OWORD *)&v12[v13[7]];
    *(_OWORD *)&v11[v13[8]] = *(_OWORD *)&v12[v13[8]];
    *(void *)&v11[v13[9]] = *(void *)&v12[v13[9]];
    (*(void (**)(char *, void, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v17 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
  return a1;
}

void *_s10DaySummaryVwta(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_256177DB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  *uint64_t v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = (int *)_s5EntryVMa();
  uint64_t v19 = *((void *)v18 - 1);
  int v20 = *(uint64_t (**)(char *, uint64_t, int *))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      uint64_t v26 = sub_2561758A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 40))(v16, v17, v26);
      uint64_t v27 = v18[5];
      uint64_t v28 = &v16[v27];
      uint64_t v29 = &v17[v27];
      uint64_t v31 = *(void *)v29;
      uint64_t v30 = *((void *)v29 + 1);
      *(void *)uint64_t v28 = v31;
      *((void *)v28 + 1) = v30;
      swift_bridgeObjectRelease();
      uint64_t v32 = v18[6];
      uint64_t v33 = &v16[v32];
      uint64_t v34 = &v17[v32];
      uint64_t v36 = *(void *)v34;
      uint64_t v35 = *((void *)v34 + 1);
      *(void *)uint64_t v33 = v36;
      *((void *)v33 + 1) = v35;
      swift_bridgeObjectRelease();
      uint64_t v37 = v18[7];
      uint64_t v38 = &v16[v37];
      uint64_t v39 = &v17[v37];
      uint64_t v41 = *(void *)v39;
      uint64_t v40 = *((void *)v39 + 1);
      *(void *)uint64_t v38 = v41;
      *((void *)v38 + 1) = v40;
      swift_bridgeObjectRelease();
      uint64_t v42 = v18[8];
      uint64_t v43 = &v16[v42];
      uint64_t v44 = &v17[v42];
      uint64_t v46 = *(void *)v44;
      uint64_t v45 = *((void *)v44 + 1);
      *(void *)uint64_t v43 = v46;
      *((void *)v43 + 1) = v45;
      swift_bridgeObjectRelease();
      *(void *)&v16[v18[9]] = *(void *)&v17[v18[9]];
      goto LABEL_7;
    }
    sub_25601CC88((uint64_t)v16, (uint64_t (*)(void))_s5EntryVMa);
    goto LABEL_6;
  }
  if (v22)
  {
LABEL_6:
    sub_25601B780();
    memcpy(v16, v17, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v23 = sub_2561758A8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v16, v17, v23);
  *(_OWORD *)&v16[v18[5]] = *(_OWORD *)&v17[v18[5]];
  *(_OWORD *)&v16[v18[6]] = *(_OWORD *)&v17[v18[6]];
  *(_OWORD *)&v16[v18[7]] = *(_OWORD *)&v17[v18[7]];
  *(_OWORD *)&v16[v18[8]] = *(_OWORD *)&v17[v18[8]];
  *(void *)&v16[v18[9]] = *(void *)&v17[v18[9]];
  (*(void (**)(char *, void, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
LABEL_7:
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s10DaySummaryVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25601C760);
}

uint64_t sub_25601C760(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_256177DB8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + a3[5];
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v12 = *(void *)(a1 + a3[6] + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
  else
  {
    sub_25601B780();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a3[7];
    return v14(v16, a2, v15);
  }
}

uint64_t _s10DaySummaryVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25601C8A8);
}

uint64_t sub_25601C8A8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_256177DB8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + a4[5];
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[6] + 8) = (a2 - 1);
  }
  else
  {
    sub_25601B780();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a4[7];
    return v14(v16, a2, a2, v15);
  }
  return result;
}

void sub_25601C9DC()
{
  sub_256177DB8();
  if (v0 <= 0x3F)
  {
    sub_25601B780();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_25601CACC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_25601CB34()
{
  unint64_t result = qword_269F47780;
  if (!qword_269F47780)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269F47780);
  }
  return result;
}

uint64_t sub_25601CB74(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_25601CBDC()
{
  if (!qword_269F44C08)
  {
    sub_25601B780();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F44C08);
    }
  }
}

uint64_t sub_25601CC40(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25601CC88(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id static CAGradientLayer.gradientLayerForValence(_:style:)(double a1)
{
  sub_25601DC60(0, &qword_269F44C10, MEMORY[0x263F18520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = &v43[-v3];
  uint64_t v5 = sub_256175D98();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v43[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v48 = &v43[-v11];
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  id v49 = &v43[-v13];
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = &v43[-v15];
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = &v43[-v18];
  MEMORY[0x270FA5388](v17);
  int v21 = &v43[-v20];
  id v50 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F157D0]), sel_init);
  sub_256175DA8();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v21, *MEMORY[0x263F18508], v5);
    sub_25601D92C((uint64_t)v4);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32))(v21, v4, v5);
  }
  sub_25601D9B8();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2561A3730;
  int v22 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 16);
  uint64_t v47 = v22;
  v22(v19, v21, v5);
  v22(v16, v19, v5);
  double v23 = fmax(fmin(a1, 1.0), -1.0);
  unsigned int v44 = *MEMORY[0x263F184F8];
  uint64_t v24 = *(void (**)(void))(v6 + 104);
  uint64_t v45 = v6 + 104;
  uint64_t v46 = (void (*)(unsigned char *, void, uint64_t))v24;
  v24(v9);
  sub_256175D88();
  uint64_t v25 = *(void (**)(unsigned char *, uint64_t))(v6 + 8);
  v25(v9, v5);
  swift_getKeyPath();
  id v51 = v21;
  sub_25601DB3C();
  sub_2560AAD50(v23);
  uint64_t v26 = v9;
  uint64_t v28 = v27;
  swift_release();
  MEMORY[0x25A29FE60](v28);
  v25(v16, v5);
  uint64_t v29 = (void *)sub_256178428();
  v25(v19, v5);
  id v30 = objc_msgSend(v29, sel_CGColor);

  uint64_t v31 = v51;
  *(void *)(inited + 32) = v30;
  uint64_t v32 = v49;
  uint64_t v33 = v47;
  v47(v49, v31, v5);
  uint64_t v34 = v48;
  v33(v48, v32, v5);
  v46(v26, v44, v5);
  sub_256175D88();
  v25(v26, v5);
  swift_getKeyPath();
  sub_2560AAD50(v23);
  uint64_t v36 = v35;
  swift_release();
  MEMORY[0x25A29FE60](v36);
  v25(v34, v5);
  uint64_t v37 = (void *)sub_256178428();
  v25(v32, v5);
  id v38 = objc_msgSend(v37, sel_CGColor);

  unint64_t v39 = inited;
  *(void *)(inited + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v38;
  unint64_t v53 = v39;
  sub_256178018();
  sub_25601D278(v53);
  swift_bridgeObjectRelease();
  uint64_t v40 = (void *)sub_256177FF8();
  swift_bridgeObjectRelease();
  id v41 = v50;
  objc_msgSend(v50, sel_setColors_, v40);

  v25(v51, v5);
  return v41;
}

uint64_t sub_25601D278(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_256178678();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (!v2) {
    return v3;
  }
  uint64_t v13 = MEMORY[0x263F8EE78];
  uint64_t result = sub_2560E877C(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        MEMORY[0x25A2A1000](i, a1);
        type metadata accessor for CGColor(0);
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2560E877C(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v7 = *(void *)(v3 + 16);
        unint64_t v6 = *(void *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_2560E877C(v6 > 1, v7 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v7 + 1;
        sub_25601DCC4(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      uint64_t v8 = (id *)(a1 + 32);
      type metadata accessor for CGColor(0);
      do
      {
        id v9 = *v8;
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2560E877C(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v11 = *(void *)(v3 + 16);
        unint64_t v10 = *(void *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_2560E877C(v10 > 1, v11 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v11 + 1;
        sub_25601DCC4(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_25601D4AC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_2560E877C(0, v1, 0);
    uint64_t v4 = (void **)(a1 + 32);
    sub_25601DC2C(0);
    do
    {
      uint64_t v5 = *v4++;
      id v6 = v5;
      swift_dynamicCast();
      uint64_t v2 = v11;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2560E877C(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v11;
      }
      unint64_t v8 = *(void *)(v2 + 16);
      unint64_t v7 = *(void *)(v2 + 24);
      if (v8 >= v7 >> 1)
      {
        sub_2560E877C(v7 > 1, v8 + 1, 1);
        uint64_t v2 = v11;
      }
      *(void *)(v2 + 16) = v8 + 1;
      sub_25601DCC4(&v10, (_OWORD *)(v2 + 32 * v8 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

id static CAGradientLayer.gradientLayerForValenceClassification(_:style:)(uint64_t a1)
{
  sub_25601DC60(0, &qword_269F44C10, MEMORY[0x263F18520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v19 - v3;
  uint64_t v5 = sub_256175D98();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  id v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v19 - v10;
  id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F157D0]), sel_init);
  sub_256175DA8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v11, *MEMORY[0x263F18508], v5);
    sub_25601D92C((uint64_t)v4);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
  }
  sub_25601DC60(0, &qword_269F44C20, (uint64_t (*)(uint64_t))sub_25601DC2C, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2561A0040;
  LOBYTE(v2__isPlatformVersionAtLeast(2, 18, 1, 0) = 1;
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v13(v9, v11, v5);
  Color.init(valenceClassification:variant:colorScheme:)(a1, (unsigned __int8 *)&v20, (uint64_t)v9);
  uint64_t v14 = sub_2561773E8();
  swift_release();
  *(void *)(inited + 32) = v14;
  LOBYTE(v2__isPlatformVersionAtLeast(2, 18, 1, 0) = 0;
  v13(v9, v11, v5);
  Color.init(valenceClassification:variant:colorScheme:)(a1, (unsigned __int8 *)&v20, (uint64_t)v9);
  uint64_t v15 = sub_2561773E8();
  swift_release();
  *(void *)(inited + 4__isPlatformVersionAtLeast(2, 18, 1, 0) = v15;
  uint64_t v20 = inited;
  sub_256178018();
  sub_25601D4AC(v20);
  swift_bridgeObjectRelease();
  uint64_t v16 = (void *)sub_256177FF8();
  swift_bridgeObjectRelease();
  id v17 = v19;
  objc_msgSend(v19, sel_setColors_, v16);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  return v17;
}

uint64_t sub_25601D92C(uint64_t a1)
{
  sub_25601DC60(0, &qword_269F44C10, MEMORY[0x263F18520], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_25601D9B8()
{
  if (!qword_269F43AB0)
  {
    unint64_t v0 = sub_2561787F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43AB0);
    }
  }
}

CGColorRef sub_25601DA14@<X0>(CGColorRef *a1@<X8>)
{
  CGColorRef result = CGColorCreateGenericRGB(0.0, 0.0, 0.0, 1.0);
  *a1 = result;
  return result;
}

CGColorRef sub_25601DA4C@<X0>(CGColorRef *a1@<X8>)
{
  CGColorRef result = sub_2560A92A0();
  *a1 = result;
  return result;
}

uint64_t sub_25601DA88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2560A94F0();
  *a1 = result;
  return result;
}

CGColorRef sub_25601DAC4@<X0>(CGColorRef *a1@<X8>)
{
  CGColorRef result = sub_2560A93B8();
  *a1 = result;
  return result;
}

CGColorRef sub_25601DB00@<X0>(CGColorRef *a1@<X8>)
{
  CGColorRef result = sub_2560A93B8();
  *a1 = result;
  return result;
}

unint64_t sub_25601DB3C()
{
  unint64_t result = qword_269F44C18;
  if (!qword_269F44C18)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269F44C18);
  }
  return result;
}

CGColorRef sub_25601DB7C@<X0>(CGColorRef *a1@<X8>)
{
  CGColorRef result = sub_2560A92A0();
  *a1 = result;
  return result;
}

CGColorRef sub_25601DBB8@<X0>(CGColorRef *a1@<X8>)
{
  CGColorRef result = CGColorCreateGenericRGB(0.0, 0.0, 0.0, 1.0);
  *a1 = result;
  return result;
}

uint64_t sub_25601DBF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2560A94F0();
  *a1 = result;
  return result;
}

void sub_25601DC2C(uint64_t a1)
{
}

void sub_25601DC60(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

_OWORD *sub_25601DCC4(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t *sub_25601DCD4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    uint64_t v9 = a3[5];
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *(uint64_t *)((char *)a2 + v9 + 8);
    *uint64_t v10 = *(uint64_t *)((char *)a2 + v9);
    v10[1] = v12;
    sub_256020C58(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
    uint64_t v14 = *(int *)(v13 + 32);
    uint64_t v37 = &v11[v14];
    id v38 = (char *)v10 + v14;
    uint64_t v15 = sub_256175868();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v16(v38, v37, v15);
    uint64_t v17 = a3[6];
    uint64_t v18 = a3[7];
    id v19 = (char *)v7 + v17;
    uint64_t v20 = (char *)a2 + v17;
    uint64_t v21 = *((void *)v20 + 1);
    *(void *)id v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    unsigned char v19[16] = v20[16];
    *(uint64_t *)((char *)v7 + v18) = *(uint64_t *)((char *)a2 + v18);
    uint64_t v22 = a3[8];
    uint64_t v23 = a3[9];
    uint64_t v24 = (uint64_t *)((char *)v7 + v22);
    uint64_t v25 = (uint64_t *)((char *)a2 + v22);
    uint64_t v26 = v25[1];
    *uint64_t v24 = *v25;
    v24[1] = v26;
    uint64_t v27 = (uint64_t *)((char *)v7 + v23);
    uint64_t v28 = (uint64_t *)((char *)a2 + v23);
    sub_256020C58(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    swift_retain();
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v29 = sub_256176AA8();
      uint64_t v30 = *(void *)(v29 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      {
        sub_256020C58(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v30 + 16))(v27, v28, v29);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      uint64_t v32 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      uint64_t v33 = (char *)v27 + v32;
      uint64_t v34 = (char *)v28 + v32;
      uint64_t v35 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    }
    else
    {
      void *v27 = *v28;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v7;
}

uint64_t sub_25601E06C(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  swift_release();
  swift_release();
  sub_256020C58(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  uint64_t v6 = v4 + *(int *)(v5 + 32);
  uint64_t v7 = sub_256175868();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v8 = a1 + *(int *)(a2 + 36);
  sub_256020C58(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_256176AA8();
    uint64_t v10 = *(void *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
    uint64_t v11 = v8 + *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    uint64_t v12 = sub_256176158();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
    return v13(v11, v12);
  }
  else
  {
    return swift_release();
  }
}

void *sub_25601E2B4(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)((char *)a2 + v7 + 8);
  *uint64_t v8 = *(void *)((char *)a2 + v7);
  v8[1] = v10;
  sub_256020C58(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  uint64_t v12 = *(int *)(v11 + 32);
  uint64_t v35 = &v9[v12];
  uint64_t v36 = (char *)v8 + v12;
  uint64_t v13 = sub_256175868();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v14(v36, v35, v13);
  uint64_t v15 = a3[6];
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)a1 + v15;
  uint64_t v18 = (char *)a2 + v15;
  uint64_t v19 = *((void *)v18 + 1);
  *(void *)uint64_t v17 = *(void *)v18;
  *((void *)v17 + 1) = v19;
  v17[16] = v18[16];
  *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);
  uint64_t v20 = a3[8];
  uint64_t v21 = a3[9];
  uint64_t v22 = (void *)((char *)a1 + v20);
  uint64_t v23 = (void *)((char *)a2 + v20);
  uint64_t v24 = v23[1];
  void *v22 = *v23;
  v22[1] = v24;
  uint64_t v25 = (void *)((char *)a1 + v21);
  uint64_t v26 = (void *)((char *)a2 + v21);
  sub_256020C58(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  swift_retain();
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v27 = sub_256176AA8();
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      sub_256020C58(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    uint64_t v30 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    uint64_t v31 = (char *)v25 + v30;
    uint64_t v32 = (char *)v26 + v30;
    uint64_t v33 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
  }
  else
  {
    *uint64_t v25 = *v26;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_25601E5F8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(void *)((char *)a1 + v6) = *(void *)((char *)a2 + v6);
  swift_retain();
  swift_release();
  *((void *)v7 + 1) = *((void *)v8 + 1);
  swift_retain();
  swift_release();
  sub_256020C58(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  uint64_t v10 = *(int *)(v9 + 32);
  uint64_t v11 = &v7[v10];
  uint64_t v12 = &v8[v10];
  uint64_t v13 = sub_256175868();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = a3[6];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);
  swift_retain();
  swift_release();
  *((void *)v15 + 1) = *((void *)v16 + 1);
  swift_retain();
  swift_release();
  unsigned char v15[16] = v16[16];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  uint64_t v17 = a3[8];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v20 = v19[1];
  void *v18 = *v19;
  v18[1] = v20;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v21 = a3[9];
    uint64_t v22 = (void *)((char *)a1 + v21);
    uint64_t v23 = (void *)((char *)a2 + v21);
    sub_25601E988((uint64_t)a1 + v21);
    sub_256020C58(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = sub_256176AA8();
      uint64_t v25 = *(void *)(v24 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      {
        sub_256020C58(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v25 + 16))(v22, v23, v24);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      }
      uint64_t v27 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      uint64_t v28 = (char *)v22 + v27;
      uint64_t v29 = (char *)v23 + v27;
      uint64_t v30 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
    }
    else
    {
      void *v22 = *v23;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_25601E988(uint64_t a1)
{
  sub_256020C58(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25601EA14(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = a2 + v6;
  uint64_t v9 = *(void *)(a2 + v6 + 8);
  *uint64_t v7 = *(void *)(a2 + v6);
  v7[1] = v9;
  sub_256020C58(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  uint64_t v11 = *(int *)(v10 + 32);
  uint64_t v12 = (char *)v7 + v11;
  uint64_t v13 = v8 + v11;
  uint64_t v14 = sub_256175868();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[6];
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v15;
  uint64_t v18 = (long long *)(a2 + v15);
  long long v19 = *v18;
  *(unsigned char *)(v17 + 16) = *((unsigned char *)v18 + 16);
  *(_OWORD *)uint64_t v17 = v19;
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  uint64_t v20 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  uint64_t v21 = (char *)(a1 + v20);
  uint64_t v22 = (char *)(a2 + v20);
  sub_256020C58(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  uint64_t v24 = v23;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = sub_256176AA8();
    uint64_t v26 = *(void *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v22, 1, v25))
    {
      sub_256020C58(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v21, v22, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v21, v22, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v21, 0, 1, v25);
    }
    uint64_t v28 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    uint64_t v29 = &v21[v28];
    uint64_t v30 = &v22[v28];
    uint64_t v31 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
  }
  return a1;
}

void *sub_25601ED0C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(void *)((char *)a1 + v6) = *(void *)((char *)a2 + v6);
  swift_release();
  *((void *)v7 + 1) = *((void *)v8 + 1);
  swift_release();
  sub_256020C58(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  uint64_t v10 = *(int *)(v9 + 32);
  uint64_t v11 = &v7[v10];
  uint64_t v12 = &v8[v10];
  uint64_t v13 = sub_256175868();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = a3[6];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);
  swift_release();
  *((void *)v15 + 1) = *((void *)v16 + 1);
  swift_release();
  unsigned char v15[16] = v16[16];
  uint64_t v17 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v17) = *(_OWORD *)((char *)a2 + v17);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v18 = a3[9];
    long long v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    sub_25601E988((uint64_t)a1 + v18);
    sub_256020C58(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    uint64_t v22 = v21;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = sub_256176AA8();
      uint64_t v24 = *(void *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v20, 1, v23))
      {
        sub_256020C58(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v19, v20, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v19, v20, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v19, 0, 1, v23);
      }
      uint64_t v26 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      uint64_t v27 = &v19[v26];
      uint64_t v28 = &v20[v26];
      uint64_t v29 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_25601F06C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25601F080);
}

uint64_t sub_25601F080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_256020C58(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_256020C58(0, &qword_269F44C38, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185D0]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 36);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_25601F20C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25601F220);
}

uint64_t sub_25601F220(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_256020C58(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_256020C58(0, &qword_269F44C38, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185D0]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 36);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for ReflectiveIntervalsSelectionPhaseContent()
{
  uint64_t result = qword_269F44C40;
  if (!qword_269F44C40) {
    return swift_getSingletonMetadata();
  }
  return result;
}