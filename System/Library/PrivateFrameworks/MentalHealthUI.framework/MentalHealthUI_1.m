void sub_25601F3F8()
{
  unint64_t v0;
  unint64_t v1;

  sub_256020C58(319, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  if (v0 <= 0x3F)
  {
    sub_256020C58(319, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_25601F550()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25601F56C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v160 = a2;
  uint64_t v3 = type metadata accessor for ReflectiveIntervalsSelectionPhaseContent();
  v131[0] = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  v131[1] = v4;
  uint64_t v132 = (uint64_t)v131 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F9A1B0();
  MEMORY[0x270FA5388](v5 - 8);
  v134 = (char *)v131 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256020AE0(0, &qword_269F44338, (void (*)(uint64_t))sub_255F9A1B0);
  uint64_t v157 = v7;
  uint64_t v155 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v133 = (uint64_t)v131 - v8;
  sub_255FEACB8(0);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v159 = (uint64_t)v131 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v158 = (uint64_t)v131 - v12;
  uint64_t v144 = type metadata accessor for ReflectiveIntervalPicker_iOS();
  MEMORY[0x270FA5388](v144);
  v148 = (char *)v131 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256020B6C(0);
  uint64_t v145 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v149 = (uint64_t)v131 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256020AE0(0, &qword_269F44C88, sub_256020B6C);
  uint64_t v147 = v16;
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v156 = (uint64_t)v131 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v146 = (uint64_t)v131 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v164 = (uint64_t)v131 - v21;
  v22 = (int *)type metadata accessor for ReflectiveIntervalSelectionHeaderText();
  MEMORY[0x270FA5388](v22);
  v24 = (void *)((char *)v131 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_256020B44(0);
  uint64_t v138 = v25;
  MEMORY[0x270FA5388](v25);
  *(void *)&long long v142 = (char *)v131 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256020AE0(0, &qword_269F44C78, sub_256020B44);
  uint64_t v140 = v27;
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  uint64_t v154 = (uint64_t)v131 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v139 = (uint64_t)v131 - v31;
  MEMORY[0x270FA5388](v30);
  uint64_t v163 = (uint64_t)v131 - v32;
  uint64_t v33 = type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs();
  uint64_t v34 = MEMORY[0x270FA5388](v33);
  v36 = (char *)v131 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v34);
  v38 = (char *)v131 - v37;
  int v153 = sub_256176D98();
  uint64_t v39 = a1 + *(int *)(v3 + 36);
  sub_25611BE0C((uint64_t)v38);
  uint64_t v143 = v33;
  sub_256176138();
  double v40 = 0.0;
  sub_256020BE4((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
  sub_256175D48();
  uint64_t v152 = v41;
  uint64_t v151 = v42;
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v161 = v3;
  uint64_t v47 = *(int *)(v3 + 24);
  uint64_t v162 = a1;
  uint64_t v48 = a1 + v47;
  uint64_t v49 = *(void *)(v48 + 8);
  char v50 = *(unsigned char *)(v48 + 16);
  *(void *)&long long v172 = *(void *)v48;
  *((void *)&v172 + 1) = v49;
  LOBYTE(v173) = v50;
  sub_255FEB108(0, (unint64_t *)&qword_269F47D40, MEMORY[0x263F8D4F8], MEMORY[0x263F1B750]);
  uint64_t v141 = v51;
  MEMORY[0x25A2A01A0](&v168);
  int v150 = v168;
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v52 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v53 = sub_2561755B8();
  uint64_t v55 = v54;
  swift_bridgeObjectRelease();

  uint64_t v56 = v162;
  uint64_t v137 = v162 + *(int *)(v161 + 20);
  v135 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F1B750];
  sub_256020C58(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  uint64_t v136 = v57;
  MEMORY[0x25A2A01A0]();
  uint64_t *v24 = v53;
  v24[1] = v55;
  v58 = (uint64_t *)((char *)v24 + v22[6]);
  uint64_t *v58 = swift_getKeyPath();
  v59 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  sub_256020C58(0, &qword_269F44C98, MEMORY[0x263F07920], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  v60 = (uint64_t *)((char *)v24 + v22[7]);
  uint64_t *v60 = swift_getKeyPath();
  sub_256020C58(0, &qword_269F47D00, MEMORY[0x263F18520], v59);
  swift_storeEnumTagMultiPayload();
  v61 = (uint64_t *)((char *)v24 + v22[8]);
  uint64_t *v61 = swift_getKeyPath();
  sub_256020C58(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, v59);
  swift_storeEnumTagMultiPayload();
  LOBYTE(v59) = sub_256176D98();
  sub_25611BE0C((uint64_t)v36);
  sub_256020BE4((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
  sub_256175D48();
  uint64_t v63 = v62;
  uint64_t v65 = v64;
  uint64_t v67 = v66;
  uint64_t v69 = v68;
  uint64_t v70 = v142;
  sub_256021194((uint64_t)v24, v142, (uint64_t (*)(void))type metadata accessor for ReflectiveIntervalSelectionHeaderText);
  uint64_t v71 = v70 + *(int *)(v138 + 36);
  *(unsigned char *)uint64_t v71 = (_BYTE)v59;
  *(void *)(v71 + 8) = v63;
  *(void *)(v71 + 16) = v65;
  *(void *)(v71 + 24) = v67;
  *(void *)(v71 + 32) = v69;
  *(unsigned char *)(v71 + 40) = 0;
  sub_256020BE4((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for ReflectiveIntervalSelectionHeaderText);
  uint64_t v72 = *(void *)(v48 + 8);
  char v73 = *(unsigned char *)(v48 + 16);
  *(void *)&long long v172 = *(void *)v48;
  *((void *)&v172 + 1) = v72;
  LOBYTE(v173) = v73;
  uint64_t v74 = v141;
  MEMORY[0x25A2A01A0](&v168, v141);
  double v75 = 1.0;
  if ((_BYTE)v168) {
    double v76 = 1.0;
  }
  else {
    double v76 = 0.0;
  }
  uint64_t v77 = v139;
  sub_256021194(v70, v139, (uint64_t (*)(void))sub_256020B44);
  *(double *)(v77 + *(int *)(v140 + 36)) = v76;
  sub_256020BE4(v70, (uint64_t (*)(void))sub_256020B44);
  sub_2560211FC(v77, v163, &qword_269F44C78, sub_256020B44);
  uint64_t v78 = *(void *)(v56 + 16);
  long long v168 = *(_OWORD *)v56;
  uint64_t v169 = v78;
  sub_256020C58(0, &qword_269F44CA0, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindReflectiveInterval, v135);
  sub_256177748();
  long long v142 = v172;
  uint64_t v79 = v173;
  uint64_t v80 = v144;
  uint64_t v81 = (uint64_t)v148;
  sub_256177748();
  *(_OWORD *)uint64_t v81 = v142;
  *(void *)(v81 + 16) = v79;
  v82 = (uint64_t *)(v81 + *(int *)(v80 + 24));
  uint64_t *v82 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  LOBYTE(v82) = sub_256176D98();
  sub_25611BE0C((uint64_t)v36);
  sub_256020BE4((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
  sub_256175D48();
  uint64_t v84 = v83;
  uint64_t v86 = v85;
  uint64_t v88 = v87;
  uint64_t v90 = v89;
  uint64_t v91 = v149;
  sub_256021194(v81, v149, (uint64_t (*)(void))type metadata accessor for ReflectiveIntervalPicker_iOS);
  uint64_t v92 = v91 + *(int *)(v145 + 36);
  *(unsigned char *)uint64_t v92 = (_BYTE)v82;
  *(void *)(v92 + 8) = v84;
  *(void *)(v92 + 16) = v86;
  *(void *)(v92 + 24) = v88;
  *(void *)(v92 + 32) = v90;
  *(unsigned char *)(v92 + 40) = 0;
  sub_256020BE4(v81, (uint64_t (*)(void))type metadata accessor for ReflectiveIntervalPicker_iOS);
  uint64_t v93 = *(void *)(v48 + 8);
  char v94 = *(unsigned char *)(v48 + 16);
  *(void *)&long long v172 = *(void *)v48;
  *((void *)&v172 + 1) = v93;
  LOBYTE(v173) = v94;
  MEMORY[0x25A2A01A0](&v168, v74);
  if ((_BYTE)v168) {
    double v40 = 1.0;
  }
  uint64_t v95 = v146;
  sub_256021194(v91, v146, (uint64_t (*)(void))sub_256020B6C);
  *(double *)(v95 + *(int *)(v147 + 36)) = v40;
  sub_256020BE4(v91, (uint64_t (*)(void))sub_256020B6C);
  uint64_t v96 = v164;
  sub_2560211FC(v95, v164, &qword_269F44C88, sub_256020B6C);
  sub_25611BE0C((uint64_t)v36);
  sub_256020BE4((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
  sub_25611BE0C((uint64_t)v36);
  uint64_t v97 = v143;
  LOBYTE(v95) = sub_256176138();
  sub_256020BE4((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
  uint64_t v98 = v163;
  if (v95)
  {
    uint64_t v99 = v97;
    uint64_t v100 = v162;
    uint64_t v101 = *(void *)(v162 + *(int *)(v161 + 28));
    uint64_t v170 = v99;
    v171 = &off_2704BA150;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v168);
    sub_25611BE0C((uint64_t)boxed_opaque_existential_1);
    uint64_t v162 = v39;
    uint64_t v103 = v132;
    sub_256021194(v100, v132, (uint64_t (*)(void))type metadata accessor for ReflectiveIntervalsSelectionPhaseContent);
    unint64_t v104 = (*(unsigned __int8 *)(v131[0] + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v131[0] + 80);
    uint64_t v105 = swift_allocObject();
    sub_25602103C(v103, v105 + v104);
    *(void *)&long long v172 = v101;
    BYTE8(v172) = 0;
    sub_255FEB108(0, (unint64_t *)&qword_269F43C20, MEMORY[0x263F8D538], MEMORY[0x263F8D8F0]);
    sub_256177768();
    long long v174 = v165;
    uint64_t v175 = v166;
    char v176 = v167;
    sub_255F9A6BC(&v168, (uint64_t)&v173);
    *(void *)&long long v172 = sub_2560210A0;
    *((void *)&v172 + 1) = v105;
    v177 = sub_25602078C;
    uint64_t v178 = 0;
    *(void *)&long long v168 = &unk_2704B5358;
    sub_255FCD3A4((uint64_t)&unk_2704B61D0);
    sub_255FEB108(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
    sub_255F744D8();
    sub_256177E28();
    swift_bridgeObjectRelease();
    sub_256020B94(0, (unint64_t *)&qword_269F435E0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for ActionButton);
    sub_255FDF22C();
    uint64_t v106 = (uint64_t)v134;
    sub_256177238();
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    sub_25602110C((uint64_t)&v172);
    LOBYTE(v105) = sub_256176DA8();
    sub_25611BE0C((uint64_t)v36);
    sub_256020BE4((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
    sub_256175D48();
    uint64_t v108 = v107;
    uint64_t v110 = v109;
    uint64_t v112 = v111;
    uint64_t v114 = v113;
    uint64_t v115 = v133;
    sub_256021194(v106, v133, (uint64_t (*)(void))sub_255F9A1B0);
    uint64_t v116 = v157;
    uint64_t v117 = v115 + *(int *)(v157 + 36);
    *(unsigned char *)uint64_t v117 = v105;
    *(void *)(v117 + 8) = v108;
    *(void *)(v117 + 16) = v110;
    *(void *)(v117 + 24) = v112;
    *(void *)(v117 + 32) = v114;
    *(unsigned char *)(v117 + 40) = 0;
    sub_256020BE4(v106, (uint64_t (*)(void))sub_255F9A1B0);
    uint64_t v118 = v158;
    sub_2560211FC(v115, v158, &qword_269F44338, (void (*)(uint64_t))sub_255F9A1B0);
    uint64_t v119 = 0;
  }
  else
  {
    uint64_t v119 = 1;
    uint64_t v118 = v158;
    uint64_t v116 = v157;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v155 + 56))(v118, v119, 1, v116);
  if (!v150) {
    double v75 = 0.0;
  }
  uint64_t v120 = v154;
  sub_256020CBC(v98, v154, &qword_269F44C78, sub_256020B44);
  uint64_t v121 = v96;
  uint64_t v122 = v156;
  sub_256020CBC(v121, v156, &qword_269F44C88, sub_256020B6C);
  uint64_t v123 = v159;
  sub_256021194(v118, v159, (uint64_t (*)(void))sub_255FEACB8);
  uint64_t v124 = v98;
  v125 = v160;
  unsigned char *v160 = v153;
  uint64_t v126 = v151;
  *((void *)v125 + 1) = v152;
  *((void *)v125 + 2) = v126;
  *((void *)v125 + 3) = v44;
  *((void *)v125 + 4) = v46;
  v125[40] = 0;
  *((double *)v125 + 6) = v75;
  sub_256020970();
  v128 = v127;
  sub_256020CBC(v120, (uint64_t)&v125[v127[12]], &qword_269F44C78, sub_256020B44);
  sub_256020CBC(v122, (uint64_t)&v125[v128[16]], &qword_269F44C88, sub_256020B6C);
  v129 = &v125[v128[20]];
  *(void *)v129 = 0x4038000000000000;
  v129[8] = 0;
  sub_256021194(v123, (uint64_t)&v125[v128[24]], (uint64_t (*)(void))sub_255FEACB8);
  sub_256020BE4(v118, (uint64_t (*)(void))sub_255FEACB8);
  sub_256020D34(v164, &qword_269F44C88, sub_256020B6C);
  sub_256020D34(v124, &qword_269F44C78, sub_256020B44);
  sub_256020BE4(v123, (uint64_t (*)(void))sub_255FEACB8);
  sub_256020D34(v122, &qword_269F44C88, sub_256020B6C);
  return sub_256020D34(v120, &qword_269F44C78, sub_256020B44);
}

uint64_t sub_25602078C@<X0>(uint64_t a1@<X8>)
{
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v2 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  sub_2561755B8();
  swift_bridgeObjectRelease();

  sub_255F5CE90();
  uint64_t result = sub_256177028();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5 & 1;
  *(void *)(a1 + 24) = v6;
  return result;
}

uint64_t sub_256020890@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_256176788();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  sub_2560208D4();
  return sub_25601F56C(v1, (unsigned char *)(a1 + *(int *)(v3 + 44)));
}

void sub_2560208D4()
{
  if (!qword_269F44C50)
  {
    sub_25602093C(255);
    unint64_t v0 = sub_256176048();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44C50);
    }
  }
}

void sub_25602093C(uint64_t a1)
{
}

void sub_256020970()
{
  if (!qword_269F44C60)
  {
    sub_256020A54();
    sub_256020AE0(255, &qword_269F44C78, sub_256020B44);
    sub_256020AE0(255, &qword_269F44C88, sub_256020B6C);
    sub_255FEACB8(255);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_269F44C60);
    }
  }
}

void sub_256020A54()
{
  if (!qword_269F44C68)
  {
    sub_256020B94(255, &qword_269F44C70, (uint64_t)&type metadata for StateOfMindHeaderImage, MEMORY[0x263F18C18], MEMORY[0x263F18E28]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44C68);
    }
  }
}

void sub_256020AE0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_256020B44(uint64_t a1)
{
}

void sub_256020B6C(uint64_t a1)
{
}

void sub_256020B94(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_256020BE4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_256020C58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_256020CBC(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_256020AE0(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_256020D34(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_256020AE0(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_256020D98()
{
  uint64_t v1 = (int *)(type metadata accessor for ReflectiveIntervalsSelectionPhaseContent() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_release();
  swift_release();
  uint64_t v3 = v2 + v1[7];
  swift_release();
  swift_release();
  sub_256020C58(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  uint64_t v5 = v3 + *(int *)(v4 + 32);
  uint64_t v6 = sub_256175868();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v7 = v2 + v1[11];
  sub_256020C58(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_256176AA8();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
    uint64_t v10 = v7 + *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    uint64_t v11 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_25602103C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReflectiveIntervalsSelectionPhaseContent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2560210A0()
{
  uint64_t v1 = type metadata accessor for ReflectiveIntervalsSelectionPhaseContent();
  return (*(uint64_t (**)(void))(v0
                              + *(int *)(v1 + 32)
                              + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80))))();
}

uint64_t sub_25602110C(uint64_t a1)
{
  sub_256020B94(0, (unint64_t *)&qword_269F435E0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for ActionButton);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_256021194(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2560211FC(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_256020AE0(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_25602126C()
{
  return sub_2560212B4(&qword_269F44CA8, (void (*)(uint64_t))sub_2560212FC);
}

uint64_t sub_2560212B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2560212FC()
{
  if (!qword_269F44CB0)
  {
    sub_25602093C(255);
    sub_2560212B4(&qword_269F44CB8, sub_25602093C);
    unint64_t v0 = sub_2561776F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44CB0);
    }
  }
}

id StateOfMindOverlayContext.__allocating_init(accessibilityIdentifier:applicationItems:overlayChartController:overlayPredicate:)(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = (char *)objc_allocWithZone(v6);
  uint64_t v13 = OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem;
  *(void *)&v12[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem] = 0;
  uint64_t v14 = &v12[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_accessibilityIdentifier_];
  *(void *)uint64_t v14 = a1;
  *((void *)v14 + 1) = a2;
  *(void *)&v12[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayChartController] = a4;
  sub_255FB58F8(0, (unint64_t *)&qword_269F46A00);
  uint64_t v15 = v12;
  id v16 = a4;
  sub_256141D2C(a3, a5, 0);
  *(void *)&v15[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayDisplayType] = v17;
  *(void *)&v15[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayPredicate] = a5;
  uint64_t v18 = *(void **)&v12[v13];
  *(void *)&v12[v13] = 0;
  id v19 = a5;

  v22.receiver = v15;
  v22.super_class = v6;
  id v20 = objc_msgSendSuper2(&v22, sel_init);

  return v20;
}

id StateOfMindOverlayContext.init(accessibilityIdentifier:applicationItems:overlayChartController:overlayPredicate:)(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v6 = v5;
  uint64_t v10 = OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem;
  *(void *)&v6[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem] = 0;
  uint64_t v11 = &v6[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_accessibilityIdentifier_];
  *(void *)uint64_t v11 = a1;
  *((void *)v11 + 1) = a2;
  *(void *)&v6[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayChartController] = a4;
  sub_255FB58F8(0, (unint64_t *)&qword_269F46A00);
  uint64_t v12 = v6;
  id v13 = a4;
  sub_256141D2C(a3, a5, 0);
  *(void *)&v12[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayDisplayType] = v14;
  *(void *)&v12[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayPredicate] = a5;
  uint64_t v15 = *(void **)&v6[v10];
  *(void *)&v6[v10] = 0;
  id v16 = a5;

  v19.receiver = v12;
  v19.super_class = (Class)type metadata accessor for StateOfMindOverlayContext();
  id v17 = objc_msgSendSuper2(&v19, sel_init);

  return v17;
}

id sub_2560215C8()
{
  sub_255FB58F8(0, (unint64_t *)&unk_269F44CF0);
  id v0 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_stateOfMindType);

  return v0;
}

void *sub_25602166C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayDisplayType);
  id v2 = v1;
  return v1;
}

void sub_2560216AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void, void), uint64_t a6)
{
}

uint64_t sub_2560216BC(uint64_t a1, int a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v45 = a8;
  uint64_t v46 = a1;
  uint64_t v47 = a7;
  uint64_t v48 = a3;
  uint64_t v43 = a6;
  int v44 = a2;
  uint64_t v10 = sub_256177A18();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v51 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_256177A48();
  uint64_t v50 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v49 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_2561753E8();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = MEMORY[0x25A2A1F80](a4 + 16);
  if (result)
  {
    id v20 = (void *)result;
    sub_255FB58F8(0, (unint64_t *)&qword_26B2AD368);
    uint64_t v41 = sub_2561782D8();
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), a5, v15);
    unint64_t v21 = (*(unsigned __int8 *)(v16 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    unint64_t v22 = (v17 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v39 = v10;
    unint64_t v23 = (v22 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v40 = v11;
    unint64_t v24 = (v22 + 39) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v42 = v13;
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v25 + v21, v18, v15);
    uint64_t v26 = (void *)(v25 + v22);
    uint64_t v28 = v46;
    uint64_t v27 = v47;
    *uint64_t v26 = v43;
    v26[1] = v27;
    unint64_t v29 = v25 + v23;
    *(void *)unint64_t v29 = v28;
    *(unsigned char *)(v29 + 8) = v44 & 1;
    uint64_t v30 = v48;
    *(void *)(v25 + v24) = v48;
    *(void *)(v25 + ((v24 + 15) & 0xFFFFFFFFFFFFFFF8)) = v45;
    aBlock[4] = sub_256023ED8;
    aBlock[5] = v25;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_255FA9E78;
    aBlock[3] = &block_descriptor_17;
    uint64_t v31 = _Block_copy(aBlock);
    id v32 = v20;
    swift_retain();
    swift_bridgeObjectRetain();
    id v33 = v30;
    swift_release();
    uint64_t v34 = v49;
    sub_256177A38();
    aBlock[0] = MEMORY[0x263F8EE78];
    sub_25602420C((unint64_t *)&unk_269F44D10, MEMORY[0x263F8F030]);
    sub_2560241A8(0, &qword_269F439E0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
    sub_255FAED28();
    uint64_t v35 = v51;
    uint64_t v36 = v39;
    sub_2561784C8();
    uint64_t v37 = (void *)v41;
    MEMORY[0x25A2A0D70](0, v34, v35, v31);
    _Block_release(v31);

    (*(void (**)(char *, uint64_t))(v40 + 8))(v35, v36);
    return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v34, v42);
  }
  return result;
}

void sub_256021B4C(void *a1, uint64_t a2, void (*a3)(uint64_t, id), uint64_t a4, unint64_t a5, int a6, void *a7, uint64_t a8)
{
  uint64_t v128 = a8;
  id v119 = a7;
  int v121 = a6;
  unint64_t v122 = a5;
  uint64_t v134 = a4;
  v135 = a3;
  uint64_t v139 = a2;
  uint64_t v132 = sub_256175B68();
  uint64_t v9 = *(void *)(v132 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v132);
  v131 = &v115[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = &v115[-v13];
  MEMORY[0x270FA5388](v12);
  uint64_t v120 = &v115[-v15];
  uint64_t v136 = sub_2561753E8();
  uint64_t v138 = *(void *)(v136 - 8);
  MEMORY[0x270FA5388](v136);
  uint64_t v137 = &v115[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = sub_256175868();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v124 = &v115[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_256023F98();
  uint64_t v142 = v20;
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  v127 = &v115[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v21);
  unint64_t v24 = &v115[-v23];
  sub_2560241A8(0, (unint64_t *)&qword_269F44D30, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v26 = MEMORY[0x270FA5388](v25 - 8);
  uint64_t v123 = &v115[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  v129 = &v115[-v29];
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v126 = &v115[-v31];
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v34 = &v115[-v33];
  uint64_t v35 = MEMORY[0x270FA5388](v32);
  uint64_t v37 = &v115[-v36];
  MEMORY[0x270FA5388](v35);
  uint64_t v39 = &v115[-v38];
  uint64_t v117 = a1;
  id v40 = objc_msgSend(*(id *)((char *)a1 + OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayChartController), sel_primaryGraphViewController);
  id v41 = objc_msgSend(v40, sel_graphView);

  id v42 = objc_msgSend(v41, sel_effectiveVisibleRangeActive);
  id v141 = v42;
  id v43 = objc_msgSend(v42, sel_startDate);
  uint64_t v133 = v9;
  uint64_t v118 = v14;
  if (v43)
  {
    int v44 = v43;
    sub_256175818();

    uint64_t v45 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56);
    uint64_t v46 = v39;
    uint64_t v47 = 0;
  }
  else
  {
    uint64_t v45 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56);
    uint64_t v46 = v39;
    uint64_t v47 = 1;
  }
  uint64_t v140 = v45;
  v45(v46, v47, 1, v17);
  uint64_t v48 = v18;
  uint64_t v49 = v139;
  sub_2561753D8();
  v140(v37, 0, 1, v17);
  uint64_t v50 = (uint64_t)&v24[*(int *)(v142 + 48)];
  sub_25602402C((uint64_t)v39, (uint64_t)v24);
  sub_25602402C((uint64_t)v37, v50);
  uint64_t v130 = v48;
  uint64_t v51 = v17;
  id v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48);
  unsigned int v53 = v52((uint64_t)v24, 1, v51);
  v125 = v52;
  if (v53 == 1)
  {
    sub_2560240C0((uint64_t)v37);
    sub_2560240C0((uint64_t)v39);
    if (v52(v50, 1, v51) == 1)
    {
      sub_2560240C0((uint64_t)v24);
      uint64_t v55 = v137;
      uint64_t v54 = v138;
      uint64_t v56 = v136;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v138 + 16))(v137, v49, v136);
      uint64_t v57 = v51;
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_25602402C((uint64_t)v24, (uint64_t)v34);
  if (v52(v50, 1, v51) == 1)
  {
    sub_2560240C0((uint64_t)v37);
    sub_2560240C0((uint64_t)v39);
    (*(void (**)(unsigned char *, uint64_t))(v130 + 8))(v34, v51);
LABEL_9:
    sub_25602414C((uint64_t)v24);
    uint64_t v55 = v137;
    uint64_t v54 = v138;
    uint64_t v56 = v136;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v138 + 16))(v137, v49, v136);
LABEL_10:
    (*(void (**)(unsigned char *, uint64_t))(v54 + 8))(v55, v56);
LABEL_21:
    uint64_t v78 = v131;
LABEL_22:
    sub_256175B48();
    uint64_t v79 = sub_256175B58();
    os_log_type_t v80 = sub_256178238();
    if (os_log_type_enabled(v79, v80))
    {
      uint64_t v81 = (uint8_t *)swift_slowAlloc();
      uint64_t v82 = swift_slowAlloc();
      v144[0] = v82;
      *(_DWORD *)uint64_t v81 = 136446210;
      uint64_t v83 = sub_256178978();
      uint64_t v143 = sub_255FB29A8(v83, v84, v144);
      sub_256178458();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_255F58000, v79, v80, "[%{public}s] Skipping update for irrelevant date range", v81, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A1E90](v82, -1, -1);
      MEMORY[0x25A2A1E90](v81, -1, -1);
    }

    (*(void (**)(unsigned char *, uint64_t))(v133 + 8))(v78, v132);
    goto LABEL_25;
  }
  v58 = v34;
  uint64_t v59 = v130;
  v60 = v124;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v130 + 32))(v124, v50, v51);
  sub_25602420C(&qword_269F44D48, MEMORY[0x263F07490]);
  int v116 = sub_256177E98();
  v61 = *(void (**)(unsigned char *, uint64_t))(v59 + 8);
  v61(v60, v51);
  sub_2560240C0((uint64_t)v37);
  sub_2560240C0((uint64_t)v39);
  v61(v58, v51);
  sub_2560240C0((uint64_t)v24);
  uint64_t v55 = v137;
  uint64_t v54 = v138;
  uint64_t v56 = v136;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v138 + 16))(v137, v139, v136);
  uint64_t v57 = v51;
  if ((v116 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_12:
  id v62 = objc_msgSend(v141, sel_endDate);
  if (v62)
  {
    uint64_t v63 = v62;
    uint64_t v64 = (uint64_t)v126;
    sub_256175818();

    uint64_t v65 = 0;
  }
  else
  {
    uint64_t v65 = 1;
    uint64_t v64 = (uint64_t)v126;
  }
  uint64_t v66 = v140;
  v140((unsigned char *)v64, v65, 1, v57);
  uint64_t v67 = v55;
  uint64_t v68 = v129;
  sub_2561753C8();
  v66(v68, 0, 1, v57);
  uint64_t v69 = v127;
  uint64_t v70 = (uint64_t)&v127[*(int *)(v142 + 48)];
  sub_25602402C(v64, (uint64_t)v127);
  sub_25602402C((uint64_t)v68, v70);
  uint64_t v71 = v57;
  uint64_t v72 = v57;
  char v73 = v125;
  if (v125((uint64_t)v69, 1, v71) == 1)
  {
    sub_2560240C0((uint64_t)v68);
    sub_2560240C0(v64);
    (*(void (**)(unsigned char *, uint64_t))(v54 + 8))(v67, v56);
    if (v73(v70, 1, v72) == 1)
    {
      sub_2560240C0((uint64_t)v69);
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  uint64_t v74 = v123;
  sub_25602402C((uint64_t)v69, (uint64_t)v123);
  unsigned int v75 = v73(v70, 1, v72);
  uint64_t v76 = v130;
  uint64_t v77 = (void (**)(unsigned char *, uint64_t))(v130 + 8);
  if (v75 == 1)
  {
    sub_2560240C0((uint64_t)v129);
    sub_2560240C0(v64);
    (*(void (**)(unsigned char *, uint64_t))(v138 + 8))(v137, v56);
    (*v77)(v74, v72);
LABEL_20:
    sub_25602414C((uint64_t)v69);
    goto LABEL_21;
  }
  uint64_t v87 = v64;
  uint64_t v88 = v124;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v130 + 32))(v124, v70, v72);
  sub_25602420C(&qword_269F44D48, MEMORY[0x263F07490]);
  char v89 = sub_256177E98();
  uint64_t v90 = *(void (**)(unsigned char *, uint64_t))(v76 + 8);
  v90(v88, v72);
  sub_2560240C0((uint64_t)v129);
  sub_2560240C0(v87);
  (*(void (**)(unsigned char *, uint64_t))(v138 + 8))(v137, v56);
  v90(v74, v72);
  sub_2560240C0((uint64_t)v69);
  uint64_t v78 = v131;
  if ((v89 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_28:
  uint64_t v91 = sub_2560229F4(v122);
  if (v91)
  {
    if (v121)
    {
      uint64_t v92 = v117;
      uint64_t v93 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v117) + 0xC0))(v91);
      swift_bridgeObjectRelease();
      char v94 = *(void **)((char *)v92 + OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem);
      *(void *)((char *)v92 + OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem) = v93;

LABEL_25:
      uint64_t v85 = 1;
      id v86 = 0;
      goto LABEL_26;
    }
    swift_bridgeObjectRelease();
    v102 = v118;
    sub_256175B48();
    id v103 = v119;
    id v104 = v119;
    id v105 = v103;
    uint64_t v106 = sub_256175B58();
    os_log_type_t v107 = sub_256178218();
    if (os_log_type_enabled(v106, v107))
    {
      uint64_t v108 = swift_slowAlloc();
      uint64_t v109 = swift_slowAlloc();
      v144[0] = v109;
      *(_DWORD *)uint64_t v108 = 136446466;
      uint64_t v110 = sub_256178978();
      uint64_t v143 = sub_255FB29A8(v110, v111, v144);
      sub_256178458();
      swift_bridgeObjectRelease();
      *(_WORD *)(v108 + 12) = 2080;
      uint64_t v143 = (uint64_t)v103;
      id v112 = v103;
      sub_2560241A8(0, (unint64_t *)&qword_269F44D38, (uint64_t (*)(uint64_t))sub_255FB3160, MEMORY[0x263F8D8F0]);
      uint64_t v113 = sub_256177F08();
      uint64_t v143 = sub_255FB29A8(v113, v114, v144);
      sub_256178458();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_255F58000, v106, v107, "[%{public}s] Skipping update due to fetch error: %s", (uint8_t *)v108, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25A2A1E90](v109, -1, -1);
      MEMORY[0x25A2A1E90](v108, -1, -1);
    }
    else
    {
    }
    (*(void (**)(unsigned char *, uint64_t))(v133 + 8))(v102, v132);
    uint64_t v85 = 0;
    id v86 = v103;
  }
  else
  {
    uint64_t v95 = v120;
    sub_256175B48();
    uint64_t v96 = sub_256175B58();
    os_log_type_t v97 = sub_256178218();
    if (os_log_type_enabled(v96, v97))
    {
      uint64_t v98 = (uint8_t *)swift_slowAlloc();
      uint64_t v99 = swift_slowAlloc();
      v144[0] = v99;
      *(_DWORD *)uint64_t v98 = 136446210;
      uint64_t v100 = sub_256178978();
      uint64_t v143 = sub_255FB29A8(v100, v101, v144);
      sub_256178458();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_255F58000, v96, v97, "[%{public}s] Skipping update for incompatible chart points", v98, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A1E90](v99, -1, -1);
      MEMORY[0x25A2A1E90](v98, -1, -1);
    }

    (*(void (**)(unsigned char *, uint64_t))(v133 + 8))(v95, v132);
    uint64_t v85 = 0;
    id v86 = 0;
  }
LABEL_26:
  v135(v85, v86);
}

uint64_t sub_2560229F4(unint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v9 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  sub_2561785F8();
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        MEMORY[0x25A2A1000](i, v1);
        uint64_t v4 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        sub_256177B78();
        if (!swift_dynamicCastClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_2561785D8();
        sub_256178608();
        sub_256178618();
        sub_2561785E8();
        if (v4 == v2) {
          return v9;
        }
      }
      __break(1u);
    }
    else
    {
      for (uint64_t j = 0; ; ++j)
      {
        uint64_t v6 = j + 1;
        if (__OFADD__(j, 1)) {
          break;
        }
        sub_256177B78();
        uint64_t v7 = swift_dynamicCastClass();
        if (!v7)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v1 = v7;
        swift_unknownObjectRetain();
        sub_2561785D8();
        sub_256178608();
        sub_256178618();
        sub_2561785E8();
        if (v6 == v2) {
          return v9;
        }
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_256178678();
    swift_bridgeObjectRelease();
    sub_2561785F8();
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_256178678();
    swift_bridgeObjectRelease();
  }
  return v9;
}

void sub_256022BD8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  sub_256023D64();
  uint64_t v7 = sub_256178008();
  swift_retain();
  id v8 = a4;
  v6(v7, a3, a4);
  swift_release();
  swift_bridgeObjectRelease();
}

void sub_256022DD8(char a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_2561755C8();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, void))(a3 + 16))(a3, a1 & 1);
}

uint64_t sub_256022E48()
{
  uint64_t v1 = *(void **)((char *)v0 + OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem);
  if (v1)
  {
    uint64_t v2 = *(void *)((char *)v0 + OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem);
  }
  else
  {
    uint64_t v2 = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC0))(MEMORY[0x263F8EE78]);
    uint64_t v1 = 0;
  }
  id v3 = v1;
  return v2;
}

uint64_t sub_256022F88()
{
  return 0;
}

void sub_256022F98()
{
}

id sub_256022FF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F466F8]), sel_init);
  id v6 = self;
  uint64_t v7 = (void *)sub_256177EA8();
  id v8 = objc_msgSend(v6, sel_hk_chartOverlayAccessibilityIdentifier_, v7);

  if (v8)
  {
    uint64_t v18 = 0;
    sub_256177ED8();

    id v8 = 0;
  }
  objc_msgSend(v5, sel_setAccessibilityIdentifier_, v8, v18);

  uint64_t v9 = (void *)sub_256177EA8();
  objc_msgSend(v5, sel_setTitle_, v9);

  uint64_t v10 = self;
  id v11 = objc_msgSend(self, sel_tertiarySystemBackgroundColor);
  id v12 = objc_msgSend(v10, sel_defaultContextViewColorsUsingColor_, v11);

  objc_msgSend(v5, sel_setMetricColors_, v12);
  id v13 = objc_msgSend(v10, sel_mindfulnessColors);
  objc_msgSend(v5, sel_setSelectedMetricColors_, v13);

  uint64_t v14 = (void *)sub_256177EA8();
  if (a4)
  {
    objc_msgSend(v5, sel_setValue_, v14);

    swift_bridgeObjectRetain();
    uint64_t v15 = (void *)sub_256177EA8();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v16 = (id)HKUILocalizedString();

    objc_msgSend(v5, sel_setValue_, v16);
    uint64_t v15 = (void *)sub_256177EA8();
  }
  objc_msgSend(v5, sel_setUnit_, v15);

  return v5;
}

uint64_t type metadata accessor for StateOfMindOverlayContext()
{
  return self;
}

id StateOfMindOverlayContext.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void StateOfMindOverlayContext.init()()
{
}

id StateOfMindOverlayContext.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StateOfMindOverlayContext();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_25602341C(uint64_t a1, uint64_t a2, void (*a3)(void, void), uint64_t a4)
{
  id v5 = v4;
  uint64_t v49 = a4;
  uint64_t v50 = a3;
  uint64_t v45 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = sub_256175B68();
  id v44 = *(id *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v47 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2561753E8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  id v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_256175868();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  id v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void **)((char *)v5 + OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayDisplayType);
  uint64_t v46 = a2;
  id v18 = objc_msgSend(v17, sel_graphSeriesForTimeScope_, a2);
  if (v18)
  {
    uint64_t v47 = *(char **)((char *)v5 + OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayChartController);
    id v42 = v5;
    uint64_t v19 = v45;
    id v44 = v18;
    sub_2561753D8();
    uint64_t v43 = sub_2561757F8();
    uint64_t v20 = *(void (**)(char *, uint64_t))(v14 + 8);
    v20(v16, v13);
    sub_2561753C8();
    uint64_t v21 = (void *)sub_2561757F8();
    v20(v16, v13);
    uint64_t v22 = swift_allocObject();
    swift_unknownObjectWeakInit();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v19, v9);
    unint64_t v23 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    unint64_t v24 = (v11 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v25 = (v24 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v22;
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v26 + v23, v12, v9);
    uint64_t v27 = (void *)(v26 + v24);
    uint64_t v28 = v49;
    *uint64_t v27 = v50;
    v27[1] = v28;
    *(void *)(v26 + v25) = ObjectType;
    aBlock[4] = (uint64_t)sub_256023C84;
    aBlock[5] = v26;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_256022BD8;
    aBlock[3] = (uint64_t)&block_descriptor_3;
    uint64_t v29 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    uint64_t v31 = (void *)v43;
    uint64_t v30 = v44;
    objc_msgSend(v47, sel_cachedDataForCustomGraphSeries_timeScope_resolution_startDate_endDate_completion_, v44, v46, 0, v43, v21, v29);
    _Block_release(v29);
  }
  else
  {
    uint64_t v32 = (void (**)(char *, uint64_t))v44;
    uint64_t v46 = v7;
    sub_256175B48();
    uint64_t v33 = sub_256175B58();
    os_log_type_t v34 = sub_256178218();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      aBlock[0] = v36;
      *(_DWORD *)uint64_t v35 = 136446210;
      uint64_t v37 = sub_256178978();
      void aBlock[6] = sub_255FB29A8(v37, v38, aBlock);
      sub_256178458();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_255F58000, v33, v34, "[%{public}s] Cannot update context item without a graph series", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A1E90](v36, -1, -1);
      MEMORY[0x25A2A1E90](v35, -1, -1);
    }

    v32[1](v47, v46);
    uint64_t v39 = v50;
    uint64_t v40 = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v5) + 0xC0))(MEMORY[0x263F8EE78]);
    id v41 = *(void **)((char *)v5 + OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem);
    *(void *)((char *)v5 + OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem) = v40;

    v39(0, 0);
  }
}

uint64_t method lookup function for StateOfMindOverlayContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for StateOfMindOverlayContext);
}

uint64_t dispatch thunk of StateOfMindOverlayContext.__allocating_init(accessibilityIdentifier:applicationItems:overlayChartController:overlayPredicate:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of StateOfMindOverlayContext.sampleTypeForDateRangeUpdates()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of StateOfMindOverlayContext.overlayDisplayType(for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of StateOfMindOverlayContext.updateItem(for:overlayController:timeScope:resolution:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of StateOfMindOverlayContext.contextItemForLastUpdate()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of StateOfMindOverlayContext.resolution(for:traitResolution:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of StateOfMindOverlayContext.contextItem(from:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of StateOfMindOverlayContext.stateOfMindContextItem(title:value:unit:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC8))();
}

uint64_t sub_256023B18()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

void sub_256023B50(char a1, uint64_t a2)
{
  sub_256022DD8(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_256023B58()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_256023B90()
{
  uint64_t v1 = sub_2561753E8();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_256023C84(uint64_t a1, int a2, void *a3)
{
  uint64_t v7 = *(void *)(sub_2561753E8() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = *(void *)(v3 + 16);
  uint64_t v11 = *(void *)(v3 + v9);
  uint64_t v12 = *(void *)(v3 + v9 + 8);
  uint64_t v13 = *(void *)(v3 + ((v9 + 23) & 0xFFFFFFFFFFFFFFF8));

  return sub_2560216BC(a1, a2, a3, v10, v3 + v8, v11, v12, v13);
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

unint64_t sub_256023D64()
{
  unint64_t result = qword_269F44D00;
  if (!qword_269F44D00)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_269F44D00);
  }
  return result;
}

uint64_t sub_256023DBC()
{
  uint64_t v1 = sub_2561753E8();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_256023ED8()
{
  uint64_t v1 = *(void *)(sub_2561753E8() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 39) & 0xFFFFFFFFFFFFFFF8;
  id v5 = *(void **)(v0 + 16);
  uint64_t v6 = v0 + v2;
  uint64_t v7 = *(void (**)(uint64_t, id))(v0 + v3);
  uint64_t v8 = *(void *)(v0 + v3 + 8);
  uint64_t v9 = v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = *(void *)v9;
  int v11 = *(unsigned __int8 *)(v9 + 8);
  uint64_t v12 = *(void **)(v0 + v4);
  uint64_t v13 = *(void *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_256021B4C(v5, v6, v7, v8, v10, v11, v12, v13);
}

void sub_256023F98()
{
  if (!qword_269F44D28)
  {
    sub_2560241A8(255, (unint64_t *)&qword_269F44D30, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F44D28);
    }
  }
}

uint64_t sub_25602402C(uint64_t a1, uint64_t a2)
{
  sub_2560241A8(0, (unint64_t *)&qword_269F44D30, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2560240C0(uint64_t a1)
{
  sub_2560241A8(0, (unint64_t *)&qword_269F44D30, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25602414C(uint64_t a1)
{
  sub_256023F98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2560241A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_25602420C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_25602425C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    sub_25602A874(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_256176AA8();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v83 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
      uint64_t v81 = v8;
      uint64_t v80 = v6;
      if (v83(a2, 1, v7))
      {
        sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      int v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v12 = v11[5];
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = sub_256176158();
      id v16 = (void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
      uint64_t v82 = *v16;
      (*v16)(v13, v14, v15);
      *((unsigned char *)a1 + v11[6]) = *((unsigned char *)a2 + v11[6]);
      uint64_t v17 = v11[7];
      id v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      uint64_t v20 = sub_256175D98();
      uint64_t v79 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
      v79(v18, v19, v20);
      uint64_t v21 = v11[8];
      uint64_t v22 = (char *)a1 + v21;
      unint64_t v23 = (char *)a2 + v21;
      if (v83((uint64_t *)((char *)a2 + v21), 1, v7))
      {
        sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v22, v23, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v22, 0, 1, v7);
      }
      uint64_t v25 = _s6StylesV8TimelineVMa(0);
      v82(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
      uint64_t v26 = v11[9];
      uint64_t v27 = (char *)a1 + v26;
      uint64_t v28 = (char *)a2 + v26;
      if (v83((uint64_t *)((char *)a2 + v26), 1, v7))
      {
        sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v27, v28, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v27, 0, 1, v7);
      }
      uint64_t v30 = _s6StylesV6NoDataVMa(0);
      v82(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
      v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
      uint64_t v31 = v11[10];
      uint64_t v32 = (char *)a1 + v31;
      uint64_t v33 = (char *)a2 + v31;
      if (v83((uint64_t *)((char *)a2 + v31), 1, v7))
      {
        sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v32, v33, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v32, 0, 1, v7);
      }
      uint64_t v35 = _s6StylesV11PlaceholderVMa(0);
      v82(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
      uint64_t v36 = v11[11];
      uint64_t v37 = (char *)a1 + v36;
      unint64_t v38 = (char *)a2 + v36;
      if (v83((uint64_t *)((char *)a2 + v36), 1, v7))
      {
        sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v37, v38, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v37, 0, 1, v7);
      }
      uint64_t v40 = _s6StylesV6SymbolVMa(0);
      v82(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
      uint64_t v41 = v11[12];
      id v42 = (char *)a1 + v41;
      uint64_t v43 = (char *)a2 + v41;
      if (v83((uint64_t *)((char *)a2 + v41), 1, v7))
      {
        sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v42, v43, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v42, 0, 1, v7);
      }
      uint64_t v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v82(&v42[v45[5]], &v43[v45[5]], v15);
      v42[v45[6]] = v43[v45[6]];
      v79(&v42[v45[7]], &v43[v45[7]], v20);
      uint64_t v46 = v11[13];
      uint64_t v47 = (char *)a1 + v46;
      uint64_t v48 = (char *)a2 + v46;
      if (v83((uint64_t *)((char *)a2 + v46), 1, v7))
      {
        sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
        uint64_t v50 = v81;
      }
      else
      {
        uint64_t v50 = v81;
        (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v47, v48, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v47, 0, 1, v7);
      }
      uint64_t v51 = _s6StylesV5EmptyVMa(0);
      v82(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
      v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
      uint64_t v52 = v11[14];
      unsigned int v53 = (char *)a1 + v52;
      uint64_t v54 = (char *)a2 + v52;
      if (v83((uint64_t *)((char *)a2 + v52), 1, v7))
      {
        sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v53, v54, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v7);
      }
      uint64_t v56 = _s6StylesV5DailyVMa(0);
      v82(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      uint64_t v57 = v11[15];
      v58 = (char *)a1 + v57;
      uint64_t v59 = (char *)a2 + v57;
      if (v83((uint64_t *)((char *)a2 + v57), 1, v7))
      {
        sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v58, v59, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v7);
      }
      uint64_t v61 = _s6StylesV9MomentaryVMa(0);
      v82(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
      uint64_t v62 = v11[16];
      uint64_t v63 = (char *)a1 + v62;
      uint64_t v64 = (char *)a2 + v62;
      if (v83((uint64_t *)((char *)a2 + v62), 1, v7))
      {
        sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v63, v64, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v7);
      }
      uint64_t v66 = _s6StylesV6HeaderVMa(0);
      v82(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
      uint64_t v67 = v11[17];
      uint64_t v68 = (char *)a1 + v67;
      uint64_t v69 = (char *)a2 + v67;
      if (v83((uint64_t *)((char *)a2 + v67), 1, v7))
      {
        sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v68, v69, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v7);
      }
      uint64_t v71 = _s6StylesV11ChartButtonVMa(0);
      v82(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
      uint64_t v72 = v11[18];
      char v73 = (char *)a1 + v72;
      uint64_t v74 = (char *)a2 + v72;
      if (v83((uint64_t *)((char *)a2 + v72), 1, v7))
      {
        sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v73, v74, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v7);
      }
      uint64_t v76 = _s6StylesV15LogButtonFooterVMa(0);
      v82(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
      swift_storeEnumTagMultiPayload();
      uint64_t v6 = v80;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v77 = *(int *)(v6 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(v6 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v6 + 20));
    *(uint64_t *)((char *)a1 + v77) = *(uint64_t *)((char *)a2 + v77);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_256025094(uint64_t a1)
{
  sub_25602A874(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_256176AA8();
    uint64_t v3 = *(void *)(v2 - 8);
    uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
    if (!v4(a1, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    }
    uint64_t v5 = type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v6 = a1 + *(int *)(v5 + 20);
    uint64_t v7 = sub_256176158();
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    uint64_t v9 = v6;
    uint64_t v10 = (int *)v5;
    v8(v9, v7);
    uint64_t v11 = a1 + *(int *)(v5 + 28);
    uint64_t v12 = sub_256175D98();
    unint64_t v38 = *(void (**)(uint64_t))(*(void *)(v12 - 8) + 8);
    uint64_t v39 = v12;
    v38(v11);
    uint64_t v13 = a1 + v10[8];
    if (!v4(v13, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v13, v2);
    }
    uint64_t v14 = _s6StylesV8TimelineVMa(0);
    v8(v13 + *(int *)(v14 + 20), v7);
    uint64_t v15 = a1 + v10[9];
    if (!v4(v15, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v15, v2);
    }
    uint64_t v16 = _s6StylesV6NoDataVMa(0);
    v8(v15 + *(int *)(v16 + 20), v7);
    uint64_t v17 = a1 + v10[10];
    if (!v4(v17, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v17, v2);
    }
    uint64_t v18 = _s6StylesV11PlaceholderVMa(0);
    v8(v17 + *(int *)(v18 + 20), v7);
    uint64_t v19 = a1 + v10[11];
    if (!v4(v19, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v19, v2);
    }
    uint64_t v20 = _s6StylesV6SymbolVMa(0);
    v8(v19 + *(int *)(v20 + 20), v7);
    uint64_t v21 = a1 + v10[12];
    if (!v4(v21, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v21, v2);
    }
    uint64_t v40 = v3;
    uint64_t v22 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v8(v21 + *(int *)(v22 + 20), v7);
    ((void (*)(uint64_t, uint64_t))v38)(v21 + *(int *)(v22 + 28), v39);
    unint64_t v23 = v10;
    uint64_t v24 = a1 + v10[13];
    if (!v4(v24, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v24, v2);
    }
    uint64_t v25 = _s6StylesV5EmptyVMa(0);
    v8(v24 + *(int *)(v25 + 20), v7);
    uint64_t v26 = a1 + v23[14];
    if (!v4(v26, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v26, v2);
    }
    uint64_t v27 = _s6StylesV5DailyVMa(0);
    v8(v26 + *(int *)(v27 + 20), v7);
    uint64_t v28 = a1 + v23[15];
    if (!v4(v28, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v28, v2);
    }
    uint64_t v29 = _s6StylesV9MomentaryVMa(0);
    v8(v28 + *(int *)(v29 + 20), v7);
    uint64_t v30 = a1 + v23[16];
    uint64_t v31 = v7;
    if (!v4(v30, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v30, v2);
    }
    uint64_t v32 = _s6StylesV6HeaderVMa(0);
    v8(v30 + *(int *)(v32 + 20), v7);
    uint64_t v33 = a1 + v23[17];
    if (!v4(v33, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v33, v2);
    }
    uint64_t v34 = _s6StylesV11ChartButtonVMa(0);
    v8(v33 + *(int *)(v34 + 20), v7);
    uint64_t v35 = a1 + v23[18];
    if (!v4(v35, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v35, v2);
    }
    uint64_t v36 = _s6StylesV15LogButtonFooterVMa(0);
    v8(v35 + *(int *)(v36 + 20), v31);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_2560256DC(void *a1, void *a2, uint64_t a3)
{
  sub_25602A874(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256176AA8();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v81 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48);
    uint64_t v79 = v7;
    if (v81(a2, 1, v6))
    {
      sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    uint64_t v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v10 = v9[5];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_256176158();
    uint64_t v14 = (void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    uint64_t v80 = *v14;
    (*v14)(v11, v12, v13);
    *((unsigned char *)a1 + v9[6]) = *((unsigned char *)a2 + v9[6]);
    uint64_t v15 = v9[7];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_256175D98();
    uint64_t v77 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
    v77(v16, v17, v18);
    uint64_t v19 = v9[8];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    if (v81((void *)((char *)a2 + v19), 1, v6))
    {
      sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v20, v21, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v20, 0, 1, v6);
    }
    uint64_t v23 = _s6StylesV8TimelineVMa(0);
    v80(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
    uint64_t v24 = v9[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v78 = a3;
    if (v81((void *)((char *)a2 + v24), 1, v6))
    {
      sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v25, v26, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v25, 0, 1, v6);
    }
    uint64_t v28 = _s6StylesV6NoDataVMa(0);
    v80(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
    v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
    uint64_t v29 = v9[10];
    uint64_t v30 = (char *)a1 + v29;
    uint64_t v31 = (char *)a2 + v29;
    if (v81((void *)((char *)a2 + v29), 1, v6))
    {
      sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v30, v31, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v30, 0, 1, v6);
    }
    uint64_t v33 = _s6StylesV11PlaceholderVMa(0);
    v80(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v13);
    uint64_t v34 = v9[11];
    uint64_t v35 = (char *)a1 + v34;
    uint64_t v36 = (char *)a2 + v34;
    if (v81((void *)((char *)a2 + v34), 1, v6))
    {
      sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v35, v36, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v35, 0, 1, v6);
    }
    uint64_t v38 = _s6StylesV6SymbolVMa(0);
    v80(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v13);
    uint64_t v39 = v9[12];
    uint64_t v40 = (char *)a1 + v39;
    uint64_t v41 = (char *)a2 + v39;
    if (v81((void *)((char *)a2 + v39), 1, v6))
    {
      sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v40, v41, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v40, 0, 1, v6);
    }
    uint64_t v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v80(&v40[v43[5]], &v41[v43[5]], v13);
    v40[v43[6]] = v41[v43[6]];
    v77(&v40[v43[7]], &v41[v43[7]], v18);
    uint64_t v44 = v9[13];
    uint64_t v45 = (char *)a1 + v44;
    uint64_t v46 = (char *)a2 + v44;
    if (v81((void *)((char *)a2 + v44), 1, v6))
    {
      sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
      uint64_t v48 = v79;
    }
    else
    {
      uint64_t v48 = v79;
      (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v45, v46, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v45, 0, 1, v6);
    }
    uint64_t v49 = _s6StylesV5EmptyVMa(0);
    v80(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v13);
    v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
    uint64_t v50 = v9[14];
    uint64_t v51 = (char *)a1 + v50;
    uint64_t v52 = (char *)a2 + v50;
    if (v81((void *)((char *)a2 + v50), 1, v6))
    {
      sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v52, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v6);
    }
    uint64_t v54 = _s6StylesV5DailyVMa(0);
    v80(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v13);
    v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
    uint64_t v55 = v9[15];
    uint64_t v56 = (char *)a1 + v55;
    uint64_t v57 = (char *)a2 + v55;
    if (v81((void *)((char *)a2 + v55), 1, v6))
    {
      sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v56, v57, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v6);
    }
    a3 = v78;
    uint64_t v59 = _s6StylesV9MomentaryVMa(0);
    v80(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v13);
    uint64_t v60 = v9[16];
    uint64_t v61 = (char *)a1 + v60;
    uint64_t v62 = (char *)a2 + v60;
    if (v81((void *)((char *)a2 + v60), 1, v6))
    {
      sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v6);
    }
    uint64_t v64 = _s6StylesV6HeaderVMa(0);
    v80(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v13);
    uint64_t v65 = v9[17];
    uint64_t v66 = (char *)a1 + v65;
    uint64_t v67 = (char *)a2 + v65;
    if (v81((void *)((char *)a2 + v65), 1, v6))
    {
      sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v67, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v6);
    }
    uint64_t v69 = _s6StylesV11ChartButtonVMa(0);
    v80(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v13);
    uint64_t v70 = v9[18];
    uint64_t v71 = (char *)a1 + v70;
    uint64_t v72 = (char *)a2 + v70;
    if (v81((void *)((char *)a2 + v70), 1, v6))
    {
      sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v72, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v6);
    }
    uint64_t v74 = _s6StylesV15LogButtonFooterVMa(0);
    v80(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v13);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v75 = *(int *)(a3 + 24);
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  *(void *)((char *)a1 + v75) = *(void *)((char *)a2 + v75);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_2560264C4(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25602A944((uint64_t)a1, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    sub_25602A874(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, v6);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_256176AA8();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v81 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48);
      uint64_t v78 = a3;
      uint64_t v79 = v8;
      if (v81(a2, 1, v7))
      {
        sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      uint64_t v10 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v11 = v10[5];
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_256176158();
      uint64_t v15 = (void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      uint64_t v80 = *v15;
      (*v15)(v12, v13, v14);
      *((unsigned char *)a1 + v10[6]) = *((unsigned char *)a2 + v10[6]);
      uint64_t v16 = v10[7];
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = sub_256175D98();
      uint64_t v77 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
      v77(v17, v18, v19);
      uint64_t v20 = v10[8];
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      if (v81((void *)((char *)a2 + v20), 1, v7))
      {
        sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v21, v22, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v21, 0, 1, v7);
      }
      uint64_t v24 = _s6StylesV8TimelineVMa(0);
      v80(&v21[*(int *)(v24 + 20)], &v22[*(int *)(v24 + 20)], v14);
      uint64_t v25 = v10[9];
      uint64_t v26 = (char *)a1 + v25;
      uint64_t v27 = (char *)a2 + v25;
      if (v81((void *)((char *)a2 + v25), 1, v7))
      {
        sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v26, v27, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v26, 0, 1, v7);
      }
      uint64_t v29 = _s6StylesV6NoDataVMa(0);
      v80(&v26[*(int *)(v29 + 20)], &v27[*(int *)(v29 + 20)], v14);
      v26[*(int *)(v29 + 24)] = v27[*(int *)(v29 + 24)];
      uint64_t v30 = v10[10];
      uint64_t v31 = (char *)a1 + v30;
      uint64_t v32 = (char *)a2 + v30;
      if (v81((void *)((char *)a2 + v30), 1, v7))
      {
        sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v31, v32, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v31, 0, 1, v7);
      }
      uint64_t v34 = _s6StylesV11PlaceholderVMa(0);
      v80(&v31[*(int *)(v34 + 20)], &v32[*(int *)(v34 + 20)], v14);
      uint64_t v35 = v10[11];
      uint64_t v36 = (char *)a1 + v35;
      uint64_t v37 = (char *)a2 + v35;
      if (v81((void *)((char *)a2 + v35), 1, v7))
      {
        sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v36, v37, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v36, 0, 1, v7);
      }
      uint64_t v39 = _s6StylesV6SymbolVMa(0);
      v80(&v36[*(int *)(v39 + 20)], &v37[*(int *)(v39 + 20)], v14);
      uint64_t v40 = v10[12];
      uint64_t v41 = (char *)a1 + v40;
      uint64_t v42 = (char *)a2 + v40;
      if (v81((void *)((char *)a2 + v40), 1, v7))
      {
        sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v41, v42, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v41, 0, 1, v7);
      }
      uint64_t v44 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v80(&v41[v44[5]], &v42[v44[5]], v14);
      v41[v44[6]] = v42[v44[6]];
      v77(&v41[v44[7]], &v42[v44[7]], v19);
      uint64_t v45 = v10[13];
      uint64_t v46 = (char *)a1 + v45;
      uint64_t v47 = (char *)a2 + v45;
      if (v81((void *)((char *)a2 + v45), 1, v7))
      {
        sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
        uint64_t v49 = v79;
      }
      else
      {
        uint64_t v49 = v79;
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v46, v47, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v46, 0, 1, v7);
      }
      uint64_t v50 = _s6StylesV5EmptyVMa(0);
      v80(&v46[*(int *)(v50 + 20)], &v47[*(int *)(v50 + 20)], v14);
      v46[*(int *)(v50 + 24)] = v47[*(int *)(v50 + 24)];
      uint64_t v51 = v10[14];
      uint64_t v52 = (char *)a1 + v51;
      uint64_t v53 = (char *)a2 + v51;
      if (v81((void *)((char *)a2 + v51), 1, v7))
      {
        sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v52, v53, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v52, 0, 1, v7);
      }
      uint64_t v55 = _s6StylesV5DailyVMa(0);
      v80(&v52[*(int *)(v55 + 20)], &v53[*(int *)(v55 + 20)], v14);
      v52[*(int *)(v55 + 24)] = v53[*(int *)(v55 + 24)];
      uint64_t v56 = v10[15];
      uint64_t v57 = (char *)a1 + v56;
      uint64_t v58 = (char *)a2 + v56;
      if (v81((void *)((char *)a2 + v56), 1, v7))
      {
        sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v57, v58, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v57, 0, 1, v7);
      }
      uint64_t v60 = _s6StylesV9MomentaryVMa(0);
      v80(&v57[*(int *)(v60 + 20)], &v58[*(int *)(v60 + 20)], v14);
      uint64_t v61 = v10[16];
      uint64_t v62 = (char *)a1 + v61;
      uint64_t v63 = (char *)a2 + v61;
      if (v81((void *)((char *)a2 + v61), 1, v7))
      {
        sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v62, v63, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v62, 0, 1, v7);
      }
      uint64_t v65 = _s6StylesV6HeaderVMa(0);
      v80(&v62[*(int *)(v65 + 20)], &v63[*(int *)(v65 + 20)], v14);
      uint64_t v66 = v10[17];
      uint64_t v67 = (char *)a1 + v66;
      uint64_t v68 = (char *)a2 + v66;
      if (v81((void *)((char *)a2 + v66), 1, v7))
      {
        sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v67, v68, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v67, 0, 1, v7);
      }
      uint64_t v70 = _s6StylesV11ChartButtonVMa(0);
      v80(&v67[*(int *)(v70 + 20)], &v68[*(int *)(v70 + 20)], v14);
      uint64_t v71 = v10[18];
      uint64_t v72 = (char *)a1 + v71;
      uint64_t v73 = (char *)a2 + v71;
      if (v81((void *)((char *)a2 + v71), 1, v7))
      {
        sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v72, v73, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v72, 0, 1, v7);
      }
      uint64_t v75 = _s6StylesV15LogButtonFooterVMa(0);
      v80(&v72[*(int *)(v75 + 20)], &v73[*(int *)(v75 + 20)], v14);
      a3 = v78;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_2560272E4(char *a1, char *a2, uint64_t a3)
{
  sub_25602A874(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  uint64_t v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_256176AA8();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v83 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    uint64_t v81 = v9;
    if (v83(a2, 1, v8))
    {
      sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    uint64_t v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v12 = v11[5];
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    uint64_t v15 = sub_256176158();
    uint64_t v16 = (void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
    uint64_t v82 = *v16;
    (*v16)(v13, v14, v15);
    a1[v11[6]] = a2[v11[6]];
    uint64_t v17 = v11[7];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    uint64_t v20 = sub_256175D98();
    uint64_t v79 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32);
    v79(v18, v19, v20);
    uint64_t v21 = v11[8];
    uint64_t v22 = &a1[v21];
    uint64_t v23 = &a2[v21];
    if (v83(&a2[v21], 1, v8))
    {
      sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v22, v23, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v22, 0, 1, v8);
    }
    uint64_t v25 = _s6StylesV8TimelineVMa(0);
    v82(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
    uint64_t v26 = v11[9];
    uint64_t v27 = &a1[v26];
    uint64_t v28 = &a2[v26];
    uint64_t v80 = a3;
    if (v83(&a2[v26], 1, v8))
    {
      sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v27, v28, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v27, 0, 1, v8);
    }
    uint64_t v30 = _s6StylesV6NoDataVMa(0);
    v82(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
    v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
    uint64_t v31 = v11[10];
    uint64_t v32 = &a1[v31];
    uint64_t v33 = &a2[v31];
    if (v83(&a2[v31], 1, v8))
    {
      sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v32, v33, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v32, 0, 1, v8);
    }
    uint64_t v35 = _s6StylesV11PlaceholderVMa(0);
    v82(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
    uint64_t v36 = v11[11];
    uint64_t v37 = &a1[v36];
    uint64_t v38 = &a2[v36];
    if (v83(&a2[v36], 1, v8))
    {
      sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v37, v38, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v37, 0, 1, v8);
    }
    uint64_t v40 = _s6StylesV6SymbolVMa(0);
    v82(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
    uint64_t v41 = v11[12];
    uint64_t v42 = &a1[v41];
    uint64_t v43 = &a2[v41];
    if (v83(&a2[v41], 1, v8))
    {
      sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v42, v43, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v42, 0, 1, v8);
    }
    uint64_t v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v82(&v42[v45[5]], &v43[v45[5]], v15);
    v42[v45[6]] = v43[v45[6]];
    v79(&v42[v45[7]], &v43[v45[7]], v20);
    uint64_t v46 = v11[13];
    uint64_t v47 = &a1[v46];
    uint64_t v48 = &a2[v46];
    if (v83(&a2[v46], 1, v8))
    {
      sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
      uint64_t v50 = v81;
    }
    else
    {
      uint64_t v50 = v81;
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v47, v48, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v47, 0, 1, v8);
    }
    uint64_t v51 = _s6StylesV5EmptyVMa(0);
    v82(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
    v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
    uint64_t v52 = v11[14];
    uint64_t v53 = &a1[v52];
    uint64_t v54 = &a2[v52];
    if (v83(&a2[v52], 1, v8))
    {
      sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v53, v54, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v8);
    }
    uint64_t v56 = _s6StylesV5DailyVMa(0);
    v82(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
    v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
    uint64_t v57 = v11[15];
    uint64_t v58 = &a1[v57];
    uint64_t v59 = &a2[v57];
    if (v83(&a2[v57], 1, v8))
    {
      sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v58, v59, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v8);
    }
    a3 = v80;
    uint64_t v61 = _s6StylesV9MomentaryVMa(0);
    v82(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
    uint64_t v62 = v11[16];
    uint64_t v63 = &a1[v62];
    uint64_t v64 = &a2[v62];
    if (v83(&a2[v62], 1, v8))
    {
      sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v63, v64, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v8);
    }
    uint64_t v66 = _s6StylesV6HeaderVMa(0);
    v82(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
    uint64_t v67 = v11[17];
    uint64_t v68 = &a1[v67];
    uint64_t v69 = &a2[v67];
    if (v83(&a2[v67], 1, v8))
    {
      sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v68, v69, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v8);
    }
    uint64_t v71 = _s6StylesV11ChartButtonVMa(0);
    v82(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
    uint64_t v72 = v11[18];
    uint64_t v73 = &a1[v72];
    uint64_t v74 = &a2[v72];
    if (v83(&a2[v72], 1, v8))
    {
      sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v73, v74, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v8);
    }
    uint64_t v76 = _s6StylesV15LogButtonFooterVMa(0);
    v82(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  uint64_t v77 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  *(void *)&a1[v77] = *(void *)&a2[v77];
  return a1;
}

char *sub_2560280C8(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25602A944((uint64_t)a1, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    sub_25602A874(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, v6);
    uint64_t v8 = v7;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_256176AA8();
      uint64_t v10 = *(void *)(v9 - 8);
      uint64_t v83 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
      uint64_t v80 = a3;
      uint64_t v81 = v10;
      if (v83(a2, 1, v9))
      {
        sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(a1, a2, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
      }
      uint64_t v12 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v13 = v12[5];
      uint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      uint64_t v16 = sub_256176158();
      uint64_t v17 = (void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32);
      uint64_t v82 = *v17;
      (*v17)(v14, v15, v16);
      a1[v12[6]] = a2[v12[6]];
      uint64_t v18 = v12[7];
      uint64_t v19 = &a1[v18];
      uint64_t v20 = &a2[v18];
      uint64_t v21 = sub_256175D98();
      uint64_t v79 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32);
      v79(v19, v20, v21);
      uint64_t v22 = v12[8];
      uint64_t v23 = &a1[v22];
      uint64_t v24 = &a2[v22];
      if (v83(&a2[v22], 1, v9))
      {
        sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v23, v24, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v23, 0, 1, v9);
      }
      uint64_t v26 = _s6StylesV8TimelineVMa(0);
      v82(&v23[*(int *)(v26 + 20)], &v24[*(int *)(v26 + 20)], v16);
      uint64_t v27 = v12[9];
      uint64_t v28 = &a1[v27];
      uint64_t v29 = &a2[v27];
      if (v83(&a2[v27], 1, v9))
      {
        sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v28, v29, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v28, 0, 1, v9);
      }
      uint64_t v31 = _s6StylesV6NoDataVMa(0);
      v82(&v28[*(int *)(v31 + 20)], &v29[*(int *)(v31 + 20)], v16);
      v28[*(int *)(v31 + 24)] = v29[*(int *)(v31 + 24)];
      uint64_t v32 = v12[10];
      uint64_t v33 = &a1[v32];
      uint64_t v34 = &a2[v32];
      if (v83(&a2[v32], 1, v9))
      {
        sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v33, v34, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v33, 0, 1, v9);
      }
      uint64_t v36 = _s6StylesV11PlaceholderVMa(0);
      v82(&v33[*(int *)(v36 + 20)], &v34[*(int *)(v36 + 20)], v16);
      uint64_t v37 = v12[11];
      uint64_t v38 = &a1[v37];
      uint64_t v39 = &a2[v37];
      if (v83(&a2[v37], 1, v9))
      {
        sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v38, v39, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v38, 0, 1, v9);
      }
      uint64_t v41 = _s6StylesV6SymbolVMa(0);
      v82(&v38[*(int *)(v41 + 20)], &v39[*(int *)(v41 + 20)], v16);
      uint64_t v42 = v12[12];
      uint64_t v43 = &a1[v42];
      uint64_t v44 = &a2[v42];
      if (v83(&a2[v42], 1, v9))
      {
        sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v43, v44, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v43, 0, 1, v9);
      }
      uint64_t v46 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v82(&v43[v46[5]], &v44[v46[5]], v16);
      v43[v46[6]] = v44[v46[6]];
      v79(&v43[v46[7]], &v44[v46[7]], v21);
      uint64_t v47 = v12[13];
      uint64_t v48 = &a1[v47];
      uint64_t v49 = &a2[v47];
      if (v83(&a2[v47], 1, v9))
      {
        sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
        uint64_t v51 = v81;
      }
      else
      {
        uint64_t v51 = v81;
        (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v48, v49, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v48, 0, 1, v9);
      }
      uint64_t v52 = _s6StylesV5EmptyVMa(0);
      v82(&v48[*(int *)(v52 + 20)], &v49[*(int *)(v52 + 20)], v16);
      v48[*(int *)(v52 + 24)] = v49[*(int *)(v52 + 24)];
      uint64_t v53 = v12[14];
      uint64_t v54 = &a1[v53];
      uint64_t v55 = &a2[v53];
      if (v83(&a2[v53], 1, v9))
      {
        sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v54, v55, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v54, 0, 1, v9);
      }
      uint64_t v57 = _s6StylesV5DailyVMa(0);
      v82(&v54[*(int *)(v57 + 20)], &v55[*(int *)(v57 + 20)], v16);
      v54[*(int *)(v57 + 24)] = v55[*(int *)(v57 + 24)];
      uint64_t v58 = v12[15];
      uint64_t v59 = &a1[v58];
      uint64_t v60 = &a2[v58];
      if (v83(&a2[v58], 1, v9))
      {
        sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v59, v60, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v59, 0, 1, v9);
      }
      uint64_t v62 = _s6StylesV9MomentaryVMa(0);
      v82(&v59[*(int *)(v62 + 20)], &v60[*(int *)(v62 + 20)], v16);
      uint64_t v63 = v12[16];
      uint64_t v64 = &a1[v63];
      uint64_t v65 = &a2[v63];
      if (v83(&a2[v63], 1, v9))
      {
        sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v64, v65, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v64, 0, 1, v9);
      }
      uint64_t v67 = _s6StylesV6HeaderVMa(0);
      v82(&v64[*(int *)(v67 + 20)], &v65[*(int *)(v67 + 20)], v16);
      uint64_t v68 = v12[17];
      uint64_t v69 = &a1[v68];
      uint64_t v70 = &a2[v68];
      if (v83(&a2[v68], 1, v9))
      {
        sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v69, v70, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v69, 0, 1, v9);
      }
      uint64_t v72 = _s6StylesV11ChartButtonVMa(0);
      v82(&v69[*(int *)(v72 + 20)], &v70[*(int *)(v72 + 20)], v16);
      uint64_t v73 = v12[18];
      uint64_t v74 = &a1[v73];
      uint64_t v75 = &a2[v73];
      if (v83(&a2[v73], 1, v9))
      {
        sub_25602A874(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v74, v75, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v74, 0, 1, v9);
      }
      uint64_t v77 = _s6StylesV15LogButtonFooterVMa(0);
      v82(&v74[*(int *)(v77 + 20)], &v75[*(int *)(v77 + 20)], v16);
      swift_storeEnumTagMultiPayload();
      a3 = v80;
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRelease();
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_256028EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256028EF4);
}

uint64_t sub_256028EF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_25602A874(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_256028FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256028FF8);
}

void sub_256028FF8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_25602A874(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

uint64_t _s20EntryMomentsDataViewVMa()
{
  uint64_t result = qword_269F44D50;
  if (!qword_269F44D50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_256029130()
{
  sub_25602A874(319, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_2560291FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_256029218@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v86 = a3;
  uint64_t v5 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v74 = (uint64_t)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = _s5EntryVMa();
  uint64_t v7 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  uint64_t v73 = (uint64_t)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25601CBDC();
  uint64_t v79 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v85 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25602A874(0, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v81 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v87 = (uint64_t)&v72 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v80 = (uint64_t)&v72 - v16;
  sub_256029EE8();
  uint64_t v18 = v17;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v21 = (uint64_t *)((char *)&v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (uint64_t *)((char *)&v72 - v22);
  uint64_t v24 = _s19EntryMomentDataViewVMa();
  MEMORY[0x270FA5388](v24);
  char v89 = (uint64_t *)((char *)&v72 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_256029F54();
  uint64_t v83 = v26;
  MEMORY[0x270FA5388](v26);
  uint64_t v84 = (uint64_t)&v72 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = *(int *)(v18 + 48);
  uint64_t v29 = (uint64_t)v23 + v28;
  uint64_t v30 = (uint64_t)a1 + v28;
  uint64_t v78 = a1;
  uint64_t v31 = *a1;
  *uint64_t v23 = v31;
  uint64_t v75 = v30;
  sub_25602A8D8(v30, (uint64_t)v23 + v28, (uint64_t (*)(void))_s5EntryVMa);
  uint64_t v76 = _s20EntryMomentsDataViewVMa();
  uint64_t v32 = *(int *)(v76 + 24);
  uint64_t v88 = a2;
  uint64_t v33 = *(void **)(a2 + v32);
  uint64_t v90 = v31;
  uint64_t v34 = sub_2561787E8();
  uint64_t v36 = v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v33 = sub_256095C94(0, v33[2] + 1, 1, v33);
  }
  unint64_t v38 = v33[2];
  unint64_t v37 = v33[3];
  if (v38 >= v37 >> 1) {
    uint64_t v33 = sub_256095C94((void *)(v37 > 1), v38 + 1, 1, v33);
  }
  v33[2] = v38 + 1;
  uint64_t v39 = &v33[2 * v38];
  v39[4] = v34;
  v39[5] = v36;
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v41 = v89;
  *char v89 = KeyPath;
  sub_25602A874(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  sub_25602AA00(v29, (uint64_t)v41 + *(int *)(v24 + 20), (uint64_t (*)(void))_s5EntryVMa);
  *(uint64_t *)((char *)v41 + *(int *)(v24 + 24)) = (uint64_t)v33;
  int v77 = sub_256176DA8();
  uint64_t v42 = (uint64_t)v21 + *(int *)(v18 + 48);
  *uint64_t v21 = *v78;
  sub_25602A8D8(v75, v42, (uint64_t (*)(void))_s5EntryVMa);
  uint64_t v43 = v80;
  sub_25602AA00(v42, v80, (uint64_t (*)(void))_s5EntryVMa);
  uint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
  uint64_t v45 = 1;
  uint64_t v46 = v82;
  v44(v43, 0, 1, v82);
  uint64_t v47 = *(void *)(v88 + *(int *)(v76 + 20));
  uint64_t v48 = *(void *)(v47 + 16);
  if (v48)
  {
    uint64_t v49 = v87;
    sub_25602A8D8(v47+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * (v48 - 1), v87, (uint64_t (*)(void))_s5EntryVMa);
    uint64_t v45 = 0;
    uint64_t v50 = (uint64_t)v85;
    uint64_t v51 = (uint64_t)v81;
  }
  else
  {
    uint64_t v50 = (uint64_t)v85;
    uint64_t v51 = (uint64_t)v81;
    uint64_t v49 = v87;
  }
  v44(v49, v45, 1, v46);
  uint64_t v52 = v50 + *(int *)(v79 + 48);
  sub_255FBC8AC(v43, v50);
  sub_255FBC8AC(v49, v52);
  uint64_t v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v53(v50, 1, v46) != 1)
  {
    sub_255FBC8AC(v50, v51);
    if (v53(v52, 1, v46) != 1)
    {
      uint64_t v56 = v73;
      sub_25602AA00(v52, v73, (uint64_t (*)(void))_s5EntryVMa);
      BOOL v57 = sub_256106E8C(v51, v56);
      sub_25602A9A0(v56, (uint64_t (*)(void))_s5EntryVMa);
      uint64_t v58 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
      sub_25602A944(v87, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
      sub_25602A944(v43, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, v58);
      sub_25602A9A0(v51, (uint64_t (*)(void))_s5EntryVMa);
      sub_25602A944(v50, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, v58);
      if (v57) {
        goto LABEL_16;
      }
LABEL_15:
      uint64_t v59 = v74;
      sub_256119CA0(v74);
      sub_25602A9A0(v59, type metadata accessor for StateOfMindTimeline.Styles);
      goto LABEL_16;
    }
    uint64_t v55 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
    sub_25602A944(v87, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
    sub_25602A944(v43, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, v55);
    sub_25602A9A0(v51, (uint64_t (*)(void))_s5EntryVMa);
LABEL_13:
    sub_25602A9A0(v50, (uint64_t (*)(void))sub_25601CBDC);
    goto LABEL_15;
  }
  uint64_t v54 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_25602A944(v49, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
  sub_25602A944(v43, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, v54);
  if (v53(v52, 1, v46) != 1) {
    goto LABEL_13;
  }
  sub_25602A944(v50, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
LABEL_16:
  sub_256175D48();
  uint64_t v61 = v60;
  uint64_t v63 = v62;
  uint64_t v65 = v64;
  uint64_t v67 = v66;
  uint64_t v68 = v89;
  uint64_t v69 = v84;
  sub_25602A8D8((uint64_t)v89, v84, (uint64_t (*)(void))_s19EntryMomentDataViewVMa);
  uint64_t v70 = v69 + *(int *)(v83 + 36);
  *(unsigned char *)uint64_t v70 = v77;
  *(void *)(v70 + 8) = v61;
  *(void *)(v70 + 16) = v63;
  *(void *)(v70 + 24) = v65;
  *(void *)(v70 + 32) = v67;
  *(unsigned char *)(v70 + 40) = 0;
  sub_25602A9A0((uint64_t)v68, (uint64_t (*)(void))_s19EntryMomentDataViewVMa);
  return sub_25602AA00(v69, v86, (uint64_t (*)(void))sub_256029F54);
}

uint64_t sub_256029B4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](a1);
  *(void *)a2 = sub_256176798();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  sub_256029D7C();
  uint64_t v6 = swift_bridgeObjectRetain();
  size_t v7 = sub_2560EC1F4(v6);
  swift_bridgeObjectRelease();
  v11[1] = v7;
  swift_getKeyPath();
  sub_25602A8D8(v2, (uint64_t)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))_s20EntryMomentsDataViewVMa);
  unint64_t v8 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = swift_allocObject();
  sub_25602AA00((uint64_t)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8, (uint64_t (*)(void))_s20EntryMomentsDataViewVMa);
  sub_25602A874(0, &qword_269F44D70, (uint64_t (*)(uint64_t))sub_256029EE8, MEMORY[0x263F8D488]);
  sub_256029F54();
  sub_256029FB4();
  sub_25602A03C(&qword_269F44D90, (void (*)(uint64_t))_s5EntryVMa);
  sub_25602A7CC();
  return sub_2561777C8();
}

void sub_256029D7C()
{
  if (!qword_269F44D60)
  {
    sub_256029DE4();
    unint64_t v0 = sub_256176048();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44D60);
    }
  }
}

void sub_256029DE4()
{
  if (!qword_269F44D68)
  {
    sub_25602A874(255, &qword_269F44D70, (uint64_t (*)(uint64_t))sub_256029EE8, MEMORY[0x263F8D488]);
    _s5EntryVMa();
    sub_256029F54();
    sub_256029FB4();
    sub_25602A03C(&qword_269F44D90, (void (*)(uint64_t))_s5EntryVMa);
    unint64_t v0 = sub_2561777E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44D68);
    }
  }
}

void sub_256029EE8()
{
  if (!qword_269F44D78)
  {
    _s5EntryVMa();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F44D78);
    }
  }
}

void sub_256029F54()
{
  if (!qword_269F44D80)
  {
    _s19EntryMomentDataViewVMa();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44D80);
    }
  }
}

unint64_t sub_256029FB4()
{
  unint64_t result = qword_269F44D88;
  if (!qword_269F44D88)
  {
    sub_25602A874(255, &qword_269F44D70, (uint64_t (*)(uint64_t))sub_256029EE8, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44D88);
  }
  return result;
}

uint64_t sub_25602A03C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25602A084()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(_s20EntryMomentsDataViewVMa() - 8) + 80);
  uint64_t v2 = (v1 + 16) & ~v1;
  uint64_t v3 = v0 + v2;
  sub_25602A874(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256176AA8();
    uint64_t v5 = *(void *)(v4 - 8);
    uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (!v6(v0 + v2, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v2, v4);
    }
    uint64_t v7 = type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v8 = v3 + *(int *)(v7 + 20);
    uint64_t v9 = sub_256176158();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    uint64_t v11 = v8;
    uint64_t v12 = (int *)v7;
    v10(v11, v9);
    uint64_t v13 = v3 + *(int *)(v7 + 28);
    uint64_t v14 = sub_256175D98();
    uint64_t v40 = *(void (**)(uint64_t))(*(void *)(v14 - 8) + 8);
    uint64_t v41 = v14;
    v40(v13);
    uint64_t v15 = v3 + v12[8];
    if (!v6(v15, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v15, v4);
    }
    uint64_t v16 = _s6StylesV8TimelineVMa(0);
    v10(v15 + *(int *)(v16 + 20), v9);
    uint64_t v17 = v3 + v12[9];
    if (!v6(v17, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v17, v4);
    }
    uint64_t v18 = _s6StylesV6NoDataVMa(0);
    v10(v17 + *(int *)(v18 + 20), v9);
    uint64_t v19 = v3 + v12[10];
    if (!v6(v19, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v19, v4);
    }
    uint64_t v20 = _s6StylesV11PlaceholderVMa(0);
    v10(v19 + *(int *)(v20 + 20), v9);
    uint64_t v21 = v3 + v12[11];
    if (!v6(v21, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v21, v4);
    }
    uint64_t v22 = _s6StylesV6SymbolVMa(0);
    v10(v21 + *(int *)(v22 + 20), v9);
    uint64_t v23 = v3 + v12[12];
    if (!v6(v23, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v23, v4);
    }
    uint64_t v42 = v5;
    uint64_t v24 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v10(v23 + *(int *)(v24 + 20), v9);
    ((void (*)(uint64_t, uint64_t))v40)(v23 + *(int *)(v24 + 28), v41);
    uint64_t v25 = v12;
    uint64_t v26 = v3 + v12[13];
    if (!v6(v26, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v26, v4);
    }
    uint64_t v27 = _s6StylesV5EmptyVMa(0);
    v10(v26 + *(int *)(v27 + 20), v9);
    uint64_t v28 = v3 + v25[14];
    if (!v6(v28, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v28, v4);
    }
    uint64_t v29 = _s6StylesV5DailyVMa(0);
    v10(v28 + *(int *)(v29 + 20), v9);
    uint64_t v30 = v3 + v25[15];
    if (!v6(v30, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v30, v4);
    }
    uint64_t v31 = _s6StylesV9MomentaryVMa(0);
    v10(v30 + *(int *)(v31 + 20), v9);
    uint64_t v32 = v3 + v25[16];
    uint64_t v33 = v9;
    if (!v6(v32, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v32, v4);
    }
    uint64_t v34 = _s6StylesV6HeaderVMa(0);
    v10(v32 + *(int *)(v34 + 20), v9);
    uint64_t v35 = v3 + v25[17];
    if (!v6(v35, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v35, v4);
    }
    uint64_t v36 = _s6StylesV11ChartButtonVMa(0);
    v10(v35 + *(int *)(v36 + 20), v9);
    uint64_t v37 = v3 + v25[18];
    if (!v6(v37, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v37, v4);
    }
    uint64_t v38 = _s6StylesV15LogButtonFooterVMa(0);
    v10(v37 + *(int *)(v38 + 20), v33);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_25602A74C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(_s20EntryMomentsDataViewVMa() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_256029218(a1, v6, a2);
}

unint64_t sub_25602A7CC()
{
  unint64_t result = qword_269F44D98;
  if (!qword_269F44D98)
  {
    sub_256029F54();
    sub_25602A03C(&qword_269F44DA0, (void (*)(uint64_t))_s19EntryMomentDataViewVMa);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44D98);
  }
  return result;
}

void sub_25602A874(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_25602A8D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25602A944(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_25602A874(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_25602A9A0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25602AA00(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25602AA68()
{
  return sub_25602A03C(&qword_269F44DA8, (void (*)(uint64_t))sub_25602AAB0);
}

void sub_25602AAB0()
{
  if (!qword_269F44DB0)
  {
    sub_256029DE4();
    sub_25602AB14();
    unint64_t v0 = sub_2561776F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44DB0);
    }
  }
}

unint64_t sub_25602AB14()
{
  unint64_t result = qword_269F44DB8;
  if (!qword_269F44DB8)
  {
    sub_256029DE4();
    sub_25602A7CC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44DB8);
  }
  return result;
}

uint64_t *sub_25602AB84(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_25602AEB8(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_256176AA8();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        sub_25602AEB8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      uint64_t v11 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = *(int *)(a3 + 20);
    uint64_t v16 = (uint64_t *)((char *)a1 + v15);
    uint64_t v17 = (uint64_t *)((char *)a2 + v15);
    sub_25602AEB8(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *uint64_t v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

void sub_25602AEB8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_25602AF1C(uint64_t a1, uint64_t a2)
{
  sub_25602AEB8(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256176AA8();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    }
    uint64_t v6 = a1 + *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    uint64_t v7 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = a1 + *(int *)(a2 + 20);
  sub_25602AEB8(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_256175D98();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    return v10(v8, v9);
  }
  else
  {
    return swift_release();
  }
}

void *sub_25602B12C(void *a1, void *a2, uint64_t a3)
{
  sub_25602AEB8(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256176AA8();
    uint64_t v7 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      sub_25602AEB8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    uint64_t v9 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  sub_25602AEB8(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_256175D98();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    *uint64_t v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_25602B410(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25602B734((uint64_t)a1, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs);
    sub_25602AEB8(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_256176AA8();
      uint64_t v7 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        sub_25602AEB8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      uint64_t v9 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = *(int *)(a3 + 20);
    uint64_t v14 = (void *)((char *)a1 + v13);
    uint64_t v15 = (void *)((char *)a2 + v13);
    uint64_t v16 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    sub_25602B734((uint64_t)a1 + v13, &qword_269F47D00, MEMORY[0x263F18520]);
    sub_25602AEB8(0, &qword_269F47D00, v16, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v14, v15, v17);
    }
    else
    {
      *uint64_t v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_25602B734(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_25602AEB8(0, a2, a3, MEMORY[0x263F185C8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

char *sub_25602B7A4(char *a1, char *a2, uint64_t a3)
{
  sub_25602AEB8(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  uint64_t v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_256176AA8();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      sub_25602AEB8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    uint64_t v11 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    uint64_t v14 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  sub_25602AEB8(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  uint64_t v19 = v18;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = sub_256175D98();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v16, v17, v20);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
  }
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_25602BA98(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25602B734((uint64_t)a1, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs);
    sub_25602AEB8(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    uint64_t v7 = v6;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_256176AA8();
      uint64_t v9 = *(void *)(v8 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
      {
        sub_25602AEB8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      uint64_t v11 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      uint64_t v14 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
    uint64_t v15 = *(int *)(a3 + 20);
    uint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    uint64_t v18 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    sub_25602B734((uint64_t)&a1[v15], &qword_269F47D00, MEMORY[0x263F18520]);
    sub_25602AEB8(0, &qword_269F47D00, v18, MEMORY[0x263F185C8]);
    uint64_t v20 = v19;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_256175D98();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v16, v17, v21);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    }
  }
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_25602BDCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25602BDE0);
}

uint64_t sub_25602BDE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_25602AEB8(0, &qword_269F444B8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185D0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    sub_25602AEB8(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
      if (v14 >= 2) {
        return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_25602BF64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25602BF78);
}

void sub_25602BF78(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_25602AEB8(0, &qword_269F444B8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185D0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    sub_25602AEB8(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
      return;
    }
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for ValenceSliderCaptions()
{
  uint64_t result = qword_269F44DC0;
  if (!qword_269F44DC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_25602C134()
{
  sub_25602AEB8(319, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (v0 <= 0x3F)
  {
    sub_25602AEB8(319, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_25602C264()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25602C280@<X0>(uint64_t a1@<X8>)
{
  uint64_t v56 = a1;
  sub_25602E36C();
  uint64_t v52 = v1;
  uint64_t v2 = MEMORY[0x270FA5388](v1);
  uint64_t v57 = (uint64_t)v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v55 = (uint64_t)v51 - v4;
  sub_25602DC00(0, &qword_269F44DE8, (void (*)(uint64_t))sub_25602DAFC, MEMORY[0x263F1A470]);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v54 = (uint64_t)v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v53 = (uint64_t)v51 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v59 = (uint64_t)v51 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v51 - v12;
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v14 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_2561755B8();
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();

  id v18 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_2561755B8();
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();

  sub_25602C8FC(v15, v17, v19, v21, 1, 0, (uint64_t)v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v22 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_2561755B8();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();

  id v26 = (id)qword_269F50C88;
  uint64_t v58 = v13;
  id v27 = v26;
  swift_bridgeObjectRetain();
  v51[1] = 0xD000000000000026;
  uint64_t v28 = sub_2561755B8();
  uint64_t v30 = v29;
  swift_bridgeObjectRelease();

  sub_25602C8FC(v23, v25, v28, v30, 2, 0, v59);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v31 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_2561755B8();
  uint64_t v34 = v33;
  swift_bridgeObjectRelease();

  id v35 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v36 = sub_2561755B8();
  uint64_t v38 = v37;
  swift_bridgeObjectRelease();

  uint64_t v39 = v53;
  sub_25602C8FC(v32, v34, v36, v38, 2, 1, v53);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v41 = v57;
  sub_25602E47C(v39, v57);
  uint64_t v42 = (uint64_t *)(v41 + *(int *)(v52 + 36));
  *uint64_t v42 = KeyPath;
  v42[1] = 0x3FE999999999999ALL;
  uint64_t v43 = (void (*)(uint64_t))MEMORY[0x263F1A470];
  sub_25602E710(v39, &qword_269F44DE8, (void (*)(uint64_t))sub_25602DAFC, MEMORY[0x263F1A470]);
  uint64_t v44 = v55;
  sub_25602E510(v41, v55);
  sub_25602E47C((uint64_t)v58, v39);
  uint64_t v45 = v59;
  uint64_t v46 = v54;
  sub_25602E47C(v59, v54);
  sub_25602E574(v44, v41, (uint64_t (*)(void))sub_25602E36C);
  uint64_t v47 = v56;
  sub_25602E47C(v39, v56);
  sub_25602DA58();
  uint64_t v49 = v48;
  sub_25602E47C(v46, v47 + *(int *)(v48 + 48));
  sub_25602E574(v41, v47 + *(int *)(v49 + 64), (uint64_t (*)(void))sub_25602E36C);
  sub_25602E6B0(v44, (uint64_t (*)(void))sub_25602E36C);
  sub_25602E710(v45, &qword_269F44DE8, (void (*)(uint64_t))sub_25602DAFC, v43);
  sub_25602E710((uint64_t)v58, &qword_269F44DE8, (void (*)(uint64_t))sub_25602DAFC, v43);
  sub_25602E6B0(v41, (uint64_t (*)(void))sub_25602E36C);
  sub_25602E710(v46, &qword_269F44DE8, (void (*)(uint64_t))sub_25602DAFC, v43);
  return sub_25602E710(v39, &qword_269F44DE8, (void (*)(uint64_t))sub_25602DAFC, v43);
}

uint64_t sub_25602C8FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
  int v104 = a6;
  uint64_t v106 = a5;
  uint64_t v107 = a3;
  uint64_t v105 = a2;
  uint64_t v98 = a7;
  uint64_t v10 = sub_256176158();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v100 = v10;
  uint64_t v101 = v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v99 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F89A5C();
  uint64_t v97 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v96 = (char *)&v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_256177958();
  uint64_t v118 = *(void *)(v120 - 8);
  MEMORY[0x270FA5388](v120);
  int v116 = (char *)&v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_256175D98();
  uint64_t v114 = *(void *)(v16 - 8);
  uint64_t v115 = v16;
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v110 = (char *)&v90 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v112 = (uint64_t)&v90 - v19;
  sub_25602E170();
  uint64_t v111 = v20;
  MEMORY[0x270FA5388](v20);
  uint64_t v113 = (char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_256176EE8();
  uint64_t v22 = *(void *)(v102 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v102);
  uint64_t v91 = (char *)&v90 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v92 = (char *)&v90 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v90 = (char *)&v90 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v90 - v29;
  uint64_t v31 = type metadata accessor for ValenceSelectionPhaseSpecs();
  uint64_t v32 = MEMORY[0x270FA5388](v31);
  uint64_t v117 = (uint64_t)&v90 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v36 = (char *)&v90 - v35;
  MEMORY[0x270FA5388](v34);
  uint64_t v38 = (char *)&v90 - v37;
  sub_25602DC74();
  uint64_t v108 = *(void *)(v39 - 8);
  uint64_t v109 = v39;
  MEMORY[0x270FA5388](v39);
  uint64_t v123 = (char *)&v90 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25602DC00(0, &qword_269F44DF8, (void (*)(uint64_t))sub_25602DC74, (void (*)(uint64_t))sub_25602E0DC);
  uint64_t v121 = v41;
  MEMORY[0x270FA5388](v41);
  id v119 = (char *)&v90 - v42;
  sub_25602DAFC();
  uint64_t v94 = *(void *)(v43 - 8);
  uint64_t v95 = v43;
  MEMORY[0x270FA5388](v43);
  uint64_t v93 = (char *)&v90 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_256176658();
  sub_25602D550(a1, v105, v106, v107, a4, (uint64_t)v128);
  uint64_t v45 = (void (**)(char *, void, uint64_t))(v22 + 104);
  uint64_t v107 = v22;
  uint64_t v46 = (void (**)(char *, char *, uint64_t))(v22 + 32);
  uint64_t v122 = v7;
  if (v104)
  {
    sub_25611BB38((uint64_t)v38);
    sub_256176F18();
    char v47 = sub_256176138();
    uint64_t v48 = (unsigned int *)MEMORY[0x263F1A680];
    if ((v47 & 1) == 0) {
      uint64_t v48 = (unsigned int *)MEMORY[0x263F1A688];
    }
    uint64_t v49 = v90;
    uint64_t v50 = v102;
    (*v45)(v90, *v48, v102);
    (*v46)(v30, v49, v50);
    uint64_t v51 = sub_256176F08();
  }
  else
  {
    sub_25611BB38((uint64_t)v36);
    sub_256176EF8();
    char v52 = sub_256176138();
    uint64_t v53 = (unsigned int *)MEMORY[0x263F1A680];
    if ((v52 & 1) == 0) {
      uint64_t v53 = (unsigned int *)MEMORY[0x263F1A688];
    }
    uint64_t v54 = v91;
    uint64_t v50 = v102;
    (*v45)(v91, *v53, v102);
    uint64_t v30 = v92;
    (*v46)(v92, v54, v50);
    uint64_t v51 = sub_256176F08();
    uint64_t v38 = v36;
  }
  swift_release();
  (*(void (**)(char *, uint64_t))(v107 + 8))(v30, v50);
  sub_25602E6B0((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhaseSpecs);
  *(_OWORD *)((char *)&v125[12] + 7) = v128[12];
  *(_OWORD *)((char *)&v125[13] + 7) = v128[13];
  *(_OWORD *)((char *)&v125[14] + 7) = v129[0];
  v125[15] = *(_OWORD *)((char *)v129 + 9);
  *(_OWORD *)((char *)&v125[8] + 7) = v128[8];
  *(_OWORD *)((char *)&v125[9] + 7) = v128[9];
  *(_OWORD *)((char *)&v125[10] + 7) = v128[10];
  *(_OWORD *)((char *)&v125[11] + 7) = v128[11];
  *(_OWORD *)((char *)&v125[4] + 7) = v128[4];
  *(_OWORD *)((char *)&v125[5] + 7) = v128[5];
  *(_OWORD *)((char *)&v125[6] + 7) = v128[6];
  *(_OWORD *)((char *)&v125[7] + 7) = v128[7];
  *(_OWORD *)((char *)v125 + 7) = v128[0];
  *(_OWORD *)((char *)&v125[1] + 7) = v128[1];
  *(_OWORD *)((char *)&v125[2] + 7) = v128[2];
  char v126 = 0;
  *(_OWORD *)((char *)&v125[3] + 7) = v128[3];
  uint64_t KeyPath = swift_getKeyPath();
  *(_OWORD *)((char *)&v127[32] + 1) = v125[15];
  *(_OWORD *)((char *)&v127[26] + 1) = v125[12];
  *(_OWORD *)((char *)&v127[28] + 1) = v125[13];
  *(_OWORD *)((char *)&v127[30] + 1) = v125[14];
  *(_OWORD *)((char *)&v127[18] + 1) = v125[8];
  *(_OWORD *)((char *)&v127[20] + 1) = v125[9];
  *(_OWORD *)((char *)&v127[22] + 1) = v125[10];
  *(_OWORD *)((char *)&v127[24] + 1) = v125[11];
  *(_OWORD *)((char *)&v127[10] + 1) = v125[4];
  *(_OWORD *)((char *)&v127[12] + 1) = v125[5];
  *(_OWORD *)((char *)&v127[14] + 1) = v125[6];
  *(_OWORD *)((char *)&v127[16] + 1) = v125[7];
  *(_OWORD *)((char *)&v127[2] + 1) = v125[0];
  *(_OWORD *)((char *)&v127[4] + 1) = v125[1];
  *(_OWORD *)((char *)&v127[6] + 1) = v125[2];
  v127[0] = v103;
  v127[1] = 0;
  LOBYTE(v127[2]) = 0;
  *(_OWORD *)((char *)&v127[8] + 1) = v125[3];
  v127[35] = KeyPath;
  v127[36] = v51;
  memcpy(v124, v127, sizeof(v124));
  sub_256176E88();
  sub_25602DCF8();
  sub_25602E034();
  sub_256177068();
  sub_25602E5E4((uint64_t)v127);
  LODWORD(v106) = sub_256176A48();
  uint64_t v107 = type metadata accessor for ValenceSliderCaptions();
  uint64_t v56 = v122;
  uint64_t v57 = v112;
  sub_25611A114(v112);
  uint64_t v59 = v114;
  uint64_t v58 = v115;
  uint64_t v60 = v110;
  (*(void (**)(char *, void, uint64_t))(v114 + 104))(v110, *MEMORY[0x263F184F8], v115);
  char v61 = sub_256175D88();
  uint64_t v62 = *(void (**)(char *, uint64_t))(v59 + 8);
  v62(v60, v58);
  uint64_t v63 = (unsigned int *)MEMORY[0x263F1B968];
  if ((v61 & 1) == 0) {
    uint64_t v63 = (unsigned int *)MEMORY[0x263F1B950];
  }
  uint64_t v64 = v118;
  uint64_t v65 = v116;
  uint64_t v66 = v120;
  (*(void (**)(char *, void, uint64_t))(v118 + 104))(v116, *v63, v120);
  uint64_t v67 = v113;
  (*(void (**)(char *, char *, uint64_t))(v64 + 16))(&v113[*(int *)(v111 + 36)], v65, v66);
  *uint64_t v67 = v106;
  v67[1] = 1053609165;
  (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v66);
  v62((char *)v57, v58);
  uint64_t v68 = v121;
  uint64_t v69 = (uint64_t)v119;
  sub_25602E574((uint64_t)v67, (uint64_t)&v119[*(int *)(v121 + 36)], (uint64_t (*)(void))sub_25602E170);
  uint64_t v71 = v108;
  uint64_t v70 = v109;
  uint64_t v72 = v123;
  (*(void (**)(uint64_t, char *, uint64_t))(v108 + 16))(v69, v123, v109);
  sub_25602E6B0((uint64_t)v67, (uint64_t (*)(void))sub_25602E170);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v70);
  uint64_t v73 = v117;
  sub_25611BB38(v117);
  char v74 = *(unsigned char *)(v56 + *(int *)(v107 + 24));
  uint64_t result = (uint64_t)(id)MobileGestalt_get_current_device();
  if (result)
  {
    uint64_t v76 = (void *)result;
    int homeButtonType = MobileGestalt_get_homeButtonType();

    if (homeButtonType == 2)
    {
      uint64_t v78 = v101;
      uint64_t v79 = *(void (**)(char *, uint64_t, uint64_t))(v101 + 104);
      if (v74) {
        uint64_t v80 = (unsigned int *)MEMORY[0x263F18D70];
      }
      else {
        uint64_t v80 = (unsigned int *)MEMORY[0x263F18CB8];
      }
      uint64_t v81 = *v80;
    }
    else
    {
      uint64_t v81 = *MEMORY[0x263F18CC8];
      uint64_t v78 = v101;
      uint64_t v79 = *(void (**)(char *, uint64_t, uint64_t))(v101 + 104);
    }
    uint64_t v83 = v99;
    uint64_t v82 = v100;
    v79(v99, v81, v100);
    sub_25602E6B0(v73, (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhaseSpecs);
    sub_25602E7C4(&qword_269F433E0, MEMORY[0x263F18D80]);
    uint64_t result = sub_256177E98();
    if (result)
    {
      uint64_t v84 = (uint64_t)v96;
      (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v96, v83, v82);
      unint64_t v85 = sub_25602E264();
      uint64_t v86 = sub_25602E7C4((unint64_t *)&qword_269F43368, (void (*)(uint64_t))sub_255F89A5C);
      uint64_t v87 = v93;
      uint64_t v88 = v97;
      sub_256177138();
      sub_25602E6B0(v84, (uint64_t (*)(void))sub_255F89A5C);
      sub_25602E710(v69, &qword_269F44DF8, (void (*)(uint64_t))sub_25602DC74, (void (*)(uint64_t))sub_25602E0DC);
      v124[0] = v68;
      v124[1] = v88;
      v124[2] = v85;
      v124[3] = v86;
      swift_getOpaqueTypeConformance2();
      uint64_t v89 = v95;
      sub_2561771E8();
      return (*(uint64_t (**)(char *, uint64_t))(v94 + 8))(v87, v89);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_25602D550@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v58 = a4;
  uint64_t v60 = a3;
  uint64_t v10 = type metadata accessor for ValenceSelectionPhaseSpecs();
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v53 - v14;
  uint64_t v71 = a1;
  uint64_t v72 = a2;
  sub_255F5CE90();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_256177028();
  uint64_t v61 = v17;
  int v55 = v18;
  uint64_t v63 = v19;
  uint64_t KeyPath = swift_getKeyPath();
  int v57 = sub_256176DC8();
  uint64_t v20 = sub_25611BB38((uint64_t)v15);
  if ((sub_25605FF84(v20) & 1) == 0) {
    sub_256176138();
  }
  sub_25602E6B0((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhaseSpecs);
  sub_256175D48();
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v59 = swift_getKeyPath();
  uint64_t v71 = v58;
  uint64_t v72 = a5;
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_256177028();
  uint64_t v31 = v30;
  char v33 = v32;
  uint64_t v58 = v34;
  uint64_t v56 = swift_getKeyPath();
  int v54 = sub_256176DB8();
  uint64_t v35 = sub_25611BB38((uint64_t)v13);
  if ((sub_25605FF84(v35) & 1) == 0) {
    sub_256176138();
  }
  char v36 = v33 & 1;
  char v37 = v55 & 1;
  sub_25602E6B0((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhaseSpecs);
  sub_256175D48();
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v46 = swift_getKeyPath();
  char v64 = v37;
  LOBYTE(v71) = v37;
  char v70 = 0;
  char v69 = 0;
  char v68 = 1;
  char v67 = v36;
  char v66 = 0;
  char v65 = 0;
  uint64_t v47 = v61;
  *(void *)a6 = v16;
  *(void *)(a6 + 8) = v47;
  *(unsigned char *)(a6 + 16) = v37;
  uint64_t v48 = v16;
  uint64_t v53 = v16;
  uint64_t v49 = KeyPath;
  *(void *)(a6 + 24) = v63;
  *(void *)(a6 + 32) = v49;
  *(_WORD *)(a6 + 40) = 0;
  *(unsigned char *)(a6 + 42) = 1;
  *(unsigned char *)(a6 + 48) = v57;
  *(void *)(a6 + 56) = v22;
  *(void *)(a6 + 64) = v24;
  *(void *)(a6 + 72) = v26;
  *(void *)(a6 + 80) = v28;
  *(unsigned char *)(a6 + 88) = 0;
  uint64_t v50 = v60;
  *(void *)(a6 + 96) = v59;
  *(void *)(a6 + 104) = v50;
  *(unsigned char *)(a6 + 112) = 0;
  *(void *)(a6 + 120) = 0;
  *(unsigned char *)(a6 + 128) = 1;
  *(void *)(a6 + 136) = v29;
  *(void *)(a6 + 144) = v31;
  *(unsigned char *)(a6 + 152) = v36;
  uint64_t v51 = v56;
  *(void *)(a6 + 160) = v58;
  *(void *)(a6 + 168) = v51;
  *(_WORD *)(a6 + 176) = 2;
  *(unsigned char *)(a6 + 178) = 1;
  *(unsigned char *)(a6 + 184) = v54;
  *(void *)(a6 + 192) = v39;
  *(void *)(a6 + 200) = v41;
  *(void *)(a6 + 208) = v43;
  *(void *)(a6 + 216) = v45;
  *(unsigned char *)(a6 + 224) = 0;
  *(void *)(a6 + 232) = v46;
  *(void *)(a6 + 240) = v50;
  *(unsigned char *)(a6 + 248) = 0;
  sub_255F67B94(v48, v47, v37);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_255F67B94(v29, v31, v36);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_255F67B2C(v29, v31, v36);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_255F67B2C(v53, v47, v64);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25602D97C@<X0>(unsigned char *a1@<X8>)
{
  *a1 = sub_256176D58();
  sub_25602D9BC();
  return sub_25602C280((uint64_t)&a1[*(int *)(v2 + 44)]);
}

void sub_25602D9BC()
{
  if (!qword_269F44DD0)
  {
    sub_25602AEB8(255, &qword_269F44DD8, (uint64_t (*)(uint64_t))sub_25602DA58, MEMORY[0x263F1BAC8]);
    sub_255FD6E40();
    unint64_t v0 = sub_256176048();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44DD0);
    }
  }
}

void sub_25602DA58()
{
  if (!qword_269F44DE0)
  {
    sub_25602DC00(255, &qword_269F44DE8, (void (*)(uint64_t))sub_25602DAFC, MEMORY[0x263F1A470]);
    sub_25602E36C();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_269F44DE0);
    }
  }
}

void sub_25602DAFC()
{
  if (!qword_269F44DF0)
  {
    sub_25602DC00(255, &qword_269F44DF8, (void (*)(uint64_t))sub_25602DC74, (void (*)(uint64_t))sub_25602E0DC);
    sub_255F89A5C();
    sub_25602E264();
    sub_25602E7C4((unint64_t *)&qword_269F43368, (void (*)(uint64_t))sub_255F89A5C);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F44DF0);
    }
  }
}

void sub_25602DC00(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    unint64_t v6 = sub_2561761B8();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_25602DC74()
{
  if (!qword_269F44E00)
  {
    sub_25602DCF8();
    sub_25602E034();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F44E00);
    }
  }
}

void sub_25602DCF8()
{
  if (!qword_269F44E08)
  {
    sub_25602DD78();
    sub_25602DFC8(255, (unint64_t *)&qword_269F42BD8, (unint64_t *)&qword_269F42BE0, MEMORY[0x263F1A738]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44E08);
    }
  }
}

void sub_25602DD78()
{
  if (!qword_269F44E10)
  {
    sub_25602AEB8(255, &qword_269F44E18, (uint64_t (*)(uint64_t))sub_25602DE2C, MEMORY[0x263F1BAC8]);
    sub_25602E8C0(&qword_269F44E48, &qword_269F44E18, (uint64_t (*)(uint64_t))sub_25602DE2C);
    unint64_t v0 = sub_2561775F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44E10);
    }
  }
}

void sub_25602DE2C()
{
  if (!qword_269F44E20)
  {
    sub_25602DE98();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_269F44E20);
    }
  }
}

void sub_25602DE98()
{
  if (!qword_269F44E28)
  {
    sub_25602DF64(255, &qword_269F44E30, sub_25602DF3C);
    sub_25602DFC8(255, (unint64_t *)&qword_269F44E40, &qword_26B2ACE00, MEMORY[0x263F8D6C8]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44E28);
    }
  }
}

void sub_25602DF3C(uint64_t a1)
{
}

void sub_25602DF64(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_25602DFC8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_25602E428(255, a3, a4, MEMORY[0x263F8D8F0]);
    unint64_t v5 = sub_256176D28();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_25602E034()
{
  unint64_t result = qword_269F44E50;
  if (!qword_269F44E50)
  {
    sub_25602DCF8();
    sub_25602E7C4(&qword_269F44E58, (void (*)(uint64_t))sub_25602DD78);
    sub_255F6759C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44E50);
  }
  return result;
}

void sub_25602E0DC()
{
  if (!qword_269F44E60)
  {
    sub_25602E170();
    sub_25602E7C4(&qword_269F44E80, (void (*)(uint64_t))sub_25602E170);
    unint64_t v0 = sub_256176B78();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44E60);
    }
  }
}

void sub_25602E170()
{
  if (!qword_269F44E68)
  {
    sub_25602E204();
    sub_25602E7C4((unint64_t *)&qword_269F44E78, (void (*)(uint64_t))sub_25602E204);
    unint64_t v0 = sub_256176988();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44E68);
    }
  }
}

void sub_25602E204()
{
  if (!qword_269F44E70)
  {
    unint64_t v0 = sub_256176718();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44E70);
    }
  }
}

unint64_t sub_25602E264()
{
  unint64_t result = qword_269F44E88;
  if (!qword_269F44E88)
  {
    sub_25602DC00(255, &qword_269F44DF8, (void (*)(uint64_t))sub_25602DC74, (void (*)(uint64_t))sub_25602E0DC);
    sub_25602DCF8();
    sub_25602E034();
    swift_getOpaqueTypeConformance2();
    sub_25602E7C4(&qword_269F44E90, (void (*)(uint64_t))sub_25602E0DC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F44E88);
  }
  return result;
}

void sub_25602E36C()
{
  if (!qword_269F44E98)
  {
    sub_25602DC00(255, &qword_269F44DE8, (void (*)(uint64_t))sub_25602DAFC, MEMORY[0x263F1A470]);
    sub_25602E428(255, &qword_269F44EA0, MEMORY[0x263F8EF38], MEMORY[0x263F1A418]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44E98);
    }
  }
}

void sub_25602E428(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_25602E47C(uint64_t a1, uint64_t a2)
{
  sub_25602DC00(0, &qword_269F44DE8, (void (*)(uint64_t))sub_25602DAFC, MEMORY[0x263F1A470]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25602E510(uint64_t a1, uint64_t a2)
{
  sub_25602E36C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25602E574(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25602E5E4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 160);
  uint64_t v3 = *(void *)(a1 + 168);
  char v4 = *(unsigned char *)(a1 + 176);
  sub_255F67B2C(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_255F67B2C(v2, v3, v4);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t sub_25602E6B0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25602E710(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  sub_25602DC00(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_25602E77C()
{
  return sub_25602E7C4(&qword_269F44EA8, (void (*)(uint64_t))sub_25602E80C);
}

uint64_t sub_25602E7C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_25602E80C()
{
  if (!qword_269F44EB0)
  {
    sub_25602AEB8(255, &qword_269F44DD8, (uint64_t (*)(uint64_t))sub_25602DA58, MEMORY[0x263F1BAC8]);
    sub_25602E8C0(&qword_269F44EB8, &qword_269F44DD8, (uint64_t (*)(uint64_t))sub_25602DA58);
    unint64_t v0 = sub_256175F28();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44EB0);
    }
  }
}

uint64_t sub_25602E8C0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25602AEB8(255, a2, a3, MEMORY[0x263F1BAC8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t MentalWellbeingNotificationSettingsView.init(settingsModel:assessmentsSettingModel:navigationTitleText:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_256177568();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)a5 = sub_255F67F50;
  *(void *)(a5 + 8) = a2;
  *(unsigned char *)(a5 + 16) = 0;
  *(void *)(a5 + 24) = sub_25602EA20;
  *(void *)(a5 + 32) = result;
  *(unsigned char *)(a5 + 40) = 0;
  *(void *)(a5 + 48) = a3;
  *(void *)(a5 + 56) = a4;
  *(unsigned char *)(a5 + 64) = v11;
  *(void *)(a5 + 72) = v12;
  return result;
}

uint64_t sub_25602E9E8()
{
  return swift_deallocObject();
}

id sub_25602EA20()
{
  return *(id *)(v0 + 16);
}

uint64_t MentalWellbeingNotificationSettingsView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v2 = sub_2561769B8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25602ED8C();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25602F02C();
  uint64_t v21 = v11;
  uint64_t v22 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v14 = v1[3];
  v30[2] = v1[2];
  long long v31 = v14;
  long long v32 = v1[4];
  long long v15 = v1[1];
  v30[0] = *v1;
  v30[1] = v15;
  uint64_t v24 = v30;
  sub_25602EE3C(0);
  sub_25602F100(&qword_269F44EF8, sub_25602EE3C);
  sub_256176F68();
  sub_2561769A8();
  uint64_t v16 = sub_25602F100(&qword_269F44F08, (void (*)(uint64_t))sub_25602ED8C);
  uint64_t v17 = MEMORY[0x263F19D08];
  sub_256177388();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  long long v29 = v31;
  uint64_t v25 = v7;
  uint64_t v26 = v2;
  uint64_t v27 = v16;
  uint64_t v28 = v17;
  swift_getOpaqueTypeConformance2();
  sub_255F5CE90();
  uint64_t v18 = v21;
  sub_256177158();
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v13, v18);
}

void sub_25602ED8C()
{
  if (!qword_269F44EC0)
  {
    sub_25602EE3C(255);
    sub_25602F100(&qword_269F44EF8, sub_25602EE3C);
    unint64_t v0 = sub_256176F78();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44EC0);
    }
  }
}

void sub_25602EE3C(uint64_t a1)
{
}

void sub_25602EE70()
{
  if (!qword_269F44ED0)
  {
    sub_25602EF08(255, &qword_269F44ED8, (uint64_t (*)(uint64_t))sub_25602EF6C, MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F44ED0);
    }
  }
}

void sub_25602EF08(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_25602EF6C(uint64_t a1)
{
}

void sub_25602EFA0()
{
  if (!qword_269F44EE8)
  {
    sub_25602FB60(255, &qword_269F44EF0, (uint64_t)&type metadata for LinkToMindSettingsButton, MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F44EE8);
    }
  }
}

void sub_25602F02C()
{
  if (!qword_269F44F00)
  {
    sub_25602ED8C();
    sub_2561769B8();
    sub_25602F100(&qword_269F44F08, (void (*)(uint64_t))sub_25602ED8C);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F44F00);
    }
  }
}

uint64_t sub_25602F100(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_25602F148@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t result = objc_msgSend(self, sel_sharedBehavior);
  if (result)
  {
    uint64_t v5 = result;
    unsigned __int8 v6 = objc_msgSend(result, sel_isiPad);

    if (v6)
    {
      sub_25602FD50(&v29);
    }
    else
    {
      sub_25602F9E4(a1);
      type metadata accessor for NotificationSettingsModel();
      sub_25602F100((unint64_t *)&qword_269F43720, (void (*)(uint64_t))type metadata accessor for NotificationSettingsModel);
      sub_256175E28();
      sub_25602FA58(a1);
      sub_256075C24((uint64_t)&v38);
      sub_25602F9E4(a1);
      uint64_t v7 = (void *)sub_256175E28();
      sub_25602FA58(a1);
      Swift::Bool v8 = NotificationSettingsModel.shouldShowMindfulnessSettingsButton()();

      uint64_t v9 = 0;
      uint64_t v10 = 0;
      if (v8)
      {
        if (qword_269F42348 != -1) {
          swift_once();
        }
        id v11 = (id)qword_269F50C88;
        swift_bridgeObjectRetain();
        uint64_t v9 = sub_2561755B8();
        uint64_t v10 = v12;
        swift_bridgeObjectRelease();
      }
      long long v29 = v38;
      v30[0] = v39 & 1;
      *(_OWORD *)&v30[8] = v40;
      *(_OWORD *)&v30[24] = v41;
      *(_OWORD *)&v30[40] = v42;
      *(_OWORD *)&v30[56] = v43;
      *(_OWORD *)&v30[72] = v44;
      *(void *)&v30[88] = v45;
      *(void *)&long long v31 = v9;
      *((void *)&v31 + 1) = v10;
      nullsub_1(&v29);
    }
    sub_25602FACC((uint64_t)&v29, (uint64_t)v37);
    sub_25602F9E4(a1);
    type metadata accessor for AssessmentsSettingsModel();
    sub_25602F100(&qword_269F44F10, (void (*)(uint64_t))type metadata accessor for AssessmentsSettingsModel);
    sub_256175E28();
    type metadata accessor for NotificationSettingsModel();
    sub_25602F100((unint64_t *)&qword_269F43720, (void (*)(uint64_t))type metadata accessor for NotificationSettingsModel);
    sub_256175E28();
    v36[0] = *(_OWORD *)(a1 + 64);
    sub_25602FB60(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
    sub_256177598();
    sub_25602FA58(a1);
    long long v13 = v29;
    char v26 = v30[0];
    uint64_t v14 = sub_2561760E8();
    uint64_t v16 = v15;
    uint64_t v17 = sub_2561760E8();
    uint64_t v19 = v18;
    sub_25602FACC((uint64_t)v37, (uint64_t)v27);
    sub_25602FACC((uint64_t)v27, (uint64_t)v28);
    sub_25602FACC((uint64_t)v28, (uint64_t)&v29);
    *(void *)&long long v32 = v14;
    *((void *)&v32 + 1) = v16;
    *(void *)&long long v33 = v17;
    *((void *)&v33 + 1) = v19;
    long long v34 = v13;
    LOBYTE(v35) = v26;
    *((void *)&v35 + 1) = &unk_2704B6200;
    long long v20 = *(_OWORD *)&v30[64];
    a2[4] = *(_OWORD *)&v30[48];
    a2[5] = v20;
    long long v21 = v31;
    a2[6] = *(_OWORD *)&v30[80];
    a2[7] = v21;
    long long v22 = *(_OWORD *)v30;
    *a2 = v29;
    a2[1] = v22;
    long long v23 = *(_OWORD *)&v30[32];
    a2[2] = *(_OWORD *)&v30[16];
    a2[3] = v23;
    long long v24 = v33;
    a2[8] = v32;
    a2[9] = v24;
    long long v25 = v35;
    a2[10] = v34;
    a2[11] = v25;
    sub_25602FC4C(v28, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25602FBAC);
    sub_25602FACC((uint64_t)v27, (uint64_t)v36);
    return sub_25602FC4C(v36, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25602FCB0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_25602F5C4@<X0>(_OWORD *a1@<X8>)
{
  return sub_25602F148(*(void *)(v1 + 16), a1);
}

uint64_t sub_25602F5CC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25602F5EC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return MEMORY[0x270F9A8A0]();
  }
  else {
    return swift_retain();
  }
}

uint64_t destroy for MentalWellbeingNotificationSettingsView(uint64_t a1)
{
  sub_255F6806C();
  sub_255FE84F8(*(void *)(a1 + 24), *(void **)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for MentalWellbeingNotificationSettingsView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_255F68064();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  char v9 = *((unsigned char *)a2 + 40);
  sub_25602F5EC(v7, v8, v9);
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = v9;
  uint64_t v10 = a2[7];
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
  *(void *)(a1 + 72) = a2[9];
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MentalWellbeingNotificationSettingsView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_255F68064();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_255F6806C();
  uint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  char v9 = *((unsigned char *)a2 + 40);
  sub_25602F5EC(v7, v8, v9);
  uint64_t v10 = *(void *)(a1 + 24);
  id v11 = *(void **)(a1 + 32);
  char v12 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = v9;
  sub_255FE84F8(v10, v11, v12);
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
  *(void *)(a1 + 72) = a2[9];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for MentalWellbeingNotificationSettingsView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_255F6806C();
  char v5 = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void **)(a1 + 32);
  char v8 = *(unsigned char *)(a1 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = v5;
  sub_255FE84F8(v6, v7, v8);
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MentalWellbeingNotificationSettingsView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MentalWellbeingNotificationSettingsView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MentalWellbeingNotificationSettingsView()
{
  return &type metadata for MentalWellbeingNotificationSettingsView;
}

uint64_t sub_25602F8F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25602F9E4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  char v4 = *(unsigned char *)(a1 + 40);
  sub_255F68064();
  sub_25602F5EC(v2, v3, v4);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_25602FA58(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void **)(a1 + 32);
  char v4 = *(unsigned char *)(a1 + 40);
  sub_255F6806C();
  sub_255FE84F8(v2, v3, v4);
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t sub_25602FACC(uint64_t a1, uint64_t a2)
{
  sub_25602EF08(0, &qword_269F44ED8, (uint64_t (*)(uint64_t))sub_25602EF6C, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_25602FB60(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_25602FBAC(uint64_t a1, void *a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    id v3 = a2;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void *sub_25602FC4C(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_25602FCB0(uint64_t a1, void *a2)
{
  if (a2)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

double sub_25602FD50(_OWORD *a1)
{
  double result = 0.0;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

void *sub_25602FD68(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  id v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *id v3 = *a2;
    id v3 = (void *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    uint64_t v5 = a2[3];
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(void *)(a1 + 24) = v5;
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (void *)(a1 + v6);
    char v8 = (uint64_t *)((char *)a2 + v6);
    sub_255F63CE8(0);
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_256176AA8();
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        sub_2560323FC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      uint64_t v13 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
      uint64_t v14 = (char *)v7 + v13;
      uint64_t v15 = (char *)v8 + v13;
      uint64_t v16 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_25602FFD8(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  sub_255F63CE8(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_256176AA8();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
    uint64_t v7 = v4 + *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
    uint64_t v8 = sub_256176158();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v9(v7, v8);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_256030138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (void *)(a2 + v5);
  sub_255F63CE8(0);
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_256176AA8();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      sub_2560323FC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
    uint64_t v11 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
    uint64_t v12 = (char *)v6 + v11;
    uint64_t v13 = (char *)v7 + v11;
    uint64_t v14 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    *uint64_t v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_256030350(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_25603286C((uint64_t)a1 + v7, (uint64_t (*)(void))sub_255F63CE8);
    sub_255F63CE8(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_256176AA8();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        sub_2560323FC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      uint64_t v13 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
      uint64_t v14 = (char *)v8 + v13;
      uint64_t v15 = (char *)v9 + v13;
      uint64_t v16 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_256030594(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  sub_255F63CE8(0);
  uint64_t v9 = v8;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_256176AA8();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10))
    {
      sub_2560323FC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v6, v7, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v6, v7, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
    }
    uint64_t v13 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
    uint64_t v14 = &v6[v13];
    uint64_t v15 = &v7[v13];
    uint64_t v16 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_25603078C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)(a1 + v7);
    uint64_t v9 = (char *)(a2 + v7);
    sub_25603286C(a1 + v7, (uint64_t (*)(void))sub_255F63CE8);
    sub_255F63CE8(0);
    uint64_t v11 = v10;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_256176AA8();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12))
      {
        sub_2560323FC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v8, v9, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
      }
      uint64_t v15 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
      uint64_t v16 = &v8[v15];
      uint64_t v17 = &v9[v15];
      uint64_t v18 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2560309C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2560309DC);
}

uint64_t sub_2560309DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_2560323FC(0, &qword_269F42B50, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_256030ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256030AD0);
}

uint64_t sub_256030AD0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_2560323FC(0, &qword_269F42B50, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for IntroPhaseContent()
{
  uint64_t result = qword_269F44F18;
  if (!qword_269F44F18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_256030BF4()
{
  sub_255F63CE8(319);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_256030C98()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_256030CB4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v157 = a2;
  uint64_t v3 = type metadata accessor for IntroPhaseContent();
  uint64_t v4 = v3 - 8;
  uint64_t v139 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v140 = v5;
  uint64_t v142 = (uint64_t)&v138 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F9A1B0();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v144 = (char *)&v138 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256032398(0, &qword_269F44338, (void (*)(uint64_t))sub_255F9A1B0);
  uint64_t v143 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v146 = (uint64_t)&v138 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v145 = (uint64_t)&v138 - v11;
  sub_2560322AC(0);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v156 = (uint64_t *)((char *)&v138 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v13);
  uint64_t v167 = (uint64_t)&v138 - v15;
  uint64_t v153 = type metadata accessor for IntroPhaseBulletView();
  MEMORY[0x270FA5388](v153);
  uint64_t v17 = (char *)&v138 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256032398(0, &qword_269F44F48, (void (*)(uint64_t))type metadata accessor for IntroPhaseBulletView);
  uint64_t v164 = v18;
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v155 = (uint64_t)&v138 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v165 = (uint64_t)&v138 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v163 = (uint64_t)&v138 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v169 = (uint64_t)&v138 - v25;
  sub_255FEAD0C(0);
  MEMORY[0x270FA5388](v26 - 8);
  uint64_t v151 = (uint64_t *)((char *)&v138 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = type metadata accessor for IntroPhaseHeaderText();
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = (uint64_t *)((char *)&v138 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_256032398(0, &qword_269F44F40, (void (*)(uint64_t))type metadata accessor for IntroPhaseHeaderText);
  int v150 = v31;
  uint64_t v32 = MEMORY[0x270FA5388](v31);
  long long v34 = (char *)&v138 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v32);
  uint64_t v168 = (uint64_t)&v138 - v35;
  uint64_t v36 = type metadata accessor for IntroPhaseSpecs();
  uint64_t v37 = MEMORY[0x270FA5388](v36);
  uint64_t v162 = (uint64_t)&v138 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v37);
  long long v40 = (char *)&v138 - v39;
  int v154 = sub_256176D98();
  uint64_t v41 = *(int *)(v4 + 32);
  uint64_t v141 = a1;
  uint64_t v170 = a1 + v41;
  sub_25611A408((uint64_t)v40);
  uint64_t v152 = v36;
  sub_256176138();
  sub_25603286C((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for IntroPhaseSpecs);
  sub_256175D48();
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v50 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v51 = sub_2561755B8();
  uint64_t v53 = v52;
  swift_bridgeObjectRelease();

  uint64_t KeyPath = swift_getKeyPath();
  int v55 = v151;
  *uint64_t v151 = KeyPath;
  sub_2560323FC(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  uint64_t v158 = v56;
  swift_storeEnumTagMultiPayload();
  *(uint64_t *)((char *)v30 + *(int *)(v28 + 24)) = swift_getKeyPath();
  sub_255F63CE8(0);
  uint64_t v160 = v57;
  swift_storeEnumTagMultiPayload();
  *uint64_t v30 = v51;
  v30[1] = v53;
  uint64_t v58 = (uint64_t)v30 + *(int *)(v28 + 20);
  uint64_t v161 = sub_255FEAD0C;
  sub_2560328CC((uint64_t)v55, v58, (uint64_t (*)(void))sub_255FEAD0C);
  LOBYTE(v51) = sub_256176D98();
  uint64_t v59 = v162;
  sub_25611A408(v162);
  uint64_t v159 = type metadata accessor for IntroPhaseSpecs;
  sub_25603286C(v59, (uint64_t (*)(void))type metadata accessor for IntroPhaseSpecs);
  sub_256175D48();
  uint64_t v61 = v60;
  uint64_t v63 = v62;
  uint64_t v65 = v64;
  uint64_t v67 = v66;
  sub_256032804((uint64_t)v30, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for IntroPhaseHeaderText);
  char v68 = &v34[*((int *)v150 + 9)];
  *char v68 = v51;
  *((void *)v68 + 1) = v61;
  *((void *)v68 + 2) = v63;
  *((void *)v68 + 3) = v65;
  *((void *)v68 + 4) = v67;
  v68[40] = 0;
  sub_25603286C((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for IntroPhaseHeaderText);
  uint64_t v166 = v34;
  sub_256032464((uint64_t)v34, v168, &qword_269F44F40, (void (*)(uint64_t))type metadata accessor for IntroPhaseHeaderText);
  id v69 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v70 = sub_2561755B8();
  uint64_t v72 = v71;
  swift_bridgeObjectRelease();

  id v73 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v74 = sub_2561755B8();
  uint64_t v76 = v75;
  swift_bridgeObjectRelease();

  *int v55 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  uint64_t v77 = swift_getKeyPath();
  uint64_t v78 = v153;
  *(void *)&v17[*(int *)(v153 + 32)] = v77;
  swift_storeEnumTagMultiPayload();
  *(void *)uint64_t v17 = v70;
  *((void *)v17 + 1) = v72;
  *((void *)v17 + 2) = v74;
  *((void *)v17 + 3) = v76;
  v17[32] = 7;
  sub_2560328CC((uint64_t)v55, (uint64_t)&v17[*(int *)(v78 + 28)], (uint64_t (*)(void))v161);
  LOBYTE(v70) = sub_256176D98();
  sub_25611A408(v59);
  sub_25603286C(v59, (uint64_t (*)(void))v159);
  sub_256175D48();
  uint64_t v80 = v79;
  uint64_t v82 = v81;
  uint64_t v84 = v83;
  uint64_t v86 = v85;
  int v150 = type metadata accessor for IntroPhaseBulletView;
  uint64_t v87 = v163;
  sub_256032804((uint64_t)v17, v163, (uint64_t (*)(void))type metadata accessor for IntroPhaseBulletView);
  uint64_t v88 = v87 + *((int *)v164 + 9);
  *(unsigned char *)uint64_t v88 = v70;
  *(void *)(v88 + 8) = v80;
  *(void *)(v88 + 16) = v82;
  *(void *)(v88 + 24) = v84;
  *(void *)(v88 + 32) = v86;
  *(unsigned char *)(v88 + 40) = 0;
  uint64_t v149 = type metadata accessor for IntroPhaseBulletView;
  sub_25603286C((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for IntroPhaseBulletView);
  v148 = type metadata accessor for IntroPhaseBulletView;
  sub_256032464(v87, v169, &qword_269F44F48, (void (*)(uint64_t))type metadata accessor for IntroPhaseBulletView);
  id v89 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v147 = sub_2561755B8();
  uint64_t v91 = v90;
  swift_bridgeObjectRelease();

  id v92 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v93 = sub_2561755B8();
  uint64_t v95 = v94;
  swift_bridgeObjectRelease();

  *int v55 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  *(void *)&v17[*(int *)(v78 + 32)] = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  *(void *)uint64_t v17 = v147;
  *((void *)v17 + 1) = v91;
  *((void *)v17 + 2) = v93;
  *((void *)v17 + 3) = v95;
  v17[32] = 1;
  sub_2560328CC((uint64_t)v55, (uint64_t)&v17[*(int *)(v78 + 28)], (uint64_t (*)(void))v161);
  LOBYTE(v91) = sub_256176D98();
  uint64_t v96 = v162;
  sub_25611A408(v162);
  uint64_t v97 = v159;
  sub_25603286C(v96, (uint64_t (*)(void))v159);
  sub_256175D48();
  uint64_t v99 = v98;
  uint64_t v101 = v100;
  uint64_t v103 = v102;
  uint64_t v105 = v104;
  sub_256032804((uint64_t)v17, v87, (uint64_t (*)(void))v150);
  uint64_t v106 = v87 + *((int *)v164 + 9);
  *(unsigned char *)uint64_t v106 = v91;
  *(void *)(v106 + 8) = v99;
  *(void *)(v106 + 16) = v101;
  *(void *)(v106 + 24) = v103;
  *(void *)(v106 + 32) = v105;
  *(unsigned char *)(v106 + 40) = 0;
  sub_25603286C((uint64_t)v17, (uint64_t (*)(void))v149);
  uint64_t v107 = v165;
  sub_256032464(v87, v165, &qword_269F44F48, (void (*)(uint64_t))v148);
  sub_25611A408(v96);
  uint64_t v108 = v152;
  LOBYTE(v91) = sub_256176138();
  sub_25603286C(v96, (uint64_t (*)(void))v97);
  if (v91)
  {
    uint64_t v109 = v96;
    sub_25611A408(v96);
    uint64_t v164 = type metadata accessor for IntroPhaseSpecs;
    sub_25603286C(v96, (uint64_t (*)(void))type metadata accessor for IntroPhaseSpecs);
    uint64_t v175 = v108;
    char v176 = &off_2704BBA48;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v174);
    sub_25611A408((uint64_t)boxed_opaque_existential_1);
    uint64_t v111 = v142;
    sub_256032804(v141, v142, (uint64_t (*)(void))type metadata accessor for IntroPhaseContent);
    unint64_t v112 = (*(unsigned __int8 *)(v139 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80);
    uint64_t v113 = swift_allocObject();
    sub_2560328CC(v111, v113 + v112, (uint64_t (*)(void))type metadata accessor for IntroPhaseContent);
    v177 = 0;
    LOBYTE(v178) = 1;
    sub_2560327B8(0, (unint64_t *)&qword_269F43C20, MEMORY[0x263F8D538], MEMORY[0x263F8D8F0]);
    sub_256177768();
    long long v180 = v171;
    uint64_t v181 = v172;
    char v182 = v173;
    sub_255F9A6BC(&v174, (uint64_t)v179);
    v177 = sub_256032754;
    uint64_t v178 = v113;
    v183 = sub_256031FD0;
    uint64_t v184 = 0;
    *(void *)&long long v174 = &unk_2704B5358;
    sub_255FCD3A4((uint64_t)&unk_2704B6238);
    sub_2560327B8(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
    sub_255F744D8();
    sub_256177E28();
    swift_bridgeObjectRelease();
    sub_256020B94(0, (unint64_t *)&qword_269F435E0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for ActionButton);
    sub_255FDF22C();
    uint64_t v114 = (uint64_t)v144;
    sub_256177238();
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    sub_25602110C((uint64_t)&v177);
    LOBYTE(v112) = sub_256176DA8();
    sub_25611A408(v109);
    sub_25603286C(v109, (uint64_t (*)(void))v164);
    sub_256175D48();
    uint64_t v116 = v115;
    uint64_t v118 = v117;
    uint64_t v120 = v119;
    uint64_t v122 = v121;
    uint64_t v123 = v146;
    sub_256032804(v114, v146, (uint64_t (*)(void))sub_255F9A1B0);
    uint64_t v124 = v123 + *(int *)(v143 + 36);
    *(unsigned char *)uint64_t v124 = v112;
    *(void *)(v124 + 8) = v116;
    *(void *)(v124 + 16) = v118;
    *(void *)(v124 + 24) = v120;
    *(void *)(v124 + 32) = v122;
    *(unsigned char *)(v124 + 40) = 0;
    sub_25603286C(v114, (uint64_t (*)(void))sub_255F9A1B0);
    uint64_t v125 = v145;
    sub_256032464(v123, v145, &qword_269F44338, (void (*)(uint64_t))sub_255F9A1B0);
    sub_2560324D0(v125, v123, &qword_269F44338, (void (*)(uint64_t))sub_255F9A1B0);
    uint64_t v126 = (uint64_t)v156;
    *uint64_t v156 = 0x4038000000000000;
    *(unsigned char *)(v126 + 8) = 0;
    sub_256032314();
    sub_2560324D0(v123, v126 + *(int *)(v127 + 48), &qword_269F44338, (void (*)(uint64_t))sub_255F9A1B0);
    sub_25603253C(v125, &qword_269F44338, (void (*)(uint64_t))sub_255F9A1B0);
    sub_25603253C(v123, &qword_269F44338, (void (*)(uint64_t))sub_255F9A1B0);
    sub_2560322E0(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v128 - 8) + 56))(v126, 0, 1, v128);
    uint64_t v129 = v167;
    sub_2560328CC(v126, v167, (uint64_t (*)(void))sub_2560322AC);
  }
  else
  {
    sub_2560322E0(0);
    uint64_t v129 = v167;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v130 - 8) + 56))(v167, 1, 1, v130);
    uint64_t v126 = (uint64_t)v156;
  }
  uint64_t v131 = (uint64_t)v166;
  sub_2560324D0(v168, (uint64_t)v166, &qword_269F44F40, (void (*)(uint64_t))type metadata accessor for IntroPhaseHeaderText);
  sub_2560324D0(v169, v87, &qword_269F44F48, (void (*)(uint64_t))type metadata accessor for IntroPhaseBulletView);
  uint64_t v132 = v107;
  uint64_t v133 = v155;
  sub_2560324D0(v132, v155, &qword_269F44F48, (void (*)(uint64_t))type metadata accessor for IntroPhaseBulletView);
  sub_256032804(v129, v126, (uint64_t (*)(void))sub_2560322AC);
  uint64_t v134 = v157;
  *uint64_t v157 = v154;
  *((void *)v134 + 1) = v43;
  *((void *)v134 + 2) = v45;
  *((void *)v134 + 3) = v47;
  *((void *)v134 + 4) = v49;
  v134[40] = 0;
  sub_2560321B4();
  uint64_t v136 = v135;
  sub_2560324D0(v131, (uint64_t)&v134[v135[12]], &qword_269F44F40, (void (*)(uint64_t))type metadata accessor for IntroPhaseHeaderText);
  sub_2560324D0(v87, (uint64_t)&v134[v136[16]], &qword_269F44F48, (void (*)(uint64_t))type metadata accessor for IntroPhaseBulletView);
  sub_2560324D0(v133, (uint64_t)&v134[v136[20]], &qword_269F44F48, (void (*)(uint64_t))type metadata accessor for IntroPhaseBulletView);
  sub_256032804(v126, (uint64_t)&v134[v136[24]], (uint64_t (*)(void))sub_2560322AC);
  sub_25603286C(v167, (uint64_t (*)(void))sub_2560322AC);
  sub_25603253C(v165, &qword_269F44F48, (void (*)(uint64_t))type metadata accessor for IntroPhaseBulletView);
  sub_25603253C(v169, &qword_269F44F48, (void (*)(uint64_t))type metadata accessor for IntroPhaseBulletView);
  sub_25603253C(v168, &qword_269F44F40, (void (*)(uint64_t))type metadata accessor for IntroPhaseHeaderText);
  sub_25603286C(v126, (uint64_t (*)(void))sub_2560322AC);
  sub_25603253C(v133, &qword_269F44F48, (void (*)(uint64_t))type metadata accessor for IntroPhaseBulletView);
  sub_25603253C(v163, &qword_269F44F48, (void (*)(uint64_t))type metadata accessor for IntroPhaseBulletView);
  return sub_25603253C((uint64_t)v166, &qword_269F44F40, (void (*)(uint64_t))type metadata accessor for IntroPhaseHeaderText);
}

uint64_t sub_256031FD0@<X0>(uint64_t a1@<X8>)
{
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v2 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  sub_2561755B8();
  swift_bridgeObjectRelease();

  sub_255F5CE90();
  uint64_t result = sub_256177028();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5 & 1;
  *(void *)(a1 + 24) = v6;
  return result;
}

uint64_t sub_2560320D4@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_256176788();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  sub_256032118();
  return sub_256030CB4(v1, (unsigned char *)(a1 + *(int *)(v3 + 44)));
}

void sub_256032118()
{
  if (!qword_269F44F28)
  {
    sub_256032180(255);
    unint64_t v0 = sub_256176048();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44F28);
    }
  }
}

void sub_256032180(uint64_t a1)
{
}

void sub_2560321B4()
{
  if (!qword_269F44F38)
  {
    sub_256020B94(255, &qword_269F44C70, (uint64_t)&type metadata for StateOfMindHeaderImage, MEMORY[0x263F18C18], MEMORY[0x263F18E28]);
    sub_256032398(255, &qword_269F44F40, (void (*)(uint64_t))type metadata accessor for IntroPhaseHeaderText);
    sub_256032398(255, &qword_269F44F48, (void (*)(uint64_t))type metadata accessor for IntroPhaseBulletView);
    sub_2560322AC(255);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_269F44F38);
    }
  }
}

void sub_2560322AC(uint64_t a1)
{
}

void sub_2560322E0(uint64_t a1)
{
}

void sub_256032314()
{
  if (!qword_269F44F60)
  {
    sub_256032398(255, &qword_269F44338, (void (*)(uint64_t))sub_255F9A1B0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F44F60);
    }
  }
}

void sub_256032398(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_2560323FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_256032464(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_256032398(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_2560324D0(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_256032398(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_25603253C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_256032398(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_256032598()
{
  uint64_t v1 = (int *)(type metadata accessor for IntroPhaseContent() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_release();
  swift_release();
  uint64_t v3 = v2 + v1[8];
  sub_255F63CE8(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256176AA8();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    }
    uint64_t v6 = v3 + *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
    uint64_t v7 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_256032754()
{
  uint64_t v1 = *(void *)(type metadata accessor for IntroPhaseContent() - 8);
  return (*(uint64_t (**)(void))(v0
                              + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
                              + 16))();
}

void sub_2560327B8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_256032804(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25603286C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2560328CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_256032934()
{
  return sub_25603297C(&qword_269F44F68, (void (*)(uint64_t))sub_2560329C4);
}

uint64_t sub_25603297C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2560329C4()
{
  if (!qword_269F44F70)
  {
    sub_256032180(255);
    sub_25603297C(&qword_269F44F78, sub_256032180);
    unint64_t v0 = sub_2561776F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44F70);
    }
  }
}

uint64_t sub_256032A58(void *a1)
{
  int v1 = 0;
  uint64_t v2 = 0;
  uint64_t v3 = (char *)MEMORY[0x263F8EE78];
  uint64_t v4 = (void *)MEMORY[0x263F8EE78];
  while (2)
  {
    uint64_t v5 = 0;
    uint64_t v29 = v2 + 1;
    do
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v4 = sub_256096954(0, v4[2] + 1, 1, v4);
      }
      unint64_t v7 = v4[2];
      unint64_t v6 = v4[3];
      if (v7 >= v6 >> 1) {
        uint64_t v4 = sub_256096954((void *)(v6 > 1), v7 + 1, 1, v4);
      }
      *(float *)&unint64_t v8 = (float)((float)((float)v5 / 15.0) + (float)((float)v5 / 15.0)) + -1.0;
      *((float *)&v8 + 1) = (float)((float)((float)v2 / 15.0) + (float)((float)v2 / 15.0)) + -1.0;
      v4[2] = v7 + 1;
      *(_OWORD *)&v4[2 * v7 + 4] = v8;
      if ((unint64_t)v2 > 0xE || (unint64_t)v5 >= 0xF)
      {
        uint64_t v9 = MEMORY[0x263F8EE78];
        uint64_t v11 = *(void *)(MEMORY[0x263F8EE78] + 16);
      }
      else
      {
        sub_256032F88();
        uint64_t v9 = swift_allocObject();
        *(_OWORD *)(v9 + 16) = xmmword_2561A3CC0;
        *(_DWORD *)(v9 + 32) = v1 + v5;
        *(_DWORD *)(v9 + 36) = v1 + v5 + 1;
        int v10 = v1 + v5 + 17;
        *(_DWORD *)(v9 + 40) = v10;
        *(_DWORD *)(v9 + 44) = v1 + v5;
        uint64_t v11 = 6;
        *(_DWORD *)(v9 + 48) = v10;
        *(_DWORD *)(v9 + 52) = v1 + v5 + 16;
      }
      int64_t v12 = *((void *)v3 + 2);
      int64_t v13 = v12 + v11;
      if (__OFADD__(v12, v11))
      {
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        goto LABEL_41;
      }
      isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
      if (isUniquelyReferenced_nonNull_native && v13 <= *((void *)v3 + 3) >> 1)
      {
        if (!*(void *)(v9 + 16)) {
          goto LABEL_4;
        }
      }
      else
      {
        if (v12 <= v13) {
          int64_t v15 = v12 + v11;
        }
        else {
          int64_t v15 = v12;
        }
        uint64_t v3 = sub_2560966E8(isUniquelyReferenced_nonNull_native, v15, 1, v3);
        if (!*(void *)(v9 + 16))
        {
LABEL_4:
          if (v11) {
            goto LABEL_38;
          }
          goto LABEL_5;
        }
      }
      uint64_t v16 = *((void *)v3 + 2);
      if ((*((void *)v3 + 3) >> 1) - v16 < v11) {
        goto LABEL_39;
      }
      uint64_t v17 = &v3[4 * v16 + 32];
      if (v9 + 32 < (unint64_t)&v17[4 * v11] && (unint64_t)v17 < v9 + 32 + 4 * v11) {
        goto LABEL_43;
      }
      memcpy(v17, (const void *)(v9 + 32), 4 * v11);
      if (v11)
      {
        uint64_t v19 = *((void *)v3 + 2);
        BOOL v20 = __OFADD__(v19, v11);
        uint64_t v21 = v19 + v11;
        if (v20) {
          goto LABEL_40;
        }
        *((void *)v3 + 2) = v21;
      }
LABEL_5:
      ++v5;
      swift_bridgeObjectRelease();
    }
    while (v5 != 16);
    v1 += 16;
    ++v2;
    if (v29 != 16) {
      continue;
    }
    break;
  }
  unint64_t v22 = v4[2];
  v28[4] = v22;
  v28[5] = *((void *)v3 + 2);
  if (v22 >> 58)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  id v23 = objc_msgSend(a1, sel_newBufferWithBytes_length_options_, v4 + 4, 32 * v22, 0);
  swift_bridgeObjectRelease();
  v28[6] = v23;
  swift_unknownObjectRelease();
  uint64_t v24 = v28[5];
  if ((unint64_t)(v24 - 0x2000000000000000) >> 62 != 3)
  {
LABEL_42:
    __break(1u);
LABEL_43:
    uint64_t result = sub_2561786C8();
    __break(1u);
    return result;
  }
  id v25 = objc_msgSend(a1, sel_newBufferWithBytes_length_options_, v3 + 32, 4 * v24, 0);
  swift_bridgeObjectRelease();
  v28[7] = v25;

  return swift_unknownObjectRelease();
}

uint64_t sub_256032DB8()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for QuadMesh()
{
  return self;
}

id sub_256032E1C()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F12A80]), sel_init);
  id v1 = objc_msgSend(v0, sel_attributes);
  id v2 = objc_msgSend(v0, sel_layouts);
  id result = objc_msgSend(v1, sel_objectAtIndexedSubscript_, 0);
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v4 = result;
  objc_msgSend(result, sel_setFormat_, 30);

  id result = objc_msgSend(v1, sel_objectAtIndexedSubscript_, 0);
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v5 = result;
  objc_msgSend(result, sel_setOffset_, 0);

  id result = objc_msgSend(v1, sel_objectAtIndexedSubscript_, 0);
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  unint64_t v6 = result;
  objc_msgSend(result, sel_setBufferIndex_, 0);

  id result = objc_msgSend(v2, sel_objectAtIndexedSubscript_, 0);
  if (result)
  {
    unint64_t v7 = result;
    objc_msgSend(result, sel_setStride_, 16);

    return v0;
  }
LABEL_9:
  __break(1u);
  return result;
}

void sub_256032F88()
{
  if (!qword_269F44F80[0])
  {
    unint64_t v0 = sub_2561787F8();
    if (!v1) {
      atomic_store(v0, qword_269F44F80);
    }
  }
}

uint64_t sub_256032FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 48);
}

void sub_256032FE8()
{
  sub_256036B9C(319, &qword_269F440E8, MEMORY[0x263F18D80], MEMORY[0x263F185C8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_2560330E8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = a2[3];
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    *(void *)(a1 + 56) = a2[7];
    uint64_t v7 = a2[10];
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    uint64_t v8 = *(int *)(a3 + 60);
    uint64_t v9 = (void *)(a1 + v8);
    int v10 = (uint64_t *)((char *)a2 + v8);
    *(void *)(a1 + 80) = v7;
    sub_256036B9C(0, &qword_269F440E8, MEMORY[0x263F18D80], MEMORY[0x263F185C8]);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_256176158();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v5;
}

uint64_t sub_2560332BC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 60);
  sub_256036B9C(0, &qword_269F440E8, MEMORY[0x263F18D80], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_256176158();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_2560333C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v7 = *(int *)(a3 + 60);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *(void *)(a1 + 80) = v6;
  sub_256036B9C(0, &qword_269F440E8, MEMORY[0x263F18D80], MEMORY[0x263F185C8]);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_256176158();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_256033540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v8 = *(int *)(a3 + 60);
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (void *)(a2 + v8);
    uint64_t v11 = (uint64_t (*)(uint64_t))MEMORY[0x263F18D80];
    int64_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_2560367D0(a1 + v8, (uint64_t)&qword_269F440E8, MEMORY[0x263F18D80], MEMORY[0x263F185C8], (uint64_t (*)(void))sub_256036B9C);
    sub_256036B9C(0, &qword_269F440E8, v11, v12);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_256176158();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v9, v10, v13);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_25603371C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v4 = *(int *)(a3 + 60);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  sub_256036B9C(0, &qword_269F440E8, MEMORY[0x263F18D80], MEMORY[0x263F185C8]);
  uint64_t v8 = v7;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_256176158();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v5, v6, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_25603384C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 60);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (const void *)(a2 + v6);
    uint64_t v9 = (uint64_t (*)(uint64_t))MEMORY[0x263F18D80];
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_2560367D0(a1 + v6, (uint64_t)&qword_269F440E8, MEMORY[0x263F18D80], MEMORY[0x263F185C8], (uint64_t (*)(void))sub_256036B9C);
    sub_256036B9C(0, &qword_269F440E8, v9, v10);
    uint64_t v12 = v11;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_256176158();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v7, v8, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_256033A00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256033A14);
}

uint64_t sub_256033A14(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_256036B9C(0, &qword_269F44188, MEMORY[0x263F18D80], MEMORY[0x263F185D0]);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 60);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_256033AF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256033B08);
}

void *sub_256033B08(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *id result = (a2 - 1);
  }
  else
  {
    sub_256036B9C(0, &qword_269F44188, MEMORY[0x263F18D80], MEMORY[0x263F185D0]);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 60);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for TagPicker()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_256033BF8()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_256033C3C(void *a1)
{
  id v1 = objc_msgSend(a1, sel_userInterfaceStyle);
  id v2 = objc_msgSend(self, sel_whiteColor);
  int v3 = v2;
  double v4 = 0.6;
  if (v1 == (id)2) {
    double v4 = 0.12;
  }
  id v5 = objc_msgSend(v2, sel_colorWithAlphaComponent_, v4);

  return v5;
}

id sub_256033CC8(void *a1)
{
  id v1 = objc_msgSend(a1, sel_userInterfaceStyle);
  id v2 = self;
  if (v1 == (id)2)
  {
    id v3 = objc_msgSend(v2, sel_whiteColor);
    id v4 = objc_msgSend(v3, sel_colorWithAlphaComponent_, 0.8);
  }
  else
  {
    id v3 = objc_msgSend(v2, sel_blackColor);
    id v4 = objc_msgSend(v3, sel_colorWithAlphaComponent_, 0.4);
  }
  id v5 = v4;

  return v5;
}

id sub_256033D70(void *a1)
{
  id v1 = objc_msgSend(a1, sel_userInterfaceStyle);
  id v2 = self;
  if (v1 == (id)2)
  {
    id v3 = objc_msgSend(v2, sel_blackColor);
    id v4 = objc_msgSend(v3, sel_colorWithAlphaComponent_, 0.8);

    return v4;
  }
  else
  {
    id v6 = objc_msgSend(v2, sel_whiteColor);
    return v6;
  }
}

id sub_256033E1C(void *a1)
{
  id v1 = objc_msgSend(a1, sel_userInterfaceStyle);
  id v2 = self;
  id v3 = &selRef_whiteColor;
  if (v1 != (id)2) {
    id v3 = &selRef_blackColor;
  }
  id v4 = [v2 *v3];

  return v4;
}

uint64_t sub_256033E88()
{
  sub_256178078();
  uint64_t v0 = sub_256177778();
  MEMORY[0x25A2A01A0](&v2, v0);
  return v2;
}

uint64_t sub_256033EE4()
{
  return sub_256177728();
}

uint64_t sub_256033F40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v25[1] = a2;
  sub_256035B90();
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = sub_256178078();
  sub_256035DBC(255, &qword_269F45020, sub_256035C40, MEMORY[0x263F1A470]);
  uint64_t v7 = v6;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v33 = v5;
  uint64_t v34 = v4;
  uint64_t v35 = v7;
  uint64_t v36 = WitnessTable;
  uint64_t v37 = v9;
  sub_2561777E8();
  sub_256036000(&qword_269F45098, (void (*)(uint64_t))sub_256035B90);
  uint64_t v10 = sub_256176048();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v25 - v15;
  uint64_t v17 = *(void *)(v2 + 40);
  uint64_t v18 = *(void *)(v2 + 48);
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = v4;
  v19[3] = v9;
  v19[4] = v17;
  v19[5] = v18;
  uint64_t v27 = v4;
  uint64_t v28 = v9;
  uint64_t v29 = v2;
  sub_256034238((uint64_t)sub_2560362FC, (uint64_t)v26, (uint64_t)v14);
  swift_release();
  uint64_t v20 = sub_256036000(&qword_269F450A0, (void (*)(uint64_t))sub_256035B90);
  unint64_t v32 = sub_256036308();
  uint64_t v21 = swift_getWitnessTable();
  uint64_t v30 = v20;
  uint64_t v31 = v21;
  uint64_t v22 = swift_getWitnessTable();
  sub_25605CACC(v14, v10, v22);
  id v23 = *(void (**)(char *, uint64_t))(v11 + 8);
  v23(v14, v10);
  sub_25605CACC(v16, v10, v22);
  return ((uint64_t (*)(char *, uint64_t))v23)(v16, v10);
}

uint64_t sub_256034238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_256178078();
  sub_256035DBC(255, &qword_269F45020, sub_256035C40, MEMORY[0x263F1A470]);
  swift_getWitnessTable();
  uint64_t v6 = sub_2561777E8();
  unint64_t v7 = sub_256035BEC();
  sub_256036308();
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_255FD93E8(a1, a2, (uint64_t)&type metadata for TagLayout, v6, v7, WitnessTable, a3);
}

uint64_t sub_256034368@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v36 = a4;
  uint64_t v31 = type metadata accessor for TagPicker();
  uint64_t v7 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v9 = (char *)&KeyPath - v8;
  uint64_t v10 = sub_256178078();
  uint64_t v34 = v10;
  sub_256035DBC(255, &qword_269F45020, sub_256035C40, MEMORY[0x263F1A470]);
  uint64_t v12 = v11;
  uint64_t v33 = v11;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v40 = v10;
  uint64_t v41 = a2;
  uint64_t v42 = v12;
  uint64_t v43 = WitnessTable;
  uint64_t v44 = a3;
  uint64_t v13 = sub_2561777E8();
  uint64_t v35 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&KeyPath - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v30 = (char *)&KeyPath - v17;
  uint64_t v18 = a1;
  uint64_t v40 = *a1;
  uint64_t v37 = a2;
  uint64_t v38 = a3;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v19 = v9;
  uint64_t v20 = v18;
  uint64_t v21 = v31;
  (*(void (**)(char *, void *, uint64_t))(v7 + 16))(v9, v20, v31);
  unint64_t v22 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = a2;
  *(void *)(v23 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v23 + v22, v19, v21);
  unint64_t v24 = sub_256036308();
  swift_bridgeObjectRetain();
  sub_2561777C8();
  unint64_t v39 = v24;
  uint64_t v25 = swift_getWitnessTable();
  uint64_t v26 = v30;
  sub_25605CACC(v16, v13, v25);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v35 + 8);
  v27(v16, v13);
  sub_25605CACC(v26, v13, v25);
  return ((uint64_t (*)(char *, uint64_t))v27)(v26, v13);
}

uint64_t sub_2560346B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v133 = a5;
  uint64_t v132 = sub_256176748();
  uint64_t v131 = *(void *)(v132 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v132);
  uint64_t v130 = &v103[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v124 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v122 = v11;
  uint64_t v123 = &v103[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for TagPicker();
  uint64_t v121 = *(void *)(v12 - 8);
  uint64_t v116 = *(void *)(v121 + 64);
  MEMORY[0x270FA5388](v12);
  uint64_t v118 = &v103[-v13];
  sub_256035EBC();
  uint64_t v112 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v113 = &v103[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v111 = sub_256176158();
  uint64_t v110 = *(void *)(v111 - 8);
  MEMORY[0x270FA5388](v111);
  uint64_t v109 = &v103[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = sub_256176EE8();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = &v103[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_256035DBC(0, &qword_269F45040, (void (*)(uint64_t))sub_256035E30, (void (*)(uint64_t))sub_256035EBC);
  uint64_t v108 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = &v103[-v22];
  sub_256035CF8();
  uint64_t v134 = v24;
  MEMORY[0x270FA5388](v24);
  uint64_t v115 = &v103[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_256035C74();
  uint64_t v120 = v26;
  uint64_t v119 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v117 = &v103[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_256035C40(0);
  uint64_t v128 = v28;
  MEMORY[0x270FA5388](v28);
  uint64_t v129 = &v103[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_256035DBC(0, &qword_269F45020, sub_256035C40, MEMORY[0x263F1A470]);
  MEMORY[0x270FA5388](v30 - 8);
  uint64_t v126 = &v103[-v31];
  uint64_t v114 = v12;
  aBlock = (void *)sub_256033E88();
  uint64_t v127 = a3;
  sub_256178078();
  swift_getWitnessTable();
  uint64_t v125 = a4;
  int v137 = sub_256177FB8();
  swift_bridgeObjectRelease();
  unint64_t v32 = *(uint64_t (**)(uint64_t))(a2 + 56);
  uint64_t v135 = a2;
  uint64_t v136 = a1;
  aBlock = (void *)v32(a1);
  uint64_t v142 = v33;
  sub_255F5CE90();
  uint64_t v34 = sub_256177028();
  uint64_t v36 = v35;
  LOBYTE(a2) = v37 & 1;
  sub_256176DF8();
  (*(void (**)(unsigned char *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x263F1A680], v17);
  sub_256176F08();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v20, v17);
  uint64_t v38 = sub_256176FD8();
  uint64_t v40 = v39;
  char v42 = v41;
  swift_release();
  sub_255F67B2C(v34, v36, a2);
  swift_bridgeObjectRelease();
  id v43 = objc_allocWithZone(MEMORY[0x263F825C8]);
  if (v137)
  {
    uint64_t v145 = sub_256033D70;
    uint64_t v146 = 0;
    aBlock = (void *)MEMORY[0x263EF8330];
    uint64_t v142 = 1107296256;
    uint64_t v44 = &block_descriptor_7;
  }
  else
  {
    uint64_t v145 = sub_256033E1C;
    uint64_t v146 = 0;
    aBlock = (void *)MEMORY[0x263EF8330];
    uint64_t v142 = 1107296256;
    uint64_t v44 = &block_descriptor_4;
  }
  uint64_t v143 = sub_2560520D4;
  uint64_t v144 = v44;
  uint64_t v45 = _Block_copy(&aBlock);
  id v46 = objc_msgSend(v43, sel_initWithDynamicProvider_, v45);
  _Block_release(v45);
  swift_release();
  MEMORY[0x25A29FE80](v46);
  uint64_t v106 = sub_256176F98();
  uint64_t v105 = v47;
  char v49 = v48;
  uint64_t v107 = v50;
  swift_release();
  sub_255F67B2C(v38, v40, v42 & 1);
  swift_bridgeObjectRelease();
  int v104 = sub_256176DD8();
  uint64_t v51 = v114;
  uint64_t v52 = v135;
  uint64_t v53 = v109;
  sub_25611B56C((uint64_t)v109);
  sub_256176138();
  int v54 = *(void (**)(unsigned char *, uint64_t))(v110 + 8);
  uint64_t v55 = v111;
  v54(v53, v111);
  sub_256175D48();
  uint64_t v57 = v56;
  uint64_t v59 = v58;
  uint64_t v61 = v60;
  uint64_t v63 = v62;
  char v64 = sub_256176D78();
  sub_25611B56C((uint64_t)v53);
  sub_256176138();
  v54(v53, v55);
  sub_256175D48();
  uint64_t v66 = v65;
  uint64_t v68 = v67;
  uint64_t v70 = v69;
  uint64_t v72 = v71;
  char v140 = v49 & 1;
  char v139 = 0;
  char v138 = 0;
  uint64_t v73 = sub_2561778E8();
  uint64_t v75 = v74;
  LOBYTE(v54) = v137 & 1;
  uint64_t v76 = v113;
  sub_256035594(v137 & 1, (uint64_t)v113);
  uint64_t v77 = (uint64_t *)&v76[*(int *)(v112 + 36)];
  *uint64_t v77 = v73;
  v77[1] = v75;
  sub_256036D98((uint64_t)v76, (uint64_t)&v23[*(int *)(v108 + 36)], (uint64_t (*)(void))sub_256035EBC);
  uint64_t v78 = v105;
  *(void *)uint64_t v23 = v106;
  *((void *)v23 + 1) = v78;
  v23[16] = v140;
  *((void *)v23 + 3) = v107;
  v23[32] = v104;
  *((void *)v23 + 5) = v57;
  *((void *)v23 + 6) = v59;
  *((void *)v23 + 7) = v61;
  *((void *)v23 + 8) = v63;
  v23[72] = v139;
  v23[80] = v64;
  *((void *)v23 + 11) = v66;
  *((void *)v23 + 12) = v68;
  *((void *)v23 + 13) = v70;
  *((void *)v23 + 14) = v72;
  v23[120] = v138;
  sub_2560366DC((uint64_t)v76, (uint64_t (*)(void))sub_256035EBC);
  uint64_t v79 = v115;
  sub_25603673C((uint64_t)v23, (uint64_t)v115);
  uint64_t v80 = &v79[v134[9]];
  *(void *)uint64_t v80 = 0;
  v80[8] = (_BYTE)v54;
  sub_2560367D0((uint64_t)v23, (uint64_t)&qword_269F45040, (uint64_t)sub_256035E30, (uint64_t)sub_256035EBC, (uint64_t (*)(void))sub_256035DBC);
  uint64_t v81 = v121;
  uint64_t v82 = v118;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v121 + 16))(v118, v52, v51);
  uint64_t v83 = v124;
  uint64_t v84 = v123;
  uint64_t v85 = v127;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v124 + 16))(v123, v136, v127);
  unint64_t v86 = (*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
  unint64_t v87 = (v116 + *(unsigned __int8 *)(v83 + 80) + v86) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
  uint64_t v88 = swift_allocObject();
  uint64_t v89 = v125;
  *(void *)(v88 + 16) = v85;
  *(void *)(v88 + 24) = v89;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v81 + 32))(v88 + v86, v82, v51);
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v83 + 32))(v88 + v87, v84, v85);
  unint64_t v90 = sub_256036098();
  uint64_t v91 = v117;
  id v92 = v134;
  sub_2561770E8();
  swift_release();
  sub_2560366DC((uint64_t)v79, (uint64_t (*)(void))sub_256035CF8);
  (*(void (**)(uint64_t))(v135 + 72))(v136);
  aBlock = &unk_2704B5358;
  uint64_t v93 = swift_bridgeObjectRetain();
  sub_255FCD3A4(v93);
  sub_256036D4C(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  aBlock = v92;
  uint64_t v142 = v90;
  swift_getOpaqueTypeConformance2();
  uint64_t v94 = (uint64_t)v129;
  uint64_t v95 = v120;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v119 + 8))(v91, v95);
  if (v137)
  {
    uint64_t v96 = (uint64_t (*)(uint64_t))MEMORY[0x263F19938];
    sub_256036B9C(0, &qword_269F450B8, MEMORY[0x263F19938], MEMORY[0x263F8E0F8]);
    uint64_t v97 = v131;
    uint64_t v98 = swift_allocObject();
    *(_OWORD *)(v98 + 16) = xmmword_2561A0040;
    sub_256176728();
    sub_256176738();
    aBlock = (void *)v98;
    sub_256036000(&qword_269F450C0, MEMORY[0x263F19938]);
    sub_256036B9C(0, &qword_269F450C8, v96, MEMORY[0x263F8D488]);
    sub_256036C00();
    uint64_t v99 = v130;
    uint64_t v100 = v132;
    sub_2561784C8();
  }
  else
  {
    uint64_t v99 = v130;
    sub_256176738();
    uint64_t v100 = v132;
    uint64_t v97 = v131;
  }
  sub_2560363E0();
  uint64_t v101 = (uint64_t)v126;
  sub_256177228();
  (*(void (**)(unsigned char *, uint64_t))(v97 + 8))(v99, v100);
  sub_2560366DC(v94, (uint64_t (*)(void))sub_256035C40);
  return sub_256036B08(v101, v133);
}

uint64_t sub_256035594@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_256177798();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256035F50();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *MEMORY[0x263F19860];
  uint64_t v12 = sub_2561766E8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v6, v11, v12);
  id v13 = objc_allocWithZone(MEMORY[0x263F825C8]);
  if (a1)
  {
    uint64_t v23 = sub_256033CC8;
    uint64_t v24 = 0;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v20 = 1107296256;
    uint64_t v14 = &block_descriptor_13;
  }
  else
  {
    uint64_t v23 = sub_256033C3C;
    uint64_t v24 = 0;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v20 = 1107296256;
    uint64_t v14 = &block_descriptor_10;
  }
  uint64_t v21 = sub_2560520D4;
  uint64_t v22 = v14;
  uint64_t v15 = _Block_copy(&aBlock);
  id v16 = objc_msgSend(v13, sel_initWithDynamicProvider_, v15, aBlock, v20);
  _Block_release(v15);
  swift_release();
  uint64_t v17 = MEMORY[0x25A29FE80](v16);
  sub_256036D98((uint64_t)v6, (uint64_t)v10, MEMORY[0x263F1B7A0]);
  *(void *)&v10[*(int *)(v8 + 52)] = v17;
  *(_WORD *)&v10[*(int *)(v8 + 56)] = 256;
  sub_2560366DC((uint64_t)v6, MEMORY[0x263F1B7A0]);
  return sub_256036E00((uint64_t)v10, a2);
}

uint64_t sub_256035810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TagPicker();
  uint64_t v25 = sub_256033E88();
  sub_256178078();
  swift_getWitnessTable();
  char v11 = sub_256177FB8();
  uint64_t v12 = swift_bridgeObjectRelease();
  if (v11)
  {
    MEMORY[0x270FA5388](v12);
    *(&v23 - 4) = a3;
    *(&v23 - 3) = a4;
    *(&v23 - 2) = a2;
    uint64_t v14 = *(void *)(a1 + 16);
    uint64_t v15 = *(void *)(a1 + 24);
    uint64_t v25 = *(void *)(a1 + 8);
    uint64_t v13 = v25;
    uint64_t v26 = v14;
    uint64_t v27 = v15;
    uint64_t v16 = sub_256177778();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    MEMORY[0x25A2A01A0](&v28, v16);
    swift_getWitnessTable();
    swift_getWitnessTable();
    sub_256178178();
    uint64_t v25 = v13;
    uint64_t v26 = v14;
    uint64_t v27 = v15;
    uint64_t v24 = v28;
    sub_256177728();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  else if (*(unsigned char *)(a1 + 32) == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, a3);
    uint64_t v18 = *(void *)(a1 + 8);
    uint64_t v19 = *(void *)(a1 + 16);
    uint64_t v20 = *(void *)(a1 + 24);
    uint64_t v25 = v18;
    uint64_t v26 = v19;
    uint64_t v27 = v20;
    uint64_t v21 = sub_256177778();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    MEMORY[0x25A2A01A0](&v28, v21);
    sub_256178068();
    uint64_t v25 = v18;
    uint64_t v26 = v19;
    uint64_t v27 = v20;
    uint64_t v24 = v28;
    sub_256177728();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  else
  {
    sub_256036C88(a3, a3);
    swift_allocObject();
    sub_256178028();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v22, a2, a3);
    return sub_256033EE4();
  }
}

void sub_256035B90()
{
  if (!qword_269F45010)
  {
    sub_256035BEC();
    unint64_t v0 = sub_256175E98();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45010);
    }
  }
}

unint64_t sub_256035BEC()
{
  unint64_t result = qword_269F45018;
  if (!qword_269F45018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45018);
  }
  return result;
}

void sub_256035C40(uint64_t a1)
{
}

void sub_256035C74()
{
  if (!qword_269F45030)
  {
    sub_256035CF8();
    sub_256036098();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F45030);
    }
  }
}

void sub_256035CF8()
{
  if (!qword_269F45038)
  {
    sub_256035DBC(255, &qword_269F45040, (void (*)(uint64_t))sub_256035E30, (void (*)(uint64_t))sub_256035EBC);
    sub_256036048(255, &qword_269F43040, MEMORY[0x263F8D4F8], MEMORY[0x263F8D510], MEMORY[0x263F198B8]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45038);
    }
  }
}

void sub_256035DBC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    unint64_t v6 = sub_2561761B8();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_256035E30()
{
  if (!qword_269F45048)
  {
    sub_256036048(255, &qword_269F441D0, MEMORY[0x263F1A830], MEMORY[0x263F18C18], MEMORY[0x263F18E28]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45048);
    }
  }
}

void sub_256035EBC()
{
  if (!qword_269F45050)
  {
    sub_256035F50();
    sub_256036000(&qword_269F45068, (void (*)(uint64_t))sub_256035F50);
    unint64_t v0 = sub_256176888();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45050);
    }
  }
}

void sub_256035F50()
{
  if (!qword_269F45058)
  {
    sub_256177798();
    sub_256036000(&qword_269F45060, MEMORY[0x263F1B7A0]);
    unint64_t v0 = sub_256175D78();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45058);
    }
  }
}

uint64_t sub_256036000(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_256036048(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_256036098()
{
  unint64_t result = qword_269F45070;
  if (!qword_269F45070)
  {
    sub_256035CF8();
    sub_256036110();
    sub_255F88038();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45070);
  }
  return result;
}

unint64_t sub_256036110()
{
  unint64_t result = qword_269F45078;
  if (!qword_269F45078)
  {
    sub_256035DBC(255, &qword_269F45040, (void (*)(uint64_t))sub_256035E30, (void (*)(uint64_t))sub_256035EBC);
    sub_2560361E8();
    sub_256036000(&qword_269F45090, (void (*)(uint64_t))sub_256035EBC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45078);
  }
  return result;
}

unint64_t sub_2560361E8()
{
  unint64_t result = qword_269F45080;
  if (!qword_269F45080)
  {
    sub_256035E30();
    sub_256036260();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45080);
  }
  return result;
}

unint64_t sub_256036260()
{
  unint64_t result = qword_269F45088;
  if (!qword_269F45088)
  {
    sub_256036048(255, &qword_269F441D0, MEMORY[0x263F1A830], MEMORY[0x263F18C18], MEMORY[0x263F18E28]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45088);
  }
  return result;
}

uint64_t sub_2560362FC@<X0>(uint64_t a1@<X8>)
{
  return sub_256034368(*(void **)(v1 + 32), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_256036308()
{
  unint64_t result = qword_269F450A8;
  if (!qword_269F450A8)
  {
    sub_256035DBC(255, &qword_269F45020, sub_256035C40, MEMORY[0x263F1A470]);
    sub_2560363E0();
    sub_256036000(&qword_269F42EA0, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F450A8);
  }
  return result;
}

unint64_t sub_2560363E0()
{
  unint64_t result = qword_269F450B0;
  if (!qword_269F450B0)
  {
    sub_256035C40(255);
    sub_256035CF8();
    sub_256036098();
    swift_getOpaqueTypeConformance2();
    sub_256036000(&qword_269F42EA0, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F450B0);
  }
  return result;
}

uint64_t sub_2560364B8()
{
  uint64_t v1 = (int *)(type metadata accessor for TagPicker() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v3 = v2 + v1[17];
  sub_256036B9C(0, &qword_269F440E8, MEMORY[0x263F18D80], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_256036628@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(type metadata accessor for TagPicker() - 8);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_2560346B4(a1, v8, v5, v6, a2);
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_2560366DC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25603673C(uint64_t a1, uint64_t a2)
{
  sub_256035DBC(0, &qword_269F45040, (void (*)(uint64_t))sub_256035E30, (void (*)(uint64_t))sub_256035EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2560367D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_256036830()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)(type metadata accessor for TagPicker() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v4 = *(void *)(*(void *)v2 + 64);
  uint64_t v5 = *(void *)(v1 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  unint64_t v7 = v0 + v3 + v2[17];
  sub_256036B9C(0, &qword_269F440E8, MEMORY[0x263F18D80], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_256176158();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v3 + v4 + v6) & ~v6), v1);

  return swift_deallocObject();
}

uint64_t sub_256036A2C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(type metadata accessor for TagPicker() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v0
     + ((v4 + *(void *)(v3 + 64) + *(unsigned __int8 *)(*(void *)(v1 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));

  return sub_256035810(v0 + v4, v5, v1, v2);
}

uint64_t sub_256036B08(uint64_t a1, uint64_t a2)
{
  sub_256035DBC(0, &qword_269F45020, sub_256035C40, MEMORY[0x263F1A470]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_256036B9C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_256036C00()
{
  unint64_t result = qword_269F450D0;
  if (!qword_269F450D0)
  {
    sub_256036B9C(255, &qword_269F450C8, MEMORY[0x263F19938], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F450D0);
  }
  return result;
}

void sub_256036C88(uint64_t a1, uint64_t a2)
{
  if (swift_isClassType()) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v3)
  {
    sub_256036D4C(0, (unint64_t *)&qword_269F43AB0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  }
  else
  {
    sub_2561787F8();
  }
}

uint64_t sub_256036D10()
{
  return sub_256177E98() & 1;
}

void sub_256036D4C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_256036D98(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_256036E00(uint64_t a1, uint64_t a2)
{
  sub_256035F50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_256036E64()
{
  return swift_deallocObject();
}

uint64_t sub_256036E74()
{
  return swift_getWitnessTable();
}

uint64_t *sub_256037018(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v6 = a3;
    sub_256037E54(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_256176AA8();
      uint64_t v8 = *(void *)(v7 - 8);
      unint64_t v86 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
      uint64_t v84 = v8;
      uint64_t v83 = v6;
      if (v86(a2, 1, v7))
      {
        sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v4, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v4, a2, v7);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
      }
      char v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v12 = v11[5];
      uint64_t v13 = (char *)v4 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = sub_256176158();
      uint64_t v16 = (void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
      uint64_t v85 = *v16;
      (*v16)(v13, v14, v15);
      *((unsigned char *)v4 + v11[6]) = *((unsigned char *)a2 + v11[6]);
      uint64_t v17 = v11[7];
      uint64_t v18 = (char *)v4 + v17;
      uint64_t v19 = (char *)a2 + v17;
      uint64_t v20 = sub_256175D98();
      uint64_t v82 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
      v82(v18, v19, v20);
      uint64_t v21 = v11[8];
      uint64_t v22 = (char *)v4 + v21;
      uint64_t v23 = (char *)a2 + v21;
      if (v86((uint64_t *)((char *)a2 + v21), 1, v7))
      {
        sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v22, v23, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v22, 0, 1, v7);
      }
      uint64_t v25 = _s6StylesV8TimelineVMa(0);
      v85(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
      uint64_t v26 = v11[9];
      uint64_t v27 = (char *)v4 + v26;
      uint64_t v28 = (char *)a2 + v26;
      if (v86((uint64_t *)((char *)a2 + v26), 1, v7))
      {
        sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v27, v28, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v27, 0, 1, v7);
      }
      uint64_t v30 = _s6StylesV6NoDataVMa(0);
      v85(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
      v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
      uint64_t v31 = v11[10];
      unint64_t v32 = (char *)v4 + v31;
      uint64_t v33 = (char *)a2 + v31;
      if (v86((uint64_t *)((char *)a2 + v31), 1, v7))
      {
        sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v32, v33, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v32, 0, 1, v7);
      }
      uint64_t v35 = _s6StylesV11PlaceholderVMa(0);
      v85(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
      uint64_t v36 = v11[11];
      char v37 = (char *)v4 + v36;
      uint64_t v38 = (char *)a2 + v36;
      if (v86((uint64_t *)((char *)a2 + v36), 1, v7))
      {
        sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v37, v38, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v37, 0, 1, v7);
      }
      uint64_t v40 = _s6StylesV6SymbolVMa(0);
      v85(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
      uint64_t v41 = v11[12];
      char v42 = (char *)v4 + v41;
      id v43 = (char *)a2 + v41;
      if (v86((uint64_t *)((char *)a2 + v41), 1, v7))
      {
        sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v42, v43, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v42, 0, 1, v7);
      }
      uint64_t v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v85(&v42[v45[5]], &v43[v45[5]], v15);
      v42[v45[6]] = v43[v45[6]];
      v82(&v42[v45[7]], &v43[v45[7]], v20);
      uint64_t v46 = v11[13];
      uint64_t v47 = (char *)v4 + v46;
      char v48 = (char *)a2 + v46;
      if (v86((uint64_t *)((char *)a2 + v46), 1, v7))
      {
        sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
        uint64_t v50 = v84;
      }
      else
      {
        uint64_t v50 = v84;
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v47, v48, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v47, 0, 1, v7);
      }
      uint64_t v51 = _s6StylesV5EmptyVMa(0);
      v85(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
      v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
      uint64_t v52 = v11[14];
      uint64_t v53 = (char *)v4 + v52;
      int v54 = (char *)a2 + v52;
      if (v86((uint64_t *)((char *)a2 + v52), 1, v7))
      {
        sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v53, v54, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v7);
      }
      uint64_t v56 = _s6StylesV5DailyVMa(0);
      v85(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      uint64_t v57 = v11[15];
      uint64_t v58 = (char *)v4 + v57;
      uint64_t v59 = (char *)a2 + v57;
      if (v86((uint64_t *)((char *)a2 + v57), 1, v7))
      {
        sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v58, v59, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v7);
      }
      uint64_t v61 = _s6StylesV9MomentaryVMa(0);
      v85(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
      uint64_t v62 = v11[16];
      uint64_t v63 = (char *)v4 + v62;
      char v64 = (char *)a2 + v62;
      if (v86((uint64_t *)((char *)a2 + v62), 1, v7))
      {
        sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v63, v64, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v7);
      }
      uint64_t v66 = _s6StylesV6HeaderVMa(0);
      v85(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
      uint64_t v67 = v11[17];
      uint64_t v68 = (char *)v4 + v67;
      uint64_t v69 = (char *)a2 + v67;
      if (v86((uint64_t *)((char *)a2 + v67), 1, v7))
      {
        sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v68, v69, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v7);
      }
      uint64_t v71 = _s6StylesV11ChartButtonVMa(0);
      v85(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
      uint64_t v72 = v11[18];
      uint64_t v73 = (char *)v4 + v72;
      uint64_t v74 = (char *)a2 + v72;
      if (v86((uint64_t *)((char *)a2 + v72), 1, v7))
      {
        sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v73, v74, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v7);
      }
      uint64_t v76 = _s6StylesV15LogButtonFooterVMa(0);
      v85(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
      swift_storeEnumTagMultiPayload();
      uint64_t v6 = v83;
    }
    else
    {
      *uint64_t v4 = *a2;
      swift_retain();
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v77 = *(int *)(v6 + 20);
    uint64_t v78 = (char *)v4 + v77;
    uint64_t v79 = (char *)a2 + v77;
    uint64_t v80 = *((void *)v79 + 1);
    *(void *)uint64_t v78 = *(void *)v79;
    *((void *)v78 + 1) = v80;
    v78[16] = v79[16];
    swift_retain();
  }
  swift_retain();
  return v4;
}

void sub_256037E54(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_256037EB8(uint64_t a1)
{
  sub_256037E54(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_256176AA8();
    uint64_t v3 = *(void *)(v2 - 8);
    uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
    if (!v4(a1, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    }
    uint64_t v5 = type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v6 = a1 + *(int *)(v5 + 20);
    uint64_t v7 = sub_256176158();
    unint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    uint64_t v9 = v6;
    uint64_t v10 = (int *)v5;
    v8(v9, v7);
    uint64_t v11 = a1 + *(int *)(v5 + 28);
    uint64_t v12 = sub_256175D98();
    uint64_t v38 = *(void (**)(uint64_t))(*(void *)(v12 - 8) + 8);
    uint64_t v39 = v12;
    v38(v11);
    uint64_t v13 = a1 + v10[8];
    if (!v4(v13, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v13, v2);
    }
    uint64_t v14 = _s6StylesV8TimelineVMa(0);
    v8(v13 + *(int *)(v14 + 20), v7);
    uint64_t v15 = a1 + v10[9];
    if (!v4(v15, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v15, v2);
    }
    uint64_t v16 = _s6StylesV6NoDataVMa(0);
    v8(v15 + *(int *)(v16 + 20), v7);
    uint64_t v17 = a1 + v10[10];
    if (!v4(v17, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v17, v2);
    }
    uint64_t v18 = _s6StylesV11PlaceholderVMa(0);
    v8(v17 + *(int *)(v18 + 20), v7);
    uint64_t v19 = a1 + v10[11];
    if (!v4(v19, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v19, v2);
    }
    uint64_t v20 = _s6StylesV6SymbolVMa(0);
    v8(v19 + *(int *)(v20 + 20), v7);
    uint64_t v21 = a1 + v10[12];
    if (!v4(v21, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v21, v2);
    }
    uint64_t v40 = v3;
    uint64_t v22 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v8(v21 + *(int *)(v22 + 20), v7);
    ((void (*)(uint64_t, uint64_t))v38)(v21 + *(int *)(v22 + 28), v39);
    uint64_t v23 = v10;
    uint64_t v24 = a1 + v10[13];
    if (!v4(v24, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v24, v2);
    }
    uint64_t v25 = _s6StylesV5EmptyVMa(0);
    v8(v24 + *(int *)(v25 + 20), v7);
    uint64_t v26 = a1 + v23[14];
    if (!v4(v26, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v26, v2);
    }
    uint64_t v27 = _s6StylesV5DailyVMa(0);
    v8(v26 + *(int *)(v27 + 20), v7);
    uint64_t v28 = a1 + v23[15];
    if (!v4(v28, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v28, v2);
    }
    uint64_t v29 = _s6StylesV9MomentaryVMa(0);
    v8(v28 + *(int *)(v29 + 20), v7);
    uint64_t v30 = a1 + v23[16];
    uint64_t v31 = v7;
    if (!v4(v30, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v30, v2);
    }
    uint64_t v32 = _s6StylesV6HeaderVMa(0);
    v8(v30 + *(int *)(v32 + 20), v7);
    uint64_t v33 = a1 + v23[17];
    if (!v4(v33, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v33, v2);
    }
    uint64_t v34 = _s6StylesV11ChartButtonVMa(0);
    v8(v33 + *(int *)(v34 + 20), v7);
    uint64_t v35 = a1 + v23[18];
    if (!v4(v35, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v35, v2);
    }
    uint64_t v36 = _s6StylesV15LogButtonFooterVMa(0);
    v8(v35 + *(int *)(v36 + 20), v31);
  }
  else
  {
    swift_release();
  }
  swift_release();

  return swift_release();
}

void *sub_256038500(void *a1, void *a2, uint64_t a3)
{
  sub_256037E54(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256176AA8();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v84 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48);
    uint64_t v82 = v7;
    if (v84(a2, 1, v6))
    {
      sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    uint64_t v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v10 = v9[5];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_256176158();
    uint64_t v14 = (void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    uint64_t v83 = *v14;
    (*v14)(v11, v12, v13);
    *((unsigned char *)a1 + v9[6]) = *((unsigned char *)a2 + v9[6]);
    uint64_t v15 = v9[7];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_256175D98();
    uint64_t v80 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
    v80(v16, v17, v18);
    uint64_t v19 = v9[8];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    if (v84((void *)((char *)a2 + v19), 1, v6))
    {
      sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v20, v21, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(v20, 0, 1, v6);
    }
    uint64_t v23 = _s6StylesV8TimelineVMa(0);
    v83(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
    uint64_t v24 = v9[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v81 = a3;
    if (v84((void *)((char *)a2 + v24), 1, v6))
    {
      sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v25, v26, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(v25, 0, 1, v6);
    }
    uint64_t v28 = _s6StylesV6NoDataVMa(0);
    v83(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
    v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
    uint64_t v29 = v9[10];
    uint64_t v30 = (char *)a1 + v29;
    uint64_t v31 = (char *)a2 + v29;
    if (v84((void *)((char *)a2 + v29), 1, v6))
    {
      sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v30, v31, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(v30, 0, 1, v6);
    }
    uint64_t v33 = _s6StylesV11PlaceholderVMa(0);
    v83(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v13);
    uint64_t v34 = v9[11];
    uint64_t v35 = (char *)a1 + v34;
    uint64_t v36 = (char *)a2 + v34;
    if (v84((void *)((char *)a2 + v34), 1, v6))
    {
      sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v35, v36, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(v35, 0, 1, v6);
    }
    uint64_t v38 = _s6StylesV6SymbolVMa(0);
    v83(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v13);
    uint64_t v39 = v9[12];
    uint64_t v40 = (char *)a1 + v39;
    uint64_t v41 = (char *)a2 + v39;
    if (v84((void *)((char *)a2 + v39), 1, v6))
    {
      sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v40, v41, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(v40, 0, 1, v6);
    }
    id v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v83(&v40[v43[5]], &v41[v43[5]], v13);
    v40[v43[6]] = v41[v43[6]];
    v80(&v40[v43[7]], &v41[v43[7]], v18);
    uint64_t v44 = v9[13];
    uint64_t v45 = (char *)a1 + v44;
    uint64_t v46 = (char *)a2 + v44;
    if (v84((void *)((char *)a2 + v44), 1, v6))
    {
      sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
      uint64_t v48 = v82;
    }
    else
    {
      uint64_t v48 = v82;
      (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v45, v46, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(v45, 0, 1, v6);
    }
    uint64_t v49 = _s6StylesV5EmptyVMa(0);
    v83(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v13);
    v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
    uint64_t v50 = v9[14];
    uint64_t v51 = (char *)a1 + v50;
    uint64_t v52 = (char *)a2 + v50;
    if (v84((void *)((char *)a2 + v50), 1, v6))
    {
      sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v52, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v6);
    }
    uint64_t v54 = _s6StylesV5DailyVMa(0);
    v83(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v13);
    v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
    uint64_t v55 = v9[15];
    uint64_t v56 = (char *)a1 + v55;
    uint64_t v57 = (char *)a2 + v55;
    if (v84((void *)((char *)a2 + v55), 1, v6))
    {
      sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v56, v57, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v6);
    }
    a3 = v81;
    uint64_t v59 = _s6StylesV9MomentaryVMa(0);
    v83(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v13);
    uint64_t v60 = v9[16];
    uint64_t v61 = (char *)a1 + v60;
    uint64_t v62 = (char *)a2 + v60;
    if (v84((void *)((char *)a2 + v60), 1, v6))
    {
      sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v6);
    }
    uint64_t v64 = _s6StylesV6HeaderVMa(0);
    v83(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v13);
    uint64_t v65 = v9[17];
    uint64_t v66 = (char *)a1 + v65;
    uint64_t v67 = (char *)a2 + v65;
    if (v84((void *)((char *)a2 + v65), 1, v6))
    {
      sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v67, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v6);
    }
    uint64_t v69 = _s6StylesV11ChartButtonVMa(0);
    v83(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v13);
    uint64_t v70 = v9[18];
    uint64_t v71 = (char *)a1 + v70;
    uint64_t v72 = (char *)a2 + v70;
    if (v84((void *)((char *)a2 + v70), 1, v6))
    {
      sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v72, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v6);
    }
    uint64_t v74 = _s6StylesV15LogButtonFooterVMa(0);
    v83(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v13);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v75 = *(int *)(a3 + 20);
  uint64_t v76 = (char *)a1 + v75;
  uint64_t v77 = (char *)a2 + v75;
  uint64_t v78 = *((void *)v77 + 1);
  *(void *)uint64_t v76 = *(void *)v77;
  *((void *)v76 + 1) = v78;
  v76[16] = v77[16];
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_2560392F0(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_255F612BC((uint64_t)a1);
    sub_256037E54(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_256176AA8();
      uint64_t v7 = *(void *)(v6 - 8);
      uint64_t v83 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48);
      uint64_t v80 = a3;
      uint64_t v81 = v7;
      if (v83(a2, 1, v6))
      {
        sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      uint64_t v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v10 = v9[5];
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_256176158();
      uint64_t v14 = (void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
      uint64_t v82 = *v14;
      (*v14)(v11, v12, v13);
      *((unsigned char *)a1 + v9[6]) = *((unsigned char *)a2 + v9[6]);
      uint64_t v15 = v9[7];
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = sub_256175D98();
      uint64_t v79 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
      v79(v16, v17, v18);
      uint64_t v19 = v9[8];
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      if (v83((void *)((char *)a2 + v19), 1, v6))
      {
        sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v20, v21, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v20, 0, 1, v6);
      }
      uint64_t v23 = _s6StylesV8TimelineVMa(0);
      v82(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
      uint64_t v24 = v9[9];
      uint64_t v25 = (char *)a1 + v24;
      uint64_t v26 = (char *)a2 + v24;
      if (v83((void *)((char *)a2 + v24), 1, v6))
      {
        sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v25, v26, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v25, 0, 1, v6);
      }
      uint64_t v28 = _s6StylesV6NoDataVMa(0);
      v82(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
      v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
      uint64_t v29 = v9[10];
      uint64_t v30 = (char *)a1 + v29;
      uint64_t v31 = (char *)a2 + v29;
      if (v83((void *)((char *)a2 + v29), 1, v6))
      {
        sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v30, v31, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v30, 0, 1, v6);
      }
      uint64_t v33 = _s6StylesV11PlaceholderVMa(0);
      v82(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v13);
      uint64_t v34 = v9[11];
      uint64_t v35 = (char *)a1 + v34;
      uint64_t v36 = (char *)a2 + v34;
      if (v83((void *)((char *)a2 + v34), 1, v6))
      {
        sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v35, v36, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v35, 0, 1, v6);
      }
      uint64_t v38 = _s6StylesV6SymbolVMa(0);
      v82(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v13);
      uint64_t v39 = v9[12];
      uint64_t v40 = (char *)a1 + v39;
      uint64_t v41 = (char *)a2 + v39;
      if (v83((void *)((char *)a2 + v39), 1, v6))
      {
        sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v40, v41, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v40, 0, 1, v6);
      }
      id v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v82(&v40[v43[5]], &v41[v43[5]], v13);
      v40[v43[6]] = v41[v43[6]];
      v79(&v40[v43[7]], &v41[v43[7]], v18);
      uint64_t v44 = v9[13];
      uint64_t v45 = (char *)a1 + v44;
      uint64_t v46 = (char *)a2 + v44;
      if (v83((void *)((char *)a2 + v44), 1, v6))
      {
        sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
        uint64_t v48 = v81;
      }
      else
      {
        uint64_t v48 = v81;
        (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v45, v46, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v45, 0, 1, v6);
      }
      uint64_t v49 = _s6StylesV5EmptyVMa(0);
      v82(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v13);
      v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
      uint64_t v50 = v9[14];
      uint64_t v51 = (char *)a1 + v50;
      uint64_t v52 = (char *)a2 + v50;
      if (v83((void *)((char *)a2 + v50), 1, v6))
      {
        sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v52, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v6);
      }
      uint64_t v54 = _s6StylesV5DailyVMa(0);
      v82(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v13);
      v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
      uint64_t v55 = v9[15];
      uint64_t v56 = (char *)a1 + v55;
      uint64_t v57 = (char *)a2 + v55;
      if (v83((void *)((char *)a2 + v55), 1, v6))
      {
        sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v56, v57, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v6);
      }
      uint64_t v59 = _s6StylesV9MomentaryVMa(0);
      v82(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v13);
      uint64_t v60 = v9[16];
      uint64_t v61 = (char *)a1 + v60;
      uint64_t v62 = (char *)a2 + v60;
      if (v83((void *)((char *)a2 + v60), 1, v6))
      {
        sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v6);
      }
      uint64_t v64 = _s6StylesV6HeaderVMa(0);
      v82(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v13);
      uint64_t v65 = v9[17];
      uint64_t v66 = (char *)a1 + v65;
      uint64_t v67 = (char *)a2 + v65;
      if (v83((void *)((char *)a2 + v65), 1, v6))
      {
        sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v67, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v6);
      }
      uint64_t v69 = _s6StylesV11ChartButtonVMa(0);
      v82(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v13);
      uint64_t v70 = v9[18];
      uint64_t v71 = (char *)a1 + v70;
      uint64_t v72 = (char *)a2 + v70;
      if (v83((void *)((char *)a2 + v70), 1, v6))
      {
        sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v72, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v6);
      }
      uint64_t v74 = _s6StylesV15LogButtonFooterVMa(0);
      v82(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v13);
      a3 = v80;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v75 = *(int *)(a3 + 20);
  uint64_t v76 = (char *)a1 + v75;
  uint64_t v77 = (char *)a2 + v75;
  *(void *)((char *)a1 + v75) = *(void *)((char *)a2 + v75);
  swift_retain();
  swift_release();
  *((void *)v76 + 1) = *((void *)v77 + 1);
  swift_retain();
  swift_release();
  v76[16] = v77[16];
  return a1;
}

char *sub_25603A104(char *a1, char *a2, uint64_t a3)
{
  sub_256037E54(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  uint64_t v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_256176AA8();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v85 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    uint64_t v83 = v9;
    if (v85(a2, 1, v8))
    {
      sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    uint64_t v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v12 = v11[5];
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    uint64_t v15 = sub_256176158();
    uint64_t v16 = (void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
    uint64_t v84 = *v16;
    (*v16)(v13, v14, v15);
    a1[v11[6]] = a2[v11[6]];
    uint64_t v17 = v11[7];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    uint64_t v20 = sub_256175D98();
    uint64_t v81 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32);
    v81(v18, v19, v20);
    uint64_t v21 = v11[8];
    uint64_t v22 = &a1[v21];
    uint64_t v23 = &a2[v21];
    if (v85(&a2[v21], 1, v8))
    {
      sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v22, v23, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v22, 0, 1, v8);
    }
    uint64_t v25 = _s6StylesV8TimelineVMa(0);
    v84(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
    uint64_t v26 = v11[9];
    uint64_t v27 = &a1[v26];
    uint64_t v28 = &a2[v26];
    uint64_t v82 = a3;
    if (v85(&a2[v26], 1, v8))
    {
      sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v27, v28, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v27, 0, 1, v8);
    }
    uint64_t v30 = _s6StylesV6NoDataVMa(0);
    v84(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
    v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
    uint64_t v31 = v11[10];
    uint64_t v32 = &a1[v31];
    uint64_t v33 = &a2[v31];
    if (v85(&a2[v31], 1, v8))
    {
      sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v32, v33, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v32, 0, 1, v8);
    }
    uint64_t v35 = _s6StylesV11PlaceholderVMa(0);
    v84(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
    uint64_t v36 = v11[11];
    uint64_t v37 = &a1[v36];
    uint64_t v38 = &a2[v36];
    if (v85(&a2[v36], 1, v8))
    {
      sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v37, v38, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v37, 0, 1, v8);
    }
    uint64_t v40 = _s6StylesV6SymbolVMa(0);
    v84(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
    uint64_t v41 = v11[12];
    uint64_t v42 = &a1[v41];
    id v43 = &a2[v41];
    if (v85(&a2[v41], 1, v8))
    {
      sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v42, v43, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v42, 0, 1, v8);
    }
    uint64_t v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v84(&v42[v45[5]], &v43[v45[5]], v15);
    v42[v45[6]] = v43[v45[6]];
    v81(&v42[v45[7]], &v43[v45[7]], v20);
    uint64_t v46 = v11[13];
    uint64_t v47 = &a1[v46];
    uint64_t v48 = &a2[v46];
    if (v85(&a2[v46], 1, v8))
    {
      sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
      uint64_t v50 = v83;
    }
    else
    {
      uint64_t v50 = v83;
      (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v47, v48, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v47, 0, 1, v8);
    }
    uint64_t v51 = _s6StylesV5EmptyVMa(0);
    v84(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
    v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
    uint64_t v52 = v11[14];
    uint64_t v53 = &a1[v52];
    uint64_t v54 = &a2[v52];
    if (v85(&a2[v52], 1, v8))
    {
      sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v53, v54, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v8);
    }
    uint64_t v56 = _s6StylesV5DailyVMa(0);
    v84(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
    v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
    uint64_t v57 = v11[15];
    uint64_t v58 = &a1[v57];
    uint64_t v59 = &a2[v57];
    if (v85(&a2[v57], 1, v8))
    {
      sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v58, v59, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v8);
    }
    a3 = v82;
    uint64_t v61 = _s6StylesV9MomentaryVMa(0);
    v84(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
    uint64_t v62 = v11[16];
    uint64_t v63 = &a1[v62];
    uint64_t v64 = &a2[v62];
    if (v85(&a2[v62], 1, v8))
    {
      sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v63, v64, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v8);
    }
    uint64_t v66 = _s6StylesV6HeaderVMa(0);
    v84(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
    uint64_t v67 = v11[17];
    uint64_t v68 = &a1[v67];
    uint64_t v69 = &a2[v67];
    if (v85(&a2[v67], 1, v8))
    {
      sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v68, v69, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v8);
    }
    uint64_t v71 = _s6StylesV11ChartButtonVMa(0);
    v84(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
    uint64_t v72 = v11[18];
    uint64_t v73 = &a1[v72];
    uint64_t v74 = &a2[v72];
    if (v85(&a2[v72], 1, v8))
    {
      sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v73, v74, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v8);
    }
    uint64_t v76 = _s6StylesV15LogButtonFooterVMa(0);
    v84(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  uint64_t v77 = *(int *)(a3 + 20);
  uint64_t v78 = &a1[v77];
  uint64_t v79 = &a2[v77];
  *(_OWORD *)uint64_t v78 = *(_OWORD *)v79;
  v78[16] = v79[16];
  return a1;
}

char *sub_25603AEF0(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_255F612BC((uint64_t)a1);
    sub_256037E54(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    uint64_t v7 = v6;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_256176AA8();
      uint64_t v9 = *(void *)(v8 - 8);
      uint64_t v85 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
      uint64_t v83 = v9;
      if (v85(a2, 1, v8))
      {
        sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      uint64_t v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v12 = v11[5];
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      uint64_t v15 = sub_256176158();
      uint64_t v16 = (void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
      uint64_t v84 = *v16;
      (*v16)(v13, v14, v15);
      a1[v11[6]] = a2[v11[6]];
      uint64_t v17 = v11[7];
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      uint64_t v20 = sub_256175D98();
      uint64_t v81 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32);
      v81(v18, v19, v20);
      uint64_t v21 = v11[8];
      uint64_t v22 = &a1[v21];
      uint64_t v23 = &a2[v21];
      if (v85(&a2[v21], 1, v8))
      {
        sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v22, v23, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v22, 0, 1, v8);
      }
      uint64_t v25 = _s6StylesV8TimelineVMa(0);
      v84(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
      uint64_t v26 = v11[9];
      uint64_t v27 = &a1[v26];
      uint64_t v28 = &a2[v26];
      uint64_t v82 = a3;
      if (v85(&a2[v26], 1, v8))
      {
        sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v27, v28, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v27, 0, 1, v8);
      }
      uint64_t v30 = _s6StylesV6NoDataVMa(0);
      v84(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
      v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
      uint64_t v31 = v11[10];
      uint64_t v32 = &a1[v31];
      uint64_t v33 = &a2[v31];
      if (v85(&a2[v31], 1, v8))
      {
        sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v32, v33, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v32, 0, 1, v8);
      }
      uint64_t v35 = _s6StylesV11PlaceholderVMa(0);
      v84(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
      uint64_t v36 = v11[11];
      uint64_t v37 = &a1[v36];
      uint64_t v38 = &a2[v36];
      if (v85(&a2[v36], 1, v8))
      {
        sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v37, v38, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v37, 0, 1, v8);
      }
      uint64_t v40 = _s6StylesV6SymbolVMa(0);
      v84(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
      uint64_t v41 = v11[12];
      uint64_t v42 = &a1[v41];
      id v43 = &a2[v41];
      if (v85(&a2[v41], 1, v8))
      {
        sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v42, v43, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v42, 0, 1, v8);
      }
      uint64_t v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v84(&v42[v45[5]], &v43[v45[5]], v15);
      v42[v45[6]] = v43[v45[6]];
      v81(&v42[v45[7]], &v43[v45[7]], v20);
      uint64_t v46 = v11[13];
      uint64_t v47 = &a1[v46];
      uint64_t v48 = &a2[v46];
      if (v85(&a2[v46], 1, v8))
      {
        sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
        uint64_t v50 = v83;
      }
      else
      {
        uint64_t v50 = v83;
        (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v47, v48, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v47, 0, 1, v8);
      }
      uint64_t v51 = _s6StylesV5EmptyVMa(0);
      v84(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
      v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
      uint64_t v52 = v11[14];
      uint64_t v53 = &a1[v52];
      uint64_t v54 = &a2[v52];
      if (v85(&a2[v52], 1, v8))
      {
        sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v53, v54, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v8);
      }
      uint64_t v56 = _s6StylesV5DailyVMa(0);
      v84(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      uint64_t v57 = v11[15];
      uint64_t v58 = &a1[v57];
      uint64_t v59 = &a2[v57];
      if (v85(&a2[v57], 1, v8))
      {
        sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v58, v59, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v8);
      }
      a3 = v82;
      uint64_t v61 = _s6StylesV9MomentaryVMa(0);
      v84(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
      uint64_t v62 = v11[16];
      uint64_t v63 = &a1[v62];
      uint64_t v64 = &a2[v62];
      if (v85(&a2[v62], 1, v8))
      {
        sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v63, v64, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v8);
      }
      uint64_t v66 = _s6StylesV6HeaderVMa(0);
      v84(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
      uint64_t v67 = v11[17];
      uint64_t v68 = &a1[v67];
      uint64_t v69 = &a2[v67];
      if (v85(&a2[v67], 1, v8))
      {
        sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v68, v69, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v8);
      }
      uint64_t v71 = _s6StylesV11ChartButtonVMa(0);
      v84(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
      uint64_t v72 = v11[18];
      uint64_t v73 = &a1[v72];
      uint64_t v74 = &a2[v72];
      if (v85(&a2[v72], 1, v8))
      {
        sub_256037E54(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v73, v74, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v8);
      }
      uint64_t v76 = _s6StylesV15LogButtonFooterVMa(0);
      v84(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
  }
  uint64_t v77 = *(int *)(a3 + 20);
  uint64_t v78 = &a1[v77];
  uint64_t v79 = &a2[v77];
  *(void *)&a1[v77] = *(void *)v79;
  swift_release();
  *((void *)v78 + 1) = *((void *)v79 + 1);
  swift_release();
  v78[16] = v79[16];
  return a1;
}

uint64_t sub_25603BD04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25603BD18);
}

uint64_t sub_25603BD18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_256037E54(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_25603BE0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25603BE20);
}

void sub_25603BE20(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_256037E54(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
}

uint64_t _s15LogButtonFooterVMa()
{
  uint64_t result = qword_269F450D8;
  if (!qword_269F450D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_25603BF5C()
{
  sub_256037E54(319, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_25603C020()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_25603C03C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v116 = a1;
  uint64_t v114 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
  MEMORY[0x270FA5388](v114);
  uint64_t v115 = (uint64_t)&v108 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_256175DB8();
  uint64_t v134 = *(void *)(v3 - 8);
  uint64_t v135 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v133 = (char *)&v108 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = _s6StylesV15LogButtonFooterVMa(0) - 8;
  MEMORY[0x270FA5388](v127);
  uint64_t v125 = (uint64_t)&v108 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = type metadata accessor for StateOfMindTimeline.Styles(0);
  uint64_t v6 = MEMORY[0x270FA5388](v138);
  uint64_t v113 = (uint64_t)&v108 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v136 = (uint64_t)&v108 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v108 - v10;
  uint64_t v12 = sub_256176328();
  uint64_t v129 = *(void *)(v12 - 8);
  uint64_t v130 = v12;
  MEMORY[0x270FA5388](v12);
  char v139 = (char *)&v108 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = (char *)sub_256176768();
  uint64_t v137 = *((void *)v132 - 1);
  MEMORY[0x270FA5388](v132);
  uint64_t v15 = (char *)&v108 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = _s15LogButtonFooterVMa();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  MEMORY[0x270FA5388](v16 - 8);
  sub_255F85CA8();
  uint64_t v117 = v19;
  uint64_t v118 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v108 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25603D260();
  uint64_t v123 = v22;
  uint64_t v122 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v108 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25603D364(0);
  uint64_t v120 = v25;
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)&v108 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25603D3A0(0);
  uint64_t v121 = v28;
  MEMORY[0x270FA5388](v28);
  uint64_t v119 = (char *)&v108 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25603D474();
  uint64_t v124 = v30;
  MEMORY[0x270FA5388](v30);
  uint64_t v128 = (uint64_t)&v108 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25603D4DC(0);
  uint64_t v126 = v32;
  MEMORY[0x270FA5388](v32);
  uint64_t v131 = (uint64_t)&v108 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25603D504(0);
  uint64_t v108 = v34;
  MEMORY[0x270FA5388](v34);
  uint64_t v110 = (uint64_t)&v108 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25603D590(0);
  uint64_t v109 = v36;
  MEMORY[0x270FA5388](v36);
  uint64_t v112 = (uint64_t)&v108 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25603D5B8(0);
  MEMORY[0x270FA5388](v38 - 8);
  uint64_t v111 = (uint64_t)&v108 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25603E008(v1, (uint64_t)&v108 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))_s15LogButtonFooterVMa);
  unint64_t v40 = (*(unsigned __int8 *)(v17 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v41 = swift_allocObject();
  sub_25603E070((uint64_t)&v108 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v41 + v40, (uint64_t (*)(void))_s15LogButtonFooterVMa);
  uint64_t v140 = v1;
  sub_25603D200();
  sub_255F85D88();
  sub_2561775C8();
  sub_256176758();
  sub_25603E59C(&qword_269F432D0, (void (*)(uint64_t))sub_255F85CA8);
  sub_25603E59C(&qword_269F450F0, MEMORY[0x263F19958]);
  uint64_t v42 = v24;
  uint64_t v43 = v117;
  uint64_t v44 = (uint64_t)v132;
  sub_256177078();
  (*(void (**)(char *, uint64_t))(v137 + 8))(v15, v44);
  (*(void (**)(char *, uint64_t))(v118 + 8))(v21, v43);
  uint64_t v137 = v1;
  sub_256119CA0((uint64_t)v11);
  uint64_t v45 = v125;
  sub_25603E008((uint64_t)&v11[*(int *)(v138 + 72)], v125, _s6StylesV15LogButtonFooterVMa);
  uint64_t v132 = v11;
  sub_25603DD10((uint64_t)v11, type metadata accessor for StateOfMindTimeline.Styles);
  char v46 = sub_256176138();
  sub_25603DD10(v45, _s6StylesV15LogButtonFooterVMa);
  if (v46) {
    sub_256176308();
  }
  else {
    sub_256176318();
  }
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v48 = (uint64_t *)&v27[*(int *)(v120 + 36)];
  uint64_t v49 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F1A418];
  sub_256037E54(0, &qword_269F45100, MEMORY[0x263F19168], MEMORY[0x263F1A418]);
  uint64_t v52 = v129;
  uint64_t v51 = v130;
  uint64_t v53 = v139;
  (*(void (**)(char *, char *, uint64_t))(v129 + 16))((char *)v48 + *(int *)(v50 + 28), v139, v130);
  *uint64_t v48 = KeyPath;
  uint64_t v54 = v122;
  uint64_t v55 = v123;
  (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v27, v42, v123);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v51);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v42, v55);
  uint64_t v56 = v133;
  uint64_t v57 = v134;
  uint64_t v58 = v135;
  (*(void (**)(char *, void, uint64_t))(v134 + 104))(v133, *MEMORY[0x263F18568], v135);
  uint64_t v59 = swift_getKeyPath();
  uint64_t v60 = (uint64_t)v119;
  uint64_t v61 = (uint64_t *)&v119[*(int *)(v121 + 36)];
  sub_256037E54(0, &qword_269F45110, MEMORY[0x263F18570], v49);
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))((char *)v61 + *(int *)(v62 + 28), v56, v58);
  uint64_t *v61 = v59;
  sub_25603E008((uint64_t)v27, v60, (uint64_t (*)(void))sub_25603D364);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v56, v58);
  sub_25603DD10((uint64_t)v27, (uint64_t (*)(void))sub_25603D364);
  uint64_t v63 = sub_256177438();
  uint64_t v64 = swift_getKeyPath();
  uint64_t v65 = v128;
  sub_25603E008(v60, v128, (uint64_t (*)(void))sub_25603D3A0);
  uint64_t v66 = (uint64_t *)(v65 + *(int *)(v124 + 36));
  *uint64_t v66 = v64;
  v66[1] = v63;
  sub_25603DD10(v60, (uint64_t (*)(void))sub_25603D3A0);
  LOBYTE(v63) = sub_256176D98();
  uint64_t v67 = (uint64_t)v132;
  sub_256119CA0((uint64_t)v132);
  sub_25603DD10(v67, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256175D48();
  uint64_t v69 = v68;
  uint64_t v71 = v70;
  uint64_t v73 = v72;
  uint64_t v75 = v74;
  uint64_t v76 = v131;
  sub_25603E008(v65, v131, (uint64_t (*)(void))sub_25603D474);
  uint64_t v77 = v76 + *(int *)(v126 + 36);
  *(unsigned char *)uint64_t v77 = v63;
  *(void *)(v77 + 8) = v69;
  *(void *)(v77 + 16) = v71;
  *(void *)(v77 + 24) = v73;
  *(void *)(v77 + 32) = v75;
  *(unsigned char *)(v77 + 40) = 0;
  sub_25603DD10(v65, (uint64_t (*)(void))sub_25603D474);
  char v78 = sub_256176DA8();
  uint64_t v79 = v136;
  sub_256119CA0(v136);
  sub_25603DD10(v79, type metadata accessor for StateOfMindTimeline.Styles);
  id result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    uint64_t v81 = result;
    MobileGestalt_get_homeButtonType();

    sub_256175D48();
    uint64_t v83 = v82;
    uint64_t v85 = v84;
    uint64_t v87 = v86;
    uint64_t v89 = v88;
    uint64_t v90 = v110;
    sub_25603E008(v76, v110, (uint64_t (*)(void))sub_25603D4DC);
    uint64_t v91 = v90 + *(int *)(v108 + 36);
    *(unsigned char *)uint64_t v91 = v78;
    *(void *)(v91 + 8) = v83;
    *(void *)(v91 + 16) = v85;
    *(void *)(v91 + 24) = v87;
    *(void *)(v91 + 32) = v89;
    *(unsigned char *)(v91 + 40) = 0;
    sub_25603DD10(v76, (uint64_t (*)(void))sub_25603D4DC);
    char v92 = sub_256176D78();
    uint64_t v93 = v113;
    sub_256119CA0(v113);
    uint64_t v94 = v115;
    sub_25603E008(v93 + *(int *)(v138 + 48), v115, type metadata accessor for StateOfMindTimeline.Styles.Entry);
    sub_25603DD10(v93, type metadata accessor for StateOfMindTimeline.Styles);
    if (*(unsigned char *)(v94 + *(int *)(v114 + 24)) == 1 && (sub_256176138() & 1) == 0) {
      sub_256117BD4();
    }
    sub_25603DD10(v94, type metadata accessor for StateOfMindTimeline.Styles.Entry);
    sub_256175D48();
    uint64_t v96 = v95;
    uint64_t v98 = v97;
    uint64_t v100 = v99;
    uint64_t v102 = v101;
    uint64_t v103 = v112;
    sub_25603E008(v90, v112, (uint64_t (*)(void))sub_25603D504);
    uint64_t v104 = v103 + *(int *)(v109 + 36);
    *(unsigned char *)uint64_t v104 = v92;
    *(void *)(v104 + 8) = v96;
    *(void *)(v104 + 16) = v98;
    *(void *)(v104 + 24) = v100;
    *(void *)(v104 + 32) = v102;
    *(unsigned char *)(v104 + 40) = 0;
    sub_25603DD10(v90, (uint64_t (*)(void))sub_25603D504);
    uint64_t v105 = sub_2561778E8();
    uint64_t v106 = v111;
    sub_2561167FC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v111, 0.0, 1, 0.0, 1, v105, v107);
    sub_25603DD10(v103, (uint64_t (*)(void))sub_25603D590);
    return (id)sub_25603E070(v106, v116, (uint64_t (*)(void))sub_25603D5B8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25603CF00()
{
  return sub_256177728();
}

double sub_25603CF8C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v5 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_2561755B8();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();

  uint64_t v29 = v6;
  uint64_t v30 = v8;
  sub_255F5CE90();
  uint64_t v9 = sub_256177028();
  uint64_t v11 = v10;
  LOBYTE(v8) = v12;
  uint64_t v14 = v13;
  sub_256119CA0((uint64_t)v4);
  sub_25603DD10((uint64_t)v4, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2561778E8();
  sub_2561762E8();
  uint64_t v15 = v29;
  char v16 = v30;
  uint64_t v17 = v31;
  char v18 = v32;
  uint64_t v19 = v33;
  char v20 = v34;
  uint64_t v21 = v35;
  char v22 = v36;
  uint64_t v23 = v37;
  char v24 = v38;
  uint64_t v25 = v39;
  char v26 = v40;
  *(void *)a1 = v9;
  *(void *)(a1 + 8) = v11;
  *(unsigned char *)(a1 + 16) = v8 & 1;
  *(void *)(a1 + 24) = v14;
  *(void *)(a1 + 32) = v15;
  *(unsigned char *)(a1 + 40) = v16;
  *(void *)(a1 + 48) = v17;
  *(unsigned char *)(a1 + 56) = v18;
  *(void *)(a1 + 64) = v19;
  *(unsigned char *)(a1 + 72) = v20;
  *(void *)(a1 + 80) = v21;
  *(unsigned char *)(a1 + 88) = v22;
  *(void *)(a1 + 96) = v23;
  *(unsigned char *)(a1 + 104) = v24;
  *(void *)(a1 + 112) = v25;
  *(unsigned char *)(a1 + 120) = v26;
  double result = *(double *)&v41;
  *(_OWORD *)(a1 + 128) = v41;
  return result;
}

void sub_25603D200()
{
  if (!qword_269F43260)
  {
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43260);
    }
  }
}

void sub_25603D260()
{
  if (!qword_269F450E8)
  {
    sub_255F85CA8();
    sub_256176768();
    sub_25603E59C(&qword_269F432D0, (void (*)(uint64_t))sub_255F85CA8);
    sub_25603E59C(&qword_269F450F0, MEMORY[0x263F19958]);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F450E8);
    }
  }
}

void sub_25603D364(uint64_t a1)
{
}

void sub_25603D3A0(uint64_t a1)
{
}

void sub_25603D3DC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_256037E54(255, a4, a5, MEMORY[0x263F1A418]);
    unint64_t v8 = sub_2561761B8();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_25603D474()
{
  if (!qword_269F45118)
  {
    sub_25603D3A0(255);
    sub_255F85F4C();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45118);
    }
  }
}

void sub_25603D4DC(uint64_t a1)
{
}

void sub_25603D504(uint64_t a1)
{
}

void sub_25603D52C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_25603D590(uint64_t a1)
{
}

void sub_25603D5B8(uint64_t a1)
{
}

uint64_t sub_25603D5E0()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(_s15LogButtonFooterVMa() - 8) + 80);
  uint64_t v2 = (v1 + 16) & ~v1;
  uint64_t v3 = v0 + v2;
  sub_256037E54(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256176AA8();
    uint64_t v5 = *(void *)(v4 - 8);
    uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (!v6(v0 + v2, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v2, v4);
    }
    uint64_t v7 = type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v8 = v3 + *(int *)(v7 + 20);
    uint64_t v9 = sub_256176158();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    uint64_t v11 = v8;
    char v12 = (int *)v7;
    v10(v11, v9);
    uint64_t v13 = v3 + *(int *)(v7 + 28);
    uint64_t v14 = sub_256175D98();
    char v40 = *(void (**)(uint64_t))(*(void *)(v14 - 8) + 8);
    uint64_t v41 = v14;
    v40(v13);
    uint64_t v15 = v3 + v12[8];
    if (!v6(v15, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v15, v4);
    }
    uint64_t v16 = _s6StylesV8TimelineVMa(0);
    v10(v15 + *(int *)(v16 + 20), v9);
    uint64_t v17 = v3 + v12[9];
    if (!v6(v17, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v17, v4);
    }
    uint64_t v18 = _s6StylesV6NoDataVMa(0);
    v10(v17 + *(int *)(v18 + 20), v9);
    uint64_t v19 = v3 + v12[10];
    if (!v6(v19, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v19, v4);
    }
    uint64_t v20 = _s6StylesV11PlaceholderVMa(0);
    v10(v19 + *(int *)(v20 + 20), v9);
    uint64_t v21 = v3 + v12[11];
    if (!v6(v21, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v21, v4);
    }
    uint64_t v22 = _s6StylesV6SymbolVMa(0);
    v10(v21 + *(int *)(v22 + 20), v9);
    uint64_t v23 = v3 + v12[12];
    if (!v6(v23, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v23, v4);
    }
    uint64_t v42 = v5;
    uint64_t v24 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v10(v23 + *(int *)(v24 + 20), v9);
    ((void (*)(uint64_t, uint64_t))v40)(v23 + *(int *)(v24 + 28), v41);
    uint64_t v25 = v12;
    uint64_t v26 = v3 + v12[13];
    if (!v6(v26, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v26, v4);
    }
    uint64_t v27 = _s6StylesV5EmptyVMa(0);
    v10(v26 + *(int *)(v27 + 20), v9);
    uint64_t v28 = v3 + v25[14];
    if (!v6(v28, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v28, v4);
    }
    uint64_t v29 = _s6StylesV5DailyVMa(0);
    v10(v28 + *(int *)(v29 + 20), v9);
    uint64_t v30 = v3 + v25[15];
    if (!v6(v30, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v30, v4);
    }
    uint64_t v31 = _s6StylesV9MomentaryVMa(0);
    v10(v30 + *(int *)(v31 + 20), v9);
    uint64_t v32 = v3 + v25[16];
    uint64_t v33 = v9;
    if (!v6(v32, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v32, v4);
    }
    uint64_t v34 = _s6StylesV6HeaderVMa(0);
    v10(v32 + *(int *)(v34 + 20), v9);
    uint64_t v35 = v3 + v25[17];
    if (!v6(v35, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v35, v4);
    }
    uint64_t v36 = _s6StylesV11ChartButtonVMa(0);
    v10(v35 + *(int *)(v36 + 20), v9);
    uint64_t v37 = v3 + v25[18];
    if (!v6(v37, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v37, v4);
    }
    uint64_t v38 = _s6StylesV15LogButtonFooterVMa(0);
    v10(v37 + *(int *)(v38 + 20), v33);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_25603DCA8()
{
  _s15LogButtonFooterVMa();

  return sub_25603CF00();
}

double sub_25603DD08@<D0>(uint64_t a1@<X8>)
{
  return sub_25603CF8C(a1);
}

uint64_t sub_25603DD10(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25603DD70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2561765B8();
  *a1 = result;
  return result;
}

uint64_t sub_25603DD9C()
{
  return sub_2561765C8();
}

uint64_t sub_25603DDC8()
{
  return sub_256176468();
}

uint64_t sub_25603DDEC()
{
  return sub_256176468();
}

uint64_t sub_25603DE10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25603DE3C(a1, a2, a3, a4, MEMORY[0x263F19168], MEMORY[0x263F193E0]);
}

uint64_t sub_25603DE3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(char *))
{
  uint64_t v8 = a5(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t))(v11 + 16))((char *)&v13 - v9, a1);
  return a6(v10);
}

uint64_t sub_25603DF0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25603DE3C(a1, a2, a3, a4, MEMORY[0x263F19168], MEMORY[0x263F193E0]);
}

uint64_t sub_25603DF4C()
{
  return sub_256176398();
}

uint64_t sub_25603DF70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25603DE3C(a1, a2, a3, a4, MEMORY[0x263F18570], MEMORY[0x263F19248]);
}

uint64_t sub_25603DFB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2561765B8();
  *a1 = result;
  return result;
}

uint64_t sub_25603DFDC()
{
  return sub_2561765C8();
}

uint64_t sub_25603E008(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25603E070(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_25603E0D8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_25603E124()
{
  return sub_25603E1B0(&qword_269F45140, sub_25603D5B8, (void (*)(void))sub_25603E174);
}

uint64_t sub_25603E174()
{
  return sub_25603E1B0(&qword_269F45148, sub_25603D590, (void (*)(void))sub_25603E230);
}

uint64_t sub_25603E1B0(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25603E230()
{
  return sub_25603E1B0(&qword_269F45150, sub_25603D504, (void (*)(void))sub_25603E26C);
}

uint64_t sub_25603E26C()
{
  return sub_25603E1B0(&qword_269F45158, sub_25603D4DC, (void (*)(void))sub_25603E2A8);
}

unint64_t sub_25603E2A8()
{
  unint64_t result = qword_269F45160;
  if (!qword_269F45160)
  {
    sub_25603D474();
    sub_25603E350();
    sub_25603E59C((unint64_t *)&qword_269F43298, (void (*)(uint64_t))sub_255F85F4C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45160);
  }
  return result;
}

unint64_t sub_25603E350()
{
  unint64_t result = qword_269F45168;
  if (!qword_269F45168)
  {
    sub_25603D3A0(255);
    sub_25603E3EC();
    sub_25603E538(&qword_269F45180, &qword_269F45110, MEMORY[0x263F18570]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45168);
  }
  return result;
}

unint64_t sub_25603E3EC()
{
  unint64_t result = qword_269F45170;
  if (!qword_269F45170)
  {
    sub_25603D364(255);
    sub_255F85CA8();
    sub_256176768();
    sub_25603E59C(&qword_269F432D0, (void (*)(uint64_t))sub_255F85CA8);
    sub_25603E59C(&qword_269F450F0, MEMORY[0x263F19958]);
    swift_getOpaqueTypeConformance2();
    sub_25603E538(&qword_269F45178, &qword_269F45100, MEMORY[0x263F19168]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45170);
  }
  return result;
}

uint64_t sub_25603E538(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_256037E54(255, a2, a3, MEMORY[0x263F1A418]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25603E59C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_25603E644(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v15 = sub_256175868();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(a8, 1, v15) != 1)
  {
    uint64_t v17 = (void *)sub_2561757F8();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a8, v15);
  }
  uint64_t v18 = sub_256175A08();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(a9, 1, v18) != 1)
  {
    uint64_t v20 = (void *)sub_256175978();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a9, v18);
  }
  id v21 = objc_msgSend(objc_allocWithZone(v23), sel_initWithHealthStore_primaryDisplayType_unitPreferenceController_dateCache_chartDataCacheController_selectedTimeScopeController_sampleTypeDateRangeController_initialXValue_currentCalendarOverride_options_, a1, a2, a3, a4, a5, a6, a7, v17, v20, a10);

  return v21;
}

id sub_25603F128()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StateOfMindChartViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for StateOfMindChartViewController()
{
  return self;
}

id sub_25603F180(uint64_t a1, uint64_t a2)
{
  return sub_2560400FC(a2);
}

void sub_25603F188()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  sub_2560406AC(0, (unint64_t *)&qword_269F44D30, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v36 - v3;
  uint64_t v5 = sub_256175868();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_256175B68();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  char v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256175B48();
  uint64_t v13 = sub_256175B58();
  os_log_type_t v14 = sub_256178238();
  BOOL v15 = os_log_type_enabled(v13, v14);
  uint64_t v40 = v6;
  uint64_t v41 = v5;
  if (v15)
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v38 = v8;
    uint64_t v18 = v17;
    v43[0] = (id)v17;
    uint64_t v36 = v9;
    uint64_t v37 = v4;
    *(_DWORD *)uint64_t v16 = 136446210;
    uint64_t v19 = sub_256178978();
    uint64_t v42 = sub_255FB29A8(v19, v20, (uint64_t *)v43);
    uint64_t v4 = v37;
    sub_256178458();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_255F58000, v13, v14, "[%{public}s] Tapped on current value view date", v16, 0xCu);
    swift_arrayDestroy();
    uint64_t v21 = v18;
    uint64_t v8 = v38;
    MEMORY[0x25A2A1E90](v21, -1, -1);
    MEMORY[0x25A2A1E90](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v36);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  id v22 = objc_msgSend(v1, sel_healthStore);
  id v23 = objc_msgSend(v1, sel_primaryGraphViewController);
  id v24 = objc_msgSend(v23, sel_graphView);

  id v25 = objc_msgSend(v24, sel_effectiveVisibleRangeCadence);
  id v26 = objc_msgSend(v25, sel_minValue);

  if (!v26)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56))(v4, 1, 1, v41);
    goto LABEL_8;
  }
  v43[0] = v26;
  uint64_t v27 = v41;
  int v28 = swift_dynamicCast();
  uint64_t v29 = v40;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v4, v28 ^ 1u, 1, v27);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v4, 1, v27) == 1)
  {
LABEL_8:
    sub_256175858();
    sub_25604076C((uint64_t)v4, (unint64_t *)&qword_269F44D30, MEMORY[0x263F07490]);
    goto LABEL_9;
  }
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v8, v4, v27);
LABEL_9:
  id v30 = objc_msgSend(v1, sel_traitCollection);
  id v31 = objc_msgSend(v30, sel_verticalSizeClass);

  id v32 = objc_allocWithZone((Class)type metadata accessor for StateOfMindCalendarViewController());
  uint64_t v33 = (char *)StateOfMindCalendarViewController.init(healthStore:dateToFocusOn:verticalSizeClass:)(v22, (uint64_t)v8, (uint64_t)v31);
  uint64_t v34 = &v33[qword_269F50D30];
  swift_beginAccess();
  *((void *)v34 + 1) = &off_2704B8F88;
  swift_unknownObjectWeakAssign();
  id v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46848]), sel_initWithRootViewController_, v33);
  objc_msgSend(v1, sel_presentViewController_animated_completion_, v35, 1, 0);
}

id sub_25603F6C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = v10;
  uint64_t v32 = a7;
  uint64_t v33 = a4;
  uint64_t v34 = a5;
  uint64_t v35 = a6;
  uint64_t v30 = a2;
  uint64_t v31 = a3;
  sub_2560406AC(0, &qword_269F45188, MEMORY[0x263F07920]);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v30 - v15;
  uint64_t v17 = (void (*)(uint64_t))MEMORY[0x263F07490];
  sub_2560406AC(0, (unint64_t *)&qword_269F44D30, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v18 - 8);
  unint64_t v20 = (char *)&v30 - v19;
  sub_256040700(a8, (uint64_t)&v30 - v19, (unint64_t *)&qword_269F44D30, v17);
  uint64_t v21 = sub_256175868();
  uint64_t v22 = *(void *)(v21 - 8);
  id v23 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) != 1)
  {
    id v23 = (void *)sub_2561757F8();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v20, v21);
  }
  sub_256040700(a9, (uint64_t)v16, &qword_269F45188, MEMORY[0x263F07920]);
  uint64_t v24 = sub_256175A08();
  uint64_t v25 = *(void *)(v24 - 8);
  id v26 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v16, 1, v24) != 1)
  {
    id v26 = (void *)sub_256175978();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v16, v24);
  }
  uint64_t v27 = (objc_class *)type metadata accessor for StateOfMindChartViewController();
  v36.receiver = v11;
  v36.super_class = v27;
  id v28 = objc_msgSendSuper2(&v36, sel_initWithHealthStore_primaryDisplayType_unitPreferenceController_dateCache_chartDataCacheController_selectedTimeScopeController_sampleTypeDateRangeController_initialXValue_currentCalendarOverride_options_, a1, v30, v31, v33, v34, v35, v32, v23, v26, a10);

  sub_25604076C(a9, &qword_269F45188, MEMORY[0x263F07920]);
  sub_25604076C(a8, (unint64_t *)&qword_269F44D30, MEMORY[0x263F07490]);
  return v28;
}

id sub_25603F9C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  char v12 = v11;
  uint64_t v33 = a7;
  uint64_t v34 = a8;
  uint64_t v36 = a5;
  uint64_t v37 = a6;
  uint64_t v35 = a4;
  uint64_t v31 = a2;
  uint64_t v32 = a3;
  sub_2560406AC(0, &qword_269F45188, MEMORY[0x263F07920]);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v30 - v14;
  uint64_t v16 = (void (*)(uint64_t))MEMORY[0x263F07490];
  sub_2560406AC(0, (unint64_t *)&qword_269F44D30, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v30 - v18;
  sub_255FB58F8(0, (unint64_t *)&qword_269F45190);
  sub_255FB58F8(0, &qword_269F45198);
  sub_256040528();
  unint64_t v20 = (void *)sub_256177DD8();
  swift_bridgeObjectRelease();
  sub_256040700(a9, (uint64_t)v19, (unint64_t *)&qword_269F44D30, v16);
  uint64_t v21 = sub_256175868();
  uint64_t v22 = *(void *)(v21 - 8);
  id v23 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v19, 1, v21) != 1)
  {
    id v23 = (void *)sub_2561757F8();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
  }
  sub_256040700(a10, (uint64_t)v15, &qword_269F45188, MEMORY[0x263F07920]);
  uint64_t v24 = sub_256175A08();
  uint64_t v25 = *(void *)(v24 - 8);
  id v26 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v15, 1, v24) != 1)
  {
    id v26 = (void *)sub_256175978();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v15, v24);
  }
  uint64_t v27 = (objc_class *)type metadata accessor for StateOfMindChartViewController();
  v38.receiver = v12;
  v38.super_class = v27;
  id v28 = objc_msgSendSuper2(&v38, sel_initWithTimeScopeRanges_healthStore_primaryDisplayType_unitPreferenceController_dateCache_chartDataCacheController_selectedTimeScopeController_sampleTypeDateRangeController_initialXValue_currentCalendarOverride_options_, v20, v31, v32, v35, v36, v37, v33, v34, v23, v26, a11);

  sub_25604076C(a10, &qword_269F45188, MEMORY[0x263F07920]);
  sub_25604076C(a9, (unint64_t *)&qword_269F44D30, MEMORY[0x263F07490]);
  return v28;
}

id sub_25603FD34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v33 = a2;
  uint64_t v34 = a7;
  uint64_t v35 = a8;
  uint64_t v37 = a5;
  uint64_t v38 = a6;
  uint64_t v36 = a4;
  sub_2560406AC(0, &qword_269F45188, MEMORY[0x263F07920]);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v32 - v15;
  sub_2560404C0();
  uint64_t v17 = (void *)sub_256177FF8();
  swift_bridgeObjectRelease();
  if (a3)
  {
    sub_255FB58F8(0, &qword_269F451A8);
    uint64_t v18 = (void *)sub_256177FF8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = 0;
  }
  uint64_t v39 = a10;
  sub_256040590(a10, (uint64_t)v41);
  uint64_t v19 = v42;
  if (v42)
  {
    unint64_t v20 = __swift_project_boxed_opaque_existential_1(v41, v42);
    uint64_t v21 = *(void *)(v19 - 8);
    MEMORY[0x270FA5388](v20);
    id v23 = (char *)&v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v21 + 16))(v23);
    uint64_t v24 = sub_256178818();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  }
  else
  {
    uint64_t v24 = 0;
  }
  sub_256040700(a11, (uint64_t)v16, &qword_269F45188, MEMORY[0x263F07920]);
  uint64_t v25 = sub_256175A08();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v16, 1, v25) != 1)
  {
    uint64_t v27 = (void *)sub_256175978();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v16, v25);
  }
  if (a13)
  {
    sub_255FB58F8(0, (unint64_t *)&qword_269F45190);
    sub_255FB58F8(0, &qword_269F45198);
    sub_256040528();
    id v28 = (void *)sub_256177DD8();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v28 = 0;
  }
  uint64_t v29 = (objc_class *)type metadata accessor for StateOfMindChartViewController();
  v40.receiver = v32;
  v40.super_class = v29;
  id v30 = objc_msgSendSuper2(&v40, sel_initWithStackedDisplayTypes_primaryDisplayTypeStackIndex_stackedDisplayTypeHeights_healthStore_unitPreferenceController_dateCache_chartDataCacheController_selectedTimeScopeController_sampleTypeDateRangeController_initialXValue_currentCalendarOverride_options_timeScopeRanges_, v17, v33, v18, v36, v37, v38, v34, v35, a9, v24, v27, a12, v28);

  swift_unknownObjectRelease();
  sub_25604076C(a11, &qword_269F45188, MEMORY[0x263F07920]);
  sub_256040650(v39);
  return v30;
}

id sub_2560400FC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = sub_256175868();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_256175B68();
  uint64_t v27 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256175B48();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v11 = sub_256175B58();
  os_log_type_t v12 = sub_256178238();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v24 = v8;
    uint64_t v14 = v13;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v29 = v23;
    *(_DWORD *)uint64_t v14 = 136446466;
    uint64_t v15 = sub_256178978();
    uint64_t ObjectType = (uint64_t)v1;
    uint64_t v28 = sub_255FB29A8(v15, v16, &v29);
    uint64_t v25 = a1;
    sub_256178458();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2082;
    sub_256040468();
    uint64_t v17 = sub_2561787E8();
    uint64_t v28 = sub_255FB29A8(v17, v18, &v29);
    uint64_t v2 = (void *)ObjectType;
    sub_256178458();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _os_log_impl(&dword_255F58000, v11, v12, "[%{public}s] Scrolling to date: %{public}s", (uint8_t *)v14, 0x16u);
    uint64_t v19 = v23;
    swift_arrayDestroy();
    MEMORY[0x25A2A1E90](v19, -1, -1);
    MEMORY[0x25A2A1E90](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v24);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v8);
  }
  unint64_t v20 = (void *)sub_2561757F8();
  objc_msgSend(v2, sel_scrollToDate_withVisibleAlignment_, v20, 3);

  return objc_msgSend(v2, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

unint64_t sub_256040468()
{
  unint64_t result = qword_269F47700;
  if (!qword_269F47700)
  {
    sub_256175868();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F47700);
  }
  return result;
}

void sub_2560404C0()
{
  if (!qword_269F43AC0)
  {
    sub_255FB58F8(255, (unint64_t *)&qword_269F46A00);
    unint64_t v0 = sub_256178078();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43AC0);
    }
  }
}

unint64_t sub_256040528()
{
  unint64_t result = qword_269F451A0;
  if (!qword_269F451A0)
  {
    sub_255FB58F8(255, (unint64_t *)&qword_269F45190);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F451A0);
  }
  return result;
}

uint64_t sub_256040590(uint64_t a1, uint64_t a2)
{
  sub_2560405F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2560405F4()
{
  if (!qword_269F46A90)
  {
    unint64_t v0 = sub_256178448();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46A90);
    }
  }
}

uint64_t sub_256040650(uint64_t a1)
{
  sub_2560405F4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2560406AC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_256178448();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_256040700(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_2560406AC(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_25604076C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_2560406AC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_2560407C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_256175868();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for MomentaryDatePickerFullView();
  uint64_t v11 = (uint64_t *)(a3 + v10[8]);
  *uint64_t v11 = swift_getKeyPath();
  os_log_type_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  sub_256043FAC(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = (uint64_t *)(a3 + v10[9]);
  *uint64_t v13 = swift_getKeyPath();
  sub_256043FAC(0, &qword_269F42CC0, MEMORY[0x263F188C0], v12);
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = (uint64_t *)(a3 + v10[10]);
  *uint64_t v14 = swift_getKeyPath();
  sub_256043FAC(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, v12);
  swift_storeEnumTagMultiPayload();
  sub_256048BF8(a1, a3, (uint64_t (*)(void))sub_256044014);
  uint64_t v15 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  unint64_t v16 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F1B750];
  sub_2560489B8(a2, a3 + v10[5], &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  sub_256043FAC(0, &qword_269F44B48, v15, v16);
  MEMORY[0x25A2A01A0]();
  sub_256048A28(a2, &qword_269F44B48, v15, v16);
  sub_256048C60(a1, (uint64_t (*)(void))sub_256044014);
  uint64_t v17 = a3 + v10[6];
  sub_256043FAC(0, &qword_269F44A68, v15, MEMORY[0x263F1B5D0]);
  *(void *)(v17 + *(int *)(v18 + 28)) = 0;
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(v17, v9, v6);
  uint64_t v20 = a3 + v10[7];
  *(unsigned char *)uint64_t v20 = 1;
  *(void *)(v20 + 8) = 0;
  return result;
}

uint64_t type metadata accessor for MomentaryDatePickerFullView()
{
  uint64_t result = qword_269F451C0;
  if (!qword_269F451C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_256040B10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v3 = sub_2561769B8();
  uint64_t v63 = *(void *)(v3 - 8);
  uint64_t v64 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v61 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_256176618();
  uint64_t v5 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25604727C();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  os_log_type_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560471AC();
  uint64_t v50 = v13;
  uint64_t v49 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560470AC();
  uint64_t v55 = v16;
  uint64_t v53 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v51 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256046F2C();
  uint64_t v57 = v18;
  uint64_t v54 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v52 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256046D74();
  uint64_t v58 = *(void *)(v20 - 8);
  uint64_t v59 = v20;
  MEMORY[0x270FA5388](v20);
  uint64_t v56 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = a1;
  uint64_t v65 = a1;
  sub_25604732C(0);
  sub_256047A60(&qword_269F452C0, sub_25604732C);
  sub_256176F68();
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v22 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_2561755B8();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();

  uint64_t v66 = v23;
  uint64_t v67 = v25;
  uint64_t v26 = sub_256047A60(&qword_269F452C8, (void (*)(uint64_t))sub_25604727C);
  unint64_t v27 = sub_255F5CE90();
  uint64_t v28 = MEMORY[0x263F8D310];
  sub_256177158();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v29 = v48;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F19698], v48);
  uint64_t v66 = v9;
  uint64_t v67 = v28;
  uint64_t v68 = v26;
  unint64_t v69 = v27;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v31 = v51;
  uint64_t v32 = v50;
  sub_256177288();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v29);
  uint64_t v33 = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v15, v32);
  MEMORY[0x270FA5388](v33);
  sub_256047EC4(0);
  uint64_t v35 = v34;
  uint64_t v66 = v32;
  uint64_t v67 = OpaqueTypeConformance2;
  uint64_t v36 = swift_getOpaqueTypeConformance2();
  uint64_t v37 = sub_256047A60(&qword_269F45300, sub_256047EC4);
  uint64_t v38 = v52;
  uint64_t v39 = v55;
  sub_256177348();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v31, v39);
  uint64_t v66 = v39;
  uint64_t v67 = v35;
  uint64_t v68 = v36;
  unint64_t v69 = v37;
  uint64_t v40 = swift_getOpaqueTypeConformance2();
  uint64_t v42 = v56;
  uint64_t v41 = v57;
  sub_256177268();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v38, v41);
  uint64_t v43 = v61;
  sub_2561769A8();
  uint64_t v66 = v41;
  uint64_t v67 = v40;
  swift_getOpaqueTypeConformance2();
  uint64_t v44 = v59;
  uint64_t v45 = v64;
  sub_256177388();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v43, v45);
  return (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v42, v44);
}

uint64_t sub_2560412FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_256043FAC(0, &qword_269F45288, (uint64_t (*)(uint64_t))sub_256047B48, MEMORY[0x263F8D8F0]);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = &v32[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v32[-v8];
  sub_2560474CC(0, &qword_269F45220, sub_256047560, &qword_269F45280, sub_256047560);
  MEMORY[0x270FA5388](v10 - 8);
  os_log_type_t v12 = &v32[-v11];
  sub_256047400();
  uint64_t v14 = v13 - 8;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = &v32[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = &v32[-v18];
  *(void *)os_log_type_t v12 = sub_256176678();
  *((void *)v12 + 1) = 0;
  v12[16] = 1;
  sub_256048A84(0, &qword_269F45310, sub_256047560);
  sub_256041D34(a1, (uint64_t *)&v12[*(int *)(v20 + 44)]);
  id v21 = objc_msgSend(self, sel_labelColor);
  uint64_t v22 = MEMORY[0x25A29FE80](v21);
  sub_25604883C((uint64_t)v12, (uint64_t)v17);
  *(void *)&v17[*(int *)(v14 + 44)] = v22;
  sub_2560488D8((uint64_t)v12);
  sub_256048B90((uint64_t)v17, (uint64_t)v19, (uint64_t (*)(void))sub_256047400);
  uint64_t v23 = a1 + *(int *)(type metadata accessor for MomentaryDatePickerFullView() + 28);
  char v24 = *(unsigned char *)v23;
  uint64_t v25 = *(void *)(v23 + 8);
  v32[8] = v24;
  uint64_t v33 = v25;
  sub_25604896C(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
  sub_256177578();
  if (v34 == 1)
  {
    *(void *)uint64_t v9 = sub_256176678();
    *((void *)v9 + 1) = 0;
    v9[16] = 1;
    sub_256048A84(0, &qword_269F45318, sub_256047B84);
    sub_256042E4C(a1, &v9[*(int *)(v26 + 44)]);
    sub_256047B48(0);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v9, 0, 1, v27);
  }
  else
  {
    sub_256047B48(0);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v9, 1, 1, v28);
  }
  sub_256048BF8((uint64_t)v19, (uint64_t)v17, (uint64_t (*)(void))sub_256047400);
  uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_2560489B8((uint64_t)v9, (uint64_t)v7, &qword_269F45288, (uint64_t (*)(uint64_t))sub_256047B48, MEMORY[0x263F8D8F0]);
  sub_256048BF8((uint64_t)v17, a2, (uint64_t (*)(void))sub_256047400);
  sub_256047360();
  sub_2560489B8((uint64_t)v7, a2 + *(int *)(v30 + 48), &qword_269F45288, (uint64_t (*)(uint64_t))sub_256047B48, v29);
  sub_256048A28((uint64_t)v9, &qword_269F45288, (uint64_t (*)(uint64_t))sub_256047B48, v29);
  sub_256048C60((uint64_t)v19, (uint64_t (*)(void))sub_256047400);
  sub_256048A28((uint64_t)v7, &qword_269F45288, (uint64_t (*)(uint64_t))sub_256047B48, v29);
  return sub_256048C60((uint64_t)v17, (uint64_t (*)(void))sub_256047400);
}

uint64_t sub_256041770@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a1;
  uint64_t v51 = a2;
  sub_256047EF8();
  uint64_t v50 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v49 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560480DC();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v47 = v5;
  uint64_t v48 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v44 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256047FC8(0, &qword_269F452E0, (void (*)(uint64_t))sub_2560480DC, (void (*)(void))sub_2560482D0);
  uint64_t v45 = *(void *)(v8 - 8);
  uint64_t v46 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v42 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v43 = (char *)&v40 - v11;
  uint64_t v12 = sub_256176958();
  MEMORY[0x270FA5388](v12 - 8);
  sub_255FE1C38();
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256047FC8(0, (unint64_t *)&qword_269F44150, (void (*)(uint64_t))sub_255FE1C38, (void (*)(void))sub_2560480A8);
  uint64_t v41 = v18;
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  char v24 = (char *)&v40 - v23;
  sub_2561768F8();
  uint64_t v53 = a1;
  uint64_t v25 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x263F1B5E8];
  sub_256048058(0, (unint64_t *)&qword_269F42ED0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
  uint64_t v27 = v26;
  uint64_t v28 = sub_256047E6C((unint64_t *)&qword_269F42EE0, (unint64_t *)&qword_269F42ED0, v25);
  sub_256175E68();
  uint64_t v29 = sub_2560480A8();
  MEMORY[0x25A29F470](v17, v14, v29);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  uint64_t v30 = v41;
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v24, v22, v41);
  sub_256176908();
  uint64_t v52 = v40;
  sub_2560481EC();
  uint64_t v54 = v27;
  uint64_t v55 = v28;
  swift_getOpaqueTypeConformance2();
  uint64_t v31 = v44;
  sub_256175E68();
  uint64_t v32 = sub_2560482D0();
  uint64_t v33 = v42;
  uint64_t v34 = v47;
  MEMORY[0x25A29F470](v31, v47, v32);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v31, v34);
  uint64_t v36 = v45;
  uint64_t v35 = v46;
  uint64_t v37 = v43;
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v43, v33, v46);
  uint64_t v38 = &v49[*(int *)(v50 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v49, v24, v30);
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v38, v37, v35);
  sub_2561767A8();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v35);
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v24, v30);
}

uint64_t sub_256041D34@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v93 = a1;
  uint64_t v97 = a2;
  uint64_t v2 = sub_256175D98();
  uint64_t v95 = *(void *)(v2 - 8);
  uint64_t v96 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v94 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v92 = (uint64_t)&v72 - v5;
  uint64_t v90 = sub_256176C38();
  uint64_t v87 = *(void *)(v90 - 8);
  MEMORY[0x270FA5388](v90);
  uint64_t v85 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_256176328();
  uint64_t v79 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  uint64_t v8 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = type metadata accessor for MomentaryDatePickerFullView();
  uint64_t v72 = *(void *)(v82 - 8);
  uint64_t v9 = *(void *)(v72 + 64);
  MEMORY[0x270FA5388](v82);
  sub_256047804();
  uint64_t v77 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25604779C();
  uint64_t v78 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256047684();
  uint64_t v89 = v17;
  uint64_t v86 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v84 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256047604();
  uint64_t v83 = v19;
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v91 = (uint64_t)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v81 = (char *)&v72 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v88 = (uint64_t)&v72 - v24;
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v25 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_2561755B8();
  uint64_t v28 = v27;
  swift_bridgeObjectRelease();

  uint64_t v98 = v26;
  uint64_t v99 = v28;
  sub_255F5CE90();
  uint64_t v29 = sub_256177028();
  uint64_t v31 = v30;
  LOBYTE(v28) = v32 & 1;
  LODWORD(v98) = sub_256176A48();
  uint64_t v76 = sub_256176FA8();
  uint64_t v74 = v33;
  int v73 = v34;
  uint64_t v75 = v35;
  sub_255F67B2C(v29, v31, v28);
  swift_bridgeObjectRelease();
  sub_256048BF8(v93, (uint64_t)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for MomentaryDatePickerFullView);
  unint64_t v36 = (*(unsigned __int8 *)(v72 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
  uint64_t v37 = swift_allocObject();
  uint64_t v38 = sub_256048B90((uint64_t)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v37 + v36, (uint64_t (*)(void))type metadata accessor for MomentaryDatePickerFullView);
  MEMORY[0x270FA5388](v38);
  sub_2560478AC();
  sub_2560479A0(&qword_269F45260, (void (*)(uint64_t))sub_2560478AC, (void (*)(void))sub_255F973A0, (void (*)(void))sub_255F67518);
  sub_2561775C8();
  sub_256176308();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v40 = (uint64_t *)&v16[*(int *)(v78 + 36)];
  sub_25604796C(0);
  uint64_t v42 = v79;
  uint64_t v43 = v80;
  (*(void (**)(char *, char *, uint64_t))(v79 + 16))((char *)v40 + *(int *)(v41 + 28), v8, v80);
  *uint64_t v40 = KeyPath;
  uint64_t v44 = v77;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v16, v13, v77);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v8, v43);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v44);
  uint64_t v45 = v85;
  sub_256176C28();
  sub_2560479A0(&qword_269F45268, (void (*)(uint64_t))sub_25604779C, (void (*)(void))sub_256047A2C, (void (*)(void))sub_256047AA8);
  sub_256047A60((unint64_t *)&qword_269F45278, MEMORY[0x263F1A3B8]);
  uint64_t v46 = v84;
  uint64_t v47 = v90;
  sub_256177078();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v45, v47);
  sub_256048C60((uint64_t)v16, (uint64_t (*)(void))sub_25604779C);
  uint64_t v48 = v92;
  sub_25611A114(v92);
  uint64_t v50 = v94;
  uint64_t v49 = v95;
  uint64_t v51 = v96;
  (*(void (**)(char *, void, uint64_t))(v95 + 104))(v94, *MEMORY[0x263F184F8], v96);
  char v52 = sub_256175D88();
  uint64_t v53 = *(void (**)(char *, uint64_t))(v49 + 8);
  v53(v50, v51);
  v53((char *)v48, v51);
  uint64_t v54 = self;
  uint64_t v55 = &selRef_tertiarySystemBackgroundColor;
  if ((v52 & 1) == 0) {
    uint64_t v55 = &selRef_secondarySystemBackgroundColor;
  }
  id v56 = [v54 *v55];
  char v57 = v73 & 1;
  uint64_t v58 = MEMORY[0x25A29FE80](v56);
  uint64_t v59 = swift_getKeyPath();
  uint64_t v98 = v58;
  swift_retain();
  uint64_t v60 = sub_256175F48();
  uint64_t v61 = v86;
  uint64_t v62 = (uint64_t)v81;
  uint64_t v63 = v89;
  (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v81, v46, v89);
  swift_release();
  uint64_t v64 = (uint64_t *)(v62 + *(int *)(v83 + 36));
  *uint64_t v64 = v59;
  v64[1] = v60;
  (*(void (**)(char *, uint64_t))(v61 + 8))(v46, v63);
  uint64_t v65 = v88;
  sub_256048B90(v62, v88, (uint64_t (*)(void))sub_256047604);
  uint64_t v66 = v91;
  sub_256048BF8(v65, v91, (uint64_t (*)(void))sub_256047604);
  uint64_t v67 = v97;
  uint64_t v68 = v76;
  uint64_t v69 = v74;
  *uint64_t v97 = v76;
  v67[1] = v69;
  *((unsigned char *)v67 + 16) = v57;
  v67[3] = v75;
  v67[4] = 0;
  *((unsigned char *)v67 + 40) = 1;
  sub_256047594();
  sub_256048BF8(v66, (uint64_t)v67 + *(int *)(v70 + 64), (uint64_t (*)(void))sub_256047604);
  sub_255F67B94(v68, v69, v57);
  swift_bridgeObjectRetain();
  sub_256048C60(v65, (uint64_t (*)(void))sub_256047604);
  sub_256048C60(v66, (uint64_t (*)(void))sub_256047604);
  sub_255F67B2C(v68, v69, v57);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2560427D0()
{
  return swift_release();
}

uint64_t sub_256042840()
{
  return swift_release();
}

uint64_t sub_256042918@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v47 = a1;
  uint64_t v2 = sub_256175758();
  uint64_t v44 = *(void *)(v2 - 8);
  uint64_t v45 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v43 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_256175708();
  uint64_t v39 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_256175718();
  uint64_t v6 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2561757B8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v36 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v36 - v17;
  uint64_t v40 = sub_256175868();
  uint64_t v37 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v20 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for MomentaryDatePickerFullView();
  sub_256043FAC(0, &qword_269F44A68, MEMORY[0x263F07490], MEMORY[0x263F1B5D0]);
  uint64_t v21 = sub_256177578();
  MEMORY[0x25A29DDD0](v21);
  sub_2561756F8();
  sub_2561756E8();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v5, v41);
  sub_2561756A8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v38);
  uint64_t v22 = *(void (**)(char *, uint64_t))(v10 + 8);
  v22(v13, v9);
  uint64_t v23 = v43;
  sub_256175748();
  sub_256175798();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v23, v45);
  v22(v16, v9);
  sub_256047A60(&qword_269F44BF8, MEMORY[0x263F07258]);
  sub_256175848();
  v22(v18, v9);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v20, v40);
  uint64_t v48 = v50;
  uint64_t v49 = v51;
  sub_255F5CE90();
  uint64_t v24 = sub_256177028();
  uint64_t v26 = v25;
  char v28 = v27;
  uint64_t v30 = v29;
  uint64_t v31 = (char *)(v47 + *(int *)(v42 + 28));
  char v32 = *v31;
  uint64_t v33 = *((void *)v31 + 1);
  LOBYTE(v50) = v32;
  uint64_t v51 = v33;
  sub_25604896C(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
  sub_256177578();
  if (v48 == 1) {
    uint64_t result = sub_256177438();
  }
  else {
    uint64_t result = sub_2561774A8();
  }
  uint64_t v35 = v46;
  *uint64_t v46 = v24;
  v35[1] = v26;
  *((unsigned char *)v35 + 16) = v28 & 1;
  v35[3] = v30;
  *((_WORD *)v35 + 16) = 257;
  v35[5] = result;
  return result;
}

uint64_t sub_256042E4C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v58 = a2;
  uint64_t v3 = sub_256176978();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v56 = v3;
  uint64_t v57 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v55 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2561768C8();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v53 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256044014();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v51 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_256043FAC(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v46 = (char *)&v44 - v12;
  uint64_t v47 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x263F18390];
  sub_256048058(0, &qword_269F44AC0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F18390]);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v48 = v13;
  uint64_t v49 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v44 - v15;
  sub_256047D88();
  uint64_t v52 = v17;
  uint64_t v54 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v45 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256047C24();
  uint64_t v20 = v19;
  uint64_t v21 = *(void *)(v19 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v24 = (char *)&v44 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v50 = (char *)&v44 - v25;
  sub_2561766C8();
  uint64_t v44 = v26;
  type metadata accessor for MomentaryDatePickerFullView();
  sub_256043FAC(0, &qword_269F44A68, v10, MEMORY[0x263F1B5D0]);
  sub_256177598();
  sub_256048BF8(a1, v51, (uint64_t (*)(void))sub_256044014);
  sub_2561768B8();
  sub_256175D38();
  uint64_t v27 = sub_256047E6C((unint64_t *)&qword_269F44AC8, &qword_269F44AC0, v47);
  char v28 = v45;
  uint64_t v29 = v48;
  sub_2561770D8();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v16, v29);
  uint64_t v30 = v55;
  sub_256176968();
  uint64_t v60 = v29;
  uint64_t v61 = v27;
  swift_getOpaqueTypeConformance2();
  sub_256047A60(&qword_269F44AD0, MEMORY[0x263F19C28]);
  uint64_t v31 = v52;
  uint64_t v32 = v56;
  sub_256177128();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v30, v32);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v28, v31);
  uint64_t v33 = v50;
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v50, v24, v20);
  LOBYTE(v60) = 1;
  int v34 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
  v34(v24, v33, v20);
  char v59 = 1;
  char v35 = v60;
  uint64_t v36 = v58;
  void *v58 = 0;
  *((unsigned char *)v36 + 8) = v35;
  uint64_t v37 = (char *)v36;
  sub_256047BB8();
  uint64_t v39 = v38;
  v34(&v37[*(int *)(v38 + 48)], v24, v20);
  uint64_t v40 = &v37[*(int *)(v39 + 64)];
  char v41 = v59;
  *(void *)uint64_t v40 = 0;
  v40[8] = v41;
  uint64_t v42 = *(void (**)(char *, uint64_t))(v21 + 8);
  v42(v33, v20);
  return ((uint64_t (*)(char *, uint64_t))v42)(v24, v20);
}

uint64_t sub_256043480(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MomentaryDatePickerFullView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2 - 8);
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v5 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_2561755B8();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();

  v12[0] = v6;
  v12[1] = v8;
  sub_256048BF8(a1, (uint64_t)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for MomentaryDatePickerFullView);
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  sub_256048B90((uint64_t)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, (uint64_t (*)(void))type metadata accessor for MomentaryDatePickerFullView);
  sub_255F5CE90();
  return sub_2561775D8();
}

uint64_t sub_25604367C()
{
  uint64_t v0 = sub_256175F88();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MomentaryDatePickerFullView();
  sub_25611A6E4((uint64_t)v3);
  sub_256175F78();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_256043760@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v17[0] = a1;
  v17[1] = a2;
  uint64_t v2 = type metadata accessor for MomentaryDatePickerFullView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2 - 8);
  sub_256048058(0, (unint64_t *)&qword_269F42ED0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v9 = (char *)v17 - v8;
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v10 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_2561755B8();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();

  v17[2] = v11;
  v17[3] = v13;
  sub_256048BF8(v17[0], (uint64_t)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for MomentaryDatePickerFullView);
  unint64_t v14 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v15 = swift_allocObject();
  sub_256048B90((uint64_t)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, (uint64_t (*)(void))type metadata accessor for MomentaryDatePickerFullView);
  sub_255F5CE90();
  sub_2561775D8();
  sub_256047E6C((unint64_t *)&qword_269F42EE0, (unint64_t *)&qword_269F42ED0, MEMORY[0x263F1B5E8]);
  sub_256177298();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_256043A60()
{
  uint64_t v13 = sub_256175F88();
  uint64_t v0 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_256175868();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v9 = (char *)&v12 - v8;
  type metadata accessor for MomentaryDatePickerFullView();
  id v10 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_256043FAC(0, &qword_269F44A68, MEMORY[0x263F07490], MEMORY[0x263F1B5D0]);
  sub_256177578();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  sub_256043FAC(0, &qword_269F44B48, v10, MEMORY[0x263F1B750]);
  sub_256177728();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  sub_25611A6E4((uint64_t)v2);
  sub_256175F78();
  return (*(uint64_t (**)(char *, uint64_t))(v0 + 8))(v2, v13);
}

uint64_t sub_256043CB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v35 = a1;
  sub_25604693C();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = v1;
  sub_256046B6C();
  uint64_t v34 = v7;
  sub_256046D74();
  uint64_t v33 = v8;
  uint64_t v9 = sub_2561769B8();
  sub_256046F2C();
  uint64_t v11 = v10;
  sub_2560470AC();
  uint64_t v13 = v12;
  sub_256047EC4(255);
  uint64_t v15 = v14;
  sub_2560471AC();
  uint64_t v17 = v16;
  sub_25604727C();
  uint64_t v19 = v18;
  uint64_t v20 = sub_256047A60(&qword_269F452C8, (void (*)(uint64_t))sub_25604727C);
  unint64_t v21 = sub_255F5CE90();
  uint64_t v37 = v19;
  uint64_t v38 = MEMORY[0x263F8D310];
  uint64_t v39 = v20;
  unint64_t v40 = v21;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v37 = v17;
  uint64_t v38 = OpaqueTypeConformance2;
  uint64_t v23 = swift_getOpaqueTypeConformance2();
  uint64_t v24 = sub_256047A60(&qword_269F45300, sub_256047EC4);
  uint64_t v37 = v13;
  uint64_t v38 = v15;
  uint64_t v39 = v23;
  unint64_t v40 = v24;
  uint64_t v25 = swift_getOpaqueTypeConformance2();
  uint64_t v37 = v11;
  uint64_t v38 = v25;
  uint64_t v26 = swift_getOpaqueTypeConformance2();
  uint64_t v37 = v33;
  uint64_t v38 = v9;
  uint64_t v39 = v26;
  unint64_t v40 = MEMORY[0x263F19D08];
  swift_getOpaqueTypeConformance2();
  sub_2561761D8();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v28 = v35;
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 16))(v35, v6, v3);
  sub_256048314();
  uint64_t v30 = (uint64_t *)(v28 + *(int *)(v29 + 36));
  *uint64_t v30 = KeyPath;
  v30[1] = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_256043FAC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_256044014()
{
  if (!qword_269F451B0)
  {
    sub_256175868();
    sub_256047A60((unint64_t *)&qword_269F451B8, MEMORY[0x263F07490]);
    unint64_t v0 = sub_256177E78();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F451B0);
    }
  }
}

uint64_t *sub_2560440A8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v32 = *a2;
    *a1 = *a2;
    uint64_t v20 = (uint64_t *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_256175868();
    unint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    sub_256044014();
    v8((uint64_t *)((char *)a1 + *(int *)(v9 + 36)), (uint64_t *)((char *)a2 + *(int *)(v9 + 36)), v7);
    uint64_t v10 = a3[5];
    uint64_t v11 = (uint64_t *)((char *)a1 + v10);
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = *(uint64_t *)((char *)a2 + v10 + 8);
    *uint64_t v11 = *(uint64_t *)((char *)a2 + v10);
    v11[1] = v13;
    uint64_t v14 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
    sub_256043FAC(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
    uint64_t v16 = *(int *)(v15 + 32);
    uint64_t v17 = (char *)v11 + v16;
    uint64_t v18 = &v12[v16];
    swift_retain();
    swift_retain();
    uint64_t v19 = v18;
    uint64_t v20 = a1;
    v8((uint64_t *)v17, (uint64_t *)v19, v7);
    uint64_t v21 = a3[6];
    uint64_t v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    v8((uint64_t *)((char *)v20 + v21), (uint64_t *)((char *)a2 + v21), v7);
    sub_256043FAC(0, &qword_269F44A68, v14, MEMORY[0x263F1B5D0]);
    *(void *)&v22[*(int *)(v24 + 28)] = *(void *)&v23[*(int *)(v24 + 28)];
    uint64_t v25 = a3[7];
    uint64_t v26 = a3[8];
    uint64_t v27 = (char *)v20 + v25;
    uint64_t v28 = (char *)a2 + v25;
    *uint64_t v27 = *v28;
    *((void *)v27 + 1) = *((void *)v28 + 1);
    uint64_t v29 = (uint64_t *)((char *)v20 + v26);
    uint64_t v30 = (uint64_t *)((char *)a2 + v26);
    sub_256043FAC(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v31 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    }
    else
    {
      *uint64_t v29 = *v30;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v33 = a3[9];
    uint64_t v34 = (uint64_t *)((char *)v20 + v33);
    uint64_t v35 = (uint64_t *)((char *)a2 + v33);
    sub_256043FAC(0, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v36 = sub_256175F88();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
    }
    else
    {
      *uint64_t v34 = *v35;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v37 = a3[10];
    uint64_t v38 = (uint64_t *)((char *)v20 + v37);
    uint64_t v39 = (uint64_t *)((char *)a2 + v37);
    sub_256043FAC(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v40 = sub_256176AA8();
      uint64_t v41 = *(void *)(v40 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
      {
        sub_256043FAC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v41 + 16))(v38, v39, v40);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      }
      uint64_t v43 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      uint64_t v44 = (char *)v38 + v43;
      uint64_t v45 = (char *)v39 + v43;
      uint64_t v46 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
    }
    else
    {
      void *v38 = *v39;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v20;
}

uint64_t sub_256044620(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_256175868();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  sub_256044014();
  v5(a1 + *(int *)(v6 + 36), v4);
  uint64_t v7 = a1 + a2[5];
  swift_release();
  swift_release();
  unint64_t v8 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_256043FAC(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  v5(v7 + *(int *)(v9 + 32), v4);
  v5(a1 + a2[6], v4);
  sub_256043FAC(0, &qword_269F44A68, v8, MEMORY[0x263F1B5D0]);
  swift_release();
  swift_release();
  uint64_t v10 = a1 + a2[8];
  sub_256043FAC(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  uint64_t v12 = a1 + a2[9];
  sub_256043FAC(0, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_256175F88();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  else
  {
    swift_release();
  }
  uint64_t v14 = a1 + a2[10];
  sub_256043FAC(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_256176AA8();
    uint64_t v16 = *(void *)(v15 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15)) {
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    }
    uint64_t v17 = v14 + *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    uint64_t v18 = sub_256176158();
    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8);
    return v19(v17, v18);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_256044A10(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_256175868();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  sub_256044014();
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = a2 + v9;
  uint64_t v12 = *(void *)(a2 + v9 + 8);
  *uint64_t v10 = *(void *)(a2 + v9);
  v10[1] = v12;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_256043FAC(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  uint64_t v15 = *(int *)(v14 + 32);
  uint64_t v16 = (char *)v10 + v15;
  uint64_t v17 = v11 + v15;
  swift_retain();
  swift_retain();
  uint64_t v18 = v17;
  uint64_t v19 = a1;
  v7((uint64_t)v16, v18, v6);
  uint64_t v20 = a3[6];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  v7(a1 + v20, a2 + v20, v6);
  sub_256043FAC(0, &qword_269F44A68, v13, MEMORY[0x263F1B5D0]);
  *(void *)(v21 + *(int *)(v23 + 28)) = *(void *)(v22 + *(int *)(v23 + 28));
  uint64_t v24 = a3[7];
  uint64_t v25 = a3[8];
  uint64_t v26 = a1 + v24;
  uint64_t v27 = a2 + v24;
  *(unsigned char *)uint64_t v26 = *(unsigned char *)v27;
  *(void *)(v26 + 8) = *(void *)(v27 + 8);
  uint64_t v28 = (void *)(a1 + v25);
  uint64_t v29 = (void *)(a2 + v25);
  sub_256043FAC(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v30 = sub_256175D98();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  }
  else
  {
    *uint64_t v28 = *v29;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v31 = a3[9];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (void *)(a2 + v31);
  sub_256043FAC(0, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v34 = sub_256175F88();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  }
  else
  {
    *uint64_t v32 = *v33;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v35 = a3[10];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (void *)(a2 + v35);
  sub_256043FAC(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v38 = sub_256176AA8();
    uint64_t v39 = *(void *)(v38 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
    {
      sub_256043FAC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v39 + 16))(v36, v37, v38);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
    }
    uint64_t v41 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    uint64_t v42 = (char *)v36 + v41;
    uint64_t v43 = (char *)v37 + v41;
    uint64_t v44 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
  }
  else
  {
    void *v36 = *v37;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return v19;
}

uint64_t sub_256044F44(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_256175868();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  sub_256044014();
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  swift_retain();
  swift_release();
  *(void *)(v10 + 8) = *(void *)(v11 + 8);
  swift_retain();
  swift_release();
  uint64_t v12 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_256043FAC(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  v7(v10 + *(int *)(v13 + 32), v11 + *(int *)(v13 + 32), v6);
  uint64_t v14 = a3[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  v7(a1 + v14, a2 + v14, v6);
  sub_256043FAC(0, &qword_269F44A68, v12, MEMORY[0x263F1B5D0]);
  *(void *)(v15 + *(int *)(v17 + 28)) = *(void *)(v16 + *(int *)(v17 + 28));
  swift_retain();
  swift_release();
  uint64_t v18 = a3[7];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(unsigned char *)uint64_t v19 = *(unsigned char *)v20;
  *(void *)(v19 + 8) = *(void *)(v20 + 8);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v21 = a3[8];
    uint64_t v22 = (void *)(a1 + v21);
    uint64_t v23 = (void *)(a2 + v21);
    uint64_t v24 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    uint64_t v25 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_256048A28(a1 + v21, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    sub_256043FAC(0, &qword_269F47D00, v24, v25);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v22, v23, v26);
    }
    else
    {
      void *v22 = *v23;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v27 = a3[9];
    uint64_t v28 = (void *)(a1 + v27);
    uint64_t v29 = (void *)(a2 + v27);
    uint64_t v30 = (uint64_t (*)(uint64_t))MEMORY[0x263F188C0];
    uint64_t v31 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_256048A28(a1 + v27, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
    sub_256043FAC(0, &qword_269F42CC0, v30, v31);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v32 = sub_256175F88();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(v28, v29, v32);
    }
    else
    {
      *uint64_t v28 = *v29;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v33 = a3[10];
    uint64_t v34 = (void *)(a1 + v33);
    uint64_t v35 = (void *)(a2 + v33);
    uint64_t v36 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_256048A28(a1 + v33, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    sub_256043FAC(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, v36);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v37 = sub_256176AA8();
      uint64_t v38 = *(void *)(v37 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v38 + 48))(v35, 1, v37))
      {
        sub_256043FAC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v34, v35, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v38 + 16))(v34, v35, v37);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v38 + 56))(v34, 0, 1, v37);
      }
      uint64_t v40 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      uint64_t v41 = (char *)v34 + v40;
      uint64_t v42 = (char *)v35 + v40;
      uint64_t v43 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    }
    else
    {
      *uint64_t v34 = *v35;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2560454E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_256175868();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  sub_256044014();
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = a2 + v9;
  uint64_t v12 = *(void *)(a2 + v9 + 8);
  *uint64_t v10 = *(void *)(a2 + v9);
  v10[1] = v12;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_256043FAC(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  v7((uint64_t)v10 + *(int *)(v14 + 32), v11 + *(int *)(v14 + 32), v6);
  uint64_t v15 = a3[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  v7(a1 + v15, a2 + v15, v6);
  sub_256043FAC(0, &qword_269F44A68, v13, MEMORY[0x263F1B5D0]);
  *(void *)(v16 + *(int *)(v18 + 28)) = *(void *)(v17 + *(int *)(v18 + 28));
  uint64_t v19 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (const void *)(a2 + v19);
  sub_256043FAC(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  uint64_t v23 = v22;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = sub_256175D98();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v20, v21, v24);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
  }
  uint64_t v25 = a3[9];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (const void *)(a2 + v25);
  sub_256043FAC(0, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
  uint64_t v29 = v28;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v30 = sub_256175F88();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v30 - 8) + 32))(v26, v27, v30);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
  }
  uint64_t v31 = a3[10];
  uint64_t v32 = (char *)(a1 + v31);
  uint64_t v33 = (char *)(a2 + v31);
  sub_256043FAC(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  uint64_t v35 = v34;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v36 = sub_256176AA8();
    uint64_t v37 = *(void *)(v36 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v33, 1, v36))
    {
      sub_256043FAC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v32, v33, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v32, v33, v36);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v32, 0, 1, v36);
    }
    uint64_t v39 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    uint64_t v40 = &v32[v39];
    uint64_t v41 = &v33[v39];
    uint64_t v42 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
  }
  return a1;
}

uint64_t sub_2560459E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_256175868();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  sub_256044014();
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  swift_release();
  *(void *)(v10 + 8) = *(void *)(v11 + 8);
  swift_release();
  uint64_t v12 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_256043FAC(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  v7(v10 + *(int *)(v13 + 32), v11 + *(int *)(v13 + 32), v6);
  uint64_t v14 = a3[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  v7(a1 + v14, a2 + v14, v6);
  sub_256043FAC(0, &qword_269F44A68, v12, MEMORY[0x263F1B5D0]);
  *(void *)(v15 + *(int *)(v17 + 28)) = *(void *)(v16 + *(int *)(v17 + 28));
  swift_release();
  uint64_t v18 = a3[7];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(unsigned char *)uint64_t v19 = *(unsigned char *)v20;
  *(void *)(v19 + 8) = *(void *)(v20 + 8);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v21 = a3[8];
    uint64_t v22 = (void *)(a1 + v21);
    uint64_t v23 = (const void *)(a2 + v21);
    uint64_t v24 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    uint64_t v25 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_256048A28(a1 + v21, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    sub_256043FAC(0, &qword_269F47D00, v24, v25);
    uint64_t v27 = v26;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v28 = sub_256175D98();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v28 - 8) + 32))(v22, v23, v28);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v22, v23, *(void *)(*(void *)(v27 - 8) + 64));
    }
    uint64_t v29 = a3[9];
    uint64_t v30 = (void *)(a1 + v29);
    uint64_t v31 = (const void *)(a2 + v29);
    uint64_t v32 = (uint64_t (*)(uint64_t))MEMORY[0x263F188C0];
    uint64_t v33 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_256048A28(a1 + v29, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
    sub_256043FAC(0, &qword_269F42CC0, v32, v33);
    uint64_t v35 = v34;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v36 = sub_256175F88();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v36 - 8) + 32))(v30, v31, v36);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v30, v31, *(void *)(*(void *)(v35 - 8) + 64));
    }
    uint64_t v37 = a3[10];
    uint64_t v38 = (char *)(a1 + v37);
    uint64_t v39 = (char *)(a2 + v37);
    uint64_t v40 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_256048A28(a1 + v37, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    sub_256043FAC(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, v40);
    uint64_t v42 = v41;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v43 = sub_256176AA8();
      uint64_t v44 = *(void *)(v43 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v39, 1, v43))
      {
        sub_256043FAC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v38, v39, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v38, v39, v43);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v38, 0, 1, v43);
      }
      uint64_t v46 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      uint64_t v47 = &v38[v46];
      uint64_t v48 = &v39[v46];
      uint64_t v49 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_256045F8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256045FA0);
}

uint64_t sub_256045FA0(uint64_t a1, uint64_t a2, int *a3)
{
  sub_256044014();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_18:
    return v9(v10, a2, v8);
  }
  sub_256043FAC(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_17:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_18;
  }
  sub_256043FAC(0, &qword_269F44A68, MEMORY[0x263F07490], MEMORY[0x263F1B5D0]);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_17;
  }
  if (a2 == 2147483646)
  {
    unint64_t v15 = *(void *)(a1 + a3[7] + 8);
    if (v15 >= 0xFFFFFFFF) {
      LODWORD(v15) = -1;
    }
    int v16 = v15 - 1;
    if (v16 < 0) {
      int v16 = -1;
    }
    return (v16 + 1);
  }
  else
  {
    sub_256043FAC(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
    if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
    {
      uint64_t v8 = v18;
      uint64_t v12 = *(void *)(v18 - 8);
      uint64_t v13 = a3[8];
      goto LABEL_17;
    }
    sub_256043FAC(0, &qword_269F42CC8, MEMORY[0x263F188C0], MEMORY[0x263F185D0]);
    if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
    {
      uint64_t v8 = v19;
      uint64_t v12 = *(void *)(v19 - 8);
      uint64_t v13 = a3[9];
      goto LABEL_17;
    }
    sub_256043FAC(0, &qword_269F44C38, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48);
    uint64_t v22 = v20;
    uint64_t v23 = a1 + a3[10];
    return v21(v23, a2, v22);
  }
}

uint64_t sub_256046304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256046318);
}

void sub_256046318(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_256044014();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_14:
    v11(v12, a2, a2, v10);
    return;
  }
  sub_256043FAC(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_13:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_14;
  }
  sub_256043FAC(0, &qword_269F44A68, MEMORY[0x263F07490], MEMORY[0x263F1B5D0]);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_13;
  }
  if (a3 == 2147483646)
  {
    *(void *)(a1 + a4[7] + 8) = a2;
    return;
  }
  sub_256043FAC(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_13;
  }
  sub_256043FAC(0, &qword_269F42CC8, MEMORY[0x263F188C0], MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_13;
  }
  sub_256043FAC(0, &qword_269F44C38, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185D0]);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a4[10];

  v20(v22, a2, a2, v21);
}

void sub_256046670()
{
  sub_256044014();
  if (v0 <= 0x3F)
  {
    sub_256043FAC(319, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
    if (v1 <= 0x3F)
    {
      sub_256043FAC(319, &qword_269F44A68, MEMORY[0x263F07490], MEMORY[0x263F1B5D0]);
      if (v2 <= 0x3F)
      {
        sub_256043FAC(319, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
        if (v3 <= 0x3F)
        {
          sub_256043FAC(319, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
          if (v4 <= 0x3F)
          {
            sub_256043FAC(319, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

uint64_t sub_256046920()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_25604693C()
{
  if (!qword_269F451D0)
  {
    sub_2561760D8();
    sub_256046B6C();
    sub_256046D74();
    sub_2561769B8();
    sub_256046F2C();
    sub_2560470AC();
    sub_256047EC4(255);
    sub_2560471AC();
    sub_25604727C();
    sub_256047A60(&qword_269F452C8, (void (*)(uint64_t))sub_25604727C);
    sub_255F5CE90();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_256047A60(&qword_269F45300, sub_256047EC4);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t v0 = sub_2561761E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F451D0);
    }
  }
}

void sub_256046B6C()
{
  if (!qword_269F451D8)
  {
    sub_256046D74();
    sub_2561769B8();
    sub_256046F2C();
    sub_2560470AC();
    sub_256047EC4(255);
    sub_2560471AC();
    sub_25604727C();
    sub_256047A60(&qword_269F452C8, (void (*)(uint64_t))sub_25604727C);
    sub_255F5CE90();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_256047A60(&qword_269F45300, sub_256047EC4);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F451D8);
    }
  }
}

void sub_256046D74()
{
  if (!qword_269F451E0)
  {
    sub_256046F2C();
    sub_2560470AC();
    sub_256047EC4(255);
    sub_2560471AC();
    sub_25604727C();
    sub_256047A60(&qword_269F452C8, (void (*)(uint64_t))sub_25604727C);
    sub_255F5CE90();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_256047A60(&qword_269F45300, sub_256047EC4);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F451E0);
    }
  }
}

void sub_256046F2C()
{
  if (!qword_269F451E8)
  {
    sub_2560470AC();
    sub_256047EC4(255);
    sub_2560471AC();
    sub_25604727C();
    sub_256047A60(&qword_269F452C8, (void (*)(uint64_t))sub_25604727C);
    sub_255F5CE90();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_256047A60(&qword_269F45300, sub_256047EC4);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F451E8);
    }
  }
}

void sub_2560470AC()
{
  if (!qword_269F451F0)
  {
    sub_2560471AC();
    sub_25604727C();
    sub_256047A60(&qword_269F452C8, (void (*)(uint64_t))sub_25604727C);
    sub_255F5CE90();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F451F0);
    }
  }
}

void sub_2560471AC()
{
  if (!qword_269F451F8)
  {
    sub_25604727C();
    sub_256047A60(&qword_269F452C8, (void (*)(uint64_t))sub_25604727C);
    sub_255F5CE90();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F451F8);
    }
  }
}

void sub_25604727C()
{
  if (!qword_269F45200)
  {
    sub_25604732C(255);
    sub_256047A60(&qword_269F452C0, sub_25604732C);
    unint64_t v0 = sub_256176F78();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45200);
    }
  }
}

void sub_25604732C(uint64_t a1)
{
}

void sub_256047360()
{
  if (!qword_269F45210)
  {
    sub_256047400();
    sub_256043FAC(255, &qword_269F45288, (uint64_t (*)(uint64_t))sub_256047B48, MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F45210);
    }
  }
}

void sub_256047400()
{
  if (!qword_269F45218)
  {
    sub_2560474CC(255, &qword_269F45220, sub_256047560, &qword_269F45280, sub_256047560);
    sub_256048058(255, (unint64_t *)&qword_269F42BD0, MEMORY[0x263F1B440], MEMORY[0x263F1B420], MEMORY[0x263F1A180]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45218);
    }
  }
}

void sub_2560474CC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, void (*a5)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_256047A60(a4, a5);
    unint64_t v8 = sub_2561775F8();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_256047560(uint64_t a1)
{
}

void sub_256047594()
{
  if (!qword_269F45230)
  {
    sub_256047604();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_269F45230);
    }
  }
}

void sub_256047604()
{
  if (!qword_269F45238)
  {
    sub_256047684();
    sub_256047ADC(255, (unint64_t *)&qword_269F43940, &qword_269F43948, MEMORY[0x263F188A8]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45238);
    }
  }
}

void sub_256047684()
{
  if (!qword_269F45240)
  {
    sub_25604779C();
    sub_256176C38();
    sub_2560479A0(&qword_269F45268, (void (*)(uint64_t))sub_25604779C, (void (*)(void))sub_256047A2C, (void (*)(void))sub_256047AA8);
    sub_256047A60((unint64_t *)&qword_269F45278, MEMORY[0x263F1A3B8]);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F45240);
    }
  }
}

void sub_25604779C()
{
  if (!qword_269F45248)
  {
    sub_256047804();
    sub_25604796C(255);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45248);
    }
  }
}

void sub_256047804()
{
  if (!qword_269F45250)
  {
    sub_2560478AC();
    sub_2560479A0(&qword_269F45260, (void (*)(uint64_t))sub_2560478AC, (void (*)(void))sub_255F973A0, (void (*)(void))sub_255F67518);
    unint64_t v0 = sub_2561775E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45250);
    }
  }
}

void sub_2560478AC()
{
  if (!qword_269F45258)
  {
    sub_256048058(255, (unint64_t *)&qword_269F43530, MEMORY[0x263F1A830], MEMORY[0x263F190F0], MEMORY[0x263F18E28]);
    sub_256048058(255, (unint64_t *)&qword_269F42BD0, MEMORY[0x263F1B440], MEMORY[0x263F1B420], MEMORY[0x263F1A180]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45258);
    }
  }
}

void sub_25604796C(uint64_t a1)
{
}

uint64_t sub_2560479A0(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_256047A2C()
{
  return sub_256047A60(&qword_269F45270, (void (*)(uint64_t))sub_256047804);
}

uint64_t sub_256047A60(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_256047AA8()
{
  return sub_256047A60(&qword_269F45178, sub_25604796C);
}

void sub_256047ADC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_25604896C(255, a3, a4, MEMORY[0x263F8D8F0]);
    unint64_t v5 = sub_256176D28();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_256047B48(uint64_t a1)
{
}

void sub_256047B84(uint64_t a1)
{
}

void sub_256047BB8()
{
  if (!qword_269F452A0)
  {
    sub_256047C24();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_269F452A0);
    }
  }
}

void sub_256047C24()
{
  if (!qword_269F452A8)
  {
    sub_256047D88();
    sub_256176978();
    unint64_t v0 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x263F18390];
    sub_256048058(255, &qword_269F44AC0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F18390]);
    sub_256047E6C((unint64_t *)&qword_269F44AC8, &qword_269F44AC0, v0);
    swift_getOpaqueTypeConformance2();
    sub_256047A60(&qword_269F44AD0, MEMORY[0x263F19C28]);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v2) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F452A8);
    }
  }
}

void sub_256047D88()
{
  if (!qword_269F452B0)
  {
    unint64_t v0 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x263F18390];
    sub_256048058(255, &qword_269F44AC0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F18390]);
    sub_256047E6C((unint64_t *)&qword_269F44AC8, &qword_269F44AC0, v0);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v2) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F452B0);
    }
  }
}

uint64_t sub_256047E6C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(void, uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_256048058(255, a2, MEMORY[0x263F1A830], MEMORY[0x263F1A820], a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_256047EC4(uint64_t a1)
{
}

void sub_256047EF8()
{
  if (!qword_269F452D8)
  {
    sub_256047FC8(255, (unint64_t *)&qword_269F44150, (void (*)(uint64_t))sub_255FE1C38, (void (*)(void))sub_2560480A8);
    sub_256047FC8(255, &qword_269F452E0, (void (*)(uint64_t))sub_2560480DC, (void (*)(void))sub_2560482D0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F452D8);
    }
  }
}

void sub_256047FC8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v7) {
      atomic_store(OpaqueTypeMetadata2, a2);
    }
  }
}

void sub_256048058(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_2560480A8()
{
  return sub_256047A60(&qword_269F44160, (void (*)(uint64_t))sub_255FE1C38);
}

void sub_2560480DC()
{
  if (!qword_269F452E8)
  {
    sub_2560481EC();
    unint64_t v0 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x263F1B5E8];
    sub_256048058(255, (unint64_t *)&qword_269F42ED0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
    sub_256047E6C((unint64_t *)&qword_269F42EE0, (unint64_t *)&qword_269F42ED0, v0);
    swift_getOpaqueTypeConformance2();
    unint64_t v1 = sub_256175E78();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_269F452E8);
    }
  }
}

void sub_2560481EC()
{
  if (!qword_269F452F0)
  {
    unint64_t v0 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x263F1B5E8];
    sub_256048058(255, (unint64_t *)&qword_269F42ED0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
    sub_256047E6C((unint64_t *)&qword_269F42EE0, (unint64_t *)&qword_269F42ED0, v0);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v2) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F452F0);
    }
  }
}

uint64_t sub_2560482D0()
{
  return sub_256047A60(&qword_269F452F8, (void (*)(uint64_t))sub_2560480DC);
}

uint64_t sub_256048304@<X0>(uint64_t a1@<X8>)
{
  return sub_256040B10(*(void *)(v1 + 16), a1);
}

void sub_256048314()
{
  if (!qword_269F45308)
  {
    sub_25604693C();
    sub_256047ADC(255, (unint64_t *)&qword_269F43280, (unint64_t *)&qword_269F43288, MEMORY[0x263F1B440]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45308);
    }
  }
}

uint64_t sub_256048394@<X0>(uint64_t a1@<X8>)
{
  return sub_2560412FC(*(void *)(v1 + 16), a1);
}

uint64_t sub_25604839C@<X0>(uint64_t a1@<X8>)
{
  return sub_256041770(*(void *)(v1 + 16), a1);
}

uint64_t sub_2560483A4()
{
  return sub_256043480(*(void *)(v0 + 16));
}

uint64_t sub_2560483AC@<X0>(uint64_t a1@<X8>)
{
  return sub_256043760(*(void *)(v1 + 16), a1);
}

uint64_t sub_2560483B8()
{
  return sub_256048B04((uint64_t (*)(uint64_t))sub_256043A60);
}

uint64_t objectdestroyTm_9()
{
  uint64_t v1 = (int *)type metadata accessor for MomentaryDatePickerFullView();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  uint64_t v3 = sub_256175868();
  unint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  v4(v2, v3);
  sub_256044014();
  v4(v2 + *(int *)(v5 + 36), v3);
  uint64_t v6 = v2 + v1[5];
  swift_release();
  swift_release();
  uint64_t v7 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_256043FAC(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  v4(v6 + *(int *)(v8 + 32), v3);
  v4(v2 + v1[6], v3);
  sub_256043FAC(0, &qword_269F44A68, v7, MEMORY[0x263F1B5D0]);
  swift_release();
  swift_release();
  uint64_t v9 = v2 + v1[8];
  sub_256043FAC(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = v2 + v1[9];
  sub_256043FAC(0, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_256175F88();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  uint64_t v13 = v2 + v1[10];
  sub_256043FAC(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_256176AA8();
    uint64_t v15 = *(void *)(v14 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    }
    uint64_t v16 = v13 + *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    uint64_t v17 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_256048824()
{
  return sub_256048B04((uint64_t (*)(uint64_t))sub_25604367C);
}

uint64_t sub_25604883C(uint64_t a1, uint64_t a2)
{
  sub_2560474CC(0, &qword_269F45220, sub_256047560, &qword_269F45280, sub_256047560);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2560488D8(uint64_t a1)
{
  sub_2560474CC(0, &qword_269F45220, sub_256047560, &qword_269F45280, sub_256047560);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_25604896C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_2560489B8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  sub_256043FAC(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_256048A28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_256043FAC(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

void sub_256048A84(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_256176048();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_256048AEC()
{
  return sub_256048B04((uint64_t (*)(uint64_t))sub_2560427D0);
}

uint64_t sub_256048B04(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for MomentaryDatePickerFullView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_256048B78@<X0>(uint64_t *a1@<X8>)
{
  return sub_256042918(*(void *)(v1 + 16), a1);
}

uint64_t sub_256048B90(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_256048BF8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_256048C60(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_256048CC0()
{
  return sub_256042840();
}

uint64_t sub_256048CDC()
{
  return sub_2560479A0(&qword_269F45320, (void (*)(uint64_t))sub_256048314, (void (*)(void))sub_256048D38, (void (*)(void))sub_255F8A254);
}

uint64_t sub_256048D38()
{
  return sub_256047A60(&qword_269F45328, (void (*)(uint64_t))sub_25604693C);
}

uint64_t NotificationSOMSettingsView.init(settingsModel:navigationTitleText:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)a4 = sub_25602EA20;
  *(void *)(a4 + 8) = result;
  *(unsigned char *)(a4 + 16) = 0;
  *(void *)(a4 + 24) = a2;
  *(void *)(a4 + 32) = a3;
  return result;
}

uint64_t sub_256048DD8()
{
  return swift_deallocObject();
}

uint64_t NotificationSOMSettingsView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v2 = sub_2561769B8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256049150();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256049334();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v21 = v11;
  uint64_t v22 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v15 = v1[1];
  long long v30 = *v1;
  *(_OWORD *)uint64_t v31 = v15;
  *(void *)&v31[16] = *((void *)v1 + 4);
  uint64_t v24 = &v30;
  sub_256049200(0, &qword_269F44ED8, (uint64_t (*)(uint64_t))sub_25602EF6C, MEMORY[0x263F8D8F0]);
  sub_256049264();
  sub_256176F68();
  sub_2561769A8();
  uint64_t v16 = sub_2560499F4(&qword_269F45350, (void (*)(uint64_t))sub_256049150);
  uint64_t v17 = MEMORY[0x263F19D08];
  sub_256177388();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  long long v29 = *(_OWORD *)&v31[8];
  uint64_t v25 = v7;
  uint64_t v26 = v2;
  uint64_t v27 = v16;
  uint64_t v28 = v17;
  swift_getOpaqueTypeConformance2();
  sub_255F5CE90();
  uint64_t v18 = v21;
  sub_256177158();
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v14, v18);
}

void sub_256049150()
{
  if (!qword_269F45330)
  {
    sub_256049200(255, &qword_269F44ED8, (uint64_t (*)(uint64_t))sub_25602EF6C, MEMORY[0x263F8D8F0]);
    sub_256049264();
    unint64_t v0 = sub_256176F78();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45330);
    }
  }
}

void sub_256049200(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_256049264()
{
  unint64_t result = qword_269F45338;
  if (!qword_269F45338)
  {
    sub_256049200(255, &qword_269F44ED8, (uint64_t (*)(uint64_t))sub_25602EF6C, MEMORY[0x263F8D8F0]);
    sub_2560499F4(&qword_269F45340, sub_25602EF6C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45338);
  }
  return result;
}

void sub_256049334()
{
  if (!qword_269F45348)
  {
    sub_256049150();
    sub_2561769B8();
    sub_2560499F4(&qword_269F45350, (void (*)(uint64_t))sub_256049150);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F45348);
    }
  }
}

id sub_256049408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id result = objc_msgSend(self, sel_sharedBehavior);
  if (result)
  {
    uint64_t v5 = result;
    unsigned __int8 v6 = objc_msgSend(result, sel_isiPad);

    if (v6)
    {
      sub_25602FD50(&v13);
    }
    else
    {
      sub_2560499B4(a1);
      type metadata accessor for NotificationSettingsModel();
      sub_2560499F4((unint64_t *)&qword_269F43720, (void (*)(uint64_t))type metadata accessor for NotificationSettingsModel);
      sub_256175E28();
      sub_256049A3C(a1);
      sub_256075C24((uint64_t)&v24);
      sub_2560499B4(a1);
      uint64_t v7 = (void *)sub_256175E28();
      sub_256049A3C(a1);
      Swift::Bool v8 = NotificationSettingsModel.shouldShowMindfulnessSettingsButton()();

      uint64_t v9 = 0;
      uint64_t v10 = 0;
      if (v8)
      {
        if (qword_269F42348 != -1) {
          swift_once();
        }
        id v11 = (id)qword_269F50C88;
        swift_bridgeObjectRetain();
        uint64_t v9 = sub_2561755B8();
        uint64_t v10 = v12;
        swift_bridgeObjectRelease();
      }
      long long v13 = v24;
      char v14 = v25 & 1;
      long long v15 = v26;
      long long v16 = v27;
      long long v17 = v28;
      long long v18 = v29;
      long long v19 = v30;
      uint64_t v20 = v31;
      uint64_t v21 = v9;
      uint64_t v22 = v10;
      nullsub_1(&v13);
    }
    sub_25602FACC((uint64_t)&v13, (uint64_t)v23);
    return (id)sub_25602FACC((uint64_t)v23, a2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_25604967C@<X0>(uint64_t a1@<X8>)
{
  return sub_256049408(*(void *)(v1 + 16), a1);
}

uint64_t sub_256049684()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for NotificationSOMSettingsView(uint64_t a1)
{
  sub_255FE84F8(*(void *)a1, *(void **)(a1 + 8), *(unsigned char *)(a1 + 16));

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NotificationSOMSettingsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_25602F5EC(*(void *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NotificationSOMSettingsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_25602F5EC(*(void *)a2, v5, v6);
  uint64_t v7 = *(void *)a1;
  Swift::Bool v8 = *(void **)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_255FE84F8(v7, v8, v9);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for NotificationSOMSettingsView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)a1;
  char v6 = *(void **)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_255FE84F8(v5, v6, v7);
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationSOMSettingsView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NotificationSOMSettingsView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)id result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationSOMSettingsView()
{
  return &type metadata for NotificationSOMSettingsView;
}

uint64_t sub_2560498C8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2560499B4(uint64_t a1)
{
  return a1;
}

uint64_t sub_2560499F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_256049A3C(uint64_t a1)
{
  return a1;
}

void sub_256049A7C(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_256049A84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_256049D94();

  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

BOOL static StateOfMindTimelinePresentationContext.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t StateOfMindTimelinePresentationContext.hash(into:)()
{
  return sub_2561788F8();
}

uint64_t StateOfMindTimelinePresentationContext.hashValue.getter()
{
  return sub_256178928();
}

uint64_t EnvironmentValues.stateOfMindTimelinePresentationContext.getter()
{
  sub_256049BBC();

  return sub_2561765F8();
}

unint64_t sub_256049BBC()
{
  unint64_t result = qword_269F45358;
  if (!qword_269F45358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45358);
  }
  return result;
}

uint64_t sub_256049C10@<X0>(unsigned char *a1@<X8>)
{
  sub_256049BBC();
  uint64_t result = sub_2561765F8();
  *a1 = v3;
  return result;
}

uint64_t sub_256049C60()
{
  return sub_256176608();
}

uint64_t EnvironmentValues.stateOfMindTimelinePresentationContext.setter()
{
  return sub_256176608();
}

uint64_t (*EnvironmentValues.stateOfMindTimelinePresentationContext.modify(void *a1))(uint64_t a1)
{
  *a1 = v1;
  a1[1] = sub_256049BBC();
  sub_2561765F8();
  return sub_256049D58;
}

uint64_t sub_256049D58(uint64_t a1)
{
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a1 + 16);
  return sub_256176608();
}

unint64_t sub_256049D94()
{
  unint64_t result = qword_269F45360;
  if (!qword_269F45360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45360);
  }
  return result;
}

uint64_t sub_256049DE8@<X0>(unsigned char *a1@<X8>)
{
  sub_256049BBC();
  uint64_t result = sub_2561765F8();
  *a1 = v3;
  return result;
}

uint64_t sub_256049E38()
{
  return sub_256176608();
}

unsigned char *storeEnumTagSinglePayload for StateOfMindTimelinePresentationContext(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256049F50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindTimelinePresentationContext()
{
  return &type metadata for StateOfMindTimelinePresentationContext;
}

ValueMetadata *type metadata accessor for StateOfMindTimelinePresentationContextKey()
{
  return &type metadata for StateOfMindTimelinePresentationContextKey;
}

uint64_t sub_256049F98()
{
  return sub_2561763E8();
}

uint64_t type metadata accessor for AssociationSelectionPhaseSpecs()
{
  uint64_t result = qword_269F45368;
  if (!qword_269F45368) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25604A01C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25604A030);
}

uint64_t sub_25604A030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_255FD8280();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    unint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_256176158();
    id v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_25604A128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25604A13C);
}

uint64_t sub_25604A13C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_255FD8280();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_256176158();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

id sub_25604A240(char a1)
{
  uint64_t v3 = type metadata accessor for AssociationSelectionPhaseSpecs();
  id result = (id)MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    id result = (id)MobileGestalt_get_current_device();
    if (result)
    {
      uint64_t v7 = result;
      int homeButtonType = MobileGestalt_get_homeButtonType();

      sub_25604A378(v1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for AssociationSelectionPhaseSpecs);
      if (homeButtonType == 2)
      {
        sub_256176138();
        return (id)sub_25600E628((uint64_t)v6);
      }
      else
      {
        return (id)sub_25600E628((uint64_t)v6);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_25604A344@<X0>(uint64_t a1@<X8>)
{
  return sub_25604A378(v1, a1, (uint64_t (*)(void))sub_255FD8280);
}

uint64_t sub_25604A378(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25604A3E0()
{
  unint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_secondarySystemGroupedBackgroundColor);
  id v2 = objc_msgSend(v0, sel_tertiarySystemGroupedBackgroundColor);
  uint64_t v3 = (void *)swift_allocObject();
  v3[2] = 0;
  v3[3] = v2;
  v3[4] = 0;
  v3[5] = v1;
  id v4 = objc_allocWithZone(MEMORY[0x263F825C8]);
  v10[4] = sub_2560520C8;
  v10[5] = v3;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  v10[2] = sub_2560520D4;
  v10[3] = &block_descriptor_5;
  uint64_t v5 = _Block_copy(v10);
  id v6 = v2;
  id v7 = v1;
  id v8 = objc_msgSend(v4, sel_initWithDynamicProvider_, v5);
  _Block_release(v5);

  swift_release();
  return MEMORY[0x25A29FF60](v8);
}

void StateOfMindTimeline.Styles.Entry.viewHeight.getter()
{
  id v0 = objc_msgSend(self, sel_sharedBehavior);
  if (v0)
  {
    id v1 = v0;
    objc_msgSend(v0, sel_isiPad);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_25604A5A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_256175D98();
  MEMORY[0x270FA5388](v2 - 8);
  id v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_256176158();
  MEMORY[0x270FA5388](v5 - 8);
  id v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_255FD8280();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = &v12[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_256176498();
  sub_2561763E8();
  sub_256049BBC();
  sub_2561765F8();
  v13[0] = v13[1];
  sub_256176378();
  return sub_25604A700((uint64_t)v10, (uint64_t)v7, v13, (uint64_t)v4, a1);
}

uint64_t sub_25604A700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v9 = *a3;
  uint64_t v10 = sub_256176AA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a5, 1, 1, v10);
  sub_256052154(a1, a5);
  id v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
  uint64_t v12 = a5 + v11[5];
  uint64_t v13 = sub_256176158();
  uint64_t v45 = *(void *)(v13 - 8);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16);
  v14(v12, a2, v13);
  *(unsigned char *)(a5 + v11[6]) = v9;
  LOBYTE(v12) = v9;
  uint64_t v15 = a5 + v11[7];
  uint64_t v42 = sub_256175D98();
  uint64_t v44 = *(void *)(v42 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v15, a4, v42);
  uint64_t v16 = a5 + v11[8];
  sub_255FD82D8(a1, v16);
  uint64_t v17 = _s6StylesV8TimelineVMa(0);
  v14(v16 + *(int *)(v17 + 20), a2, v13);
  uint64_t v18 = a5 + v11[9];
  sub_255FD82D8(a1, v18);
  uint64_t v19 = _s6StylesV6NoDataVMa(0);
  v14(v18 + *(int *)(v19 + 20), a2, v13);
  char v41 = v12;
  *(unsigned char *)(v18 + *(int *)(v19 + 24)) = v12;
  uint64_t v20 = a5 + v11[10];
  sub_255FD82D8(a1, v20);
  uint64_t v21 = _s6StylesV11PlaceholderVMa(0);
  v14(v20 + *(int *)(v21 + 20), a2, v13);
  uint64_t v22 = a5 + v11[11];
  sub_255FD82D8(a1, v22);
  uint64_t v23 = _s6StylesV6SymbolVMa(0);
  v14(v22 + *(int *)(v23 + 20), a2, v13);
  uint64_t v40 = v14;
  uint64_t v24 = a5 + v11[12];
  sub_255FD82D8(a1, v24);
  char v25 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
  v14(v24 + v25[5], a2, v13);
  *(unsigned char *)(v24 + v25[6]) = v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32))(v24 + v25[7], a4, v42);
  uint64_t v26 = a5 + v11[13];
  sub_255FD82D8(a1, v26);
  uint64_t v27 = _s6StylesV5EmptyVMa(0);
  v40(v26 + *(int *)(v27 + 20), a2, v13);
  *(unsigned char *)(v26 + *(int *)(v27 + 24)) = v41;
  uint64_t v28 = a5 + v11[14];
  sub_255FD82D8(a1, v28);
  uint64_t v29 = _s6StylesV5DailyVMa(0);
  v40(v28 + *(int *)(v29 + 20), a2, v13);
  *(unsigned char *)(v28 + *(int *)(v29 + 24)) = v41;
  uint64_t v30 = a5 + v11[15];
  sub_255FD82D8(a1, v30);
  uint64_t v31 = _s6StylesV9MomentaryVMa(0);
  v40(v30 + *(int *)(v31 + 20), a2, v13);
  uint64_t v32 = a5 + v11[16];
  sub_255FD82D8(a1, v32);
  uint64_t v33 = _s6StylesV6HeaderVMa(0);
  v40(v32 + *(int *)(v33 + 20), a2, v13);
  uint64_t v34 = a5 + v11[17];
  sub_255FD82D8(a1, v34);
  uint64_t v35 = _s6StylesV11ChartButtonVMa(0);
  v40(v34 + *(int *)(v35 + 20), a2, v13);
  uint64_t v36 = a5 + v11[18];
  sub_2560521B8(a1, v36);
  uint64_t v37 = v36 + *(int *)(_s6StylesV15LogButtonFooterVMa(0) + 20);
  uint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v45 + 32);

  return v38(v37, a2, v13);
}

double StateOfMindTimeline.Styles.Entry.tallViewHeight.getter()
{
  return 490.0;
}

double StateOfMindTimeline.Styles.Entry.shortViewHeight.getter()
{
  return 462.0;
}

void static StateOfMindTimeline.Styles.Entry.estimatedViewHeight.getter()
{
  id v0 = objc_msgSend(self, sel_sharedBehavior);
  if (v0)
  {
    id v1 = v0;
    objc_msgSend(v0, sel_isiPad);
  }
  else
  {
    __break(1u);
  }
}

double static StateOfMindTimeline.Styles.Entry.tallViewHeightEstimate.getter()
{
  return 621.0;
}

double static StateOfMindTimeline.Styles.Entry.shortViewHeightEstimate.getter()
{
  return 597.0;
}

uint64_t *_s6StylesVwCP(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_256176AA8();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v81 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v81(a2, 1, v7))
    {
      sub_255FD8280();
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[5];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_256176158();
    uint64_t v15 = (void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    uint64_t v80 = *v15;
    (*v15)(v12, v13, v14);
    uint64_t v16 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_256175D98();
    uint64_t v78 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
    v78(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    if (v81((uint64_t *)((char *)a2 + v20), 1, v7))
    {
      sub_255FD8280();
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v21, v22, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
    }
    uint64_t v24 = _s6StylesV8TimelineVMa(0);
    v80(&v21[*(int *)(v24 + 20)], &v22[*(int *)(v24 + 20)], v14);
    uint64_t v25 = a3[9];
    uint64_t v26 = (char *)a1 + v25;
    uint64_t v27 = (char *)a2 + v25;
    uint64_t v79 = v8;
    if (v81((uint64_t *)((char *)a2 + v25), 1, v7))
    {
      sub_255FD8280();
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v26, v27, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v26, 0, 1, v7);
    }
    uint64_t v29 = _s6StylesV6NoDataVMa(0);
    v80(&v26[*(int *)(v29 + 20)], &v27[*(int *)(v29 + 20)], v14);
    v26[*(int *)(v29 + 24)] = v27[*(int *)(v29 + 24)];
    uint64_t v30 = a3[10];
    uint64_t v31 = (char *)a1 + v30;
    uint64_t v32 = (char *)a2 + v30;
    if (v81((uint64_t *)((char *)a2 + v30), 1, v7))
    {
      sub_255FD8280();
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
      uint64_t v34 = v79;
    }
    else
    {
      uint64_t v34 = v79;
      (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v31, v32, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v31, 0, 1, v7);
    }
    uint64_t v35 = _s6StylesV11PlaceholderVMa(0);
    v80(&v31[*(int *)(v35 + 20)], &v32[*(int *)(v35 + 20)], v14);
    uint64_t v36 = a3[11];
    uint64_t v37 = (char *)a1 + v36;
    uint64_t v38 = (char *)a2 + v36;
    if (v81((uint64_t *)((char *)a2 + v36), 1, v7))
    {
      sub_255FD8280();
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v37, v38, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v37, 0, 1, v7);
    }
    uint64_t v40 = _s6StylesV6SymbolVMa(0);
    v80(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v14);
    uint64_t v41 = a3[12];
    uint64_t v42 = (char *)a1 + v41;
    uint64_t v43 = (char *)a2 + v41;
    if (v81((uint64_t *)((char *)a2 + v41), 1, v7))
    {
      sub_255FD8280();
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v42, v43, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v42, 0, 1, v7);
    }
    uint64_t v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v80(&v42[v45[5]], &v43[v45[5]], v14);
    v42[v45[6]] = v43[v45[6]];
    v78(&v42[v45[7]], &v43[v45[7]], v19);
    uint64_t v46 = a3[13];
    uint64_t v47 = (char *)a1 + v46;
    uint64_t v48 = (char *)a2 + v46;
    if (v81((uint64_t *)((char *)a2 + v46), 1, v7))
    {
      sub_255FD8280();
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
      uint64_t v50 = v79;
    }
    else
    {
      uint64_t v50 = v79;
      (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v47, v48, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v47, 0, 1, v7);
    }
    uint64_t v51 = _s6StylesV5EmptyVMa(0);
    v80(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v14);
    v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
    uint64_t v52 = a3[14];
    uint64_t v53 = (char *)a1 + v52;
    uint64_t v54 = (char *)a2 + v52;
    if (v81((uint64_t *)((char *)a2 + v52), 1, v7))
    {
      sub_255FD8280();
      memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v53, v54, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v7);
    }
    uint64_t v56 = _s6StylesV5DailyVMa(0);
    v80(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v14);
    v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
    uint64_t v57 = a3[15];
    uint64_t v58 = (char *)a1 + v57;
    char v59 = (char *)a2 + v57;
    if (v81((uint64_t *)((char *)a2 + v57), 1, v7))
    {
      sub_255FD8280();
      memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v58, v59, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v7);
    }
    uint64_t v61 = _s6StylesV9MomentaryVMa(0);
    v80(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v14);
    uint64_t v62 = a3[16];
    uint64_t v63 = (char *)a1 + v62;
    uint64_t v64 = (char *)a2 + v62;
    if (v81((uint64_t *)((char *)a2 + v62), 1, v7))
    {
      sub_255FD8280();
      memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v63, v64, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v7);
    }
    uint64_t v66 = _s6StylesV6HeaderVMa(0);
    v80(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v14);
    uint64_t v67 = a3[17];
    uint64_t v68 = (char *)a1 + v67;
    uint64_t v69 = (char *)a2 + v67;
    if (v81((uint64_t *)((char *)a2 + v67), 1, v7))
    {
      sub_255FD8280();
      memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v68, v69, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v7);
    }
    uint64_t v71 = _s6StylesV11ChartButtonVMa(0);
    v80(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v14);
    uint64_t v72 = a3[18];
    int v73 = (char *)a1 + v72;
    uint64_t v74 = (char *)a2 + v72;
    if (v81((uint64_t *)v74, 1, v7))
    {
      sub_255FD8280();
      memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v73, v74, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v7);
    }
    uint64_t v76 = _s6StylesV15LogButtonFooterVMa(0);
    v80(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v14);
  }
  return a1;
}

uint64_t _s6StylesV8TimelineVMa(uint64_t a1)
{
  return sub_256008F08(a1, (uint64_t *)&unk_269F45428);
}

uint64_t _s6StylesV6NoDataVMa(uint64_t a1)
{
  return sub_256008F08(a1, (uint64_t *)&unk_269F45418);
}

uint64_t _s6StylesV11PlaceholderVMa(uint64_t a1)
{
  return sub_256008F08(a1, (uint64_t *)&unk_269F45408);
}

uint64_t _s6StylesV6SymbolVMa(uint64_t a1)
{
  return sub_256008F08(a1, (uint64_t *)&unk_269F453F8);
}

uint64_t type metadata accessor for StateOfMindTimeline.Styles.Entry(uint64_t a1)
{
  return sub_256008F08(a1, (uint64_t *)&unk_269F45388);
}

uint64_t _s6StylesV5EmptyVMa(uint64_t a1)
{
  return sub_256008F08(a1, (uint64_t *)&unk_269F453E8);
}

uint64_t _s6StylesV5DailyVMa(uint64_t a1)
{
  return sub_256008F08(a1, (uint64_t *)&unk_269F453D8);
}

uint64_t _s6StylesV9MomentaryVMa(uint64_t a1)
{
  return sub_256008F08(a1, (uint64_t *)&unk_269F453C8);
}

uint64_t _s6StylesV6HeaderVMa(uint64_t a1)
{
  return sub_256008F08(a1, (uint64_t *)&unk_269F453B8);
}

uint64_t _s6StylesV11ChartButtonVMa(uint64_t a1)
{
  return sub_256008F08(a1, (uint64_t *)&unk_269F453A8);
}

uint64_t _s6StylesV15LogButtonFooterVMa(uint64_t a1)
{
  return sub_256008F08(a1, (uint64_t *)&unk_269F45398);
}

uint64_t _s6StylesVwxx(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_256176AA8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v7 = a1 + a2[5];
  uint64_t v8 = sub_256176158();
  uint64_t v35 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v35(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_256175D98();
  uint64_t v34 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  v34(v9, v10);
  uint64_t v11 = a1 + a2[8];
  if (!v6(v11, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v11, v4);
  }
  uint64_t v12 = _s6StylesV8TimelineVMa(0);
  v35(v11 + *(int *)(v12 + 20), v8);
  uint64_t v13 = a1 + a2[9];
  if (!v6(v13, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v13, v4);
  }
  uint64_t v14 = _s6StylesV6NoDataVMa(0);
  v35(v13 + *(int *)(v14 + 20), v8);
  uint64_t v15 = a1 + a2[10];
  if (!v6(v15, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v15, v4);
  }
  uint64_t v16 = _s6StylesV11PlaceholderVMa(0);
  v35(v15 + *(int *)(v16 + 20), v8);
  uint64_t v17 = a1 + a2[11];
  if (!v6(v17, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v17, v4);
  }
  uint64_t v18 = _s6StylesV6SymbolVMa(0);
  v35(v17 + *(int *)(v18 + 20), v8);
  uint64_t v19 = a1 + a2[12];
  if (!v6(v19, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v19, v4);
  }
  uint64_t v20 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
  v35(v19 + *(int *)(v20 + 20), v8);
  v34(v19 + *(int *)(v20 + 28), v10);
  uint64_t v21 = a1 + a2[13];
  if (!v6(v21, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v21, v4);
  }
  uint64_t v22 = _s6StylesV5EmptyVMa(0);
  v35(v21 + *(int *)(v22 + 20), v8);
  uint64_t v23 = a1 + a2[14];
  if (!v6(v23, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v23, v4);
  }
  uint64_t v24 = _s6StylesV5DailyVMa(0);
  v35(v23 + *(int *)(v24 + 20), v8);
  uint64_t v25 = a1 + a2[15];
  if (!v6(v25, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v25, v4);
  }
  uint64_t v26 = _s6StylesV9MomentaryVMa(0);
  v35(v25 + *(int *)(v26 + 20), v8);
  uint64_t v27 = a1 + a2[16];
  if (!v6(v27, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v27, v4);
  }
  uint64_t v28 = _s6StylesV6HeaderVMa(0);
  v35(v27 + *(int *)(v28 + 20), v8);
  uint64_t v29 = a1 + a2[17];
  if (!v6(v29, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v29, v4);
  }
  uint64_t v30 = _s6StylesV11ChartButtonVMa(0);
  v35(v29 + *(int *)(v30 + 20), v8);
  uint64_t v31 = a1 + a2[18];
  if (!v6(v31, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v31, v4);
  }
  uint64_t v32 = v31 + *(int *)(_s6StylesV15LogButtonFooterVMa(0) + 20);

  return ((uint64_t (*)(uint64_t, uint64_t))v35)(v32, v8);
}

char *_s6StylesVwcp(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_256176AA8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v79 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v79(a2, 1, v6))
  {
    sub_255FD8280();
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_256176158();
  uint64_t v13 = (void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  uint64_t v78 = *v13;
  (*v13)(v10, v11, v12);
  uint64_t v14 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = sub_256175D98();
  uint64_t v76 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
  v76(v15, v16, v17);
  uint64_t v18 = a3[8];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  if (v79(&a2[v18], 1, v6))
  {
    sub_255FD8280();
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v19, v20, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
  }
  uint64_t v22 = _s6StylesV8TimelineVMa(0);
  v78(&v19[*(int *)(v22 + 20)], &v20[*(int *)(v22 + 20)], v12);
  uint64_t v23 = a3[9];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v77 = v7;
  if (v79(&a2[v23], 1, v6))
  {
    sub_255FD8280();
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v24, v25, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v24, 0, 1, v6);
  }
  uint64_t v27 = _s6StylesV6NoDataVMa(0);
  v78(&v24[*(int *)(v27 + 20)], &v25[*(int *)(v27 + 20)], v12);
  v24[*(int *)(v27 + 24)] = v25[*(int *)(v27 + 24)];
  uint64_t v28 = a3[10];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  if (v79(&a2[v28], 1, v6))
  {
    sub_255FD8280();
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    uint64_t v32 = v77;
  }
  else
  {
    uint64_t v32 = v77;
    (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v29, v30, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v29, 0, 1, v6);
  }
  uint64_t v33 = _s6StylesV11PlaceholderVMa(0);
  v78(&v29[*(int *)(v33 + 20)], &v30[*(int *)(v33 + 20)], v12);
  uint64_t v34 = a3[11];
  uint64_t v35 = &a1[v34];
  uint64_t v36 = &a2[v34];
  if (v79(&a2[v34], 1, v6))
  {
    sub_255FD8280();
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v35, v36, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v35, 0, 1, v6);
  }
  uint64_t v38 = _s6StylesV6SymbolVMa(0);
  v78(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v12);
  uint64_t v39 = a3[12];
  uint64_t v40 = &a1[v39];
  uint64_t v41 = &a2[v39];
  if (v79(&a2[v39], 1, v6))
  {
    sub_255FD8280();
    memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v40, v41, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v40, 0, 1, v6);
  }
  uint64_t v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
  v78(&v40[v43[5]], &v41[v43[5]], v12);
  v40[v43[6]] = v41[v43[6]];
  v76(&v40[v43[7]], &v41[v43[7]], v17);
  uint64_t v44 = a3[13];
  uint64_t v45 = &a1[v44];
  uint64_t v46 = &a2[v44];
  if (v79(&a2[v44], 1, v6))
  {
    sub_255FD8280();
    memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
    uint64_t v48 = v77;
  }
  else
  {
    uint64_t v48 = v77;
    (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v45, v46, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v45, 0, 1, v6);
  }
  uint64_t v49 = _s6StylesV5EmptyVMa(0);
  v78(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v12);
  v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
  uint64_t v50 = a3[14];
  uint64_t v51 = &a1[v50];
  uint64_t v52 = &a2[v50];
  if (v79(&a2[v50], 1, v6))
  {
    sub_255FD8280();
    memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v52, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v6);
  }
  uint64_t v54 = _s6StylesV5DailyVMa(0);
  v78(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v12);
  v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
  uint64_t v55 = a3[15];
  uint64_t v56 = &a1[v55];
  uint64_t v57 = &a2[v55];
  if (v79(&a2[v55], 1, v6))
  {
    sub_255FD8280();
    memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v56, v57, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v6);
  }
  uint64_t v59 = _s6StylesV9MomentaryVMa(0);
  v78(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v12);
  uint64_t v60 = a3[16];
  uint64_t v61 = &a1[v60];
  uint64_t v62 = &a2[v60];
  if (v79(&a2[v60], 1, v6))
  {
    sub_255FD8280();
    memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v6);
  }
  uint64_t v64 = _s6StylesV6HeaderVMa(0);
  v78(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v12);
  uint64_t v65 = a3[17];
  uint64_t v66 = &a1[v65];
  uint64_t v67 = &a2[v65];
  if (v79(&a2[v65], 1, v6))
  {
    sub_255FD8280();
    memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v67, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v6);
  }
  uint64_t v69 = _s6StylesV11ChartButtonVMa(0);
  v78(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v12);
  uint64_t v70 = a3[18];
  uint64_t v71 = &a1[v70];
  uint64_t v72 = &a2[v70];
  if (v79(v72, 1, v6))
  {
    sub_255FD8280();
    memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v72, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v6);
  }
  uint64_t v74 = _s6StylesV15LogButtonFooterVMa(0);
  v78(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v12);
  return a1;
}

char *_s6StylesVwca(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_256176AA8();
  uint64_t v98 = *(void *)(v6 - 8);
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v98 + 48);
  int v8 = v7(a1, 1, v6);
  int v9 = v7(a2, 1, v6);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(char *, char *, uint64_t))(v98 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v9)
  {
    (*(void (**)(char *, uint64_t))(v98 + 8))(a1, v6);
LABEL_6:
    sub_255FD8280();
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v98 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = a3[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = sub_256176158();
  uint64_t v99 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24);
  v99(v12, v13, v14);
  a1[a3[6]] = a2[a3[6]];
  uint64_t v15 = a3[7];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = sub_256175D98();
  uint64_t v96 = *(void (**)(char *, char *))(*(void *)(v18 - 8) + 24);
  uint64_t v97 = v18;
  v96(v16, v17);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1;
  uint64_t v21 = &a1[v19];
  uint64_t v22 = &a2[v19];
  int v23 = v7(&a1[v19], 1, v6);
  int v24 = v7(v22, 1, v6);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v21, v22, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v21, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v24)
  {
    (*(void (**)(char *, uint64_t))(v98 + 8))(v21, v6);
LABEL_12:
    sub_255FD8280();
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v98 + 24))(v21, v22, v6);
LABEL_13:
  uint64_t v26 = _s6StylesV8TimelineVMa(0);
  v99(&v21[*(int *)(v26 + 20)], &v22[*(int *)(v26 + 20)], v14);
  uint64_t v27 = a3[9];
  uint64_t v28 = &v20[v27];
  uint64_t v29 = &a2[v27];
  int v30 = v7(&v20[v27], 1, v6);
  int v31 = v7(v29, 1, v6);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v28, v29, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v28, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v98 + 8))(v28, v6);
LABEL_18:
    sub_255FD8280();
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v98 + 24))(v28, v29, v6);
LABEL_19:
  uint64_t v33 = _s6StylesV6NoDataVMa(0);
  v99(&v28[*(int *)(v33 + 20)], &v29[*(int *)(v33 + 20)], v14);
  v28[*(int *)(v33 + 24)] = v29[*(int *)(v33 + 24)];
  uint64_t v34 = a3[10];
  uint64_t v35 = &v20[v34];
  uint64_t v36 = &a2[v34];
  LODWORD(v33) = v7(&v20[v34], 1, v6);
  int v37 = v7(v36, 1, v6);
  if (v33)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v35, v36, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v35, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v37)
  {
    (*(void (**)(char *, uint64_t))(v98 + 8))(v35, v6);
LABEL_24:
    sub_255FD8280();
    memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v98 + 24))(v35, v36, v6);
LABEL_25:
  uint64_t v39 = _s6StylesV11PlaceholderVMa(0);
  v99(&v35[*(int *)(v39 + 20)], &v36[*(int *)(v39 + 20)], v14);
  uint64_t v40 = a3[11];
  uint64_t v41 = &v20[v40];
  uint64_t v42 = &a2[v40];
  int v43 = v7(&v20[v40], 1, v6);
  int v44 = v7(v42, 1, v6);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v41, v42, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v41, 0, 1, v6);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v98 + 8))(v41, v6);
LABEL_30:
    sub_255FD8280();
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v98 + 24))(v41, v42, v6);
LABEL_31:
  uint64_t v46 = _s6StylesV6SymbolVMa(0);
  v99(&v41[*(int *)(v46 + 20)], &v42[*(int *)(v46 + 20)], v14);
  uint64_t v47 = a3[12];
  uint64_t v48 = &v20[v47];
  uint64_t v49 = &a2[v47];
  int v50 = v7(&v20[v47], 1, v6);
  int v51 = v7(v49, 1, v6);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v48, v49, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v48, 0, 1, v6);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v98 + 8))(v48, v6);
LABEL_36:
    sub_255FD8280();
    memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v98 + 24))(v48, v49, v6);
LABEL_37:
  uint64_t v53 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
  v99(&v48[v53[5]], &v49[v53[5]], v14);
  v48[v53[6]] = v49[v53[6]];
  ((void (*)(char *, char *, uint64_t))v96)(&v48[v53[7]], &v49[v53[7]], v97);
  uint64_t v54 = a3[13];
  uint64_t v55 = v20;
  uint64_t v56 = &v20[v54];
  uint64_t v57 = &a2[v54];
  int v58 = v7(v56, 1, v6);
  int v59 = v7(v57, 1, v6);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v56, v57, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v56, 0, 1, v6);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v59)
  {
    (*(void (**)(char *, uint64_t))(v98 + 8))(v56, v6);
LABEL_42:
    sub_255FD8280();
    memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v98 + 24))(v56, v57, v6);
LABEL_43:
  uint64_t v61 = _s6StylesV5EmptyVMa(0);
  v99(&v56[*(int *)(v61 + 20)], &v57[*(int *)(v61 + 20)], v14);
  v56[*(int *)(v61 + 24)] = v57[*(int *)(v61 + 24)];
  uint64_t v62 = a3[14];
  uint64_t v63 = &v55[v62];
  uint64_t v64 = &a2[v62];
  LODWORD(v61) = v7(&v55[v62], 1, v6);
  int v65 = v7(v64, 1, v6);
  if (v61)
  {
    if (!v65)
    {
      (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v63, v64, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v63, 0, 1, v6);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v65)
  {
    (*(void (**)(char *, uint64_t))(v98 + 8))(v63, v6);
LABEL_48:
    sub_255FD8280();
    memcpy(v63, v64, *(void *)(*(void *)(v66 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v98 + 24))(v63, v64, v6);
LABEL_49:
  uint64_t v67 = _s6StylesV5DailyVMa(0);
  v99(&v63[*(int *)(v67 + 20)], &v64[*(int *)(v67 + 20)], v14);
  v63[*(int *)(v67 + 24)] = v64[*(int *)(v67 + 24)];
  uint64_t v68 = a3[15];
  uint64_t v69 = &v55[v68];
  uint64_t v70 = &a2[v68];
  LODWORD(v67) = v7(&v55[v68], 1, v6);
  int v71 = v7(v70, 1, v6);
  if (v67)
  {
    if (!v71)
    {
      (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v69, v70, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v69, 0, 1, v6);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v71)
  {
    (*(void (**)(char *, uint64_t))(v98 + 8))(v69, v6);
LABEL_54:
    sub_255FD8280();
    memcpy(v69, v70, *(void *)(*(void *)(v72 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v98 + 24))(v69, v70, v6);
LABEL_55:
  uint64_t v73 = _s6StylesV9MomentaryVMa(0);
  v99(&v69[*(int *)(v73 + 20)], &v70[*(int *)(v73 + 20)], v14);
  uint64_t v74 = a3[16];
  uint64_t v75 = &v55[v74];
  uint64_t v76 = &a2[v74];
  int v77 = v7(&v55[v74], 1, v6);
  int v78 = v7(v76, 1, v6);
  if (v77)
  {
    if (!v78)
    {
      (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v75, v76, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v75, 0, 1, v6);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v78)
  {
    (*(void (**)(char *, uint64_t))(v98 + 8))(v75, v6);
LABEL_60:
    sub_255FD8280();
    memcpy(v75, v76, *(void *)(*(void *)(v79 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v98 + 24))(v75, v76, v6);
LABEL_61:
  uint64_t v80 = _s6StylesV6HeaderVMa(0);
  v99(&v75[*(int *)(v80 + 20)], &v76[*(int *)(v80 + 20)], v14);
  uint64_t v81 = a3[17];
  uint64_t v82 = &v55[v81];
  uint64_t v83 = &a2[v81];
  int v84 = v7(&v55[v81], 1, v6);
  int v85 = v7(v83, 1, v6);
  if (v84)
  {
    if (!v85)
    {
      (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v82, v83, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v82, 0, 1, v6);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v85)
  {
    (*(void (**)(char *, uint64_t))(v98 + 8))(v82, v6);
LABEL_66:
    sub_255FD8280();
    memcpy(v82, v83, *(void *)(*(void *)(v86 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v98 + 24))(v82, v83, v6);
LABEL_67:
  uint64_t v87 = _s6StylesV11ChartButtonVMa(0);
  v99(&v82[*(int *)(v87 + 20)], &v83[*(int *)(v87 + 20)], v14);
  uint64_t v88 = a3[18];
  uint64_t v89 = &v55[v88];
  uint64_t v90 = &a2[v88];
  int v91 = v7(&v55[v88], 1, v6);
  int v92 = v7(v90, 1, v6);
  if (!v91)
  {
    if (!v92)
    {
      (*(void (**)(char *, char *, uint64_t))(v98 + 24))(v89, v90, v6);
      goto LABEL_73;
    }
    (*(void (**)(char *, uint64_t))(v98 + 8))(v89, v6);
    goto LABEL_72;
  }
  if (v92)
  {
LABEL_72:
    sub_255FD8280();
    memcpy(v89, v90, *(void *)(*(void *)(v93 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v89, v90, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v89, 0, 1, v6);
LABEL_73:
  uint64_t v94 = _s6StylesV15LogButtonFooterVMa(0);
  v99(&v89[*(int *)(v94 + 20)], &v90[*(int *)(v94 + 20)], v14);
  return v55;
}

char *_s6StylesVwtk(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_256176AA8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v79 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v79(a2, 1, v6))
  {
    sub_255FD8280();
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_256176158();
  uint64_t v13 = (void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
  int v78 = *v13;
  (*v13)(v10, v11, v12);
  uint64_t v14 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = sub_256175D98();
  uint64_t v76 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32);
  v76(v15, v16, v17);
  uint64_t v18 = a3[8];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  if (v79(&a2[v18], 1, v6))
  {
    sub_255FD8280();
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v19, v20, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
  }
  uint64_t v22 = _s6StylesV8TimelineVMa(0);
  v78(&v19[*(int *)(v22 + 20)], &v20[*(int *)(v22 + 20)], v12);
  uint64_t v23 = a3[9];
  int v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v77 = v7;
  if (v79(&a2[v23], 1, v6))
  {
    sub_255FD8280();
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v24, v25, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v24, 0, 1, v6);
  }
  uint64_t v27 = _s6StylesV6NoDataVMa(0);
  v78(&v24[*(int *)(v27 + 20)], &v25[*(int *)(v27 + 20)], v12);
  v24[*(int *)(v27 + 24)] = v25[*(int *)(v27 + 24)];
  uint64_t v28 = a3[10];
  uint64_t v29 = &a1[v28];
  int v30 = &a2[v28];
  if (v79(&a2[v28], 1, v6))
  {
    sub_255FD8280();
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    uint64_t v32 = v77;
  }
  else
  {
    uint64_t v32 = v77;
    (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v29, v30, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v29, 0, 1, v6);
  }
  uint64_t v33 = _s6StylesV11PlaceholderVMa(0);
  v78(&v29[*(int *)(v33 + 20)], &v30[*(int *)(v33 + 20)], v12);
  uint64_t v34 = a3[11];
  uint64_t v35 = &a1[v34];
  uint64_t v36 = &a2[v34];
  if (v79(&a2[v34], 1, v6))
  {
    sub_255FD8280();
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v35, v36, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v35, 0, 1, v6);
  }
  uint64_t v38 = _s6StylesV6SymbolVMa(0);
  v78(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v12);
  uint64_t v39 = a3[12];
  uint64_t v40 = &a1[v39];
  uint64_t v41 = &a2[v39];
  if (v79(&a2[v39], 1, v6))
  {
    sub_255FD8280();
    memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v40, v41, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v40, 0, 1, v6);
  }
  int v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
  v78(&v40[v43[5]], &v41[v43[5]], v12);
  v40[v43[6]] = v41[v43[6]];
  v76(&v40[v43[7]], &v41[v43[7]], v17);
  uint64_t v44 = a3[13];
  uint64_t v45 = &a1[v44];
  uint64_t v46 = &a2[v44];
  if (v79(&a2[v44], 1, v6))
  {
    sub_255FD8280();
    memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
    uint64_t v48 = v77;
  }
  else
  {
    uint64_t v48 = v77;
    (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v45, v46, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v45, 0, 1, v6);
  }
  uint64_t v49 = _s6StylesV5EmptyVMa(0);
  v78(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v12);
  v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
  uint64_t v50 = a3[14];
  int v51 = &a1[v50];
  uint64_t v52 = &a2[v50];
  if (v79(&a2[v50], 1, v6))
  {
    sub_255FD8280();
    memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v51, v52, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v6);
  }
  uint64_t v54 = _s6StylesV5DailyVMa(0);
  v78(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v12);
  v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
  uint64_t v55 = a3[15];
  uint64_t v56 = &a1[v55];
  uint64_t v57 = &a2[v55];
  if (v79(&a2[v55], 1, v6))
  {
    sub_255FD8280();
    memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v56, v57, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v6);
  }
  uint64_t v59 = _s6StylesV9MomentaryVMa(0);
  v78(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v12);
  uint64_t v60 = a3[16];
  uint64_t v61 = &a1[v60];
  uint64_t v62 = &a2[v60];
  if (v79(&a2[v60], 1, v6))
  {
    sub_255FD8280();
    memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v61, v62, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v6);
  }
  uint64_t v64 = _s6StylesV6HeaderVMa(0);
  v78(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v12);
  uint64_t v65 = a3[17];
  uint64_t v66 = &a1[v65];
  uint64_t v67 = &a2[v65];
  if (v79(&a2[v65], 1, v6))
  {
    sub_255FD8280();
    memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v66, v67, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v6);
  }
  uint64_t v69 = _s6StylesV11ChartButtonVMa(0);
  v78(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v12);
  uint64_t v70 = a3[18];
  int v71 = &a1[v70];
  uint64_t v72 = &a2[v70];
  if (v79(v72, 1, v6))
  {
    sub_255FD8280();
    memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v71, v72, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v6);
  }
  uint64_t v74 = _s6StylesV15LogButtonFooterVMa(0);
  v78(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v12);
  return a1;
}

char *_s6StylesVwta(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_256176AA8();
  uint64_t v98 = *(void *)(v6 - 8);
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v98 + 48);
  int v8 = v7(a1, 1, v6);
  int v9 = v7(a2, 1, v6);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(char *, char *, uint64_t))(v98 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v9)
  {
    (*(void (**)(char *, uint64_t))(v98 + 8))(a1, v6);
LABEL_6:
    sub_255FD8280();
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v98 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = a3[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = sub_256176158();
  uint64_t v99 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40);
  v99(v12, v13, v14);
  uint64_t v15 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = sub_256175D98();
  uint64_t v96 = *(void (**)(char *, char *))(*(void *)(v18 - 8) + 40);
  uint64_t v97 = v18;
  v96(v16, v17);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1;
  uint64_t v21 = &a1[v19];
  uint64_t v22 = &a2[v19];
  int v23 = v7(&a1[v19], 1, v6);
  int v24 = v7(v22, 1, v6);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v21, v22, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v21, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v24)
  {
    (*(void (**)(char *, uint64_t))(v98 + 8))(v21, v6);
LABEL_12:
    sub_255FD8280();
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v98 + 40))(v21, v22, v6);
LABEL_13:
  uint64_t v26 = _s6StylesV8TimelineVMa(0);
  v99(&v21[*(int *)(v26 + 20)], &v22[*(int *)(v26 + 20)], v14);
  uint64_t v27 = a3[9];
  uint64_t v28 = &v20[v27];
  uint64_t v29 = &a2[v27];
  int v30 = v7(&v20[v27], 1, v6);
  int v31 = v7(v29, 1, v6);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v28, v29, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v28, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v98 + 8))(v28, v6);
LABEL_18:
    sub_255FD8280();
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v98 + 40))(v28, v29, v6);
LABEL_19:
  uint64_t v33 = _s6StylesV6NoDataVMa(0);
  v99(&v28[*(int *)(v33 + 20)], &v29[*(int *)(v33 + 20)], v14);
  v28[*(int *)(v33 + 24)] = v29[*(int *)(v33 + 24)];
  uint64_t v34 = a3[10];
  uint64_t v35 = &v20[v34];
  uint64_t v36 = &a2[v34];
  LODWORD(v33) = v7(&v20[v34], 1, v6);
  int v37 = v7(v36, 1, v6);
  if (v33)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v35, v36, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v35, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v37)
  {
    (*(void (**)(char *, uint64_t))(v98 + 8))(v35, v6);
LABEL_24:
    sub_255FD8280();
    memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v98 + 40))(v35, v36, v6);
LABEL_25:
  uint64_t v39 = _s6StylesV11PlaceholderVMa(0);
  v99(&v35[*(int *)(v39 + 20)], &v36[*(int *)(v39 + 20)], v14);
  uint64_t v40 = a3[11];
  uint64_t v41 = &v20[v40];
  uint64_t v42 = &a2[v40];
  int v43 = v7(&v20[v40], 1, v6);
  int v44 = v7(v42, 1, v6);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v41, v42, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v41, 0, 1, v6);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v98 + 8))(v41, v6);
LABEL_30:
    sub_255FD8280();
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v98 + 40))(v41, v42, v6);
LABEL_31:
  uint64_t v46 = _s6StylesV6SymbolVMa(0);
  v99(&v41[*(int *)(v46 + 20)], &v42[*(int *)(v46 + 20)], v14);
  uint64_t v47 = a3[12];
  uint64_t v48 = &v20[v47];
  uint64_t v49 = &a2[v47];
  int v50 = v7(&v20[v47], 1, v6);
  int v51 = v7(v49, 1, v6);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v48, v49, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v48, 0, 1, v6);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v98 + 8))(v48, v6);
LABEL_36:
    sub_255FD8280();
    memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v98 + 40))(v48, v49, v6);
LABEL_37:
  uint64_t v53 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
  v99(&v48[v53[5]], &v49[v53[5]], v14);
  v48[v53[6]] = v49[v53[6]];
  ((void (*)(char *, char *, uint64_t))v96)(&v48[v53[7]], &v49[v53[7]], v97);
  uint64_t v54 = a3[13];
  uint64_t v55 = v20;
  uint64_t v56 = &v20[v54];
  uint64_t v57 = &a2[v54];
  int v58 = v7(v56, 1, v6);
  int v59 = v7(v57, 1, v6);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v56, v57, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v56, 0, 1, v6);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v59)
  {
    (*(void (**)(char *, uint64_t))(v98 + 8))(v56, v6);
LABEL_42:
    sub_255FD8280();
    memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v98 + 40))(v56, v57, v6);
LABEL_43:
  uint64_t v61 = _s6StylesV5EmptyVMa(0);
  v99(&v56[*(int *)(v61 + 20)], &v57[*(int *)(v61 + 20)], v14);
  v56[*(int *)(v61 + 24)] = v57[*(int *)(v61 + 24)];
  uint64_t v62 = a3[14];
  uint64_t v63 = &v55[v62];
  uint64_t v64 = &a2[v62];
  LODWORD(v61) = v7(&v55[v62], 1, v6);
  int v65 = v7(v64, 1, v6);
  if (v61)
  {
    if (!v65)
    {
      (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v63, v64, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v63, 0, 1, v6);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v65)
  {
    (*(void (**)(char *, uint64_t))(v98 + 8))(v63, v6);
LABEL_48:
    sub_255FD8280();
    memcpy(v63, v64, *(void *)(*(void *)(v66 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v98 + 40))(v63, v64, v6);
LABEL_49:
  uint64_t v67 = _s6StylesV5DailyVMa(0);
  v99(&v63[*(int *)(v67 + 20)], &v64[*(int *)(v67 + 20)], v14);
  v63[*(int *)(v67 + 24)] = v64[*(int *)(v67 + 24)];
  uint64_t v68 = a3[15];
  uint64_t v69 = &v55[v68];
  uint64_t v70 = &a2[v68];
  LODWORD(v67) = v7(&v55[v68], 1, v6);
  int v71 = v7(v70, 1, v6);
  if (v67)
  {
    if (!v71)
    {
      (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v69, v70, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v69, 0, 1, v6);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v71)
  {
    (*(void (**)(char *, uint64_t))(v98 + 8))(v69, v6);
LABEL_54:
    sub_255FD8280();
    memcpy(v69, v70, *(void *)(*(void *)(v72 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v98 + 40))(v69, v70, v6);
LABEL_55:
  uint64_t v73 = _s6StylesV9MomentaryVMa(0);
  v99(&v69[*(int *)(v73 + 20)], &v70[*(int *)(v73 + 20)], v14);
  uint64_t v74 = a3[16];
  uint64_t v75 = &v55[v74];
  uint64_t v76 = &a2[v74];
  int v77 = v7(&v55[v74], 1, v6);
  int v78 = v7(v76, 1, v6);
  if (v77)
  {
    if (!v78)
    {
      (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v75, v76, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v75, 0, 1, v6);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v78)
  {
    (*(void (**)(char *, uint64_t))(v98 + 8))(v75, v6);
LABEL_60:
    sub_255FD8280();
    memcpy(v75, v76, *(void *)(*(void *)(v79 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v98 + 40))(v75, v76, v6);
LABEL_61:
  uint64_t v80 = _s6StylesV6HeaderVMa(0);
  v99(&v75[*(int *)(v80 + 20)], &v76[*(int *)(v80 + 20)], v14);
  uint64_t v81 = a3[17];
  uint64_t v82 = &v55[v81];
  uint64_t v83 = &a2[v81];
  int v84 = v7(&v55[v81], 1, v6);
  int v85 = v7(v83, 1, v6);
  if (v84)
  {
    if (!v85)
    {
      (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v82, v83, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v82, 0, 1, v6);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v85)
  {
    (*(void (**)(char *, uint64_t))(v98 + 8))(v82, v6);
LABEL_66:
    sub_255FD8280();
    memcpy(v82, v83, *(void *)(*(void *)(v86 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v98 + 40))(v82, v83, v6);
LABEL_67:
  uint64_t v87 = _s6StylesV11ChartButtonVMa(0);
  v99(&v82[*(int *)(v87 + 20)], &v83[*(int *)(v87 + 20)], v14);
  uint64_t v88 = a3[18];
  uint64_t v89 = &v55[v88];
  uint64_t v90 = &a2[v88];
  int v91 = v7(&v55[v88], 1, v6);
  int v92 = v7(v90, 1, v6);
  if (!v91)
  {
    if (!v92)
    {
      (*(void (**)(char *, char *, uint64_t))(v98 + 40))(v89, v90, v6);
      goto LABEL_73;
    }
    (*(void (**)(char *, uint64_t))(v98 + 8))(v89, v6);
    goto LABEL_72;
  }
  if (v92)
  {
LABEL_72:
    sub_255FD8280();
    memcpy(v89, v90, *(void *)(*(void *)(v93 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v89, v90, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v89, 0, 1, v6);
LABEL_73:
  uint64_t v94 = _s6StylesV15LogButtonFooterVMa(0);
  v99(&v89[*(int *)(v94 + 20)], &v90[*(int *)(v94 + 20)], v14);
  return v55;
}

uint64_t _s6StylesVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25604F2C8);
}

uint64_t sub_25604F2C8(uint64_t a1, uint64_t a2, int *a3)
{
  sub_255FD8280();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_32:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_256176158();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_31:
    uint64_t v10 = a1 + v13;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_32;
  }
  if (a2 == 254)
  {
    unsigned int v14 = *(unsigned __int8 *)(a1 + a3[6]);
    if (v14 >= 2) {
      return v14 - 1;
    }
    else {
      return 0;
    }
  }
  uint64_t v16 = sub_256175D98();
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_31;
  }
  uint64_t v17 = _s6StylesV8TimelineVMa(0);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_31;
  }
  uint64_t v18 = _s6StylesV6NoDataVMa(0);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_31;
  }
  uint64_t v19 = _s6StylesV11PlaceholderVMa(0);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_31;
  }
  uint64_t v20 = _s6StylesV6SymbolVMa(0);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_31;
  }
  uint64_t v21 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a2)
  {
    uint64_t v8 = v21;
    uint64_t v12 = *(void *)(v21 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_31;
  }
  uint64_t v22 = _s6StylesV5EmptyVMa(0);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a2)
  {
    uint64_t v8 = v22;
    uint64_t v12 = *(void *)(v22 - 8);
    uint64_t v13 = a3[13];
    goto LABEL_31;
  }
  uint64_t v23 = _s6StylesV5DailyVMa(0);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a2)
  {
    uint64_t v8 = v23;
    uint64_t v12 = *(void *)(v23 - 8);
    uint64_t v13 = a3[14];
    goto LABEL_31;
  }
  uint64_t v24 = _s6StylesV9MomentaryVMa(0);
  if (*(_DWORD *)(*(void *)(v24 - 8) + 84) == a2)
  {
    uint64_t v8 = v24;
    uint64_t v12 = *(void *)(v24 - 8);
    uint64_t v13 = a3[15];
    goto LABEL_31;
  }
  uint64_t v25 = _s6StylesV6HeaderVMa(0);
  if (*(_DWORD *)(*(void *)(v25 - 8) + 84) == a2)
  {
    uint64_t v8 = v25;
    uint64_t v12 = *(void *)(v25 - 8);
    uint64_t v13 = a3[16];
    goto LABEL_31;
  }
  uint64_t v26 = _s6StylesV11ChartButtonVMa(0);
  if (*(_DWORD *)(*(void *)(v26 - 8) + 84) == a2)
  {
    uint64_t v8 = v26;
    uint64_t v12 = *(void *)(v26 - 8);
    uint64_t v13 = a3[17];
    goto LABEL_31;
  }
  uint64_t v27 = _s6StylesV15LogButtonFooterVMa(0);
  uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48);
  uint64_t v29 = v27;
  uint64_t v30 = a1 + a3[18];

  return v28(v30, a2, v29);
}

uint64_t _s6StylesVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25604F798);
}

uint64_t sub_25604F798(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_255FD8280();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_30:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = sub_256176158();
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v14 = *(void *)(result - 8);
    uint64_t v15 = a4[5];
LABEL_29:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_30;
  }
  if (a3 == 254)
  {
    *(unsigned char *)(a1 + a4[6]) = a2 + 1;
    return result;
  }
  uint64_t v16 = sub_256175D98();
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_29;
  }
  uint64_t v17 = _s6StylesV8TimelineVMa(0);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_29;
  }
  uint64_t v18 = _s6StylesV6NoDataVMa(0);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_29;
  }
  uint64_t v19 = _s6StylesV11PlaceholderVMa(0);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_29;
  }
  uint64_t v20 = _s6StylesV6SymbolVMa(0);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_29;
  }
  uint64_t v21 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_29;
  }
  uint64_t v22 = _s6StylesV5EmptyVMa(0);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[13];
    goto LABEL_29;
  }
  uint64_t v23 = _s6StylesV5DailyVMa(0);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a3)
  {
    uint64_t v10 = v23;
    uint64_t v14 = *(void *)(v23 - 8);
    uint64_t v15 = a4[14];
    goto LABEL_29;
  }
  uint64_t v24 = _s6StylesV9MomentaryVMa(0);
  if (*(_DWORD *)(*(void *)(v24 - 8) + 84) == a3)
  {
    uint64_t v10 = v24;
    uint64_t v14 = *(void *)(v24 - 8);
    uint64_t v15 = a4[15];
    goto LABEL_29;
  }
  uint64_t v25 = _s6StylesV6HeaderVMa(0);
  if (*(_DWORD *)(*(void *)(v25 - 8) + 84) == a3)
  {
    uint64_t v10 = v25;
    uint64_t v14 = *(void *)(v25 - 8);
    uint64_t v15 = a4[16];
    goto LABEL_29;
  }
  uint64_t v26 = _s6StylesV11ChartButtonVMa(0);
  if (*(_DWORD *)(*(void *)(v26 - 8) + 84) == a3)
  {
    uint64_t v10 = v26;
    uint64_t v14 = *(void *)(v26 - 8);
    uint64_t v15 = a4[17];
    goto LABEL_29;
  }
  uint64_t v27 = _s6StylesV15LogButtonFooterVMa(0);
  uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56);
  uint64_t v29 = v27;
  uint64_t v30 = a1 + a4[18];

  return v28(v30, a2, a2, v29);
}

uint64_t type metadata accessor for StateOfMindTimeline.Styles(uint64_t a1)
{
  return sub_256008F08(a1, (uint64_t *)&unk_269F45378);
}

void sub_25604FC78()
{
  sub_255FD8280();
  if (v0 <= 0x3F)
  {
    sub_256176158();
    if (v1 <= 0x3F)
    {
      sub_256175D98();
      if (v2 <= 0x3F)
      {
        _s6StylesV8TimelineVMa(319);
        if (v3 <= 0x3F)
        {
          _s6StylesV6NoDataVMa(319);
          if (v4 <= 0x3F)
          {
            _s6StylesV11PlaceholderVMa(319);
            if (v5 <= 0x3F)
            {
              _s6StylesV6SymbolVMa(319);
              if (v6 <= 0x3F)
              {
                type metadata accessor for StateOfMindTimeline.Styles.Entry(319);
                if (v7 <= 0x3F)
                {
                  _s6StylesV5EmptyVMa(319);
                  if (v8 <= 0x3F)
                  {
                    _s6StylesV5DailyVMa(319);
                    if (v9 <= 0x3F)
                    {
                      _s6StylesV9MomentaryVMa(319);
                      if (v10 <= 0x3F)
                      {
                        _s6StylesV6HeaderVMa(319);
                        if (v11 <= 0x3F)
                        {
                          _s6StylesV11ChartButtonVMa(319);
                          if (v12 <= 0x3F)
                          {
                            _s6StylesV15LogButtonFooterVMa(319);
                            if (v13 <= 0x3F) {
                              swift_initStructMetadata();
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t *_s6StylesV5EntryVwCP(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_256176AA8();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_255FD8280();
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[5];
    unint64_t v12 = (char *)a1 + v11;
    unint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    uint64_t v15 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_256175D98();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  }
  return a1;
}

uint64_t _s6StylesV5EntryVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_256176AA8();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t v7 = sub_256176158();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + *(int *)(a2 + 28);
  uint64_t v9 = sub_256175D98();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);

  return v10(v8, v9);
}

char *_s6StylesV5EntryVwcp(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_256176AA8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_255FD8280();
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_256176158();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  uint64_t v13 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = sub_256175D98();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  return a1;
}

char *_s6StylesV5EntryVwca(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_256176AA8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_255FD8280();
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_256176158();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  a1[a3[6]] = a2[a3[6]];
  uint64_t v16 = a3[7];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = sub_256175D98();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  return a1;
}

char *_s6StylesV5EntryVwtk(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_256176AA8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_255FD8280();
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_256176158();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = sub_256175D98();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  return a1;
}

char *_s6StylesV5EntryVwta(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_256176AA8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_255FD8280();
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_256176158();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = sub_256175D98();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  return a1;
}

uint64_t _s6StylesV5EntryVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256050AF8);
}

uint64_t sub_256050AF8(uint64_t a1, uint64_t a2, int *a3)
{
  sub_255FD8280();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_256176158();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + a3[5];
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (a2 == 254)
  {
    unsigned int v14 = *(unsigned __int8 *)(a1 + a3[6]);
    if (v14 >= 2) {
      return v14 - 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v15 = sub_256175D98();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[7];
    return v16(v18, a2, v17);
  }
}

uint64_t _s6StylesV5EntryVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256050C84);
}

uint64_t sub_256050C84(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_255FD8280();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = sub_256176158();
  uint64_t v14 = *(void *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v12 = a1 + a4[5];
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  if (a3 == 254)
  {
    *(unsigned char *)(a1 + a4[6]) = a2 + 1;
  }
  else
  {
    uint64_t v15 = sub_256175D98();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a4[7];
    return v16(v18, a2, a2, v17);
  }
  return result;
}

void sub_256050E00()
{
  sub_255FD8280();
  if (v0 <= 0x3F)
  {
    sub_256176158();
    if (v1 <= 0x3F)
    {
      sub_256175D98();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_256050F24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_6Tm);
}

uint64_t sub_256050F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_7Tm);
}

uint64_t sub_256050F58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_6Tm_0);
}

uint64_t sub_256050F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_7Tm_0);
}

uint64_t sub_256050F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_6Tm_1);
}

uint64_t sub_256050FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_7Tm_1);
}

uint64_t sub_256050FB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_6Tm_2);
}

uint64_t sub_256050FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_7Tm_2);
}

uint64_t sub_256050FFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_18Tm);
}

uint64_t sub_256051014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_19Tm);
}

uint64_t sub_256051030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_18Tm_0);
}

uint64_t sub_256051048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_19Tm_0);
}

uint64_t sub_256051060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_6Tm_3);
}

uint64_t sub_256051078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_7Tm_3);
}

uint64_t sub_256051090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_6Tm_4);
}

uint64_t sub_2560510A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_7Tm_4);
}

uint64_t *sub_2560510C0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_256176AA8();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_255FD8280();
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

char *sub_25605127C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_256176AA8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_255FD8280();
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_256176158();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_2560513E8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_256176AA8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_255FD8280();
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_256176158();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_2560515B8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_256176AA8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_255FD8280();
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_256176158();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_256051724(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_256176AA8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_255FD8280();
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_256176158();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_2560518F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256051908);
}

uint64_t __swift_get_extra_inhabitant_index_18Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_255FD8280();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = sub_256176158();
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
      if (v14 >= 2) {
        return v14 - 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_256051A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256051A30);
}

uint64_t __swift_store_extra_inhabitant_index_19Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_255FD8280();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_256176158();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_256051B44()
{
  sub_255FD8280();
  if (v0 <= 0x3F)
  {
    sub_256176158();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_256051C14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256051C28);
}

uint64_t __swift_get_extra_inhabitant_index_6Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_255FD8280();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_256176158();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_256051D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256051D38);
}

uint64_t __swift_store_extra_inhabitant_index_7Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_255FD8280();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_256176158();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_256051E40()
{
  uint64_t v0 = sub_256175D98();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  unint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256176378();
  int v4 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  int v5 = *MEMORY[0x263F184F8];
  uint64_t v6 = self;
  if (v4 == v5) {
    return MEMORY[0x25A29FE80](objc_msgSend(v6, sel_secondarySystemGroupedBackgroundColor));
  }
  uint64_t v7 = MEMORY[0x25A29FE80](objc_msgSend(v6, sel_systemGroupedBackgroundColor));
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v7;
}

id sub_256051F88(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  if (objc_msgSend(a1, sel_userInterfaceStyle) != (id)2)
  {
    id v9 = a4;
    if (!a4) {
      id v9 = a5;
    }
    id v12 = a4;
    a3 = a5;
    if (objc_msgSend(a1, sel_accessibilityContrast) != (id)1) {
      goto LABEL_5;
    }
    return v9;
  }
  id v9 = a2;
  if (!a2) {
    id v9 = a3;
  }
  id v10 = a2;
  if (objc_msgSend(a1, sel_accessibilityContrast) == (id)1) {
    return v9;
  }
LABEL_5:

  return a3;
}

uint64_t sub_256052078()
{
  return swift_deallocObject();
}

id sub_2560520C8(void *a1)
{
  return sub_256051F88(a1, v1[2], v1[3], v1[4], v1[5]);
}

id sub_2560520D4(uint64_t a1, void *a2)
{
  unint64_t v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  int v5 = (void *)v3();
  swift_release();

  return v5;
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_256052154(uint64_t a1, uint64_t a2)
{
  sub_255FD8280();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_2560521B8(uint64_t a1, uint64_t a2)
{
  sub_255FD8280();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_25605221C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (void *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    uint64_t v7 = a2[7];
    uint64_t v8 = *(int *)(a3 + 36);
    id v9 = (uint64_t *)((char *)a2 + v8);
    id v10 = (void *)(a1 + v8);
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v7;
    sub_255FD438C(0);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_256176AA8();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      {
        sub_2560524B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v10, v9, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v10, v9, v11);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
      }
      uint64_t v15 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      uint64_t v16 = (char *)v10 + v15;
      uint64_t v17 = (char *)v9 + v15;
      uint64_t v18 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *id v10 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

void sub_2560524B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_256052518(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  sub_255FD438C(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_256176AA8();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
    uint64_t v7 = v4 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    uint64_t v8 = sub_256176158();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v9(v7, v8);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_256052690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 56);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (void *)(a2 + v7);
  uint64_t v9 = (void *)(a1 + v7);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  sub_255FD438C(0);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_256176AA8();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      sub_2560524B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v9, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v9, v8, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    }
    uint64_t v13 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    uint64_t v14 = (char *)v9 + v13;
    uint64_t v15 = (char *)v8 + v13;
    uint64_t v16 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    *uint64_t v9 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_2560528D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 36);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    sub_2560541CC(a1 + v7, (uint64_t (*)(void))sub_255FD438C);
    sub_255FD438C(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_256176AA8();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        sub_2560524B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      uint64_t v13 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      uint64_t v14 = (char *)v8 + v13;
      uint64_t v15 = (char *)v9 + v13;
      uint64_t v16 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_256052B64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = (char *)(a1 + v5);
  uint64_t v7 = (char *)(a2 + v5);
  sub_255FD438C(0);
  uint64_t v9 = v8;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_256176AA8();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10))
    {
      sub_2560524B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v6, v7, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v6, v7, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
    }
    uint64_t v13 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    uint64_t v14 = &v6[v13];
    uint64_t v15 = &v7[v13];
    uint64_t v16 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_256052D74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 36);
    uint64_t v7 = (char *)(a1 + v6);
    uint64_t v8 = (char *)(a2 + v6);
    sub_2560541CC(a1 + v6, (uint64_t (*)(void))sub_255FD438C);
    sub_255FD438C(0);
    uint64_t v10 = v9;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_256176AA8();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
      {
        sub_2560524B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v7, v8, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
      }
      uint64_t v14 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      uint64_t v15 = &v7[v14];
      uint64_t v16 = &v8[v14];
      uint64_t v17 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_256052FF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256053004);
}

uint64_t sub_256053004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_2560524B4(0, &qword_269F43D20, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_2560530E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2560530F8);
}

uint64_t sub_2560530F8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_2560524B4(0, &qword_269F43D20, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for LabelsSelectionPhaseContent()
{
  uint64_t result = qword_269F45438;
  if (!qword_269F45438) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_25605321C()
{
  sub_255FD438C(319);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_2560532E8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_256053304@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v119 = a2;
  uint64_t v3 = type metadata accessor for LabelsSelectionPhaseContent();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v110 = v3 - 8;
  uint64_t v104 = v4;
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v105 = v5;
  uint64_t v106 = (uint64_t)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F9A1B0();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v108 = (char *)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FEACEC(0);
  uint64_t v115 = v8;
  uint64_t v116 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v107 = (uint64_t)&v103 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FEACB8(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v118 = (uint64_t)&v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v114 = (uint64_t)&v103 - v13;
  sub_25605412C();
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v117 = (uint64_t)&v103 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v111 = (uint64_t *)((char *)&v103 - v18);
  MEMORY[0x270FA5388](v17);
  uint64_t v121 = (uint64_t)&v103 - v19;
  uint64_t v112 = type metadata accessor for AssociationSelectionPhaseSpecs();
  uint64_t v20 = MEMORY[0x270FA5388](v112);
  uint64_t v120 = (uint64_t)&v103 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v103 - v22;
  sub_255FEAD0C(0);
  MEMORY[0x270FA5388](v24 - 8);
  uint64_t v26 = (uint64_t *)((char *)&v103 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v27 = type metadata accessor for ValenceSelectionSummary();
  uint64_t v28 = v27 - 8;
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v103 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FEAC3C(0);
  uint64_t v32 = v31 - 8;
  MEMORY[0x270FA5388](v31);
  uint64_t v34 = (char *)&v103 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FEAC1C(0);
  uint64_t v36 = v35 - 8;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v113 = (uint64_t)&v103 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v41 = (char *)&v103 - v40;
  MEMORY[0x270FA5388](v39);
  uint64_t v109 = (uint64_t)&v103 - v42;
  double v43 = *(double *)a1;
  char v44 = *(unsigned char *)(a1 + 40);
  *uint64_t v26 = swift_getKeyPath();
  sub_2560524B4(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  *(double *)uint64_t v30 = v43;
  *((void *)v30 + 1) = MEMORY[0x263F8EE78];
  v30[16] = v44;
  uint64_t v45 = (uint64_t *)&v30[*(int *)(v28 + 36)];
  *uint64_t v45 = swift_getKeyPath();
  sub_255FD438C(0);
  swift_storeEnumTagMultiPayload();
  sub_256054294((uint64_t)v26, (uint64_t)&v30[*(int *)(v28 + 40)], (uint64_t (*)(void))sub_255FEAD0C);
  LOBYTE(v28) = sub_256176DA8();
  sub_25611AFC4((uint64_t)v23);
  sub_2560541CC((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for AssociationSelectionPhaseSpecs);
  sub_256175D48();
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  uint64_t v53 = v52;
  sub_25605422C((uint64_t)v30, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ValenceSelectionSummary);
  uint64_t v54 = &v34[*(int *)(v32 + 44)];
  *uint64_t v54 = v28;
  *((void *)v54 + 1) = v47;
  *((void *)v54 + 2) = v49;
  *((void *)v54 + 3) = v51;
  *((void *)v54 + 4) = v53;
  v54[40] = 0;
  sub_2560541CC((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for ValenceSelectionSummary);
  LOBYTE(v32) = sub_256176D98();
  uint64_t v55 = v120;
  sub_25611AFC4(v120);
  sub_25604A240(*(unsigned char *)(a1 + 40));
  sub_2560541CC(v55, (uint64_t (*)(void))type metadata accessor for AssociationSelectionPhaseSpecs);
  sub_256175D48();
  uint64_t v57 = v56;
  uint64_t v59 = v58;
  uint64_t v61 = v60;
  uint64_t v63 = v62;
  sub_25605422C((uint64_t)v34, (uint64_t)v41, (uint64_t (*)(void))sub_255FEAC3C);
  uint64_t v64 = &v41[*(int *)(v36 + 44)];
  *uint64_t v64 = v32;
  *((void *)v64 + 1) = v57;
  *((void *)v64 + 2) = v59;
  *((void *)v64 + 3) = v61;
  *((void *)v64 + 4) = v63;
  v64[40] = 0;
  sub_2560541CC((uint64_t)v34, (uint64_t (*)(void))sub_255FEAC3C);
  uint64_t v65 = (uint64_t)v41;
  uint64_t v66 = v109;
  sub_256054294(v65, v109, (uint64_t (*)(void))sub_255FEAC1C);
  uint64_t v67 = sub_256176798();
  uint64_t v68 = (uint64_t)v111;
  *uint64_t v111 = v67;
  *(void *)(v68 + 8) = 0;
  *(unsigned char *)(v68 + 16) = 0;
  sub_2560542FC(0, &qword_269F45470, (void (*)(uint64_t))type metadata accessor for LabelsPicker);
  uint64_t v70 = v68 + *(int *)(v69 + 44);
  double v71 = *(double *)a1;
  uint64_t v72 = *(void *)(a1 + 8);
  uint64_t v125 = *(void **)(a1 + 16);
  long long v126 = *(_OWORD *)(a1 + 24);
  sub_2560524B4(0, &qword_269F45478, (uint64_t (*)(uint64_t))sub_25600525C, MEMORY[0x263F1B750]);
  swift_bridgeObjectRetain();
  sub_256177748();
  sub_256157DB0(v72, (uint64_t)v129, v130, v131[0], v70, v71);
  sub_256054294(v68, v121, (uint64_t (*)(void))sub_25605412C);
  uint64_t v73 = v112;
  sub_25611AFC4(v55);
  LOBYTE(v70) = sub_256176138();
  sub_2560541CC(v55, (uint64_t (*)(void))type metadata accessor for AssociationSelectionPhaseSpecs);
  if (v70)
  {
    uint64_t v74 = *(uint64_t (**)())a1;
    uint64_t v127 = v73;
    uint64_t v128 = &off_2704B9168;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v125);
    sub_25611AFC4((uint64_t)boxed_opaque_existential_1);
    uint64_t v76 = v106;
    sub_25605422C(a1, v106, (uint64_t (*)(void))type metadata accessor for LabelsSelectionPhaseContent);
    unint64_t v77 = (*(unsigned __int8 *)(v104 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80);
    uint64_t v78 = swift_allocObject();
    sub_256054294(v76, v78 + v77, (uint64_t (*)(void))type metadata accessor for LabelsSelectionPhaseContent);
    uint64_t v129 = v74;
    LOBYTE(v130) = 0;
    sub_2560327B8(0, (unint64_t *)&qword_269F43C20, MEMORY[0x263F8D538], MEMORY[0x263F8D8F0]);
    sub_256177768();
    long long v132 = v122;
    uint64_t v133 = v123;
    char v134 = v124;
    sub_255F9A6BC((long long *)&v125, (uint64_t)v131);
    uint64_t v129 = sub_256054534;
    uint64_t v130 = v78;
    uint64_t v135 = sub_25602078C;
    uint64_t v136 = 0;
    uint64_t v125 = &unk_2704B5358;
    sub_255FCD3A4((uint64_t)&unk_2704B6268);
    sub_2560327B8(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
    sub_255F744D8();
    sub_256177E28();
    swift_bridgeObjectRelease();
    sub_255F9A218();
    sub_256054598((unint64_t *)&qword_269F435F0, (void (*)(uint64_t))sub_255F9A218);
    uint64_t v79 = (uint64_t)v108;
    sub_256177238();
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    sub_2560541CC((uint64_t)&v129, (uint64_t (*)(void))sub_255F9A218);
    LOBYTE(v78) = sub_256176D98();
    uint64_t v80 = v120;
    sub_25611AFC4(v120);
    sub_2560541CC(v80, (uint64_t (*)(void))type metadata accessor for AssociationSelectionPhaseSpecs);
    sub_256175D48();
    uint64_t v82 = v81;
    uint64_t v84 = v83;
    uint64_t v86 = v85;
    uint64_t v88 = v87;
    uint64_t v89 = v107;
    sub_25605422C(v79, v107, (uint64_t (*)(void))sub_255F9A1B0);
    uint64_t v90 = v115;
    uint64_t v91 = v89 + *(int *)(v115 + 36);
    *(unsigned char *)uint64_t v91 = v78;
    *(void *)(v91 + 8) = v82;
    *(void *)(v91 + 16) = v84;
    *(void *)(v91 + 24) = v86;
    *(void *)(v91 + 32) = v88;
    *(unsigned char *)(v91 + 40) = 0;
    sub_2560541CC(v79, (uint64_t (*)(void))sub_255F9A1B0);
    uint64_t v92 = v114;
    sub_256054294(v89, v114, (uint64_t (*)(void))sub_255FEACEC);
    uint64_t v93 = 0;
    uint64_t v94 = v90;
  }
  else
  {
    uint64_t v93 = 1;
    uint64_t v92 = v114;
    uint64_t v94 = v115;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v116 + 56))(v92, v93, 1, v94);
  uint64_t v95 = v113;
  sub_25605422C(v66, v113, (uint64_t (*)(void))sub_255FEAC1C);
  uint64_t v96 = v121;
  uint64_t v97 = v117;
  sub_25605422C(v121, v117, (uint64_t (*)(void))sub_25605412C);
  uint64_t v98 = v118;
  sub_25605422C(v92, v118, (uint64_t (*)(void))sub_255FEACB8);
  uint64_t v99 = v119;
  sub_25605422C(v95, v119, (uint64_t (*)(void))sub_255FEAC1C);
  sub_2560540A4();
  uint64_t v101 = v100;
  sub_25605422C(v97, v99 + *(int *)(v100 + 48), (uint64_t (*)(void))sub_25605412C);
  sub_25605422C(v98, v99 + *(int *)(v101 + 64), (uint64_t (*)(void))sub_255FEACB8);
  sub_2560541CC(v92, (uint64_t (*)(void))sub_255FEACB8);
  sub_2560541CC(v96, (uint64_t (*)(void))sub_25605412C);
  sub_2560541CC(v66, (uint64_t (*)(void))sub_255FEAC1C);
  sub_2560541CC(v98, (uint64_t (*)(void))sub_255FEACB8);
  sub_2560541CC(v97, (uint64_t (*)(void))sub_25605412C);
  return sub_2560541CC(v95, (uint64_t (*)(void))sub_255FEAC1C);
}

uint64_t sub_256054010@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_256176788();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  sub_2560542FC(0, &qword_269F45448, sub_256054070);
  return sub_256053304(v1, a1 + *(int *)(v3 + 44));
}

void sub_256054070(uint64_t a1)
{
}

void sub_2560540A4()
{
  if (!qword_269F45458)
  {
    sub_255FEAC1C(255);
    sub_25605412C();
    sub_255FEACB8(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_269F45458);
    }
  }
}

void sub_25605412C()
{
  if (!qword_269F45460)
  {
    type metadata accessor for LabelsPicker();
    sub_256054598(&qword_269F45468, (void (*)(uint64_t))type metadata accessor for LabelsPicker);
    unint64_t v0 = sub_2561776F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45460);
    }
  }
}

uint64_t sub_2560541CC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25605422C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_256054294(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_2560542FC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_256176048();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_256054360()
{
  uint64_t v1 = (int *)(type metadata accessor for LabelsSelectionPhaseContent() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = v2 + v1[11];
  sub_255FD438C(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256176AA8();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    }
    uint64_t v6 = v3 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    uint64_t v7 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_256054534()
{
  uint64_t v1 = *(void *)(type metadata accessor for LabelsSelectionPhaseContent() - 8);
  return (*(uint64_t (**)(void))(v0
                              + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
                              + 48))();
}

uint64_t sub_256054598(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2560545E0()
{
  return sub_256054598(&qword_269F45480, (void (*)(uint64_t))sub_256054628);
}

void sub_256054628()
{
  if (!qword_269F45488)
  {
    sub_256054070(255);
    sub_256054598(&qword_269F45490, sub_256054070);
    unint64_t v0 = sub_2561776F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45488);
    }
  }
}

uint64_t sub_2560546BC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, char a3@<W3>, char a4@<W4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v29 = a5;
  uint64_t v30 = a6;
  uint64_t v12 = sub_256175868();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v31 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v29 - v16;
  type metadata accessor for StateOfMindEntryModel(0);
  sub_256059390(&qword_269F42CB0, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel);
  *(void *)a7 = sub_2561760E8();
  *(void *)(a7 + 8) = v18;
  *(void *)(a7 + 16) = a1;
  *(void *)(a7 + 24) = a2;
  *(unsigned char *)(a7 + 32) = a3;
  *(unsigned char *)(a7 + 33) = a4;
  uint64_t v19 = v30;
  *(void *)(a7 + 40) = v29;
  *(void *)(a7 + 48) = v19;
  uint64_t v20 = (int *)type metadata accessor for ReflectiveIntervalSelectionPhase_iOS();
  uint64_t v21 = (uint64_t *)(a7 + v20[8]);
  *uint64_t v21 = swift_getKeyPath();
  uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  sub_256059FAC(0, &qword_269F44C98, MEMORY[0x263F07920], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = (uint64_t *)(a7 + v20[9]);
  *uint64_t v23 = swift_getKeyPath();
  sub_256059FAC(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, v22);
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = (uint64_t *)(a7 + v20[10]);
  uint64_t *v24 = swift_getKeyPath();
  sub_256059FAC(0, &qword_269F47D00, MEMORY[0x263F18520], v22);
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = v20[11];
  uint64_t v32 = 1;
  type metadata accessor for __HKStateOfMindReflectiveInterval(0);
  sub_256177568();
  *(_OWORD *)(a7 + v25) = v33;
  sub_2561757C8();
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v31, v17, v12);
  sub_256177568();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v12);
  uint64_t v26 = a7 + v20[13];
  LOBYTE(v32) = 1;
  uint64_t result = sub_256177568();
  uint64_t v28 = *((void *)&v33 + 1);
  *(unsigned char *)uint64_t v26 = v33;
  *(void *)(v26 + 8) = v28;
  return result;
}

uint64_t type metadata accessor for ReflectiveIntervalSelectionPhase_iOS()
{
  uint64_t result = qword_269F454A0;
  if (!qword_269F454A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_256054A38@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8 = sub_256175D98();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560AA1D0(21, a4);
  sub_256059EF0(0, &qword_269F454F0, MEMORY[0x263F1B8A8], MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2561A44F0;
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v13(v11, a1, v8);
  *(void *)(inited + 32) = sub_2560D691C(1, v11);
  v13(v11, a1, v8);
  *(void *)(inited + 40) = sub_2560D691C(2, v11);
  v13(v11, a1, v8);
  *(void *)(inited + 48) = sub_2560D691C(3, v11);
  v13(v11, a1, v8);
  *(void *)(inited + 56) = sub_2560D691C(4, v11);
  v13(v11, a1, v8);
  *(void *)(inited + 64) = sub_2560D691C(5, v11);
  v13(v11, a1, v8);
  *(void *)(inited + 72) = sub_2560D691C(6, v11);
  v13(v11, a1, v8);
  *(void *)(inited + 80) = sub_2560D691C(7, v11);
  sub_2560595F0(inited, (uint64_t)&unk_2704B5EE8, a2, a3, -1.0, 1.0);
  swift_setDeallocating();
  return swift_arrayDestroy();
}

uint64_t sub_256054CD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v72 = a1;
  uint64_t v2 = sub_256175D98();
  uint64_t v70 = *(void *)(v2 - 8);
  uint64_t v71 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v69 = (uint64_t)v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v66 = (uint64_t)v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ReflectiveIntervalSelectionPhase_iOS();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560592FC();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256059490(0, &qword_269F454C0, (void (*)(uint64_t))sub_2560592FC);
  uint64_t v15 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v61 - v16;
  sub_2560593D8();
  uint64_t v64 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v63 = (uint64_t)v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256059490(0, &qword_269F454D0, (void (*)(uint64_t))sub_2560593D8);
  uint64_t v65 = v20;
  MEMORY[0x270FA5388](v20);
  uint64_t v68 = (uint64_t)v61 - v21;
  sub_2560594F4();
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v67 = (uint64_t)v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + 33) == 1)
  {
    sub_2560554D8(&v76);
    unint64_t v25 = v76.n128_u64[1];
    unint64_t v24 = v76.n128_u64[0];
    uint64_t v26 = v77;
    uint64_t v27 = v78;
    uint64_t v28 = v79;
    uint64_t v29 = v80;
    uint64_t v30 = v81;
    long long v31 = v82;
    uint64_t v32 = v83;
  }
  else
  {
    unint64_t v24 = 0;
    unint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    uint64_t v30 = 0;
    uint64_t v32 = 0;
    long long v31 = 0uLL;
  }
  *(void *)uint64_t v13 = v24;
  *((void *)v13 + 1) = v25;
  *((void *)v13 + 2) = v26;
  *((void *)v13 + 3) = v27;
  *((void *)v13 + 4) = v28;
  *((void *)v13 + 5) = v29;
  *((void *)v13 + 6) = v30;
  *(_OWORD *)(v13 + 56) = v31;
  *((void *)v13 + 9) = v32;
  sub_25605572C((uint64_t)&v13[*(int *)(v11 + 36)]);
  long long v33 = (uint64_t *)&v13[*(int *)(v11 + 40)];
  *long long v33 = swift_getKeyPath();
  sub_256059FAC(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  uint64_t v62 = type metadata accessor for ReflectiveIntervalSelectionPhase_iOS;
  sub_256059CC0(v1, (uint64_t)v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ReflectiveIntervalSelectionPhase_iOS);
  uint64_t v34 = *(unsigned __int8 *)(v7 + 80);
  v61[2] = (uint64_t (*)(void))(((v34 + 16) & ~v34) + v8);
  uint64_t v35 = (v34 + 16) & ~v34;
  v61[1] = (uint64_t (*)(void))(v34 | 7);
  uint64_t v36 = swift_allocObject();
  uint64_t v37 = v35;
  v61[0] = (uint64_t (*)(void))type metadata accessor for ReflectiveIntervalSelectionPhase_iOS;
  sub_256059DF0((uint64_t)v9, v36 + v35, (uint64_t (*)(void))type metadata accessor for ReflectiveIntervalSelectionPhase_iOS);
  char v73 = 0;
  swift_retain();
  sub_256177568();
  LOBYTE(v35) = v74;
  uint64_t v38 = v75;
  sub_256059CC0((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(void))sub_2560592FC);
  swift_release();
  uint64_t v39 = &v17[*(int *)(v15 + 36)];
  *(void *)uint64_t v39 = sub_2560595D8;
  *((void *)v39 + 1) = v36;
  v39[16] = v35;
  *((void *)v39 + 3) = v38;
  sub_256059D28((uint64_t)v13, (uint64_t (*)(void))sub_2560592FC);
  uint64_t v40 = v66;
  sub_25611BE0C(v66);
  sub_256059D28(v40, (uint64_t (*)(void))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
  uint64_t v41 = sub_256177938();
  uint64_t v42 = v1 + *(int *)(v6 + 52);
  char v43 = *(unsigned char *)v42;
  uint64_t v44 = *(void *)(v42 + 8);
  char v74 = v43;
  uint64_t v75 = v44;
  sub_256059EF0(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
  sub_256177578();
  uint64_t v66 = v6;
  char v45 = v73;
  uint64_t v46 = v63;
  sub_256059F3C((uint64_t)v17, v63, &qword_269F454C0, (void (*)(uint64_t))sub_2560592FC);
  uint64_t v47 = v46 + *(int *)(v64 + 36);
  *(void *)uint64_t v47 = v41;
  *(unsigned char *)(v47 + 8) = v45;
  sub_2560597F0((uint64_t)v17, &qword_269F454C0, (void (*)(uint64_t))sub_2560592FC);
  uint64_t v48 = v1;
  uint64_t v49 = v62;
  sub_256059CC0(v1, (uint64_t)v9, (uint64_t (*)(void))v62);
  uint64_t v50 = swift_allocObject();
  uint64_t v51 = v37;
  uint64_t v52 = v50 + v37;
  uint64_t v53 = v61[0];
  sub_256059DF0((uint64_t)v9, v52, v61[0]);
  uint64_t v54 = v68;
  sub_256059CC0(v46, v68, (uint64_t (*)(void))sub_2560593D8);
  uint64_t v55 = (uint64_t (**)())(v54 + *(int *)(v65 + 36));
  *uint64_t v55 = sub_256059C34;
  v55[1] = (uint64_t (*)())v50;
  v55[2] = 0;
  v55[3] = 0;
  sub_256059D28(v46, (uint64_t (*)(void))sub_2560593D8);
  uint64_t v56 = v48;
  uint64_t v57 = v69;
  sub_25611A114(v69);
  sub_256059CC0(v56, (uint64_t)v9, (uint64_t (*)(void))v49);
  uint64_t v58 = swift_allocObject();
  sub_256059DF0((uint64_t)v9, v58 + v51, v53);
  uint64_t v59 = v67;
  sub_256054A38(v57, (void (*)(void))sub_256059D8C, v67, 0.0);
  (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v57, v71);
  sub_2560597F0(v54, &qword_269F454D0, (void (*)(uint64_t))sub_2560593D8);
  swift_release();
  return sub_256059DF0(v59, v72, (uint64_t (*)(void))sub_2560594F4);
}

__n128 sub_2560554D8@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ReflectiveIntervalSelectionPhase_iOS();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v6 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_2561755B8();
  unint64_t v9 = v8;
  swift_bridgeObjectRelease();

  sub_256059CC0(v1, (uint64_t)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ReflectiveIntervalSelectionPhase_iOS);
  unint64_t v10 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v11 = swift_allocObject();
  sub_256059DF0((uint64_t)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10, (uint64_t (*)(void))type metadata accessor for ReflectiveIntervalSelectionPhase_iOS);
  uint64_t v15 = 0;
  char v16 = 0;
  sub_256059EF0(0, (unint64_t *)&qword_269F43C20, MEMORY[0x263F8D538], MEMORY[0x263F8D8F0]);
  sub_256177768();
  __n128 result = v17;
  unint64_t v13 = v18;
  unsigned __int8 v14 = v19;
  a1->n128_u64[0] = v7;
  a1->n128_u64[1] = v9;
  a1[1] = result;
  a1[2].n128_u64[0] = v13;
  a1[2].n128_u8[8] = v14;
  a1[3].n128_u64[0] = 0x747475427478654ELL;
  a1[3].n128_u64[1] = 0xEA00000000006E6FLL;
  a1[4].n128_u64[0] = (unint64_t)sub_256059E5C;
  a1[4].n128_u64[1] = v11;
  return result;
}

uint64_t sub_25605572C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ReflectiveIntervalSelectionPhase_iOS();
  uint64_t v4 = v3 - 8;
  uint64_t v27 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v27 + 64);
  MEMORY[0x270FA5388](v3);
  id v6 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_256059FAC(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  MEMORY[0x270FA5388](v7 - 8);
  unint64_t v9 = &v23[-v8];
  long long v28 = *(_OWORD *)(v1 + *(int *)(v4 + 52));
  unint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F1B5D0];
  sub_256059FAC(0, &qword_269F454E0, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindReflectiveInterval, MEMORY[0x263F1B5D0]);
  sub_256177598();
  long long v26 = v29;
  uint64_t v25 = v30;
  sub_256059FAC(0, &qword_269F44A68, v6, v10);
  sub_256177598();
  uint64_t v11 = v1 + *(int *)(v4 + 60);
  char v12 = *(unsigned char *)v11;
  uint64_t v13 = *(void *)(v11 + 8);
  LOBYTE(v28) = v12;
  *((void *)&v28 + 1) = v13;
  sub_256059EF0(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
  sub_256177598();
  long long v14 = v29;
  int v24 = v30;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_256175C88();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v15 = v29;
  sub_256059CC0(v1, (uint64_t)&v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t (*)(void))type metadata accessor for ReflectiveIntervalSelectionPhase_iOS);
  unint64_t v16 = (*(unsigned __int8 *)(v27 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  uint64_t v17 = swift_allocObject();
  sub_256059DF0((uint64_t)&v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], v17 + v16, (uint64_t (*)(void))type metadata accessor for ReflectiveIntervalSelectionPhase_iOS);
  uint64_t KeyPath = swift_getKeyPath();
  unsigned __int8 v19 = (int *)type metadata accessor for ReflectiveIntervalsSelectionPhaseContent();
  *(void *)(a1 + v19[9]) = KeyPath;
  sub_256059FAC(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  *(_OWORD *)a1 = v26;
  *(void *)(a1 + 16) = v25;
  uint64_t result = sub_25605A078((uint64_t)v9, a1 + v19[5]);
  uint64_t v21 = a1 + v19[6];
  *(_OWORD *)uint64_t v21 = v14;
  *(unsigned char *)(v21 + 16) = v24;
  *(void *)(a1 + v19[7]) = v15;
  uint64_t v22 = (void *)(a1 + v19[8]);
  void *v22 = sub_256059E5C;
  v22[1] = v17;
  return result;
}

uint64_t sub_256055AD8(uint64_t a1)
{
  uint64_t v2 = sub_256175868();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  id v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v12 - v7;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_256175C88();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v9 = v13;
  long long v13 = *(_OWORD *)(a1 + *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhase_iOS() + 44));
  v12[1] = v9;
  unint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F1B5D0];
  sub_256059FAC(0, &qword_269F454E0, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindReflectiveInterval, MEMORY[0x263F1B5D0]);
  sub_256177588();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_256175C88();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  sub_256059FAC(0, &qword_269F44A68, MEMORY[0x263F07490], v10);
  sub_256177588();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_256055D40()
{
  type metadata accessor for ReflectiveIntervalSelectionPhase_iOS();
  uint64_t v0 = MEMORY[0x263F8D4F8];
  sub_256059EF0(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
  sub_256177588();
  sub_256059EF0(0, (unint64_t *)&qword_269F47D40, v0, MEMORY[0x263F1B750]);
  return sub_256177728();
}

uint64_t sub_256055E24(uint64_t a1)
{
  uint64_t v2 = sub_256175D98();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  id v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v28 - v7;
  type metadata accessor for ReflectiveIntervalSelectionPhase_iOS();
  sub_25611A114((uint64_t)v8);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, *MEMORY[0x263F184F8], v2);
  char v9 = sub_256175D88();
  unint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v6, v2);
  v10(v8, v2);
  if (v9)
  {
    uint64_t v29 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_2560E87BC(0, 0, 0);
    uint64_t v11 = v29;
    uint64_t v12 = *(void *)(a1 + 16);
    if (v12)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      sub_256177498();
      uint64_t v13 = sub_256177868();
      uint64_t v15 = v14;
      swift_release();
      unint64_t v17 = *(void *)(v11 + 16);
      unint64_t v16 = *(void *)(v11 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_2560E87BC(v16 > 1, v17 + 1, 1);
        uint64_t v11 = v29;
      }
      *(void *)(v11 + 16) = v17 + 1;
      uint64_t v18 = v11 + 16 * v17;
      *(void *)(v18 + 32) = v13;
      *(void *)(v18 + 40) = v15;
      uint64_t v19 = v12 - 1;
      if (v19)
      {
        uint64_t v21 = 16 * v17;
        int64_t v22 = v17 + 2;
        uint64_t v23 = (uint64_t *)(a1 + 56);
        do
        {
          uint64_t v24 = *(v23 - 1);
          uint64_t v25 = *v23;
          unint64_t v26 = *(void *)(v11 + 24);
          uint64_t v29 = v11;
          swift_retain();
          if (v22 - 1 >= v26 >> 1)
          {
            sub_2560E87BC(v26 > 1, v22, 1);
            uint64_t v11 = v29;
          }
          *(void *)(v11 + 16) = v22;
          uint64_t v27 = v11 + v21;
          *(void *)(v27 + 48) = v24;
          *(void *)(v27 + 56) = v25;
          v21 += 16;
          ++v22;
          v23 += 2;
          --v19;
        }
        while (v19);
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return MEMORY[0x25A2A0300](v11);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *sub_2560560E8()
{
  uint64_t v78 = sub_256177A18();
  uint64_t v90 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  uint64_t v89 = (char *)&v66 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_256177A48();
  uint64_t v88 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  uint64_t v87 = (char *)&v66 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = type metadata accessor for ReflectiveIntervalSelectionPhase_iOS();
  uint64_t v85 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388](v92);
  uint64_t v86 = v3;
  uint64_t v91 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v81 = (uint64_t)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_256177A08();
  uint64_t v83 = *(void *)(v6 - 8);
  uint64_t v84 = v6;
  MEMORY[0x270FA5388](v6);
  long long v82 = (char **)((char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v93 = sub_256177A68();
  uint64_t v76 = *(void *)(v93 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v93);
  unsigned __int8 v80 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v75 = (char *)&v66 - v10;
  uint64_t KeyPath = sub_256175A08();
  uint64_t v72 = *(void *)(KeyPath - 8);
  MEMORY[0x270FA5388](KeyPath);
  uint64_t v71 = (uint64_t)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_256175868();
  uint64_t v74 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v66 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v66 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v66 - v22;
  uint64_t v24 = *(void *)(v0 + 16);
  uint64_t v25 = *(void *)(v0 + 24);
  uint64_t v77 = v0;
  char v26 = *(unsigned char *)(v0 + 32);
  *(void *)&long long aBlock = v24;
  *((void *)&aBlock + 1) = v25;
  LOBYTE(v95) = v26;
  sub_256059EF0(0, (unint64_t *)&qword_269F47D40, MEMORY[0x263F8D4F8], MEMORY[0x263F1B750]);
  uint64_t result = MEMORY[0x25A2A01A0](&v99);
  if ((v99 & 1) == 0)
  {
    uint64_t v68 = v21;
    uint64_t v66 = v15;
    uint64_t v67 = v18;
    uint64_t v69 = v23;
    uint64_t v70 = v12;
    *(void *)&long long aBlock = v24;
    *((void *)&aBlock + 1) = v25;
    LOBYTE(v95) = v26;
    LOBYTE(v99) = 1;
    sub_256177728();
    uint64_t v28 = v77;
    uint64_t v29 = v92;
    uint64_t v30 = *(int *)(v92 + 44);
    long long aBlock = *(_OWORD *)(v77 + v30);
    sub_256059FAC(0, &qword_269F454E0, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindReflectiveInterval, MEMORY[0x263F1B5D0]);
    swift_retain();
    sub_256177578();
    uint64_t v31 = v99;
    swift_getKeyPath();
    swift_getKeyPath();
    *(void *)&long long aBlock = v31;
    sub_256175C98();
    long long aBlock = *(_OWORD *)(v28 + v30);
    sub_256177578();
    if (v99 == 2)
    {
      swift_retain();
      uint64_t v40 = v71;
      sub_25611C0E0(v71);
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      uint64_t v41 = (uint64_t)v66;
      sub_256175C88();
      swift_release();
      swift_release();
      swift_release();
      char v42 = sub_256175908();
      uint64_t v43 = v70;
      uint64_t v44 = v74;
      uint64_t v45 = KeyPath;
      uint64_t v46 = v72;
      uint64_t v47 = (uint64_t)v67;
      if (v42) {
        (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))(v67, v41, v70);
      }
      else {
        sub_2560F5EF0(v41, (uint64_t)v67);
      }
      uint64_t v48 = v41;
      uint64_t v49 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
      v49(v48, v43);
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v40, v45);
      swift_getKeyPath();
      swift_getKeyPath();
      (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v69, v47, v43);
      swift_retain();
      sub_256175C98();
      v49(v47, v43);
      uint64_t v29 = v92;
      uint64_t v32 = v93;
      uint64_t v33 = v76;
      uint64_t v34 = v75;
      uint64_t v35 = (uint64_t)v91;
    }
    else
    {
      uint64_t v32 = v93;
      uint64_t v33 = v76;
      uint64_t v34 = v75;
      uint64_t v35 = (uint64_t)v91;
      if (v99 != 1)
      {
LABEL_10:
        swift_retain();
        sub_255FFDBD0(2, 0);
        swift_release();
        sub_255FB58F8(0, &qword_269F454E8);
        objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_setAnimationsEnabled_, 0);
        uint64_t v50 = v28 + *(int *)(v29 + 52);
        char v51 = *(unsigned char *)v50;
        uint64_t v52 = *(void *)(v50 + 8);
        LOBYTE(aBlock) = v51;
        *((void *)&aBlock + 1) = v52;
        LOBYTE(v99) = 0;
        sub_256059EF0(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
        sub_256177588();
        sub_255FB58F8(0, (unint64_t *)&qword_26B2AD368);
        uint64_t v53 = (void *)sub_2561782D8();
        uint64_t v54 = v80;
        sub_256177A58();
        uint64_t v55 = v81;
        sub_25611BE0C(v81);
        sub_256059D28(v55, (uint64_t (*)(void))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
        uint64_t v56 = v82;
        uint64_t v57 = v83;
        void *v82 = 400;
        uint64_t v58 = v84;
        (*(void (**)(void *, void, uint64_t))(v57 + 104))(v56, *MEMORY[0x263F8F000], v84);
        MEMORY[0x25A2A0500](v54, v56);
        (*(void (**)(void *, uint64_t))(v57 + 8))(v56, v58);
        uint64_t v59 = *(void (**)(char *, uint64_t))(v33 + 8);
        v59(v54, v32);
        sub_256059CC0(v28, v35, (uint64_t (*)(void))type metadata accessor for ReflectiveIntervalSelectionPhase_iOS);
        unint64_t v60 = (*(unsigned __int8 *)(v85 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
        uint64_t v61 = swift_allocObject();
        sub_256059DF0(v35, v61 + v60, (uint64_t (*)(void))type metadata accessor for ReflectiveIntervalSelectionPhase_iOS);
        uint64_t v97 = sub_256059E6C;
        uint64_t v98 = v61;
        *(void *)&long long aBlock = MEMORY[0x263EF8330];
        *((void *)&aBlock + 1) = 1107296256;
        uint64_t v95 = sub_255FA9E78;
        uint64_t v96 = &block_descriptor_6;
        uint64_t v62 = _Block_copy(&aBlock);
        swift_release();
        uint64_t v63 = v87;
        sub_256177A38();
        *(void *)&long long aBlock = MEMORY[0x263F8EE78];
        sub_256059390((unint64_t *)&unk_269F44D10, MEMORY[0x263F8F030]);
        sub_256059FAC(0, &qword_269F439E0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
        sub_255FAED28();
        uint64_t v64 = v89;
        uint64_t v65 = v78;
        sub_2561784C8();
        MEMORY[0x25A2A0D40](v34, v63, v64, v62);
        _Block_release(v62);

        (*(void (**)(char *, uint64_t))(v90 + 8))(v64, v65);
        (*(void (**)(char *, uint64_t))(v88 + 8))(v63, v79);
        return (void *)((uint64_t (*)(char *, uint64_t))v59)(v34, v93);
      }
      sub_256059FAC(0, &qword_269F44A68, MEMORY[0x263F07490], MEMORY[0x263F1B5D0]);
      swift_retain();
      uint64_t v36 = v69;
      sub_256177578();
      uint64_t KeyPath = swift_getKeyPath();
      swift_getKeyPath();
      uint64_t v37 = v74;
      uint64_t v38 = v70;
      (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v68, v36, v70);
      swift_retain();
      uint64_t v32 = v93;
      sub_256175C98();
      uint64_t v39 = v36;
      uint64_t v35 = (uint64_t)v91;
      (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v38);
    }
    swift_release();
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_256056D54()
{
  return sub_256176538();
}

uint64_t sub_256056D78()
{
  return sub_256176538();
}

uint64_t sub_256056D9C(uint64_t a1)
{
  uint64_t v2 = sub_256175A08();
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_256176548();
}

uint64_t sub_256056E68()
{
  return sub_2561763E8();
}

uint64_t sub_256056EA4()
{
  return sub_2561763E8();
}

uint64_t sub_256056EE8(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)a1 = *a2;
    uint64_t v4 = v14 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    *(_WORD *)(a1 + 32) = *((_WORD *)a2 + 16);
    uint64_t v9 = a2[6];
    uint64_t v10 = a3[8];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (uint64_t *)((char *)a2 + v10);
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    sub_256059FAC(0, &qword_269F44C98, MEMORY[0x263F07920], MEMORY[0x263F185C8]);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_256175A08();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = a3[9];
    uint64_t v16 = (void *)(v4 + v15);
    uint64_t v17 = (uint64_t *)((char *)a2 + v15);
    sub_256059FAC(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = sub_256176AA8();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        sub_256059FAC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v16, v17, v18);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      uint64_t v21 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      uint64_t v22 = (char *)v16 + v21;
      uint64_t v23 = (char *)v17 + v21;
      uint64_t v24 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    }
    else
    {
      *uint64_t v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = a3[10];
    char v26 = (void *)(v4 + v25);
    uint64_t v27 = (uint64_t *)((char *)a2 + v25);
    sub_256059FAC(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v28 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    }
    else
    {
      *char v26 = *v27;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v29 = a3[11];
    uint64_t v30 = a3[12];
    uint64_t v31 = (void *)(v4 + v29);
    uint64_t v32 = (uint64_t *)((char *)a2 + v29);
    uint64_t v33 = v32[1];
    *uint64_t v31 = *v32;
    v31[1] = v33;
    uint64_t v34 = v4 + v30;
    uint64_t v35 = (uint64_t)a2 + v30;
    uint64_t v36 = sub_256175868();
    uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16);
    swift_retain();
    v37(v34, v35, v36);
    sub_256059FAC(0, &qword_269F44A68, MEMORY[0x263F07490], MEMORY[0x263F1B5D0]);
    *(void *)(v34 + *(int *)(v38 + 28)) = *(void *)(v35 + *(int *)(v38 + 28));
    uint64_t v39 = a3[13];
    uint64_t v40 = v4 + v39;
    uint64_t v41 = (uint64_t)a2 + v39;
    *(unsigned char *)uint64_t v40 = *(unsigned char *)v41;
    *(void *)(v40 + 8) = *(void *)(v41 + 8);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_2560573E4(uint64_t a1, int *a2)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + a2[8];
  sub_256059FAC(0, &qword_269F44C98, MEMORY[0x263F07920], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_256175A08();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + a2[9];
  sub_256059FAC(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_256176AA8();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
    uint64_t v9 = v6 + *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    uint64_t v10 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = a1 + a2[10];
  sub_256059FAC(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  swift_release();
  uint64_t v13 = a1 + a2[12];
  uint64_t v14 = sub_256175868();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  sub_256059FAC(0, &qword_269F44A68, MEMORY[0x263F07490], MEMORY[0x263F1B5D0]);
  swift_release();

  return swift_release();
}

uint64_t sub_256057748(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v9 = a3[8];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  sub_256059FAC(0, &qword_269F44C98, MEMORY[0x263F07920], MEMORY[0x263F185C8]);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_256175A08();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  else
  {
    *uint64_t v10 = *v11;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = a3[9];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  sub_256059FAC(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_256176AA8();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      sub_256059FAC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v19 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    uint64_t v20 = (char *)v14 + v19;
    uint64_t v21 = (char *)v15 + v19;
    uint64_t v22 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  }
  else
  {
    *uint64_t v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = a3[10];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  sub_256059FAC(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v26 = sub_256175D98();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  }
  else
  {
    void *v24 = *v25;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v27 = a3[11];
  uint64_t v28 = a3[12];
  uint64_t v29 = (void *)(a1 + v27);
  uint64_t v30 = (void *)(a2 + v27);
  uint64_t v31 = v30[1];
  *uint64_t v29 = *v30;
  v29[1] = v31;
  uint64_t v32 = a1 + v28;
  uint64_t v33 = a2 + v28;
  uint64_t v34 = sub_256175868();
  uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16);
  swift_retain();
  v35(v32, v33, v34);
  sub_256059FAC(0, &qword_269F44A68, MEMORY[0x263F07490], MEMORY[0x263F1B5D0]);
  *(void *)(v32 + *(int *)(v36 + 28)) = *(void *)(v33 + *(int *)(v36 + 28));
  uint64_t v37 = a3[13];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = a2 + v37;
  *(unsigned char *)uint64_t v38 = *(unsigned char *)v39;
  *(void *)(v38 + 8) = *(void *)(v39 + 8);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_256057BF8(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = a3[8];
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    uint64_t v10 = (uint64_t (*)(uint64_t))MEMORY[0x263F07920];
    sub_25605814C(a1 + v7, &qword_269F44C98, MEMORY[0x263F07920]);
    sub_256059FAC(0, &qword_269F44C98, v10, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_256175A08();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v8, v9, v11);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = a3[9];
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (void *)(a2 + v12);
    sub_25605814C(a1 + v12, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
    sub_256059FAC(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_256176AA8();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        sub_256059FAC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      uint64_t v18 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      uint64_t v19 = (char *)v13 + v18;
      uint64_t v20 = (char *)v14 + v18;
      uint64_t v21 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *uint64_t v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v22 = a3[10];
    uint64_t v23 = (void *)(a1 + v22);
    uint64_t v24 = (void *)(a2 + v22);
    uint64_t v25 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    sub_25605814C(a1 + v22, &qword_269F47D00, MEMORY[0x263F18520]);
    sub_256059FAC(0, &qword_269F47D00, v25, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v23, v24, v26);
    }
    else
    {
      *uint64_t v23 = *v24;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v27 = a3[11];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (void *)(a2 + v27);
  *uint64_t v28 = *v29;
  v28[1] = v29[1];
  swift_retain();
  swift_release();
  uint64_t v30 = a3[12];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = sub_256175868();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 24))(v31, v32, v33);
  sub_256059FAC(0, &qword_269F44A68, MEMORY[0x263F07490], MEMORY[0x263F1B5D0]);
  *(void *)(v31 + *(int *)(v34 + 28)) = *(void *)(v32 + *(int *)(v34 + 28));
  swift_retain();
  swift_release();
  uint64_t v35 = a3[13];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  *(unsigned char *)uint64_t v36 = *(unsigned char *)v37;
  *(void *)(v36 + 8) = *(void *)(v37 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_25605814C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_256059FAC(0, a2, a3, MEMORY[0x263F185C8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_2560581BC(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v7 = a3[8];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  sub_256059FAC(0, &qword_269F44C98, MEMORY[0x263F07920], MEMORY[0x263F185C8]);
  uint64_t v11 = v10;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_256175A08();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v8, v9, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[9];
  uint64_t v14 = (char *)(a1 + v13);
  uint64_t v15 = (char *)(a2 + v13);
  sub_256059FAC(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  uint64_t v17 = v16;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = sub_256176AA8();
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18))
    {
      sub_256059FAC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v14, v15, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v14, v15, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v14, 0, 1, v18);
    }
    uint64_t v21 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    uint64_t v22 = &v14[v21];
    uint64_t v23 = &v15[v21];
    uint64_t v24 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  uint64_t v25 = a3[10];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (const void *)(a2 + v25);
  sub_256059FAC(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  uint64_t v29 = v28;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v30 = sub_256175D98();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v30 - 8) + 32))(v26, v27, v30);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
  }
  uint64_t v31 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_256175868();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  sub_256059FAC(0, &qword_269F44A68, MEMORY[0x263F07490], MEMORY[0x263F1B5D0]);
  *(void *)(v32 + *(int *)(v35 + 28)) = *(void *)(v33 + *(int *)(v35 + 28));
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_25605863C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = a3[8];
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    uint64_t v10 = (uint64_t (*)(uint64_t))MEMORY[0x263F07920];
    sub_25605814C(a1 + v7, &qword_269F44C98, MEMORY[0x263F07920]);
    sub_256059FAC(0, &qword_269F44C98, v10, MEMORY[0x263F185C8]);
    uint64_t v12 = v11;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_256175A08();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    uint64_t v14 = a3[9];
    uint64_t v15 = (char *)(a1 + v14);
    uint64_t v16 = (char *)(a2 + v14);
    sub_25605814C(a1 + v14, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
    sub_256059FAC(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    uint64_t v18 = v17;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_256176AA8();
      uint64_t v20 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v16, 1, v19))
      {
        sub_256059FAC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v15, v16, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v15, v16, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v15, 0, 1, v19);
      }
      uint64_t v22 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      uint64_t v23 = &v15[v22];
      uint64_t v24 = &v16[v22];
      uint64_t v25 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
    }
    uint64_t v26 = a3[10];
    uint64_t v27 = (void *)(a1 + v26);
    uint64_t v28 = (const void *)(a2 + v26);
    uint64_t v29 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    sub_25605814C(a1 + v26, &qword_269F47D00, MEMORY[0x263F18520]);
    sub_256059FAC(0, &qword_269F47D00, v29, MEMORY[0x263F185C8]);
    uint64_t v31 = v30;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v32 = sub_256175D98();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v32 - 8) + 32))(v27, v28, v32);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
    }
  }
  uint64_t v33 = a3[11];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (uint64_t *)(a2 + v33);
  uint64_t v37 = *v35;
  uint64_t v36 = v35[1];
  *uint64_t v34 = v37;
  v34[1] = v36;
  swift_release();
  uint64_t v38 = a3[12];
  uint64_t v39 = a1 + v38;
  uint64_t v40 = a2 + v38;
  uint64_t v41 = sub_256175868();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 40))(v39, v40, v41);
  sub_256059FAC(0, &qword_269F44A68, MEMORY[0x263F07490], MEMORY[0x263F1B5D0]);
  *(void *)(v39 + *(int *)(v42 + 28)) = *(void *)(v40 + *(int *)(v42 + 28));
  swift_release();
  uint64_t v43 = a3[13];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  *(unsigned char *)uint64_t v44 = *(unsigned char *)v45;
  *(void *)(v44 + 8) = *(void *)(v45 + 8);
  swift_release();
  return a1;
}

uint64_t sub_256058B78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256058B8C);
}

uint64_t sub_256058B8C(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  sub_256059FAC(0, &qword_269F45498, MEMORY[0x263F07920], MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[8];
LABEL_11:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v14(a1 + v11, a2, v9);
  }
  sub_256059FAC(0, &qword_269F44C38, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[9];
    goto LABEL_11;
  }
  sub_256059FAC(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a3[10];
    goto LABEL_11;
  }
  sub_256059FAC(0, &qword_269F44A68, MEMORY[0x263F07490], MEMORY[0x263F1B5D0]);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a3[12];

  return v16(v18, a2, v17);
}

uint64_t sub_256058E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256058E24);
}

uint64_t sub_256058E24(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  sub_256059FAC(0, &qword_269F45498, MEMORY[0x263F07920], MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[8];
LABEL_9:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v14(v5 + v11, a2, a2, v9);
  }
  sub_256059FAC(0, &qword_269F44C38, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[9];
    goto LABEL_9;
  }
  sub_256059FAC(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[10];
    goto LABEL_9;
  }
  sub_256059FAC(0, &qword_269F44A68, MEMORY[0x263F07490], MEMORY[0x263F1B5D0]);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = v5 + a4[12];

  return v16(v18, a2, a2, v17);
}

void sub_2560590A8()
{
  sub_256059FAC(319, &qword_269F44C98, MEMORY[0x263F07920], MEMORY[0x263F185C8]);
  if (v0 <= 0x3F)
  {
    sub_256059FAC(319, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    if (v1 <= 0x3F)
    {
      sub_256059FAC(319, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
      if (v2 <= 0x3F)
      {
        sub_256059FAC(319, &qword_269F44A68, MEMORY[0x263F07490], MEMORY[0x263F1B5D0]);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t sub_2560592DC()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_2560592FC()
{
  if (!qword_269F454B0)
  {
    type metadata accessor for ReflectiveIntervalsSelectionPhaseContent();
    sub_256059390(&qword_269F454B8, (void (*)(uint64_t))type metadata accessor for ReflectiveIntervalsSelectionPhaseContent);
    unint64_t v0 = type metadata accessor for StateOfMindEntryPhase_iOS();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F454B0);
    }
  }
}

uint64_t sub_256059390(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2560593D8()
{
  if (!qword_269F454C8)
  {
    sub_256059490(255, &qword_269F454C0, (void (*)(uint64_t))sub_2560592FC);
    sub_256059580(255, &qword_269F43040, MEMORY[0x263F8D4F8], MEMORY[0x263F8D510], MEMORY[0x263F198B8]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F454C8);
    }
  }
}

void sub_256059490(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_2560594F4()
{
  if (!qword_269F454D8)
  {
    sub_256059490(255, &qword_269F454D0, (void (*)(uint64_t))sub_2560593D8);
    sub_255FD68AC(255);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F454D8);
    }
  }
}

void sub_256059580(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_2560595D8()
{
  return sub_256059C4C(sub_256055AD8);
}

__n128 sub_2560595F0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  uint64_t v7 = v6;
  double v12 = a6 - a5;
  int64_t v13 = *(void *)(a2 + 16);
  uint64_t v14 = MEMORY[0x263F8EE78];
  if (v13)
  {
    uint64_t v29 = MEMORY[0x263F8EE78];
    sub_2560E86BC(0, v13, 0);
    uint64_t v14 = v29;
    uint64_t v16 = (double *)(a2 + 32);
    unint64_t v17 = *(void *)(v29 + 16);
    do
    {
      double v18 = *v16;
      uint64_t v28 = v14;
      unint64_t v19 = *(void *)(v14 + 24);
      if (v17 >= v19 >> 1) {
        sub_2560E86BC(v19 > 1, v17 + 1, 1);
      }
      *(void *)(v14 + 16) = v17 + 1;
      *(double *)(v14 + 8 * v17 + 32) = (v18 - a5) / v12;
      ++v16;
      ++v17;
      --v13;
    }
    while (v13);
    uint64_t v7 = v6;
  }
  sub_2560D7058(a1, v14);
  a3();
  swift_bridgeObjectRelease();
  sub_2561779B8();
  sub_2561779C8();
  sub_2561760B8();
  uint64_t v20 = sub_2561778E8();
  uint64_t v22 = v21;
  uint64_t v23 = sub_2561761F8();
  char v24 = sub_256176D88();
  sub_256059F3C(v7, a4, &qword_269F454D0, (void (*)(uint64_t))sub_2560593D8);
  swift_bridgeObjectRelease();
  sub_2560594F4();
  uint64_t v26 = a4 + *(int *)(v25 + 36);
  *(void *)uint64_t v26 = v28;
  __n128 result = v30;
  *(__n128 *)(v26 + 8) = v30;
  *(void *)(v26 + 24) = v31;
  *(void *)(v26 + 32) = v32;
  *(void *)(v26 + 40) = v23;
  *(unsigned char *)(v26 + 48) = v24;
  *(void *)(v26 + 56) = v20;
  *(void *)(v26 + 64) = v22;
  return result;
}

uint64_t sub_2560597F0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_256059490(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t objectdestroyTm_10()
{
  uint64_t v1 = (int *)type metadata accessor for ReflectiveIntervalSelectionPhase_iOS();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = v3 + v1[8];
  sub_256059FAC(0, &qword_269F44C98, MEMORY[0x263F07920], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_256175A08();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = v3 + v1[9];
  sub_256059FAC(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_256176AA8();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
    uint64_t v9 = v6 + *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    uint64_t v10 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = v3 + v1[10];
  sub_256059FAC(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  swift_release();
  uint64_t v13 = v3 + v1[12];
  uint64_t v14 = sub_256175868();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  sub_256059FAC(0, &qword_269F44A68, MEMORY[0x263F07490], MEMORY[0x263F1B5D0]);
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_256059C34()
{
  return sub_256059C4C((uint64_t (*)(uint64_t))sub_256055D40);
}

uint64_t sub_256059C4C(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for ReflectiveIntervalSelectionPhase_iOS() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_256059CC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_256059D28(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_256059D8C(uint64_t a1)
{
  return sub_256055E24(a1);
}

uint64_t sub_256059DF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_256059E6C()
{
  uint64_t v1 = *(void *)(type metadata accessor for ReflectiveIntervalSelectionPhase_iOS() - 8);
  return (*(uint64_t (**)(void))(v0
                              + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
                              + 40))();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

void sub_256059EF0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_256059F3C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_256059490(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_256059FAC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void *sub_25605A01C()
{
  return sub_2560560E8();
}

uint64_t sub_25605A078(uint64_t a1, uint64_t a2)
{
  sub_256059FAC(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_25605A110()
{
  unint64_t result = qword_269F454F8;
  if (!qword_269F454F8)
  {
    sub_2560594F4();
    sub_25605A1B8();
    sub_256059390(&qword_269F43E60, sub_255FD68AC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F454F8);
  }
  return result;
}

unint64_t sub_25605A1B8()
{
  unint64_t result = qword_269F45500;
  if (!qword_269F45500)
  {
    sub_256059490(255, &qword_269F454D0, (void (*)(uint64_t))sub_2560593D8);
    sub_25605A254();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45500);
  }
  return result;
}

unint64_t sub_25605A254()
{
  unint64_t result = qword_269F45508;
  if (!qword_269F45508)
  {
    sub_2560593D8();
    sub_25605A2CC();
    sub_255F88038();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45508);
  }
  return result;
}

unint64_t sub_25605A2CC()
{
  unint64_t result = qword_269F45510;
  if (!qword_269F45510)
  {
    sub_256059490(255, &qword_269F454C0, (void (*)(uint64_t))sub_2560592FC);
    sub_256059390(&qword_269F45518, (void (*)(uint64_t))sub_2560592FC);
    sub_25605A398();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45510);
  }
  return result;
}

unint64_t sub_25605A398()
{
  unint64_t result = qword_269F45520;
  if (!qword_269F45520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45520);
  }
  return result;
}

uint64_t destroy for AddCustomReminderRow(uint64_t a1)
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for AddCustomReminderRow(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  id v5 = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AddCustomReminderRow(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  id v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AddCustomReminderRow(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalizedAssessmentInformationalContent(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalizedAssessmentInformationalContent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AddCustomReminderRow()
{
  return &type metadata for AddCustomReminderRow;
}

uint64_t sub_25605A684()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25605A6A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v22 = a1;
  sub_25605B2A0();
  long long v3 = v2;
  uint64_t v19 = *((void *)v2 - 1);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25605B300();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v20 = v6;
  uint64_t v21 = v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_allocObject();
  long long v11 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v10 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v10 + 32) = v11;
  *(_OWORD *)(v10 + 48) = *(_OWORD *)(v1 + 32);
  *(void *)(v10 + 64) = *(void *)(v1 + 48);
  uint64_t v23 = v1;
  sub_25605B460(v1);
  sub_2561775C8();
  long long v28 = *(_OWORD *)(v1 + 40);
  sub_25605B6B4(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
  sub_256177598();
  uint64_t v12 = swift_allocObject();
  long long v13 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v12 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v12 + 32) = v13;
  *(_OWORD *)(v12 + 48) = *(_OWORD *)(v1 + 32);
  *(void *)(v12 + 64) = *(void *)(v1 + 48);
  sub_25605B460(v1);
  uint64_t v14 = type metadata accessor for CustomReminderView(0);
  uint64_t v17 = sub_25605B404((unint64_t *)&qword_269F42EE0, (void (*)(uint64_t))sub_25605B2A0);
  uint64_t v18 = sub_25605B404(&qword_269F436F0, (void (*)(uint64_t))type metadata accessor for CustomReminderView);
  sub_2561772E8();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, void *))(v19 + 8))(v5, v3);
  char v24 = &unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B6298);
  sub_25605B6B4(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  char v24 = v3;
  uint64_t v25 = v14;
  uint64_t v26 = v17;
  uint64_t v27 = v18;
  swift_getOpaqueTypeConformance2();
  uint64_t v15 = v20;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v9, v15);
}

uint64_t sub_25605AAD8(long long *a1)
{
  long long v15 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = *((id *)&v15 + 1);
  sub_256175C88();
  swift_release();
  swift_release();
  sub_25605B57C((uint64_t)&v15);
  if (v9 == 1)
  {
    uint64_t v3 = *((void *)a1 + 3);
    char v5 = *((unsigned char *)a1 + 32);
    *(void *)&long long v12 = *((void *)a1 + 2);
    uint64_t v4 = v12;
    sub_255F9A600((uint64_t)&v12);
    sub_25605B6B4(0, (unint64_t *)&qword_269F47D40, MEMORY[0x263F8D4F8], MEMORY[0x263F1B750]);
    uint64_t v7 = v6;
    swift_retain();
    MEMORY[0x25A2A01A0](&v14, v7);
    *(void *)&long long v9 = v4;
    *((void *)&v9 + 1) = v3;
    char v10 = v5;
    BOOL v13 = (v14 & 1) == 0;
    sub_256177728();
    sub_255FFCD68((uint64_t)&v12);
    return swift_release();
  }
  else
  {
    long long v9 = *(long long *)((char *)a1 + 40);
    long long v12 = *(long long *)((char *)a1 + 40);
    sub_25605B5A8((uint64_t)&v9 + 8, (uint64_t)&v14);
    sub_255F9A600((uint64_t)&v14);
    sub_25605B6B4(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
    sub_256177578();
    long long v12 = v9;
    BOOL v11 = !v13;
    sub_256177588();
    return sub_25605B688((uint64_t)&v9);
  }
}

uint64_t sub_25605ACA8@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v4 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_2561755B8();
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();

  *(void *)&long long v24 = v5;
  *((void *)&v24 + 1) = v7;
  sub_255F5CE90();
  uint64_t v8 = sub_256177028();
  uint64_t v10 = v9;
  char v12 = v11;
  long long v24 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v13 = *((id *)&v24 + 1);
  sub_256175C88();
  swift_release();
  swift_release();
  sub_25605B57C((uint64_t)&v24);
  if (v23 == 1) {
    sub_256176A58();
  }
  else {
    sub_256176A48();
  }
  char v14 = v12 & 1;
  uint64_t v15 = sub_256176FA8();
  uint64_t v17 = v16;
  char v19 = v18;
  uint64_t v21 = v20;
  sub_255F67B2C(v8, v10, v14);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v15;
  *(void *)(a2 + 8) = v17;
  *(unsigned char *)(a2 + 16) = v19 & 1;
  *(void *)(a2 + 24) = v21;
  return result;
}

uint64_t sub_25605AE98@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_25605B514(0, &qword_269F42B48, MEMORY[0x263F185D0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v34 = (uint64_t *)&v30[-v5];
  uint64_t v6 = sub_256175868();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v35 = &v30[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v8);
  char v11 = &v30[-v10];
  uint64_t v12 = type metadata accessor for CustomReminderModel();
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = &v30[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  char v18 = &v30[-v17];
  char v19 = *(void **)(a1 + 8);
  *(void *)char v18 = 0;
  *((void *)v18 + 1) = 0;
  *((_WORD *)v18 + 8) = 257;
  uint64_t v20 = &v30[*(int *)(v16 + 32) - v17];
  uint64_t v21 = sub_256175568();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  id v22 = v19;
  sub_256175828();
  long long v36 = *(_OWORD *)(a1 + 40);
  sub_25605B6B4(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
  sub_256177598();
  uint64_t v32 = v38;
  uint64_t v33 = v37;
  int v31 = v39;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v24 = (uint64_t)v34;
  *uint64_t v34 = KeyPath;
  sub_25605B514(0, &qword_269F47D00, MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for NotificationSettingsModel();
  sub_25605B404((unint64_t *)&qword_269F43720, (void (*)(uint64_t))type metadata accessor for NotificationSettingsModel);
  *a2 = sub_2561760E8();
  a2[1] = v25;
  uint64_t v26 = type metadata accessor for CustomReminderView(0);
  sub_2560175C8((uint64_t)v18, (uint64_t)v15);
  sub_256177568();
  sub_25601762C((uint64_t)v18);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 16))(v35, v11, v6);
  sub_256177568();
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v11, v6);
  uint64_t v27 = (char *)a2 + *(int *)(v26 + 28);
  uint64_t v28 = v32;
  *(void *)uint64_t v27 = v33;
  *((void *)v27 + 1) = v28;
  v27[16] = v31;
  return sub_255F9EAD8(v24, (uint64_t)a2 + *(int *)(v26 + 32));
}

uint64_t sub_25605B25C@<X0>(uint64_t a1@<X8>)
{
  return sub_25605A6A0(a1);
}

void sub_25605B2A0()
{
  if (!qword_269F42ED0)
  {
    unint64_t v0 = sub_2561775E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F42ED0);
    }
  }
}

void sub_25605B300()
{
  if (!qword_269F45528)
  {
    sub_25605B2A0();
    type metadata accessor for CustomReminderView(255);
    sub_25605B404((unint64_t *)&qword_269F42EE0, (void (*)(uint64_t))sub_25605B2A0);
    sub_25605B404(&qword_269F436F0, (void (*)(uint64_t))type metadata accessor for CustomReminderView);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F45528);
    }
  }
}

uint64_t sub_25605B404(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25605B450()
{
  return sub_25605AAD8((long long *)(v0 + 16));
}

uint64_t sub_25605B458@<X0>(uint64_t a1@<X8>)
{
  return sub_25605ACA8(*(long long **)(v1 + 16), a1);
}

uint64_t sub_25605B460(uint64_t a1)
{
  id v2 = *(void **)(a1 + 8);
  swift_retain();
  id v3 = v2;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t objectdestroyTm_11()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_25605B504@<X0>(uint64_t *a1@<X8>)
{
  return sub_25605AE98(v1 + 16, a1);
}

void sub_25605B514(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_256175D98();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_25605B57C(uint64_t a1)
{
  return a1;
}

uint64_t sub_25605B5A8(uint64_t a1, uint64_t a2)
{
  sub_25605B60C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_25605B60C()
{
  if (!qword_269F45530)
  {
    sub_25605B6B4(255, &qword_269F45538, MEMORY[0x263F8D4F8], MEMORY[0x263F184E8]);
    unint64_t v0 = sub_256178448();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45530);
    }
  }
}

uint64_t sub_25605B688(uint64_t a1)
{
  return a1;
}

void sub_25605B6B4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_25605B704()
{
  unint64_t result = qword_269F45540;
  if (!qword_269F45540)
  {
    sub_25605B85C();
    sub_25605B2A0();
    type metadata accessor for CustomReminderView(255);
    sub_25605B404((unint64_t *)&qword_269F42EE0, (void (*)(uint64_t))sub_25605B2A0);
    sub_25605B404(&qword_269F436F0, (void (*)(uint64_t))type metadata accessor for CustomReminderView);
    swift_getOpaqueTypeConformance2();
    sub_25605B404(&qword_269F42EA0, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45540);
  }
  return result;
}

void sub_25605B85C()
{
  if (!qword_269F45548[0])
  {
    sub_25605B300();
    sub_256176D38();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, qword_269F45548);
    }
  }
}

uint64_t sub_25605B8C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 72);
}

uint64_t sub_25605B8CC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_25605B9F4(uint64_t *a1, uint64_t *a2, void *a3)
{
  uint64_t v3 = *(void *)(a3[4] - 8);
  uint64_t v4 = *(_DWORD *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v7 = a3[2];
  uint64_t v6 = a3[3];
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v5 + v9;
  uint64_t v11 = (v5 + v9 + ((v4 + 1) & ~v4)) & ~v9;
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v13 = *(void *)(v6 - 8);
  uint64_t v14 = *(_DWORD *)(v13 + 80);
  uint64_t v15 = v12 + v14;
  uint64_t v16 = *(void *)(v13 + 64) + 7;
  unint64_t v17 = ((((v16 + ((v12 + v14 + v11) & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v18 = v9 | v4 | v14;
  if (v18 > 7 || ((*(_DWORD *)(v8 + 80) | *(_DWORD *)(v3 + 80) | *(_DWORD *)(v13 + 80)) & 0x100000) != 0 || v17 > 0x18)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    uint64_t v29 = (uint64_t *)(v21 + ((v18 & 0xF8 ^ 0x1F8) & (v18 + 16)));
  }
  else
  {
    uint64_t v22 = ~v9;
    uint64_t v23 = ~v14;
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v34 = v6;
    uint64_t v24 = ((unint64_t)a1 + v4 + 1) & ~v4;
    uint64_t v25 = ((unint64_t)a2 + v4 + 1) & ~v4;
    (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v24, v25);
    uint64_t v26 = (v24 + v10) & v22;
    uint64_t v27 = (v25 + v10) & v22;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v26, v27, v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))((v26 + v15) & v23, (v27 + v15) & v23, v34);
    uint64_t v28 = (void *)((v16 + ((v26 + v15) & v23)) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v29 = a1;
    __n128 v30 = (void *)((v16 + ((v27 + v15) & v23)) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v28 = *v30;
    v28[1] = v30[1];
    int v31 = (void *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v32 = (void *)(((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8);
    *int v31 = *v32;
    v31[1] = v32[1];
    swift_retain();
  }
  swift_retain();
  return v29;
}

uint64_t sub_25605BC98(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a2[4] - 8);
  uint64_t v4 = v3 + 8;
  unint64_t v5 = (a1 + *(unsigned __int8 *)(v3 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  (*(void (**)(unint64_t))(v3 + 8))(v5);
  uint64_t v6 = *(void *)(v4 + 56);
  uint64_t v7 = *(void *)(a2[2] - 8);
  uint64_t v8 = v7 + 8;
  unint64_t v9 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  (*(void (**)(unint64_t))(v7 + 8))(v9);
  (*(void (**)(unint64_t))(*(void *)(a2[3] - 8) + 8))((v9
                                                                             + *(void *)(v8 + 56)
                                                                             + *(unsigned __int8 *)(*(void *)(a2[3] - 8)
                                                                                                  + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a2[3] - 8) + 80));
  swift_release();

  return swift_release();
}

unsigned char *sub_25605BDBC(unsigned char *a1, unsigned char *a2, void *a3)
{
  *a1 = *a2;
  uint64_t v5 = *(void *)(a3[4] - 8);
  uint64_t v6 = v5 + 16;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = (unint64_t)&a1[v7 + 1] & ~v7;
  uint64_t v9 = (unint64_t)&a2[v7 + 1] & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v8, v9);
  uint64_t v10 = *(void *)(v6 + 48);
  uint64_t v11 = *(void *)(a3[2] - 8);
  uint64_t v12 = v11 + 16;
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = v10 + v13;
  uint64_t v15 = (v14 + v8) & ~v13;
  uint64_t v16 = (v14 + v9) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v11 + 16))(v15, v16);
  uint64_t v17 = *(void *)(v12 + 48);
  uint64_t v18 = *(void *)(a3[3] - 8);
  uint64_t v19 = v18 + 16;
  uint64_t v20 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v21 = v17 + v20;
  uint64_t v22 = (v21 + v15) & ~v20;
  uint64_t v23 = (v21 + v16) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v18 + 16))(v22, v23);
  uint64_t v24 = *(void *)(v19 + 48) + 7;
  uint64_t v25 = (void *)((v24 + v22) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v26 = (void *)((v24 + v23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v25 = *v26;
  v25[1] = v26[1];
  uint64_t v27 = (void *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v28 = (void *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v27 = *v28;
  v27[1] = v28[1];
  swift_retain();
  swift_retain();
  return a1;
}

unsigned char *sub_25605BF3C(unsigned char *a1, unsigned char *a2, void *a3)
{
  *a1 = *a2;
  uint64_t v5 = *(void *)(a3[4] - 8);
  uint64_t v6 = v5 + 24;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = (unint64_t)&a1[v7 + 1] & ~v7;
  uint64_t v9 = (unint64_t)&a2[v7 + 1] & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v5 + 24))(v8, v9);
  uint64_t v10 = *(void *)(v6 + 40);
  uint64_t v11 = *(void *)(a3[2] - 8);
  uint64_t v12 = v11 + 24;
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = v10 + v13;
  uint64_t v15 = (v14 + v8) & ~v13;
  uint64_t v16 = (v14 + v9) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v11 + 24))(v15, v16);
  uint64_t v17 = *(void *)(v12 + 40);
  uint64_t v18 = *(void *)(a3[3] - 8);
  uint64_t v19 = v18 + 24;
  uint64_t v20 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v21 = v17 + v20;
  uint64_t v22 = (v21 + v15) & ~v20;
  uint64_t v23 = (v21 + v16) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v18 + 24))(v22, v23);
  uint64_t v24 = *(void *)(v19 + 40) + 7;
  uint64_t v25 = (void *)((v24 + v22) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v26 = (void *)((v24 + v23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v25 = *v26;
  v25[1] = v26[1];
  swift_retain();
  swift_release();
  uint64_t v27 = (void *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v28 = (void *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v27 = *v28;
  v27[1] = v28[1];
  swift_retain();
  swift_release();
  return a1;
}

unsigned char *sub_25605C0D0(unsigned char *a1, unsigned char *a2, void *a3)
{
  *a1 = *a2;
  uint64_t v5 = *(void *)(a3[4] - 8);
  uint64_t v6 = v5 + 32;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = (unint64_t)&a1[v7 + 1] & ~v7;
  uint64_t v9 = (unint64_t)&a2[v7 + 1] & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(v8, v9);
  uint64_t v10 = *(void *)(v6 + 32);
  uint64_t v11 = *(void *)(a3[2] - 8);
  uint64_t v12 = v11 + 32;
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = v10 + v13;
  uint64_t v15 = (v14 + v8) & ~v13;
  uint64_t v16 = (v14 + v9) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v11 + 32))(v15, v16);
  uint64_t v17 = *(void *)(v12 + 32);
  uint64_t v18 = *(void *)(a3[3] - 8);
  uint64_t v19 = v18 + 32;
  uint64_t v20 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v21 = v17 + v20;
  uint64_t v22 = (v21 + v15) & ~v20;
  uint64_t v23 = (v21 + v16) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v18 + 32))(v22, v23);
  uint64_t v24 = *(void *)(v19 + 32) + 7;
  uint64_t v25 = (_OWORD *)((v24 + v22) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v26 = (_OWORD *)((v24 + v23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v25 = *v26;
  *(_OWORD *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

unsigned char *sub_25605C22C(unsigned char *a1, unsigned char *a2, void *a3)
{
  *a1 = *a2;
  uint64_t v5 = *(void *)(a3[4] - 8);
  uint64_t v6 = v5 + 40;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = (unint64_t)&a1[v7 + 1] & ~v7;
  uint64_t v9 = (unint64_t)&a2[v7 + 1] & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v5 + 40))(v8, v9);
  uint64_t v10 = *(void *)(v6 + 24);
  uint64_t v11 = *(void *)(a3[2] - 8);
  uint64_t v12 = v11 + 40;
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = v10 + v13;
  uint64_t v15 = (v14 + v8) & ~v13;
  uint64_t v16 = (v14 + v9) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v11 + 40))(v15, v16);
  uint64_t v17 = *(void *)(v12 + 24);
  uint64_t v18 = *(void *)(a3[3] - 8);
  uint64_t v19 = v18 + 40;
  uint64_t v20 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v21 = v17 + v20;
  uint64_t v22 = (v21 + v15) & ~v20;
  uint64_t v23 = (v21 + v16) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v18 + 40))(v22, v23);
  uint64_t v24 = *(void *)(v19 + 24) + 7;
  uint64_t v25 = (void *)((v24 + v22) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v26 = (void *)((v24 + v23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v25 = *v26;
  v25[1] = v26[1];
  swift_release();
  uint64_t v27 = (void *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v28 = (void *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v27 = *v28;
  v27[1] = v28[1];
  swift_release();
  return a1;
}

uint64_t sub_25605C3B0(_DWORD *a1, unsigned int a2, void *a3)
{
  uint64_t v5 = *(void *)(a3[4] - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  uint64_t v7 = *(void *)(a3[2] - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  if (v6 <= v8) {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v9 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v10 = a3[3];
  uint64_t v11 = *(void *)(v10 - 8);
  unsigned int v12 = *(_DWORD *)(v11 + 84);
  uint64_t v13 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = *(void *)(*(void *)(a3[4] - 8) + 64);
  uint64_t v15 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v16 = *(unsigned __int8 *)(v11 + 80);
  if (v9 <= v12) {
    unsigned int v17 = *(_DWORD *)(v11 + 84);
  }
  else {
    unsigned int v17 = v9;
  }
  if (v17 <= 0x7FFFFFFE) {
    unsigned int v17 = 2147483646;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v18 = *(void *)(*(void *)(a3[2] - 8) + 64) + v16;
  uint64_t v19 = *(void *)(*(void *)(v10 - 8) + 64) + 7;
  if (v17 < a2)
  {
    unint64_t v20 = ((((v19 + ((v18 + ((v14 + v15 + ((v13 + 1) & ~v13)) & ~v15)) & ~v16)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    if ((v20 & 0xFFFFFFF8) != 0) {
      unsigned int v21 = 2;
    }
    else {
      unsigned int v21 = a2 - v17 + 1;
    }
    if (v21 >= 0x10000) {
      unsigned int v22 = 4;
    }
    else {
      unsigned int v22 = 2;
    }
    if (v21 < 0x100) {
      unsigned int v22 = 1;
    }
    if (v21 >= 2) {
      uint64_t v23 = v22;
    }
    else {
      uint64_t v23 = 0;
    }
    switch(v23)
    {
      case 1:
        int v24 = *((unsigned __int8 *)a1 + v20);
        if (!*((unsigned char *)a1 + v20)) {
          break;
        }
        goto LABEL_27;
      case 2:
        int v24 = *(unsigned __int16 *)((char *)a1 + v20);
        if (*(_WORD *)((char *)a1 + v20)) {
          goto LABEL_27;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x25605C6A0);
      case 4:
        int v24 = *(_DWORD *)((char *)a1 + v20);
        if (!v24) {
          break;
        }
LABEL_27:
        int v26 = v24 - 1;
        if ((v20 & 0xFFFFFFF8) != 0)
        {
          int v26 = 0;
          int v27 = *a1;
        }
        else
        {
          int v27 = 0;
        }
        int v35 = v17 + (v27 | v26);
        return (v35 + 1);
      default:
        break;
    }
  }
  uint64_t v28 = ((unint64_t)a1 + v13 + 1) & ~v13;
  if (v6 == v17)
  {
    uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    uint64_t v30 = *(unsigned int *)(v5 + 84);
    uint64_t v31 = a3[4];
    return v29(v28, v30, v31);
  }
  uint64_t v32 = (v28 + v14 + v15) & ~v15;
  if (v8 == v17)
  {
    uint64_t v33 = *(uint64_t (**)(uint64_t))(v7 + 48);
    return v33(v32);
  }
  else
  {
    uint64_t v28 = (v18 + v32) & ~v16;
    if (v12 == v17)
    {
      uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
      uint64_t v30 = *(unsigned int *)(v11 + 84);
      uint64_t v31 = a3[3];
      return v29(v28, v30, v31);
    }
    unint64_t v34 = *(void *)(((v19 + v28) & 0xFFFFFFFFFFFFFFF8) + 8);
    if (v34 >= 0xFFFFFFFF) {
      LODWORD(v34) = -1;
    }
    int v35 = v34 - 1;
    if (v35 < 0) {
      int v35 = -1;
    }
    return (v35 + 1);
  }
}

void sub_25605C6B4(char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v6 = *(void *)(a4[4] - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = a4[2];
  uint64_t v9 = a4[3];
  uint64_t v10 = *(void *)(v8 - 8);
  unsigned int v11 = *(_DWORD *)(v10 + 84);
  if (v7 <= v11) {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v13 = *(void *)(v9 - 8);
  unsigned int v14 = *(_DWORD *)(v13 + 84);
  uint64_t v15 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v16 = *(void *)(*(void *)(a4[4] - 8) + 64);
  uint64_t v17 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v18 = *(void *)(*(void *)(v8 - 8) + 64);
  uint64_t v19 = *(unsigned __int8 *)(v13 + 80);
  if (v12 <= v14) {
    unsigned int v20 = *(_DWORD *)(v13 + 84);
  }
  else {
    unsigned int v20 = v12;
  }
  if (v20 <= 0x7FFFFFFE) {
    unsigned int v20 = 2147483646;
  }
  uint64_t v21 = v18 + v19;
  uint64_t v22 = *(void *)(*(void *)(v9 - 8) + 64) + 7;
  size_t v23 = ((((v22 + ((v18 + v19 + ((v16 + v17 + ((v15 + 1) & ~v15)) & ~v17)) & ~v19)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v20 >= a3)
  {
    int v27 = 0;
    int v28 = a2 - v20;
    if (a2 <= v20) {
      goto LABEL_22;
    }
LABEL_26:
    if (v23) {
      int v29 = 1;
    }
    else {
      int v29 = v28;
    }
    if (v23)
    {
      unsigned int v30 = ~v20 + a2;
      bzero(a1, v23);
      *(_DWORD *)a1 = v30;
    }
    switch(v27)
    {
      case 1:
        a1[v23] = v29;
        break;
      case 2:
        *(_WORD *)&a1[v23] = v29;
        break;
      case 3:
LABEL_55:
        __break(1u);
        JUMPOUT(0x25605CA40);
      case 4:
        *(_DWORD *)&a1[v23] = v29;
        break;
      default:
        return;
    }
    return;
  }
  unsigned int v24 = a3 - v20;
  if (v23) {
    unsigned int v25 = 2;
  }
  else {
    unsigned int v25 = v24 + 1;
  }
  if (v25 >= 0x10000) {
    int v26 = 4;
  }
  else {
    int v26 = 2;
  }
  if (v25 < 0x100) {
    int v26 = 1;
  }
  if (v25 >= 2) {
    int v27 = v26;
  }
  else {
    int v27 = 0;
  }
  int v28 = a2 - v20;
  if (a2 > v20) {
    goto LABEL_26;
  }
LABEL_22:
  switch(v27)
  {
    case 1:
      a1[v23] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 2:
      *(_WORD *)&a1[v23] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 3:
      goto LABEL_55;
    case 4:
      *(_DWORD *)&a1[v23] = 0;
      goto LABEL_34;
    default:
LABEL_34:
      if (!a2) {
        return;
      }
LABEL_35:
      unint64_t v31 = (unint64_t)&a1[v15 + 1] & ~v15;
      if (v7 == v20)
      {
        uint64_t v32 = *(void (**)(unint64_t))(v6 + 56);
LABEL_38:
        v32(v31);
        return;
      }
      unint64_t v33 = (v31 + v16 + v17) & ~v17;
      if (v11 == v20)
      {
        unint64_t v34 = *(void (**)(unint64_t))(v10 + 56);
        v34(v33);
      }
      else
      {
        unint64_t v31 = (v21 + v33) & ~v19;
        if (v14 == v20)
        {
          uint64_t v32 = *(void (**)(unint64_t))(v13 + 56);
          goto LABEL_38;
        }
        int v35 = (void *)((v22 + v31) & 0xFFFFFFFFFFFFFFF8);
        if (a2 > 0x7FFFFFFE)
        {
          *int v35 = a2 - 0x7FFFFFFF;
          v35[1] = 0;
        }
        else
        {
          v35[1] = a2;
        }
      }
      break;
  }
}

uint64_t type metadata accessor for ScrollableWithPinnedFooter()
{
  return swift_getGenericMetadata();
}

uint64_t sub_25605CA80()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25605CAD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

uint64_t sub_25605CB08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_256178448();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a2, a1, v4);
}

double sub_25605CB74@<D0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, double a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, unsigned char *a8@<X8>, uint64_t a9, uint64_t a10)
{
  int v22 = a1;
  uint64_t v21 = a8;
  MEMORY[0x270FA5388](a1);
  uint64_t v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v19 + 16))(v18);
  double v31 = a4;
  uint64_t v32 = a5;
  uint64_t v33 = a6;
  uint64_t v34 = a7;
  uint64_t v35 = a9;
  uint64_t v36 = a10;
  uint64_t v37 = v10;
  double v23 = a4;
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  uint64_t v26 = a7;
  uint64_t v27 = a9;
  uint64_t v28 = a10;
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  return sub_25605CF0C(v22, (uint64_t)v18, (uint64_t (*)(uint64_t))sub_25605EA68, (void (*)(uint64_t))sub_25605EA9C, a4, a5, v21, a6);
}

uint64_t sub_25605CCD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  unsigned int v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void (**)(char *))(v5 + 16);
  v8(v7);
  ((void (*)(uint64_t, char *, uint64_t))v8)(a3, v7, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, a2);
}

uint64_t sub_25605CDCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, char *a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (void (*)(void))MEMORY[0x270FA5388](v6);
  unsigned int v11 = (char *)&v15 - v10;
  v9();
  unsigned int v12 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v12(v11, v8, a2);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v8, a2);
  v12(a3, v11, a2);
  return ((uint64_t (*)(char *, uint64_t))v13)(v11, a2);
}

double sub_25605CF0C@<D0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t)@<X2>, void (*a4)(uint64_t)@<X4>, double a5@<X6>, uint64_t a6@<X7>, unsigned char *a7@<X8>, uint64_t a8)
{
  *a7 = a1;
  unsigned int v12 = (int *)type metadata accessor for ScrollableWithPinnedFooter();
  uint64_t v13 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(&a7[v12[17]], a2, a8);
  uint64_t v14 = a3(v13);
  a4(v14);
  uint64_t v15 = (double *)&a7[v12[20]];
  sub_256177568();
  *uint64_t v15 = a5;
  *((void *)v15 + 1) = a6;
  uint64_t v16 = (double *)&a7[v12[21]];
  sub_256177568();
  double result = a5;
  *uint64_t v16 = a5;
  *((void *)v16 + 1) = a6;
  return result;
}

uint64_t sub_25605D04C@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v69 = a2;
  uint64_t v65 = *(a1 - 1);
  uint64_t v66 = *(void *)(v65 + 64);
  uint64_t v3 = MEMORY[0x270FA5388](a1);
  uint64_t v64 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = *(void *)(v3 + 16);
  sub_25605E4C4();
  uint64_t v5 = sub_2561761B8();
  uint64_t v73 = a1[5];
  uint64_t v6 = v73;
  unint64_t v68 = sub_255FDAA58();
  uint64_t v99 = v6;
  unint64_t v100 = v68;
  uint64_t v50 = MEMORY[0x263F18E48];
  uint64_t v52 = v5;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = sub_256175D58();
  uint64_t v58 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v49 = (char *)&v46 - v8;
  sub_25605E520(255, &qword_269F455D0, MEMORY[0x263F8D310], MEMORY[0x263F8D320], MEMORY[0x263F1A170]);
  uint64_t v60 = sub_2561761B8();
  uint64_t v63 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v72 = (char *)&v46 - v9;
  uint64_t v54 = sub_2561761B8();
  uint64_t v67 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v57 = (char *)&v46 - v10;
  uint64_t v11 = a1[3];
  sub_25605E520(255, &qword_269F455D8, MEMORY[0x263F188A8], MEMORY[0x263F18898], MEMORY[0x263F1A158]);
  sub_2561761B8();
  uint64_t v12 = sub_256178448();
  uint64_t v13 = a1[6];
  unint64_t v14 = sub_25605E570();
  uint64_t v97 = v13;
  unint64_t v98 = v14;
  uint64_t v70 = v13;
  uint64_t v96 = swift_getWitnessTable();
  uint64_t v59 = v12;
  uint64_t v55 = swift_getWitnessTable();
  uint64_t v61 = sub_256176708();
  uint64_t v48 = sub_2561761B8();
  uint64_t v62 = *(void *)(v48 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v48);
  uint64_t v53 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v56 = (char *)&v46 - v17;
  uint64_t v18 = v74;
  uint64_t v19 = v75;
  uint64_t v83 = v74;
  uint64_t v84 = v11;
  uint64_t v47 = a1[4];
  uint64_t v85 = v47;
  uint64_t v86 = v73;
  uint64_t v71 = a1[7];
  uint64_t v87 = v13;
  uint64_t v88 = v71;
  uint64_t v89 = v75;
  sub_256176D68();
  unsigned int v20 = v49;
  sub_256175D68();
  uint64_t v21 = v18;
  uint64_t v101 = sub_256178978();
  uint64_t v102 = v22;
  sub_256177F68();
  uint64_t v23 = swift_getWitnessTable();
  sub_256177118();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v20, v7);
  uint64_t v25 = v64;
  uint64_t v24 = v65;
  (*(void (**)(char *, uint64_t, void *))(v65 + 16))(v64, v19, a1);
  unint64_t v26 = (*(unsigned __int8 *)(v24 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  uint64_t v27 = (char *)swift_allocObject();
  *((void *)v27 + 2) = v21;
  *((void *)v27 + 3) = v11;
  uint64_t v28 = v47;
  uint64_t v29 = v73;
  *((void *)v27 + 4) = v47;
  *((void *)v27 + 5) = v29;
  uint64_t v30 = v71;
  *((void *)v27 + 6) = v70;
  *((void *)v27 + 7) = v30;
  (*(void (**)(char *, char *, void *))(v24 + 32))(&v27[v26], v25, a1);
  unint64_t v31 = sub_25605E628();
  uint64_t v94 = v23;
  unint64_t v95 = v31;
  uint64_t v32 = v60;
  uint64_t v33 = swift_getWitnessTable();
  sub_255F85944();
  uint64_t v34 = v57;
  uint64_t v35 = v72;
  sub_256177178();
  swift_release();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v35, v32);
  uint64_t v76 = v74;
  uint64_t v77 = v11;
  uint64_t v78 = v28;
  uint64_t v79 = v29;
  uint64_t v80 = v70;
  uint64_t v81 = v71;
  uint64_t v82 = v75;
  sub_256176788();
  uint64_t v92 = v33;
  unint64_t v93 = v68;
  uint64_t v36 = v54;
  uint64_t v45 = swift_getWitnessTable();
  uint64_t v37 = v53;
  sub_2561770F8();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v34, v36);
  uint64_t v38 = swift_getWitnessTable();
  uint64_t v90 = v45;
  uint64_t v91 = v38;
  uint64_t v39 = v48;
  swift_getWitnessTable();
  uint64_t v40 = v62;
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v62 + 16);
  uint64_t v42 = v56;
  v41(v56, v37, v39);
  uint64_t v43 = *(void (**)(char *, uint64_t))(v40 + 8);
  v43(v37, v39);
  v41(v69, v42, v39);
  return ((uint64_t (*)(char *, uint64_t))v43)(v42, v39);
}

uint64_t sub_25605D81C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X8>)
{
  uint64_t v59 = a3;
  uint64_t v60 = a7;
  uint64_t v57 = a5;
  uint64_t v66 = a4;
  uint64_t v64 = a8;
  uint64_t v69 = a2;
  uint64_t v70 = a3;
  uint64_t v71 = a4;
  uint64_t v72 = a5;
  uint64_t v73 = a6;
  uint64_t v74 = a7;
  uint64_t v52 = a6;
  uint64_t v11 = type metadata accessor for ScrollableWithPinnedFooter();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v48 - v15;
  uint64_t v65 = (char *)&v48 - v15;
  uint64_t v58 = *(void *)(a2 - 8);
  uint64_t v17 = v58;
  MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = v19;
  sub_25605E4C4();
  uint64_t v20 = sub_2561761B8();
  uint64_t v62 = *(void *)(v20 - 8);
  uint64_t v63 = v20;
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v56 = (char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v61 = (char *)&v48 - v23;
  uint64_t v24 = *(int *)(v11 + 72);
  uint64_t v54 = a1;
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v49 = a2;
  v25(v19, a1 + v24, a2);
  uint64_t v26 = v12;
  uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v27 = v11;
  v53(v16, a1, v11);
  uint64_t v28 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v29 = (v28 + 64) & ~v28;
  uint64_t v51 = v29 + v13;
  uint64_t v50 = v28 | 7;
  uint64_t v30 = (char *)swift_allocObject();
  uint64_t v31 = v59;
  *((void *)v30 + 2) = a2;
  *((void *)v30 + 3) = v31;
  uint64_t v32 = v65;
  uint64_t v33 = v57;
  *((void *)v30 + 4) = v66;
  *((void *)v30 + 5) = v33;
  uint64_t v34 = v60;
  *((void *)v30 + 6) = a6;
  *((void *)v30 + 7) = v34;
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
  uint64_t v48 = v27;
  v35(&v30[v29], v32, v27);
  v53(v32, v54, v27);
  uint64_t v36 = (char *)swift_allocObject();
  uint64_t v37 = v49;
  *((void *)v36 + 2) = v49;
  *((void *)v36 + 3) = v31;
  uint64_t v38 = v65;
  *((void *)v36 + 4) = v66;
  *((void *)v36 + 5) = v33;
  *((void *)v36 + 6) = v52;
  *((void *)v36 + 7) = v34;
  v35(&v36[v29], v38, v48);
  sub_255F85944();
  uint64_t v39 = v55;
  uint64_t v40 = v56;
  sub_256177178();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v39, v37);
  unint64_t v41 = sub_255FDAA58();
  uint64_t v67 = v33;
  unint64_t v68 = v41;
  uint64_t v42 = v63;
  swift_getWitnessTable();
  uint64_t v44 = v61;
  uint64_t v43 = v62;
  uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v62 + 16);
  v45(v61, v40, v42);
  uint64_t v46 = *(void (**)(char *, uint64_t))(v43 + 8);
  v46(v40, v42);
  v45(v64, v44, v42);
  return ((uint64_t (*)(char *, uint64_t))v46)(v44, v42);
}

void sub_25605DC90(CGFloat *a1@<X8>)
{
  uint64_t v2 = sub_2561768E8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = sub_256178978();
  v15[1] = v6;
  sub_256177F68();
  sub_256176AC8();
  swift_bridgeObjectRelease();
  sub_256175FB8();
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  CGFloat v14 = v13;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v16.origin.x = v8;
  v16.origin.y = v10;
  v16.size.width = v12;
  v16.size.height = v14;
  *a1 = CGRectGetMaxY(v16);
}

uint64_t sub_25605DE10()
{
  return sub_256177588();
}

uint64_t sub_25605DE8C()
{
  return sub_256177588();
}

uint64_t sub_25605DF08@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X8>)
{
  uint64_t v36 = a5;
  uint64_t v37 = a7;
  uint64_t v35 = a4;
  uint64_t v39 = a8;
  sub_25605E520(255, &qword_269F455D8, MEMORY[0x263F188A8], MEMORY[0x263F18898], MEMORY[0x263F1A158]);
  uint64_t v12 = sub_2561761B8();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  CGRect v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v35 - v17;
  uint64_t v38 = sub_256178448();
  uint64_t v19 = *(void *)(v38 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v38);
  uint64_t v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v40 = (char *)&v35 - v23;
  if (*a1 == 1)
  {
    uint64_t v43 = a2;
    uint64_t v44 = a3;
    uint64_t v45 = v35;
    uint64_t v46 = v36;
    uint64_t v47 = a6;
    uint64_t v48 = v37;
    uint64_t v24 = type metadata accessor for ScrollableWithPinnedFooter();
    uint64_t v43 = sub_25605E31C(v24);
    sub_256176D88();
    sub_256177058();
    swift_release();
    unint64_t v25 = sub_25605E570();
    uint64_t v41 = a6;
    unint64_t v42 = v25;
    swift_getWitnessTable();
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    v26(v18, v16, v12);
    uint64_t v37 = a6;
    uint64_t v27 = *(void (**)(char *, uint64_t))(v13 + 8);
    v27(v16, v12);
    v26(v22, v18, v12);
    v27(v18, v12);
    a6 = v37;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v22, 0, 1, v12);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v22, 1, 1, v12);
    unint64_t v28 = sub_25605E570();
    uint64_t v52 = a6;
    unint64_t v53 = v28;
    swift_getWitnessTable();
  }
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  uint64_t v30 = v38;
  v29(v40, v22, v38);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v19 + 8);
  v31(v22, v30);
  unint64_t v32 = sub_25605E570();
  uint64_t v50 = a6;
  unint64_t v51 = v32;
  uint64_t WitnessTable = swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v33 = v40;
  v29(v39, v40, v30);
  return ((uint64_t (*)(char *, uint64_t))v31)(v33, v30);
}

uint64_t sub_25605E31C(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_25605E41C()) {
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v1 + *(int *)(a1 + 68), v3);
  }
  else {
    v8[1] = sub_256177478();
  }
  return sub_256175F48();
}

uint64_t sub_25605E41C()
{
  return 0;
}

void sub_25605E4C4()
{
  if (!qword_269F43F08)
  {
    sub_255F85944();
    unint64_t v0 = sub_256176B18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43F08);
    }
  }
}

void sub_25605E520(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_25605E570()
{
  unint64_t result = qword_269F455E0;
  if (!qword_269F455E0)
  {
    sub_25605E520(255, &qword_269F455D8, MEMORY[0x263F188A8], MEMORY[0x263F18898], MEMORY[0x263F1A158]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F455E0);
  }
  return result;
}

uint64_t sub_25605E5F4()
{
  return sub_25605EA80((uint64_t (*)(void, void, void, void, void, void, void))sub_25605D81C);
}

uint64_t sub_25605E610(uint64_t a1)
{
  return sub_25605E998(a1, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_25605DE8C);
}

unint64_t sub_25605E628()
{
  unint64_t result = qword_269F455E8;
  if (!qword_269F455E8)
  {
    sub_25605E520(255, &qword_269F455D0, MEMORY[0x263F8D310], MEMORY[0x263F8D320], MEMORY[0x263F1A170]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F455E8);
  }
  return result;
}

uint64_t sub_25605E6AC()
{
  return sub_25605EA80((uint64_t (*)(void, void, void, void, void, void, void))sub_25605DF08);
}

void sub_25605E6C4()
{
  if (!qword_269F455F0)
  {
    unint64_t v0 = sub_2561775A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F455F0);
    }
  }
}

void sub_25605E720(CGFloat *a1@<X8>)
{
  type metadata accessor for ScrollableWithPinnedFooter();

  sub_25605DC90(a1);
}

uint64_t objectdestroyTm_12()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  long long v7 = *(_OWORD *)(v0 + 32);
  uint64_t v3 = type metadata accessor for ScrollableWithPinnedFooter();
  uint64_t v4 = v3 - 8;
  uint64_t v5 = v0
     + ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));
  (*(void (**)(uint64_t))(*(void *)(v7 - 8) + 8))(v5 + *(int *)(v3 + 68));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v5 + *(int *)(v4 + 80), v2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v5 + *(int *)(v4 + 84), v1);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_25605E980(uint64_t a1)
{
  return sub_25605E998(a1, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_25605DE10);
}

uint64_t sub_25605E998(uint64_t a1, uint64_t (*a2)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = v2[2];
  uint64_t v5 = v2[3];
  uint64_t v6 = v2[4];
  uint64_t v7 = v2[5];
  uint64_t v8 = v2[6];
  uint64_t v9 = v2[7];
  uint64_t v10 = *(void *)(type metadata accessor for ScrollableWithPinnedFooter() - 8);
  double v11 = (char *)v2 + ((*(unsigned __int8 *)(v10 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));

  return a2(a1, v11, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_25605EA68()
{
  return sub_25605EA80((uint64_t (*)(void, void, void, void, void, void, void))sub_25605CCD8);
}

uint64_t sub_25605EA80(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  return a1(v1[8], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t sub_25605EA9C@<X0>(char *a1@<X8>)
{
  return sub_25605CDCC(*(void *)(v1 + 64), *(void *)(v1 + 24), a1);
}

uint64_t sub_25605EAB0()
{
  return swift_getWitnessTable();
}

BOOL static StateOfMindEntryPresentationStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t StateOfMindEntryPresentationStyle.hash(into:)()
{
  return sub_2561788F8();
}

uint64_t StateOfMindEntryPresentationStyle.hashValue.getter()
{
  return sub_256178928();
}

unint64_t sub_25605ED80()
{
  unint64_t result = qword_269F455F8;
  if (!qword_269F455F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F455F8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StateOfMindEntryPresentationStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25605EEA0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindEntryPresentationStyle()
{
  return &type metadata for StateOfMindEntryPresentationStyle;
}

void *sub_25605EED8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *int v3 = *a2;
    int v3 = (void *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (uint64_t *)((char *)a2 + v6);
    sub_25605F158(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_256176AA8();
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        sub_25605F158(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      uint64_t v13 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
      uint64_t v14 = (char *)v7 + v13;
      uint64_t v15 = (char *)v8 + v13;
      uint64_t v16 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

void sub_25605F158(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_25605F1BC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  sub_25605F158(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_256176AA8();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
    uint64_t v7 = v4 + *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    uint64_t v8 = sub_256176158();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v9(v7, v8);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_25605F344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (void *)(a2 + v5);
  sub_25605F158(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_256176AA8();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      sub_25605F158(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
    uint64_t v11 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    uint64_t v12 = (char *)v6 + v11;
    uint64_t v13 = (char *)v7 + v11;
    uint64_t v14 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    *uint64_t v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_25605F56C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (void *)(a2 + v6);
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25606187C(a1 + v6, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    sub_25605F158(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, v9);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_256176AA8();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        sub_25605F158(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v7, v8, v10);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      uint64_t v13 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
      uint64_t v14 = (char *)v7 + v13;
      uint64_t v15 = (char *)v8 + v13;
      uint64_t v16 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_25605F7D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)(a1 + v4);
  uint64_t v6 = (char *)(a2 + v4);
  sub_25605F158(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  uint64_t v8 = v7;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_256176AA8();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9))
    {
      sub_25605F158(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v5, v6, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v5, v6, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
    }
    uint64_t v12 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    uint64_t v13 = &v5[v12];
    uint64_t v14 = &v6[v12];
    uint64_t v15 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_25605FA04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)(a1 + v7);
    uint64_t v9 = (char *)(a2 + v7);
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25606187C(a1 + v7, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    sub_25605F158(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, v10);
    uint64_t v12 = v11;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_256176AA8();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13))
      {
        sub_25605F158(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v8, v9, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
      }
      uint64_t v16 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
      uint64_t v17 = &v8[v16];
      uint64_t v18 = &v9[v16];
      uint64_t v19 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_25605FC6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25605FC80);
}

uint64_t sub_25605FC80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_25605F158(0, &qword_269F444B8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_25605FD60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25605FD74);
}

uint64_t sub_25605FD74(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_25605F158(0, &qword_269F444B8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ValenceSelectionTitleText()
{
  uint64_t result = qword_269F45600;
  if (!qword_269F45600) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_25605FE98()
{
  sub_25605F158(319, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_25605FF68()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25605FF88()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_256176AA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v31 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FD821C();
  uint64_t v6 = v5 - 8;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25605F158(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v30 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v30 - v16;
  sub_255FD82D8(v1, (uint64_t)&v30 - v16);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v15, *MEMORY[0x263F19F08], v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v15, 0, 1, v2);
  uint64_t v18 = (uint64_t)&v8[*(int *)(v6 + 56)];
  sub_255FD82D8((uint64_t)v17, (uint64_t)v8);
  sub_255FD82D8((uint64_t)v15, v18);
  uint64_t v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v19((uint64_t)v8, 1, v2) != 1)
  {
    sub_255FD82D8((uint64_t)v8, (uint64_t)v12);
    if (v19(v18, 1, v2) != 1)
    {
      unint64_t v25 = v31;
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v31, v18, v2);
      sub_2560611C0(qword_269F43E70, MEMORY[0x263F19F18]);
      char v22 = sub_256177E98();
      uint64_t v26 = *(void (**)(char *, uint64_t))(v3 + 8);
      v26(v25, v2);
      uint64_t v27 = (uint64_t (*)(uint64_t))MEMORY[0x263F19F18];
      unint64_t v28 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
      sub_25606187C((uint64_t)v15, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      sub_25606187C((uint64_t)v17, (unint64_t *)&qword_269F42AE0, v27, v28);
      v26(v12, v2);
      sub_25606187C((uint64_t)v8, (unint64_t *)&qword_269F42AE0, v27, v28);
      return v22 & 1;
    }
    uint64_t v23 = (uint64_t (*)(uint64_t))MEMORY[0x263F19F18];
    uint64_t v24 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
    sub_25606187C((uint64_t)v15, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
    sub_25606187C((uint64_t)v17, (unint64_t *)&qword_269F42AE0, v23, v24);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v2);
    goto LABEL_6;
  }
  uint64_t v20 = (uint64_t (*)(uint64_t))MEMORY[0x263F19F18];
  uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_25606187C((uint64_t)v15, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
  sub_25606187C((uint64_t)v17, (unint64_t *)&qword_269F42AE0, v20, v21);
  if (v19(v18, 1, v2) != 1)
  {
LABEL_6:
    sub_2560615CC((uint64_t)v8, (uint64_t (*)(void))sub_255FD821C);
    char v22 = 0;
    return v22 & 1;
  }
  sub_25606187C((uint64_t)v8, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
  char v22 = 1;
  return v22 & 1;
}

uint64_t sub_256060470(char a1)
{
  uint64_t v2 = sub_256176EE8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v23 - v8;
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v23 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v23 - v13;
  uint64_t v15 = (void (**)(char *, void, uint64_t))(v3 + 104);
  uint64_t v16 = (void (**)(char *, char *, uint64_t))(v3 + 32);
  if (a1)
  {
    sub_256176EC8();
    type metadata accessor for ValenceSelectionPhaseSpecs();
    char v17 = sub_256176138();
    uint64_t v18 = (unsigned int *)MEMORY[0x263F1A680];
    if ((v17 & 1) == 0) {
      uint64_t v18 = (unsigned int *)MEMORY[0x263F1A688];
    }
    (*v15)(v12, *v18, v2);
    (*v16)(v14, v12, v2);
    uint64_t v19 = sub_256176F08();
  }
  else
  {
    sub_256176E48();
    type metadata accessor for ValenceSelectionPhaseSpecs();
    char v20 = sub_256176138();
    uint64_t v21 = (unsigned int *)MEMORY[0x263F1A680];
    if ((v20 & 1) == 0) {
      uint64_t v21 = (unsigned int *)MEMORY[0x263F1A688];
    }
    (*v15)(v6, *v21, v2);
    (*v16)(v9, v6, v2);
    uint64_t v19 = sub_256176F08();
    uint64_t v14 = v9;
  }
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v14, v2);
  return v19;
}

uint64_t sub_2560606BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v95 = a1;
  uint64_t v2 = type metadata accessor for LoggingFlowBlendMode();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v88 = (uint64_t *)((char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v100 = sub_256176158();
  uint64_t v94 = *(void *)(v100 - 8);
  MEMORY[0x270FA5388](v100);
  uint64_t v99 = (char *)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F89A5C();
  uint64_t v81 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v79 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = type metadata accessor for ValenceSelectionPhaseSpecs();
  uint64_t v7 = MEMORY[0x270FA5388](v75);
  uint64_t v89 = (uint64_t)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v75 - v9;
  sub_255F89AF0();
  uint64_t v83 = v11;
  uint64_t v80 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v77 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256061208(0);
  uint64_t v76 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v85 = (char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560612D0(0);
  uint64_t v78 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v86 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256061378();
  uint64_t v82 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v87 = (uint64_t)&v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560613D8(0);
  uint64_t v84 = v19;
  MEMORY[0x270FA5388](v19);
  uint64_t v101 = (uint64_t)&v75 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560614A0(0);
  uint64_t v90 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v93 = (uint64_t)&v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256061550(0);
  uint64_t v91 = v23;
  MEMORY[0x270FA5388](v23);
  uint64_t v92 = (uint64_t)&v75 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v25 = v1;
  uint64_t v26 = *v1;
  uint64_t v27 = v1[1];
  unint64_t v28 = v25;
  uint64_t v102 = v26;
  uint64_t v103 = v27;
  sub_255F5CE90();
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_256177028();
  uint64_t v31 = v30;
  char v33 = v32 & 1;
  type metadata accessor for ValenceSelectionTitleText();
  unint64_t v98 = v28;
  uint64_t v96 = v10;
  sub_25611BB38((uint64_t)v10);
  sub_256060470(*((unsigned char *)v28 + 16));
  uint64_t v97 = type metadata accessor for ValenceSelectionPhaseSpecs;
  sub_2560615CC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhaseSpecs);
  uint64_t v34 = sub_256176FD8();
  uint64_t v36 = v35;
  LOBYTE(v28) = v37;
  swift_release();
  LOBYTE(v27) = v28 & 1;
  uint64_t v38 = v31;
  uint64_t v39 = (uint64_t)v99;
  sub_255F67B2C(v29, v38, v33);
  swift_bridgeObjectRelease();
  uint64_t v40 = sub_256176FC8();
  uint64_t v42 = v41;
  LOBYTE(v28) = v43;
  uint64_t v45 = v44;
  sub_255F67B2C(v34, v36, v27);
  uint64_t v46 = v100;
  swift_bridgeObjectRelease();
  uint64_t v102 = v40;
  uint64_t v103 = v42;
  char v104 = v28 & 1;
  uint64_t v105 = v45;
  uint64_t v47 = (uint64_t)v96;
  sub_25611BB38((uint64_t)v96);
  sub_25601832C(*((unsigned char *)v98 + 16), v39);
  sub_2560615CC(v47, (uint64_t (*)(void))v97);
  sub_2560611C0(&qword_269F433E0, MEMORY[0x263F18D80]);
  uint64_t result = sub_256177E98();
  if (result)
  {
    uint64_t v49 = v94;
    uint64_t v50 = (uint64_t)v79;
    (*(void (**)(char *, uint64_t, uint64_t))(v94 + 32))(v79, v39, v46);
    sub_2560611C0((unint64_t *)&qword_269F43368, (void (*)(uint64_t))sub_255F89A5C);
    unint64_t v51 = v77;
    sub_256177138();
    sub_2560615CC(v50, (uint64_t (*)(void))sub_255F89A5C);
    sub_255F67B2C(v102, v103, v104);
    swift_bridgeObjectRelease();
    LODWORD(v50) = sub_256176A48();
    uint64_t v52 = v80;
    uint64_t v53 = (uint64_t)v85;
    uint64_t v54 = v83;
    (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v85, v51, v83);
    uint64_t v55 = (_DWORD *)(v53 + *(int *)(v76 + 36));
    *uint64_t v55 = v50;
    v55[1] = 1058642330;
    (*(void (**)(char *, uint64_t))(v52 + 8))(v51, v54);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v57 = (uint64_t)v88;
    *uint64_t v88 = KeyPath;
    sub_25605F158(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    swift_storeEnumTagMultiPayload();
    uint64_t v58 = (uint64_t)v86;
    sub_256061634(v57, (uint64_t)&v86[*(int *)(v78 + 36)], (uint64_t (*)(void))type metadata accessor for LoggingFlowBlendMode);
    sub_256061634(v53, v58, (uint64_t (*)(void))sub_256061208);
    uint64_t v59 = v87;
    sub_2560616A4(v58, v87, (uint64_t (*)(void))sub_2560612D0);
    *(_WORD *)(v59 + *(int *)(v82 + 36)) = 256;
    sub_2560615CC(v58, (uint64_t (*)(void))sub_2560612D0);
    uint64_t v60 = swift_getKeyPath();
    uint64_t v61 = v101;
    sub_2560616A4(v59, v101, (uint64_t (*)(void))sub_256061378);
    uint64_t v62 = v61 + *(int *)(v84 + 36);
    *(void *)uint64_t v62 = v60;
    *(unsigned char *)(v62 + 8) = 1;
    sub_2560615CC(v59, (uint64_t (*)(void))sub_256061378);
    uint64_t v63 = v89;
    sub_25611BB38(v89);
    if (sub_25605FF88())
    {
      uint64_t v64 = *(void (**)(uint64_t, void, uint64_t))(v49 + 104);
      v64(v39, *MEMORY[0x263F18CD8], v46);
      sub_2560611C0(&qword_269F43358, MEMORY[0x263F18D80]);
      char v65 = sub_256177E48();
      uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
      v66(v39, v46);
      if ((v65 & 1) == 0)
      {
        uint64_t v68 = 1;
        uint64_t v61 = v101;
        goto LABEL_8;
      }
      v64(v39, *MEMORY[0x263F18D38], v46);
      char v67 = sub_256177E48();
      v66(v39, v46);
      uint64_t v61 = v101;
      if ((v67 & 1) == 0)
      {
        uint64_t v68 = 2;
        goto LABEL_8;
      }
    }
    uint64_t v68 = 3;
LABEL_8:
    sub_2560615CC(v63, (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhaseSpecs);
    uint64_t v69 = swift_getKeyPath();
    uint64_t v70 = v93;
    sub_2560616A4(v61, v93, (uint64_t (*)(void))sub_2560613D8);
    uint64_t v71 = v70 + *(int *)(v90 + 36);
    *(void *)uint64_t v71 = v69;
    *(void *)(v71 + 8) = v68;
    *(unsigned char *)(v71 + 16) = 0;
    sub_2560615CC(v61, (uint64_t (*)(void))sub_2560613D8);
    uint64_t v72 = swift_getKeyPath();
    uint64_t v73 = v92;
    sub_2560616A4(v70, v92, (uint64_t (*)(void))sub_2560614A0);
    uint64_t v74 = (uint64_t *)(v73 + *(int *)(v91 + 36));
    *uint64_t v74 = v72;
    v74[1] = 0x3FE3333333333333;
    sub_2560615CC(v70, (uint64_t (*)(void))sub_2560614A0);
    return sub_256061634(v73, v95, (uint64_t (*)(void))sub_256061550);
  }
  __break(1u);
  return result;
}

uint64_t sub_2560611C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_256061208(uint64_t a1)
{
}

void sub_25606123C()
{
  if (!qword_269F45618)
  {
    sub_25602E204();
    sub_2560611C0((unint64_t *)&qword_269F44E78, (void (*)(uint64_t))sub_25602E204);
    unint64_t v0 = sub_256176B78();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45618);
    }
  }
}

void sub_2560612D0(uint64_t a1)
{
}

void sub_256061304(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    unint64_t v6 = sub_2561761B8();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_256061378()
{
  if (!qword_269F45628)
  {
    sub_2560612D0(255);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45628);
    }
  }
}

void sub_2560613D8(uint64_t a1)
{
}

void sub_256061408(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  if (!*a2)
  {
    a3(255);
    sub_256061580(255, a4, a5, MEMORY[0x263F1A418]);
    unint64_t v8 = sub_2561761B8();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2560614A0(uint64_t a1)
{
}

void sub_2560614D4()
{
  if (!qword_269F44E40)
  {
    sub_256061580(255, &qword_26B2ACE00, MEMORY[0x263F8D6C8], MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_256176D28();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44E40);
    }
  }
}

void sub_256061550(uint64_t a1)
{
}

void sub_256061580(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_2560615CC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_256061634(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2560616A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25606170C@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_256176478();
  *a1 = v3;
  return result;
}

uint64_t sub_256061738()
{
  return sub_256176488();
}

uint64_t sub_256061760@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_256176598();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_256061794@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_256176598();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_2560617C8()
{
  return sub_2561765A8();
}

uint64_t sub_2560617F8()
{
  return sub_2561765A8();
}

uint64_t sub_256061828@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_256176478();
  *a1 = v3;
  return result;
}

uint64_t sub_256061854()
{
  return sub_256176488();
}

uint64_t sub_25606187C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_25605F158(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

unint64_t sub_2560618DC()
{
  unint64_t result = qword_269F45648;
  if (!qword_269F45648)
  {
    sub_256061550(255);
    sub_256061AFC(&qword_269F45650, sub_2560614A0, (void (*)(void))sub_2560619B0, (void (*)(void))sub_256061D3C);
    sub_256061CD8(&qword_269F45690, &qword_269F44EA0, MEMORY[0x263F8EF38]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45648);
  }
  return result;
}

unint64_t sub_2560619B0()
{
  unint64_t result = qword_269F45658;
  if (!qword_269F45658)
  {
    sub_2560613D8(255);
    sub_256061A40();
    sub_256061CD8((unint64_t *)&qword_269F434F0, (unint64_t *)&qword_269F42C58, MEMORY[0x263F18968]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45658);
  }
  return result;
}

unint64_t sub_256061A40()
{
  unint64_t result = qword_269F45660;
  if (!qword_269F45660)
  {
    sub_256061378();
    sub_256061AFC(&qword_269F45668, sub_2560612D0, (void (*)(void))sub_256061B88, (void (*)(void))sub_256061CA4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45660);
  }
  return result;
}

uint64_t sub_256061AFC(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_256061B88()
{
  unint64_t result = qword_269F45670;
  if (!qword_269F45670)
  {
    sub_256061208(255);
    sub_255F89A5C();
    sub_2560611C0((unint64_t *)&qword_269F43368, (void (*)(uint64_t))sub_255F89A5C);
    swift_getOpaqueTypeConformance2();
    sub_2560611C0(&qword_269F45678, (void (*)(uint64_t))sub_25606123C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45670);
  }
  return result;
}

uint64_t sub_256061CA4()
{
  return sub_2560611C0(&qword_269F45680, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
}

uint64_t sub_256061CD8(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_256061580(255, a2, a3, MEMORY[0x263F1A418]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_256061D3C()
{
  return sub_2560611C0(&qword_269F45688, (void (*)(uint64_t))sub_2560614D4);
}

uint64_t StateOfMindTimeline.EntryFullView.init(model:)@<X0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  sub_25606E6E0(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  uint64_t v3 = (int *)type metadata accessor for StateOfMindTimeline.EntryFullView();
  uint64_t v4 = (uint64_t *)((char *)a1 + v3[5]);
  *uint64_t v4 = swift_getKeyPath();
  sub_25606E6E0(0, &qword_269F47D00, MEMORY[0x263F18520], v2);
  swift_storeEnumTagMultiPayload();
  uint64_t v5 = (uint64_t *)((char *)a1 + v3[7]);
  sub_256177568();
  *uint64_t v5 = v12;
  v5[1] = v13;
  uint64_t v6 = (char *)a1 + v3[8];
  sub_256177568();
  *uint64_t v6 = v12;
  *((void *)v6 + 1) = v13;
  uint64_t v7 = (uint64_t *)((char *)a1 + v3[9]);
  *uint64_t v7 = swift_getKeyPath();
  sub_25606E6E0(0, &qword_269F42CC0, MEMORY[0x263F188C0], v2);
  swift_storeEnumTagMultiPayload();
  unint64_t v8 = (char *)a1 + v3[10];
  *(void *)unint64_t v8 = swift_getKeyPath();
  v8[8] = 0;
  uint64_t v9 = (uint64_t *)((char *)a1 + v3[6]);
  type metadata accessor for StateOfMindTimeline.Model();
  sub_25606D7C8(&qword_269F456A0, (void (*)(uint64_t))type metadata accessor for StateOfMindTimeline.Model);
  uint64_t result = sub_2561760E8();
  *uint64_t v9 = result;
  v9[1] = v11;
  return result;
}

uint64_t sub_256061F8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_256175D98();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_256176158();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = &v12[-v9];
  sub_256176498();
  sub_2561763E8();
  sub_256049BBC();
  sub_2561765F8();
  v13[0] = v13[1];
  sub_256176378();
  return sub_25604A700((uint64_t)v10, (uint64_t)v7, v13, (uint64_t)v4, a1);
}

uint64_t type metadata accessor for StateOfMindTimeline.EntryFullView()
{
  uint64_t result = qword_269F45868;
  if (!qword_269F45868) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_256062164()
{
  return sub_256176378();
}

uint64_t sub_256062188()
{
  return sub_256176378();
}

uint64_t sub_2560621AC(uint64_t a1)
{
  uint64_t v2 = sub_256175D98();
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_256176388();
}

uint64_t sub_256062278@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = _s9ViewModelOMa();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (uint64_t *)((char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for StateOfMindTimeline.EntryFullView();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_256175C88();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    sub_25606E5EC((uint64_t)v4, (uint64_t (*)(void))_s9ViewModelOMa);
    swift_retain();
    sub_2560A1A00(a1);
    return swift_release();
  }
  unint64_t v6 = v4[1];
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v7 = *v4;
  if (v6 >= *(void *)(*v4 + 16))
  {
LABEL_8:
    __break(1u);
    return result;
  }
  uint64_t v8 = *(void *)(type metadata accessor for StateOfMindTimeline.DaySummary() - 8);
  sub_25606E584(v7+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v6, a1, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.DaySummary);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25606244C()
{
  uint64_t v0 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v32 = (uint64_t)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_256175D98();
  uint64_t v2 = *(void *)(v36 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v36);
  char v33 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v35 = (char *)&v31 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v34 = (uint64_t)&v31 - v7;
  uint64_t v8 = MEMORY[0x263F8D8F0];
  sub_25606E6E0(0, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t v12 = type metadata accessor for StateOfMindTimeline.DaySummary();
  uint64_t v13 = v12 - 8;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = _s5EntryVMa();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256062278((uint64_t)v15);
  sub_25606D9E8((uint64_t)&v15[*(int *)(v13 + 36)], (uint64_t)v11, (uint64_t)&qword_269F43410, (uint64_t)_s5EntryVMa, v8, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_25606E6E0);
  sub_25606E5EC((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.DaySummary);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v11, 1, v16) == 1)
  {
    sub_25606B138((uint64_t)v11, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
    uint64_t v20 = v32;
    sub_256119CA0(v32);
    sub_25606E5EC(v20, type metadata accessor for StateOfMindTimeline.Styles);
    sub_256177458();
    uint64_t v21 = sub_256177498();
    swift_release();
  }
  else
  {
    sub_25606E43C((uint64_t)v11, (uint64_t)v19, (uint64_t (*)(void))_s5EntryVMa);
    type metadata accessor for StateOfMindTimeline.EntryFullView();
    uint64_t v22 = v34;
    sub_25611A114(v34);
    double v23 = *(double *)&v19[*(int *)(v16 + 36)];
    unint64_t v25 = v35;
    uint64_t v24 = v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v35, v22, v36);
    uint64_t v26 = v33;
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v33, *MEMORY[0x263F184F8], v24);
    sub_256175D88();
    uint64_t v27 = *(void (**)(char *, uint64_t))(v2 + 8);
    v27(v26, v24);
    swift_getKeyPath();
    sub_2560AAD50(fmax(fmin(v23, 1.0), -1.0));
    uint64_t v29 = v28;
    swift_release();
    uint64_t v21 = MEMORY[0x25A29FE60](v29);
    v27(v25, v24);
    v27((char *)v22, v24);
    sub_25606E5EC((uint64_t)v19, (uint64_t (*)(void))_s5EntryVMa);
  }
  return v21;
}

uint64_t StateOfMindTimeline.EntryFullView.body.getter()
{
  return sub_2561761D8();
}

uint64_t sub_2560629C8@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t (*a1)()@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v4 = type metadata accessor for StateOfMindTimeline.EntryFullView();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4 - 8);
  sub_25606E584(a1, (uint64_t)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.EntryFullView);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  uint64_t result = sub_25606E43C((uint64_t)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.EntryFullView);
  *a2 = sub_25606D8D0;
  a2[1] = (uint64_t (*)@<X0>(uint64_t (*)()@<X0>, uint64_t@<X8>))v8;
  return result;
}

uint64_t sub_256062AE8@<X0>(uint64_t (*a1)()@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v108 = a1;
  uint64_t v130 = a3;
  uint64_t v4 = sub_2561778B8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v127 = v4;
  uint64_t v128 = v5;
  MEMORY[0x270FA5388](v4);
  long long v126 = (char *)&v100 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_256176618();
  uint64_t v123 = *(void *)(v125 - 8);
  MEMORY[0x270FA5388](v125);
  long long v122 = (char *)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = type metadata accessor for StateOfMindTimeline.DaySummary() - 8;
  MEMORY[0x270FA5388](v119);
  uint64_t v117 = (uint64_t)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StateOfMindTimeline.EntryFullView();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v129 = v9 - 8;
  uint64_t v113 = v10;
  uint64_t v112 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v131 = (uint64_t)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v106 = (uint64_t)&v100 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for StateOfMindTimeline.Styles(0);
  uint64_t v15 = v14 - 8;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v100 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25606674C();
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (uint64_t *)((char *)&v100 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2560666B8();
  uint64_t v22 = v21 - 8;
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v100 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = (uint64_t (*)(void))sub_2560666B8;
  sub_2560669B4(0, &qword_269F456E8, (void (*)(uint64_t))sub_2560666B8);
  uint64_t v26 = v25 - 8;
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v100 - v27;
  sub_256066600();
  uint64_t v30 = v29 - 8;
  MEMORY[0x270FA5388](v29);
  uint64_t v32 = (char *)&v100 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560665CC(0);
  uint64_t v103 = v33;
  MEMORY[0x270FA5388](v33);
  uint64_t v102 = (uint64_t)&v100 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560664E8();
  uint64_t v110 = v35;
  uint64_t v111 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  char v104 = (char *)&v100 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560663D4();
  uint64_t v114 = v37;
  uint64_t v115 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v107 = (char *)&v100 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256066270();
  uint64_t v118 = v39;
  uint64_t v120 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v109 = (char *)&v100 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25606605C();
  uint64_t v121 = v41;
  uint64_t v124 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v116 = (char *)&v100 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v20 = sub_2561778C8();
  v20[1] = v43;
  sub_25606D950();
  sub_256063930(a2, (uint64_t)v108, (uint64_t *)((char *)v20 + *(int *)(v44 + 44)));
  sub_25606E584((uint64_t)v20, (uint64_t)v24, (uint64_t (*)(void))sub_25606674C);
  uint64_t v45 = &v24[*(int *)(v22 + 44)];
  *(void *)uint64_t v45 = 0xD00000000000002CLL;
  *((void *)v45 + 1) = 0x80000002561ABAB0;
  sub_25606E5EC((uint64_t)v20, (uint64_t (*)(void))sub_25606674C);
  LOBYTE(v20) = sub_256176D98();
  sub_25606E584((uint64_t)v24, (uint64_t)v28, (uint64_t (*)(void))sub_2560666B8);
  v28[*(int *)(v26 + 44)] = (char)v20;
  sub_25606E5EC((uint64_t)v24, (uint64_t (*)(void))sub_2560666B8);
  uint64_t v46 = a2;
  sub_256119CA0((uint64_t)v17);
  uint64_t v47 = v106;
  sub_25606E584((uint64_t)&v17[*(int *)(v15 + 56)], v106, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  sub_25606E5EC((uint64_t)v17, type metadata accessor for StateOfMindTimeline.Styles);
  uint64_t v48 = sub_25604A3E0();
  sub_25606E5EC(v47, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  LOBYTE(a2) = sub_256176DD8();
  uint64_t v49 = v105;
  uint64_t v50 = MEMORY[0x263F1A0C0];
  sub_25606D9E8((uint64_t)v28, (uint64_t)v32, (uint64_t)&qword_269F456E8, (uint64_t)v105, MEMORY[0x263F1A0C0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_2560669B4);
  unint64_t v51 = &v32[*(int *)(v30 + 44)];
  *(void *)unint64_t v51 = v48;
  v51[8] = a2;
  sub_25606DA5C((uint64_t)v28, (uint64_t)&qword_269F456E8, (uint64_t)v49, v50, (uint64_t (*)(void))sub_2560669B4);
  uint64_t v108 = type metadata accessor for StateOfMindTimeline.EntryFullView;
  uint64_t v101 = v46;
  uint64_t v52 = v131;
  sub_25606E584(v46, v131, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.EntryFullView);
  uint64_t v53 = *(unsigned __int8 *)(v113 + 80);
  v112 += (v53 + 16) & ~v53;
  uint64_t v54 = (v53 + 16) & ~v53;
  uint64_t v113 = v54;
  uint64_t v106 = v53 | 7;
  uint64_t v55 = swift_allocObject();
  uint64_t v105 = (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.EntryFullView;
  sub_25606E43C(v52, v55 + v54, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.EntryFullView);
  uint64_t v56 = v102;
  sub_25606E584((uint64_t)v32, v102, (uint64_t (*)(void))sub_256066600);
  uint64_t v57 = v103;
  uint64_t v58 = (uint64_t (**)())(v56 + *(int *)(v103 + 36));
  char *v58 = sub_25606E2DC;
  v58[1] = (uint64_t (*)())v55;
  sub_25606E5EC((uint64_t)v32, (uint64_t (*)(void))sub_256066600);
  uint64_t v59 = v117;
  sub_256062278(v117);
  uint64_t v60 = (uint64_t *)(v59 + *(int *)(v119 + 32));
  uint64_t v62 = *v60;
  uint64_t v61 = v60[1];
  swift_bridgeObjectRetain();
  sub_25606E5EC(v59, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.DaySummary);
  uint64_t v135 = v62;
  uint64_t v136 = v61;
  uint64_t v63 = sub_256067784(&qword_269F457E8, sub_2560665CC, (void (*)(void))sub_256067190, (void (*)(void))sub_2560673AC);
  unint64_t v64 = sub_255F5CE90();
  uint64_t v65 = MEMORY[0x263F8D310];
  uint64_t v66 = v104;
  uint64_t v67 = v57;
  sub_256177158();
  swift_bridgeObjectRelease();
  sub_25606E5EC(v56, (uint64_t (*)(void))sub_2560665CC);
  uint64_t v68 = v122;
  uint64_t v69 = v123;
  uint64_t v70 = v125;
  (*(void (**)(char *, void, uint64_t))(v123 + 104))(v122, *MEMORY[0x263F19698], v125);
  uint64_t v135 = v67;
  uint64_t v136 = v65;
  uint64_t v137 = v63;
  unint64_t v138 = v64;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v72 = v107;
  uint64_t v73 = v110;
  sub_256177288();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v68, v70);
  (*(void (**)(char *, uint64_t))(v111 + 8))(v66, v73);
  uint64_t v74 = v126;
  sub_2561778A8();
  uint64_t v135 = v73;
  uint64_t v136 = OpaqueTypeConformance2;
  uint64_t v75 = swift_getOpaqueTypeConformance2();
  unint64_t v76 = MEMORY[0x263F1B908];
  uint64_t v77 = v109;
  uint64_t v78 = v74;
  uint64_t v79 = v114;
  uint64_t v80 = v127;
  MEMORY[0x25A29FC30](v74, MEMORY[0x263F8EE78], v114, v127, v75, MEMORY[0x263F1B908]);
  uint64_t v81 = v80;
  (*(void (**)(char *, uint64_t))(v128 + 8))(v78, v80);
  uint64_t v82 = v79;
  (*(void (**)(char *, uint64_t))(v115 + 8))(v72, v79);
  uint64_t v83 = v101;
  uint64_t v132 = v101;
  sub_2560673E0();
  uint64_t v85 = v84;
  uint64_t v135 = v82;
  uint64_t v136 = v81;
  uint64_t v137 = v75;
  unint64_t v138 = v76;
  uint64_t v86 = swift_getOpaqueTypeConformance2();
  sub_256067494();
  uint64_t v88 = v87;
  uint64_t v89 = sub_25606D7C8(&qword_269F45850, (void (*)(uint64_t))sub_256067494);
  uint64_t v135 = v88;
  uint64_t v136 = v89;
  uint64_t v90 = swift_getOpaqueTypeConformance2();
  uint64_t v91 = v116;
  uint64_t v92 = v118;
  sub_256177348();
  (*(void (**)(char *, uint64_t))(v120 + 8))(v77, v92);
  uint64_t v93 = v83 + *(int *)(v129 + 40);
  char v94 = *(unsigned char *)v93;
  uint64_t v95 = *(void *)(v93 + 8);
  char v133 = v94;
  uint64_t v134 = v95;
  sub_25606E4AC(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
  sub_256177598();
  uint64_t v96 = v131;
  sub_25606E584(v83, v131, (uint64_t (*)(void))v108);
  uint64_t v97 = swift_allocObject();
  sub_25606E43C(v96, v97 + v113, v105);
  uint64_t v135 = v92;
  uint64_t v136 = v85;
  uint64_t v137 = v86;
  unint64_t v138 = v90;
  swift_getOpaqueTypeConformance2();
  sub_25606791C();
  uint64_t v98 = v121;
  sub_2561772E8();
  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v124 + 8))(v91, v98);
}

uint64_t sub_256063930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v131 = a2;
  int v150 = a3;
  uint64_t v4 = sub_256176BB8();
  uint64_t v145 = *(void *)(v4 - 8);
  uint64_t v146 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v142 = (void (*)())((char *)v120 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v138 = _s15LogButtonFooterVMa() - 8;
  MEMORY[0x270FA5388](v138);
  uint64_t v137 = (void *)((char *)v120 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v135 = sub_2561778B8();
  uint64_t v154 = *(void *)(v135 - 8);
  MEMORY[0x270FA5388](v135);
  uint64_t v152 = (char *)v120 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StateOfMindTimeline.EntryFullView();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v153 = v8 - 8;
  uint64_t v133 = v9;
  uint64_t v132 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v129 = (uint64_t)v120 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = type metadata accessor for StateOfMindTimeline.DaySummary() - 8;
  uint64_t v11 = MEMORY[0x270FA5388](v140);
  uint64_t v139 = (uint64_t)v120 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v122 = (uint64_t)v120 - v13;
  uint64_t v124 = _s13EntryBaseViewVMa() - 8;
  MEMORY[0x270FA5388](v124);
  uint64_t v15 = (void *)((char *)v120 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_256066B6C();
  uint64_t v125 = v16 - 8;
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v123 = (uint64_t)v120 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256066B38(0);
  uint64_t v127 = v18 - 8;
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v151 = (uint64_t)v120 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256066A18();
  uint64_t v128 = (int *)(v20 - 8);
  MEMORY[0x270FA5388](v20 - 8);
  long long v126 = (char *)v120 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = sub_256066A18;
  sub_2560669B4(0, &qword_269F45730, (void (*)(uint64_t))sub_256066A18);
  uint64_t v130 = v22;
  MEMORY[0x270FA5388](v22);
  uint64_t v134 = (uint64_t)v120 - v23;
  sub_25606690C();
  uint64_t v143 = *(void (**)(uint64_t, unint64_t *, void (*)(uint64_t), void (*)(uint64_t)))(v24 - 8);
  uint64_t v144 = v24;
  MEMORY[0x270FA5388](v24);
  uint64_t v155 = (char *)v120 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25606757C(0, &qword_269F45720, (void (*)(uint64_t))sub_25606690C, MEMORY[0x263F1A470]);
  uint64_t v27 = MEMORY[0x270FA5388](v26 - 8);
  uint64_t v149 = (uint64_t)v120 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v141 = (uint64_t)v120 - v30;
  MEMORY[0x270FA5388](v29);
  uint64_t v167 = (uint64_t)v120 - v31;
  uint64_t v32 = sub_25606244C();
  uint64_t v33 = sub_2561778E8();
  sub_25611686C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v224, 0.0, 1, 0.0, 1, v33, v34, v32);
  swift_release();
  unint64_t v159 = v224[1];
  uint64_t v160 = (void *)v224[0];
  unsigned __int8 v35 = v225;
  unsigned __int8 v36 = v227;
  uint64_t v161 = v226;
  uint64_t v162 = v228;
  unsigned __int8 v37 = v229;
  unsigned __int8 v38 = v231;
  uint64_t v163 = v230;
  uint64_t v164 = v232;
  unsigned __int8 v39 = v233;
  unsigned __int8 v40 = v235;
  uint64_t v148 = v236;
  uint64_t v165 = v234;
  uint64_t v166 = v237;
  uint64_t v41 = (void **)(a1 + *(int *)(v153 + 36));
  uint64_t v42 = *v41;
  uint64_t v43 = v41[1];
  v179 = v42;
  unint64_t v180 = (unint64_t)v43;
  uint64_t v121 = (uint64_t (*)(void, uint64_t))MEMORY[0x263F1B5D0];
  sub_25606E4AC(0, &qword_269F432B0, MEMORY[0x263F8EF38], MEMORY[0x263F1B5D0]);
  sub_256177578();
  sub_2561778E8();
  sub_256175F38();
  uint64_t v156 = v238;
  uint64_t v157 = v240;
  uint64_t v158 = v242;
  uint64_t v147 = v243;
  unsigned __int8 v223 = v35;
  unsigned __int8 v221 = v36;
  unsigned __int8 v219 = v37;
  unsigned __int8 v217 = v38;
  unsigned __int8 v215 = v39;
  unsigned __int8 v213 = v40;
  unsigned __int8 v211 = v239;
  unsigned __int8 v209 = v241;
  uint64_t v44 = v122;
  uint64_t v45 = a1;
  sub_256062278(v122);
  sub_256175F98();
  uint64_t v47 = v46;
  *uint64_t v15 = swift_getKeyPath();
  sub_25606E6E0(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  uint64_t v131 = v48;
  swift_storeEnumTagMultiPayload();
  uint64_t v49 = v124;
  sub_25606E43C(v44, (uint64_t)v15 + *(int *)(v124 + 28), (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.DaySummary);
  *(uint64_t *)((char *)v15 + *(int *)(v49 + 32)) = v47;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v51 = v123;
  sub_25606E584((uint64_t)v15, v123, (uint64_t (*)(void))_s13EntryBaseViewVMa);
  uint64_t v52 = v51 + *(int *)(v125 + 44);
  *(void *)uint64_t v52 = KeyPath;
  *(unsigned char *)(v52 + 8) = 1;
  sub_25606E5EC((uint64_t)v15, (uint64_t (*)(void))_s13EntryBaseViewVMa);
  uint64_t v53 = sub_2561778E8();
  uint64_t v55 = v54;
  uint64_t v56 = v45;
  v120[1] = v45;
  uint64_t v57 = v129;
  sub_25606E584(v45, v129, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.EntryFullView);
  unint64_t v58 = (*(unsigned __int8 *)(v133 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80);
  uint64_t v59 = swift_allocObject();
  sub_25606E43C(v57, v59 + v58, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.EntryFullView);
  uint64_t v60 = v151;
  sub_25606E584(v51, v151, (uint64_t (*)(void))sub_256066B6C);
  uint64_t v61 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v60 + *(int *)(v127 + 44));
  char *v61 = sub_25606E504;
  v61[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v59;
  v61[2] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v53;
  v61[3] = v55;
  sub_25606E5EC(v51, (uint64_t (*)(void))sub_256066B6C);
  uint64_t v62 = v152;
  sub_256177898();
  uint64_t v63 = v128;
  unint64_t v64 = v126;
  uint64_t v65 = v135;
  (*(void (**)(char *, char *, uint64_t))(v154 + 16))(&v126[v128[19]], v62, v135);
  *unint64_t v64 = 1;
  sub_25606E584(v60, (uint64_t)&v64[v63[20]], (uint64_t (*)(void))sub_256066B38);
  uint64_t v66 = (uint64_t)&v64[v63[21]];
  uint64_t v67 = v56 + *(int *)(v153 + 40);
  char v68 = *(unsigned char *)v67;
  uint64_t v69 = *(void *)(v67 + 8);
  LOBYTE(v168) = v68;
  *((void *)&v168 + 1) = v69;
  sub_25606E4AC(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], v121);
  sub_256177598();
  uint64_t v70 = v179;
  unint64_t v71 = v180;
  LOBYTE(v59) = v181;
  uint64_t v72 = swift_getKeyPath();
  uint64_t v73 = (uint64_t)v137;
  *uint64_t v137 = v72;
  uint64_t v74 = v130;
  swift_storeEnumTagMultiPayload();
  uint64_t v75 = v73 + *(int *)(v138 + 28);
  *(void *)uint64_t v75 = v70;
  *(void *)(v75 + 8) = v71;
  *(unsigned char *)(v75 + 16) = v59;
  sub_25606E43C(v73, v66, (uint64_t (*)(void))_s15LogButtonFooterVMa);
  unint64_t v76 = &v64[v63[22]];
  *(void *)&long long v168 = 0;
  sub_256177568();
  unint64_t v77 = v180;
  *unint64_t v76 = v179;
  v76[1] = v77;
  uint64_t v78 = &v64[v63[23]];
  *(void *)&long long v168 = 0;
  sub_256177568();
  unint64_t v79 = v180;
  *uint64_t v78 = v179;
  v78[1] = v79;
  (*(void (**)(char *, uint64_t))(v154 + 8))(v152, v65);
  sub_25606E5EC(v151, (uint64_t (*)(void))sub_256066B38);
  uint64_t v80 = sub_2561778E8();
  uint64_t v81 = v134;
  sub_256116A28(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v134, 0.0, 1, 0.0, 1, v80, v82);
  sub_25606E5EC((uint64_t)v64, (uint64_t (*)(void))sub_256066A18);
  uint64_t v83 = v142;
  sub_256176BA8();
  unint64_t v84 = sub_256066FD4();
  sub_256177208();
  (*(void (**)(void (*)(), uint64_t))(v145 + 8))(v83, v146);
  sub_25606DA5C(v81, (uint64_t)&qword_269F45730, (uint64_t)v136, MEMORY[0x263F19110], (uint64_t (*)(void))sub_2560669B4);
  uint64_t v85 = v139;
  sub_256062278(v139);
  uint64_t v86 = *(void **)(v85 + *(int *)(v140 + 44));
  swift_bridgeObjectRetain();
  sub_25606E5EC(v85, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.DaySummary);
  swift_bridgeObjectRetain();
  uint64_t v87 = v86;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v87 = sub_256095C94(0, v86[2] + 1, 1, v86);
  }
  unint64_t v89 = v87[2];
  unint64_t v88 = v87[3];
  if (v89 >= v88 >> 1) {
    uint64_t v87 = sub_256095C94((void *)(v88 > 1), v89 + 1, 1, v87);
  }
  v87[2] = v89 + 1;
  uint64_t v90 = &v87[2 * v89];
  v90[4] = 1685217603;
  v90[5] = 0xE400000000000000;
  v179 = &unk_2704B5358;
  uint64_t v91 = swift_bridgeObjectRetain();
  sub_255FCD3A4(v91);
  sub_25606E4AC(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  v179 = v74;
  unint64_t v180 = v84;
  swift_getOpaqueTypeConformance2();
  uint64_t v92 = v141;
  uint64_t v93 = v144;
  char v94 = v155;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*((void (**)(char *, uint64_t))v143 + 1))(v94, v93);
  uint64_t v95 = v167;
  sub_25606E64C(v92, v167);
  LOBYTE(v93) = v223;
  LODWORD(v144) = v223;
  LOBYTE(v92) = v221;
  LODWORD(v145) = v221;
  LOBYTE(v94) = v219;
  LODWORD(v146) = v219;
  unsigned __int8 v96 = v217;
  LODWORD(v151) = v217;
  unsigned __int8 v97 = v215;
  LODWORD(v152) = v215;
  unsigned __int8 v98 = v213;
  LODWORD(v153) = v213;
  unsigned __int8 v99 = v211;
  LODWORD(v154) = v211;
  LODWORD(v155) = v209;
  uint64_t v142 = sub_25606690C;
  uint64_t v141 = MEMORY[0x263F1A470];
  uint64_t v143 = sub_25606757C;
  uint64_t v100 = v95;
  uint64_t v101 = v149;
  sub_25606D9E8(v100, v149, (uint64_t)&qword_269F45720, (uint64_t)sub_25606690C, MEMORY[0x263F1A470], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_25606757C);
  *(void *)&long long v168 = v160;
  *((void *)&v168 + 1) = v159;
  LOBYTE(v169) = v93;
  *(_DWORD *)((char *)&v169 + 1) = *(_DWORD *)v222;
  DWORD1(v169) = *(_DWORD *)&v222[3];
  *((void *)&v169 + 1) = v161;
  LOBYTE(v170) = v92;
  *(_DWORD *)((char *)&v170 + 1) = *(_DWORD *)v220;
  DWORD1(v170) = *(_DWORD *)&v220[3];
  *((void *)&v170 + 1) = v162;
  LOBYTE(v171) = (_BYTE)v94;
  *(_DWORD *)((char *)&v171 + 1) = *(_DWORD *)v218;
  DWORD1(v171) = *(_DWORD *)&v218[3];
  *((void *)&v171 + 1) = v163;
  LOBYTE(v172) = v96;
  DWORD1(v172) = *(_DWORD *)&v216[3];
  *(_DWORD *)((char *)&v172 + 1) = *(_DWORD *)v216;
  *((void *)&v172 + 1) = v164;
  LOBYTE(v173) = v97;
  DWORD1(v173) = *(_DWORD *)&v214[3];
  *(_DWORD *)((char *)&v173 + 1) = *(_DWORD *)v214;
  *((void *)&v173 + 1) = v165;
  LOBYTE(v174) = v98;
  *(_DWORD *)((char *)&v174 + 1) = *(_DWORD *)v212;
  DWORD1(v174) = *(_DWORD *)&v212[3];
  uint64_t v102 = v148;
  *((void *)&v174 + 1) = v148;
  *(void *)&long long v175 = v166;
  *((void *)&v175 + 1) = v156;
  LOBYTE(v176) = v99;
  *(_DWORD *)((char *)&v176 + 1) = *(_DWORD *)v210;
  DWORD1(v176) = *(_DWORD *)&v210[3];
  *((void *)&v176 + 1) = v157;
  LOBYTE(v177) = (_BYTE)v155;
  *(_DWORD *)((char *)&v177 + 1) = *(_DWORD *)v208;
  DWORD1(v177) = *(_DWORD *)&v208[3];
  *((void *)&v177 + 1) = v158;
  uint64_t v103 = v147;
  uint64_t v178 = v147;
  long long v104 = v169;
  uint64_t v105 = v150;
  *int v150 = v168;
  v105[1] = v104;
  long long v106 = v170;
  long long v107 = v171;
  long long v108 = v173;
  v105[4] = v172;
  v105[5] = v108;
  v105[2] = v106;
  v105[3] = v107;
  long long v109 = v174;
  long long v110 = v175;
  long long v111 = v176;
  long long v112 = v177;
  *((void *)v105 + 20) = v103;
  v105[8] = v111;
  v105[9] = v112;
  v105[6] = v109;
  v105[7] = v110;
  sub_2560667E0();
  uint64_t v114 = (uint64_t)v105 + *(int *)(v113 + 48);
  uint64_t v115 = v101;
  uint64_t v116 = v101;
  uint64_t v118 = v141;
  uint64_t v117 = v142;
  sub_25606D9E8(v116, v114, (uint64_t)&qword_269F45720, (uint64_t)v142, v141, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))v143);
  sub_255F9A600((uint64_t)&v168);
  sub_25606DA5C(v167, (uint64_t)&qword_269F45720, (uint64_t)v117, v118, (uint64_t (*)(void))sub_25606757C);
  sub_25606DA5C(v115, (uint64_t)&qword_269F45720, (uint64_t)v117, v118, (uint64_t (*)(void))sub_25606757C);
  v179 = v160;
  unint64_t v180 = v159;
  char v181 = v144;
  *(_DWORD *)char v182 = *(_DWORD *)v222;
  *(_DWORD *)&v182[3] = *(_DWORD *)&v222[3];
  uint64_t v183 = v161;
  char v184 = v145;
  *(_DWORD *)v185 = *(_DWORD *)v220;
  *(_DWORD *)&v185[3] = *(_DWORD *)&v220[3];
  uint64_t v186 = v162;
  char v187 = v146;
  *(_DWORD *)v188 = *(_DWORD *)v218;
  *(_DWORD *)&v188[3] = *(_DWORD *)&v218[3];
  uint64_t v189 = v163;
  char v190 = v151;
  *(_DWORD *)&v191[3] = *(_DWORD *)&v216[3];
  *(_DWORD *)v191 = *(_DWORD *)v216;
  uint64_t v192 = v164;
  char v193 = (char)v152;
  *(_DWORD *)&v194[3] = *(_DWORD *)&v214[3];
  *(_DWORD *)v194 = *(_DWORD *)v214;
  uint64_t v195 = v165;
  char v196 = v153;
  *(_DWORD *)v197 = *(_DWORD *)v212;
  *(_DWORD *)&v197[3] = *(_DWORD *)&v212[3];
  uint64_t v198 = v102;
  uint64_t v199 = v166;
  uint64_t v200 = v156;
  char v201 = v154;
  *(_DWORD *)v202 = *(_DWORD *)v210;
  *(_DWORD *)&v202[3] = *(_DWORD *)&v210[3];
  uint64_t v203 = v157;
  char v204 = (char)v155;
  *(_DWORD *)v205 = *(_DWORD *)v208;
  *(_DWORD *)&v205[3] = *(_DWORD *)&v208[3];
  uint64_t v206 = v158;
  uint64_t v207 = v103;
  return sub_255FFCD68((uint64_t)&v179);
}

uint64_t sub_256064A4C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_2561768E8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StateOfMindTimeline.Styles(0);
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256119CA0((uint64_t)v12);
  sub_25606E584((uint64_t)&v12[*(int *)(v10 + 56)], (uint64_t)v8, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  sub_25606E5EC((uint64_t)v12, type metadata accessor for StateOfMindTimeline.Styles);
  uint64_t v13 = sub_25604A3E0();
  sub_25606E5EC((uint64_t)v8, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  v17[0] = 0xD00000000000002CLL;
  v17[1] = 0x80000002561ABAB0;
  sub_256176AC8();
  sub_256175FB8();
  uint64_t v15 = v14;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *a1 = v13;
  a1[1] = v15;
  return result;
}

uint64_t sub_256064C8C()
{
  return sub_256177588();
}

uint64_t sub_256064D1C(uint64_t a1)
{
  uint64_t v2 = sub_256176958();
  MEMORY[0x270FA5388](v2 - 8);
  sub_256067494();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_256176948();
  uint64_t v11 = a1;
  sub_256067548(0);
  sub_256067784(&qword_269F45840, sub_256067548, (void (*)(void))sub_256067810, (void (*)(void))sub_255F73540);
  sub_256175E68();
  uint64_t v8 = sub_25606D7C8(&qword_269F45850, (void (*)(uint64_t))sub_256067494);
  MEMORY[0x25A29F470](v7, v4, v8);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_256064F00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v56 = a1;
  uint64_t v62 = a2;
  uint64_t v61 = type metadata accessor for StateOfMindTimeline.DaySummary();
  MEMORY[0x270FA5388](v61);
  uint64_t v60 = (uint64_t)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_256175D98();
  uint64_t v54 = *(void *)(v3 - 8);
  uint64_t v55 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v53 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
  MEMORY[0x270FA5388](v51);
  uint64_t v52 = (uint64_t)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x270FA5388](v48);
  uint64_t v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StateOfMindTimeline.EntryFullView();
  uint64_t v46 = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(v46 + 64);
  MEMORY[0x270FA5388](v8 - 8);
  sub_256067734(0, (unint64_t *)&qword_269F42ED0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v46 - v13;
  sub_256067684();
  uint64_t v49 = *(void *)(v15 - 8);
  uint64_t v50 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v47 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560675F0();
  uint64_t v58 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v59 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256067548(0);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v57 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v21 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_2561755B8();
  uint64_t v24 = v23;
  swift_bridgeObjectRelease();

  uint64_t v63 = (void *)v22;
  uint64_t v64 = v24;
  sub_25606E584(v56, (uint64_t)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.EntryFullView);
  unint64_t v25 = (*(unsigned __int8 *)(v46 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  uint64_t v26 = swift_allocObject();
  sub_25606E43C((uint64_t)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v26 + v25, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.EntryFullView);
  sub_255F5CE90();
  sub_2561775D8();
  sub_256176E88();
  sub_255F738A0();
  uint64_t v27 = v47;
  sub_256177068();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_256119CA0((uint64_t)v7);
  uint64_t v28 = v52;
  sub_25606E584((uint64_t)&v7[*(int *)(v48 + 48)], v52, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  sub_25606E5EC((uint64_t)v7, type metadata accessor for StateOfMindTimeline.Styles);
  uint64_t v30 = v53;
  uint64_t v29 = v54;
  uint64_t v31 = v55;
  (*(void (**)(char *, void, uint64_t))(v54 + 104))(v53, *MEMORY[0x263F184F8], v55);
  LOBYTE(v24) = sub_256175D88();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v31);
  if (v24)
  {
    sub_256177488();
    uint64_t v32 = sub_256177498();
    swift_release();
  }
  else
  {
    uint64_t v32 = sub_256177438();
  }
  uint64_t v34 = v58;
  uint64_t v33 = (uint64_t)v59;
  sub_25606E5EC(v28, type metadata accessor for StateOfMindTimeline.Styles.Entry);
  uint64_t v36 = v49;
  uint64_t v35 = v50;
  (*(void (**)(uint64_t, char *, uint64_t))(v49 + 16))(v33, v27, v50);
  *(void *)(v33 + *(int *)(v34 + 36)) = v32;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v27, v35);
  uint64_t v37 = v60;
  sub_256062278(v60);
  unsigned __int8 v38 = *(void **)(v37 + *(int *)(v61 + 36));
  swift_bridgeObjectRetain();
  sub_25606E5EC(v37, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.DaySummary);
  swift_bridgeObjectRetain();
  unsigned __int8 v39 = v38;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unsigned __int8 v39 = sub_256095C94(0, v38[2] + 1, 1, v38);
  }
  unint64_t v41 = v39[2];
  unint64_t v40 = v39[3];
  if (v41 >= v40 >> 1) {
    unsigned __int8 v39 = sub_256095C94((void *)(v40 > 1), v41 + 1, 1, v39);
  }
  v39[2] = v41 + 1;
  uint64_t v42 = &v39[2 * v41];
  v42[4] = 0x74754265736F6C43;
  v42[5] = 0xEB000000006E6F74;
  uint64_t v63 = &unk_2704B5358;
  uint64_t v43 = swift_bridgeObjectRetain();
  sub_255FCD3A4(v43);
  sub_25606E4AC(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_256067810();
  uint64_t v44 = (uint64_t)v57;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25606E5EC(v33, (uint64_t (*)(void))sub_2560675F0);
  return sub_25606E43C(v44, v62, (uint64_t (*)(void))sub_256067548);
}

uint64_t sub_256065770()
{
  uint64_t v0 = sub_256175F88();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StateOfMindTimeline.EntryFullView();
  sub_25611A6E4((uint64_t)v3);
  sub_256175F78();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_256065854@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for StateOfMindTimeline.EntryFullView();
  swift_retain();
  uint64_t v2 = sub_2560A1CAC();
  uint64_t result = swift_release();
  *(void *)a1 = sub_25606E3C8;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = nullsub_1;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 0;
  return result;
}

uint64_t sub_2560658DC()
{
  return sub_2561761D8();
}

void sub_256065970()
{
  qword_269F45698 = 0;
}

double sub_25606597C@<D0>(void *a1@<X8>)
{
  if (qword_269F42340 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_269F45698;
  *a1 = qword_269F45698;
  return result;
}

uint64_t sub_2560659E0()
{
  return sub_256176528();
}

uint64_t sub_256065A04()
{
  return sub_256176528();
}

uint64_t sub_256065A28@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_256175D98();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256176378();
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  int v7 = *MEMORY[0x263F184F8];
  uint64_t v8 = self;
  if (v6 == v7)
  {
    uint64_t result = MEMORY[0x25A29FE80](objc_msgSend(v8, sel_secondarySystemGroupedBackgroundColor));
    uint64_t v10 = result;
  }
  else
  {
    uint64_t v10 = MEMORY[0x25A29FE80](objc_msgSend(v8, sel_systemGroupedBackgroundColor));
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  *a1 = v10;
  return result;
}

uint64_t sub_256065B7C@<X0>(uint64_t (**a1)@<X0>(uint64_t (*a1)()@<X0>, uint64_t a2@<X8>)@<X8>)
{
  return sub_2560629C8(*(void *)(v1 + 16), a1);
}

void sub_256065B84()
{
  if (!qword_269F456A8)
  {
    sub_256065DFC();
    sub_25606605C();
    sub_256066270();
    sub_2560673E0();
    sub_2560663D4();
    sub_2561778B8();
    sub_2560664E8();
    sub_2560665CC(255);
    sub_256067784(&qword_269F457E8, sub_2560665CC, (void (*)(void))sub_256067190, (void (*)(void))sub_2560673AC);
    sub_255F5CE90();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_256067494();
    sub_25606D7C8(&qword_269F45850, (void (*)(uint64_t))sub_256067494);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_25606791C();
    swift_getOpaqueTypeConformance2();
    unint64_t v0 = sub_256176088();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F456A8);
    }
  }
}

void sub_256065DFC()
{
  if (!qword_269F456B0)
  {
    sub_25606605C();
    sub_256066270();
    sub_2560673E0();
    sub_2560663D4();
    sub_2561778B8();
    sub_2560664E8();
    sub_2560665CC(255);
    sub_256067784(&qword_269F457E8, sub_2560665CC, (void (*)(void))sub_256067190, (void (*)(void))sub_2560673AC);
    sub_255F5CE90();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_256067494();
    sub_25606D7C8(&qword_269F45850, (void (*)(uint64_t))sub_256067494);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_25606791C();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F456B0);
    }
  }
}

void sub_25606605C()
{
  if (!qword_269F456B8)
  {
    sub_256066270();
    sub_2560673E0();
    sub_2560663D4();
    sub_2561778B8();
    sub_2560664E8();
    sub_2560665CC(255);
    sub_256067784(&qword_269F457E8, sub_2560665CC, (void (*)(void))sub_256067190, (void (*)(void))sub_2560673AC);
    sub_255F5CE90();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_256067494();
    sub_25606D7C8(&qword_269F45850, (void (*)(uint64_t))sub_256067494);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F456B8);
    }
  }
}

void sub_256066270()
{
  if (!qword_269F456C0)
  {
    sub_2560663D4();
    sub_2561778B8();
    sub_2560664E8();
    sub_2560665CC(255);
    sub_256067784(&qword_269F457E8, sub_2560665CC, (void (*)(void))sub_256067190, (void (*)(void))sub_2560673AC);
    sub_255F5CE90();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F456C0);
    }
  }
}

void sub_2560663D4()
{
  if (!qword_269F456C8)
  {
    sub_2560664E8();
    sub_2560665CC(255);
    sub_256067784(&qword_269F457E8, sub_2560665CC, (void (*)(void))sub_256067190, (void (*)(void))sub_2560673AC);
    sub_255F5CE90();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F456C8);
    }
  }
}

void sub_2560664E8()
{
  if (!qword_269F456D0)
  {
    sub_2560665CC(255);
    sub_256067784(&qword_269F457E8, sub_2560665CC, (void (*)(void))sub_256067190, (void (*)(void))sub_2560673AC);
    sub_255F5CE90();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F456D0);
    }
  }
}

void sub_2560665CC(uint64_t a1)
{
}

void sub_256066600()
{
  if (!qword_269F456E0)
  {
    sub_2560669B4(255, &qword_269F456E8, (void (*)(uint64_t))sub_2560666B8);
    sub_256067734(255, &qword_269F44168, MEMORY[0x263F1B440], MEMORY[0x263F1B420], MEMORY[0x263F1A158]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F456E0);
    }
  }
}

void sub_2560666B8()
{
  if (!qword_269F456F0)
  {
    sub_25606674C();
    sub_256067734(255, &qword_269F455D0, MEMORY[0x263F8D310], MEMORY[0x263F8D320], MEMORY[0x263F1A170]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F456F0);
    }
  }
}

void sub_25606674C()
{
  if (!qword_269F456F8)
  {
    sub_25606E6E0(255, &qword_269F45700, (uint64_t (*)(uint64_t))sub_2560667E0, MEMORY[0x263F1BAC8]);
    sub_2560670A0();
    unint64_t v0 = sub_256177708();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F456F8);
    }
  }
}

void sub_2560667E0()
{
  if (!qword_269F45708)
  {
    sub_256066880();
    sub_25606757C(255, &qword_269F45720, (void (*)(uint64_t))sub_25606690C, MEMORY[0x263F1A470]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F45708);
    }
  }
}

void sub_256066880()
{
  if (!qword_269F45710)
  {
    sub_256067734(255, &qword_269F45718, MEMORY[0x263F1B440], MEMORY[0x263F19110], MEMORY[0x263F18E28]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45710);
    }
  }
}

void sub_25606690C()
{
  if (!qword_269F45728)
  {
    sub_2560669B4(255, &qword_269F45730, (void (*)(uint64_t))sub_256066A18);
    sub_256066FD4();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F45728);
    }
  }
}

void sub_2560669B4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_256066A18()
{
  if (!qword_269F45738)
  {
    sub_256066B38(255);
    _s15LogButtonFooterVMa();
    sub_2561778B8();
    sub_256067784(&qword_269F45798, sub_256066B38, (void (*)(void))sub_256066EA8, (void (*)(void))sub_256066FA0);
    sub_25606D7C8(&qword_269F457C0, (void (*)(uint64_t))_s15LogButtonFooterVMa);
    unint64_t v0 = type metadata accessor for ScrollableWithPinnedFooter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45738);
    }
  }
}

void sub_256066B38(uint64_t a1)
{
}

void sub_256066B6C()
{
  if (!qword_269F45748)
  {
    _s13EntryBaseViewVMa();
    sub_25606E4AC(255, &qword_269F45750, (uint64_t)&type metadata for StateOfMindTimelinePresentationContext, MEMORY[0x263F1A418]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45748);
    }
  }
}

void sub_256066BF8()
{
  if (!qword_269F45758)
  {
    sub_256066C8C();
    sub_25606D7C8(&qword_269F45790, (void (*)(uint64_t))sub_256066C8C);
    unint64_t v0 = sub_256176888();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45758);
    }
  }
}

void sub_256066C8C()
{
  if (!qword_269F45760)
  {
    sub_256066CF0();
    sub_256066E00();
    unint64_t v0 = sub_256176088();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45760);
    }
  }
}

void sub_256066CF0()
{
  if (!qword_269F45768)
  {
    sub_256066D50();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45768);
    }
  }
}

void sub_256066D50()
{
  if (!qword_269F45770)
  {
    sub_256066DAC();
    unint64_t v0 = sub_256176BC8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45770);
    }
  }
}

unint64_t sub_256066DAC()
{
  unint64_t result = qword_269F45778;
  if (!qword_269F45778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45778);
  }
  return result;
}

unint64_t sub_256066E00()
{
  unint64_t result = qword_269F45780;
  if (!qword_269F45780)
  {
    sub_256066CF0();
    sub_25606D7C8(&qword_269F45788, (void (*)(uint64_t))sub_256066D50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45780);
  }
  return result;
}

uint64_t sub_256066EA8()
{
  return sub_256067784(&qword_269F457A0, (void (*)(uint64_t))sub_256066B6C, (void (*)(void))sub_256066EF0, (void (*)(void))sub_256066F24);
}

uint64_t sub_256066EF0()
{
  return sub_25606D7C8(&qword_269F457A8, (void (*)(uint64_t))_s13EntryBaseViewVMa);
}

unint64_t sub_256066F24()
{
  unint64_t result = qword_269F457B0;
  if (!qword_269F457B0)
  {
    sub_25606E4AC(255, &qword_269F45750, (uint64_t)&type metadata for StateOfMindTimelinePresentationContext, MEMORY[0x263F1A418]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F457B0);
  }
  return result;
}

uint64_t sub_256066FA0()
{
  return sub_25606D7C8(&qword_269F457B8, (void (*)(uint64_t))sub_256066BF8);
}

unint64_t sub_256066FD4()
{
  unint64_t result = qword_269F457C8;
  if (!qword_269F457C8)
  {
    sub_2560669B4(255, &qword_269F45730, (void (*)(uint64_t))sub_256066A18);
    sub_25606D7C8(&qword_269F457D0, (void (*)(uint64_t))sub_256066A18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F457C8);
  }
  return result;
}

unint64_t sub_2560670A0()
{
  unint64_t result = qword_269F457D8;
  if (!qword_269F457D8)
  {
    sub_25606E6E0(255, &qword_269F45700, (uint64_t (*)(uint64_t))sub_2560667E0, MEMORY[0x263F1BAC8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F457D8);
  }
  return result;
}

void sub_256067128()
{
  if (!qword_269F457E0)
  {
    sub_256066DAC();
    sub_255F85944();
    unint64_t v0 = sub_256176B88();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F457E0);
    }
  }
}

unint64_t sub_256067190()
{
  unint64_t result = qword_269F457F0;
  if (!qword_269F457F0)
  {
    sub_256066600();
    sub_256067240();
    sub_256067354((unint64_t *)&qword_269F44178, &qword_269F44168, MEMORY[0x263F1A158]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F457F0);
  }
  return result;
}

unint64_t sub_256067240()
{
  unint64_t result = qword_269F457F8;
  if (!qword_269F457F8)
  {
    sub_2560669B4(255, &qword_269F456E8, (void (*)(uint64_t))sub_2560666B8);
    sub_256067784(&qword_269F45800, (void (*)(uint64_t))sub_2560666B8, (void (*)(void))sub_256067320, (void (*)(void))sub_25605E628);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F457F8);
  }
  return result;
}

uint64_t sub_256067320()
{
  return sub_25606D7C8(&qword_269F45808, (void (*)(uint64_t))sub_25606674C);
}

uint64_t sub_256067354(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(void, uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_256067734(255, a2, MEMORY[0x263F1B440], MEMORY[0x263F1B420], a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2560673AC()
{
  return sub_25606D7C8(&qword_269F45810, (void (*)(uint64_t))sub_256067128);
}

void sub_2560673E0()
{
  if (!qword_269F45818)
  {
    sub_256067494();
    sub_25606D7C8(&qword_269F45850, (void (*)(uint64_t))sub_256067494);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F45818);
    }
  }
}

void sub_256067494()
{
  if (!qword_269F45820)
  {
    sub_256067548(255);
    sub_256067784(&qword_269F45840, sub_256067548, (void (*)(void))sub_256067810, (void (*)(void))sub_255F73540);
    unint64_t v0 = sub_256175E78();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45820);
    }
  }
}

void sub_256067548(uint64_t a1)
{
}

void sub_25606757C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    unint64_t v6 = sub_2561761B8();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_2560675F0()
{
  if (!qword_269F45830)
  {
    sub_256067684();
    sub_256067734(255, (unint64_t *)&qword_269F42BD0, MEMORY[0x263F1B440], MEMORY[0x263F1B420], MEMORY[0x263F1A180]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45830);
    }
  }
}

void sub_256067684()
{
  if (!qword_269F45838)
  {
    sub_256067734(255, (unint64_t *)&qword_269F42ED0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
    sub_255F738A0();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F45838);
    }
  }
}

void sub_256067734(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_256067784(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_256067810()
{
  unint64_t result = qword_269F45848;
  if (!qword_269F45848)
  {
    sub_2560675F0();
    sub_256067734(255, (unint64_t *)&qword_269F42ED0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
    sub_255F738A0();
    swift_getOpaqueTypeConformance2();
    sub_256067354((unint64_t *)&qword_269F42C00, (unint64_t *)&qword_269F42BD0, MEMORY[0x263F1A180]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45848);
  }
  return result;
}

unint64_t sub_25606791C()
{
  unint64_t result = qword_269F45858;
  if (!qword_269F45858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45858);
  }
  return result;
}

uint64_t sub_256067970()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *_s13EntryFullViewVwCP(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_25606E6E0(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_256176AA8();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v103 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
      uint64_t v101 = v8;
      if (v103(a2, 1, v7))
      {
        sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      uint64_t v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v12 = v11[5];
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = sub_256176158();
      uint64_t v102 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
      v102(v13, v14, v15);
      *((unsigned char *)a1 + v11[6]) = *((unsigned char *)a2 + v11[6]);
      uint64_t v16 = v11[7];
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = sub_256175D98();
      uint64_t v100 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
      v100(v17, v18, v19);
      uint64_t v20 = v11[8];
      id v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      if (v103((uint64_t *)((char *)a2 + v20), 1, v7))
      {
        sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v21, v22, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v21, 0, 1, v7);
      }
      uint64_t v24 = _s6StylesV8TimelineVMa(0);
      v102(&v21[*(int *)(v24 + 20)], &v22[*(int *)(v24 + 20)], v15);
      uint64_t v25 = v11[9];
      uint64_t v26 = (char *)a1 + v25;
      uint64_t v27 = (char *)a2 + v25;
      if (v103((uint64_t *)((char *)a2 + v25), 1, v7))
      {
        sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v26, v27, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v26, 0, 1, v7);
      }
      uint64_t v29 = _s6StylesV6NoDataVMa(0);
      v102(&v26[*(int *)(v29 + 20)], &v27[*(int *)(v29 + 20)], v15);
      v26[*(int *)(v29 + 24)] = v27[*(int *)(v29 + 24)];
      uint64_t v30 = v11[10];
      uint64_t v31 = (char *)a1 + v30;
      uint64_t v32 = (char *)a2 + v30;
      if (v103((uint64_t *)((char *)a2 + v30), 1, v7))
      {
        sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v31, v32, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v31, 0, 1, v7);
      }
      uint64_t v34 = _s6StylesV11PlaceholderVMa(0);
      v102(&v31[*(int *)(v34 + 20)], &v32[*(int *)(v34 + 20)], v15);
      uint64_t v35 = v11[11];
      uint64_t v36 = (char *)a1 + v35;
      uint64_t v37 = (char *)a2 + v35;
      if (v103((uint64_t *)((char *)a2 + v35), 1, v7))
      {
        sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v36, v37, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v36, 0, 1, v7);
      }
      uint64_t v39 = _s6StylesV6SymbolVMa(0);
      v102(&v36[*(int *)(v39 + 20)], &v37[*(int *)(v39 + 20)], v15);
      uint64_t v40 = v11[12];
      unint64_t v41 = (char *)a1 + v40;
      uint64_t v42 = (char *)a2 + v40;
      if (v103((uint64_t *)((char *)a2 + v40), 1, v7))
      {
        sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v41, v42, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v41, 0, 1, v7);
      }
      uint64_t v44 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v102(&v41[v44[5]], &v42[v44[5]], v15);
      v41[v44[6]] = v42[v44[6]];
      v100(&v41[v44[7]], &v42[v44[7]], v19);
      uint64_t v45 = v11[13];
      uint64_t v46 = (char *)a1 + v45;
      uint64_t v47 = (char *)a2 + v45;
      if (v103((uint64_t *)((char *)a2 + v45), 1, v7))
      {
        sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
        uint64_t v49 = v101;
      }
      else
      {
        uint64_t v49 = v101;
        (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v46, v47, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v46, 0, 1, v7);
      }
      uint64_t v50 = _s6StylesV5EmptyVMa(0);
      v102(&v46[*(int *)(v50 + 20)], &v47[*(int *)(v50 + 20)], v15);
      v46[*(int *)(v50 + 24)] = v47[*(int *)(v50 + 24)];
      uint64_t v51 = v11[14];
      uint64_t v52 = (char *)a1 + v51;
      uint64_t v53 = (char *)a2 + v51;
      if (v103((uint64_t *)((char *)a2 + v51), 1, v7))
      {
        sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v52, v53, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v52, 0, 1, v7);
      }
      uint64_t v55 = _s6StylesV5DailyVMa(0);
      v102(&v52[*(int *)(v55 + 20)], &v53[*(int *)(v55 + 20)], v15);
      v52[*(int *)(v55 + 24)] = v53[*(int *)(v55 + 24)];
      uint64_t v56 = v11[15];
      uint64_t v57 = (char *)a1 + v56;
      uint64_t v58 = (char *)a2 + v56;
      if (v103((uint64_t *)((char *)a2 + v56), 1, v7))
      {
        sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v57, v58, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v57, 0, 1, v7);
      }
      uint64_t v60 = _s6StylesV9MomentaryVMa(0);
      v102(&v57[*(int *)(v60 + 20)], &v58[*(int *)(v60 + 20)], v15);
      uint64_t v61 = v11[16];
      uint64_t v62 = (char *)a1 + v61;
      uint64_t v63 = (char *)a2 + v61;
      if (v103((uint64_t *)((char *)a2 + v61), 1, v7))
      {
        sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v62, v63, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v62, 0, 1, v7);
      }
      uint64_t v65 = _s6StylesV6HeaderVMa(0);
      v102(&v62[*(int *)(v65 + 20)], &v63[*(int *)(v65 + 20)], v15);
      uint64_t v66 = v11[17];
      uint64_t v67 = (char *)a1 + v66;
      char v68 = (char *)a2 + v66;
      if (v103((uint64_t *)((char *)a2 + v66), 1, v7))
      {
        sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v67, v68, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v67, 0, 1, v7);
      }
      uint64_t v70 = _s6StylesV11ChartButtonVMa(0);
      v102(&v67[*(int *)(v70 + 20)], &v68[*(int *)(v70 + 20)], v15);
      uint64_t v71 = v11[18];
      uint64_t v72 = (char *)a1 + v71;
      uint64_t v73 = (char *)a2 + v71;
      if (v103((uint64_t *)((char *)a2 + v71), 1, v7))
      {
        sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v72, v73, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v72, 0, 1, v7);
      }
      uint64_t v75 = _s6StylesV15LogButtonFooterVMa(0);
      v102(&v72[*(int *)(v75 + 20)], &v73[*(int *)(v75 + 20)], v15);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v76 = a3[5];
    unint64_t v77 = (uint64_t *)((char *)a1 + v76);
    uint64_t v78 = (uint64_t *)((char *)a2 + v76);
    sub_25606E6E0(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v79 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v79 - 8) + 16))(v77, v78, v79);
    }
    else
    {
      *unint64_t v77 = *v78;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v80 = a3[6];
    uint64_t v81 = a3[7];
    uint64_t v82 = (uint64_t *)((char *)a1 + v80);
    uint64_t v83 = (uint64_t *)((char *)a2 + v80);
    uint64_t v84 = v83[1];
    void *v82 = *v83;
    v82[1] = v84;
    uint64_t v85 = (uint64_t *)((char *)a1 + v81);
    uint64_t v86 = (uint64_t *)((char *)a2 + v81);
    uint64_t v87 = v86[1];
    *uint64_t v85 = *v86;
    v85[1] = v87;
    uint64_t v88 = a3[8];
    uint64_t v89 = a3[9];
    uint64_t v90 = (char *)a1 + v88;
    uint64_t v91 = (char *)a2 + v88;
    *uint64_t v90 = *v91;
    *((void *)v90 + 1) = *((void *)v91 + 1);
    uint64_t v92 = (uint64_t *)((char *)a1 + v89);
    uint64_t v93 = (uint64_t *)((char *)a2 + v89);
    sub_25606E6E0(0, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
    swift_retain();
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v94 = sub_256175F88();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v94 - 8) + 16))(v92, v93, v94);
    }
    else
    {
      *uint64_t v92 = *v93;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v95 = a3[10];
    unsigned __int8 v96 = (char *)a1 + v95;
    unsigned __int8 v97 = (char *)a2 + v95;
    uint64_t v98 = *(void *)v97;
    LOBYTE(v97) = v97[8];
    *(void *)unsigned __int8 v96 = v98;
    v96[8] = (char)v97;
  }
  swift_retain();
  return a1;
}

uint64_t _s13EntryFullViewVwxx(uint64_t a1, uint64_t a2)
{
  sub_25606E6E0(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256176AA8();
    uint64_t v5 = *(void *)(v4 - 8);
    unint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (!v6(a1, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    }
    uint64_t v7 = type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v8 = a1 + *(int *)(v7 + 20);
    uint64_t v9 = sub_256176158();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    uint64_t v11 = v8;
    uint64_t v12 = (int *)v7;
    v10(v11, v9);
    uint64_t v13 = a1 + *(int *)(v7 + 28);
    uint64_t v14 = sub_256175D98();
    uint64_t v44 = *(void (**)(uint64_t))(*(void *)(v14 - 8) + 8);
    uint64_t v45 = v14;
    v44(v13);
    uint64_t v15 = a1 + v12[8];
    if (!v6(v15, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v15, v4);
    }
    uint64_t v16 = _s6StylesV8TimelineVMa(0);
    v10(v15 + *(int *)(v16 + 20), v9);
    uint64_t v17 = a1 + v12[9];
    if (!v6(v17, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v17, v4);
    }
    uint64_t v18 = _s6StylesV6NoDataVMa(0);
    v10(v17 + *(int *)(v18 + 20), v9);
    uint64_t v19 = a1 + v12[10];
    if (!v6(v19, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v19, v4);
    }
    uint64_t v20 = _s6StylesV11PlaceholderVMa(0);
    v10(v19 + *(int *)(v20 + 20), v9);
    uint64_t v21 = a1 + v12[11];
    if (!v6(v21, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v21, v4);
    }
    uint64_t v22 = _s6StylesV6SymbolVMa(0);
    v10(v21 + *(int *)(v22 + 20), v9);
    uint64_t v23 = a1 + v12[12];
    if (!v6(v23, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v23, v4);
    }
    uint64_t v46 = v5;
    uint64_t v24 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v10(v23 + *(int *)(v24 + 20), v9);
    ((void (*)(uint64_t, uint64_t))v44)(v23 + *(int *)(v24 + 28), v45);
    uint64_t v25 = v12;
    uint64_t v26 = a1 + v12[13];
    if (!v6(v26, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v26, v4);
    }
    uint64_t v27 = _s6StylesV5EmptyVMa(0);
    v10(v26 + *(int *)(v27 + 20), v9);
    uint64_t v28 = a1 + v25[14];
    if (!v6(v28, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v28, v4);
    }
    uint64_t v29 = _s6StylesV5DailyVMa(0);
    v10(v28 + *(int *)(v29 + 20), v9);
    uint64_t v30 = a1 + v25[15];
    if (!v6(v30, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v30, v4);
    }
    uint64_t v31 = _s6StylesV9MomentaryVMa(0);
    v10(v30 + *(int *)(v31 + 20), v9);
    uint64_t v32 = a1 + v25[16];
    uint64_t v33 = v9;
    if (!v6(v32, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v32, v4);
    }
    uint64_t v34 = _s6StylesV6HeaderVMa(0);
    v10(v32 + *(int *)(v34 + 20), v9);
    uint64_t v35 = a1 + v25[17];
    if (!v6(v35, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v35, v4);
    }
    uint64_t v36 = _s6StylesV11ChartButtonVMa(0);
    v10(v35 + *(int *)(v36 + 20), v9);
    uint64_t v37 = a1 + v25[18];
    if (!v6(v37, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v37, v4);
    }
    uint64_t v38 = _s6StylesV15LogButtonFooterVMa(0);
    v10(v37 + *(int *)(v38 + 20), v33);
  }
  else
  {
    swift_release();
  }
  uint64_t v39 = a1 + *(int *)(a2 + 20);
  sub_25606E6E0(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v40 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v39, v40);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  uint64_t v41 = a1 + *(int *)(a2 + 36);
  sub_25606E6E0(0, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v42 = sub_256175F88();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
  }
  else
  {
    swift_release();
  }

  return swift_release();
}

void *_s13EntryFullViewVwcp(void *a1, void *a2, int *a3)
{
  sub_25606E6E0(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256176AA8();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v103 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48);
    uint64_t v100 = a3;
    uint64_t v101 = v7;
    if (v103(a2, 1, v6))
    {
      sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    uint64_t v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v10 = v9[5];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_256176158();
    uint64_t v14 = (void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    uint64_t v102 = *v14;
    (*v14)(v11, v12, v13);
    *((unsigned char *)a1 + v9[6]) = *((unsigned char *)a2 + v9[6]);
    uint64_t v15 = v9[7];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_256175D98();
    unsigned __int8 v99 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
    v99(v16, v17, v18);
    uint64_t v19 = v9[8];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    if (v103((void *)((char *)a2 + v19), 1, v6))
    {
      sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v20, v21, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v20, 0, 1, v6);
    }
    uint64_t v23 = _s6StylesV8TimelineVMa(0);
    v102(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
    uint64_t v24 = v9[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    if (v103((void *)((char *)a2 + v24), 1, v6))
    {
      sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v25, v26, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v25, 0, 1, v6);
    }
    uint64_t v28 = _s6StylesV6NoDataVMa(0);
    v102(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
    v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
    uint64_t v29 = v9[10];
    uint64_t v30 = (char *)a1 + v29;
    uint64_t v31 = (char *)a2 + v29;
    if (v103((void *)((char *)a2 + v29), 1, v6))
    {
      sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v30, v31, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v30, 0, 1, v6);
    }
    uint64_t v33 = _s6StylesV11PlaceholderVMa(0);
    v102(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v13);
    uint64_t v34 = v9[11];
    uint64_t v35 = (char *)a1 + v34;
    uint64_t v36 = (char *)a2 + v34;
    if (v103((void *)((char *)a2 + v34), 1, v6))
    {
      sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v35, v36, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v35, 0, 1, v6);
    }
    uint64_t v38 = _s6StylesV6SymbolVMa(0);
    v102(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v13);
    uint64_t v39 = v9[12];
    uint64_t v40 = (char *)a1 + v39;
    uint64_t v41 = (char *)a2 + v39;
    if (v103((void *)((char *)a2 + v39), 1, v6))
    {
      sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v40, v41, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v40, 0, 1, v6);
    }
    uint64_t v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v102(&v40[v43[5]], &v41[v43[5]], v13);
    v40[v43[6]] = v41[v43[6]];
    v99(&v40[v43[7]], &v41[v43[7]], v18);
    uint64_t v44 = v9[13];
    uint64_t v45 = (char *)a1 + v44;
    uint64_t v46 = (char *)a2 + v44;
    if (v103((void *)((char *)a2 + v44), 1, v6))
    {
      sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
      uint64_t v48 = v101;
    }
    else
    {
      uint64_t v48 = v101;
      (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v45, v46, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v45, 0, 1, v6);
    }
    uint64_t v49 = _s6StylesV5EmptyVMa(0);
    v102(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v13);
    v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
    uint64_t v50 = v9[14];
    uint64_t v51 = (char *)a1 + v50;
    uint64_t v52 = (char *)a2 + v50;
    if (v103((void *)((char *)a2 + v50), 1, v6))
    {
      sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v52, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v6);
    }
    uint64_t v54 = _s6StylesV5DailyVMa(0);
    v102(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v13);
    v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
    uint64_t v55 = v9[15];
    uint64_t v56 = (char *)a1 + v55;
    uint64_t v57 = (char *)a2 + v55;
    if (v103((void *)((char *)a2 + v55), 1, v6))
    {
      sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v56, v57, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v6);
    }
    uint64_t v59 = _s6StylesV9MomentaryVMa(0);
    v102(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v13);
    uint64_t v60 = v9[16];
    uint64_t v61 = (char *)a1 + v60;
    uint64_t v62 = (char *)a2 + v60;
    if (v103((void *)((char *)a2 + v60), 1, v6))
    {
      sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v6);
    }
    uint64_t v64 = _s6StylesV6HeaderVMa(0);
    v102(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v13);
    uint64_t v65 = v9[17];
    uint64_t v66 = (char *)a1 + v65;
    uint64_t v67 = (char *)a2 + v65;
    if (v103((void *)((char *)a2 + v65), 1, v6))
    {
      sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v67, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v6);
    }
    uint64_t v69 = _s6StylesV11ChartButtonVMa(0);
    v102(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v13);
    uint64_t v70 = v9[18];
    uint64_t v71 = (char *)a1 + v70;
    uint64_t v72 = (char *)a2 + v70;
    if (v103((void *)((char *)a2 + v70), 1, v6))
    {
      sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v72, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v6);
    }
    uint64_t v74 = _s6StylesV15LogButtonFooterVMa(0);
    v102(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v13);
    swift_storeEnumTagMultiPayload();
    a3 = v100;
  }
  else
  {
    *a1 = *a2;
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v75 = a3[5];
  uint64_t v76 = (void *)((char *)a1 + v75);
  unint64_t v77 = (void *)((char *)a2 + v75);
  sub_25606E6E0(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v78 = sub_256175D98();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v78 - 8) + 16))(v76, v77, v78);
  }
  else
  {
    *uint64_t v76 = *v77;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v79 = a3[6];
  uint64_t v80 = a3[7];
  uint64_t v81 = (void *)((char *)a1 + v79);
  uint64_t v82 = (void *)((char *)a2 + v79);
  uint64_t v83 = v82[1];
  *uint64_t v81 = *v82;
  v81[1] = v83;
  uint64_t v84 = (void *)((char *)a1 + v80);
  uint64_t v85 = (void *)((char *)a2 + v80);
  uint64_t v86 = v85[1];
  *uint64_t v84 = *v85;
  v84[1] = v86;
  uint64_t v87 = a3[8];
  uint64_t v88 = a3[9];
  uint64_t v89 = (char *)a1 + v87;
  uint64_t v90 = (char *)a2 + v87;
  *uint64_t v89 = *v90;
  *((void *)v89 + 1) = *((void *)v90 + 1);
  uint64_t v91 = (void *)((char *)a1 + v88);
  uint64_t v92 = (void *)((char *)a2 + v88);
  sub_25606E6E0(0, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
  swift_retain();
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v93 = sub_256175F88();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v93 - 8) + 16))(v91, v92, v93);
  }
  else
  {
    *uint64_t v91 = *v92;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v94 = a3[10];
  uint64_t v95 = (char *)a1 + v94;
  unsigned __int8 v96 = (char *)a2 + v94;
  uint64_t v97 = *(void *)v96;
  LOBYTE(v96) = v96[8];
  *(void *)uint64_t v95 = v97;
  v95[8] = (char)v96;
  swift_retain();
  return a1;
}

void *_s13EntryFullViewVwca(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25606B138((uint64_t)a1, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    sub_25606E6E0(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, v6);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_256176AA8();
      uint64_t v8 = *(void *)(v7 - 8);
      long long v104 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48);
      uint64_t v102 = v8;
      if (v104(a2, 1, v7))
      {
        sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      uint64_t v10 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v11 = v10[5];
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_256176158();
      uint64_t v103 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      v103(v12, v13, v14);
      *((unsigned char *)a1 + v10[6]) = *((unsigned char *)a2 + v10[6]);
      uint64_t v15 = v10[7];
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = sub_256175D98();
      uint64_t v101 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
      v101(v16, v17, v18);
      uint64_t v19 = v10[8];
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      if (v104((void *)((char *)a2 + v19), 1, v7))
      {
        sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v20, v21, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v102 + 56))(v20, 0, 1, v7);
      }
      uint64_t v23 = _s6StylesV8TimelineVMa(0);
      v103(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v14);
      uint64_t v24 = v10[9];
      uint64_t v25 = (char *)a1 + v24;
      uint64_t v26 = (char *)a2 + v24;
      if (v104((void *)((char *)a2 + v24), 1, v7))
      {
        sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v25, v26, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v102 + 56))(v25, 0, 1, v7);
      }
      uint64_t v28 = _s6StylesV6NoDataVMa(0);
      v103(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v14);
      v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
      uint64_t v29 = v10[10];
      uint64_t v30 = (char *)a1 + v29;
      uint64_t v31 = (char *)a2 + v29;
      if (v104((void *)((char *)a2 + v29), 1, v7))
      {
        sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v30, v31, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v102 + 56))(v30, 0, 1, v7);
      }
      uint64_t v33 = _s6StylesV11PlaceholderVMa(0);
      v103(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v14);
      uint64_t v34 = v10[11];
      uint64_t v35 = (char *)a1 + v34;
      uint64_t v36 = (char *)a2 + v34;
      if (v104((void *)((char *)a2 + v34), 1, v7))
      {
        sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v35, v36, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v102 + 56))(v35, 0, 1, v7);
      }
      uint64_t v38 = _s6StylesV6SymbolVMa(0);
      v103(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v14);
      uint64_t v39 = v10[12];
      uint64_t v40 = (char *)a1 + v39;
      uint64_t v41 = (char *)a2 + v39;
      if (v104((void *)((char *)a2 + v39), 1, v7))
      {
        sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v40, v41, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v102 + 56))(v40, 0, 1, v7);
      }
      uint64_t v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v103(&v40[v43[5]], &v41[v43[5]], v14);
      v40[v43[6]] = v41[v43[6]];
      v101(&v40[v43[7]], &v41[v43[7]], v18);
      uint64_t v44 = v10[13];
      uint64_t v45 = (char *)a1 + v44;
      uint64_t v46 = (char *)a2 + v44;
      if (v104((void *)((char *)a2 + v44), 1, v7))
      {
        sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
        uint64_t v48 = v102;
      }
      else
      {
        uint64_t v48 = v102;
        (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v45, v46, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v102 + 56))(v45, 0, 1, v7);
      }
      uint64_t v49 = _s6StylesV5EmptyVMa(0);
      v103(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v14);
      v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
      uint64_t v50 = v10[14];
      uint64_t v51 = (char *)a1 + v50;
      uint64_t v52 = (char *)a2 + v50;
      if (v104((void *)((char *)a2 + v50), 1, v7))
      {
        sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v52, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v7);
      }
      uint64_t v54 = _s6StylesV5DailyVMa(0);
      v103(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v14);
      v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
      uint64_t v55 = v10[15];
      uint64_t v56 = (char *)a1 + v55;
      uint64_t v57 = (char *)a2 + v55;
      if (v104((void *)((char *)a2 + v55), 1, v7))
      {
        sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v56, v57, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v7);
      }
      uint64_t v59 = _s6StylesV9MomentaryVMa(0);
      v103(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v14);
      uint64_t v60 = v10[16];
      uint64_t v61 = (char *)a1 + v60;
      uint64_t v62 = (char *)a2 + v60;
      if (v104((void *)((char *)a2 + v60), 1, v7))
      {
        sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v7);
      }
      uint64_t v64 = _s6StylesV6HeaderVMa(0);
      v103(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v14);
      uint64_t v65 = v10[17];
      uint64_t v66 = (char *)a1 + v65;
      uint64_t v67 = (char *)a2 + v65;
      if (v104((void *)((char *)a2 + v65), 1, v7))
      {
        sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v67, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v7);
      }
      uint64_t v69 = _s6StylesV11ChartButtonVMa(0);
      v103(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v14);
      uint64_t v70 = v10[18];
      uint64_t v71 = (char *)a1 + v70;
      uint64_t v72 = (char *)a2 + v70;
      if (v104((void *)((char *)a2 + v70), 1, v7))
      {
        sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v72, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v7);
      }
      uint64_t v74 = _s6StylesV15LogButtonFooterVMa(0);
      v103(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v14);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v75 = a3[5];
    uint64_t v76 = (void *)((char *)a1 + v75);
    unint64_t v77 = (void *)((char *)a2 + v75);
    uint64_t v78 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    uint64_t v79 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25606B138((uint64_t)a1 + v75, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    sub_25606E6E0(0, &qword_269F47D00, v78, v79);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v80 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v80 - 8) + 16))(v76, v77, v80);
    }
    else
    {
      *uint64_t v76 = *v77;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v81 = a3[6];
  uint64_t v82 = (void *)((char *)a1 + v81);
  uint64_t v83 = (void *)((char *)a2 + v81);
  void *v82 = *v83;
  v82[1] = v83[1];
  swift_retain();
  swift_release();
  uint64_t v84 = a3[7];
  uint64_t v85 = (void *)((char *)a1 + v84);
  uint64_t v86 = (void *)((char *)a2 + v84);
  *uint64_t v85 = *v86;
  v85[1] = v86[1];
  swift_retain();
  swift_release();
  uint64_t v87 = a3[8];
  uint64_t v88 = (char *)a1 + v87;
  uint64_t v89 = (char *)a2 + v87;
  *uint64_t v88 = *v89;
  *((void *)v88 + 1) = *((void *)v89 + 1);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v90 = a3[9];
    uint64_t v91 = (void *)((char *)a1 + v90);
    uint64_t v92 = (void *)((char *)a2 + v90);
    uint64_t v93 = (uint64_t (*)(uint64_t))MEMORY[0x263F188C0];
    uint64_t v94 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25606B138((uint64_t)a1 + v90, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
    sub_25606E6E0(0, &qword_269F42CC0, v93, v94);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v95 = sub_256175F88();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v95 - 8) + 16))(v91, v92, v95);
    }
    else
    {
      *uint64_t v91 = *v92;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v96 = a3[10];
  uint64_t v97 = (char *)a1 + v96;
  uint64_t v98 = (char *)a2 + v96;
  uint64_t v99 = *(void *)v98;
  LOBYTE(v98) = v98[8];
  *(void *)uint64_t v97 = v99;
  v97[8] = (char)v98;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_25606B138(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_25606E6E0(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

char *_s13EntryFullViewVwtk(char *a1, char *a2, int *a3)
{
  sub_25606E6E0(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  uint64_t v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_256176AA8();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v98 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    uint64_t v95 = a3;
    uint64_t v96 = v9;
    if (v98(a2, 1, v8))
    {
      sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    uint64_t v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v12 = v11[5];
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    uint64_t v15 = sub_256176158();
    uint64_t v16 = (void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
    uint64_t v97 = *v16;
    (*v16)(v13, v14, v15);
    a1[v11[6]] = a2[v11[6]];
    uint64_t v17 = v11[7];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    uint64_t v20 = sub_256175D98();
    uint64_t v94 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32);
    v94(v18, v19, v20);
    uint64_t v21 = v11[8];
    uint64_t v22 = &a1[v21];
    uint64_t v23 = &a2[v21];
    if (v98(&a2[v21], 1, v8))
    {
      sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v22, v23, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v96 + 56))(v22, 0, 1, v8);
    }
    uint64_t v25 = _s6StylesV8TimelineVMa(0);
    v97(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
    uint64_t v26 = v11[9];
    uint64_t v27 = &a1[v26];
    uint64_t v28 = &a2[v26];
    if (v98(&a2[v26], 1, v8))
    {
      sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v27, v28, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v96 + 56))(v27, 0, 1, v8);
    }
    uint64_t v30 = _s6StylesV6NoDataVMa(0);
    v97(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
    v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
    uint64_t v31 = v11[10];
    uint64_t v32 = &a1[v31];
    uint64_t v33 = &a2[v31];
    if (v98(&a2[v31], 1, v8))
    {
      sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v32, v33, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v96 + 56))(v32, 0, 1, v8);
    }
    uint64_t v35 = _s6StylesV11PlaceholderVMa(0);
    v97(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
    uint64_t v36 = v11[11];
    uint64_t v37 = &a1[v36];
    uint64_t v38 = &a2[v36];
    if (v98(&a2[v36], 1, v8))
    {
      sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v37, v38, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v96 + 56))(v37, 0, 1, v8);
    }
    uint64_t v40 = _s6StylesV6SymbolVMa(0);
    v97(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
    uint64_t v41 = v11[12];
    uint64_t v42 = &a1[v41];
    uint64_t v43 = &a2[v41];
    if (v98(&a2[v41], 1, v8))
    {
      sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v42, v43, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v96 + 56))(v42, 0, 1, v8);
    }
    uint64_t v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v97(&v42[v45[5]], &v43[v45[5]], v15);
    v42[v45[6]] = v43[v45[6]];
    v94(&v42[v45[7]], &v43[v45[7]], v20);
    uint64_t v46 = v11[13];
    uint64_t v47 = &a1[v46];
    uint64_t v48 = &a2[v46];
    if (v98(&a2[v46], 1, v8))
    {
      sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
      uint64_t v50 = v96;
    }
    else
    {
      uint64_t v50 = v96;
      (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v47, v48, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v96 + 56))(v47, 0, 1, v8);
    }
    uint64_t v51 = _s6StylesV5EmptyVMa(0);
    v97(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
    v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
    uint64_t v52 = v11[14];
    uint64_t v53 = &a1[v52];
    uint64_t v54 = &a2[v52];
    if (v98(&a2[v52], 1, v8))
    {
      sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v53, v54, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v8);
    }
    uint64_t v56 = _s6StylesV5DailyVMa(0);
    v97(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
    v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
    uint64_t v57 = v11[15];
    uint64_t v58 = &a1[v57];
    uint64_t v59 = &a2[v57];
    if (v98(&a2[v57], 1, v8))
    {
      sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v58, v59, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v8);
    }
    uint64_t v61 = _s6StylesV9MomentaryVMa(0);
    v97(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
    uint64_t v62 = v11[16];
    uint64_t v63 = &a1[v62];
    uint64_t v64 = &a2[v62];
    if (v98(&a2[v62], 1, v8))
    {
      sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v63, v64, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v8);
    }
    uint64_t v66 = _s6StylesV6HeaderVMa(0);
    v97(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
    uint64_t v67 = v11[17];
    uint64_t v68 = &a1[v67];
    uint64_t v69 = &a2[v67];
    if (v98(&a2[v67], 1, v8))
    {
      sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v68, v69, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v8);
    }
    uint64_t v71 = _s6StylesV11ChartButtonVMa(0);
    v97(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
    uint64_t v72 = v11[18];
    uint64_t v73 = &a1[v72];
    uint64_t v74 = &a2[v72];
    if (v98(&a2[v72], 1, v8))
    {
      sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v73, v74, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v8);
    }
    uint64_t v76 = _s6StylesV15LogButtonFooterVMa(0);
    v97(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
    swift_storeEnumTagMultiPayload();
    a3 = v95;
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  uint64_t v77 = a3[5];
  uint64_t v78 = &a1[v77];
  uint64_t v79 = &a2[v77];
  sub_25606E6E0(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  uint64_t v81 = v80;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v82 = sub_256175D98();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 32))(v78, v79, v82);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v78, v79, *(void *)(*(void *)(v81 - 8) + 64));
  }
  uint64_t v83 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  *(_OWORD *)&a1[v83] = *(_OWORD *)&a2[v83];
  uint64_t v84 = a3[9];
  *(_OWORD *)&a1[a3[8]] = *(_OWORD *)&a2[a3[8]];
  uint64_t v85 = &a1[v84];
  uint64_t v86 = &a2[v84];
  sub_25606E6E0(0, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
  uint64_t v88 = v87;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v89 = sub_256175F88();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 32))(v85, v86, v89);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v85, v86, *(void *)(*(void *)(v88 - 8) + 64));
  }
  uint64_t v90 = a3[10];
  uint64_t v91 = &a1[v90];
  uint64_t v92 = &a2[v90];
  *(void *)uint64_t v91 = *(void *)v92;
  v91[8] = v92[8];
  return a1;
}

char *_s13EntryFullViewVwta(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25606B138((uint64_t)a1, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    sub_25606E6E0(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, v6);
    uint64_t v8 = v7;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_256176AA8();
      uint64_t v10 = *(void *)(v9 - 8);
      long long v112 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
      uint64_t v110 = v10;
      if (v112(a2, 1, v9))
      {
        sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(a1, a2, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
      }
      uint64_t v12 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v13 = v12[5];
      uint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      uint64_t v16 = sub_256176158();
      long long v111 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32);
      v111(v14, v15, v16);
      a1[v12[6]] = a2[v12[6]];
      uint64_t v17 = v12[7];
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      uint64_t v20 = sub_256175D98();
      long long v109 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32);
      v109(v18, v19, v20);
      uint64_t v21 = v12[8];
      uint64_t v22 = &a1[v21];
      uint64_t v23 = &a2[v21];
      if (v112(&a2[v21], 1, v9))
      {
        sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v22, v23, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v22, 0, 1, v9);
      }
      uint64_t v25 = _s6StylesV8TimelineVMa(0);
      v111(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v16);
      uint64_t v26 = v12[9];
      uint64_t v27 = &a1[v26];
      uint64_t v28 = &a2[v26];
      if (v112(&a2[v26], 1, v9))
      {
        sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v27, v28, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v27, 0, 1, v9);
      }
      uint64_t v30 = _s6StylesV6NoDataVMa(0);
      v111(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v16);
      v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
      uint64_t v31 = v12[10];
      uint64_t v32 = &a1[v31];
      uint64_t v33 = &a2[v31];
      if (v112(&a2[v31], 1, v9))
      {
        sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v32, v33, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v32, 0, 1, v9);
      }
      uint64_t v35 = _s6StylesV11PlaceholderVMa(0);
      v111(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v16);
      uint64_t v36 = v12[11];
      uint64_t v37 = &a1[v36];
      uint64_t v38 = &a2[v36];
      if (v112(&a2[v36], 1, v9))
      {
        sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v37, v38, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v37, 0, 1, v9);
      }
      uint64_t v40 = _s6StylesV6SymbolVMa(0);
      v111(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v16);
      uint64_t v41 = v12[12];
      uint64_t v42 = &a1[v41];
      uint64_t v43 = &a2[v41];
      if (v112(&a2[v41], 1, v9))
      {
        sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v42, v43, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v42, 0, 1, v9);
      }
      uint64_t v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v111(&v42[v45[5]], &v43[v45[5]], v16);
      v42[v45[6]] = v43[v45[6]];
      v109(&v42[v45[7]], &v43[v45[7]], v20);
      uint64_t v46 = v12[13];
      uint64_t v47 = &a1[v46];
      uint64_t v48 = &a2[v46];
      if (v112(&a2[v46], 1, v9))
      {
        sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
        uint64_t v50 = v110;
      }
      else
      {
        uint64_t v50 = v110;
        (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v47, v48, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v47, 0, 1, v9);
      }
      uint64_t v51 = _s6StylesV5EmptyVMa(0);
      v111(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v16);
      v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
      uint64_t v52 = v12[14];
      uint64_t v53 = &a1[v52];
      uint64_t v54 = &a2[v52];
      if (v112(&a2[v52], 1, v9))
      {
        sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v53, v54, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v9);
      }
      uint64_t v56 = _s6StylesV5DailyVMa(0);
      v111(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v16);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      uint64_t v57 = v12[15];
      uint64_t v58 = &a1[v57];
      uint64_t v59 = &a2[v57];
      if (v112(&a2[v57], 1, v9))
      {
        sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v58, v59, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v9);
      }
      uint64_t v61 = _s6StylesV9MomentaryVMa(0);
      v111(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v16);
      uint64_t v62 = v12[16];
      uint64_t v63 = &a1[v62];
      uint64_t v64 = &a2[v62];
      if (v112(&a2[v62], 1, v9))
      {
        sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v63, v64, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v9);
      }
      uint64_t v66 = _s6StylesV6HeaderVMa(0);
      v111(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v16);
      uint64_t v67 = v12[17];
      uint64_t v68 = &a1[v67];
      uint64_t v69 = &a2[v67];
      if (v112(&a2[v67], 1, v9))
      {
        sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v68, v69, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v9);
      }
      uint64_t v71 = _s6StylesV11ChartButtonVMa(0);
      v111(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v16);
      uint64_t v72 = v12[18];
      uint64_t v73 = &a1[v72];
      uint64_t v74 = &a2[v72];
      if (v112(&a2[v72], 1, v9))
      {
        sub_25606E6E0(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v73, v74, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v9);
      }
      uint64_t v76 = _s6StylesV15LogButtonFooterVMa(0);
      v111(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    uint64_t v77 = a3[5];
    uint64_t v78 = &a1[v77];
    uint64_t v79 = &a2[v77];
    uint64_t v80 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    uint64_t v81 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25606B138((uint64_t)&a1[v77], &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    sub_25606E6E0(0, &qword_269F47D00, v80, v81);
    uint64_t v83 = v82;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v84 = sub_256175D98();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 32))(v78, v79, v84);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v78, v79, *(void *)(*(void *)(v83 - 8) + 64));
    }
  }
  uint64_t v85 = a3[6];
  uint64_t v86 = &a1[v85];
  uint64_t v87 = &a2[v85];
  uint64_t v89 = *(void *)v87;
  uint64_t v88 = *((void *)v87 + 1);
  *(void *)uint64_t v86 = v89;
  *((void *)v86 + 1) = v88;
  swift_release();
  uint64_t v90 = a3[7];
  uint64_t v91 = &a1[v90];
  uint64_t v92 = &a2[v90];
  *(void *)uint64_t v91 = *(void *)v92;
  *((void *)v91 + 1) = *((void *)v92 + 1);
  swift_release();
  uint64_t v93 = a3[8];
  uint64_t v94 = &a1[v93];
  uint64_t v95 = &a2[v93];
  *uint64_t v94 = *v95;
  *((void *)v94 + 1) = *((void *)v95 + 1);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v96 = a3[9];
    uint64_t v97 = &a1[v96];
    uint64_t v98 = &a2[v96];
    uint64_t v99 = (uint64_t (*)(uint64_t))MEMORY[0x263F188C0];
    uint64_t v100 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25606B138((uint64_t)&a1[v96], &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
    sub_25606E6E0(0, &qword_269F42CC0, v99, v100);
    uint64_t v102 = v101;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v103 = sub_256175F88();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 32))(v97, v98, v103);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v97, v98, *(void *)(*(void *)(v102 - 8) + 64));
    }
  }
  uint64_t v104 = a3[10];
  uint64_t v105 = &a1[v104];
  long long v106 = &a2[v104];
  uint64_t v107 = *(void *)v106;
  LOBYTE(v106) = v106[8];
  *(void *)uint64_t v105 = v107;
  v105[8] = (char)v106;
  swift_release();
  return a1;
}

uint64_t _s13EntryFullViewVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25606D194);
}

uint64_t sub_25606D194(uint64_t a1, uint64_t a2, int *a3)
{
  sub_25606E6E0(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  sub_25606E6E0(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + a3[5];
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v14 = *(void *)(a1 + a3[6] + 8);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    return (v14 + 1);
  }
  else
  {
    sub_25606E6E0(0, &qword_269F42CC8, MEMORY[0x263F188C0], MEMORY[0x263F185D0]);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[9];
    return v16(v18, a2, v17);
  }
}

uint64_t _s13EntryFullViewVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25606D3BC);
}

void sub_25606D3BC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_25606E6E0(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    v11(v12, a2, a2, v10);
    return;
  }
  sub_25606E6E0(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + a4[5];
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[6] + 8) = (a2 - 1);
  }
  else
  {
    sub_25606E6E0(0, &qword_269F42CC8, MEMORY[0x263F188C0], MEMORY[0x263F185D0]);
    uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a4[9];
    v16(v18, a2, a2, v17);
  }
}

void sub_25606D5D0()
{
  sub_25606E6E0(319, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (v0 <= 0x3F)
  {
    sub_25606E6E0(319, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    if (v1 <= 0x3F)
    {
      sub_25606E6E0(319, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_25606D780()
{
  return sub_25606D7C8(&qword_269F45878, (void (*)(uint64_t))sub_25606D810);
}

uint64_t sub_25606D7C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_25606D810()
{
  if (!qword_269F45880)
  {
    sub_2561760D8();
    sub_256065B84();
    sub_25606D7C8(&qword_269F45860, (void (*)(uint64_t))sub_256065B84);
    unint64_t v0 = sub_2561761E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45880);
    }
  }
}

ValueMetadata *_s15ScrollOffsetKeyVMa()
{
  return &_s15ScrollOffsetKeyVN;
}

uint64_t sub_25606D8D0@<X0>(uint64_t (*a1)()@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for StateOfMindTimeline.EntryFullView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_256062AE8(a1, v6, a2);
}

void sub_25606D950()
{
  if (!qword_269F45888)
  {
    sub_25606E6E0(255, &qword_269F45700, (uint64_t (*)(uint64_t))sub_2560667E0, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_256176048();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45888);
    }
  }
}

uint64_t sub_25606D9E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

uint64_t sub_25606DA5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t objectdestroyTm_13()
{
  uint64_t v1 = type metadata accessor for StateOfMindTimeline.EntryFullView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = v0 + ((v2 + 16) & ~v2);
  sub_25606E6E0(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256176AA8();
    uint64_t v5 = *(void *)(v4 - 8);
    uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (!v6(v3, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    }
    uint64_t v7 = type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v8 = v3 + *(int *)(v7 + 20);
    uint64_t v9 = sub_256176158();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    uint64_t v11 = v8;
    uint64_t v12 = (int *)v7;
    v10(v11, v9);
    uint64_t v13 = v3 + *(int *)(v7 + 28);
    uint64_t v14 = sub_256175D98();
    uint64_t v44 = *(void (**)(uint64_t))(*(void *)(v14 - 8) + 8);
    uint64_t v45 = v14;
    v44(v13);
    uint64_t v15 = v3 + v12[8];
    if (!v6(v15, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v15, v4);
    }
    uint64_t v16 = _s6StylesV8TimelineVMa(0);
    v10(v15 + *(int *)(v16 + 20), v9);
    uint64_t v17 = v3 + v12[9];
    if (!v6(v17, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v17, v4);
    }
    uint64_t v18 = _s6StylesV6NoDataVMa(0);
    v10(v17 + *(int *)(v18 + 20), v9);
    uint64_t v19 = v3 + v12[10];
    if (!v6(v19, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v19, v4);
    }
    uint64_t v20 = _s6StylesV11PlaceholderVMa(0);
    v10(v19 + *(int *)(v20 + 20), v9);
    uint64_t v21 = v3 + v12[11];
    if (!v6(v21, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v21, v4);
    }
    uint64_t v22 = _s6StylesV6SymbolVMa(0);
    v10(v21 + *(int *)(v22 + 20), v9);
    uint64_t v23 = v3 + v12[12];
    if (!v6(v23, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v23, v4);
    }
    uint64_t v46 = v5;
    uint64_t v24 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v10(v23 + *(int *)(v24 + 20), v9);
    ((void (*)(uint64_t, uint64_t))v44)(v23 + *(int *)(v24 + 28), v45);
    uint64_t v25 = v12;
    uint64_t v26 = v3 + v12[13];
    if (!v6(v26, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v26, v4);
    }
    uint64_t v27 = _s6StylesV5EmptyVMa(0);
    v10(v26 + *(int *)(v27 + 20), v9);
    uint64_t v28 = v3 + v25[14];
    if (!v6(v28, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v28, v4);
    }
    uint64_t v29 = _s6StylesV5DailyVMa(0);
    v10(v28 + *(int *)(v29 + 20), v9);
    uint64_t v30 = v3 + v25[15];
    if (!v6(v30, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v30, v4);
    }
    uint64_t v31 = _s6StylesV9MomentaryVMa(0);
    v10(v30 + *(int *)(v31 + 20), v9);
    uint64_t v32 = v3 + v25[16];
    uint64_t v33 = v9;
    if (!v6(v32, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v32, v4);
    }
    uint64_t v34 = _s6StylesV6HeaderVMa(0);
    v10(v32 + *(int *)(v34 + 20), v9);
    uint64_t v35 = v3 + v25[17];
    if (!v6(v35, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v35, v4);
    }
    uint64_t v36 = _s6StylesV11ChartButtonVMa(0);
    v10(v35 + *(int *)(v36 + 20), v9);
    uint64_t v37 = v3 + v25[18];
    if (!v6(v37, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v37, v4);
    }
    uint64_t v38 = _s6StylesV15LogButtonFooterVMa(0);
    v10(v37 + *(int *)(v38 + 20), v33);
  }
  else
  {
    swift_release();
  }
  uint64_t v39 = v3 + *(int *)(v1 + 20);
  sub_25606E6E0(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v40 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v39, v40);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  uint64_t v41 = v3 + *(int *)(v1 + 36);
  sub_25606E6E0(0, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v42 = sub_256175F88();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
  }
  else
  {
    swift_release();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_25606E2DC()
{
  type metadata accessor for StateOfMindTimeline.EntryFullView();

  return sub_256064C8C();
}

uint64_t sub_25606E34C()
{
  return sub_256064D1C(*(void *)(v0 + 16));
}

uint64_t sub_25606E358@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for StateOfMindTimeline.EntryFullView();

  return sub_256065854(a1);
}

uint64_t sub_25606E3C8()
{
  return j__swift_retain(v0);
}

uint64_t sub_25606E3D0@<X0>(uint64_t a1@<X8>)
{
  return sub_256064F00(*(void *)(v1 + 16), a1);
}

uint64_t sub_25606E3DC()
{
  type metadata accessor for StateOfMindTimeline.EntryFullView();

  return sub_256065770();
}

uint64_t sub_25606E43C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_25606E4AC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_25606E504@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for StateOfMindTimeline.EntryFullView();

  return sub_256064A4C(a1);
}

uint64_t sub_25606E584(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25606E5EC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25606E64C(uint64_t a1, uint64_t a2)
{
  sub_25606757C(0, &qword_269F45720, (void (*)(uint64_t))sub_25606690C, MEMORY[0x263F1A470]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_25606E6E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

id sub_25606E750@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v37 = a3;
  uint64_t v5 = sub_2561761B8();
  uint64_t v38 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v32 - v6;
  uint64_t v8 = sub_2561761B8();
  uint64_t v39 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v32 - v9;
  uint64_t v11 = sub_2561761B8();
  uint64_t v33 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v32 - v12;
  uint64_t v32 = v14;
  uint64_t v15 = sub_2561761B8();
  uint64_t v35 = *(void *)(v15 - 8);
  uint64_t v36 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v34 = (char *)&v32 - v16;
  sub_2561778E8();
  sub_2561772D8();
  sub_256176D78();
  uint64_t v17 = a1[3];
  uint64_t v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_255FD83F4(v17, v18);
  uint64_t v46 = a2;
  uint64_t v47 = MEMORY[0x263F19100];
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_256177338();
  uint64_t v20 = v5;
  uint64_t v21 = v13;
  (*(void (**)(char *, uint64_t))(v38 + 8))(v7, v20);
  sub_256176D78();
  uint64_t v22 = a1[3];
  uint64_t v23 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_255FD7CE8(v22, v23);
  uint64_t v24 = MEMORY[0x263F18C10];
  uint64_t v44 = WitnessTable;
  uint64_t v45 = MEMORY[0x263F18C10];
  uint64_t v25 = swift_getWitnessTable();
  sub_256177338();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v8);
  sub_256176DA8();
  id result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    uint64_t v27 = result;
    MobileGestalt_get_homeButtonType();

    uint64_t v42 = v25;
    uint64_t v43 = v24;
    uint64_t v28 = v32;
    uint64_t v29 = swift_getWitnessTable();
    uint64_t v30 = v34;
    sub_256177338();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v21, v28);
    sub_2561778E8();
    uint64_t v40 = v29;
    uint64_t v41 = v24;
    uint64_t v31 = v36;
    swift_getWitnessTable();
    sub_2561772D8();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v30, v31);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25606EC54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for LoggingFlowBlendMode();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (uint64_t *)((char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_2561762B8();
  uint64_t v6 = v5 - 8;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (_OWORD *)((char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_25606EF0C(0);
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (char *)v8 + *(int *)(v6 + 28);
  uint64_t v14 = *MEMORY[0x263F19860];
  uint64_t v15 = sub_2561766E8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v13, v14, v15);
  __asm { FMOV            V0.2D, #14.0 }
  *uint64_t v8 = _Q0;
  id v21 = objc_msgSend(self, sel_systemGray6Color);
  uint64_t v22 = MEMORY[0x25A29FE80](v21);
  sub_25606EFA0((uint64_t)v8, (uint64_t)v12);
  *(void *)&v12[*(int *)(v10 + 44)] = v22;
  sub_25606F004((uint64_t)v8);
  *uint64_t v4 = swift_getKeyPath();
  sub_25606F740(0, &qword_269F47D00, MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  sub_25606F068(0, &qword_269F45898, sub_25606EF0C, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
  sub_25606F0DC((uint64_t)v4, a1 + *(int *)(v23 + 36), (uint64_t (*)(void))type metadata accessor for LoggingFlowBlendMode);
  return sub_25606F0DC((uint64_t)v12, a1, (uint64_t (*)(void))sub_25606EF0C);
}

uint64_t type metadata accessor for LoggingFlowBlendMode()
{
  uint64_t result = qword_269F458A0;
  if (!qword_269F458A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_25606EF0C(uint64_t a1)
{
}

void sub_25606EF40()
{
  if (!qword_269F42BD0)
  {
    unint64_t v0 = sub_256176B78();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F42BD0);
    }
  }
}

uint64_t sub_25606EFA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2561762B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25606F004(uint64_t a1)
{
  uint64_t v2 = sub_2561762B8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_25606F068(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    unint64_t v6 = sub_2561761B8();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_25606F0DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t *sub_25606F144(uint64_t *a1, uint64_t *a2)
{
  sub_25606F740(0, &qword_269F47D00, MEMORY[0x263F185C8]);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_256175D98();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_25606F268(uint64_t a1)
{
  sub_25606F740(0, &qword_269F47D00, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_256175D98();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_release();
  }
}

void *sub_25606F324(void *a1, void *a2)
{
  sub_25606F740(0, &qword_269F47D00, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256175D98();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_25606F3F8(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_255F9F6FC((uint64_t)a1);
    sub_25606F740(0, &qword_269F47D00, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_25606F4DC(void *a1, const void *a2)
{
  sub_25606F740(0, &qword_269F47D00, MEMORY[0x263F185C8]);
  uint64_t v5 = v4;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256175D98();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
  }
  return a1;
}

void *sub_25606F5B8(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    sub_255F9F6FC((uint64_t)a1);
    sub_25606F740(0, &qword_269F47D00, MEMORY[0x263F185C8]);
    uint64_t v5 = v4;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_256175D98();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_25606F6A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25606F6B8);
}

uint64_t sub_25606F6B8(uint64_t a1, uint64_t a2)
{
  sub_25606F740(0, &qword_269F42B48, MEMORY[0x263F185D0]);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

void sub_25606F740(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_256175D98();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_25606F7A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25606F7B4);
}

uint64_t sub_25606F7B4(uint64_t a1, uint64_t a2)
{
  sub_25606F740(0, &qword_269F42B48, MEMORY[0x263F185D0]);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

void sub_25606F840()
{
  sub_25606F740(319, &qword_269F47D00, MEMORY[0x263F185C8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_25606F8E8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25606F904@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v25 = a2;
  uint64_t v2 = sub_256175D98();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v23 = sub_256177958();
  uint64_t v9 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25606F068(0, &qword_269F458B0, (void (*)(uint64_t))sub_25606FC24, MEMORY[0x263F190D8]);
  uint64_t v13 = v12 - 8;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v22 - v14;
  sub_25611A114((uint64_t)v8);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, *MEMORY[0x263F184F8], v2);
  char v16 = sub_256175D88();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v3 + 8);
  v17(v6, v2);
  v17(v8, v2);
  uint64_t v18 = (unsigned int *)MEMORY[0x263F1B968];
  if ((v16 & 1) == 0) {
    uint64_t v18 = (unsigned int *)MEMORY[0x263F1B950];
  }
  uint64_t v19 = v23;
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *v18, v23);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(&v15[*(int *)(v13 + 44)], v11, v19);
  sub_25606FC24();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v15, v24, v20);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v19);
  return sub_25606FCB8((uint64_t)v15, v25);
}

uint64_t sub_25606FC04()
{
  return sub_256175F18();
}

void sub_25606FC24()
{
  if (!qword_269F458B8)
  {
    type metadata accessor for LoggingFlowBlendMode();
    sub_25606FE28(&qword_269F45680, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
    unint64_t v0 = sub_256176A38();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F458B8);
    }
  }
}

uint64_t sub_25606FCB8(uint64_t a1, uint64_t a2)
{
  sub_25606F068(0, &qword_269F458B0, (void (*)(uint64_t))sub_25606FC24, MEMORY[0x263F190D8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_25606FD50()
{
  unint64_t result = qword_269F458C0;
  if (!qword_269F458C0)
  {
    sub_25606F068(255, &qword_269F458B0, (void (*)(uint64_t))sub_25606FC24, MEMORY[0x263F190D8]);
    sub_25606FE28(&qword_269F458C8, (void (*)(uint64_t))sub_25606FC24);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F458C0);
  }
  return result;
}

uint64_t sub_25606FE28(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25606FE70()
{
  sub_255FF0E78();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_256175628();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256175618();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1) {
    return sub_25607057C((uint64_t)v2, (uint64_t (*)(void))sub_255FF0E78);
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  id v8 = objc_msgSend(self, sel_defaultWorkspace);
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = (void *)sub_2561755F8();
    sub_25613372C(MEMORY[0x263F8EE78]);
    uint64_t v11 = (void *)sub_256177DD8();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_openSensitiveURL_withOptions_, v10, v11);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unsigned char *storeEnumTagSinglePayload for NotificationAppBundle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x256070160);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationAppBundle()
{
  return &type metadata for NotificationAppBundle;
}

unint64_t sub_25607019C()
{
  unint64_t result = qword_269F458D0;
  if (!qword_269F458D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F458D0);
  }
  return result;
}

BOOL sub_2560701F0()
{
  uint64_t v0 = sub_256175B68();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v4 = (void *)sub_256177EA8();
  id v5 = (id)HKObjectForNanoPreferencesUserDefaultsKey();

  if (v5)
  {
    sub_2561784B8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v17, 0, sizeof(v17));
  }
  sub_256070518((uint64_t)v17, (uint64_t)&v18);
  if (!*((void *)&v19 + 1)) {
    goto LABEL_13;
  }
  sub_2560705DC();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_14;
  }
  uint64_t v6 = v16[1];
  uint64_t v7 = sub_256177EE8();
  if (*(void *)(v6 + 16) && (unint64_t v9 = sub_256137C88(v7, v8), (v10 & 1) != 0))
  {
    sub_255FB5934(*(void *)(v6 + 56) + 32 * v9, (uint64_t)&v18);
  }
  else
  {
    long long v18 = 0u;
    long long v19 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v19 + 1))
  {
LABEL_13:
    sub_25607057C((uint64_t)&v18, (uint64_t (*)(void))sub_2560405F4);
    goto LABEL_14;
  }
  if (swift_dynamicCast()) {
    return *(void *)&v17[0] != 0;
  }
LABEL_14:
  sub_256175B48();
  uint64_t v12 = sub_256175B58();
  os_log_type_t v13 = sub_256178238();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(void *)&long long v18 = v15;
    *(_DWORD *)uint64_t v14 = 136446210;
    *(void *)&v17[0] = sub_255FB29A8(0xD00000000000001BLL, 0x80000002561ABB20, (uint64_t *)&v18);
    sub_256178458();
    _os_log_impl(&dword_255F58000, v12, v13, "[%{public}s] Could not fetch Mindfulness App Settings from BulletinBoard.", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2A1E90](v15, -1, -1);
    MEMORY[0x25A2A1E90](v14, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return 0;
}

uint64_t sub_256070518(uint64_t a1, uint64_t a2)
{
  sub_2560405F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25607057C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_2560705DC()
{
  if (!qword_269F458D8)
  {
    unint64_t v0 = sub_256177DF8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F458D8);
    }
  }
}

uint64_t destroy for AdditionalContextTextField()
{
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for AdditionalContextTextField(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for AdditionalContextTextField(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for AdditionalContextTextField(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for AdditionalContextTextField()
{
  return &type metadata for AdditionalContextTextField;
}

uint64_t sub_2560707D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2560707F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v50 = a1;
  sub_256071B18();
  MEMORY[0x270FA5388](v3 - 8);
  id v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256072214(0);
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25607223C(0);
  uint64_t v11 = v10 - 8;
  MEMORY[0x270FA5388](v10);
  os_log_type_t v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560722C8(0, &qword_269F45978, sub_25607233C, (void (*)(uint64_t))sub_256072364);
  uint64_t v15 = v14 - 8;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v49 - v16;
  *(void *)id v5 = sub_256176678();
  *((void *)v5 + 1) = 0x4000000000000000;
  v5[16] = 0;
  sub_25607264C();
  sub_256070BD0(v2, &v5[*(int *)(v18 + 44)]);
  LOBYTE(v2) = sub_256176DD8();
  sub_256175D48();
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  sub_2560726E4((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(void))sub_256071B18);
  uint64_t v27 = &v9[*(int *)(v7 + 44)];
  *uint64_t v27 = v2;
  *((void *)v27 + 1) = v20;
  *((void *)v27 + 2) = v22;
  *((void *)v27 + 3) = v24;
  *((void *)v27 + 4) = v26;
  v27[40] = 0;
  sub_25607274C((uint64_t)v5, (uint64_t (*)(void))sub_256071B18);
  LOBYTE(v7) = sub_256176D78();
  sub_256175D48();
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  sub_2560726E4((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(void))sub_256072214);
  uint64_t v36 = &v13[*(int *)(v11 + 44)];
  char *v36 = v7;
  *((void *)v36 + 1) = v29;
  *((void *)v36 + 2) = v31;
  *((void *)v36 + 3) = v33;
  *((void *)v36 + 4) = v35;
  v36[40] = 0;
  sub_25607274C((uint64_t)v9, (uint64_t (*)(void))sub_256072214);
  uint64_t v37 = sub_2561778F8();
  sub_256116A98(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v17, 0.0, 1, 0.0, 1, v37, v38);
  uint64_t v39 = sub_2561778E8();
  uint64_t v41 = v40;
  uint64_t v42 = (uint64_t)&v17[*(int *)(v15 + 44)];
  sub_25606EC54(v42);
  sub_256072364();
  uint64_t v44 = (uint64_t *)(v42 + *(int *)(v43 + 36));
  *uint64_t v44 = v39;
  v44[1] = v41;
  sub_25607274C((uint64_t)v13, (uint64_t (*)(void))sub_25607223C);
  uint64_t v45 = v50;
  sub_2560727AC((uint64_t)v17, v50, (uint64_t)&qword_269F45978, (uint64_t)sub_25607233C, (uint64_t)sub_256072364, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_2560722C8);
  sub_256072820();
  uint64_t v47 = (void *)(v45 + *(int *)(v46 + 52));
  *uint64_t v47 = 0xD00000000000001ALL;
  v47[1] = 0x80000002561A4E80;
  return sub_256072C00((uint64_t)v17, (uint64_t)&qword_269F45978, (uint64_t)sub_25607233C, (uint64_t)sub_256072364, (uint64_t (*)(void))sub_2560722C8);
}

uint64_t sub_256070BD0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v113 = a2;
  sub_2560723F8(0, &qword_269F45958, MEMORY[0x263F1B570], MEMORY[0x263F1B558], MEMORY[0x263F1B5E8]);
  uint64_t v86 = v3;
  uint64_t v85 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v84 = (char *)&v82 - v4;
  sub_2560720F8();
  uint64_t v111 = v5;
  uint64_t v110 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v83 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256072094(0, &qword_269F45948, (uint64_t (*)(uint64_t))sub_2560720F8, MEMORY[0x263F8D8F0]);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v112 = (uint64_t)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v116 = (uint64_t)&v82 - v10;
  uint64_t v108 = sub_256175E58();
  uint64_t v107 = *(void *)(v108 - 8);
  MEMORY[0x270FA5388](v108);
  long long v106 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560723F8(0, &qword_269F45918, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1BAB0]);
  uint64_t v99 = v12;
  uint64_t v97 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v95 = (char *)&v82 - v13;
  sub_256071D94();
  uint64_t v98 = v14;
  uint64_t v96 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v94 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256071D00();
  uint64_t v100 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v102 = (char *)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560722C8(0, &qword_269F45900, (void (*)(uint64_t))sub_256071D00, MEMORY[0x263F1A470]);
  uint64_t v101 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v103 = (char *)&v82 - v19;
  sub_256071C4C();
  uint64_t v115 = v20;
  uint64_t v105 = *(void *)(v20 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v104 = (char *)&v82 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v114 = (char *)&v82 - v23;
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v24 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_2561755B8();
  uint64_t v27 = v26;
  swift_bridgeObjectRelease();

  uint64_t v123 = v25;
  uint64_t v124 = v27;
  uint64_t v93 = *(void **)a1;
  unint64_t v91 = *(void *)(a1 + 8);
  long long v125 = *(_OWORD *)(a1 + 16);
  long long v127 = *(_OWORD *)(a1 + 16);
  long long v126 = v93;
  unint64_t v117 = (unint64_t)v93;
  unint64_t v118 = v91;
  long long v119 = v127;
  sub_256072BB4(0, &qword_269F44350, MEMORY[0x263F8D310], MEMORY[0x263F1B750]);
  uint64_t v92 = v28;
  sub_256177748();
  uint64_t v90 = v120;
  unint64_t v89 = v121;
  uint64_t v87 = *((void *)&v122 + 1);
  uint64_t v88 = v122;
  id v29 = (id)qword_269F50C88;
  uint64_t v109 = a1;
  id v30 = v29;
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_2561755B8();
  unint64_t v33 = v32;
  swift_bridgeObjectRelease();

  uint64_t v120 = (void *)v31;
  unint64_t v121 = v33;
  sub_255F5CE90();
  uint64_t v34 = sub_256177028();
  uint64_t v36 = v35;
  char v38 = v37 & 1;
  id v39 = objc_msgSend(self, sel_secondaryLabelColor);
  uint64_t v120 = (void *)MEMORY[0x25A29FE80](v39);
  sub_256176FA8();
  uint64_t v40 = v34;
  uint64_t v41 = v109;
  sub_255F67B2C(v40, v36, v38);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v42 = v95;
  sub_256177968();
  uint64_t v43 = swift_allocObject();
  long long v44 = *(_OWORD *)(v41 + 16);
  *(_OWORD *)(v43 + 16) = *(_OWORD *)v41;
  *(_OWORD *)(v43 + 32) = v44;
  *(void *)(v43 + 48) = *(void *)(v41 + 32);
  sub_255F9A600((uint64_t)&v126);
  unint64_t v45 = v91;
  swift_retain();
  sub_255F9A73C((uint64_t)&v127);
  sub_256071E44();
  uint64_t v46 = v94;
  uint64_t v47 = v99;
  sub_2561771F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v42, v47);
  LODWORD(v25) = sub_256176A48();
  uint64_t v48 = v96;
  uint64_t v49 = v102;
  uint64_t v50 = v98;
  (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v102, v46, v98);
  *(_DWORD *)&v49[*(int *)(v100 + 36)] = v25;
  (*(void (**)(char *, uint64_t))(v48 + 8))(v46, v50);
  uint64_t v120 = &unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B6308);
  sub_256072BB4(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_256071FA0();
  uint64_t v51 = (uint64_t)v103;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  uint64_t v52 = (uint64_t)v49;
  unint64_t v53 = v45;
  sub_25607274C(v52, (uint64_t (*)(void))sub_256071D00);
  uint64_t v54 = v106;
  sub_256175E48();
  sub_256071EC8();
  uint64_t v55 = v104;
  sub_2561770C8();
  (*(void (**)(char *, uint64_t))(v107 + 8))(v54, v108);
  sub_256072C00(v51, (uint64_t)&qword_269F45900, (uint64_t)sub_256071D00, MEMORY[0x263F1A470], (uint64_t (*)(void))sub_2560722C8);
  uint64_t v56 = v105;
  uint64_t v57 = v114;
  (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v114, v55, v115);
  uint64_t v120 = v93;
  unint64_t v121 = v53;
  long long v122 = v125;
  MEMORY[0x25A2A01A0](&v117, v92);
  unint64_t v59 = v117;
  unint64_t v58 = v118;
  swift_bridgeObjectRelease();
  uint64_t v60 = HIBYTE(v58) & 0xF;
  if ((v58 & 0x2000000000000000) == 0) {
    uint64_t v60 = v59 & 0xFFFFFFFFFFFFLL;
  }
  if (v60)
  {
    uint64_t v61 = swift_allocObject();
    long long v62 = *(_OWORD *)(v41 + 16);
    *(_OWORD *)(v61 + 16) = *(_OWORD *)v41;
    *(_OWORD *)(v61 + 32) = v62;
    *(void *)(v61 + 48) = *(void *)(v41 + 32);
    sub_255F9A600((uint64_t)&v126);
    swift_retain();
    sub_255F9A73C((uint64_t)&v127);
    uint64_t v63 = v84;
    sub_2561775C8();
    uint64_t v64 = sub_2561774B8();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v66 = v85;
    uint64_t v67 = v83;
    uint64_t v68 = v86;
    (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v83, v63, v86);
    uint64_t v69 = v111;
    uint64_t v70 = (uint64_t *)&v67[*(int *)(v111 + 36)];
    *uint64_t v70 = KeyPath;
    v70[1] = v64;
    (*(void (**)(char *, uint64_t))(v66 + 8))(v63, v68);
    uint64_t v71 = (uint64_t)v67;
    uint64_t v72 = v116;
    sub_256072CBC(v71, v116);
    uint64_t v73 = 0;
  }
  else
  {
    uint64_t v73 = 1;
    uint64_t v72 = v116;
    uint64_t v69 = v111;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v110 + 56))(v72, v73, 1, v69);
  uint64_t v74 = *(void (**)(char *, char *, uint64_t))(v56 + 16);
  uint64_t v75 = v115;
  v74(v55, v57, v115);
  uint64_t v76 = MEMORY[0x263F8D8F0];
  uint64_t v77 = v112;
  sub_2560727AC(v72, v112, (uint64_t)&qword_269F45948, (uint64_t)sub_2560720F8, MEMORY[0x263F8D8F0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_256072094);
  uint64_t v78 = v113;
  v74(v113, v55, v75);
  sub_256071BAC();
  sub_2560727AC(v77, (uint64_t)&v78[*(int *)(v79 + 48)], (uint64_t)&qword_269F45948, (uint64_t)sub_2560720F8, v76, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_256072094);
  sub_256072C00(v116, (uint64_t)&qword_269F45948, (uint64_t)sub_2560720F8, v76, (uint64_t (*)(void))sub_256072094);
  uint64_t v80 = *(void (**)(char *, uint64_t))(v56 + 8);
  v80(v114, v75);
  sub_256072C00(v77, (uint64_t)&qword_269F45948, (uint64_t)sub_2560720F8, v76, (uint64_t (*)(void))sub_256072094);
  return ((uint64_t (*)(char *, uint64_t))v80)(v55, v75);
}

uint64_t sub_2560719B4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  long long v4 = *((_OWORD *)a1 + 1);
  long long v6 = *((_OWORD *)a1 + 1);
  uint64_t v5 = v1;
  sub_255F9A600((uint64_t)&v5);
  swift_retain();
  sub_255F9A73C((uint64_t)&v6);
  sub_256072BB4(0, &qword_269F44350, MEMORY[0x263F8D310], MEMORY[0x263F1B750]);
  MEMORY[0x25A2A01A0](&v3);
  sub_256177F88();
  sub_256177728();
  sub_255FFCD68((uint64_t)&v5);
  swift_release();
  return sub_256072D20((uint64_t)&v6);
}

uint64_t sub_256071A9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2561774E8();
  *a1 = result;
  return result;
}

uint64_t sub_256071ADC@<X0>(uint64_t a1@<X8>)
{
  return sub_2560707F0(a1);
}

void sub_256071B18()
{
  if (!qword_269F458E0)
  {
    sub_256072094(255, &qword_269F458E8, (uint64_t (*)(uint64_t))sub_256071BAC, MEMORY[0x263F1BAC8]);
    sub_25607218C();
    unint64_t v0 = sub_2561775F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F458E0);
    }
  }
}

void sub_256071BAC()
{
  if (!qword_269F458F0)
  {
    sub_256071C4C();
    sub_256072094(255, &qword_269F45948, (uint64_t (*)(uint64_t))sub_2560720F8, MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F458F0);
    }
  }
}

void sub_256071C4C()
{
  if (!qword_269F458F8)
  {
    sub_2560722C8(255, &qword_269F45900, (void (*)(uint64_t))sub_256071D00, MEMORY[0x263F1A470]);
    sub_256071EC8();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F458F8);
    }
  }
}

void sub_256071D00()
{
  if (!qword_269F45908)
  {
    sub_256071D94();
    sub_2560723F8(255, (unint64_t *)&qword_269F45928, MEMORY[0x263F19E50], MEMORY[0x263F19E40], MEMORY[0x263F1A180]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45908);
    }
  }
}

void sub_256071D94()
{
  if (!qword_269F45910)
  {
    sub_2560723F8(255, &qword_269F45918, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1BAB0]);
    sub_256071E44();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F45910);
    }
  }
}

unint64_t sub_256071E44()
{
  unint64_t result = qword_269F45920;
  if (!qword_269F45920)
  {
    sub_2560723F8(255, &qword_269F45918, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1BAB0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45920);
  }
  return result;
}

unint64_t sub_256071EC8()
{
  unint64_t result = qword_269F45930;
  if (!qword_269F45930)
  {
    sub_2560722C8(255, &qword_269F45900, (void (*)(uint64_t))sub_256071D00, MEMORY[0x263F1A470]);
    sub_256071FA0();
    sub_256072B44(&qword_269F42EA0, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45930);
  }
  return result;
}

unint64_t sub_256071FA0()
{
  unint64_t result = qword_269F45938;
  if (!qword_269F45938)
  {
    sub_256071D00();
    sub_2560723F8(255, &qword_269F45918, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1BAB0]);
    sub_256071E44();
    swift_getOpaqueTypeConformance2();
    sub_2560725E8((unint64_t *)&qword_269F45940, (unint64_t *)&qword_269F45928, MEMORY[0x263F19E50], MEMORY[0x263F19E40]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45938);
  }
  return result;
}

void sub_256072094(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2560720F8()
{
  if (!qword_269F45950)
  {
    sub_2560723F8(255, &qword_269F45958, MEMORY[0x263F1B570], MEMORY[0x263F1B558], MEMORY[0x263F1B5E8]);
    sub_255F85F4C();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45950);
    }
  }
}

unint64_t sub_25607218C()
{
  unint64_t result = qword_269F45960;
  if (!qword_269F45960)
  {
    sub_256072094(255, &qword_269F458E8, (uint64_t (*)(uint64_t))sub_256071BAC, MEMORY[0x263F1BAC8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45960);
  }
  return result;
}

void sub_256072214(uint64_t a1)
{
}

void sub_25607223C(uint64_t a1)
{
}

void sub_256072264(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_2560722C8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    unint64_t v6 = sub_2561761B8();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_25607233C(uint64_t a1)
{
}

void sub_256072364()
{
  if (!qword_269F45988)
  {
    sub_2560722C8(255, &qword_269F45898, sub_25606EF0C, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
    sub_256072448();
    unint64_t v0 = sub_256176888();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45988);
    }
  }
}

void sub_2560723F8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_256072448()
{
  unint64_t result = qword_269F45990;
  if (!qword_269F45990)
  {
    sub_2560722C8(255, &qword_269F45898, sub_25606EF0C, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
    sub_256072520();
    sub_256072B44(&qword_269F45680, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45990);
  }
  return result;
}

unint64_t sub_256072520()
{
  unint64_t result = qword_269F45998;
  if (!qword_269F45998)
  {
    sub_25606EF0C(255);
    sub_256072B44(&qword_269F42DD0, MEMORY[0x263F19048]);
    sub_2560725E8((unint64_t *)&qword_269F42C00, (unint64_t *)&qword_269F42BD0, MEMORY[0x263F1B440], MEMORY[0x263F1B420]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45998);
  }
  return result;
}

uint64_t sub_2560725E8(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2560723F8(255, a2, a3, a4, MEMORY[0x263F1A180]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_25607264C()
{
  if (!qword_269F459A0)
  {
    sub_256072094(255, &qword_269F458E8, (uint64_t (*)(uint64_t))sub_256071BAC, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_256176048();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F459A0);
    }
  }
}

uint64_t sub_2560726E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25607274C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2560727AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

void sub_256072820()
{
  if (!qword_269F459A8)
  {
    sub_2560722C8(255, &qword_269F45978, sub_25607233C, (void (*)(uint64_t))sub_256072364);
    sub_2560728D0();
    unint64_t v0 = sub_256177608();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F459A8);
    }
  }
}

unint64_t sub_2560728D0()
{
  unint64_t result = qword_269F459B0;
  if (!qword_269F459B0)
  {
    sub_2560722C8(255, &qword_269F45978, sub_25607233C, (void (*)(uint64_t))sub_256072364);
    sub_256072A1C(&qword_269F459B8, sub_25607233C, (void (*)(void))sub_2560729E0);
    sub_256072B44(&qword_269F459D8, (void (*)(uint64_t))sub_256072364);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F459B0);
  }
  return result;
}

uint64_t sub_2560729E0()
{
  return sub_256072A1C(&qword_269F459C0, sub_25607223C, (void (*)(void))sub_256072A9C);
}

uint64_t sub_256072A1C(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_256072A9C()
{
  unint64_t result = qword_269F459C8;
  if (!qword_269F459C8)
  {
    sub_256072214(255);
    sub_256072B44(&qword_269F459D0, (void (*)(uint64_t))sub_256071B18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F459C8);
  }
  return result;
}

uint64_t sub_256072B44(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL sub_256072B90()
{
  return *(void *)(v0 + 48) >= sub_256177F48();
}

void sub_256072BB4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_256072C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t objectdestroyTm_14()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_256072CAC()
{
  return sub_2560719B4((uint64_t *)(v0 + 16));
}

uint64_t sub_256072CBC(uint64_t a1, uint64_t a2)
{
  sub_2560720F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_256072D20(uint64_t a1)
{
  return a1;
}

uint64_t sub_256072D4C()
{
  return sub_256072B44(&qword_269F459E0, (void (*)(uint64_t))sub_256072820);
}

uint64_t destroy for StateOfMindLoggingRemindersSection(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StateOfMindLoggingRemindersSection(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  id v9 = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StateOfMindLoggingRemindersSection(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for StateOfMindLoggingRemindersSection(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  long long v5 = *(void **)(a1 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StateOfMindLoggingRemindersSection(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StateOfMindLoggingRemindersSection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindLoggingRemindersSection()
{
  return &type metadata for StateOfMindLoggingRemindersSection;
}

uint64_t sub_25607312C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_256073148@<X0>(uint64_t a1@<X8>)
{
  uint64_t v50 = a1;
  uint64_t v46 = sub_256176348();
  uint64_t v45 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v42 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256075220();
  uint64_t v43 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v41 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FFC224();
  uint64_t v47 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v40 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v52 = (char *)&v39 - v8;
  sub_2560752B8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v48 = v9;
  uint64_t v49 = v10;
  MEMORY[0x270FA5388](v9);
  long long v44 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = v1;
  uint64_t v12 = *(void *)(v1 + 40);
  uint64_t v56 = *(void *)(v1 + 32);
  uint64_t v57 = v12;
  unint64_t v39 = sub_255F5CE90();
  swift_bridgeObjectRetain();
  uint64_t v13 = MEMORY[0x263F8D310];
  uint64_t v14 = sub_256177028();
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  uint64_t v56 = v14;
  uint64_t v57 = v15;
  char v58 = v17 & 1;
  uint64_t v59 = v19;
  *(void *)&long long v55 = &unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B6338);
  sub_256075B28(0, (unint64_t *)&qword_26B2AD350, v13, MEMORY[0x263F8D488]);
  sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_255F67B2C(v14, v16, v18);
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(v51 + 104);
  uint64_t v56 = *(void *)(v51 + 96);
  uint64_t v57 = v20;
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_256177028();
  uint64_t v23 = v22;
  uint64_t v56 = v21;
  uint64_t v57 = v22;
  char v25 = v24 & 1;
  char v58 = v24 & 1;
  uint64_t v59 = v26;
  *(void *)&long long v55 = &unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B6378);
  sub_256177E28();
  swift_bridgeObjectRelease();
  uint64_t v27 = (uint64_t)v40;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_255F67B2C(v21, v23, v25);
  swift_bridgeObjectRelease();
  uint64_t v28 = v42;
  sub_256176338();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v30 = (uint64_t)v41;
  uint64_t v31 = (uint64_t *)&v41[*(int *)(v43 + 36)];
  sub_256075864(0, &qword_269F459F0, MEMORY[0x263F191A0], MEMORY[0x263F1A418]);
  uint64_t v33 = v45;
  uint64_t v34 = v46;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))((char *)v31 + *(int *)(v32 + 28), v28, v46);
  *uint64_t v31 = KeyPath;
  sub_256076128(v27, v30, (uint64_t (*)(void))sub_255FFC224);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v28, v34);
  sub_256076030(v27, (uint64_t (*)(void))sub_255FFC224);
  uint64_t v35 = v51;
  uint64_t v54 = v51;
  sub_256075864(0, &qword_269F45A00, (uint64_t (*)(uint64_t))sub_256075368, MEMORY[0x263F1BAC8]);
  sub_2560755C8();
  sub_2560759A0();
  sub_256075A28();
  uint64_t v36 = v44;
  sub_256177828();
  long long v55 = *(_OWORD *)(v35 + 16);
  sub_256075B28(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
  sub_256177598();
  uint64_t v53 = v35;
  sub_256075B98();
  uint64_t v37 = v48;
  sub_2561772B8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v36, v37);
}

uint64_t sub_2560737D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v111 = a2;
  sub_256075760();
  uint64_t v110 = v3;
  uint64_t v109 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  unint64_t v118 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  unint64_t v117 = (char *)&v89 - v6;
  sub_256075564();
  unint64_t v113 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560754D8();
  uint64_t v112 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256075454();
  uint64_t v108 = v14;
  uint64_t v120 = *(void **)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v97 = (char *)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560753EC();
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v116 = (uint64_t)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v121 = (uint64_t)&v89 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v119 = (uint64_t)&v89 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v122 = (uint64_t)&v89 - v23;
  char v24 = *(void **)(a1 + 8);
  uint64_t v107 = *(void *)a1;
  uint64_t v115 = type metadata accessor for NotificationSettingsModel();
  uint64_t v114 = sub_256075718((unint64_t *)&qword_269F43720, (void (*)(uint64_t))type metadata accessor for NotificationSettingsModel);
  char v25 = (void *)sub_2561760F8();
  swift_getKeyPath();
  sub_256176108();
  swift_release();

  uint64_t v124 = a1;
  sub_255FFC224();
  uint64_t v106 = v26;
  unint64_t v105 = sub_2560755C8();
  sub_2561776C8();
  swift_getKeyPath();
  swift_getKeyPath();
  id v27 = v24;
  id v93 = v27;
  sub_256175C88();

  swift_release();
  swift_release();
  char v28 = (char)v126;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v30 = swift_allocObject();
  *(unsigned char *)(v30 + 16) = v28;
  uint64_t v31 = *(void (**)(char *, char *, unint64_t))(v8 + 16);
  uint64_t v103 = v8 + 16;
  uint64_t v104 = v31;
  uint64_t v92 = v10;
  unint64_t v32 = v113;
  v31(v13, v10, v113);
  uint64_t v33 = v112;
  uint64_t v34 = (uint64_t *)&v13[v112[9]];
  *uint64_t v34 = KeyPath;
  v34[1] = (uint64_t)sub_255F9E950;
  v34[2] = v30;
  uint64_t v35 = *(void (**)(char *, unint64_t))(v8 + 8);
  uint64_t v101 = v8 + 8;
  uint64_t v102 = v35;
  v35(v10, v32);
  uint64_t v36 = (_OWORD *)swift_allocObject();
  long long v37 = *(_OWORD *)(a1 + 80);
  v36[5] = *(_OWORD *)(a1 + 64);
  v36[6] = v37;
  v36[7] = *(_OWORD *)(a1 + 96);
  long long v38 = *(_OWORD *)(a1 + 16);
  v36[1] = *(_OWORD *)a1;
  v36[2] = v38;
  long long v39 = *(_OWORD *)(a1 + 48);
  v36[3] = *(_OWORD *)(a1 + 32);
  v36[4] = v39;
  sub_256075FA8(a1);
  unint64_t v40 = sub_256075670();
  uint64_t v41 = v97;
  unint64_t v91 = v40;
  uint64_t v90 = v13;
  sub_2561770E8();
  swift_release();
  uint64_t v100 = sub_2560754D8;
  sub_256076030((uint64_t)v13, (uint64_t (*)(void))sub_2560754D8);
  long long v126 = &unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B63B8);
  sub_256075B28(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  uint64_t v99 = v42;
  unint64_t v98 = sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  long long v126 = v33;
  unint64_t v127 = v40;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v43 = v119;
  uint64_t v44 = v108;
  uint64_t v45 = v41;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  uint64_t v46 = (void (*)(char *, uint64_t))v120[1];
  ++v120;
  uint64_t v95 = v46;
  v46(v41, v44);
  uint64_t v94 = sub_2560753EC;
  sub_256076190(v43, v122, (uint64_t (*)(void))sub_2560753EC);
  uint64_t v47 = v93;
  uint64_t v48 = (void *)sub_2561760F8();
  swift_getKeyPath();
  sub_256176108();
  swift_release();

  uint64_t v123 = a1;
  uint64_t v49 = v92;
  sub_2561776C8();
  swift_getKeyPath();
  swift_getKeyPath();
  id v50 = v47;
  sub_256175C88();

  swift_release();
  swift_release();
  char v51 = (char)v126;
  uint64_t v52 = swift_getKeyPath();
  uint64_t v53 = swift_allocObject();
  *(unsigned char *)(v53 + 16) = v51;
  uint64_t v54 = (uint64_t)v90;
  unint64_t v55 = v113;
  v104(v90, v49, v113);
  uint64_t v56 = (uint64_t *)(v54 + v112[9]);
  *uint64_t v56 = v52;
  v56[1] = (uint64_t)sub_255FAFFF4;
  v56[2] = v53;
  v102(v49, v55);
  uint64_t v57 = (_OWORD *)swift_allocObject();
  long long v58 = *(_OWORD *)(a1 + 80);
  v57[5] = *(_OWORD *)(a1 + 64);
  v57[6] = v58;
  v57[7] = *(_OWORD *)(a1 + 96);
  long long v59 = *(_OWORD *)(a1 + 16);
  v57[1] = *(_OWORD *)a1;
  v57[2] = v59;
  long long v60 = *(_OWORD *)(a1 + 48);
  v57[3] = *(_OWORD *)(a1 + 32);
  v57[4] = v60;
  sub_256075FA8(a1);
  sub_2561770E8();
  swift_release();
  sub_256076030(v54, (uint64_t (*)(void))v100);
  long long v126 = &unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B63F8);
  sub_256177E28();
  swift_bridgeObjectRelease();
  uint64_t v61 = v121;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  v95(v45, v44);
  uint64_t v62 = v119;
  sub_256076190(v61, v119, (uint64_t (*)(void))v94);
  id v63 = v50;
  uint64_t v64 = NotificationSettingsModel.customReminderSchedule.getter();

  long long v126 = (void *)v64;
  swift_getKeyPath();
  uint64_t v65 = (_OWORD *)swift_allocObject();
  long long v66 = *(_OWORD *)(a1 + 80);
  v65[5] = *(_OWORD *)(a1 + 64);
  v65[6] = v66;
  v65[7] = *(_OWORD *)(a1 + 96);
  long long v67 = *(_OWORD *)(a1 + 16);
  v65[1] = *(_OWORD *)a1;
  v65[2] = v67;
  long long v68 = *(_OWORD *)(a1 + 48);
  v65[3] = *(_OWORD *)(a1 + 32);
  v65[4] = v68;
  sub_256075FA8(a1);
  sub_256075864(0, &qword_269F43B08, (uint64_t (*)(uint64_t))sub_2560758C8, MEMORY[0x263F8D488]);
  type metadata accessor for CustomReminderRow();
  sub_256075908();
  sub_256075718(&qword_269F45A58, (void (*)(uint64_t))sub_2560758C8);
  sub_256075718(&qword_269F45A80, (void (*)(uint64_t))type metadata accessor for CustomReminderRow);
  sub_2561777C8();
  long long v125 = *(_OWORD *)(a1 + 16);
  sub_256075B28(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
  id v69 = v63;
  sub_256177598();
  uint64_t v120 = v126;
  unint64_t v113 = v127;
  LODWORD(v108) = v128;
  uint64_t v115 = sub_2561760E8();
  uint64_t v114 = v70;
  LOBYTE(v125) = 0;
  sub_256177568();
  LOBYTE(v8) = (_BYTE)v126;
  uint64_t v112 = (int *)v127;
  uint64_t v71 = v121;
  sub_256076128(v122, v121, (uint64_t (*)(void))sub_2560753EC);
  uint64_t v72 = v116;
  sub_256076128(v62, v116, (uint64_t (*)(void))sub_2560753EC);
  uint64_t v73 = v109;
  uint64_t v74 = *(void (**)(char *, char *, uint64_t))(v109 + 16);
  uint64_t v75 = v117;
  uint64_t v76 = v118;
  uint64_t v77 = v110;
  v74(v118, v117, v110);
  LOBYTE(v126) = v108;
  LOBYTE(v125) = v8;
  uint64_t v78 = v111;
  sub_256076128(v71, v111, (uint64_t (*)(void))sub_2560753EC);
  sub_256075368();
  uint64_t v80 = v79;
  sub_256076128(v72, v78 + *(int *)(v79 + 48), (uint64_t (*)(void))sub_2560753EC);
  v74((char *)(v78 + *(int *)(v80 + 64)), v76, v77);
  uint64_t v81 = v78 + *(int *)(v80 + 80);
  char v82 = (char)v126;
  char v83 = v125;
  *(void *)uint64_t v81 = v115;
  uint64_t v84 = (void *)v114;
  uint64_t v85 = v120;
  *(void *)(v81 + 8) = v114;
  *(void *)(v81 + 16) = v85;
  *(void *)(v81 + 24) = v113;
  *(unsigned char *)(v81 + 32) = v82;
  *(unsigned char *)(v81 + 40) = v83;
  *(void *)(v81 + 48) = v112;
  uint64_t v86 = *(void (**)(char *, uint64_t))(v73 + 8);
  id v87 = v84;
  swift_retain();
  swift_retain();
  swift_retain();
  v86(v75, v77);
  sub_256076030(v119, (uint64_t (*)(void))sub_2560753EC);
  sub_256076030(v122, (uint64_t (*)(void))sub_2560753EC);
  swift_release();
  swift_release();
  swift_release();

  v86(v118, v77);
  sub_256076030(v116, (uint64_t (*)(void))sub_2560753EC);
  return sub_256076030(v121, (uint64_t (*)(void))sub_2560753EC);
}

uint64_t sub_2560745D4@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  sub_255FFC224();
  MEMORY[0x270FA5388](v3 - 8);
  char v24 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *((void *)a1 + 7);
  uint64_t v27 = *((void *)a1 + 6);
  uint64_t v28 = v5;
  sub_255F5CE90();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_256177028();
  uint64_t v8 = v7;
  char v10 = v9;
  long long v31 = *a1;
  uint64_t v11 = (void *)*((void *)&v31 + 1);
  swift_getKeyPath();
  swift_getKeyPath();
  id v12 = v11;
  sub_256175C88();
  swift_release();
  swift_release();
  sub_25605B57C((uint64_t)&v31);
  if (v27 == 1) {
    int v13 = sub_256176A58();
  }
  else {
    int v13 = sub_256176A48();
  }
  char v14 = v10 & 1;
  LODWORD(v27) = v13;
  uint64_t v15 = sub_256176FA8();
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  sub_255F67B2C(v6, v8, v14);
  swift_bridgeObjectRelease();
  uint64_t v27 = v15;
  uint64_t v28 = v17;
  char v29 = v21;
  uint64_t v30 = v19;
  uint64_t v26 = &unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B6438);
  sub_256075B28(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  uint64_t v22 = (uint64_t)v24;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_255F67B2C(v15, v17, v21);
  swift_bridgeObjectRelease();
  return sub_256076190(v22, v25, (uint64_t (*)(void))sub_255FFC224);
}

uint64_t sub_256074874@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  sub_255FFC224();
  MEMORY[0x270FA5388](v3 - 8);
  char v24 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *((void *)a1 + 9);
  uint64_t v27 = *((void *)a1 + 8);
  uint64_t v28 = v5;
  sub_255F5CE90();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_256177028();
  uint64_t v8 = v7;
  char v10 = v9;
  long long v31 = *a1;
  uint64_t v11 = (void *)*((void *)&v31 + 1);
  swift_getKeyPath();
  swift_getKeyPath();
  id v12 = v11;
  sub_256175C88();
  swift_release();
  swift_release();
  sub_25605B57C((uint64_t)&v31);
  if (v27 == 1) {
    int v13 = sub_256176A58();
  }
  else {
    int v13 = sub_256176A48();
  }
  char v14 = v10 & 1;
  LODWORD(v27) = v13;
  uint64_t v15 = sub_256176FA8();
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  sub_255F67B2C(v6, v8, v14);
  swift_bridgeObjectRelease();
  uint64_t v27 = v15;
  uint64_t v28 = v17;
  char v29 = v21;
  uint64_t v30 = v19;
  uint64_t v26 = &unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B6478);
  sub_256075B28(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  uint64_t v22 = (uint64_t)v24;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_255F67B2C(v15, v17, v21);
  swift_bridgeObjectRelease();
  return sub_256076190(v22, v25, (uint64_t (*)(void))sub_255FFC224);
}

uint64_t sub_256074B14(long long *a1)
{
  long long v4 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v1 = *((id *)&v4 + 1);
  sub_256175C88();
  swift_release();
  swift_release();
  uint64_t result = sub_25605B57C((uint64_t)&v4);
  if (v3 == 1)
  {
    sub_256075B28(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
    return sub_256177588();
  }
  return result;
}

uint64_t sub_256074BF0@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for CustomReminderModel();
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  char v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  id v12 = &v24[-v11];
  MEMORY[0x270FA5388](v10);
  char v14 = &v24[-v13];
  uint64_t v15 = *a1;
  id v16 = v15;
  sub_256016624(v15, (uint64_t)v14);
  uint64_t v17 = *(void **)(a2 + 8);
  sub_256076128((uint64_t)v14, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CustomReminderModel);
  type metadata accessor for NotificationSettingsModel();
  sub_256075718((unint64_t *)&qword_269F43720, (void (*)(uint64_t))type metadata accessor for NotificationSettingsModel);
  id v18 = v17;
  *a3 = sub_2561760E8();
  a3[1] = v19;
  uint64_t v20 = type metadata accessor for CustomReminderRow();
  sub_256076128((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CustomReminderModel);
  sub_256177568();
  sub_256076030((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CustomReminderModel);
  char v21 = (char *)a3 + *(int *)(v20 + 24);
  v24[15] = 0;
  sub_256177568();
  uint64_t v22 = v25;
  *char v21 = v24[16];
  *((void *)v21 + 1) = v22;
  return sub_256076030((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for CustomReminderModel);
}

uint64_t sub_256074DF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v42 = a1;
  uint64_t v1 = sub_2561773C8();
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  uint64_t v41 = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  unint64_t v40 = (char *)v35 - v4;
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v5 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v38 = sub_2561755B8();
  uint64_t v39 = v6;
  swift_bridgeObjectRelease();

  id v7 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_2561755B8();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();

  id v11 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_2561755B8();
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();

  id v15 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_2561755B8();
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();

  uint64_t v43 = v38;
  uint64_t v44 = v39;
  sub_255F5CE90();
  uint64_t v19 = sub_256177028();
  uint64_t v38 = v20;
  uint64_t v39 = v19;
  int v36 = v21;
  uint64_t v37 = v22;
  uint64_t v43 = v8;
  uint64_t v44 = v10;
  uint64_t v23 = sub_256177028();
  v35[2] = v24;
  v35[3] = v23;
  v35[1] = v25;
  uint64_t v43 = v12;
  uint64_t v44 = v14;
  uint64_t v26 = sub_256177028();
  uint64_t v28 = v27;
  LOBYTE(v10) = v29 & 1;
  sub_2561773B8();
  sub_255F67B2C(v26, v28, v10);
  swift_bridgeObjectRelease();
  uint64_t v43 = v16;
  uint64_t v44 = v18;
  uint64_t v30 = sub_256177028();
  uint64_t v32 = v31;
  LOBYTE(v18) = v33 & 1;
  sub_2561773A8();
  sub_255F67B2C(v30, v32, v18);
  swift_bridgeObjectRelease();
  return sub_256177398();
}

uint64_t sub_2560751D4@<X0>(uint64_t a1@<X8>)
{
  return sub_256073148(a1);
}

void sub_256075220()
{
  if (!qword_269F459E8)
  {
    sub_255FFC224();
    sub_256075864(255, &qword_269F459F0, MEMORY[0x263F191A0], MEMORY[0x263F1A418]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F459E8);
    }
  }
}

void sub_2560752B8()
{
  if (!qword_269F459F8)
  {
    sub_255FFC224();
    sub_256075864(255, &qword_269F45A00, (uint64_t (*)(uint64_t))sub_256075368, MEMORY[0x263F1BAC8]);
    sub_256075220();
    unint64_t v0 = sub_256177848();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F459F8);
    }
  }
}

void sub_256075368()
{
  if (!qword_269F45A08)
  {
    sub_2560753EC();
    sub_256075760();
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_269F45A08);
    }
  }
}

void sub_2560753EC()
{
  if (!qword_269F45A10)
  {
    sub_256075454();
    sub_256176D38();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45A10);
    }
  }
}

void sub_256075454()
{
  if (!qword_269F45A18)
  {
    sub_2560754D8();
    sub_256075670();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F45A18);
    }
  }
}

void sub_2560754D8()
{
  if (!qword_269F45A20)
  {
    sub_256075564();
    sub_256075B28(255, &qword_269F43110, MEMORY[0x263F8D4F8], MEMORY[0x263F1A4D8]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45A20);
    }
  }
}

void sub_256075564()
{
  if (!qword_269F45A28)
  {
    sub_255FFC224();
    sub_2560755C8();
    unint64_t v0 = sub_2561776E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45A28);
    }
  }
}

unint64_t sub_2560755C8()
{
  unint64_t result = qword_269F45A30;
  if (!qword_269F45A30)
  {
    sub_255FFC224();
    sub_256075718(&qword_269F42EA0, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45A30);
  }
  return result;
}

unint64_t sub_256075670()
{
  unint64_t result = qword_269F45A38;
  if (!qword_269F45A38)
  {
    sub_2560754D8();
    sub_256075718(&qword_269F45A40, (void (*)(uint64_t))sub_256075564);
    sub_255F84F80();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45A38);
  }
  return result;
}

uint64_t sub_256075718(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_256075760()
{
  if (!qword_269F45A48)
  {
    sub_256075864(255, &qword_269F43B08, (uint64_t (*)(uint64_t))sub_2560758C8, MEMORY[0x263F8D488]);
    sub_2560758C8();
    type metadata accessor for CustomReminderRow();
    sub_256075908();
    sub_256075718(&qword_269F45A58, (void (*)(uint64_t))sub_2560758C8);
    unint64_t v0 = sub_2561777E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45A48);
    }
  }
}

void sub_256075864(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_2560758C8()
{
  unint64_t result = qword_26B2AD270;
  if (!qword_26B2AD270)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B2AD270);
  }
  return result;
}

unint64_t sub_256075908()
{
  unint64_t result = qword_269F45A50;
  if (!qword_269F45A50)
  {
    sub_256075864(255, &qword_269F43B08, (uint64_t (*)(uint64_t))sub_2560758C8, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45A50);
  }
  return result;
}

uint64_t sub_256075998@<X0>(uint64_t a1@<X8>)
{
  return sub_2560737D8(*(void *)(v1 + 16), a1);
}

unint64_t sub_2560759A0()
{
  unint64_t result = qword_269F45A60;
  if (!qword_269F45A60)
  {
    sub_256075864(255, &qword_269F45A00, (uint64_t (*)(uint64_t))sub_256075368, MEMORY[0x263F1BAC8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45A60);
  }
  return result;
}

unint64_t sub_256075A28()
{
  unint64_t result = qword_269F45A68;
  if (!qword_269F45A68)
  {
    sub_256075220();
    sub_2560755C8();
    sub_256075AA0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45A68);
  }
  return result;
}

unint64_t sub_256075AA0()
{
  unint64_t result = qword_269F45A70;
  if (!qword_269F45A70)
  {
    sub_256075864(255, &qword_269F459F0, MEMORY[0x263F191A0], MEMORY[0x263F1A418]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45A70);
  }
  return result;
}

void sub_256075B28(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_256075B74@<X0>(uint64_t a1@<X8>)
{
  return sub_256074DF0(a1);
}

unint64_t sub_256075B98()
{
  unint64_t result = qword_269F45A78;
  if (!qword_269F45A78)
  {
    sub_2560752B8();
    sub_2560755C8();
    sub_2560759A0();
    sub_256075A28();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45A78);
  }
  return result;
}

void sub_256075C24(uint64_t a1@<X8>)
{
  swift_getObjectType();
  sub_256075718((unint64_t *)&qword_269F43720, (void (*)(uint64_t))type metadata accessor for NotificationSettingsModel);
  uint64_t v2 = sub_2561760E8();
  uint64_t v25 = v3;
  uint64_t v26 = v2;
  sub_256177568();
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v4 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_2561755B8();
  uint64_t v23 = v6;
  uint64_t v24 = v5;
  swift_bridgeObjectRelease();

  id v7 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_2561755B8();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();

  id v10 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_2561755B8();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();

  id v14 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_2561755B8();
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();

  id v18 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_2561755B8();
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();

  *(void *)a1 = v26;
  *(void *)(a1 + 8) = v25;
  *(unsigned char *)(a1 + 16) = v27;
  *(void *)(a1 + 24) = v28;
  *(void *)(a1 + 32) = v24;
  *(void *)(a1 + 40) = v23;
  *(void *)(a1 + 48) = v22;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v15;
  *(void *)(a1 + 88) = v17;
  *(void *)(a1 + 96) = v19;
  *(void *)(a1 + 104) = v21;
}

uint64_t sub_256075F60@<X0>(uint64_t a1@<X8>)
{
  return sub_2560745D4(*(long long **)(v1 + 16), a1);
}

uint64_t sub_256075F78()
{
  return swift_deallocObject();
}

uint64_t sub_256075F8C()
{
  return sub_256074B14((long long *)(v0 + 16));
}

uint64_t sub_256075FA8(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return a1;
}

uint64_t sub_256076030(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_256076098@<X0>(uint64_t a1@<X8>)
{
  return sub_256074874(*(long long **)(v1 + 16), a1);
}

uint64_t sub_2560760A0()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_19Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_256076120@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_256074BF0(a1, v2 + 16, a2);
}

uint64_t sub_256076128(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_256076190(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2560761F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *sub_256076254(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    id v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    id v7 = a1;
    uint64_t v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    uint64_t v9 = *(int *)(a3 + 20);
    id v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *(uint64_t *)((char *)a2 + v9 + 8);
    *id v10 = *(uint64_t *)((char *)a2 + v9);
    v10[1] = v12;
    sub_256078C7C(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
    uint64_t v14 = *(int *)(v13 + 32);
    uint64_t v28 = &v11[v14];
    char v29 = (char *)v10 + v14;
    uint64_t v15 = sub_256175868();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v16(v29, v28, v15);
    uint64_t v17 = *(int *)(a3 + 24);
    id v18 = (uint64_t *)((char *)v7 + v17);
    uint64_t v19 = (uint64_t *)((char *)a2 + v17);
    sub_256078C7C(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = sub_256176AA8();
      uint64_t v21 = *(void *)(v20 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        sub_256078C7C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v21 + 16))(v18, v19, v20);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      uint64_t v23 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      uint64_t v24 = (char *)v18 + v23;
      uint64_t v25 = (char *)v19 + v23;
      uint64_t v26 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    }
    else
    {
      *id v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v7;
}

uint64_t sub_2560765A0(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  swift_release();
  swift_release();
  sub_256078C7C(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  uint64_t v6 = v4 + *(int *)(v5 + 32);
  uint64_t v7 = sub_256175868();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + *(int *)(a2 + 24);
  sub_256078C7C(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_256176AA8();
    uint64_t v10 = *(void *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
    uint64_t v11 = v8 + *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    uint64_t v12 = sub_256176158();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
    return v13(v11, v12);
  }
  else
  {
    return swift_release();
  }
}

void *sub_2560767C0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  a1[2] = a2[2];
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = *(void *)((char *)a2 + v6 + 8);
  *uint64_t v7 = *(void *)((char *)a2 + v6);
  v7[1] = v9;
  sub_256078C7C(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  uint64_t v11 = *(int *)(v10 + 32);
  uint64_t v26 = (char *)v7 + v11;
  uint64_t v12 = &v8[v11];
  uint64_t v13 = sub_256175868();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v14(v26, v12, v13);
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  sub_256078C7C(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = sub_256176AA8();
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      sub_256078C7C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    uint64_t v21 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    uint64_t v22 = (char *)v16 + v21;
    uint64_t v23 = (char *)v17 + v21;
    uint64_t v24 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  }
  else
  {
    *uint64_t v16 = *v17;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_256076AC0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(void *)((char *)a1 + v6) = *(void *)((char *)a2 + v6);
  swift_retain();
  swift_release();
  *((void *)v7 + 1) = *((void *)v8 + 1);
  swift_retain();
  swift_release();
  sub_256078C7C(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  uint64_t v10 = *(int *)(v9 + 32);
  uint64_t v11 = &v7[v10];
  uint64_t v12 = &v8[v10];
  uint64_t v13 = sub_256175868();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  if (a1 != a2)
  {
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = (void *)((char *)a1 + v14);
    uint64_t v16 = (void *)((char *)a2 + v14);
    sub_25601E988((uint64_t)a1 + v14);
    sub_256078C7C(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_256176AA8();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        sub_256078C7C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v18 + 16))(v15, v16, v17);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      uint64_t v20 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      uint64_t v21 = (char *)v15 + v20;
      uint64_t v22 = (char *)v16 + v20;
      uint64_t v23 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_256076DDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = a2 + v6;
  uint64_t v9 = *(void *)(a2 + v6 + 8);
  *uint64_t v7 = *(void *)(a2 + v6);
  v7[1] = v9;
  sub_256078C7C(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  uint64_t v11 = *(int *)(v10 + 32);
  uint64_t v12 = (char *)v7 + v11;
  uint64_t v13 = v8 + v11;
  uint64_t v14 = sub_256175868();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (char *)(a1 + v15);
  uint64_t v17 = (char *)(a2 + v15);
  sub_256078C7C(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  uint64_t v19 = v18;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = sub_256176AA8();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v17, 1, v20))
    {
      sub_256078C7C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v16, v17, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v16, v17, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v16, 0, 1, v20);
    }
    uint64_t v23 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    uint64_t v24 = &v16[v23];
    uint64_t v25 = &v17[v23];
    uint64_t v26 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
  }
  return a1;
}

void *sub_2560770A8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(void *)((char *)a1 + v6) = *(void *)((char *)a2 + v6);
  swift_release();
  *((void *)v7 + 1) = *((void *)v8 + 1);
  swift_release();
  sub_256078C7C(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  uint64_t v10 = *(int *)(v9 + 32);
  uint64_t v11 = &v7[v10];
  uint64_t v12 = &v8[v10];
  uint64_t v13 = sub_256175868();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  if (a1 != a2)
  {
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    sub_25601E988((uint64_t)a1 + v14);
    sub_256078C7C(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    uint64_t v18 = v17;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_256176AA8();
      uint64_t v20 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v16, 1, v19))
      {
        sub_256078C7C(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v15, v16, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v15, v16, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v15, 0, 1, v19);
      }
      uint64_t v22 = *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
      uint64_t v23 = &v15[v22];
      uint64_t v24 = &v16[v22];
      uint64_t v25 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2560773B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2560773C8);
}

uint64_t sub_2560773C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_256078C7C(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_256078C7C(0, &qword_269F44C38, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185D0]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_256077554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256077568);
}

uint64_t sub_256077568(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_256078C7C(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_256078C7C(0, &qword_269F44C38, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185D0]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for ReflectiveIntervalPicker_iOS()
{
  uint64_t result = qword_269F45A88;
  if (!qword_269F45A88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_256077740()
{
  sub_256078C7C(319, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  if (v0 <= 0x3F)
  {
    sub_256078C7C(319, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_256077874()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_256077890@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v58 = a2;
  uint64_t v3 = type metadata accessor for ReflectiveIntervalPicker_iOS();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560786C4(0);
  uint64_t v59 = v7;
  uint64_t v62 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25607861C(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560785E8(0);
  uint64_t v61 = v13 - 8;
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v57 = (uint64_t)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v56 = (uint64_t)&v43 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v43 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v60 = (uint64_t)&v43 - v21;
  unint64_t v55 = type metadata accessor for ReflectiveIntervalPicker_iOS;
  sub_256078C0C(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ReflectiveIntervalPicker_iOS);
  uint64_t v22 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v23 = (v22 + 16) & ~v22;
  uint64_t v53 = v22 | 7;
  uint64_t v54 = v23 + v5;
  uint64_t v24 = swift_allocObject();
  uint64_t v52 = type metadata accessor for ReflectiveIntervalPicker_iOS;
  sub_256078878((uint64_t)v6, v24 + v23, (uint64_t (*)(void))type metadata accessor for ReflectiveIntervalPicker_iOS);
  uint64_t v64 = a1;
  uint64_t v51 = type metadata accessor for ReflectiveIntervalPickerButtonView(0);
  uint64_t v50 = sub_25607870C();
  sub_2561775C8();
  *(void *)&long long v65 = &unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B64B8);
  sub_255FCD9E0();
  uint64_t v49 = v25;
  uint64_t v48 = sub_256078D9C((unint64_t *)&qword_26B2AD358, (void (*)(uint64_t))sub_255FCD9E0);
  sub_256177E28();
  swift_bridgeObjectRelease();
  uint64_t v47 = sub_256078D9C(&qword_269F45AE0, sub_2560786C4);
  uint64_t v26 = v59;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  char v27 = *(void (**)(char *, uint64_t))(v62 + 8);
  v62 += 8;
  uint64_t v46 = v27;
  v27(v9, v26);
  uint64_t v28 = *(void *)(a1 + 16);
  long long v65 = *(_OWORD *)a1;
  uint64_t v66 = v28;
  sub_256078C7C(0, &qword_269F44CA0, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindReflectiveInterval, MEMORY[0x263F1B750]);
  uint64_t v45 = v29;
  MEMORY[0x25A2A01A0](v67);
  uint64_t v30 = v67[0];
  uint64_t v44 = sub_25607861C;
  sub_256078C0C((uint64_t)v12, (uint64_t)v20, (uint64_t (*)(void))sub_25607861C);
  uint64_t v31 = &v20[*(int *)(v61 + 44)];
  *(void *)uint64_t v31 = 0;
  *((void *)v31 + 1) = v30;
  sub_25607848C((uint64_t)v12, (uint64_t (*)(void))sub_25607861C);
  sub_256078878((uint64_t)v20, v60, (uint64_t (*)(void))sub_2560785E8);
  sub_256078C0C(a1, (uint64_t)v6, (uint64_t (*)(void))v55);
  uint64_t v32 = swift_allocObject();
  sub_256078878((uint64_t)v6, v32 + v23, (uint64_t (*)(void))v52);
  uint64_t v63 = a1;
  sub_2561775C8();
  *(void *)&long long v65 = &unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B64F8);
  sub_256177E28();
  swift_bridgeObjectRelease();
  uint64_t v33 = v59;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  v46(v9, v33);
  uint64_t v34 = *(void *)(a1 + 16);
  long long v65 = *(_OWORD *)a1;
  uint64_t v66 = v34;
  MEMORY[0x25A2A01A0](v67, v45);
  uint64_t v35 = v67[0];
  uint64_t v36 = v56;
  sub_256078C0C((uint64_t)v12, v56, (uint64_t (*)(void))v44);
  uint64_t v37 = (void *)(v36 + *(int *)(v61 + 44));
  *uint64_t v37 = 0;
  v37[1] = v35;
  sub_25607848C((uint64_t)v12, (uint64_t (*)(void))sub_25607861C);
  sub_256078878(v36, (uint64_t)v20, (uint64_t (*)(void))sub_2560785E8);
  uint64_t v38 = v60;
  sub_256078C0C(v60, v36, (uint64_t (*)(void))sub_2560785E8);
  uint64_t v39 = v57;
  sub_256078C0C((uint64_t)v20, v57, (uint64_t (*)(void))sub_2560785E8);
  uint64_t v40 = v58;
  sub_256078C0C(v36, v58, (uint64_t (*)(void))sub_2560785E8);
  sub_256078584();
  sub_256078C0C(v39, v40 + *(int *)(v41 + 48), (uint64_t (*)(void))sub_2560785E8);
  sub_25607848C((uint64_t)v20, (uint64_t (*)(void))sub_2560785E8);
  sub_25607848C(v38, (uint64_t (*)(void))sub_2560785E8);
  sub_25607848C(v39, (uint64_t (*)(void))sub_2560785E8);
  return sub_25607848C(v36, (uint64_t (*)(void))sub_2560785E8);
}

uint64_t sub_256078000()
{
  return sub_256177728();
}

uint64_t sub_256078084()
{
  return sub_256177728();
}

uint64_t sub_256078108@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v5 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
  uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185D0];
  sub_256078C7C(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (uint64_t *)((char *)&v20 - v7);
  uint64_t v9 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F1B750];
  sub_256078C7C(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v20 - v12;
  uint64_t v14 = *((void *)a1 + 2);
  long long v23 = *a1;
  uint64_t v24 = v14;
  sub_256078C7C(0, &qword_269F44CA0, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindReflectiveInterval, v10);
  sub_256177748();
  long long v20 = v25;
  uint64_t v15 = v26;
  type metadata accessor for ReflectiveIntervalPicker_iOS();
  sub_256177748();
  *uint64_t v8 = swift_getKeyPath();
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  sub_256078C7C(0, &qword_269F47D00, v5, MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  *(void *)a3 = v21;
  *(_OWORD *)(a3 + 8) = v20;
  *(void *)(a3 + 24) = v15;
  uint64_t v17 = (int *)type metadata accessor for ReflectiveIntervalPickerButtonView(0);
  sub_256078CE0((uint64_t)v13, a3 + v17[6], &qword_269F44B48, v9, v10);
  uint64_t v18 = (uint64_t *)(a3 + v17[7]);
  *uint64_t v18 = swift_getKeyPath();
  sub_256078C7C(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, v16);
  swift_storeEnumTagMultiPayload();
  return sub_256078CE0((uint64_t)v8, a3 + v17[8], &qword_269F42B48, v5, v22);
}

uint64_t sub_2560783B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25611BE0C((uint64_t)v5);
  sub_25607848C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs);
  *(void *)a1 = sub_256176788();
  *(void *)(a1 + 8) = 0x4028000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  sub_2560784EC();
  return sub_256077890(v1, a1 + *(int *)(v6 + 44));
}

uint64_t sub_25607848C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_2560784EC()
{
  if (!qword_269F45A98)
  {
    sub_256078C7C(255, &qword_269F45AA0, (uint64_t (*)(uint64_t))sub_256078584, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_256176048();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45A98);
    }
  }
}

void sub_256078584()
{
  if (!qword_269F45AA8)
  {
    sub_2560785E8(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F45AA8);
    }
  }
}

void sub_2560785E8(uint64_t a1)
{
}

void sub_25607861C(uint64_t a1)
{
}

void sub_256078650(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    unint64_t v6 = sub_2561761B8();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_2560786C4(uint64_t a1)
{
}

uint64_t sub_25607870C()
{
  return sub_256078D9C(&qword_269F45AC8, (void (*)(uint64_t))type metadata accessor for ReflectiveIntervalPickerButtonView);
}

void sub_256078740(uint64_t a1)
{
}

void sub_256078788(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_256078808()
{
  return sub_256078D9C(&qword_269F45AD8, type metadata accessor for __HKStateOfMindReflectiveInterval);
}

uint64_t sub_256078840()
{
  return sub_256078B78((uint64_t (*)(uint64_t))sub_256078000);
}

uint64_t sub_256078858@<X0>(uint64_t a1@<X8>)
{
  return sub_256078108(*(long long **)(v1 + 16), 1, a1);
}

uint64_t sub_256078878(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t objectdestroyTm_15()
{
  uint64_t v1 = (int *)(type metadata accessor for ReflectiveIntervalPicker_iOS() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_release();
  swift_release();
  uint64_t v3 = v2 + v1[7];
  swift_release();
  swift_release();
  sub_256078C7C(0, &qword_269F44B48, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  uint64_t v5 = v3 + *(int *)(v4 + 32);
  uint64_t v6 = sub_256175868();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v2 + v1[8];
  sub_256078C7C(0, &qword_269F44C30, (uint64_t (*)(uint64_t))type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_256176AA8();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
    uint64_t v10 = v7 + *(int *)(type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs() + 20);
    uint64_t v11 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_256078B60()
{
  return sub_256078B78((uint64_t (*)(uint64_t))sub_256078084);
}

uint64_t sub_256078B78(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for ReflectiveIntervalPicker_iOS() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_256078BEC@<X0>(uint64_t a1@<X8>)
{
  return sub_256078108(*(long long **)(v1 + 16), 2, a1);
}

uint64_t sub_256078C0C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_256078C7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_256078CE0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  sub_256078C7C(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

uint64_t sub_256078D54()
{
  return sub_256078D9C(&qword_269F45AE8, (void (*)(uint64_t))sub_256078DE4);
}

uint64_t sub_256078D9C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_256078DE4()
{
  if (!qword_269F45AF0)
  {
    sub_256078C7C(255, &qword_269F45AA0, (uint64_t (*)(uint64_t))sub_256078584, MEMORY[0x263F1BAC8]);
    sub_256078E78();
    unint64_t v0 = sub_2561776F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45AF0);
    }
  }
}

unint64_t sub_256078E78()
{
  unint64_t result = qword_269F45AF8;
  if (!qword_269F45AF8)
  {
    sub_256078C7C(255, &qword_269F45AA0, (uint64_t (*)(uint64_t))sub_256078584, MEMORY[0x263F1BAC8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45AF8);
  }
  return result;
}

uint64_t static HKFeatureSettings.Key<A>.periodicAssessmentPromptAcknowledgmentDate.getter()
{
  return sub_256078F18();
}

uint64_t static HKFeatureSettings.Key<A>.loggingPatternEscalationAcknowledgmentDate.getter()
{
  return sub_256078F18();
}

uint64_t sub_256078F18()
{
  sub_256177EE8();
  sub_256175868();

  return sub_256178278();
}

id StateOfMindTimelinePresentingCalendar.__allocating_init(presenter:healthStore:dateToFocusOn:verticalSizeClass:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_256175868();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (char *)objc_allocWithZone(v5);
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  *(void *)&v14[OBJC_IVAR____TtC14MentalHealthUI37StateOfMindTimelinePresentingCalendar_healthStore] = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, v10);
  objc_allocWithZone((Class)type metadata accessor for StateOfMindCalendarViewController());
  id v15 = a2;
  uint64_t v16 = (char *)StateOfMindCalendarViewController.init(healthStore:dateToFocusOn:verticalSizeClass:)(v15, (uint64_t)v13, a4);
  v21.receiver = v14;
  v21.super_class = v5;
  id v17 = objc_msgSendSuper2(&v21, sel_initWithRootViewController_, v16);
  uint64_t v18 = &v16[qword_269F50D30];
  swift_beginAccess();
  *((void *)v18 + 1) = &protocol witness table for StateOfMindTimelinePresentingCalendar;
  swift_unknownObjectWeakAssign();

  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a3, v10);
  return v17;
}

id StateOfMindTimelinePresentingCalendar.init(presenter:healthStore:dateToFocusOn:verticalSizeClass:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_256175868();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  *(void *)&v5[OBJC_IVAR____TtC14MentalHealthUI37StateOfMindTimelinePresentingCalendar_healthStore] = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, v10);
  objc_allocWithZone((Class)type metadata accessor for StateOfMindCalendarViewController());
  id v14 = a2;
  id v15 = (char *)StateOfMindCalendarViewController.init(healthStore:dateToFocusOn:verticalSizeClass:)(v14, (uint64_t)v13, a4);
  uint64_t v16 = (objc_class *)type metadata accessor for StateOfMindTimelinePresentingCalendar();
  v21.receiver = v5;
  v21.super_class = v16;
  id v17 = objc_msgSendSuper2(&v21, sel_initWithRootViewController_, v15);
  uint64_t v18 = &v15[qword_269F50D30];
  swift_beginAccess();
  *((void *)v18 + 1) = &protocol witness table for StateOfMindTimelinePresentingCalendar;
  swift_unknownObjectWeakAssign();

  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a3, v10);
  return v17;
}

uint64_t sub_25607939C(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v40 = v3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = type metadata accessor for StateOfMindTimeline.EntryFullView();
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (uint64_t *)((char *)&v34 - v10);
  uint64_t v12 = sub_256175868();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  id v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_256175B68();
  uint64_t v38 = *(void *)(v16 - 8);
  uint64_t v39 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256175B48();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v41 = a2;
  v19(v15, a2, v12);
  uint64_t v20 = sub_256175B58();
  os_log_type_t v21 = sub_256178238();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v36 = v11;
    uint64_t v23 = v22;
    uint64_t v34 = swift_slowAlloc();
    uint64_t v43 = v34;
    *(_DWORD *)uint64_t v23 = 136446466;
    uint64_t v24 = sub_256178978();
    uint64_t v35 = v9;
    uint64_t v42 = sub_255FB29A8(v24, v25, &v43);
    uint64_t ObjectType = (uint64_t)a1;
    sub_256178458();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2082;
    sub_255FBED94((unint64_t *)&qword_269F47700, MEMORY[0x263F07490]);
    uint64_t v26 = sub_2561787E8();
    uint64_t v42 = sub_255FB29A8(v26, v27, &v43);
    a1 = (void *)ObjectType;
    uint64_t v9 = v35;
    sub_256178458();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    _os_log_impl(&dword_255F58000, v20, v21, "[%{public}s] Presenting timeline for date: %{public}s", (uint8_t *)v23, 0x16u);
    uint64_t v28 = v34;
    swift_arrayDestroy();
    MEMORY[0x25A2A1E90](v28, -1, -1);
    uint64_t v29 = v23;
    uint64_t v11 = v36;
    MEMORY[0x25A2A1E90](v29, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }

  (*(void (**)(char *, uint64_t))(v38 + 8))(v18, v39);
  _s14MentalHealthUI19StateOfMindTimelineO5ModelC05buildgH03day11healthStoreAE10Foundation4DateV_So08HKHealthL0CtFZ_0(v41, *(void **)(v40 + OBJC_IVAR____TtC14MentalHealthUI37StateOfMindTimelinePresentingCalendar_healthStore));
  swift_retain();
  StateOfMindTimeline.EntryFullView.init(model:)(v11);
  sub_256079AD8((uint64_t)v11, (uint64_t)v9);
  sub_255FBECA0();
  id v31 = objc_allocWithZone(v30);
  uint64_t v32 = (void *)sub_2561767B8();
  objc_msgSend(a1, sel_hk_presentModalCardViewController_fullScreen_animated_completion_, v32, 0, 1, 0);
  swift_release();

  return sub_256079B3C((uint64_t)v11);
}

id StateOfMindTimelinePresentingCalendar.__allocating_init(navigationBarClass:toolbarClass:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  if (a1)
  {
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    if (!v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t ObjCClassFromMetadata = 0;
  if (a2) {
LABEL_3:
  }
    uint64_t v3 = swift_getObjCClassFromMetadata();
LABEL_4:
  id v5 = objc_allocWithZone(v2);

  return objc_msgSend(v5, sel_initWithNavigationBarClass_toolbarClass_, ObjCClassFromMetadata, v3);
}

void StateOfMindTimelinePresentingCalendar.init(navigationBarClass:toolbarClass:)()
{
}

id StateOfMindTimelinePresentingCalendar.__allocating_init(rootViewController:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithRootViewController_, a1);

  return v3;
}

void StateOfMindTimelinePresentingCalendar.init(rootViewController:)()
{
}

id StateOfMindTimelinePresentingCalendar.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    uint64_t v6 = (void *)sub_256177EA8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void StateOfMindTimelinePresentingCalendar.init(nibName:bundle:)()
{
}

id StateOfMindTimelinePresentingCalendar.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StateOfMindTimelinePresentingCalendar();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for StateOfMindTimelinePresentingCalendar()
{
  return self;
}

uint64_t sub_256079AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StateOfMindTimeline.EntryFullView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_256079B3C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StateOfMindTimeline.EntryFullView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t method lookup function for StateOfMindTimelinePresentingCalendar(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for StateOfMindTimelinePresentingCalendar);
}

uint64_t dispatch thunk of StateOfMindTimelinePresentingCalendar.__allocating_init(presenter:healthStore:dateToFocusOn:verticalSizeClass:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of StateOfMindTimelinePresentingCalendar.calendarView(_:didSelectDate:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

__n128 sub_256079BF8@<Q0>(uint64_t a1@<X1>, uint64_t a2@<X2>, char a3@<W3>, uint64_t a4@<X4>, char a5@<W5>, char a6@<W6>, uint64_t a7@<X7>, uint64_t *a8@<X8>, uint64_t a9)
{
  id v15 = (int *)type metadata accessor for ValenceSelectionPhaseContent();
  uint64_t v16 = (uint64_t *)((char *)a8 + v15[8]);
  *uint64_t v16 = swift_getKeyPath();
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  sub_2560828EC(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = (uint64_t *)((char *)a8 + v15[9]);
  *uint64_t v18 = swift_getKeyPath();
  sub_2560828EC(0, &qword_269F47D00, MEMORY[0x263F18520], v17);
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = (uint64_t *)((char *)a8 + v15[10]);
  *uint64_t v19 = swift_getKeyPath();
  sub_2560828EC(0, &qword_269F44C98, MEMORY[0x263F07920], v17);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for StateOfMindEntryModel(0);
  sub_256083354(&qword_269F42CB0, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel);
  swift_retain();
  *a8 = sub_2561760E8();
  a8[1] = v20;
  os_log_type_t v21 = (char *)a8 + v15[14];
  *(void *)os_log_type_t v21 = a1;
  *((void *)v21 + 1) = a2;
  v21[16] = a3;
  uint64_t v22 = (char *)a8 + v15[5];
  uint64_t v23 = sub_256175FC8();
  uint64_t v24 = *(void *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v22, a4, v23);
  *((unsigned char *)a8 + v15[6]) = a5;
  unint64_t v25 = (char *)a8 + v15[11];
  swift_retain();
  swift_retain();
  sub_256177568();
  *unint64_t v25 = v31;
  *((void *)v25 + 1) = *((void *)&v31 + 1);
  *((unsigned char *)a8 + v15[13]) = a6;
  uint64_t v26 = (uint64_t *)((char *)a8 + v15[7]);
  *uint64_t v26 = a7;
  v26[1] = a9;
  unint64_t v27 = (char *)a8 + v15[12];
  sub_256177568();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(a4, v23);
  *(_OWORD *)unint64_t v27 = v31;
  *((_OWORD *)v27 + 1) = v32;
  __n128 result = v33;
  *((__n128 *)v27 + 2) = v33;
  *((void *)v27 + 6) = v34;
  *((void *)v27 + 7) = v35;
  *((void *)v27 + 8) = v36;
  return result;
}

uint64_t type metadata accessor for ValenceSelectionPhaseContent()
{
  uint64_t result = qword_269F45B10;
  if (!qword_269F45B10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_256079FA4(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    uint64_t v4 = (void *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_256175FC8();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_retain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    *((unsigned char *)v4 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    uint64_t v14 = (void *)((char *)v4 + v13);
    id v15 = (void *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = a3[8];
    uint64_t v18 = (void *)((char *)v4 + v17);
    uint64_t v19 = (void *)((char *)a2 + v17);
    sub_2560828EC(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = sub_256176AA8();
      uint64_t v21 = *(void *)(v20 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        sub_2560828EC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v21 + 16))(v18, v19, v20);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      uint64_t v24 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
      unint64_t v25 = (char *)v18 + v24;
      uint64_t v26 = (char *)v19 + v24;
      uint64_t v27 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    }
    else
    {
      *uint64_t v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v28 = a3[9];
    uint64_t v29 = (void *)((char *)v4 + v28);
    Class v30 = (void *)((char *)a2 + v28);
    sub_2560828EC(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v31 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    }
    else
    {
      *uint64_t v29 = *v30;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v32 = a3[10];
    __n128 v33 = (void *)((char *)v4 + v32);
    uint64_t v34 = (void *)((char *)a2 + v32);
    sub_2560828EC(0, &qword_269F44C98, MEMORY[0x263F07920], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v35 = sub_256175A08();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    }
    else
    {
      *__n128 v33 = *v34;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v36 = a3[11];
    uint64_t v37 = a3[12];
    uint64_t v38 = (char *)v4 + v36;
    uint64_t v39 = (char *)a2 + v36;
    char *v38 = *v39;
    *((void *)v38 + 1) = *((void *)v39 + 1);
    uint64_t v40 = (char *)v4 + v37;
    uint64_t v41 = (char *)a2 + v37;
    long long v42 = *((_OWORD *)v41 + 3);
    *((_OWORD *)v40 + 2) = *((_OWORD *)v41 + 2);
    *((_OWORD *)v40 + 3) = v42;
    long long v43 = *((_OWORD *)v41 + 1);
    *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
    *((_OWORD *)v40 + 1) = v43;
    *((void *)v40 + 8) = *((void *)v41 + 8);
    uint64_t v44 = a3[14];
    *((unsigned char *)v4 + a3[13]) = *((unsigned char *)a2 + a3[13]);
    uint64_t v45 = (char *)v4 + v44;
    uint64_t v46 = (char *)a2 + v44;
    uint64_t v47 = *((void *)v46 + 1);
    *(void *)uint64_t v45 = *(void *)v46;
    *((void *)v45 + 1) = v47;
    v45[16] = v46[16];
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_25607A48C(uint64_t a1, int *a2)
{
  swift_release();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_256175FC8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  uint64_t v6 = a1 + a2[8];
  sub_2560828EC(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_256176AA8();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
    uint64_t v9 = v6 + *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    uint64_t v10 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = a1 + a2[9];
  sub_2560828EC(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  uint64_t v13 = a1 + a2[10];
  sub_2560828EC(0, &qword_269F44C98, MEMORY[0x263F07920], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_256175A08();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *sub_25607A7BC(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_256175FC8();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_retain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  sub_2560828EC(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = sub_256176AA8();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      sub_2560828EC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    uint64_t v22 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    uint64_t v23 = (char *)v17 + v22;
    uint64_t v24 = (char *)v18 + v22;
    uint64_t v25 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
  }
  else
  {
    *uint64_t v17 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = a3[9];
  uint64_t v27 = (void *)((char *)a1 + v26);
  uint64_t v28 = (void *)((char *)a2 + v26);
  sub_2560828EC(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v29 = sub_256175D98();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  }
  else
  {
    *uint64_t v27 = *v28;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v30 = a3[10];
  uint64_t v31 = (void *)((char *)a1 + v30);
  uint64_t v32 = (void *)((char *)a2 + v30);
  sub_2560828EC(0, &qword_269F44C98, MEMORY[0x263F07920], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v33 = sub_256175A08();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
  }
  else
  {
    *uint64_t v31 = *v32;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v34 = a3[11];
  uint64_t v35 = a3[12];
  uint64_t v36 = (char *)a1 + v34;
  uint64_t v37 = (char *)a2 + v34;
  char *v36 = *v37;
  *((void *)v36 + 1) = *((void *)v37 + 1);
  uint64_t v38 = (char *)a1 + v35;
  uint64_t v39 = (char *)a2 + v35;
  long long v40 = *((_OWORD *)v39 + 3);
  *((_OWORD *)v38 + 2) = *((_OWORD *)v39 + 2);
  *((_OWORD *)v38 + 3) = v40;
  long long v41 = *((_OWORD *)v39 + 1);
  *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
  *((_OWORD *)v38 + 1) = v41;
  *((void *)v38 + 8) = *((void *)v39 + 8);
  uint64_t v42 = a3[14];
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  long long v43 = (char *)a1 + v42;
  uint64_t v44 = (char *)a2 + v42;
  uint64_t v45 = *((void *)v44 + 1);
  *(void *)long long v43 = *(void *)v44;
  *((void *)v43 + 1) = v45;
  v43[16] = v44[16];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_25607AC58(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_256175FC8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v14 = a3[8];
    uint64_t v15 = (void *)((char *)a1 + v14);
    uint64_t v16 = (void *)((char *)a2 + v14);
    uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25607B20C((uint64_t)a1 + v14, (uint64_t)&qword_269F439D8, (uint64_t)type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8], (uint64_t (*)(void))sub_2560828EC);
    sub_2560828EC(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, v17);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = sub_256176AA8();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18))
      {
        sub_2560828EC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v15, v16, v18);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v15, 0, 1, v18);
      }
      uint64_t v21 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
      uint64_t v22 = (char *)v15 + v21;
      uint64_t v23 = (char *)v16 + v21;
      uint64_t v24 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = a3[9];
    uint64_t v26 = (void *)((char *)a1 + v25);
    uint64_t v27 = (void *)((char *)a2 + v25);
    uint64_t v28 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25607B20C((uint64_t)a1 + v25, (uint64_t)&qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8], (uint64_t (*)(void))sub_2560828EC);
    sub_2560828EC(0, &qword_269F47D00, v28, v29);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v30 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(v26, v27, v30);
    }
    else
    {
      *uint64_t v26 = *v27;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v31 = a3[10];
    uint64_t v32 = (void *)((char *)a1 + v31);
    uint64_t v33 = (void *)((char *)a2 + v31);
    uint64_t v34 = (uint64_t (*)(uint64_t))MEMORY[0x263F07920];
    uint64_t v35 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25607B20C((uint64_t)a1 + v31, (uint64_t)&qword_269F44C98, MEMORY[0x263F07920], MEMORY[0x263F185C8], (uint64_t (*)(void))sub_2560828EC);
    sub_2560828EC(0, &qword_269F44C98, v34, v35);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v36 = sub_256175A08();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 16))(v32, v33, v36);
    }
    else
    {
      *uint64_t v32 = *v33;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v37 = a3[11];
  uint64_t v38 = (char *)a1 + v37;
  uint64_t v39 = (char *)a2 + v37;
  char *v38 = *v39;
  *((void *)v38 + 1) = *((void *)v39 + 1);
  swift_retain();
  swift_release();
  uint64_t v40 = a3[12];
  long long v41 = (void *)((char *)a1 + v40);
  uint64_t v42 = (void *)((char *)a2 + v40);
  *long long v41 = *v42;
  v41[1] = v42[1];
  v41[2] = v42[2];
  void v41[3] = v42[3];
  v41[4] = v42[4];
  v41[5] = v42[5];
  v41[6] = v42[6];
  v41[7] = v42[7];
  v41[8] = v42[8];
  swift_retain();
  swift_release();
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  uint64_t v43 = a3[14];
  uint64_t v44 = (char *)a1 + v43;
  uint64_t v45 = (char *)a2 + v43;
  *(void *)((char *)a1 + v43) = *(void *)((char *)a2 + v43);
  swift_retain();
  swift_release();
  *((void *)v44 + 1) = *((void *)v45 + 1);
  swift_retain();
  swift_release();
  v44[16] = v45[16];
  return a1;
}

uint64_t sub_25607B20C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

_OWORD *sub_25607B26C(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_256175FC8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  uint64_t v11 = a3[8];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  sub_2560828EC(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  uint64_t v15 = v14;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_256176AA8();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v13, 1, v16))
    {
      sub_2560828EC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v12, v13, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, v16);
    }
    uint64_t v19 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    uint64_t v20 = &v12[v19];
    uint64_t v21 = &v13[v19];
    uint64_t v22 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  uint64_t v23 = a3[9];
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  sub_2560828EC(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  uint64_t v27 = v26;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v28 = sub_256175D98();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v24, v25, v28);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
  }
  uint64_t v29 = a3[10];
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  sub_2560828EC(0, &qword_269F44C98, MEMORY[0x263F07920], MEMORY[0x263F185C8]);
  uint64_t v33 = v32;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v34 = sub_256175A08();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v30, v31, v34);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
  }
  uint64_t v35 = a3[12];
  *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
  uint64_t v36 = (char *)a1 + v35;
  uint64_t v37 = (char *)a2 + v35;
  long long v38 = *((_OWORD *)v37 + 3);
  *((_OWORD *)v36 + 2) = *((_OWORD *)v37 + 2);
  *((_OWORD *)v36 + 3) = v38;
  *((void *)v36 + 8) = *((void *)v37 + 8);
  long long v39 = *((_OWORD *)v37 + 1);
  *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
  *((_OWORD *)v36 + 1) = v39;
  uint64_t v40 = a3[14];
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  long long v41 = (char *)a1 + v40;
  uint64_t v42 = (char *)a2 + v40;
  *(_OWORD *)long long v41 = *(_OWORD *)v42;
  v41[16] = v42[16];
  return a1;
}

void *sub_25607B6E8(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_256175FC8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v11) = *(_OWORD *)((char *)a2 + v11);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v12 = a3[8];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25607B20C((uint64_t)a1 + v12, (uint64_t)&qword_269F439D8, (uint64_t)type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8], (uint64_t (*)(void))sub_2560828EC);
    sub_2560828EC(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, v15);
    uint64_t v17 = v16;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = sub_256176AA8();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v14, 1, v18))
      {
        sub_2560828EC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v13, v14, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v13, 0, 1, v18);
      }
      uint64_t v21 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
      uint64_t v22 = &v13[v21];
      uint64_t v23 = &v14[v21];
      uint64_t v24 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    uint64_t v25 = a3[9];
    uint64_t v26 = (char *)a1 + v25;
    uint64_t v27 = (char *)a2 + v25;
    uint64_t v28 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25607B20C((uint64_t)a1 + v25, (uint64_t)&qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8], (uint64_t (*)(void))sub_2560828EC);
    sub_2560828EC(0, &qword_269F47D00, v28, v29);
    uint64_t v31 = v30;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v32 = sub_256175D98();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v26, v27, v32);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v26, v27, *(void *)(*(void *)(v31 - 8) + 64));
    }
    uint64_t v33 = a3[10];
    uint64_t v34 = (char *)a1 + v33;
    uint64_t v35 = (char *)a2 + v33;
    uint64_t v36 = (uint64_t (*)(uint64_t))MEMORY[0x263F07920];
    uint64_t v37 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25607B20C((uint64_t)a1 + v33, (uint64_t)&qword_269F44C98, MEMORY[0x263F07920], MEMORY[0x263F185C8], (uint64_t (*)(void))sub_2560828EC);
    sub_2560828EC(0, &qword_269F44C98, v36, v37);
    uint64_t v39 = v38;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v40 = sub_256175A08();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v34, v35, v40);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v34, v35, *(void *)(*(void *)(v39 - 8) + 64));
    }
  }
  uint64_t v41 = a3[11];
  uint64_t v42 = (char *)a1 + v41;
  uint64_t v43 = (char *)a2 + v41;
  *uint64_t v42 = *v43;
  *((void *)v42 + 1) = *((void *)v43 + 1);
  swift_release();
  uint64_t v44 = a3[12];
  uint64_t v45 = (char *)a1 + v44;
  uint64_t v46 = (char *)a2 + v44;
  long long v47 = *((_OWORD *)v46 + 1);
  *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
  *((_OWORD *)v45 + 1) = v47;
  long long v48 = *((_OWORD *)v46 + 3);
  *((_OWORD *)v45 + 2) = *((_OWORD *)v46 + 2);
  *((_OWORD *)v45 + 3) = v48;
  *((void *)v45 + 8) = *((void *)v46 + 8);
  swift_release();
  uint64_t v49 = a3[14];
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  uint64_t v50 = (char *)a1 + v49;
  uint64_t v51 = (char *)a2 + v49;
  *(void *)((char *)a1 + v49) = *(void *)v51;
  swift_release();
  *((void *)v50 + 1) = *((void *)v51 + 1);
  swift_release();
  v50[16] = v51[16];
  return a1;
}

uint64_t sub_25607BC58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25607BC6C);
}

uint64_t sub_25607BC6C(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_256175FC8();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_11:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v14(a1 + v11, a2, v9);
  }
  sub_2560828EC(0, &qword_269F444B8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[8];
    goto LABEL_11;
  }
  sub_2560828EC(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a3[9];
    goto LABEL_11;
  }
  sub_2560828EC(0, &qword_269F45498, MEMORY[0x263F07920], MEMORY[0x263F185D0]);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a3[10];

  return v16(v18, a2, v17);
}

uint64_t sub_25607BEC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25607BED4);
}

uint64_t sub_25607BED4(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_256175FC8();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_9:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v14(v5 + v11, a2, a2, v9);
  }
  sub_2560828EC(0, &qword_269F444B8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[8];
    goto LABEL_9;
  }
  sub_2560828EC(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[9];
    goto LABEL_9;
  }
  sub_2560828EC(0, &qword_269F45498, MEMORY[0x263F07920], MEMORY[0x263F185D0]);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = v5 + a4[10];

  return v16(v18, a2, a2, v17);
}

void sub_25607C128()
{
  sub_256175FC8();
  if (v0 <= 0x3F)
  {
    sub_2560828EC(319, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    if (v1 <= 0x3F)
    {
      sub_2560828EC(319, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
      if (v2 <= 0x3F)
      {
        sub_2560828EC(319, &qword_269F44C98, MEMORY[0x263F07920], MEMORY[0x263F185C8]);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t sub_25607C33C()
{
  return swift_getOpaqueTypeConformance2();
}

__n128 sub_25607C358@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ValenceSelectionPhaseContent();
  uint64_t v5 = v4 - 8;
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v37 + 64);
  MEMORY[0x270FA5388](v4);
  type metadata accessor for StateOfMindEntryModel(0);
  sub_256083354(&qword_269F42CB0, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel);
  sub_2561760F8();
  swift_getKeyPath();
  sub_256176108();
  swift_release();
  swift_release();
  uint64_t v35 = v51;
  uint64_t v36 = v50;
  double v41 = v52;
  sub_2561760F8();
  swift_getKeyPath();
  sub_256176108();
  swift_release();
  swift_release();
  double v40 = v49;
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(v5 + 56));
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  unint64_t v10 = v7[2];
  unint64_t v11 = v7[3];
  uint64_t v12 = v7[4];
  uint64_t v13 = v7[5];
  uint64_t v14 = v7[6];
  uint64_t v15 = v7[7];
  uint64_t v16 = v7[8];
  sub_256082950(0, &qword_269F45C48, (uint64_t)&_s9PlacementVN, MEMORY[0x263F1B5D0]);
  sub_256177578();
  double v17 = sub_2560E9B00();
  double v38 = v18;
  double v39 = v17;
  *(void *)&long long v53 = v8;
  *((void *)&v53 + 1) = v9;
  v54.n128_u64[0] = v10;
  v54.n128_u64[1] = v11;
  *(void *)&long long v55 = v12;
  *((void *)&v55 + 1) = v13;
  *(void *)&long long v56 = v14;
  *((void *)&v56 + 1) = v15;
  *(void *)&long long v57 = v16;
  sub_256177578();
  CGFloat v34 = v44;
  double v19 = 1.0;
  if (CGRectGetHeight(v46) == 0.0
    || (v62.origin.x = v42, v62.origin.y = v43, v62.size.width = v34, v62.size.height = v45, CGRectGetWidth(v62) == 0.0))
  {
    uint64_t v21 = v36;
    uint64_t v20 = v37;
    uint64_t v22 = v35;
  }
  else
  {
    v63.origin.x = v42;
    v63.origin.y = v43;
    v63.size.width = v34;
    v63.size.height = v45;
    uint64_t v21 = v36;
    uint64_t v20 = v37;
    uint64_t v22 = v35;
    if (CGRectGetHeight(v63) != 0.0)
    {
      double Height = CGRectGetHeight(v46);
      v64.origin.x = v42;
      v64.origin.y = v43;
      v64.size.width = v34;
      v64.size.height = v45;
      double Width = CGRectGetWidth(v64);
      v65.origin.x = v42;
      v65.origin.y = v43;
      v65.size.width = v34;
      v65.size.height = v45;
      double v33 = CGRectGetHeight(v65);
      if (v33 >= Width) {
        double v33 = Width;
      }
      double v19 = Height * 1.5 / v33;
    }
  }
  uint64_t KeyPath = swift_getKeyPath();
  sub_2560ECCBC(KeyPath, 0, v21, v22, v47, (uint64_t)&v53, v41, v40, v39, v38, v19, v48);
  sub_25608300C(v2, (uint64_t)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhaseContent);
  unint64_t v24 = (*(unsigned __int8 *)(v20 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v25 = swift_allocObject();
  sub_256082FA4((uint64_t)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v25 + v24, (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhaseContent);
  long long v26 = v60;
  *(_OWORD *)(a1 + 96) = v59;
  *(_OWORD *)(a1 + 112) = v26;
  uint64_t v27 = v61;
  long long v28 = v56;
  *(_OWORD *)(a1 + 32) = v55;
  *(_OWORD *)(a1 + 48) = v28;
  long long v29 = v58;
  *(_OWORD *)(a1 + 64) = v57;
  *(_OWORD *)(a1 + 80) = v29;
  __n128 result = v54;
  *(_OWORD *)a1 = v53;
  *(__n128 *)(a1 + 16) = result;
  *(void *)(a1 + 128) = v27;
  *(void *)(a1 + 136) = sub_25607C7A0;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = sub_256082850;
  *(void *)(a1 + 160) = v25;
  return result;
}

uint64_t sub_25607C7A4()
{
  return swift_release();
}

id sub_25607C8E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v54 = a1;
  sub_256081A50(0, (unint64_t *)&qword_269F44070, MEMORY[0x263F1A470]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v51 = (char *)&v49 - v4;
  sub_2560819BC(0);
  uint64_t v53 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v50 = (uint64_t)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v49 - v8;
  sub_2560838F4(0, &qword_269F45C68, (uint64_t (*)(uint64_t))sub_255FDED04, (uint64_t (*)(uint64_t))sub_2560819BC, MEMORY[0x263F19B20]);
  uint64_t v52 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v49 - v11;
  uint64_t v13 = type metadata accessor for ValenceSelectionPhaseContent();
  double v49 = *(char **)(v13 - 8);
  uint64_t v14 = *((void *)v49 + 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = type metadata accessor for ValenceSelectionPhaseSpecs();
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  double v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v49 - v19;
  if (*(unsigned char *)(*(void *)(v1 + 8) + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_useLiveVisualization) == 1)
  {
    uint64_t v21 = sub_256177478();
    sub_25611BB38((uint64_t)v20);
    sub_256175FA8();
    double v23 = v22;
    if ((sub_256176138() & 1) == 0)
    {
      double v27 = 64.0;
LABEL_13:
      double v34 = (v23 + v27) * 0.67;
      sub_256082F44((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhaseSpecs);
      uint64_t v35 = sub_2561778E8();
      sub_256116B08(0.0, 1, 0.0, 1, v34, 0, 0.0, 1, (uint64_t)v55, 0.0, 1, 0.0, 1, v35, v36, v21, 0x3FF0000000000000, 0);
      swift_release();
      sub_25608300C(v2, (uint64_t)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhaseContent);
      unint64_t v37 = (v49[80] + 16) & ~(unint64_t)v49[80];
      uint64_t v38 = swift_allocObject();
      sub_256082FA4((uint64_t)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v38 + v37, (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhaseContent);
      long long v39 = v55[7];
      *((_OWORD *)v12 + 6) = v55[6];
      *((_OWORD *)v12 + 7) = v39;
      uint64_t v40 = v56;
      long long v41 = v55[3];
      *((_OWORD *)v12 + 2) = v55[2];
      *((_OWORD *)v12 + 3) = v41;
      long long v42 = v55[5];
      *((_OWORD *)v12 + 4) = v55[4];
      *((_OWORD *)v12 + 5) = v42;
      long long v43 = v55[1];
      *(_OWORD *)uint64_t v12 = v55[0];
      *((_OWORD *)v12 + 1) = v43;
      *((void *)v12 + 16) = v40;
      *((void *)v12 + 17) = sub_25607C7A0;
      *((void *)v12 + 18) = 0;
      *((void *)v12 + 19) = sub_256083750;
      *((void *)v12 + 20) = v38;
      swift_storeEnumTagMultiPayload();
      sub_255FDED04();
      sub_256083074();
      sub_256083190(&qword_269F45C90, sub_2560819BC, (void (*)(void))sub_256083288);
      return (id)sub_256176898();
    }
    id result = (id)MobileGestalt_get_current_device();
    if (result)
    {
      uint64_t v25 = result;
      int homeButtonType = MobileGestalt_get_homeButtonType();

      double v27 = 32.0;
      if (homeButtonType == 2) {
        double v27 = 40.0;
      }
      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_17;
  }
  double v49 = v9;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_256175C88();
  swift_release();
  swift_release();
  swift_release();
  LOBYTE(v57) = 1;
  StateOfMindVisualization.ValenceImageProvider.init(valence:imageScale:)(v55, *(double *)v55);
  long long v57 = &unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B6538);
  sub_256082950(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_255F97230();
  uint64_t v28 = (uint64_t)v51;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25611BB38((uint64_t)v18);
  sub_256175FA8();
  double v30 = v29;
  if ((sub_256176138() & 1) == 0)
  {
    double v33 = 64.0;
LABEL_15:
    uint64_t v44 = (uint64_t)v49;
    double v45 = (v30 + v33) * 0.67;
    sub_256082F44((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhaseSpecs);
    uint64_t v46 = sub_2561778E8();
    uint64_t v47 = v50;
    sub_256116CF0(0.0, 1, 0.0, 1, v45, 0, 0.0, 1, v50, 0.0, 1, 0.0, 1, v46, v48);
    sub_25607B20C(v28, (uint64_t)&qword_269F44070, MEMORY[0x263F1A470], (uint64_t)&type metadata for StateOfMindVisualization.ValenceImage, (uint64_t (*)(void))sub_256081A50);
    sub_256082FA4(v47, v44, (uint64_t (*)(void))sub_2560819BC);
    sub_25608300C(v44, (uint64_t)v12, (uint64_t (*)(void))sub_2560819BC);
    swift_storeEnumTagMultiPayload();
    sub_255FDED04();
    sub_256083074();
    sub_256083190(&qword_269F45C90, sub_2560819BC, (void (*)(void))sub_256083288);
    sub_256176898();
    return (id)sub_256082F44(v44, (uint64_t (*)(void))sub_2560819BC);
  }
  id result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    uint64_t v31 = result;
    int v32 = MobileGestalt_get_homeButtonType();

    double v33 = 32.0;
    if (v32 == 2) {
      double v33 = 40.0;
    }
    goto LABEL_15;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_25607D184@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_2561768E8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = 0xD000000000000022;
  v15[1] = 0x80000002561ABF40;
  sub_256176AC8();
  sub_256175FB8();
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *a1 = v7;
  a1[1] = v9;
  a1[2] = v11;
  a1[3] = v13;
  return result;
}

uint64_t sub_25607D2C4()
{
  return swift_release();
}

uint64_t sub_25607D3F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v293 = a1;
  uint64_t v249 = a2;
  uint64_t v243 = sub_256176158();
  uint64_t v242 = *(void *)(v243 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v243);
  uint64_t v240 = (char *)&v230 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  unsigned __int8 v241 = (char *)&v230 - v4;
  sub_255F89A5C();
  uint64_t v236 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v232 = (char *)&v230 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ValenceSelectionPhaseContent();
  uint64_t v246 = *(void *)(v7 - 8);
  uint64_t v8 = v7 - 8;
  uint64_t v286 = v7 - 8;
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v247 = v9;
  uint64_t v248 = (uint64_t)&v230 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FDF0C8();
  uint64_t v238 = v10;
  uint64_t v234 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unsigned __int8 v233 = (char *)&v230 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t (*)(uint64_t))MEMORY[0x263F1A470];
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F18E28];
  sub_2560838F4(0, &qword_269F440B8, (uint64_t (*)(uint64_t))sub_255FDF0C8, MEMORY[0x263F1A470], MEMORY[0x263F18E28]);
  MEMORY[0x270FA5388](v14 - 8);
  unsigned __int8 v239 = (char *)&v230 - v15;
  sub_255FDEFF8(0);
  uint64_t v278 = v16;
  uint64_t v277 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v237 = (uint64_t)&v230 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v235 = (uint64_t)&v230 - v19;
  sub_2560828EC(0, &qword_269F440A8, (uint64_t (*)(uint64_t))sub_255FDEFF8, MEMORY[0x263F8D8F0]);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v250 = (uint64_t)&v230 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v289 = (uint64_t)&v230 - v23;
  uint64_t v266 = type metadata accessor for ValenceSlider() - 8;
  MEMORY[0x270FA5388](v266);
  v265 = (uint64_t *)((char *)&v230 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_256081BEC(0);
  uint64_t v268 = v25;
  MEMORY[0x270FA5388](v25);
  uint64_t v267 = (uint64_t)&v230 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v272 = sub_256081BEC;
  v288 = v12;
  v287 = v13;
  sub_2560838F4(0, (unint64_t *)&qword_269F44098, (uint64_t (*)(uint64_t))sub_256081BEC, v12, v13);
  MEMORY[0x270FA5388](v27 - 8);
  v269 = (char *)&v230 - v28;
  sub_256081BBC(0);
  uint64_t v271 = v29 - 8;
  uint64_t v30 = MEMORY[0x270FA5388](v29 - 8);
  uint64_t v281 = (uint64_t)&v230 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v270 = (uint64_t)&v230 - v33;
  MEMORY[0x270FA5388](v32);
  uint64_t v290 = (uint64_t)&v230 - v34;
  sub_256081808(0, &qword_269F44088, &qword_269F44030, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionTitleText);
  MEMORY[0x270FA5388](v35 - 8);
  uint64_t v259 = (uint64_t)&v230 - v36;
  sub_256081B34(0, &qword_269F44080, &qword_269F44088);
  uint64_t v262 = v37 - 8;
  MEMORY[0x270FA5388](v37 - 8);
  uint64_t v260 = (uint64_t)&v230 - v38;
  sub_256081AB4();
  uint64_t v263 = v39 - 8;
  uint64_t v40 = MEMORY[0x270FA5388](v39 - 8);
  uint64_t v294 = (uint64_t)&v230 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  uint64_t v261 = (uint64_t)&v230 - v43;
  MEMORY[0x270FA5388](v42);
  uint64_t v297 = (uint64_t)&v230 - v44;
  sub_2560838F4(0, (unint64_t *)&qword_269F44038, (uint64_t (*)(uint64_t))sub_255FDED04, (uint64_t (*)(uint64_t))sub_2560819BC, MEMORY[0x263F19B28]);
  uint64_t v46 = MEMORY[0x270FA5388](v45 - 8);
  uint64_t v280 = (uint64_t)&v230 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v46);
  uint64_t v296 = (uint64_t)&v230 - v48;
  uint64_t v244 = type metadata accessor for ValenceSelectionPhaseSpecs();
  uint64_t v49 = MEMORY[0x270FA5388](v244);
  uint64_t v231 = (uint64_t)&v230 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = MEMORY[0x270FA5388](v49);
  uint64_t v245 = (uint64_t)&v230 - v52;
  uint64_t v53 = MEMORY[0x270FA5388](v51);
  uint64_t v264 = (uint64_t)&v230 - v54;
  uint64_t v55 = MEMORY[0x270FA5388](v53);
  uint64_t v256 = (uint64_t)&v230 - v56;
  uint64_t v57 = MEMORY[0x270FA5388](v55);
  uint64_t v273 = (uint64_t)&v230 - v58;
  MEMORY[0x270FA5388](v57);
  uint64_t v283 = (uint64_t)&v230 - v59;
  uint64_t v60 = type metadata accessor for ValenceSelectionTitleText();
  uint64_t v61 = MEMORY[0x270FA5388](v60);
  v257 = (uint64_t *)((char *)&v230 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v61);
  CGRect v64 = (char *)&v230 - v63;
  v282 = type metadata accessor for ValenceSelectionTitleText;
  sub_2560838F4(0, &qword_269F44030, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionTitleText, v12, v13);
  uint64_t v66 = MEMORY[0x270FA5388](v65 - 8);
  v258 = (char *)&v230 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v66);
  id v69 = (char *)&v230 - v68;
  sub_256081808(0, &qword_269F44028, &qword_269F44030, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionTitleText);
  uint64_t v71 = v70 - 8;
  MEMORY[0x270FA5388](v70);
  uint64_t v73 = (char *)&v230 - v72;
  sub_2560817E4(0);
  uint64_t v274 = v74 - 8;
  uint64_t v75 = MEMORY[0x270FA5388](v74 - 8);
  uint64_t v279 = (uint64_t)&v230 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = MEMORY[0x270FA5388](v75);
  uint64_t v251 = (uint64_t)&v230 - v78;
  MEMORY[0x270FA5388](v77);
  uint64_t v295 = (uint64_t)&v230 - v79;
  uint64_t v80 = v293;
  uint64_t v81 = sub_25607F3F4();
  uint64_t v82 = *(int *)(v8 + 60);
  char v83 = *(unsigned char *)(v80 + v82);
  uint64_t v292 = v82;
  *(void *)CGRect v64 = v81;
  *((void *)v64 + 1) = v84;
  v64[16] = v83;
  uint64_t v85 = *(int *)(v60 + 24);
  uint64_t v252 = v60;
  *(void *)&v64[v85] = swift_getKeyPath();
  sub_2560828EC(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  uint64_t v284 = v86;
  swift_storeEnumTagMultiPayload();
  *(void *)&long long v306 = &unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B6568);
  sub_256082950(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  uint64_t v276 = v87;
  unint64_t v275 = sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  uint64_t v254 = sub_256083354(&qword_269F45C50, (void (*)(uint64_t))type metadata accessor for ValenceSelectionTitleText);
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  v253 = type metadata accessor for ValenceSelectionTitleText;
  sub_256082F44((uint64_t)v64, (uint64_t (*)(void))type metadata accessor for ValenceSelectionTitleText);
  char v88 = sub_256176D98();
  uint64_t v89 = v286;
  uint64_t v90 = v293;
  uint64_t v291 = v293 + *(int *)(v286 + 40);
  uint64_t v91 = v283;
  sub_25611BB38(v283);
  sub_2560184DC(*(unsigned char *)(v90 + v82));
  sub_256082F44(v91, (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhaseSpecs);
  sub_256175D48();
  uint64_t v93 = v92;
  uint64_t v95 = v94;
  uint64_t v97 = v96;
  uint64_t v99 = v98;
  uint64_t v100 = (uint64_t (*)(uint64_t))v282;
  sub_256082728((uint64_t)v69, (uint64_t)v73, &qword_269F44030, (uint64_t (*)(uint64_t))v282, v288, v287);
  uint64_t v101 = &v73[*(int *)(v71 + 44)];
  *uint64_t v101 = v88;
  *((void *)v101 + 1) = v93;
  *((void *)v101 + 2) = v95;
  *((void *)v101 + 3) = v97;
  *((void *)v101 + 4) = v99;
  v101[40] = 0;
  sub_25608299C((uint64_t)v69);
  uint64_t v255 = v90 + *(int *)(v89 + 52);
  uint64_t v102 = *(void *)(v255 + 8);
  LOBYTE(v306) = *(unsigned char *)v255;
  *((void *)&v306 + 1) = v102;
  sub_256082950(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
  uint64_t v285 = v103;
  sub_256177578();
  if ((_BYTE)v299) {
    double v104 = 1.0;
  }
  else {
    double v104 = 0.0;
  }
  uint64_t v105 = v251;
  sub_256082A3C((uint64_t)v73, v251, &qword_269F44028, &qword_269F44030, v100);
  *(double *)(v105 + *(int *)(v274 + 44)) = v104;
  sub_256082AB0((uint64_t)v73, &qword_269F44028, &qword_269F44030, v100);
  sub_256082FA4(v105, v295, (uint64_t (*)(void))sub_2560817E4);
  uint64_t v106 = v273;
  sub_25611BB38(v273);
  uint64_t v107 = v292;
  LODWORD(v274) = *(unsigned __int8 *)(v90 + v292);
  *(void *)&long long v298 = type metadata accessor for ValenceSelectionPhaseSpecs;
  sub_256082F44(v106, (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhaseSpecs);
  sub_25607C8E0(v296);
  uint64_t v108 = v256;
  sub_25611BB38(v256);
  LODWORD(v273) = *(unsigned __int8 *)(v90 + v107);
  uint64_t v109 = v107;
  sub_256082F44(v108, (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhaseSpecs);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_256175C88();
  swift_release();
  swift_release();
  swift_release();
  sub_256178408();
  id v110 = (id)HKUILocalizedStringForValenceClassification();
  uint64_t v111 = sub_256177EE8();
  uint64_t v113 = v112;

  char v114 = *(unsigned char *)(v90 + v109);
  uint64_t v115 = v109;
  uint64_t v116 = (uint64_t)v257;
  uint64_t *v257 = v111;
  *(void *)(v116 + 8) = v113;
  *(unsigned char *)(v116 + 16) = v114;
  unint64_t v117 = (uint64_t *)(v116 + *(int *)(v252 + 24));
  *unint64_t v117 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  *(void *)&long long v306 = &unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B6598);
  sub_256177E28();
  swift_bridgeObjectRelease();
  uint64_t v118 = (uint64_t)v258;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_256082F44(v116, (uint64_t (*)(void))v253);
  uint64_t v119 = sub_2561778E8();
  uint64_t v120 = v259;
  sub_256116E40(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v259, 0.0, 1, 0.0, 1, v119, v121);
  sub_25608299C(v118);
  LOBYTE(v117) = sub_256176DA8();
  uint64_t v122 = v283;
  sub_25611BB38(v283);
  sub_2560185F0(*(unsigned char *)(v90 + v115));
  sub_256082F44(v122, (uint64_t (*)(void))v298);
  sub_256175D48();
  uint64_t v124 = v123;
  uint64_t v126 = v125;
  uint64_t v128 = v127;
  uint64_t v130 = v129;
  uint64_t v131 = v260;
  uint64_t v132 = (uint64_t (*)(uint64_t))v282;
  sub_256082A3C(v120, v260, &qword_269F44088, &qword_269F44030, (uint64_t (*)(uint64_t))v282);
  uint64_t v133 = v131 + *(int *)(v262 + 44);
  *(unsigned char *)uint64_t v133 = (_BYTE)v117;
  *(void *)(v133 + 8) = v124;
  *(void *)(v133 + 16) = v126;
  *(void *)(v133 + 24) = v128;
  *(void *)(v133 + 32) = v130;
  *(unsigned char *)(v133 + 40) = 0;
  sub_256082AB0(v120, &qword_269F44088, &qword_269F44030, v132);
  uint64_t v134 = v255;
  uint64_t v135 = *(void *)(v255 + 8);
  LOBYTE(v306) = *(unsigned char *)v255;
  *((void *)&v306 + 1) = v135;
  sub_256177578();
  if ((_BYTE)v299) {
    double v136 = 1.0;
  }
  else {
    double v136 = 0.0;
  }
  uint64_t v137 = v261;
  sub_256082B0C(v131, v261);
  *(double *)(v137 + *(int *)(v263 + 44)) = v136;
  sub_256082B90(v131);
  sub_256082FA4(v137, v297, (uint64_t (*)(void))sub_256081AB4);
  uint64_t v138 = v90;
  uint64_t v139 = type metadata accessor for StateOfMindEntryModel(0);
  uint64_t v140 = (uint64_t (*)(uint64_t))sub_256083354(&qword_269F42CB0, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel);
  uint64_t v263 = v139;
  sub_2561760F8();
  swift_getKeyPath();
  v282 = (uint64_t (*)())v140;
  sub_256176108();
  swift_release();
  swift_release();
  uint64_t v141 = *((void *)&v306 + 1);
  uint64_t v142 = v307[0];
  char v143 = *(unsigned char *)(v138 + v115);
  uint64_t v144 = (uint64_t)v265;
  void *v265 = v306;
  *(void *)(v144 + 8) = v141;
  *(void *)(v144 + 16) = v142;
  *(unsigned char *)(v144 + 24) = v143;
  uint64_t v145 = (uint64_t *)(v144 + *(int *)(v266 + 32));
  *uint64_t v145 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  LOBYTE(v145) = sub_256176DA8();
  sub_25611BB38(v122);
  sub_256082F44(v122, (uint64_t (*)(void))v298);
  sub_256175D48();
  uint64_t v147 = v146;
  uint64_t v149 = v148;
  uint64_t v151 = v150;
  uint64_t v153 = v152;
  uint64_t v154 = v267;
  sub_25608300C(v144, v267, (uint64_t (*)(void))type metadata accessor for ValenceSlider);
  uint64_t v155 = v154 + *(int *)(v268 + 36);
  *(unsigned char *)uint64_t v155 = (_BYTE)v145;
  *(void *)(v155 + 8) = v147;
  *(void *)(v155 + 16) = v149;
  *(void *)(v155 + 24) = v151;
  *(void *)(v155 + 32) = v153;
  *(unsigned char *)(v155 + 40) = 0;
  sub_256082F44(v144, (uint64_t (*)(void))type metadata accessor for ValenceSlider);
  uint64_t v156 = v278;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_256175C88();
  swift_release();
  swift_release();
  swift_release();
  sub_256178408();
  id v157 = (id)HKUILocalizedStringForValenceClassification();
  uint64_t v158 = sub_256177EE8();
  uint64_t v160 = v159;

  *(void *)&long long v306 = v158;
  *((void *)&v306 + 1) = v160;
  sub_256083190(&qword_269F45C58, sub_256081BEC, (void (*)(void))sub_256082C0C);
  sub_255F5CE90();
  uint64_t v161 = (uint64_t)v269;
  sub_2561771D8();
  int v162 = v273;
  swift_bridgeObjectRelease();
  sub_256082F44(v154, (uint64_t (*)(void))sub_256081BEC);
  uint64_t v163 = *(void *)(v134 + 8);
  uint64_t v164 = v290;
  LOBYTE(v306) = *(unsigned char *)v134;
  *((void *)&v306 + 1) = v163;
  sub_256177578();
  if ((_BYTE)v299) {
    double v165 = 1.0;
  }
  else {
    double v165 = 0.0;
  }
  uint64_t v166 = v270;
  sub_256082728(v161, v270, (unint64_t *)&qword_269F44098, (uint64_t (*)(uint64_t))v272, v288, v287);
  *(double *)(v166 + *(int *)(v271 + 44)) = v165;
  sub_256082C40(v161);
  sub_256082FA4(v166, v164, (uint64_t (*)(void))sub_256081BBC);
  uint64_t v167 = v264;
  sub_25611BB38(v264);
  int v168 = *(unsigned __int8 *)(v138 + v292);
  uint64_t v169 = v167;
  int v170 = v274;
  sub_256082F44(v169, (uint64_t (*)(void))v298);
  uint64_t v171 = 1;
  uint64_t v172 = v277;
  if (*(unsigned char *)(v138 + *(int *)(v286 + 32))) {
    goto LABEL_16;
  }
  sub_2561760F8();
  swift_getKeyPath();
  uint64_t v173 = v138;
  sub_256176108();
  swift_release();
  swift_release();
  long long v299 = v306;
  uint64_t v300 = v307[0];
  sub_256177788();
  long long v298 = v303;
  uint64_t v174 = v304;
  char v175 = v305;
  uint64_t v301 = v244;
  v302 = &off_2704B8BC0;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v299);
  sub_25611BB38((uint64_t)boxed_opaque_existential_1);
  uint64_t v177 = v248;
  sub_25608300C(v173, v248, (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhaseContent);
  unint64_t v178 = (*(unsigned __int8 *)(v246 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v246 + 80);
  uint64_t v179 = swift_allocObject();
  sub_256082FA4(v177, v179 + v178, (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhaseContent);
  long long v308 = v298;
  uint64_t v309 = v174;
  char v310 = v175;
  sub_255F9A6BC(&v299, (uint64_t)v307);
  *(void *)&long long v306 = sub_256082CE4;
  *((void *)&v306 + 1) = v179;
  v311 = sub_25602078C;
  uint64_t v312 = 0;
  uint64_t v180 = v245;
  sub_25611BB38(v245);
  uint64_t result = (uint64_t)(id)MobileGestalt_get_current_device();
  if (!result)
  {
LABEL_25:
    __break(1u);
    return result;
  }
  char v182 = (void *)result;
  int homeButtonType = MobileGestalt_get_homeButtonType();

  uint64_t v184 = v242;
  v185 = (unsigned int *)MEMORY[0x263F18CC8];
  if (homeButtonType != 2) {
    v185 = (unsigned int *)MEMORY[0x263F18CB8];
  }
  uint64_t v186 = v240;
  uint64_t v187 = v243;
  (*(void (**)(char *, void, uint64_t))(v242 + 104))(v240, *v185, v243);
  v188 = *(void (**)(char *, char *, uint64_t))(v184 + 32);
  uint64_t v189 = v241;
  v188(v241, v186, v187);
  sub_256082F44(v180, (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhaseSpecs);
  sub_256083354(&qword_269F433E0, MEMORY[0x263F18D80]);
  uint64_t result = sub_256177E98();
  if ((result & 1) == 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v190 = (uint64_t)v232;
  v188(v232, v189, v187);
  sub_256082038(0, (unint64_t *)&qword_269F435E0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for ActionButton);
  uint64_t v192 = v191;
  unint64_t v193 = sub_255FDF22C();
  uint64_t v194 = sub_256083354((unint64_t *)&qword_269F43368, (void (*)(uint64_t))sub_255F89A5C);
  uint64_t v195 = v233;
  int v196 = v168;
  uint64_t v197 = v236;
  sub_256177138();
  sub_256082F44(v190, (uint64_t (*)(void))sub_255F89A5C);
  sub_25602110C((uint64_t)&v306);
  *(void *)&long long v306 = &unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B65C8);
  sub_256177E28();
  swift_bridgeObjectRelease();
  *(void *)&long long v306 = v192;
  *((void *)&v306 + 1) = v197;
  int v168 = v196;
  v307[0] = v193;
  v307[1] = v194;
  swift_getOpaqueTypeConformance2();
  uint64_t v198 = (uint64_t)v239;
  uint64_t v199 = v238;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  (*(void (**)(char *, uint64_t))(v234 + 8))(v195, v199);
  LOBYTE(v199) = sub_256176DA8();
  uint64_t v200 = v231;
  sub_25611BB38(v231);
  sub_256082F44(v200, (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhaseSpecs);
  sub_256175D48();
  uint64_t v202 = v201;
  uint64_t v204 = v203;
  uint64_t v206 = v205;
  uint64_t v208 = v207;
  uint64_t v209 = v237;
  sub_256082728(v198, v237, &qword_269F440B8, (uint64_t (*)(uint64_t))sub_255FDF0C8, MEMORY[0x263F1A470], MEMORY[0x263F18E28]);
  uint64_t v156 = v278;
  uint64_t v210 = v209 + *(int *)(v278 + 36);
  *(unsigned char *)uint64_t v210 = v199;
  *(void *)(v210 + 8) = v202;
  *(void *)(v210 + 16) = v204;
  *(void *)(v210 + 24) = v206;
  *(void *)(v210 + 32) = v208;
  *(unsigned char *)(v210 + 40) = 0;
  sub_256082D70(v198);
  uint64_t v211 = v209;
  uint64_t v212 = v235;
  sub_256082FA4(v211, v235, (uint64_t (*)(void))sub_255FDEFF8);
  sub_256082FA4(v212, v289, (uint64_t (*)(void))sub_255FDEFF8);
  uint64_t v171 = 0;
  uint64_t v172 = v277;
  uint64_t v164 = v290;
  int v170 = v274;
  int v162 = v273;
LABEL_16:
  uint64_t v213 = v289;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v172 + 56))(v289, v171, 1, v156);
  uint64_t v214 = 0x4038000000000000;
  if (v168) {
    uint64_t v214 = 0;
  }
  *(void *)&long long v298 = v214;
  uint64_t v215 = 0x403E000000000000;
  if (v162) {
    uint64_t v216 = 0x4020000000000000;
  }
  else {
    uint64_t v216 = 0x403E000000000000;
  }
  uint64_t v293 = v216;
  if (v170) {
    uint64_t v215 = 0x4020000000000000;
  }
  uint64_t v292 = v215;
  uint64_t v217 = v279;
  sub_25608300C(v295, v279, (uint64_t (*)(void))sub_2560817E4);
  v218 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F19B28];
  uint64_t v219 = v280;
  sub_256082728(v296, v280, (unint64_t *)&qword_269F44038, (uint64_t (*)(uint64_t))sub_255FDED04, (uint64_t (*)(uint64_t))sub_2560819BC, MEMORY[0x263F19B28]);
  sub_25608300C(v297, v294, (uint64_t (*)(void))sub_256081AB4);
  sub_25608300C(v164, v281, (uint64_t (*)(void))sub_256081BBC);
  uint64_t v220 = v213;
  uint64_t v221 = v250;
  sub_256082E10(v220, v250);
  uint64_t v222 = v249;
  sub_25608300C(v217, v249, (uint64_t (*)(void))sub_2560817E4);
  sub_255FDEAD4();
  v224 = v223;
  uint64_t v225 = v222 + v223[12];
  *(void *)uint64_t v225 = v292;
  *(unsigned char *)(v225 + 8) = 0;
  sub_256082728(v219, v222 + v223[16], (unint64_t *)&qword_269F44038, (uint64_t (*)(uint64_t))sub_255FDED04, (uint64_t (*)(uint64_t))sub_2560819BC, v218);
  uint64_t v226 = v222 + v224[20];
  *(void *)uint64_t v226 = v293;
  *(unsigned char *)(v226 + 8) = 0;
  sub_25608300C(v294, v222 + v224[24], (uint64_t (*)(void))sub_256081AB4);
  uint64_t v227 = v281;
  sub_25608300C(v281, v222 + v224[28], (uint64_t (*)(void))sub_256081BBC);
  uint64_t v228 = v222 + v224[32];
  *(void *)uint64_t v228 = v298;
  *(unsigned char *)(v228 + 8) = 0;
  sub_256082E10(v221, v222 + v224[36]);
  uint64_t v229 = MEMORY[0x263F8D8F0];
  sub_25607B20C(v289, (uint64_t)&qword_269F440A8, (uint64_t)sub_255FDEFF8, MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_2560828EC);
  sub_256082F44(v290, (uint64_t (*)(void))sub_256081BBC);
  sub_256082F44(v297, (uint64_t (*)(void))sub_256081AB4);
  sub_256082EA4(v296);
  sub_256082F44(v295, (uint64_t (*)(void))sub_2560817E4);
  sub_25607B20C(v221, (uint64_t)&qword_269F440A8, (uint64_t)sub_255FDEFF8, v229, (uint64_t (*)(void))sub_2560828EC);
  sub_256082F44(v227, (uint64_t (*)(void))sub_256081BBC);
  sub_256082F44(v294, (uint64_t (*)(void))sub_256081AB4);
  sub_256082EA4(v280);
  return sub_256082F44(v279, (uint64_t (*)(void))sub_2560817E4);
}

uint64_t sub_25607F3F4()
{
  uint64_t v0 = sub_256175A08();
  uint64_t v17 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_256175868();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v17 - v8;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_256175C88();
  swift_release();
  swift_release();
  swift_release();
  if (v18 == 2)
  {
    type metadata accessor for ValenceSelectionPhaseContent();
    sub_25611C0E0((uint64_t)v2);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_256175C88();
    swift_release();
    swift_release();
    swift_release();
    char v13 = sub_256175908();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v2, v0);
    if (v13)
    {
      if (qword_269F42348 == -1) {
        goto LABEL_15;
      }
      goto LABEL_8;
    }
    if (qword_269F42348 == -1)
    {
LABEL_15:
      id v15 = (id)qword_269F50C88;
      swift_bridgeObjectRetain();
      uint64_t v14 = sub_2561755B8();
      swift_bridgeObjectRelease();

      return v14;
    }
LABEL_14:
    swift_once();
    goto LABEL_15;
  }
  if (v18 == 1)
  {
    sub_256175828();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_256175C88();
    swift_release();
    swift_release();
    swift_release();
    sub_2561757D8();
    double v11 = v10;
    uint64_t v12 = *(void (**)(char *, uint64_t))(v4 + 8);
    v12(v7, v3);
    v12(v9, v3);
    if (v11 > 180.0)
    {
      if (qword_269F42348 == -1) {
        goto LABEL_15;
      }
LABEL_8:
      swift_once();
      goto LABEL_15;
    }
    if (qword_269F42348 == -1) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  return 0;
}

void *sub_25607F90C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ValenceSelectionPhaseContent();
  sub_256082950(0, (unint64_t *)&qword_269F47D40, MEMORY[0x263F8D4F8], MEMORY[0x263F1B750]);
  uint64_t result = MEMORY[0x25A2A01A0](&v4);
  if ((v4 & 1) == 0) {
    return (void *)(*(uint64_t (**)(void *))(a1 + *(int *)(v2 + 28)))(result);
  }
  return result;
}

uint64_t sub_25607F9B4@<X0>(uint64_t a1@<X8>)
{
  v14[0] = a1;
  uint64_t v2 = (uint64_t (*)(uint64_t))MEMORY[0x263F1A470];
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F18E28];
  sub_2560838F4(0, &qword_269F45B78, (uint64_t (*)(uint64_t))sub_256081F4C, MEMORY[0x263F1A470], MEMORY[0x263F18E28]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v14 - v5;
  sub_25607C358((uint64_t)v19);
  v17[8] = v19[8];
  v17[9] = v19[9];
  uint64_t v18 = *(void *)&v19[10];
  uint64_t v17[4] = v19[4];
  v17[5] = v19[5];
  v17[6] = v19[6];
  v17[7] = v19[7];
  v17[0] = v19[0];
  v17[1] = v19[1];
  _OWORD v17[2] = v19[2];
  v17[3] = v19[3];
  sub_2561778E8();
  sub_256116EB0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v16, 0.0, 1, INFINITY, 0);
  sub_256082674((uint64_t)v17);
  memcpy(v19, v16, 0x118uLL);
  memcpy(v15, v16, sizeof(v15));
  v14[1] = (uint64_t)&unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B65F8);
  sub_256082950(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_256081F4C(0);
  sub_256083190(&qword_269F45C28, sub_256081F4C, (void (*)(void))sub_256082554);
  sub_256177238();
  swift_bridgeObjectRelease();
  sub_256082674((uint64_t)v19);
  uint64_t v7 = (char *)(v1 + *(int *)(type metadata accessor for ValenceSelectionPhaseContent() + 44));
  char v8 = *v7;
  uint64_t v9 = *((void *)v7 + 1);
  LOBYTE(v16[0]) = v8;
  v16[1] = v9;
  sub_256082950(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
  sub_256177578();
  if (v15[0]) {
    double v10 = 1.0;
  }
  else {
    double v10 = 0.0;
  }
  uint64_t v11 = v14[0];
  sub_256082728((uint64_t)v6, v14[0], &qword_269F45B78, (uint64_t (*)(uint64_t))sub_256081F4C, v2, v3);
  sub_256081808(0, &qword_269F45B70, &qword_269F45B78, (uint64_t (*)(uint64_t))sub_256081F4C);
  *(double *)(v11 + *(int *)(v12 + 36)) = v10;
  return sub_25608279C((uint64_t)v6);
}

uint64_t sub_25607FD48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v33 = a2;
  sub_256081750();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256081C14(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v31 = (uint64_t)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v32 = (uint64_t)&v29 - v8;
  sub_256081808(0, &qword_269F45B70, &qword_269F45B78, (uint64_t (*)(uint64_t))sub_256081F4C);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v29 - v10;
  sub_256081EC0();
  uint64_t v13 = v12 - 8;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v29 = (uint64_t)&v29 - v17;
  sub_25607F9B4((uint64_t)v11);
  uint64_t v18 = sub_2561761F8();
  char v19 = sub_256176D88();
  sub_256082A3C((uint64_t)v11, (uint64_t)v16, &qword_269F45B70, &qword_269F45B78, (uint64_t (*)(uint64_t))sub_256081F4C);
  uint64_t v20 = &v16[*(int *)(v13 + 44)];
  *(void *)uint64_t v20 = v18;
  v20[8] = v19;
  sub_256082AB0((uint64_t)v11, &qword_269F45B70, &qword_269F45B78, (uint64_t (*)(uint64_t))sub_256081F4C);
  uint64_t v21 = v29;
  sub_256082FA4((uint64_t)v16, v29, (uint64_t (*)(void))sub_256081EC0);
  *(void *)uint64_t v4 = sub_256176788();
  *((void *)v4 + 1) = 0;
  v4[16] = 0;
  sub_2560824DC(0, &qword_269F45BA8, sub_255FDEAA0);
  sub_25607D3F0(v30, (uint64_t)&v4[*(int *)(v22 + 44)]);
  v34[3] = type metadata accessor for ValenceSelectionPhaseSpecs();
  v34[4] = (uint64_t)&off_2704B8BC0;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v34);
  type metadata accessor for ValenceSelectionPhaseContent();
  sub_25611BB38((uint64_t)boxed_opaque_existential_1);
  uint64_t v24 = v31;
  sub_255FDCC98(v34, v31);
  sub_256082F44((uint64_t)v4, (uint64_t (*)(void))sub_256081750);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  uint64_t v25 = v32;
  sub_256082FA4(v24, v32, (uint64_t (*)(void))sub_256081C14);
  sub_25608300C(v21, (uint64_t)v16, (uint64_t (*)(void))sub_256081EC0);
  sub_25608300C(v25, v24, (uint64_t (*)(void))sub_256081C14);
  uint64_t v26 = v33;
  sub_25608300C((uint64_t)v16, v33, (uint64_t (*)(void))sub_256081EC0);
  sub_256081E50();
  sub_25608300C(v24, v26 + *(int *)(v27 + 48), (uint64_t (*)(void))sub_256081C14);
  sub_256082F44(v25, (uint64_t (*)(void))sub_256081C14);
  sub_256082F44(v21, (uint64_t (*)(void))sub_256081EC0);
  sub_256082F44(v24, (uint64_t (*)(void))sub_256081C14);
  return sub_256082F44((uint64_t)v16, (uint64_t (*)(void))sub_256081EC0);
}

uint64_t sub_25608016C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v44 = a1;
  uint64_t v3 = type metadata accessor for ValenceSelectionPhaseContent();
  uint64_t v4 = v3 - 8;
  uint64_t v43 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v43 + 64);
  MEMORY[0x270FA5388](v3);
  uint64_t v42 = (uint64_t)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ValenceSelectionPhaseSpecs();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256081D88();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (uint64_t *)((char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_256081CF4();
  uint64_t v13 = v12 - 8;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256081CCC(0);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256081FA4();
  uint64_t v20 = v19 - 8;
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v11 = sub_2561778E8();
  v11[1] = v23;
  sub_2560824DC(0, &qword_269F45C20, sub_256081E1C);
  sub_25607FD48(v2, (uint64_t)v11 + *(int *)(v24 + 44));
  sub_25608300C((uint64_t)v11, (uint64_t)v15, (uint64_t (*)(void))sub_256081D88);
  uint64_t v25 = &v15[*(int *)(v13 + 44)];
  *(void *)uint64_t v25 = 0xD000000000000022;
  *((void *)v25 + 1) = 0x80000002561ABF40;
  sub_256082F44((uint64_t)v11, (uint64_t (*)(void))sub_256081D88);
  uint64_t v26 = sub_2561778E8();
  sub_256117098(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v18, 0.0, 1, INFINITY, 0, v26, v27);
  sub_256082F44((uint64_t)v15, (uint64_t (*)(void))sub_256081CF4);
  sub_25611BB38((uint64_t)v8);
  sub_256082F44((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhaseSpecs);
  uint64_t v28 = sub_256177908();
  uint64_t v29 = v2 + *(int *)(v4 + 52);
  char v30 = *(unsigned char *)v29;
  uint64_t v31 = *(void *)(v29 + 8);
  char v45 = v30;
  uint64_t v46 = v31;
  sub_256082950(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
  sub_256177578();
  LOBYTE(v15) = v47;
  sub_25608300C((uint64_t)v18, (uint64_t)v22, (uint64_t (*)(void))sub_256081CCC);
  uint64_t v32 = &v22[*(int *)(v20 + 44)];
  *(void *)uint64_t v32 = v28;
  v32[8] = (char)v15;
  sub_256082F44((uint64_t)v18, (uint64_t (*)(void))sub_256081CCC);
  uint64_t v33 = v2;
  uint64_t v34 = v42;
  sub_25608300C(v33, v42, (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhaseContent);
  unint64_t v35 = (*(unsigned __int8 *)(v43 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  uint64_t v36 = swift_allocObject();
  sub_256082FA4(v34, v36 + v35, (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhaseContent);
  char v47 = 0;
  swift_retain();
  sub_256177568();
  LOBYTE(v11) = v45;
  uint64_t v37 = v46;
  uint64_t v38 = v44;
  sub_25608300C((uint64_t)v22, v44, (uint64_t (*)(void))sub_256081FA4);
  swift_release();
  sub_256081F7C(0);
  uint64_t v40 = v38 + *(int *)(v39 + 36);
  *(void *)uint64_t v40 = sub_25608286C;
  *(void *)(v40 + 8) = v36;
  *(unsigned char *)(v40 + 16) = (_BYTE)v11;
  *(void *)(v40 + 24) = v37;
  return sub_256082F44((uint64_t)v22, (uint64_t (*)(void))sub_256081FA4);
}

uint64_t sub_256080684(uint64_t a1)
{
  uint64_t v35 = sub_256177A18();
  uint64_t v38 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v34 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_256177A48();
  uint64_t v36 = *(void *)(v3 - 8);
  uint64_t v37 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v33 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ValenceSelectionPhaseContent();
  uint64_t v6 = v5 - 8;
  uint64_t v32 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v32 + 64);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = type metadata accessor for ValenceSelectionPhaseSpecs();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_256177A68();
  uint64_t v30 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v30 - v16;
  uint64_t v18 = a1 + *(int *)(v6 + 52);
  char v19 = *(unsigned char *)v18;
  uint64_t v20 = *(void *)(v18 + 8);
  LOBYTE(aBlock) = v19;
  uint64_t v40 = v20;
  char v45 = 1;
  sub_256082950(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
  sub_256177588();
  sub_255FB58F8(0, &qword_269F454E8);
  objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_setAnimationsEnabled_, 1);
  sub_255FB58F8(0, (unint64_t *)&qword_26B2AD368);
  uint64_t v31 = sub_2561782D8();
  sub_256177A58();
  sub_25611BB38((uint64_t)v10);
  sub_256082F44((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhaseSpecs);
  MEMORY[0x25A2A0510](v15, 1.0);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v12 + 8);
  v21(v15, v11);
  sub_25608300C(a1, (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhaseContent);
  unint64_t v22 = (*(unsigned __int8 *)(v32 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  uint64_t v23 = swift_allocObject();
  sub_256082FA4((uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v23 + v22, (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhaseContent);
  uint64_t v43 = sub_256082888;
  uint64_t v44 = v23;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v40 = 1107296256;
  uint64_t v41 = sub_255FA9E78;
  uint64_t v42 = &block_descriptor_7;
  uint64_t v24 = _Block_copy(&aBlock);
  swift_release();
  uint64_t v25 = v33;
  sub_256177A38();
  uint64_t aBlock = MEMORY[0x263F8EE78];
  sub_256083354((unint64_t *)&unk_269F44D10, MEMORY[0x263F8F030]);
  sub_2560828B8(0);
  sub_256083354((unint64_t *)&qword_269F44D20, sub_2560828B8);
  uint64_t v27 = v34;
  uint64_t v26 = v35;
  sub_2561784C8();
  uint64_t v28 = (void *)v31;
  MEMORY[0x25A2A0D40](v17, v25, v27, v24);
  _Block_release(v24);

  (*(void (**)(char *, uint64_t))(v38 + 8))(v27, v26);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v25, v37);
  return ((uint64_t (*)(char *, uint64_t))v21)(v17, v30);
}

uint64_t sub_256080C10()
{
  return sub_256177728();
}

uint64_t sub_256080C98@<X0>(uint64_t a1@<X8>)
{
  v29[0] = a1;
  sub_256081F7C(0);
  v29[1] = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560838F4(0, &qword_269F45C18, (uint64_t (*)(uint64_t))sub_256081CCC, (uint64_t (*)(uint64_t))sub_256081F7C, MEMORY[0x263F19B20]);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v29 - v6;
  sub_256081D88();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (void *)((char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_256081CF4();
  uint64_t v12 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256081CCC(0);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)v29 - v19;
  if (*(unsigned char *)(v1 + *(int *)(type metadata accessor for ValenceSelectionPhaseContent() + 24)) == 1)
  {
    *uint64_t v10 = sub_2561778E8();
    v10[1] = v21;
    sub_2560824DC(0, &qword_269F45C20, sub_256081E1C);
    sub_25607FD48(v1, (uint64_t)v10 + *(int *)(v22 + 44));
    sub_25608300C((uint64_t)v10, (uint64_t)v14, (uint64_t (*)(void))sub_256081D88);
    uint64_t v23 = &v14[*(int *)(v12 + 36)];
    *(void *)uint64_t v23 = 0xD000000000000022;
    *((void *)v23 + 1) = 0x80000002561ABF40;
    sub_256082F44((uint64_t)v10, (uint64_t (*)(void))sub_256081D88);
    uint64_t v24 = sub_2561778E8();
    sub_256117098(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v18, 0.0, 1, INFINITY, 0, v24, v25);
    sub_256082F44((uint64_t)v14, (uint64_t (*)(void))sub_256081CF4);
    sub_256082FA4((uint64_t)v18, (uint64_t)v20, (uint64_t (*)(void))sub_256081CCC);
    sub_25608300C((uint64_t)v20, (uint64_t)v7, (uint64_t (*)(void))sub_256081CCC);
    swift_storeEnumTagMultiPayload();
    sub_256083190(&qword_269F45BC0, sub_256081CCC, (void (*)(void))sub_2560821E0);
    sub_256082288();
    sub_256176898();
    uint64_t v26 = sub_256081CCC;
    uint64_t v27 = (uint64_t)v20;
  }
  else
  {
    sub_25608016C((uint64_t)v4);
    sub_25608300C((uint64_t)v4, (uint64_t)v7, (uint64_t (*)(void))sub_256081F7C);
    swift_storeEnumTagMultiPayload();
    sub_256083190(&qword_269F45BC0, sub_256081CCC, (void (*)(void))sub_2560821E0);
    sub_256082288();
    sub_256176898();
    uint64_t v26 = sub_256081F7C;
    uint64_t v27 = (uint64_t)v4;
  }
  return sub_256082F44(v27, (uint64_t (*)(void))v26);
}

uint64_t sub_256081160@<X0>(uint64_t a1@<X8>)
{
  uint64_t v38 = a1;
  sub_256081750();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256081C14(0);
  uint64_t v37 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v33 = (uint64_t)&v32 - v9;
  sub_2560838F4(0, &qword_269F45B28, (uint64_t (*)(uint64_t))sub_256081C3C, (uint64_t (*)(uint64_t))sub_256081C14, MEMORY[0x263F19B20]);
  uint64_t v35 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v36 = (uint64_t)&v32 - v11;
  uint64_t v12 = sub_256175D98();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256081C84(0);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256081C3C(0);
  uint64_t v34 = v19;
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v32 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v32 - v23;
  if (*(unsigned char *)(*(void *)(v1 + 8) + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_useLiveVisualization) == 1)
  {
    sub_256080C98((uint64_t)v18);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_256175C88();
    swift_release();
    swift_release();
    swift_release();
    double v25 = *(double *)v39;
    type metadata accessor for ValenceSelectionPhaseContent();
    sub_25611A114((uint64_t)v15);
    sub_2560D6158((uint64_t)v15, (uint64_t)v18, (uint64_t)v22, v25);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    sub_256082F44((uint64_t)v18, (uint64_t (*)(void))sub_256081C84);
    sub_256082FA4((uint64_t)v22, (uint64_t)v24, (uint64_t (*)(void))sub_256081C3C);
    sub_25608300C((uint64_t)v24, v36, (uint64_t (*)(void))sub_256081C3C);
    swift_storeEnumTagMultiPayload();
    sub_256082088();
    sub_256083190(&qword_269F45BE8, sub_256081C14, (void (*)(void))sub_2560823B0);
    sub_256176898();
    uint64_t v26 = sub_256081C3C;
    uint64_t v27 = (uint64_t)v24;
  }
  else
  {
    *(void *)uint64_t v4 = sub_256176788();
    *((void *)v4 + 1) = 0;
    v4[16] = 0;
    sub_2560824DC(0, &qword_269F45BA8, sub_255FDEAA0);
    sub_25607D3F0(v1, (uint64_t)&v4[*(int *)(v28 + 44)]);
    v39[3] = type metadata accessor for ValenceSelectionPhaseSpecs();
    v39[4] = (uint64_t)&off_2704B8BC0;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v39);
    type metadata accessor for ValenceSelectionPhaseContent();
    sub_25611BB38((uint64_t)boxed_opaque_existential_1);
    sub_255FDCC98(v39, (uint64_t)v8);
    sub_256082F44((uint64_t)v4, (uint64_t (*)(void))sub_256081750);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
    uint64_t v30 = v33;
    sub_256082FA4((uint64_t)v8, v33, (uint64_t (*)(void))sub_256081C14);
    sub_25608300C(v30, v36, (uint64_t (*)(void))sub_256081C14);
    swift_storeEnumTagMultiPayload();
    sub_256082088();
    sub_256083190(&qword_269F45BE8, sub_256081C14, (void (*)(void))sub_2560823B0);
    sub_256176898();
    uint64_t v26 = sub_256081C14;
    uint64_t v27 = v30;
  }
  return sub_256082F44(v27, (uint64_t (*)(void))v26);
}

void sub_256081750()
{
  if (!qword_269F44008)
  {
    sub_255FDEAA0(255);
    sub_256083354(&qword_269F440C8, sub_255FDEAA0);
    unint64_t v0 = sub_2561776F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44008);
    }
  }
}

void sub_2560817E4(uint64_t a1)
{
}

void sub_256081808(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_2560838F4(255, a3, a4, MEMORY[0x263F1A470], MEMORY[0x263F18E28]);
    unint64_t v5 = sub_2561761B8();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_25608189C(uint64_t a1)
{
}

void sub_2560818C4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_256081928()
{
  if (!qword_269F44058)
  {
    type metadata accessor for CGRect(255);
    sub_256083354(&qword_269F44060, type metadata accessor for CGRect);
    unint64_t v0 = sub_256176B18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44058);
    }
  }
}

void sub_2560819BC(uint64_t a1)
{
}

void sub_2560819EC(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_256081A50(255, a3, a4);
    unint64_t v5 = sub_2561761B8();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_256081A50(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_256081AB4()
{
  if (!qword_269F44078)
  {
    sub_256081B34(255, &qword_269F44080, &qword_269F44088);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44078);
    }
  }
}

void sub_256081B34(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_256081808(255, a3, &qword_269F44030, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionTitleText);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_256081BBC(uint64_t a1)
{
}

void sub_256081BEC(uint64_t a1)
{
}

void sub_256081C14(uint64_t a1)
{
}

void sub_256081C3C(uint64_t a1)
{
}

void sub_256081C84(uint64_t a1)
{
}

void sub_256081CCC(uint64_t a1)
{
}

void sub_256081CF4()
{
  if (!qword_269F45B48)
  {
    sub_256081D88();
    sub_256082038(255, &qword_269F455D0, MEMORY[0x263F8D310], MEMORY[0x263F8D320], MEMORY[0x263F1A170]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45B48);
    }
  }
}

void sub_256081D88()
{
  if (!qword_269F45B50)
  {
    sub_256081E1C(255);
    sub_256083354(&qword_269F45B90, sub_256081E1C);
    unint64_t v0 = sub_256177708();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45B50);
    }
  }
}

void sub_256081E1C(uint64_t a1)
{
}

void sub_256081E50()
{
  if (!qword_269F45B60)
  {
    sub_256081EC0();
    sub_256081C14(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F45B60);
    }
  }
}

void sub_256081EC0()
{
  if (!qword_269F45B68)
  {
    sub_256081808(255, &qword_269F45B70, &qword_269F45B78, (uint64_t (*)(uint64_t))sub_256081F4C);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45B68);
    }
  }
}

void sub_256081F4C(uint64_t a1)
{
}

void sub_256081F7C(uint64_t a1)
{
}

void sub_256081FA4()
{
  if (!qword_269F45BA0)
  {
    sub_256081CCC(255);
    sub_256082038(255, &qword_269F43040, MEMORY[0x263F8D4F8], MEMORY[0x263F8D510], MEMORY[0x263F198B8]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45BA0);
    }
  }
}

void sub_256082038(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_256082088()
{
  unint64_t result = qword_269F45BB0;
  if (!qword_269F45BB0)
  {
    sub_256081C3C(255);
    sub_256082130();
    sub_256083354(&qword_269F43E60, sub_255FD68AC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45BB0);
  }
  return result;
}

unint64_t sub_256082130()
{
  unint64_t result = qword_269F45BB8;
  if (!qword_269F45BB8)
  {
    sub_256081C84(255);
    sub_256083190(&qword_269F45BC0, sub_256081CCC, (void (*)(void))sub_2560821E0);
    sub_256082288();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45BB8);
  }
  return result;
}

unint64_t sub_2560821E0()
{
  unint64_t result = qword_269F45BC8;
  if (!qword_269F45BC8)
  {
    sub_256081CF4();
    sub_256083354(&qword_269F45BD0, (void (*)(uint64_t))sub_256081D88);
    sub_25605E628();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45BC8);
  }
  return result;
}

unint64_t sub_256082288()
{
  unint64_t result = qword_269F45BD8;
  if (!qword_269F45BD8)
  {
    sub_256081F7C(255);
    sub_256082300();
    sub_25605A398();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45BD8);
  }
  return result;
}

unint64_t sub_256082300()
{
  unint64_t result = qword_269F45BE0;
  if (!qword_269F45BE0)
  {
    sub_256081FA4();
    sub_256083190(&qword_269F45BC0, sub_256081CCC, (void (*)(void))sub_2560821E0);
    sub_255F88038();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45BE0);
  }
  return result;
}

uint64_t sub_2560823B0()
{
  return sub_256083190(&qword_269F45BF0, sub_255FDF418, (void (*)(void))sub_2560823EC);
}

uint64_t sub_2560823EC()
{
  return sub_256083190(&qword_269F45BF8, sub_255FDF3F0, (void (*)(void))sub_256082428);
}

uint64_t sub_256082428()
{
  return sub_256083190(&qword_269F45C00, sub_255FDF3C8, (void (*)(void))sub_256082464);
}

uint64_t sub_256082464()
{
  return sub_256083190(&qword_269F45C08, (void (*)(uint64_t))sub_255FDE97C, (void (*)(void))sub_2560824A0);
}

uint64_t sub_2560824A0()
{
  return sub_256083354(&qword_269F45C10, (void (*)(uint64_t))sub_256081750);
}

void sub_2560824DC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_256176048();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_256082548(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

unint64_t sub_256082554()
{
  unint64_t result = qword_269F45C30;
  if (!qword_269F45C30)
  {
    sub_256081A50(255, &qword_269F45B88, (void (*)(uint64_t))sub_256081928);
    sub_256082620();
    sub_256083354(&qword_269F45C40, (void (*)(uint64_t))sub_256081928);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45C30);
  }
  return result;
}

unint64_t sub_256082620()
{
  unint64_t result = qword_269F45C38;
  if (!qword_269F45C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45C38);
  }
  return result;
}

uint64_t sub_256082674(uint64_t a1)
{
  return a1;
}

uint64_t sub_256082728(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t), uint64_t (*a6)(uint64_t, uint64_t, uint64_t))
{
  sub_2560838F4(0, a3, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

uint64_t sub_25608279C(uint64_t a1)
{
  sub_2560838F4(0, &qword_269F45B78, (uint64_t (*)(uint64_t))sub_256081F4C, MEMORY[0x263F1A470], MEMORY[0x263F18E28]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_256082850(uint64_t a1)
{
  return sub_256083768(a1, (uint64_t (*)(uint64_t, uint64_t))sub_25607C7A4);
}

uint64_t sub_25608286C()
{
  return sub_256082CFC(sub_256080684);
}

uint64_t sub_256082888()
{
  return sub_256082CFC((uint64_t (*)(uint64_t))sub_256080C10);
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

void sub_2560828B8(uint64_t a1)
{
}

void sub_2560828EC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_256082950(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_25608299C(uint64_t a1)
{
  sub_2560838F4(0, &qword_269F44030, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionTitleText, MEMORY[0x263F1A470], MEMORY[0x263F18E28]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_256082A3C(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  sub_256081808(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_256082AB0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_256081808(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_256082B0C(uint64_t a1, uint64_t a2)
{
  sub_256081B34(0, &qword_269F44080, &qword_269F44088);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_256082B90(uint64_t a1)
{
  sub_256081B34(0, &qword_269F44080, &qword_269F44088);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_256082C0C()
{
  return sub_256083354(&qword_269F45C60, (void (*)(uint64_t))type metadata accessor for ValenceSlider);
}

uint64_t sub_256082C40(uint64_t a1)
{
  sub_2560838F4(0, (unint64_t *)&qword_269F44098, (uint64_t (*)(uint64_t))sub_256081BEC, MEMORY[0x263F1A470], MEMORY[0x263F18E28]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_256082CE4()
{
  return sub_256082CFC((uint64_t (*)(uint64_t))sub_25607F90C);
}

uint64_t sub_256082CFC(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for ValenceSelectionPhaseContent() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_256082D70(uint64_t a1)
{
  sub_2560838F4(0, &qword_269F440B8, (uint64_t (*)(uint64_t))sub_255FDF0C8, MEMORY[0x263F1A470], MEMORY[0x263F18E28]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_256082E10(uint64_t a1, uint64_t a2)
{
  sub_2560828EC(0, &qword_269F440A8, (uint64_t (*)(uint64_t))sub_255FDEFF8, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_256082EA4(uint64_t a1)
{
  sub_2560838F4(0, (unint64_t *)&qword_269F44038, (uint64_t (*)(uint64_t))sub_255FDED04, (uint64_t (*)(uint64_t))sub_2560819BC, MEMORY[0x263F19B28]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_256082F44(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_256082FA4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25608300C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_256083074()
{
  unint64_t result = qword_269F45C70;
  if (!qword_269F45C70)
  {
    sub_255FDED04();
    sub_256083190(&qword_269F45C78, sub_25608189C, (void (*)(void))sub_256083154);
    sub_256083354(&qword_269F45C40, (void (*)(uint64_t))sub_256081928);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45C70);
  }
  return result;
}

uint64_t sub_256083154()
{
  return sub_256083190(&qword_269F45C80, sub_255FDEDD4, (void (*)(void))sub_256083210);
}

uint64_t sub_256083190(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_256083210()
{
  unint64_t result = qword_269F45C88;
  if (!qword_269F45C88)
  {
    sub_255FDEDFC();
    sub_255F8A200();
    sub_255F67518();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45C88);
  }
  return result;
}

unint64_t sub_256083288()
{
  unint64_t result = qword_269F45C98;
  if (!qword_269F45C98)
  {
    sub_256081A50(255, (unint64_t *)&qword_269F44070, MEMORY[0x263F1A470]);
    sub_255F97230();
    sub_256083354(&qword_269F42EA0, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45C98);
  }
  return result;
}

uint64_t sub_256083354(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroyTm_16()
{
  uint64_t v1 = (int *)type metadata accessor for ValenceSelectionPhaseContent();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  swift_release();
  uint64_t v3 = v2 + v1[5];
  uint64_t v4 = sub_256175FC8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  uint64_t v5 = v2 + v1[8];
  sub_2560828EC(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256176AA8();
    uint64_t v7 = *(void *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
    uint64_t v8 = v5 + *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    uint64_t v9 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = v2 + v1[9];
  sub_2560828EC(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  uint64_t v12 = v2 + v1[10];
  sub_2560828EC(0, &qword_269F44C98, MEMORY[0x263F07920], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_256175A08();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_256083750(uint64_t a1)
{
  return sub_256083768(a1, (uint64_t (*)(uint64_t, uint64_t))sub_25607D2C4);
}

uint64_t sub_256083768(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for ValenceSelectionPhaseContent() - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

unint64_t sub_256083800()
{
  unint64_t result = qword_269F45CA0;
  if (!qword_269F45CA0)
  {
    sub_2560838F4(255, &qword_269F45CA8, (uint64_t (*)(uint64_t))sub_256081C3C, (uint64_t (*)(uint64_t))sub_256081C14, MEMORY[0x263F19B28]);
    sub_256082088();
    sub_256083190(&qword_269F45BE8, sub_256081C14, (void (*)(void))sub_2560823B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45CA0);
  }
  return result;
}

void sub_2560838F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4(255);
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_256083978()
{
  return 0;
}

uint64_t sub_256083A0C()
{
  return sub_256083978();
}

uint64_t sub_256083A78(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_256175B68();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_healthDataSource))
  {
    uint64_t v78 = v2;
    swift_unknownObjectRetain();
    unint64_t v9 = sub_25613372C(MEMORY[0x263F8EE78]);
    unint64_t v83 = v9;
    unint64_t v10 = sub_255F74D60(v3[16]);
    uint64_t v11 = MEMORY[0x263F8D310];
    uint64_t v82 = MEMORY[0x263F8D310];
    *(void *)&long long v81 = v10;
    *((void *)&v81 + 1) = v12;
    sub_25601DCC4(&v81, v80);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v79 = v9;
    unint64_t v14 = 0xE400000000000000;
    sub_2561277D0(v80, 1885697139, 0xE400000000000000, isUniquelyReferenced_nonNull_native);
    unint64_t v15 = v79;
    swift_bridgeObjectRelease();
    unint64_t v16 = 1954047310;
    switch(v3[17])
    {
      case 1:
        unint64_t v14 = 0xE600000000000000;
        unint64_t v16 = 0x6C65636E6143;
        break;
      case 2:
        unint64_t v16 = 1801675074;
        break;
      case 3:
        unint64_t v16 = 1885956947;
        break;
      case 4:
        unint64_t v16 = 0xD000000000000014;
        double v25 = "Enable Notifications";
        goto LABEL_11;
      case 5:
        unint64_t v16 = 0xD000000000000015;
        double v25 = "Disable Notifications";
LABEL_11:
        unint64_t v14 = (unint64_t)(v25 - 32) | 0x8000000000000000;
        break;
      default:
        break;
    }
    uint64_t v82 = v11;
    uint64_t v26 = 0x746567646957;
    *(void *)&long long v81 = v16;
    *((void *)&v81 + 1) = v14;
    sub_25601DCC4(&v81, v80);
    char v27 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v79 = v15;
    unint64_t v28 = 0xE600000000000000;
    sub_2561277D0(v80, 0x6E6F69746361, 0xE600000000000000, v27);
    unint64_t v29 = v79;
    unint64_t v83 = v79;
    swift_bridgeObjectRelease();
    uint64_t v30 = 0x746567646957;
    switch(v3[18])
    {
      case 1:
        uint64_t v32 = "Category Room Tile";
        goto LABEL_25;
      case 2:
        uint64_t v30 = 0xD00000000000001ALL;
        uint64_t v31 = "Fitness+ Guided Meditation";
        goto LABEL_22;
      case 3:
        unsigned int v33 = 1701670728;
        goto LABEL_18;
      case 4:
        unsigned int v33 = 1801678668;
LABEL_18:
        uint64_t v30 = v33 | 0x7263532000000000;
        unint64_t v28 = 0xEB000000006E6565;
        goto LABEL_26;
      case 5:
        uint64_t v30 = 0xD000000000000014;
        uint64_t v31 = "Mindfulness Log Tile";
        goto LABEL_22;
      case 6:
        uint64_t v30 = 0xD000000000000015;
        uint64_t v31 = "Reminder Notification";
        goto LABEL_22;
      case 7:
        uint64_t v30 = 0xD000000000000017;
        uint64_t v31 = "State of Mind Room Tile";
        goto LABEL_22;
      case 8:
        unint64_t v28 = 0xEC000000656C6954;
        uint64_t v30 = 0x207972616D6D7553;
        goto LABEL_26;
      case 9:
        uint64_t v32 = "Watch Complication";
LABEL_25:
        unint64_t v28 = (unint64_t)(v32 - 32) | 0x8000000000000000;
        uint64_t v30 = 0xD000000000000012;
        goto LABEL_26;
      case 10:
        goto LABEL_26;
      case 11:
        sub_25613884C(0x696F507972746E65, 0xEA0000000000746ELL, &v81);
        sub_256040650((uint64_t)&v81);
        goto LABEL_27;
      default:
        uint64_t v30 = 0xD000000000000017;
        uint64_t v31 = "Breathe Session Summary";
LABEL_22:
        unint64_t v28 = (unint64_t)(v31 - 32) | 0x8000000000000000;
LABEL_26:
        uint64_t v82 = v11;
        *(void *)&long long v81 = v30;
        *((void *)&v81 + 1) = v28;
        sub_25601DCC4(&v81, v80);
        char v34 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v79 = v29;
        sub_2561277D0(v80, 0x696F507972746E65, 0xEA0000000000746ELL, v34);
        unint64_t v83 = v79;
        swift_bridgeObjectRelease();
LABEL_27:
        unint64_t v35 = 0xE600000000000000;
        switch(v3[19])
        {
          case 1:
            unint64_t v35 = 0xE700000000000000;
            uint64_t v26 = 0x7373656E746946;
            goto LABEL_33;
          case 2:
            uint64_t v26 = 0x726353206B636F4CLL;
            unint64_t v35 = 0xEB000000006E6565;
            goto LABEL_33;
          case 3:
            unint64_t v35 = 0xEB00000000737365;
            uint64_t v26 = 0x6E6C7566646E694DLL;
            goto LABEL_33;
          case 4:
            unint64_t v35 = 0xE700000000000000;
            uint64_t v26 = 0x7972616D6D7553;
            goto LABEL_33;
          case 5:
            goto LABEL_33;
          case 6:
            sub_25613884C(0x6E616E65766F7270, 0xEA00000000006563, &v81);
            sub_256040650((uint64_t)&v81);
            unint64_t v38 = v83;
            goto LABEL_34;
          default:
            unint64_t v35 = 0xEE006D6F6F522065;
            uint64_t v26 = 0x7079542061746144;
LABEL_33:
            uint64_t v82 = v11;
            *(void *)&long long v81 = v26;
            *((void *)&v81 + 1) = v35;
            sub_25601DCC4(&v81, v80);
            unint64_t v36 = v83;
            char v37 = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v79 = v36;
            sub_2561277D0(v80, 0x6E616E65766F7270, 0xEA00000000006563, v37);
            unint64_t v38 = v79;
            swift_bridgeObjectRelease();
LABEL_34:
            BOOL v39 = v3[20] == 0;
            uint64_t v40 = 0x7261746E656D6F4DLL;
            if (v3[20]) {
              uint64_t v40 = 0x796C696144;
            }
            unint64_t v41 = 0xE900000000000079;
            uint64_t v82 = v11;
            if (!v39) {
              unint64_t v41 = 0xE500000000000000;
            }
            *(void *)&long long v81 = v40;
            *((void *)&v81 + 1) = v41;
            sub_25601DCC4(&v81, v80);
            char v42 = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v79 = v38;
            sub_2561277D0(v80, 1701869940, 0xE400000000000000, v42);
            unint64_t v43 = v79;
            swift_bridgeObjectRelease();
            char v44 = v3[21];
            uint64_t v45 = MEMORY[0x263F8D4F8];
            uint64_t v82 = MEMORY[0x263F8D4F8];
            LOBYTE(v81) = v44;
            sub_25601DCC4(&v81, v80);
            char v46 = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v79 = v43;
            sub_2561277D0(v80, 0x6C6562614C736168, 0xE800000000000000, v46);
            unint64_t v47 = v79;
            swift_bridgeObjectRelease();
            char v48 = v3[22];
            uint64_t v82 = v45;
            LOBYTE(v81) = v48;
            sub_25601DCC4(&v81, v80);
            char v49 = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v79 = v47;
            sub_2561277D0(v80, 0x636F737341736168, 0xEE006E6F69746169, v49);
            unint64_t v50 = v79;
            swift_bridgeObjectRelease();
            char v51 = v3[23];
            uint64_t v82 = v45;
            LOBYTE(v81) = v51;
            sub_25601DCC4(&v81, v80);
            char v52 = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v79 = v50;
            sub_2561277D0(v80, 0xD000000000000016, 0x80000002561AC090, v52);
            unint64_t v53 = v79;
            swift_bridgeObjectRelease();
            char v54 = v3[24];
            uint64_t v82 = v45;
            LOBYTE(v81) = v54;
            sub_25601DCC4(&v81, v80);
            char v55 = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v79 = v53;
            unint64_t v83 = 0x8000000000000000;
            sub_2561277D0(v80, 0xD000000000000010, 0x80000002561AC0B0, v55);
            unint64_t v56 = v79;
            swift_bridgeObjectRelease();
            uint64_t v57 = sub_256177EE8();
            uint64_t v59 = v58;
            id v60 = (id)HKMHUIActivePairedWatchProductType();
            if (v60)
            {
              uint64_t v61 = v60;
              uint64_t v62 = sub_256177EE8();
              uint64_t v64 = v63;

              uint64_t v82 = v11;
              if (v64) {
                goto LABEL_43;
              }
            }
            else
            {
              uint64_t v82 = v11;
            }
            uint64_t v62 = sub_256177EE8();
            uint64_t v64 = v65;
LABEL_43:
            *(void *)&long long v81 = v62;
            *((void *)&v81 + 1) = v64;
            sub_25601DCC4(&v81, v80);
            char v66 = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v79 = v56;
            unint64_t v83 = 0x8000000000000000;
            sub_2561277D0(v80, v57, v59, v66);
            unint64_t v83 = v79;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v67 = sub_256177EE8();
            uint64_t v69 = v68;
            id v70 = (id)HKMHUIActivePairedWatchBuildVersion();
            if (v70)
            {
              uint64_t v71 = v70;
              uint64_t v72 = sub_256177EE8();
              uint64_t v74 = v73;

              uint64_t v82 = v11;
              if (v74) {
                goto LABEL_48;
              }
            }
            else
            {
              uint64_t v82 = v11;
            }
            uint64_t v72 = sub_256177EE8();
            uint64_t v74 = v75;
LABEL_48:
            *(void *)&long long v81 = v72;
            *((void *)&v81 + 1) = v74;
            sub_25601DCC4(&v81, v80);
            unint64_t v76 = v83;
            char v77 = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v79 = v76;
            unint64_t v83 = 0x8000000000000000;
            sub_2561277D0(v80, v67, v69, v77);
            unint64_t v83 = v79;
            swift_unknownObjectRelease_n();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t result = v83;
            break;
        }
        break;
    }
  }
  else
  {
    sub_256175B48();
    uint64_t v17 = sub_256175B58();
    os_log_type_t v18 = sub_256178228();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(void *)&long long v81 = v20;
      *(_DWORD *)uint64_t v19 = 136446210;
      uint64_t v78 = v19 + 4;
      uint64_t v21 = sub_256178978();
      *(void *)&v80[0] = sub_255FB29A8(v21, v22, (uint64_t *)&v81);
      sub_256178458();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_255F58000, v17, v18, "[%{public}s] Tried to create a payload with a dataSource containing nil healthDataSource", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A1E90](v20, -1, -1);
      MEMORY[0x25A2A1E90](v19, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_256084B00();
    swift_allocError();
    *uint64_t v23 = 0xD000000000000030;
    v23[1] = 0x80000002561AC120;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_256084504(void *a1)
{
  uint64_t v2 = sub_256175B68();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_256175868();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(a1, sel_healthDataSource);
  if (v10)
  {
    id v11 = v10;
    type metadata accessor for MentalHealthGenericFieldsProvider();
    *(void *)(swift_initStackObject() + 16) = v11;
    swift_unknownObjectRetain();
    unint64_t v38 = sub_25613372C(MEMORY[0x263F8EE78]);
    uint64_t v12 = sub_256177EE8();
    uint64_t v14 = v13;
    sub_256175858();
    id v15 = sub_2560F80E8();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    if (v15)
    {
      unint64_t v37 = sub_256084B54();
      *(void *)&long long v36 = v15;
      sub_25601DCC4(&v36, v35);
      unint64_t v16 = v38;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v34 = v16;
      unint64_t v38 = 0x8000000000000000;
      sub_2561277D0(v35, v12, v14, isUniquelyReferenced_nonNull_native);
      unint64_t v38 = v34;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_25613884C(v12, v14, &v36);
      swift_bridgeObjectRelease();
      sub_256040650((uint64_t)&v36);
    }
    uint64_t v26 = sub_256177EE8();
    uint64_t v28 = v27;
    uint64_t v29 = sub_2560F841C();
    unint64_t v37 = MEMORY[0x263F8D310];
    if (!v30) {
      uint64_t v29 = sub_256177EE8();
    }
    *(void *)&long long v36 = v29;
    *((void *)&v36 + 1) = v30;
    sub_25601DCC4(&v36, v35);
    unint64_t v31 = v38;
    char v32 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v34 = v31;
    unint64_t v38 = 0x8000000000000000;
    sub_2561277D0(v35, v26, v28, v32);
    unint64_t v38 = v34;
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_unknownObjectRelease();
    return v38;
  }
  else
  {
    sub_256175B48();
    os_log_type_t v18 = sub_256175B58();
    os_log_type_t v19 = sub_256178228();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      *(void *)&long long v36 = v21;
      *(_DWORD *)uint64_t v20 = 136446210;
      v33[1] = v20 + 4;
      uint64_t v22 = sub_256178978();
      *(void *)&v35[0] = sub_255FB29A8(v22, v23, (uint64_t *)&v36);
      sub_256178458();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_255F58000, v18, v19, "[%{public}s] Tried to create a payload with a dataSource containing nil healthDataSource", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A1E90](v21, -1, -1);
      MEMORY[0x25A2A1E90](v20, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_256084B00();
    swift_allocError();
    void *v24 = 0xD000000000000030;
    v24[1] = 0x80000002561AC120;
    return swift_willThrow();
  }
}

id sub_2560849D4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(id))
{
  id v6 = a3;
  swift_retain();
  a5(v6);
  swift_release();

  uint64_t v7 = (void *)sub_256177DD8();
  swift_bridgeObjectRelease();

  return v7;
}

uint64_t sub_256084ACC()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StateOfMindLoggingEvent()
{
  return self;
}

unint64_t sub_256084B00()
{
  unint64_t result = qword_269F45D10;
  if (!qword_269F45D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45D10);
  }
  return result;
}

unint64_t sub_256084B54()
{
  unint64_t result = qword_269F45190;
  if (!qword_269F45190)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269F45190);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for StateOfMindLoggingEvent.AnalyticsEventPayloadError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for StateOfMindLoggingEvent.AnalyticsEventPayloadError()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for StateOfMindLoggingEvent.AnalyticsEventPayloadError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for StateOfMindLoggingEvent.AnalyticsEventPayloadError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for StateOfMindLoggingEvent.AnalyticsEventPayloadError()
{
  return &type metadata for StateOfMindLoggingEvent.AnalyticsEventPayloadError;
}

uint64_t sub_256084C5C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v6 = v4 + ((v3 + 16) & ~(unint64_t)v3);
  }
  else
  {
    uint64_t v6 = a1;
    uint64_t v7 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v7;
    uint64_t v8 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    uint64_t v10 = a2[7];
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    *(void *)(a1 + 72) = a2[9];
    uint64_t v11 = *(int *)(a3 + 36);
    uint64_t v24 = (void *)(a1 + v11);
    uint64_t v12 = (uint64_t *)((char *)a2 + v11);
    *(void *)(a1 + 56) = v10;
    sub_255FD438C(0);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_256176AA8();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        sub_256084F44(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v24, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v24, v12, v13);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v24, 0, 1, v13);
      }
      uint64_t v16 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      uint64_t v17 = (char *)v24 + v16;
      os_log_type_t v18 = (char *)v12 + v16;
      uint64_t v19 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      void *v24 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = *(int *)(a3 + 40);
    uint64_t v21 = v6 + v20;
    uint64_t v22 = (uint64_t)a2 + v20;
    *(unsigned char *)uint64_t v21 = *(unsigned char *)v22;
    *(void *)(v21 + 8) = *(void *)(v22 + 8);
  }
  swift_retain();
  return v6;
}

void sub_256084F44(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_256084FA8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  sub_255FD438C(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_256176AA8();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
    uint64_t v7 = v4 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    uint64_t v8 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }

  return swift_release();
}

uint64_t sub_256085130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v10 = *(int *)(a3 + 36);
  unint64_t v23 = (void *)(a1 + v10);
  uint64_t v22 = (void *)(a2 + v10);
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  sub_255FD438C(0);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_256176AA8();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v22, 1, v11))
    {
      sub_256084F44(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v23, v22, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v23, v22, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v23, 0, 1, v11);
    }
    uint64_t v14 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    uint64_t v15 = (char *)v23 + v14;
    uint64_t v16 = (char *)v22 + v14;
    uint64_t v17 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  else
  {
    *unint64_t v23 = *v22;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = *(int *)(a3 + 40);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(unsigned char *)uint64_t v19 = *(unsigned char *)v20;
  *(void *)(v19 + 8) = *(void *)(v20 + 8);
  swift_retain();
  return a1;
}

uint64_t sub_2560853CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 36);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (void *)(a2 + v6);
    sub_256087224(a1 + v6, (uint64_t (*)(void))sub_255FD438C);
    sub_255FD438C(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_256176AA8();
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        sub_256084F44(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      uint64_t v12 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      uint64_t v13 = (char *)v7 + v12;
      uint64_t v14 = (char *)v8 + v12;
      uint64_t v15 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v16 = *(int *)(a3 + 40);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2560856CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  long long v6 = *(_OWORD *)(a2 + 32);
  long long v7 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v8 = *(int *)(a3 + 36);
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = v7;
  sub_255FD438C(0);
  uint64_t v12 = v11;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_256176AA8();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13))
    {
      sub_256084F44(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v9, v10, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
    }
    uint64_t v16 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    uint64_t v17 = &v9[v16];
    uint64_t v18 = &v10[v16];
    uint64_t v19 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  *(_OWORD *)(a1 + *(int *)(a3 + 40)) = *(_OWORD *)(a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t sub_256085908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 36);
    uint64_t v8 = (char *)(a1 + v7);
    uint64_t v9 = (char *)(a2 + v7);
    sub_256087224(a1 + v7, (uint64_t (*)(void))sub_255FD438C);
    sub_255FD438C(0);
    uint64_t v11 = v10;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_256176AA8();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12))
      {
        sub_256084F44(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v8, v9, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
      }
      uint64_t v15 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      uint64_t v16 = &v8[v15];
      uint64_t v17 = &v9[v15];
      uint64_t v18 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v19 = *(int *)(a3 + 40);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(unsigned char *)uint64_t v20 = *(unsigned char *)v21;
  *(void *)(v20 + 8) = *(void *)(v21 + 8);
  swift_release();
  return a1;
}

uint64_t sub_256085BD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256085BE4);
}

uint64_t sub_256085BE4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_256084F44(0, &qword_269F43D20, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_256085CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256085CD8);
}

void *sub_256085CD8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    sub_256084F44(0, &qword_269F43D20, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 36);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for DomainsAndContextEntry()
{
  uint64_t result = qword_269F45D18;
  if (!qword_269F45D18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_256085DFC()
{
  sub_255FD438C(319);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_256085ECC()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_256085EE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  v13[1] = a1;
  uint64_t v3 = type metadata accessor for DomainsAndContextEntry();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_256176798();
  sub_256086214(v2, (uint64_t)v19);
  *(_OWORD *)&v20[71] = v19[4];
  *(_OWORD *)&v20[87] = v19[5];
  *(_OWORD *)&v20[103] = v19[6];
  *(_OWORD *)&v20[119] = v19[7];
  *(_OWORD *)&v20[7] = v19[0];
  *(_OWORD *)&v20[23] = v19[1];
  *(_OWORD *)&v20[39] = v19[2];
  char v21 = 0;
  *(_OWORD *)&v20[55] = v19[3];
  sub_256086934(v2, (uint64_t)v6);
  unint64_t v8 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = swift_allocObject();
  sub_25608699C((uint64_t)v6, v9 + v8);
  *(_OWORD *)((char *)&v16[5] + 1) = *(_OWORD *)&v20[80];
  *(_OWORD *)((char *)&v16[6] + 1) = *(_OWORD *)&v20[96];
  *(_OWORD *)((char *)&v16[7] + 1) = *(_OWORD *)&v20[112];
  *(_OWORD *)((char *)&v16[1] + 1) = *(_OWORD *)&v20[16];
  *(_OWORD *)((char *)&v16[2] + 1) = *(_OWORD *)&v20[32];
  *(_OWORD *)((char *)&v16[3] + 1) = *(_OWORD *)&v20[48];
  *(_OWORD *)((char *)&v16[4] + 1) = *(_OWORD *)&v20[64];
  long long v15 = (unint64_t)v7;
  LOBYTE(v16[0]) = 0;
  *(_OWORD *)((char *)v16 + 1) = *(_OWORD *)v20;
  *(void *)&v16[8] = *(void *)&v20[127];
  *((void *)&v16[8] + 1) = sub_256086A00;
  long long v17 = (unint64_t)v9;
  uint64_t v18 = 0;
  *(void *)&v22[0] = *(void *)(v2 + 8);
  *(_OWORD *)((char *)v22 + 8) = *(_OWORD *)(v2 + 16);
  sub_256084F44(0, &qword_269F44340, (uint64_t (*)(uint64_t))sub_255FEAE7C, MEMORY[0x263F1B750]);
  MEMORY[0x25A2A01A0](&v14);
  uint64_t v10 = *(void *)(v14 + 16);
  swift_bridgeObjectRelease();
  LOBYTE(v14) = v10 != 0;
  sub_256086934(v2, (uint64_t)v6);
  uint64_t v11 = swift_allocObject();
  sub_25608699C((uint64_t)v6, v11 + v8);
  sub_256086F4C(0, &qword_269F45D28, (uint64_t (*)(uint64_t))sub_256086CEC, MEMORY[0x263F1A250], MEMORY[0x263F18E28]);
  sub_256086FB8();
  sub_256177368();
  swift_release();
  v22[8] = v16[7];
  v22[9] = v16[8];
  v22[10] = v17;
  uint64_t v23 = v18;
  v22[4] = v16[3];
  v22[5] = v16[4];
  v22[6] = v16[5];
  v22[7] = v16[6];
  v22[0] = v15;
  v22[1] = v16[0];
  v22[2] = v16[1];
  v22[3] = v16[2];
  return sub_2560870E0(v22);
}

uint64_t sub_256086214@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_256176638();
  uint64_t v49 = *(void *)(v4 - 8);
  uint64_t v50 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v48 - v8;
  uint64_t v10 = type metadata accessor for DomainsAndContextEntry();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for AssociationSelectionPhaseSpecs();
  MEMORY[0x270FA5388](v13 - 8);
  long long v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)a1;
  *(void *)char v55 = *(void *)(a1 + 8);
  *(_OWORD *)&_OWORD v55[8] = *(_OWORD *)(a1 + 16);
  sub_256084F44(0, &qword_269F44340, (uint64_t (*)(uint64_t))sub_255FEAE7C, MEMORY[0x263F1B750]);
  uint64_t v54 = v16;
  swift_bridgeObjectRetain();
  sub_256177748();
  uint64_t v17 = v58;
  uint64_t v52 = v57;
  uint64_t v53 = v59;
  int v51 = sub_256176DA8();
  uint64_t v18 = a1 + *(int *)(v10 + 40);
  char v19 = *(unsigned char *)v18;
  uint64_t v20 = *(void *)(v18 + 8);
  LOBYTE(v57) = v19;
  uint64_t v58 = v20;
  sub_2560872E4(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
  sub_256177578();
  if (v55[0] == 1)
  {
    sub_25611AFC4((uint64_t)v15);
    sub_256087224((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for AssociationSelectionPhaseSpecs);
  }
  sub_256175D48();
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  int v29 = *(unsigned __int8 *)(a1 + 64);
  sub_256086934(a1, (uint64_t)v12);
  if (v29 != 1)
  {
    sub_256087224((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DomainsAndContextEntry);
    goto LABEL_7;
  }
  uint64_t v30 = &v12[*(int *)(v10 + 40)];
  char v31 = *v30;
  uint64_t v32 = *((void *)v30 + 1);
  LOBYTE(v57) = v31;
  uint64_t v58 = v32;
  sub_256177578();
  sub_256087224((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DomainsAndContextEntry);
  if ((v55[0] & 1) == 0)
  {
LABEL_7:
    uint64_t v43 = 0;
    uint64_t v35 = 0;
    uint64_t v37 = 0;
    uint64_t v36 = 0;
    uint64_t v38 = 0;
    uint64_t v42 = 0;
    goto LABEL_8;
  }
  uint64_t v33 = *(void *)(a1 + 48);
  uint64_t v34 = *(void *)(a1 + 56);
  *(_OWORD *)char v55 = *(_OWORD *)(a1 + 32);
  *(void *)&v55[16] = v33;
  uint64_t v56 = v34;
  sub_2560872E4(0, &qword_269F44350, MEMORY[0x263F8D310], MEMORY[0x263F1B750]);
  sub_256177748();
  uint64_t v35 = v58;
  uint64_t v48 = v57;
  uint64_t v37 = v59;
  uint64_t v36 = v60;
  uint64_t v38 = *(void *)(a1 + 72);
  sub_256176628();
  uint64_t v39 = v49;
  uint64_t v40 = v7;
  uint64_t v41 = v50;
  (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v40, v9, v50);
  sub_256087098(&qword_269F45D80, MEMORY[0x263F196B8]);
  uint64_t v42 = sub_256175F58();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v9, v41);
  uint64_t v43 = v48;
LABEL_8:
  LOBYTE(v57) = 0;
  uint64_t v44 = v53;
  uint64_t v45 = v52;
  *(void *)a2 = v54;
  *(void *)(a2 + 8) = v45;
  *(void *)(a2 + 16) = v17;
  *(void *)(a2 + 24) = v44;
  *(unsigned char *)(a2 + 32) = v51;
  *(void *)(a2 + 40) = v22;
  *(void *)(a2 + 48) = v24;
  *(void *)(a2 + 56) = v26;
  *(void *)(a2 + 64) = v28;
  *(unsigned char *)(a2 + 72) = 0;
  *(void *)(a2 + 80) = v43;
  *(void *)(a2 + 88) = v35;
  *(void *)(a2 + 96) = v37;
  *(void *)(a2 + 104) = v36;
  *(void *)(a2 + 112) = v38;
  *(void *)(a2 + 120) = v42;
  uint64_t v46 = v43;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_256087284(v46, v35);
  sub_2560871A0(v46, v35);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2560866FC()
{
  sub_256084F44(0, &qword_269F44340, (uint64_t (*)(uint64_t))sub_255FEAE7C, MEMORY[0x263F1B750]);
  MEMORY[0x25A2A01A0](&v2);
  uint64_t v0 = *(void *)(v2 + 16);
  swift_bridgeObjectRelease();
  type metadata accessor for DomainsAndContextEntry();
  LOBYTE(v2) = v0 != 0;
  sub_2560872E4(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
  return sub_256177588();
}

uint64_t sub_2560867EC(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(a3 + 64) == 1)
  {
    MEMORY[0x270FA5388](result);
    sub_256177928();
    sub_256176068();
    return swift_release();
  }
  return result;
}

uint64_t sub_256086894()
{
  return sub_256177588();
}

uint64_t sub_256086934(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DomainsAndContextEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25608699C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DomainsAndContextEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_256086A00()
{
  type metadata accessor for DomainsAndContextEntry();

  return sub_2560866FC();
}

uint64_t objectdestroyTm_17()
{
  uint64_t v1 = type metadata accessor for DomainsAndContextEntry();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + *(int *)(v1 + 36);
  sub_255FD438C(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256176AA8();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    }
    uint64_t v6 = v3 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    uint64_t v7 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_256086C6C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for DomainsAndContextEntry() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_2560867EC(a1, a2, v6);
}

void sub_256086CEC()
{
  if (!qword_269F45D30)
  {
    sub_256086D80(255);
    sub_256087098(&qword_269F45D68, sub_256086D80);
    unint64_t v0 = sub_2561776F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45D30);
    }
  }
}

void sub_256086D80(uint64_t a1)
{
}

void sub_256086DB4()
{
  if (!qword_269F45D40)
  {
    sub_256086E54();
    sub_256084F44(255, &qword_269F45D50, (uint64_t (*)(uint64_t))sub_256086EB4, MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F45D40);
    }
  }
}

void sub_256086E54()
{
  if (!qword_269F45D48)
  {
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45D48);
    }
  }
}

void sub_256086EB4()
{
  if (!qword_269F45D58)
  {
    sub_256086F4C(255, &qword_269F45D60, MEMORY[0x263F198B0], MEMORY[0x263F198A8], MEMORY[0x263F19DC0]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45D58);
    }
  }
}

void sub_256086F4C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    unint64_t v10 = a5(a1, v9, a4);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_256086FB8()
{
  unint64_t result = qword_269F45D70;
  if (!qword_269F45D70)
  {
    sub_256086F4C(255, &qword_269F45D28, (uint64_t (*)(uint64_t))sub_256086CEC, MEMORY[0x263F1A250], MEMORY[0x263F18E28]);
    sub_256087098(&qword_269F45D78, (void (*)(uint64_t))sub_256086CEC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45D70);
  }
  return result;
}

uint64_t sub_256087098(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_2560870E0(void *a1)
{
  uint64_t v2 = a1[13];
  uint64_t v3 = a1[14];
  uint64_t v5 = a1[19];
  uint64_t v6 = a1[21];
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_2560871A0(v2, v3);
  sub_255FF0D30(v5);
  sub_255FF0D30(v6);
  return a1;
}

uint64_t sub_2560871A0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_256087204()
{
  return sub_256086894();
}

uint64_t sub_256087224(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_256087284(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

void sub_2560872E4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_256087330()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_2560873D4(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    *(_WORD *)(a1 + 33) = *(_WORD *)((char *)a2 + 33);
    uint64_t v9 = a2[6];
    uint64_t v10 = a3[9];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (uint64_t *)((char *)a2 + v10);
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    sub_25608D814(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_256176AA8();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        sub_25608D814(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
      uint64_t v17 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      uint64_t v18 = (char *)v11 + v17;
      char v19 = (char *)v12 + v17;
      uint64_t v20 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v21 = a3[10];
    uint64_t v22 = (void *)((char *)v4 + v21);
    uint64_t v23 = (uint64_t *)((char *)a2 + v21);
    sub_25608D814(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    }
    else
    {
      void *v22 = *v23;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = a3[11];
    uint64_t v26 = (void *)((char *)v4 + v25);
    uint64_t v27 = (uint64_t *)((char *)a2 + v25);
    uint64_t v28 = v27[1];
    *uint64_t v26 = *v27;
    v26[1] = v28;
  }
  swift_retain();
  return v4;
}

uint64_t sub_256087764(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  sub_25608D814(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_256176AA8();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
    uint64_t v7 = v4 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    uint64_t v8 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = a1 + *(int *)(a2 + 40);
  sub_25608D814(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }

  return swift_release();
}

uint64_t sub_25608799C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v9 = a3[9];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  sub_25608D814(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_256176AA8();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      sub_25608D814(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v15 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    uint64_t v16 = (char *)v10 + v15;
    uint64_t v17 = (char *)v11 + v15;
    uint64_t v18 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  }
  else
  {
    *uint64_t v10 = *v11;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = a3[10];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  sub_25608D814(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v22 = sub_256175D98();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  }
  else
  {
    *uint64_t v20 = *v21;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = a3[11];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  uint64_t v26 = v25[1];
  void *v24 = *v25;
  v24[1] = v26;
  swift_retain();
  return a1;
}

uint64_t sub_256087CE0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = a3[9];
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    sub_2560880A0(a1 + v7, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs);
    sub_25608D814(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_256176AA8();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        sub_25608D814(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      uint64_t v13 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      uint64_t v14 = (char *)v8 + v13;
      uint64_t v15 = (char *)v9 + v13;
      uint64_t v16 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = a3[10];
    uint64_t v18 = (void *)(a1 + v17);
    uint64_t v19 = (void *)(a2 + v17);
    uint64_t v20 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    sub_2560880A0(a1 + v17, &qword_269F47D00, MEMORY[0x263F18520]);
    sub_25608D814(0, &qword_269F47D00, v20, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v18, v19, v21);
    }
    else
    {
      *uint64_t v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v22 = a3[11];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2560880A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_25608D814(0, a2, a3, MEMORY[0x263F185C8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_256088110(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v7 = a3[9];
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  sub_25608D814(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  uint64_t v11 = v10;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_256176AA8();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12))
    {
      sub_25608D814(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v8, v9, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
    }
    uint64_t v15 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    uint64_t v16 = &v8[v15];
    uint64_t v17 = &v9[v15];
    uint64_t v18 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v19 = a3[10];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (const void *)(a2 + v19);
  sub_25608D814(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  uint64_t v23 = v22;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = sub_256175D98();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v20, v21, v24);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
  }
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_256088438(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = a3[9];
    uint64_t v8 = (char *)(a1 + v7);
    uint64_t v9 = (char *)(a2 + v7);
    sub_2560880A0(a1 + v7, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs);
    sub_25608D814(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    uint64_t v11 = v10;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_256176AA8();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12))
      {
        sub_25608D814(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v8, v9, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
      }
      uint64_t v15 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      uint64_t v16 = &v8[v15];
      uint64_t v17 = &v9[v15];
      uint64_t v18 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    uint64_t v19 = a3[10];
    uint64_t v20 = (void *)(a1 + v19);
    uint64_t v21 = (const void *)(a2 + v19);
    uint64_t v22 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    sub_2560880A0(a1 + v19, &qword_269F47D00, MEMORY[0x263F18520]);
    sub_25608D814(0, &qword_269F47D00, v22, MEMORY[0x263F185C8]);
    uint64_t v24 = v23;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v25 = sub_256175D98();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v25 - 8) + 32))(v20, v21, v25);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    }
  }
  uint64_t v26 = a3[11];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (void *)(a2 + v26);
  *uint64_t v27 = *v28;
  v27[1] = v28[1];
  swift_release();
  return a1;
}

uint64_t sub_2560887E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2560887FC);
}

uint64_t sub_2560887FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_25608D814(0, &qword_269F43D20, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 36);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_25608D814(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 40);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_256088988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25608899C);
}

uint64_t sub_25608899C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_25608D814(0, &qword_269F43D20, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 36);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_25608D814(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 40);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for DomainsSelectionPhase_iOS()
{
  uint64_t result = qword_269F45D88;
  if (!qword_269F45D88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_256088B74()
{
  sub_25608D814(319, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (v0 <= 0x3F)
  {
    sub_25608D814(319, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_256088CD4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_256088CF0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_2560E873C(0, v1, 0);
    uint64_t v2 = v9;
    uint64_t v4 = a1 + 32;
    do
    {
      v4 += 8;
      uint64_t v5 = sub_256178398();
      unint64_t v7 = *(void *)(v9 + 16);
      unint64_t v6 = *(void *)(v9 + 24);
      if (v7 >= v6 >> 1) {
        sub_2560E873C(v6 > 1, v7 + 1, 1);
      }
      *(void *)(v9 + 16) = v7 + 1;
      *(void *)(v9 + 8 * v7 + 32) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_256088DBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v2 = type metadata accessor for DomainsSelectionPhase_iOS();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2 - 8);
  sub_25608BD8C(v1, (uint64_t)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  sub_25608D880((uint64_t)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + ((v5 + 16) & ~v5), (uint64_t (*)(void))type metadata accessor for DomainsSelectionPhase_iOS);
  uint64_t v50 = sub_25608BDF4;
  uint64_t v51 = v6;
  long long v46 = xmmword_2561A56A0;
  uint64_t v48 = 0;
  uint64_t v49 = 0;
  uint64_t v47 = 0;
  uint64_t v7 = *(void *)(v1 + 24);
  char v8 = *(unsigned char *)(v1 + 32);
  uint64_t v40 = *(ValueMetadata **)(v1 + 16);
  uint64_t v41 = v7;
  LOBYTE(v42) = v8;
  sub_25608E1A0(0, (unint64_t *)&qword_269F47D40, MEMORY[0x263F8D4F8], MEMORY[0x263F1B750]);
  MEMORY[0x25A2A01A0](&v45);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_256175C88();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v9 = v40;
  sub_25608BD8C(v1, (uint64_t)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  sub_25608D880((uint64_t)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + ((v5 + 24) & ~v5), (uint64_t (*)(void))type metadata accessor for DomainsSelectionPhase_iOS);
  sub_25608C65C(0, &qword_269F45D98, (uint64_t (*)(uint64_t))sub_25608C1C0, sub_25608C7D0, MEMORY[0x263F19058]);
  uint64_t v38 = v11;
  sub_25608C804();
  uint64_t v37 = v12;
  sub_25608C980();
  uint64_t v36 = v13;
  unint64_t v35 = sub_25608D618();
  uint64_t v34 = sub_25608D6B4(&qword_269F45EB8, (void (*)(uint64_t))sub_25608C804, (void (*)(void))sub_25608D740, (void (*)(void))sub_25608D774);
  sub_25608CB54();
  uint64_t v33 = v14;
  sub_25608D0B8();
  uint64_t v16 = v15;
  sub_25608CCFC();
  uint64_t v18 = v17;
  sub_25608CE70();
  uint64_t v20 = v19;
  sub_25608D2CC();
  uint64_t v22 = v21;
  sub_25608CF7C();
  uint64_t v24 = v23;
  uint64_t v25 = sub_25608C438(&qword_269F45E68, (void (*)(uint64_t))sub_25608CF7C);
  uint64_t v26 = sub_25608C438(&qword_269F45E70, (void (*)(uint64_t))sub_25608D0B8);
  uint64_t v40 = &type metadata for DomainsSelectionPhase_iOS.ConfirmationAnimationValues;
  uint64_t v41 = v24;
  uint64_t v42 = v16;
  uint64_t v43 = v25;
  uint64_t v44 = v26;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v28 = sub_25608C438(&qword_269F45EA8, (void (*)(uint64_t))sub_25608D2CC);
  uint64_t v40 = &type metadata for DomainsSelectionPhase_iOS.ConfirmationAnimationValues;
  uint64_t v41 = v20;
  uint64_t v42 = v22;
  uint64_t v43 = OpaqueTypeConformance2;
  uint64_t v44 = v28;
  uint64_t v29 = swift_getOpaqueTypeConformance2();
  uint64_t v40 = &type metadata for DomainsSelectionPhase_iOS.ConfirmationAnimationValues;
  uint64_t v41 = v18;
  uint64_t v42 = v16;
  uint64_t v43 = v29;
  uint64_t v44 = v26;
  uint64_t v30 = swift_getOpaqueTypeConformance2();
  uint64_t v40 = &type metadata for DomainsSelectionPhase_iOS.ConfirmationAnimationValues;
  uint64_t v41 = v33;
  uint64_t v42 = v16;
  uint64_t v43 = v30;
  uint64_t v44 = v26;
  swift_getOpaqueTypeConformance2();
  sub_256177168();
  swift_release();
  return swift_release();
}

uint64_t sub_2560892A8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v10 = type metadata accessor for ConfirmationView();
  uint64_t v11 = v10 - 8;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *a2;
  uint64_t v15 = a2[1];
  uint64_t v16 = a2[2];
  uint64_t v17 = a2[3];
  uint64_t v18 = a2[4];
  uint64_t v19 = sub_2561778E8();
  uint64_t v21 = v20;
  sub_25608C804();
  uint64_t v23 = a4 + *(int *)(v22 + 36);
  char v24 = *(unsigned char *)(a3 + 33);
  *(double *)uint64_t v13 = a5;
  *((void *)v13 + 1) = v15;
  *((void *)v13 + 2) = v14;
  *((void *)v13 + 3) = v16;
  *((void *)v13 + 4) = v17;
  *((void *)v13 + 5) = v18;
  v13[48] = v24;
  uint64_t v25 = (uint64_t *)&v13[*(int *)(v11 + 52)];
  *uint64_t v25 = swift_getKeyPath();
  uint64_t v26 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  sub_25608D814(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  uint64_t v27 = (uint64_t *)&v13[*(int *)(v11 + 56)];
  *uint64_t v27 = swift_getKeyPath();
  sub_25608D814(0, &qword_269F47D00, MEMORY[0x263F18520], v26);
  swift_storeEnumTagMultiPayload();
  sub_25608D880((uint64_t)v13, v23, (uint64_t (*)(void))type metadata accessor for ConfirmationView);
  sub_25608C65C(0, &qword_269F45E10, (uint64_t (*)(uint64_t))type metadata accessor for ConfirmationView, sub_25608C94C, MEMORY[0x263F19120]);
  uint64_t v29 = (uint64_t *)(v23 + *(int *)(v28 + 36));
  *uint64_t v29 = v19;
  v29[1] = v21;
  sub_25608C8B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(a4, a1, v30);
}

uint64_t sub_256089500@<X0>(uint64_t a1@<X8>)
{
  uint64_t v92 = a1;
  sub_25608C980();
  uint64_t v90 = v1;
  uint64_t v91 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v86 = (char *)v77 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25608CB54();
  uint64_t v85 = v3;
  uint64_t v89 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v84 = (char *)v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25608CCFC();
  uint64_t v104 = v5;
  uint64_t v88 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v103 = (char *)v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25608CE70();
  uint64_t v102 = v7;
  uint64_t v87 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v100 = (char *)v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25608D2CC();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v106 = v9;
  uint64_t v107 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v80 = (char *)v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v98 = (char *)v77 - v13;
  sub_25608D0B8();
  uint64_t v93 = v14;
  uint64_t v108 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  long long v81 = (char *)v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v97 = (char *)v77 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v105 = (char *)v77 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v99 = (char *)v77 - v21;
  sub_25608CF7C();
  uint64_t v23 = v22;
  uint64_t v24 = *(void *)(v22 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  uint64_t v27 = (char *)v77 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v101 = (char *)v77 - v28;
  swift_getKeyPath();
  uint64_t v29 = (ValueMetadata *)MEMORY[0x263F8D538];
  uint64_t v30 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x263F188B0];
  sub_25608D5C8(0, &qword_269F45E48, MEMORY[0x263F8D538], MEMORY[0x263F1BB18], MEMORY[0x263F188B0]);
  uint64_t v32 = v31;
  uint64_t v33 = sub_25608D060(&qword_269F45E50, &qword_269F45E48, v30);
  uint64_t v95 = v27;
  sub_256175FE8();
  uint64_t v78 = (void (*)(char *, uint64_t))MEMORY[0x263F18938];
  uint64_t v79 = sub_25608C438(&qword_269F45E68, (void (*)(uint64_t))sub_25608CF7C);
  uint64_t v96 = v23;
  MEMORY[0x25A29ECD0](v27);
  uint64_t v34 = *(uint64_t (**)(char *, uint64_t))(v24 + 8);
  uint64_t v82 = v24 + 8;
  unint64_t v83 = v34;
  v34(v27, v23);
  swift_getKeyPath();
  sub_25608D1D4();
  v77[2] = v35;
  uint64_t v109 = v29;
  uint64_t v110 = v32;
  uint64_t v111 = v32;
  uint64_t v112 = v33;
  uint64_t v113 = v33;
  v77[1] = swift_getOpaqueTypeConformance2();
  uint64_t v36 = v105;
  sub_256175FE8();
  uint64_t v37 = sub_25608C438(&qword_269F45E70, (void (*)(uint64_t))sub_25608D0B8);
  uint64_t v38 = v93;
  MEMORY[0x25A29ECD0](v36, &type metadata for DomainsSelectionPhase_iOS.ConfirmationAnimationValues, v93, v37);
  uint64_t v39 = *(void (**)(char *, uint64_t))(v108 + 8);
  v108 += 8;
  uint64_t v94 = v39;
  v39(v36, v38);
  v77[0] = swift_getKeyPath();
  sub_25608D460();
  uint64_t v40 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x263F18AF8];
  uint64_t v41 = MEMORY[0x263F8D538];
  uint64_t v42 = MEMORY[0x263F1BB18];
  sub_25608D5C8(255, &qword_269F45E88, MEMORY[0x263F8D538], MEMORY[0x263F1BB18], MEMORY[0x263F18AF8]);
  uint64_t v44 = v43;
  char v45 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x263F18BB8];
  sub_25608D5C8(255, &qword_269F45E90, v41, v42, MEMORY[0x263F18BB8]);
  uint64_t v47 = v46;
  uint64_t v48 = sub_25608D060(&qword_269F45E98, &qword_269F45E88, v40);
  uint64_t v49 = sub_25608D060(&qword_269F45EA0, &qword_269F45E90, v45);
  uint64_t v109 = (ValueMetadata *)MEMORY[0x263F8D538];
  uint64_t v110 = v44;
  uint64_t v111 = v47;
  uint64_t v112 = v48;
  uint64_t v113 = v49;
  swift_getOpaqueTypeConformance2();
  uint64_t v50 = v80;
  sub_256175FE8();
  v77[0] = sub_25608C438(&qword_269F45EA8, (void (*)(uint64_t))sub_25608D2CC);
  uint64_t v51 = v106;
  MEMORY[0x25A29ECD0](v50, &type metadata for DomainsSelectionPhase_iOS.ConfirmationAnimationValues, v106, v77[0]);
  uint64_t v52 = *(void (**)(char *, uint64_t))(v107 + 8);
  v107 += 8;
  uint64_t v78 = v52;
  v52(v50, v51);
  swift_getKeyPath();
  uint64_t v53 = v97;
  sub_256175FE8();
  uint64_t v54 = v93;
  MEMORY[0x25A29ECD0](v53, &type metadata for DomainsSelectionPhase_iOS.ConfirmationAnimationValues, v93, v37);
  char v55 = v94;
  v94(v53, v54);
  swift_getKeyPath();
  uint64_t v56 = v81;
  sub_256175FE8();
  MEMORY[0x25A29ECD0](v56, &type metadata for DomainsSelectionPhase_iOS.ConfirmationAnimationValues, v54, v37);
  v55(v56, v54);
  uint64_t v57 = v96;
  uint64_t v58 = v79;
  MEMORY[0x25A29ED00](v101, &type metadata for DomainsSelectionPhase_iOS.ConfirmationAnimationValues, v96, v79);
  sub_256176268();
  uint64_t v109 = &type metadata for DomainsSelectionPhase_iOS.ConfirmationAnimationValues;
  uint64_t v110 = v57;
  uint64_t v111 = v54;
  uint64_t v112 = v58;
  uint64_t v113 = v37;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v60 = v102;
  uint64_t v61 = v106;
  uint64_t v62 = v77[0];
  sub_256176268();
  uint64_t v109 = &type metadata for DomainsSelectionPhase_iOS.ConfirmationAnimationValues;
  uint64_t v110 = v60;
  uint64_t v111 = v61;
  uint64_t v112 = OpaqueTypeConformance2;
  uint64_t v113 = v62;
  uint64_t v63 = swift_getOpaqueTypeConformance2();
  uint64_t v64 = v84;
  uint64_t v66 = v104;
  uint64_t v65 = v105;
  sub_256176268();
  uint64_t v109 = &type metadata for DomainsSelectionPhase_iOS.ConfirmationAnimationValues;
  uint64_t v110 = v66;
  uint64_t v111 = v54;
  uint64_t v112 = v63;
  uint64_t v113 = v37;
  uint64_t v67 = swift_getOpaqueTypeConformance2();
  uint64_t v68 = v86;
  uint64_t v69 = v97;
  uint64_t v70 = v85;
  sub_256176268();
  uint64_t v109 = &type metadata for DomainsSelectionPhase_iOS.ConfirmationAnimationValues;
  uint64_t v110 = v70;
  uint64_t v111 = v54;
  uint64_t v112 = v67;
  uint64_t v113 = v37;
  uint64_t v71 = swift_getOpaqueTypeConformance2();
  uint64_t v72 = v90;
  MEMORY[0x25A29ECE0](v68, &type metadata for DomainsSelectionPhase_iOS.ConfirmationAnimationValues, v90, v71);
  (*(void (**)(char *, uint64_t))(v91 + 8))(v68, v72);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v64, v70);
  (*(void (**)(char *, uint64_t))(v88 + 8))(v103, v104);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v100, v102);
  uint64_t v73 = v96;
  uint64_t v74 = v83;
  v83(v95, v96);
  uint64_t v75 = v94;
  v94(v69, v54);
  v75(v65, v54);
  v78(v98, v106);
  v75(v99, v54);
  return v74(v101, v73);
}

uint64_t sub_25608A128()
{
  uint64_t v0 = MEMORY[0x263F8D538];
  uint64_t v1 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x263F188B0];
  sub_25608D5C8(0, &qword_269F45E48, MEMORY[0x263F8D538], MEMORY[0x263F1BB18], MEMORY[0x263F188B0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v2);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v13 - v8;
  uint64_t v17 = 0x3FF0000000000000;
  uint64_t v15 = 0;
  char v16 = 1;
  v13[1] = 0;
  char v14 = 1;
  sub_256175F68();
  uint64_t v10 = sub_25608D060(&qword_269F45E50, &qword_269F45E48, v1);
  MEMORY[0x25A29F660](v7, v0, v3, v10);
  uint64_t v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v7, v3);
  MEMORY[0x25A29F680](v9, v0, v3, v10);
  return ((uint64_t (*)(char *, uint64_t))v11)(v9, v3);
}

uint64_t sub_25608A30C@<X0>(uint64_t a1@<X8>)
{
  return sub_25608A790(a1, 1.0);
}

uint64_t sub_25608A328@<X0>(uint64_t a1@<X8>)
{
  uint64_t v37 = a1;
  uint64_t v1 = sub_2561776B8();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v2 = MEMORY[0x263F8D538];
  uint64_t v3 = MEMORY[0x263F1BB18];
  uint64_t v34 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x263F18BB8];
  sub_25608D5C8(0, &qword_269F45E90, MEMORY[0x263F8D538], MEMORY[0x263F1BB18], MEMORY[0x263F18BB8]);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v35 = v4;
  uint64_t v36 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v33 = (char *)&v29 - v9;
  uint64_t v10 = sub_256177998();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v11 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x263F18AF8];
  sub_25608D5C8(0, &qword_269F45E88, v2, v3, MEMORY[0x263F18AF8]);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v30 = (char *)&v29 - v18;
  uint64_t v38 = 0x3FE0000000000000;
  sub_256177988();
  sub_2561760C8();
  uint64_t v19 = sub_25608D060(&qword_269F45E98, &qword_269F45E88, v11);
  MEMORY[0x25A29F660](v17, v2, v13, v19);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t))(v14 + 8);
  uint64_t v31 = v14 + 8;
  uint64_t v32 = v20;
  v20(v17, v13);
  uint64_t v40 = 0x3FF0000000000000;
  uint64_t v38 = 0;
  char v39 = 1;
  sub_2561776A8();
  sub_256176118();
  uint64_t v21 = sub_25608D060(&qword_269F45EA0, &qword_269F45E90, v34);
  uint64_t v22 = v33;
  uint64_t v23 = v35;
  MEMORY[0x25A29F660](v8, v2, v35, v21);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v36 + 8);
  v24(v8, v23);
  uint64_t v25 = v30;
  MEMORY[0x25A29F680](v30, v2, v13, v19);
  sub_256176BE8();
  uint64_t v26 = v17;
  uint64_t v27 = v32;
  v32(v26, v13);
  v24(v22, v23);
  return v27(v25, v13);
}

uint64_t sub_25608A768@<X0>(uint64_t a1@<X8>)
{
  return sub_25608A790(a1, 24.0);
}

uint64_t sub_25608A77C@<X0>(uint64_t a1@<X8>)
{
  return sub_25608A790(a1, 1.0);
}

uint64_t sub_25608A790@<X0>(uint64_t a1@<X8>, double a2@<D1>)
{
  uint64_t v19 = a1;
  uint64_t v3 = MEMORY[0x263F8D538];
  uint64_t v4 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x263F188B0];
  sub_25608D5C8(0, &qword_269F45E48, MEMORY[0x263F8D538], MEMORY[0x263F1BB18], MEMORY[0x263F188B0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v19 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v19 - v14;
  double v24 = 0.0;
  uint64_t v22 = 0;
  char v23 = 1;
  uint64_t v20 = 0;
  char v21 = 1;
  sub_256175F68();
  uint64_t v16 = sub_25608D060(&qword_269F45E50, &qword_269F45E48, v4);
  MEMORY[0x25A29F660](v13, v3, v6, v16);
  uint64_t v17 = *(void (**)(char *, uint64_t))(v7 + 8);
  v17(v13, v6);
  double v24 = a2;
  uint64_t v22 = 0;
  char v23 = 1;
  uint64_t v20 = 0;
  char v21 = 1;
  sub_256175F68();
  MEMORY[0x25A29F660](v10, v3, v6, v16);
  v17(v10, v6);
  MEMORY[0x25A29F680](v15, v3, v6, v16);
  sub_256176BE8();
  v17(v10, v6);
  v17(v13, v6);
  return ((uint64_t (*)(char *, uint64_t))v17)(v15, v6);
}

uint64_t sub_25608AA54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v84 = a1;
  uint64_t v90 = a3;
  uint64_t v4 = sub_256176218();
  uint64_t v88 = *(void *)(v4 - 8);
  uint64_t v89 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v82 = v5;
  uint64_t v87 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for DomainsSelectionPhase_iOS();
  uint64_t v79 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  uint64_t v80 = v6;
  uint64_t v81 = (uint64_t)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25608C2F8();
  uint64_t v86 = v7;
  uint64_t v85 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v83 = (uint64_t)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_256175D98();
  uint64_t v76 = *(void *)(v77 - 8);
  MEMORY[0x270FA5388](v77);
  uint64_t v75 = (uint64_t)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_256176C18();
  uint64_t v67 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DomainsSelectionPhaseContent();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FD7420(0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25608C65C(0, &qword_269F43DF0, (uint64_t (*)(uint64_t))sub_255FD7420, sub_255FD7768, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for StateOfMindEntryPhase_iOS);
  uint64_t v19 = v18;
  MEMORY[0x270FA5388](v18);
  char v21 = (_OWORD *)((char *)&v64 - v20);
  sub_255FD7358();
  uint64_t v65 = v22;
  uint64_t v64 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  double v24 = (char *)&v64 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25608C590(0);
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v27 = (char *)&v64 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25608C548(0);
  uint64_t v68 = v28;
  MEMORY[0x270FA5388](v28);
  uint64_t v66 = (uint64_t)&v64 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25608C480();
  uint64_t v74 = v30;
  uint64_t v73 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v72 = (char *)&v64 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25608C1C0();
  uint64_t v70 = v32;
  MEMORY[0x270FA5388](v32);
  uint64_t v71 = (char *)&v64 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v34 = 0uLL;
  long long v35 = 0uLL;
  long long v36 = 0uLL;
  long long v37 = 0uLL;
  long long v38 = 0uLL;
  if ((*(unsigned char *)(a2 + 34) & 1) == 0)
  {
    sub_25608B554((uint64_t)v95);
    long long v34 = v95[0];
    long long v35 = v95[1];
    long long v36 = v95[2];
    long long v37 = v95[3];
    long long v38 = v95[4];
  }
  *char v21 = v34;
  v21[1] = v35;
  v21[2] = v36;
  v21[3] = v37;
  v21[4] = v38;
  uint64_t v39 = (uint64_t)v21 + *(int *)(v19 + 36);
  sub_25608B884((uint64_t)v14);
  *uint64_t v17 = sub_256176D58();
  sub_25608D8E8();
  sub_255FD6E94((uint64_t)v14, (uint64_t)&v17[*(int *)(v40 + 44)]);
  sub_25608D9F8((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for DomainsSelectionPhaseContent);
  sub_25608D880((uint64_t)v17, v39, (uint64_t (*)(void))sub_255FD7420);
  uint64_t v41 = (uint64_t *)((char *)v21 + *(int *)(v19 + 40));
  *uint64_t v41 = swift_getKeyPath();
  sub_25608D814(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  sub_256176C08();
  sub_255FD779C();
  sub_256177248();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v11, v69);
  sub_25608D958((uint64_t)v21);
  sub_255FD60AC(*(unsigned char *)(a2 + 33), *(unsigned char *)(a2 + 34), (uint64_t)v27);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v24, v65);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_256175C88();
  swift_release();
  swift_release();
  swift_release();
  double v42 = v91;
  uint64_t v43 = v75;
  sub_25611A114(v75);
  uint64_t v44 = v66;
  sub_2560D63F4(v43, (uint64_t)v27, v66, v42);
  (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v43, v77);
  sub_25608D9F8((uint64_t)v27, (uint64_t (*)(void))sub_25608C590);
  uint64_t v45 = *(void *)(a2 + 24);
  char v46 = *(unsigned char *)(a2 + 32);
  double v91 = *(double *)(a2 + 16);
  uint64_t v92 = v45;
  char v93 = v46;
  sub_25608E1A0(0, (unint64_t *)&qword_269F47D40, MEMORY[0x263F8D4F8], MEMORY[0x263F1B750]);
  MEMORY[0x25A2A01A0](&v94);
  sub_25608D6B4(&qword_269F45DE0, sub_25608C548, (void (*)(void))sub_25608C6DC, (void (*)(void))sub_255FD7C5C);
  uint64_t v47 = v72;
  sub_256177278();
  sub_25608D9F8(v44, (uint64_t (*)(void))sub_25608C548);
  uint64_t v48 = v83;
  sub_2560D25C4(v83);
  uint64_t v49 = v81;
  sub_25608BD8C(a2, v81);
  uint64_t v51 = v87;
  uint64_t v50 = v88;
  uint64_t v52 = v89;
  (*(void (**)(char *, uint64_t, uint64_t))(v88 + 16))(v87, v84, v89);
  unint64_t v53 = (*(unsigned __int8 *)(v79 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
  unint64_t v54 = (v80 + *(unsigned __int8 *)(v50 + 80) + v53) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  uint64_t v55 = swift_allocObject();
  sub_25608D880(v49, v55 + v53, (uint64_t (*)(void))type metadata accessor for DomainsSelectionPhase_iOS);
  (*(void (**)(unint64_t, char *, uint64_t))(v50 + 32))(v55 + v54, v51, v52);
  uint64_t v56 = v73;
  uint64_t v57 = (uint64_t)v71;
  uint64_t v58 = v74;
  (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v71, v47, v74);
  uint64_t v59 = v70;
  uint64_t v60 = v85;
  uint64_t v61 = v86;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v85 + 16))(v57 + *(int *)(v70 + 52), v48, v86);
  uint64_t v62 = (uint64_t (**)(double *))(v57 + *(int *)(v59 + 56));
  *uint64_t v62 = sub_25608DD9C;
  v62[1] = (uint64_t (*)(double *))v55;
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v48, v61);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v47, v58);
  return sub_25608D880(v57, v90, (uint64_t (*)(void))sub_25608C1C0);
}

uint64_t sub_25608B554@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DomainsSelectionPhase_iOS();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = (double *)(v1 + *(int *)(MEMORY[0x270FA5388](v4 - 8) + 52));
  double v8 = *v7;
  uint64_t v9 = *((void *)v7 + 1);
  double v26 = v8;
  uint64_t v27 = v9;
  sub_25608E1A0(0, &qword_269F432B0, MEMORY[0x263F8EF38], MEMORY[0x263F1B5D0]);
  uint64_t result = sub_256177578();
  if (v24 >= 110.0)
  {
    uint64_t v12 = 0;
    uint64_t v14 = 0;
    double v18 = 0.0;
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    unint64_t v23 = 0;
    uint64_t v22 = 0;
    uint64_t v17 = 0;
    int64x2_t v21 = 0uLL;
  }
  else
  {
    if (qword_269F42348 != -1) {
      swift_once();
    }
    id v11 = (id)qword_269F50C88;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_2561755B8();
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();

    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_256175C88();
    swift_release();
    swift_release();
    swift_release();
    double v15 = v26;
    sub_25608BD8C(v2, (uint64_t)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v16 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v17 = swift_allocObject();
    sub_25608D880((uint64_t)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16, (uint64_t (*)(void))type metadata accessor for DomainsSelectionPhase_iOS);
    double v24 = v15;
    char v25 = 0;
    sub_25608E1A0(0, (unint64_t *)&qword_269F43C20, MEMORY[0x263F8D538], MEMORY[0x263F8D8F0]);
    uint64_t result = sub_256177768();
    double v18 = v26;
    uint64_t v19 = v27;
    uint64_t v20 = v28;
    int64x2_t v21 = vdupq_n_s64(0x74747542656E6F44uLL);
    v21.i64[0] = v29;
    uint64_t v22 = sub_25608E144;
    unint64_t v23 = 0xEA00000000006E6FLL;
  }
  *(void *)a1 = v12;
  *(void *)(a1 + 8) = v14;
  *(double *)(a1 + 16) = v18;
  *(void *)(a1 + 24) = v19;
  *(void *)(a1 + 32) = v20;
  *(int64x2_t *)(a1 + 40) = v21;
  *(void *)(a1 + 56) = v23;
  *(void *)(a1 + 64) = v22;
  *(void *)(a1 + 72) = v17;
  return result;
}

uint64_t sub_25608B884@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for DomainsSelectionPhase_iOS();
  uint64_t v22 = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v22 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_256175C88();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = v23;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_256175C88();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v21 = v23;
  swift_retain();
  uint64_t v6 = sub_2561783A8();
  uint64_t v20 = sub_256088CF0(v6);
  swift_release();
  swift_bridgeObjectRelease();
  type metadata accessor for StateOfMindEntryModel(0);
  sub_25608C438(&qword_269F42CB0, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel);
  sub_2561760F8();
  swift_getKeyPath();
  sub_256176108();
  swift_release();
  swift_release();
  uint64_t v7 = v26;
  long long v19 = v27;
  sub_2561760F8();
  swift_getKeyPath();
  sub_256176108();
  swift_release();
  swift_release();
  long long v18 = v23;
  uint64_t v8 = v24;
  uint64_t v9 = v25;
  char v10 = *(unsigned char *)(v1 + 33);
  char v11 = *(unsigned char *)(v1 + 34);
  sub_25608BD8C(v1, (uint64_t)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v12 = (*(unsigned __int8 *)(v22 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v13 = swift_allocObject();
  sub_25608D880((uint64_t)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, (uint64_t (*)(void))type metadata accessor for DomainsSelectionPhase_iOS);
  *(void *)a1 = v5;
  uint64_t v14 = v20;
  *(void *)(a1 + 8) = v21;
  *(void *)(a1 + 16) = v14;
  *(void *)(a1 + 24) = v7;
  long long v15 = v18;
  *(_OWORD *)(a1 + 32) = v19;
  *(_OWORD *)(a1 + 48) = v15;
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v9;
  *(unsigned char *)(a1 + 80) = v10;
  *(unsigned char *)(a1 + 81) = (v11 & 1) == 0;
  *(void *)(a1 + 88) = 60;
  *(void *)(a1 + 96) = sub_25608E144;
  *(void *)(a1 + 104) = v13;
  unint64_t v16 = (uint64_t *)(a1 + *(int *)(type metadata accessor for DomainsSelectionPhaseContent() + 52));
  *unint64_t v16 = swift_getKeyPath();
  sub_25608D814(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_25608BC24(double *a1)
{
  double v1 = *a1;
  type metadata accessor for DomainsSelectionPhase_iOS();
  sub_25608E1A0(0, &qword_269F432B0, MEMORY[0x263F8EF38], MEMORY[0x263F1B5D0]);
  uint64_t result = sub_256177588();
  if (v1 > 0.0) {
    return sub_256176208();
  }
  return result;
}

void *sub_25608BD04(uint64_t a1)
{
  sub_25608E1A0(0, (unint64_t *)&qword_269F47D40, MEMORY[0x263F8D4F8], MEMORY[0x263F1B750]);
  uint64_t result = MEMORY[0x25A2A01A0](&v3);
  if ((v3 & 1) == 0) {
    return (void *)(*(uint64_t (**)(void *))(a1 + 40))(result);
  }
  return result;
}

uint64_t sub_25608BD8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DomainsSelectionPhase_iOS();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25608BDF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for DomainsSelectionPhase_iOS() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_25608AA54(a1, v6, a2);
}

uint64_t sub_25608BE7C()
{
  uint64_t v1 = type metadata accessor for DomainsSelectionPhase_iOS();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v3 = v2 + *(int *)(v1 + 36);
  sub_25608D814(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256176AA8();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    }
    uint64_t v6 = v3 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    uint64_t v7 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = v2 + *(int *)(v1 + 40);
  sub_25608D814(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_25608C134@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(type metadata accessor for DomainsSelectionPhase_iOS() - 8);
  double v8 = *(double *)(v3 + 16);
  uint64_t v9 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_2560892A8(a1, a2, v9, a3, v8);
}

void sub_25608C1C0()
{
  if (!qword_269F45DA0)
  {
    sub_25608C2F8();
    sub_25608C480();
    sub_25608C438(&qword_269F45DF0, (void (*)(uint64_t))sub_25608C2F8);
    sub_25608C548(255);
    sub_25608D6B4(&qword_269F45DE0, sub_25608C548, (void (*)(void))sub_25608C6DC, (void (*)(void))sub_255FD7C5C);
    swift_getOpaqueTypeConformance2();
    unint64_t v0 = sub_2561762C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45DA0);
    }
  }
}

void sub_25608C2F8()
{
  if (!qword_269F45DA8)
  {
    sub_25608C39C();
    sub_25608C438(&qword_269F45DC0, (void (*)(uint64_t))sub_25608C39C);
    unint64_t v0 = sub_256175BA8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45DA8);
    }
  }
}

void sub_25608C39C()
{
  if (!qword_269F45DB0)
  {
    sub_256178348();
    sub_25608C438(&qword_269F45DB8, MEMORY[0x263F07CB0]);
    unint64_t v0 = sub_256175B88();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45DB0);
    }
  }
}

uint64_t sub_25608C438(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_25608C480()
{
  if (!qword_269F45DC8)
  {
    sub_25608C548(255);
    sub_25608D6B4(&qword_269F45DE0, sub_25608C548, (void (*)(void))sub_25608C6DC, (void (*)(void))sub_255FD7C5C);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F45DC8);
    }
  }
}

void sub_25608C548(uint64_t a1)
{
}

void sub_25608C590(uint64_t a1)
{
}

void sub_25608C5D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4(255);
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_25608C65C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

unint64_t sub_25608C6DC()
{
  unint64_t result = qword_269F45DE8;
  if (!qword_269F45DE8)
  {
    sub_25608C590(255);
    sub_255FD7904();
    sub_25608C65C(255, &qword_269F43DF0, (uint64_t (*)(uint64_t))sub_255FD7420, sub_255FD7768, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for StateOfMindEntryPhase_iOS);
    sub_255FD779C();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45DE8);
  }
  return result;
}

uint64_t sub_25608C7D0()
{
  return sub_25608C438(&qword_269F45DF8, (void (*)(uint64_t))sub_25608C1C0);
}

void sub_25608C804()
{
  if (!qword_269F45E00)
  {
    sub_25608C8B0();
    sub_25608C65C(255, &qword_269F45E10, (uint64_t (*)(uint64_t))type metadata accessor for ConfirmationView, sub_25608C94C, MEMORY[0x263F19120]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45E00);
    }
  }
}

void sub_25608C8B0()
{
  if (!qword_269F45E08)
  {
    sub_25608C65C(255, &qword_269F45D98, (uint64_t (*)(uint64_t))sub_25608C1C0, sub_25608C7D0, MEMORY[0x263F19058]);
    unint64_t v0 = sub_256176A68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45E08);
    }
  }
}

uint64_t sub_25608C94C()
{
  return sub_25608C438(&qword_269F45E18, (void (*)(uint64_t))type metadata accessor for ConfirmationView);
}

void sub_25608C980()
{
  if (!qword_269F45E20)
  {
    sub_25608CB54();
    sub_25608D0B8();
    sub_25608CCFC();
    sub_25608CE70();
    sub_25608D2CC();
    sub_25608CF7C();
    sub_25608C438(&qword_269F45E68, (void (*)(uint64_t))sub_25608CF7C);
    sub_25608C438(&qword_269F45E70, (void (*)(uint64_t))sub_25608D0B8);
    swift_getOpaqueTypeConformance2();
    sub_25608C438(&qword_269F45EA8, (void (*)(uint64_t))sub_25608D2CC);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F45E20);
    }
  }
}

void sub_25608CB54()
{
  if (!qword_269F45E28)
  {
    sub_25608CCFC();
    sub_25608D0B8();
    sub_25608CE70();
    sub_25608D2CC();
    sub_25608CF7C();
    sub_25608C438(&qword_269F45E68, (void (*)(uint64_t))sub_25608CF7C);
    sub_25608C438(&qword_269F45E70, (void (*)(uint64_t))sub_25608D0B8);
    swift_getOpaqueTypeConformance2();
    sub_25608C438(&qword_269F45EA8, (void (*)(uint64_t))sub_25608D2CC);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F45E28);
    }
  }
}

void sub_25608CCFC()
{
  if (!qword_269F45E30)
  {
    sub_25608CE70();
    sub_25608D2CC();
    sub_25608CF7C();
    sub_25608D0B8();
    sub_25608C438(&qword_269F45E68, (void (*)(uint64_t))sub_25608CF7C);
    sub_25608C438(&qword_269F45E70, (void (*)(uint64_t))sub_25608D0B8);
    swift_getOpaqueTypeConformance2();
    sub_25608C438(&qword_269F45EA8, (void (*)(uint64_t))sub_25608D2CC);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F45E30);
    }
  }
}

void sub_25608CE70()
{
  if (!qword_269F45E38)
  {
    sub_25608CF7C();
    sub_25608D0B8();
    sub_25608C438(&qword_269F45E68, (void (*)(uint64_t))sub_25608CF7C);
    sub_25608C438(&qword_269F45E70, (void (*)(uint64_t))sub_25608D0B8);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F45E38);
    }
  }
}

void sub_25608CF7C()
{
  if (!qword_269F45E40)
  {
    unint64_t v0 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x263F188B0];
    sub_25608D5C8(255, &qword_269F45E48, MEMORY[0x263F8D538], MEMORY[0x263F1BB18], MEMORY[0x263F188B0]);
    sub_25608D060(&qword_269F45E50, &qword_269F45E48, v0);
    unint64_t v1 = sub_256175FD8();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_269F45E40);
    }
  }
}

uint64_t sub_25608D060(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(void, uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25608D5C8(255, a2, MEMORY[0x263F8D538], MEMORY[0x263F1BB18], a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_25608D0B8()
{
  if (!qword_269F45E58)
  {
    sub_25608D1D4();
    unint64_t v0 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x263F188B0];
    sub_25608D5C8(255, &qword_269F45E48, MEMORY[0x263F8D538], MEMORY[0x263F1BB18], MEMORY[0x263F188B0]);
    sub_25608D060(&qword_269F45E50, &qword_269F45E48, v0);
    swift_getOpaqueTypeConformance2();
    unint64_t v1 = sub_256175FD8();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_269F45E58);
    }
  }
}

void sub_25608D1D4()
{
  if (!qword_269F45E60)
  {
    unint64_t v0 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x263F188B0];
    sub_25608D5C8(255, &qword_269F45E48, MEMORY[0x263F8D538], MEMORY[0x263F1BB18], MEMORY[0x263F188B0]);
    sub_25608D060(&qword_269F45E50, &qword_269F45E48, v0);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v2) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F45E60);
    }
  }
}

void sub_25608D2CC()
{
  if (!qword_269F45E78)
  {
    sub_25608D460();
    uint64_t v0 = MEMORY[0x263F8D538];
    uint64_t v1 = MEMORY[0x263F1BB18];
    uint64_t v2 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x263F18AF8];
    sub_25608D5C8(255, &qword_269F45E88, MEMORY[0x263F8D538], MEMORY[0x263F1BB18], MEMORY[0x263F18AF8]);
    uint64_t v3 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x263F18BB8];
    sub_25608D5C8(255, &qword_269F45E90, v0, v1, MEMORY[0x263F18BB8]);
    sub_25608D060(&qword_269F45E98, &qword_269F45E88, v2);
    sub_25608D060(&qword_269F45EA0, &qword_269F45E90, v3);
    swift_getOpaqueTypeConformance2();
    unint64_t v4 = sub_256175FD8();
    if (!v5) {
      atomic_store(v4, (unint64_t *)&qword_269F45E78);
    }
  }
}

void sub_25608D460()
{
  if (!qword_269F45E80)
  {
    uint64_t v0 = MEMORY[0x263F8D538];
    uint64_t v1 = MEMORY[0x263F1BB18];
    uint64_t v2 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x263F18AF8];
    sub_25608D5C8(255, &qword_269F45E88, MEMORY[0x263F8D538], MEMORY[0x263F1BB18], MEMORY[0x263F18AF8]);
    uint64_t v3 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x263F18BB8];
    sub_25608D5C8(255, &qword_269F45E90, v0, v1, MEMORY[0x263F18BB8]);
    sub_25608D060(&qword_269F45E98, &qword_269F45E88, v2);
    sub_25608D060(&qword_269F45EA0, &qword_269F45E90, v3);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v5) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F45E80);
    }
  }
}

void sub_25608D5C8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_25608D618()
{
  unint64_t result = qword_269F45EB0;
  if (!qword_269F45EB0)
  {
    sub_25608C65C(255, &qword_269F45D98, (uint64_t (*)(uint64_t))sub_25608C1C0, sub_25608C7D0, MEMORY[0x263F19058]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45EB0);
  }
  return result;
}

uint64_t sub_25608D6B4(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25608D740()
{
  return sub_25608C438(&qword_269F45EC0, (void (*)(uint64_t))sub_25608C8B0);
}

unint64_t sub_25608D774()
{
  unint64_t result = qword_269F45EC8;
  if (!qword_269F45EC8)
  {
    sub_25608C65C(255, &qword_269F45E10, (uint64_t (*)(uint64_t))type metadata accessor for ConfirmationView, sub_25608C94C, MEMORY[0x263F19120]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45EC8);
  }
  return result;
}

void sub_25608D814(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_25608D880(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_25608D8E8()
{
  if (!qword_269F45ED0)
  {
    sub_255FD74E8(255);
    sub_255FD6E40();
    unint64_t v0 = sub_256176048();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45ED0);
    }
  }
}

uint64_t sub_25608D958(uint64_t a1)
{
  sub_25608C65C(0, &qword_269F43DF0, (uint64_t (*)(uint64_t))sub_255FD7420, sub_255FD7768, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for StateOfMindEntryPhase_iOS);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25608D9F8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25608DA58()
{
  uint64_t v1 = type metadata accessor for DomainsSelectionPhase_iOS();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v15 = sub_256176218();
  uint64_t v4 = *(void *)(v15 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  unint64_t v6 = v0 + v2 + *(int *)(v1 + 36);
  sub_25608D814(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = v3;
    uint64_t v7 = sub_256176AA8();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
    unint64_t v9 = v6 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    uint64_t v10 = sub_256176158();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
    uint64_t v3 = v14;
  }
  else
  {
    swift_release();
  }
  unint64_t v11 = v0 + v2 + *(int *)(v1 + 40);
  sub_25608D814(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_256175D98();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + ((v2 + v3 + v5) & ~v5), v15);

  return swift_deallocObject();
}

uint64_t sub_25608DD9C(double *a1)
{
  type metadata accessor for DomainsSelectionPhase_iOS();
  sub_256176218();

  return sub_25608BC24(a1);
}

uint64_t objectdestroyTm_18()
{
  uint64_t v1 = type metadata accessor for DomainsSelectionPhase_iOS();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v3 = v2 + *(int *)(v1 + 36);
  sub_25608D814(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256176AA8();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    }
    uint64_t v6 = v3 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    uint64_t v7 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = v2 + *(int *)(v1 + 40);
  sub_25608D814(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  swift_release();

  return swift_deallocObject();
}

void *sub_25608E14C()
{
  uint64_t v1 = *(void *)(type metadata accessor for DomainsSelectionPhase_iOS() - 8);
  return sub_25608BD04(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

void sub_25608E1A0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for DomainsSelectionPhase_iOS.ConfirmationAnimationValues(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DomainsSelectionPhase_iOS.ConfirmationAnimationValues(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for DomainsSelectionPhase_iOS.ConfirmationAnimationValues()
{
  return &type metadata for DomainsSelectionPhase_iOS.ConfirmationAnimationValues;
}

uint64_t sub_25608E250()
{
  return swift_getOpaqueTypeConformance2();
}

id static NSBundle.mentalHealthUI.getter()
{
  type metadata accessor for MentalHealthUIRepresentative();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);

  return v1;
}

uint64_t type metadata accessor for MentalHealthUIRepresentative()
{
  return self;
}

id sub_25608E588()
{
  type metadata accessor for MentalHealthUIRepresentative();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  qword_269F50C88 = (uint64_t)result;
  unk_269F50C90 = 0xD00000000000001ALL;
  qword_269F50C98 = 0x80000002561AC220;
  return result;
}

uint64_t sub_25608E600()
{
  return swift_deallocClassInstance();
}

ValueMetadata *type metadata accessor for StateOfMindCalendarPlaceholderView()
{
  return &type metadata for StateOfMindCalendarPlaceholderView;
}

uint64_t sub_25608E620()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_25608E63C(void *a1)
{
  id v1 = objc_msgSend(a1, sel_userInterfaceStyle);
  uint64_t v2 = self;
  char v3 = &selRef_systemGray3Color;
  if (v1 != (id)2) {
    char v3 = &selRef_systemGray6Color;
  }
  id v4 = [v2 *v3];

  return v4;
}

double sub_25608E6A8@<D0>(uint64_t a1@<X8>)
{
  id v2 = objc_allocWithZone(MEMORY[0x263F825C8]);
  *(void *)&long long v23 = sub_25608E63C;
  *((void *)&v23 + 1) = 0;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v20 = 1107296256;
  uint64_t v21 = sub_2560520D4;
  uint64_t v22 = &block_descriptor_8;
  char v3 = _Block_copy(&aBlock);
  id v4 = objc_msgSend(v2, sel_initWithDynamicProvider_, v3);
  _Block_release(v3);
  swift_release();
  uint64_t v5 = MEMORY[0x25A29FF60](v4);
  sub_256175E38();
  uint64_t v6 = sub_2561778E8();
  uint64_t v8 = v7;
  sub_2561778E8();
  sub_256175F38();
  uint64_t v9 = aBlock;
  char v10 = v20;
  unint64_t v11 = v21;
  char v12 = (char)v22;
  *(double *)a1 = v14 * 0.5;
  *(double *)(a1 + 8) = v14;
  *(void *)(a1 + 16) = v15;
  *(void *)(a1 + 24) = v16;
  *(void *)(a1 + 32) = v17;
  *(void *)(a1 + 40) = v18;
  *(void *)(a1 + 48) = v5;
  *(_WORD *)(a1 + 56) = 256;
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 72) = v8;
  *(void *)(a1 + 80) = v9;
  *(unsigned char *)(a1 + 88) = v10;
  *(void *)(a1 + 96) = v11;
  *(unsigned char *)(a1 + 104) = v12;
  double result = *(double *)&v23;
  *(_OWORD *)(a1 + 112) = v23;
  return result;
}

double sub_25608E858@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_256176788();
  sub_25608E6A8((uint64_t)v8);
  *(_OWORD *)&v9[71] = v8[4];
  *(_OWORD *)&v9[87] = v8[5];
  *(_OWORD *)&v9[103] = v8[6];
  *(_OWORD *)&v9[119] = v8[7];
  *(_OWORD *)&v9[7] = v8[0];
  *(_OWORD *)&v9[23] = v8[1];
  *(_OWORD *)&v9[39] = v8[2];
  *(_OWORD *)&v9[55] = v8[3];
  long long v3 = *(_OWORD *)&v9[64];
  *(_OWORD *)(a1 + 97) = *(_OWORD *)&v9[80];
  long long v4 = *(_OWORD *)&v9[112];
  *(_OWORD *)(a1 + 113) = *(_OWORD *)&v9[96];
  *(_OWORD *)(a1 + 129) = v4;
  long long v5 = *(_OWORD *)v9;
  *(_OWORD *)(a1 + 33) = *(_OWORD *)&v9[16];
  double result = *(double *)&v9[32];
  long long v7 = *(_OWORD *)&v9[48];
  *(_OWORD *)(a1 + 49) = *(_OWORD *)&v9[32];
  *(_OWORD *)(a1 + 65) = v7;
  *(_OWORD *)(a1 + 81) = v3;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 144) = *(void *)&v9[127];
  *(_OWORD *)(a1 + 17) = v5;
  return result;
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t sub_25608E92C()
{
  return sub_25608EBC4(&qword_269F45ED8, (void (*)(uint64_t))sub_25608E974);
}

void sub_25608E974()
{
  if (!qword_269F45EE0)
  {
    sub_25608E9D8();
    sub_25608EB1C();
    unint64_t v0 = sub_2561776F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45EE0);
    }
  }
}

void sub_25608E9D8()
{
  if (!qword_269F45EE8)
  {
    sub_25608EA38();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45EE8);
    }
  }
}

void sub_25608EA38()
{
  if (!qword_269F45EF0)
  {
    sub_25608EAC8();
    unint64_t v0 = sub_2561769D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45EF0);
    }
  }
}

unint64_t sub_25608EAC8()
{
  unint64_t result = qword_269F45EF8;
  if (!qword_269F45EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45EF8);
  }
  return result;
}

unint64_t sub_25608EB1C()
{
  unint64_t result = qword_269F45F00;
  if (!qword_269F45F00)
  {
    sub_25608E9D8();
    sub_25608EBC4(&qword_269F45F08, (void (*)(uint64_t))sub_25608EA38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45F00);
  }
  return result;
}

uint64_t sub_25608EBC4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_25608EC0C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  long long v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *long long v4 = *a2;
    long long v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = *(int *)(a3 + 28);
    uint64_t v9 = (void *)(a1 + v8);
    char v10 = (uint64_t *)((char *)a2 + v8);
    sub_256091CD4(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_256176AA8();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        sub_256091CD4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      uint64_t v15 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      uint64_t v16 = (char *)v9 + v15;
      uint64_t v17 = (char *)v10 + v15;
      uint64_t v18 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v19 = *(int *)(a3 + 32);
    uint64_t v20 = (void *)((char *)v4 + v19);
    uint64_t v21 = (uint64_t *)((char *)a2 + v19);
    sub_256091CD4(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    }
    else
    {
      *uint64_t v20 = *v21;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_25608EF58(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  sub_256091CD4(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_256176AA8();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
    uint64_t v7 = v4 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    uint64_t v8 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = a1 + *(int *)(a2 + 32);
  sub_256091CD4(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_256175D98();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    return v11(v9, v10);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_25608F184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  sub_256091CD4(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_256176AA8();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      sub_256091CD4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v13 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    uint64_t v14 = (char *)v8 + v13;
    uint64_t v15 = (char *)v9 + v13;
    uint64_t v16 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = *(int *)(a3 + 32);
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  sub_256091CD4(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = sub_256175D98();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  }
  else
  {
    *uint64_t v18 = *v19;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_25608F478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 28);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (void *)(a2 + v6);
    sub_25608F7B4(a1 + v6, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs);
    sub_256091CD4(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_256176AA8();
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        sub_256091CD4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      uint64_t v12 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      uint64_t v13 = (char *)v7 + v12;
      uint64_t v14 = (char *)v8 + v12;
      uint64_t v15 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v16 = *(int *)(a3 + 32);
    uint64_t v17 = (void *)(a1 + v16);
    uint64_t v18 = (void *)(a2 + v16);
    uint64_t v19 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    sub_25608F7B4(a1 + v16, &qword_269F47D00, MEMORY[0x263F18520]);
    sub_256091CD4(0, &qword_269F47D00, v19, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v17, v18, v20);
    }
    else
    {
      *uint64_t v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_25608F7B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_256091CD4(0, a2, a3, MEMORY[0x263F185C8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_25608F824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  sub_256091CD4(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  uint64_t v10 = v9;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_256176AA8();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
    {
      sub_256091CD4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v7, v8, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
    }
    uint64_t v14 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    uint64_t v15 = &v7[v14];
    uint64_t v16 = &v8[v14];
    uint64_t v17 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v18 = *(int *)(a3 + 32);
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (const void *)(a2 + v18);
  sub_256091CD4(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  uint64_t v22 = v21;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v23 = sub_256175D98();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 32))(v19, v20, v23);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
  }
  return a1;
}

uint64_t sub_25608FB30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 28);
    uint64_t v7 = (char *)(a1 + v6);
    uint64_t v8 = (char *)(a2 + v6);
    sub_25608F7B4(a1 + v6, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs);
    sub_256091CD4(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    uint64_t v10 = v9;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_256176AA8();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
      {
        sub_256091CD4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v7, v8, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
      }
      uint64_t v14 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      uint64_t v15 = &v7[v14];
      uint64_t v16 = &v8[v14];
      uint64_t v17 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
    }
    uint64_t v18 = *(int *)(a3 + 32);
    uint64_t v19 = (void *)(a1 + v18);
    uint64_t v20 = (const void *)(a2 + v18);
    uint64_t v21 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    sub_25608F7B4(a1 + v18, &qword_269F47D00, MEMORY[0x263F18520]);
    sub_256091CD4(0, &qword_269F47D00, v21, MEMORY[0x263F185C8]);
    uint64_t v23 = v22;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = sub_256175D98();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v19, v20, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_25608FE84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25608FE98);
}

uint64_t sub_25608FE98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_256091CD4(0, &qword_269F43D20, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_256091CD4(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_256090024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256090038);
}

uint64_t sub_256090038(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_256091CD4(0, &qword_269F43D20, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_256091CD4(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for ValenceSelectionSummary()
{
  uint64_t result = qword_269F45F10;
  if (!qword_269F45F10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_256090210()
{
  sub_256091CD4(319, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (v0 <= 0x3F)
  {
    sub_256091CD4(319, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_256090360()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_25609037C@<X0>(double *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v223 = a2;
  sub_2560920B8(0, &qword_269F45F70, (void (*)(uint64_t))sub_256091F30);
  uint64_t v220 = v3;
  uint64_t v221 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v195 = (uint64_t)&v191 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v194 = (uint64_t)&v191 - v6;
  sub_256092044();
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v222 = (uint64_t)&v191 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v219 = (uint64_t)&v191 - v10;
  uint64_t v11 = type metadata accessor for LoggingFlowBlendMode();
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v228 = (uint64_t *)((char *)&v191 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v12);
  uint64_t v229 = (uint64_t)&v191 - v14;
  uint64_t v226 = sub_256175D98();
  uint64_t v233 = *(void *)(v226 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v226);
  v224 = (char *)&v191 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v212 = (uint64_t)&v191 - v17;
  uint64_t v211 = sub_256176EE8();
  uint64_t v210 = *(void *)(v211 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v211);
  uint64_t v208 = (char *)&v191 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v209 = (char *)&v191 - v20;
  uint64_t v216 = type metadata accessor for LoggingFlowBlendMode;
  sub_256091FE0(0, (unint64_t *)&qword_269F45F60, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
  uint64_t v225 = v21;
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  uint64_t v192 = (char *)&v191 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v213 = (char *)&v191 - v24;
  sub_256091F30();
  uint64_t v227 = v25;
  uint64_t v26 = MEMORY[0x270FA5388](v25);
  uint64_t v193 = (uint64_t)&v191 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v214 = (uint64_t)&v191 - v28;
  sub_256091EC8();
  uint64_t v30 = MEMORY[0x270FA5388](v29 - 8);
  uint64_t v218 = (uint64_t)&v191 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v215 = (char *)&v191 - v33;
  MEMORY[0x270FA5388](v32);
  uint64_t v232 = (uint64_t)&v191 - v34;
  uint64_t v205 = type metadata accessor for AssociationSelectionPhaseSpecs() - 8;
  uint64_t v35 = MEMORY[0x270FA5388](v205);
  uint64_t v191 = (uint64_t)&v191 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v204 = (uint64_t *)((char *)&v191 - v38);
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v202 = (uint64_t)&v191 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v43 = (char *)&v191 - v42;
  MEMORY[0x270FA5388](v41);
  uint64_t v45 = (char *)&v191 - v44;
  uint64_t v200 = (void (*)(uint64_t))MEMORY[0x263F1A470];
  sub_256091FE0(0, (unint64_t *)&qword_269F44070, MEMORY[0x263F1A470]);
  MEMORY[0x270FA5388](v46 - 8);
  uint64_t v48 = (char *)&v191 - v47;
  sub_256091E44();
  uint64_t v198 = v49 - 8;
  MEMORY[0x270FA5388](v49 - 8);
  uint64_t v197 = (uint64_t)&v191 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560920B8(0, &qword_269F45F40, (void (*)(uint64_t))sub_256091E44);
  uint64_t v201 = v51;
  MEMORY[0x270FA5388](v51);
  unint64_t v53 = (char *)&v191 - v52;
  sub_256091DC0();
  uint64_t v55 = MEMORY[0x270FA5388](v54 - 8);
  uint64_t v217 = (uint64_t)&v191 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = MEMORY[0x270FA5388](v55);
  uint64_t v199 = (char *)&v191 - v58;
  MEMORY[0x270FA5388](v57);
  uint64_t v231 = (uint64_t)&v191 - v59;
  double v60 = *a1;
  LOBYTE(v234) = 6;
  StateOfMindVisualization.ValenceImageProvider.init(valence:imageScale:)(v236, v60);
  uint64_t v234 = &unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B6628);
  sub_255F96DFC(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  uint64_t v207 = v61;
  unint64_t v206 = sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_255F97230();
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v203 = type metadata accessor for ValenceSelectionSummary();
  uint64_t v62 = (char *)a1 + *(int *)(v203 + 28);
  sub_25611AFC4((uint64_t)v45);
  uint64_t v63 = a1;
  sub_25609227C((uint64_t)v45, (uint64_t (*)(void))type metadata accessor for AssociationSelectionPhaseSpecs);
  sub_25611AFC4((uint64_t)v43);
  int v196 = type metadata accessor for AssociationSelectionPhaseSpecs;
  sub_25609227C((uint64_t)v43, (uint64_t (*)(void))type metadata accessor for AssociationSelectionPhaseSpecs);
  sub_2561778E8();
  sub_256175F38();
  uint64_t v64 = (uint64_t)v48;
  uint64_t v65 = (uint64_t)v48;
  uint64_t v66 = v197;
  uint64_t v67 = v200;
  sub_2560924CC(v65, v197, (unint64_t *)&qword_269F44070, v200);
  uint64_t v68 = (_OWORD *)(v66 + *(int *)(v198 + 44));
  long long v69 = v236[1];
  *uint64_t v68 = v236[0];
  v68[1] = v69;
  v68[2] = v236[2];
  sub_2560922DC(v64, (unint64_t *)&qword_269F44070, v67);
  char v70 = sub_256176DA8();
  uint64_t v71 = v202;
  sub_25611AFC4(v202);
  uint64_t v230 = v63;
  sub_25609227C(v71, (uint64_t (*)(void))type metadata accessor for AssociationSelectionPhaseSpecs);
  sub_256175D48();
  uint64_t v73 = v72;
  uint64_t v75 = v74;
  uint64_t v77 = v76;
  uint64_t v79 = v78;
  sub_256092768(v66, (uint64_t)v53, (uint64_t (*)(void))sub_256091E44);
  uint64_t v80 = &v53[*((int *)v201 + 9)];
  *uint64_t v80 = v70;
  *((void *)v80 + 1) = v73;
  *((void *)v80 + 2) = v75;
  *((void *)v80 + 3) = v77;
  *((void *)v80 + 4) = v79;
  v80[40] = 0;
  sub_25609227C(v66, (uint64_t (*)(void))sub_256091E44);
  sub_256092338();
  uint64_t v81 = (uint64_t)v199;
  sub_2561771E8();
  sub_256092444((uint64_t)v53);
  sub_256092680(v81, v231, (uint64_t (*)(void))sub_256091DC0);
  sub_256178408();
  id v82 = (id)HKUILocalizedStringForValenceClassification();
  uint64_t v83 = sub_256177EE8();
  uint64_t v85 = v84;

  uint64_t v234 = (void *)v83;
  uint64_t v235 = v85;
  uint64_t v200 = (void (*)(uint64_t))sub_255F5CE90();
  uint64_t v86 = sub_256177028();
  uint64_t v88 = v87;
  uint64_t v202 = v89;
  char v91 = v90 & 1;
  uint64_t v92 = (void (*)(void, void, void))v204;
  uint64_t v201 = v62;
  sub_25611AFC4((uint64_t)v204);
  sub_256176EB8();
  char v93 = sub_256176138();
  uint64_t v94 = v210;
  uint64_t v95 = (unsigned int *)MEMORY[0x263F1A680];
  if ((v93 & 1) == 0) {
    uint64_t v95 = (unsigned int *)MEMORY[0x263F1A688];
  }
  uint64_t v96 = v208;
  uint64_t v97 = v211;
  (*(void (**)(char *, void, uint64_t))(v210 + 104))(v208, *v95, v211);
  uint64_t v98 = v209;
  (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v209, v96, v97);
  sub_256176F08();
  swift_release();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v98, v97);
  sub_25609227C((uint64_t)v92, (uint64_t (*)(void))v196);
  uint64_t v99 = sub_256176FD8();
  uint64_t v101 = v100;
  char v103 = v102 & 1;
  sub_255F67B2C(v86, v88, v91);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v104 = sub_256176FC8();
  uint64_t v106 = v105;
  uint64_t v211 = v107;
  char v109 = v108 & 1;
  sub_255F67B2C(v99, v101, v103);
  swift_bridgeObjectRelease();
  unsigned int v110 = sub_256176A48();
  uint64_t v111 = v212;
  uint64_t v210 = (uint64_t)v230 + *(int *)(v203 + 32);
  sub_25611A114(v212);
  uint64_t v112 = v233;
  uint64_t v113 = *(uint64_t **)(v233 + 104);
  char v114 = v224;
  LODWORD(v205) = *MEMORY[0x263F184F8];
  uint64_t v115 = v226;
  uint64_t v208 = (char *)(v233 + 104);
  uint64_t v204 = v113;
  ((void (*)(char *))v113)(v224);
  LOBYTE(v97) = sub_256175D88();
  uint64_t v116 = *(void (**)(char *, uint64_t))(v112 + 8);
  v116(v114, v115);
  uint64_t v233 = v112 + 8;
  uint64_t v209 = (char *)v116;
  v116((char *)v111, v115);
  float v117 = 0.8;
  if (v97) {
    float v117 = 0.6;
  }
  uint64_t v234 = (void *)__PAIR64__(LODWORD(v117), v110);
  sub_25602E204();
  uint64_t v203 = sub_256092234((unint64_t *)&qword_269F44E78, (void (*)(uint64_t))sub_25602E204);
  uint64_t v118 = sub_256176FA8();
  uint64_t v120 = v119;
  char v122 = v121;
  uint64_t v124 = v123;
  sub_255F67B2C(v104, v106, v109);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v126 = v228;
  *uint64_t v228 = KeyPath;
  sub_256091CD4(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  uint64_t v128 = v127;
  swift_storeEnumTagMultiPayload();
  uint64_t v129 = (uint64_t)v126;
  uint64_t v130 = v229;
  sub_256092680(v129, v229, (uint64_t (*)(void))type metadata accessor for LoggingFlowBlendMode);
  uint64_t v131 = v213;
  sub_256092768(v130, (uint64_t)&v213[*(int *)(v225 + 36)], (uint64_t (*)(void))type metadata accessor for LoggingFlowBlendMode);
  *(void *)uint64_t v131 = v118;
  *((void *)v131 + 1) = v120;
  v131[16] = v122 & 1;
  *((void *)v131 + 3) = v124;
  uint64_t v132 = (uint64_t)v131;
  sub_25609227C(v130, (uint64_t (*)(void))type metadata accessor for LoggingFlowBlendMode);
  uint64_t v133 = swift_getKeyPath();
  uint64_t v134 = (uint64_t)v131;
  uint64_t v135 = v214;
  double v136 = (void (*)(uint64_t))v216;
  sub_2560924CC(v134, v214, (unint64_t *)&qword_269F45F60, (void (*)(uint64_t))v216);
  uint64_t v137 = v135 + *(int *)(v227 + 36);
  *(void *)uint64_t v137 = v133;
  *(unsigned char *)(v137 + 8) = 1;
  sub_2560922DC(v132, (unint64_t *)&qword_269F45F60, v136);
  uint64_t v234 = &unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B6658);
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_25609253C();
  uint64_t v138 = (uint64_t)v215;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_25609227C(v135, (uint64_t (*)(void))sub_256091F30);
  sub_256092680(v138, v232, (uint64_t (*)(void))sub_256091EC8);
  if (*(void *)(*((void *)v230 + 1) + 16))
  {
    uint64_t v234 = (void *)sub_256091928();
    uint64_t v235 = v139;
    uint64_t v140 = sub_256177028();
    uint64_t v142 = v141;
    char v144 = v143 & 1;
    LODWORD(v216) = sub_256176A48();
    sub_25611A114(v111);
    uint64_t v145 = v224;
    uint64_t v146 = v226;
    ((void (*)(char *, void, uint64_t))v204)(v224, v205, v226);
    char v147 = sub_256175D88();
    uint64_t v148 = v145;
    uint64_t v230 = v128;
    uint64_t v149 = v209;
    ((void (*)(char *, uint64_t))v209)(v148, v146);
    ((void (*)(uint64_t, uint64_t))v149)(v111, v146);
    float v150 = 0.8;
    if (v147) {
      float v150 = 0.6;
    }
    uint64_t v234 = (void *)__PAIR64__(LODWORD(v150), v216);
    uint64_t v151 = sub_256176FA8();
    uint64_t v153 = v152;
    char v155 = v154;
    uint64_t v157 = v156;
    sub_255F67B2C(v140, v142, v144);
    swift_bridgeObjectRelease();
    uint64_t v158 = swift_getKeyPath();
    uint64_t v159 = v228;
    *uint64_t v228 = v158;
    swift_storeEnumTagMultiPayload();
    uint64_t v160 = (uint64_t)v159;
    uint64_t v161 = v229;
    sub_256092680(v160, v229, (uint64_t (*)(void))type metadata accessor for LoggingFlowBlendMode);
    uint64_t v162 = (uint64_t)v192;
    sub_256092768(v161, (uint64_t)&v192[*(int *)(v225 + 36)], (uint64_t (*)(void))type metadata accessor for LoggingFlowBlendMode);
    *(void *)uint64_t v162 = v151;
    *(void *)(v162 + 8) = v153;
    *(unsigned char *)(v162 + 16) = v155 & 1;
    *(void *)(v162 + 24) = v157;
    sub_25609227C(v161, (uint64_t (*)(void))type metadata accessor for LoggingFlowBlendMode);
    uint64_t v163 = swift_getKeyPath();
    uint64_t v164 = v193;
    sub_2560924CC(v162, v193, (unint64_t *)&qword_269F45F60, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
    uint64_t v165 = v164 + *(int *)(v227 + 36);
    *(void *)uint64_t v165 = v163;
    *(unsigned char *)(v165 + 8) = 1;
    sub_2560922DC(v162, (unint64_t *)&qword_269F45F60, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
    LOBYTE(v163) = sub_256176D98();
    uint64_t v166 = v191;
    sub_25611AFC4(v191);
    sub_25609227C(v166, (uint64_t (*)(void))type metadata accessor for AssociationSelectionPhaseSpecs);
    sub_256175D48();
    uint64_t v168 = v167;
    uint64_t v170 = v169;
    uint64_t v172 = v171;
    uint64_t v174 = v173;
    uint64_t v175 = v195;
    sub_256092768(v164, v195, (uint64_t (*)(void))sub_256091F30);
    uint64_t v176 = v220;
    uint64_t v177 = v175 + *(int *)(v220 + 36);
    *(unsigned char *)uint64_t v177 = v163;
    *(void *)(v177 + 8) = v168;
    *(void *)(v177 + 16) = v170;
    *(void *)(v177 + 24) = v172;
    *(void *)(v177 + 32) = v174;
    *(unsigned char *)(v177 + 40) = 0;
    sub_25609227C(v164, (uint64_t (*)(void))sub_256091F30);
    uint64_t v178 = v194;
    sub_2560926E8(v175, v194);
    uint64_t v179 = v219;
    sub_2560926E8(v178, v219);
    uint64_t v180 = 0;
    uint64_t v181 = v176;
  }
  else
  {
    uint64_t v179 = v219;
    uint64_t v181 = v220;
    uint64_t v180 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v221 + 56))(v179, v180, 1, v181);
  uint64_t v182 = v231;
  uint64_t v183 = v217;
  sub_256092768(v231, v217, (uint64_t (*)(void))sub_256091DC0);
  uint64_t v184 = v232;
  uint64_t v185 = v218;
  sub_256092768(v232, v218, (uint64_t (*)(void))sub_256091EC8);
  uint64_t v186 = v222;
  sub_256092768(v179, v222, (uint64_t (*)(void))sub_256092044);
  uint64_t v187 = v223;
  sub_256092768(v183, v223, (uint64_t (*)(void))sub_256091DC0);
  sub_256091D38();
  uint64_t v189 = v188;
  sub_256092768(v185, v187 + *(int *)(v188 + 48), (uint64_t (*)(void))sub_256091EC8);
  sub_256092768(v186, v187 + *(int *)(v189 + 64), (uint64_t (*)(void))sub_256092044);
  sub_25609227C(v179, (uint64_t (*)(void))sub_256092044);
  sub_25609227C(v184, (uint64_t (*)(void))sub_256091EC8);
  sub_25609227C(v182, (uint64_t (*)(void))sub_256091DC0);
  sub_25609227C(v186, (uint64_t (*)(void))sub_256092044);
  sub_25609227C(v185, (uint64_t (*)(void))sub_256091EC8);
  return sub_25609227C(v183, (uint64_t (*)(void))sub_256091DC0);
}

uint64_t sub_256091928()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_256018860(v0);
  swift_bridgeObjectRelease();
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v1 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  sub_2561755B8();
  swift_bridgeObjectRelease();

  sub_255F96DFC(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_255F744D8();
  uint64_t v2 = sub_256177E28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_256091A90()
{
  uint64_t v1 = sub_256176BB8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256091C40();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v7 = sub_256176788();
  *((void *)v7 + 1) = 0;
  v7[16] = 0;
  sub_25609219C();
  sub_25609037C(v0, (uint64_t)&v7[*(int *)(v8 + 44)]);
  sub_256176B98();
  sub_256092234(&qword_269F45F88, (void (*)(uint64_t))sub_256091C40);
  sub_256177208();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_25609227C((uint64_t)v7, (uint64_t (*)(void))sub_256091C40);
}

void sub_256091C40()
{
  if (!qword_269F45F20)
  {
    sub_256091CD4(255, &qword_269F45F28, (uint64_t (*)(uint64_t))sub_256091D38, MEMORY[0x263F1BAC8]);
    sub_256092114();
    unint64_t v0 = sub_2561776F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45F20);
    }
  }
}

void sub_256091CD4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_256091D38()
{
  if (!qword_269F45F30)
  {
    sub_256091DC0();
    sub_256091EC8();
    sub_256092044();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_269F45F30);
    }
  }
}

void sub_256091DC0()
{
  if (!qword_269F45F38)
  {
    sub_2560920B8(255, &qword_269F45F40, (void (*)(uint64_t))sub_256091E44);
    sub_256176D38();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45F38);
    }
  }
}

void sub_256091E44()
{
  if (!qword_269F45F48)
  {
    sub_256091FE0(255, (unint64_t *)&qword_269F44070, MEMORY[0x263F1A470]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45F48);
    }
  }
}

void sub_256091EC8()
{
  if (!qword_269F45F50)
  {
    sub_256091F30();
    sub_256176D38();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45F50);
    }
  }
}

void sub_256091F30()
{
  if (!qword_269F45F58)
  {
    sub_256091FE0(255, (unint64_t *)&qword_269F45F60, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
    sub_255F96DFC(255, (unint64_t *)&qword_269F42C58, MEMORY[0x263F18968], MEMORY[0x263F1A418]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45F58);
    }
  }
}

void sub_256091FE0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_256092044()
{
  if (!qword_269F45F68)
  {
    sub_2560920B8(255, &qword_269F45F70, (void (*)(uint64_t))sub_256091F30);
    unint64_t v0 = sub_256178448();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45F68);
    }
  }
}

void sub_2560920B8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_256092114()
{
  unint64_t result = qword_269F45F78;
  if (!qword_269F45F78)
  {
    sub_256091CD4(255, &qword_269F45F28, (uint64_t (*)(uint64_t))sub_256091D38, MEMORY[0x263F1BAC8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45F78);
  }
  return result;
}

void sub_25609219C()
{
  if (!qword_269F45F80)
  {
    sub_256091CD4(255, &qword_269F45F28, (uint64_t (*)(uint64_t))sub_256091D38, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_256176048();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45F80);
    }
  }
}

uint64_t sub_256092234(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25609227C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2560922DC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_256091FE0(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_256092338()
{
  unint64_t result = qword_269F45F90;
  if (!qword_269F45F90)
  {
    sub_2560920B8(255, &qword_269F45F40, (void (*)(uint64_t))sub_256091E44);
    sub_2560923CC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45F90);
  }
  return result;
}

unint64_t sub_2560923CC()
{
  unint64_t result = qword_269F45F98;
  if (!qword_269F45F98)
  {
    sub_256091E44();
    sub_256083288();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45F98);
  }
  return result;
}

uint64_t sub_256092444(uint64_t a1)
{
  sub_2560920B8(0, &qword_269F45F40, (void (*)(uint64_t))sub_256091E44);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2560924CC(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_256091FE0(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

unint64_t sub_25609253C()
{
  unint64_t result = qword_269F45FA0;
  if (!qword_269F45FA0)
  {
    sub_256091F30();
    sub_2560925B4();
    sub_255F96F04();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45FA0);
  }
  return result;
}

unint64_t sub_2560925B4()
{
  unint64_t result = qword_269F45FA8;
  if (!qword_269F45FA8)
  {
    sub_256091FE0(255, (unint64_t *)&qword_269F45F60, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
    sub_256092234(&qword_269F45680, (void (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45FA8);
  }
  return result;
}

uint64_t sub_256092680(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2560926E8(uint64_t a1, uint64_t a2)
{
  sub_2560920B8(0, &qword_269F45F70, (void (*)(uint64_t))sub_256091F30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_256092768(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2560927D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t StateOfMindTimeline.TimelineView.init(model:chartFactory:onChartDisplay:onFirstTimeLoggingCompletion:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  sub_2560982C0(0, &qword_269F45FB8, (uint64_t)&_s13PresentedViewON, MEMORY[0x263F8D8F0]);
  sub_256177568();
  uint64_t KeyPath = swift_getKeyPath();
  sub_256177568();
  type metadata accessor for StateOfMindTimeline.Model();
  sub_256094A44(&qword_269F456A0, (void (*)(uint64_t))type metadata accessor for StateOfMindTimeline.Model);
  uint64_t result = sub_2561760E8();
  *(void *)a7 = result;
  *(void *)(a7 + 8) = v12;
  *(unsigned char *)(a7 + 16) = v17;
  *(void *)(a7 + 24) = v18;
  *(void *)(a7 + 32) = KeyPath;
  *(unsigned char *)(a7 + 40) = 0;
  *(unsigned char *)(a7 + 48) = v17;
  *(void *)(a7 + 56) = v18;
  *(void *)(a7 + 64) = a1;
  *(void *)(a7 + 72) = a2;
  *(void *)(a7 + 80) = a3;
  *(void *)(a7 + 88) = a4;
  *(void *)(a7 + 96) = a5;
  *(void *)(a7 + 104) = a6;
  return result;
}

uint64_t StateOfMindTimeline.TimelineView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v87 = a1;
  uint64_t v2 = _s9ViewModelOMa();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v84 = (char *)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_256176BB8();
  uint64_t v82 = *(void *)(v83 - 8);
  MEMORY[0x270FA5388](v83);
  uint64_t v81 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560949B0();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256094A8C(0);
  uint64_t v11 = v10 - 8;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256094DAC(0);
  uint64_t v74 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256094EBC();
  uint64_t v78 = v17;
  uint64_t v79 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v73 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256095464();
  uint64_t v75 = v19;
  uint64_t v80 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v76 = (char *)&v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256095820();
  uint64_t v86 = v21;
  uint64_t v85 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v77 = (char *)&v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v23 = v1[5];
  long long v99 = v1[4];
  long long v100 = v23;
  long long v101 = v1[6];
  long long v24 = v1[1];
  long long v95 = *v1;
  long long v96 = v24;
  long long v25 = v1[3];
  long long v97 = v1[2];
  long long v98 = v25;
  uint64_t v88 = &v95;
  sub_256176D68();
  _s16TimelineDataViewVMa();
  sub_256094A44(&qword_269F45FC8, (void (*)(uint64_t))_s16TimelineDataViewVMa);
  sub_256175D68();
  uint64_t v26 = (uint64_t (*)@<X0>(uint64_t *@<X8>))swift_allocObject();
  long long v27 = v100;
  *((_OWORD *)v26 + 5) = v99;
  *((_OWORD *)v26 + 6) = v27;
  *((_OWORD *)v26 + 7) = v101;
  long long v28 = v96;
  *((_OWORD *)v26 + 1) = v95;
  *((_OWORD *)v26 + 2) = v28;
  long long v29 = v98;
  *((_OWORD *)v26 + 3) = v97;
  *((_OWORD *)v26 + 4) = v29;
  sub_256095A18((uint64_t)&v95);
  uint64_t v30 = sub_2561778E8();
  uint64_t v32 = v31;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v9, v6);
  uint64_t v33 = (uint64_t (**)@<X0>(uint64_t *@<X8>))&v13[*(int *)(v11 + 44)];
  *uint64_t v33 = sub_256095A10;
  v33[1] = v26;
  void v33[2] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v30;
  v33[3] = v32;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v34 = (uint64_t (*)())swift_allocObject();
  long long v35 = v100;
  *((_OWORD *)v34 + 5) = v99;
  *((_OWORD *)v34 + 6) = v35;
  *((_OWORD *)v34 + 7) = v101;
  long long v36 = v96;
  *((_OWORD *)v34 + 1) = v95;
  *((_OWORD *)v34 + 2) = v36;
  long long v37 = v98;
  *((_OWORD *)v34 + 3) = v97;
  *((_OWORD *)v34 + 4) = v37;
  sub_256097D94((uint64_t)v13, (uint64_t)v16, (uint64_t (*)(void))sub_256094A8C);
  uint64_t v38 = v74;
  uint64_t v39 = (uint64_t (**)())&v16[*(int *)(v74 + 36)];
  *uint64_t v39 = sub_256095AA4;
  v39[1] = v34;
  sub_256095A18((uint64_t)&v95);
  sub_256095B34((uint64_t)v13, (uint64_t (*)(void))sub_256094A8C);
  long long v94 = v96;
  sub_256095AAC();
  sub_256177598();
  uint64_t v40 = (_OWORD *)swift_allocObject();
  long long v41 = v100;
  v40[5] = v99;
  v40[6] = v41;
  v40[7] = v101;
  long long v42 = v96;
  v40[1] = v95;
  v40[2] = v42;
  long long v43 = v98;
  v40[3] = v97;
  v40[4] = v43;
  sub_256095A18((uint64_t)&v95);
  sub_256097DFC(0, &qword_269F46030, MEMORY[0x263F19B28]);
  uint64_t v45 = v44;
  uint64_t v46 = sub_256095118(&qword_269F46048, sub_256094DAC, (void (*)(void))sub_2560950D0, (void (*)(void))sub_25609520C);
  unint64_t v47 = sub_256095240();
  unint64_t v48 = sub_256095294();
  sub_2561772F8();
  swift_release();
  swift_release();
  swift_release();
  sub_256095B34((uint64_t)v16, (uint64_t (*)(void))sub_256094DAC);
  long long v94 = v98;
  sub_2560982C0(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
  sub_256177598();
  uint64_t v49 = (_OWORD *)swift_allocObject();
  long long v50 = v100;
  v49[5] = v99;
  v49[6] = v50;
  v49[7] = v101;
  long long v51 = v96;
  v49[1] = v95;
  v49[2] = v51;
  long long v52 = v98;
  v49[3] = v97;
  v49[4] = v52;
  sub_256095A18((uint64_t)&v95);
  sub_256095618();
  uint64_t v54 = v53;
  *(void *)&long long v89 = v38;
  *((void *)&v89 + 1) = &_s13PresentedViewON;
  uint64_t v90 = v45;
  uint64_t v91 = v46;
  unint64_t v92 = v47;
  unint64_t v93 = v48;
  uint64_t v55 = v75;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v71 = sub_256095118(&qword_269F460B0, (void (*)(uint64_t))sub_256095618, (void (*)(void))sub_256095728, (void (*)(void))sub_255FE1E9C);
  uint64_t v57 = v76;
  uint64_t v58 = v78;
  uint64_t v59 = v73;
  sub_256177378();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v59, v58);
  double v60 = v81;
  sub_256176BA8();
  *(void *)&long long v89 = v58;
  *((void *)&v89 + 1) = v54;
  uint64_t v61 = v77;
  uint64_t v90 = OpaqueTypeConformance2;
  uint64_t v91 = v71;
  uint64_t v62 = swift_getOpaqueTypeConformance2();
  sub_256177208();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v60, v83);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v57, v55);
  long long v89 = v95;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  uint64_t v63 = (uint64_t)v84;
  sub_256175C88();
  swift_release();
  swift_release();
  sub_25605B688((uint64_t)&v89);
  sub_256095B34(v63, (uint64_t (*)(void))_s9ViewModelOMa);
  uint64_t v64 = qword_2704B6688;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v64 = sub_256095C94(0, qword_2704B6698 + 1, 1, qword_2704B6688);
  }
  unint64_t v66 = v64[2];
  unint64_t v65 = v64[3];
  if (v66 >= v65 >> 1) {
    uint64_t v64 = sub_256095C94((void *)(v65 > 1), v66 + 1, 1, v64);
  }
  v64[2] = v66 + 1;
  uint64_t v67 = &v64[2 * v66];
  v67[4] = 0x656E696C656D6954;
  v67[5] = 0xE800000000000000;
  *(void *)&long long v94 = &unk_2704B5358;
  uint64_t v68 = swift_bridgeObjectRetain();
  sub_255FCD3A4(v68);
  sub_2560982C0(0, (unint64_t *)&qword_26B2AD350, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  *(void *)&long long v94 = v55;
  *((void *)&v94 + 1) = v62;
  swift_getOpaqueTypeConformance2();
  uint64_t v69 = v86;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  return (*(uint64_t (**)(char *, uint64_t))(v85 + 8))(v61, v69);
}

double sub_256093588@<D0>(_OWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  long long v37 = _s9ViewModelOMa;
  long long v36 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F1B750];
  sub_256097994(0, &qword_269F42FC0, (uint64_t (*)(uint64_t))_s9ViewModelOMa, MEMORY[0x263F1B750]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v35 - v5;
  sub_256095A18((uint64_t)a1);
  type metadata accessor for StateOfMindTimeline.Model();
  sub_256094A44(&qword_269F456A0, (void (*)(uint64_t))type metadata accessor for StateOfMindTimeline.Model);
  sub_2561760F8();
  sub_256098040((uint64_t)a1);
  swift_getKeyPath();
  sub_256176108();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_256175C88();
  swift_release();
  swift_release();
  swift_release();
  double v7 = v39;
  uint64_t v8 = (_OWORD *)swift_allocObject();
  long long v9 = a1[5];
  v8[5] = a1[4];
  v8[6] = v9;
  v8[7] = a1[6];
  long long v10 = a1[1];
  v8[1] = *a1;
  void v8[2] = v10;
  long long v11 = a1[3];
  v8[3] = a1[2];
  v8[4] = v11;
  uint64_t v12 = (uint64_t (*)())swift_allocObject();
  long long v13 = a1[5];
  *((_OWORD *)v12 + 5) = a1[4];
  *((_OWORD *)v12 + 6) = v13;
  *((_OWORD *)v12 + 7) = a1[6];
  long long v14 = a1[1];
  *((_OWORD *)v12 + 1) = *a1;
  *((_OWORD *)v12 + 2) = v14;
  long long v15 = a1[3];
  *((_OWORD *)v12 + 3) = a1[2];
  *((_OWORD *)v12 + 4) = v15;
  uint64_t v16 = (uint64_t (*)())swift_allocObject();
  long long v17 = a1[5];
  *((_OWORD *)v16 + 5) = a1[4];
  *((_OWORD *)v16 + 6) = v17;
  *((_OWORD *)v16 + 7) = a1[6];
  long long v18 = a1[1];
  *((_OWORD *)v16 + 1) = *a1;
  *((_OWORD *)v16 + 2) = v18;
  long long v19 = a1[3];
  *((_OWORD *)v16 + 3) = a1[2];
  *((_OWORD *)v16 + 4) = v19;
  uint64_t v20 = (uint64_t (*)())swift_allocObject();
  long long v21 = a1[5];
  *((_OWORD *)v20 + 5) = a1[4];
  *((_OWORD *)v20 + 6) = v21;
  *((_OWORD *)v20 + 7) = a1[6];
  long long v22 = a1[1];
  *((_OWORD *)v20 + 1) = *a1;
  *((_OWORD *)v20 + 2) = v22;
  long long v23 = a1[3];
  *((_OWORD *)v20 + 3) = a1[2];
  *((_OWORD *)v20 + 4) = v23;
  *a2 = swift_getKeyPath();
  long long v24 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  sub_256097994(0, &qword_269F42FB8, MEMORY[0x263F18DD8], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  long long v25 = (int *)_s16TimelineDataViewVMa();
  uint64_t v26 = (uint64_t *)((char *)a2 + v25[5]);
  *uint64_t v26 = swift_getKeyPath();
  sub_256097994(0, &qword_269F47D00, MEMORY[0x263F18520], v24);
  swift_storeEnumTagMultiPayload();
  long long v27 = (uint64_t *)((char *)a2 + v25[6]);
  *long long v27 = swift_getKeyPath();
  sub_256097994(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, v24);
  swift_storeEnumTagMultiPayload();
  sub_256098250((uint64_t)v6, (uint64_t)a2 + v25[7], &qword_269F42FC0, (uint64_t (*)(uint64_t))v37, v36);
  *(double *)((char *)a2 + v25[8]) = v7;
  long long v28 = (uint64_t *)((char *)a2 + v25[9]);
  *long long v28 = sub_256097E8C;
  v28[1] = v8;
  long long v29 = (uint64_t (**)())((char *)a2 + v25[10]);
  *long long v29 = sub_256098118;
  v29[1] = v12;
  uint64_t v30 = (uint64_t (**)())((char *)a2 + v25[11]);
  *uint64_t v30 = sub_256098168;
  v30[1] = v16;
  uint64_t v31 = (uint64_t (**)())((char *)a2 + v25[12]);
  *uint64_t v31 = sub_256098220;
  v31[1] = v20;
  uint64_t v32 = (double *)((char *)a2 + v25[13]);
  uint64_t v38 = 0;
  sub_256095A18((uint64_t)a1);
  sub_256095A18((uint64_t)a1);
  sub_256095A18((uint64_t)a1);
  sub_256095A18((uint64_t)a1);
  sub_256177568();
  double result = v39;
  uint64_t v34 = v40;
  *uint64_t v32 = v39;
  *((void *)v32 + 1) = v34;
  return result;
}

uint64_t sub_256093A14()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();

  return swift_release();
}

uint64_t sub_256093A90(uint64_t a1)
{
  uint64_t v2 = _s9ViewModelOMa();
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  double v7 = (char *)&v9 - v6;
  sub_256097D94(a1, (uint64_t)&v9 - v6, (uint64_t (*)(void))_s9ViewModelOMa);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256097D94((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(void))_s9ViewModelOMa);
  swift_retain();
  sub_256175C98();
  return sub_256095B34((uint64_t)v7, (uint64_t (*)(void))_s9ViewModelOMa);
}

uint64_t sub_256093BBC(uint64_t a1)
{
  sub_2560982C0(0, (unint64_t *)&qword_269F43718, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
  uint64_t v2 = sub_256177588();
  return (*(uint64_t (**)(uint64_t))(a1 + 80))(v2);
}

uint64_t sub_256093C3C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  char v4 = *(unsigned char *)(a1 + 40);
  sub_256095A18(a1);
  uint64_t v5 = swift_retain();
  uint64_t v6 = sub_25611C3CC(v5, v4);
  swift_release();
  sub_256098040(a1);
  uint64_t result = sub_256175FA8();
  *a2 = v6;
  a2[1] = v8;
  return result;
}

uint64_t sub_256093CB4()
{
  return sub_256175C98();
}

uint64_t sub_256093D30@<X0>(unsigned char *a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v55 = a1;
  uint64_t v60 = a3;
  char v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185D0];
  sub_256097994(0, &qword_269F42CC8, MEMORY[0x263F188C0], MEMORY[0x263F185D0]);
  MEMORY[0x270FA5388](v5 - 8);
  double v7 = (uint64_t *)((char *)&v53 - v6);
  sub_256097994(0, &qword_269F42B48, MEMORY[0x263F18520], v4);
  MEMORY[0x270FA5388](v8 - 8);
  long long v10 = (uint64_t *)((char *)&v53 - v9);
  long long v11 = (int *)_s15EntryNoDataViewVMa();
  MEMORY[0x270FA5388](v11);
  long long v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256095044();
  uint64_t v59 = v14;
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v53 = (uint64_t)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v54 = (uint64_t)&v53 - v17;
  uint64_t v18 = type metadata accessor for StateOfMindTimeline.EntryFullView();
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (uint64_t *)((char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_256097DFC(0, &qword_269F46130, MEMORY[0x263F19B20]);
  uint64_t v57 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v56 = (uint64_t)&v53 - v22;
  sub_256094FDC(0, &qword_269F46138, MEMORY[0x263F19B20]);
  MEMORY[0x270FA5388](v23);
  long long v25 = (char *)&v53 - v24;
  sub_256094FDC(0, &qword_269F46038, MEMORY[0x263F19B28]);
  uint64_t v58 = v26;
  MEMORY[0x270FA5388](v26);
  long long v28 = (char *)&v53 - v27;
  if (*v55)
  {
    if (*v55 == 1)
    {
      swift_retain();
      StateOfMindTimeline.EntryFullView.init(model:)(v20);
      sub_256097D94((uint64_t)v20, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.EntryFullView);
      swift_storeEnumTagMultiPayload();
      sub_25606791C();
      sub_256094A44(&qword_269F43BC0, (void (*)(uint64_t))type metadata accessor for StateOfMindTimeline.EntryFullView);
      sub_256176898();
      sub_256097F0C((uint64_t)v28, v56);
      swift_storeEnumTagMultiPayload();
      sub_25609536C();
      sub_256095118(&qword_269F46088, (void (*)(uint64_t))sub_256095044, (void (*)(void))sub_256095430, (void (*)(void))sub_256066F24);
      sub_256176898();
      sub_256097F8C((uint64_t)v28);
      long long v29 = (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.EntryFullView;
      uint64_t v30 = (uint64_t)v20;
    }
    else
    {
      long long v37 = (_OWORD *)swift_allocObject();
      long long v38 = a2[5];
      v37[5] = a2[4];
      v37[6] = v38;
      v37[7] = a2[6];
      long long v39 = a2[1];
      v37[1] = *a2;
      v37[2] = v39;
      long long v40 = a2[3];
      v37[3] = a2[2];
      v37[4] = v40;
      *long long v10 = swift_getKeyPath();
      long long v41 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
      long long v42 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
      sub_256097994(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
      swift_storeEnumTagMultiPayload();
      *double v7 = swift_getKeyPath();
      long long v43 = (uint64_t (*)(uint64_t))MEMORY[0x263F188C0];
      sub_256097994(0, &qword_269F42CC0, MEMORY[0x263F188C0], v42);
      swift_storeEnumTagMultiPayload();
      uint64_t v44 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185D0];
      sub_256098250((uint64_t)v10, (uint64_t)v13, &qword_269F42B48, v41, MEMORY[0x263F185D0]);
      uint64_t v45 = (uint64_t *)&v13[v11[5]];
      *uint64_t v45 = swift_getKeyPath();
      sub_256097994(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, v42);
      swift_storeEnumTagMultiPayload();
      sub_256098250((uint64_t)v7, (uint64_t)&v13[v11[6]], &qword_269F42CC8, v43, v44);
      uint64_t v46 = &v13[v11[7]];
      *(void *)uint64_t v46 = sub_256097E8C;
      *((void *)v46 + 1) = v37;
      unint64_t v47 = &v13[v11[8]];
      *(void *)unint64_t v47 = nullsub_1;
      *((void *)v47 + 1) = 0;
      *(void *)&v13[v11[9]] = MEMORY[0x263F8EE78];
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v49 = v53;
      sub_256097D94((uint64_t)v13, v53, (uint64_t (*)(void))_s15EntryNoDataViewVMa);
      uint64_t v50 = v49 + *(int *)(v59 + 36);
      *(void *)uint64_t v50 = KeyPath;
      *(unsigned char *)(v50 + 8) = 1;
      sub_256095A18((uint64_t)a2);
      sub_256095B34((uint64_t)v13, (uint64_t (*)(void))_s15EntryNoDataViewVMa);
      uint64_t v51 = v49;
      uint64_t v52 = v54;
      sub_256097EA8(v51, v54);
      sub_256097D94(v52, v56, (uint64_t (*)(void))sub_256095044);
      swift_storeEnumTagMultiPayload();
      sub_25609536C();
      sub_256095118(&qword_269F46088, (void (*)(uint64_t))sub_256095044, (void (*)(void))sub_256095430, (void (*)(void))sub_256066F24);
      sub_256176898();
      long long v29 = (uint64_t (*)(void))sub_256095044;
      uint64_t v30 = v52;
    }
    return sub_256095B34(v30, v29);
  }
  else
  {
    long long v61 = *a2;
    swift_retain();
    uint64_t v31 = sub_2560A1CAC();
    sub_25605B688((uint64_t)&v61);
    uint64_t v32 = (_OWORD *)swift_allocObject();
    long long v33 = a2[5];
    v32[5] = a2[4];
    v32[6] = v33;
    v32[7] = a2[6];
    long long v34 = a2[1];
    v32[1] = *a2;
    v32[2] = v34;
    long long v35 = a2[3];
    v32[3] = a2[2];
    v32[4] = v35;
    *(void *)long long v25 = sub_25606E3C8;
    *((void *)v25 + 1) = v31;
    v25[16] = 0;
    *((void *)v25 + 3) = sub_256098008;
    *((void *)v25 + 4) = v32;
    v25[40] = 0;
    swift_storeEnumTagMultiPayload();
    sub_256095A18((uint64_t)a2);
    sub_255F68064();
    sub_25606791C();
    sub_256094A44(&qword_269F43BC0, (void (*)(uint64_t))type metadata accessor for StateOfMindTimeline.EntryFullView);
    swift_retain();
    sub_256176898();
    sub_256097F0C((uint64_t)v28, v56);
    swift_storeEnumTagMultiPayload();
    sub_25609536C();
    sub_256095118(&qword_269F46088, (void (*)(uint64_t))sub_256095044, (void (*)(void))sub_256095430, (void (*)(void))sub_256066F24);
    sub_256176898();
    sub_256097F8C((uint64_t)v28);
    sub_255F6806C();
    return swift_release();
  }
}

double sub_2560946C4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 72);
  swift_retain();
  uint64_t v5 = sub_2561778E8();
  sub_256117108(0.0, 1, 10000.0, 0, 0.0, 1, 0.0, 1, (uint64_t)v15, 10000.0, 0, 0.0, 1, v5, v6, v4, v3);
  swift_release();
  id v7 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
  uint64_t v8 = MEMORY[0x25A29FE80](v7);
  char v9 = sub_256176D88();
  long long v10 = v19;
  *(_OWORD *)(a2 + 64) = v18;
  *(_OWORD *)(a2 + 80) = v10;
  long long v11 = v21;
  *(_OWORD *)(a2 + 96) = v20;
  *(_OWORD *)(a2 + 112) = v11;
  long long v12 = v15[1];
  *(_OWORD *)a2 = v15[0];
  *(_OWORD *)(a2 + 16) = v12;
  double result = *(double *)&v16;
  long long v14 = v17;
  *(_OWORD *)(a2 + 32) = v16;
  *(_OWORD *)(a2 + 48) = v14;
  *(void *)(a2 + 128) = v8;
  *(unsigned char *)(a2 + 136) = v9;
  return result;
}

void sub_2560947B4()
{
  qword_269F45FB0 = 0;
}

double sub_2560947C0@<D0>(void *a1@<X8>)
{
  if (qword_269F42350 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_269F45FB0;
  *a1 = qword_269F45FB0;
  return result;
}

void *sub_25609481C(double *a1, void *(*a2)(double *__return_ptr))
{
  double result = a2(&v5);
  double v4 = v5;
  if (qword_269F42350 != -1) {
    double result = (void *)swift_once();
  }
  if (v4 != *(double *)&qword_269F45FB0 && *a1 == *(double *)&qword_269F45FB0) {
    *a1 = v4;
  }
  return result;
}

double sub_2560948B0@<D0>(double *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();
  swift_release();
  double result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_256094930()
{
  return sub_256175C98();
}

void sub_2560949B0()
{
  if (!qword_269F45FC0)
  {
    _s16TimelineDataViewVMa();
    sub_256094A44(&qword_269F45FC8, (void (*)(uint64_t))_s16TimelineDataViewVMa);
    unint64_t v0 = sub_256175D58();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45FC0);
    }
  }
}

uint64_t sub_256094A44(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_256094A8C(uint64_t a1)
{
}

void sub_256094AC0()
{
  if (!qword_269F45FD8)
  {
    sub_256094B54();
    sub_256094A44(&qword_269F46010, (void (*)(uint64_t))sub_256094B54);
    unint64_t v0 = sub_256176888();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45FD8);
    }
  }
}

void sub_256094B54()
{
  if (!qword_269F45FE0)
  {
    sub_256094BB8();
    sub_256094CA4();
    unint64_t v0 = sub_256176088();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45FE0);
    }
  }
}

void sub_256094BB8()
{
  if (!qword_269F45FE8)
  {
    sub_256097A88(255, &qword_269F45FF0, (uint64_t (*)(void))sub_256094C50, (uint64_t)&_s18WidthPreferenceKeyVN, MEMORY[0x263F1A308]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45FE8);
    }
  }
}

unint64_t sub_256094C50()
{
  unint64_t result = qword_269F45FF8;
  if (!qword_269F45FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45FF8);
  }
  return result;
}

unint64_t sub_256094CA4()
{
  unint64_t result = qword_269F46000;
  if (!qword_269F46000)
  {
    sub_256094BB8();
    sub_256094D1C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46000);
  }
  return result;
}

unint64_t sub_256094D1C()
{
  unint64_t result = qword_269F46008;
  if (!qword_269F46008)
  {
    sub_256097A88(255, &qword_269F45FF0, (uint64_t (*)(void))sub_256094C50, (uint64_t)&_s18WidthPreferenceKeyVN, MEMORY[0x263F1A308]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46008);
  }
  return result;
}

void sub_256094DAC(uint64_t a1)
{
}

void sub_256094DE0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    unint64_t v6 = sub_2561761B8();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_256094E54()
{
  if (!qword_269F46020)
  {
    sub_256094C50();
    sub_255F85944();
    unint64_t v0 = sub_256176B88();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46020);
    }
  }
}

void sub_256094EBC()
{
  if (!qword_269F46028)
  {
    sub_256094DAC(255);
    sub_256097DFC(255, &qword_269F46030, MEMORY[0x263F19B28]);
    sub_256095118(&qword_269F46048, sub_256094DAC, (void (*)(void))sub_2560950D0, (void (*)(void))sub_25609520C);
    sub_256095240();
    sub_256095294();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F46028);
    }
  }
}

void sub_256094FDC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for StateOfMindTimeline.EntryFullView();
    unint64_t v7 = a3(a1, &type metadata for StateOfMindEntryView, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_256095044()
{
  if (!qword_269F46040)
  {
    _s15EntryNoDataViewVMa();
    sub_2560982C0(255, &qword_269F45750, (uint64_t)&type metadata for StateOfMindTimelinePresentationContext, MEMORY[0x263F1A418]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46040);
    }
  }
}

uint64_t sub_2560950D0()
{
  return sub_256095118(&qword_269F46050, sub_256094A8C, (void (*)(void))sub_2560951A4, (void (*)(void))sub_2560951D8);
}

uint64_t sub_256095118(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2560951A4()
{
  return sub_256094A44(&qword_269F46058, (void (*)(uint64_t))sub_2560949B0);
}

uint64_t sub_2560951D8()
{
  return sub_256094A44(&qword_269F46060, (void (*)(uint64_t))sub_256094AC0);
}

uint64_t sub_25609520C()
{
  return sub_256094A44(&qword_269F46068, (void (*)(uint64_t))sub_256094E54);
}

unint64_t sub_256095240()
{
  unint64_t result = qword_269F46070;
  if (!qword_269F46070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46070);
  }
  return result;
}

unint64_t sub_256095294()
{
  unint64_t result = qword_269F46078;
  if (!qword_269F46078)
  {
    sub_256097DFC(255, &qword_269F46030, MEMORY[0x263F19B28]);
    sub_25609536C();
    sub_256095118(&qword_269F46088, (void (*)(uint64_t))sub_256095044, (void (*)(void))sub_256095430, (void (*)(void))sub_256066F24);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46078);
  }
  return result;
}

unint64_t sub_25609536C()
{
  unint64_t result = qword_269F46080;
  if (!qword_269F46080)
  {
    sub_256094FDC(255, &qword_269F46038, MEMORY[0x263F19B28]);
    sub_25606791C();
    sub_256094A44(&qword_269F43BC0, (void (*)(uint64_t))type metadata accessor for StateOfMindTimeline.EntryFullView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46080);
  }
  return result;
}

uint64_t sub_256095430()
{
  return sub_256094A44(&qword_269F46090, (void (*)(uint64_t))_s15EntryNoDataViewVMa);
}

void sub_256095464()
{
  if (!qword_269F46098)
  {
    sub_256094EBC();
    sub_256095618();
    sub_256094DAC(255);
    sub_256097DFC(255, &qword_269F46030, MEMORY[0x263F19B28]);
    sub_256095118(&qword_269F46048, sub_256094DAC, (void (*)(void))sub_2560950D0, (void (*)(void))sub_25609520C);
    sub_256095240();
    sub_256095294();
    swift_getOpaqueTypeConformance2();
    sub_256095118(&qword_269F460B0, (void (*)(uint64_t))sub_256095618, (void (*)(void))sub_256095728, (void (*)(void))sub_255FE1E9C);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F46098);
    }
  }
}

void sub_256095618()
{
  if (!qword_269F460A0)
  {
    sub_2560956D8(255, &qword_269F460A8, (uint64_t)&_s31StateOfMindTimelineChartWrapperVN, MEMORY[0x263F19110], MEMORY[0x263F18E28]);
    sub_2560956D8(255, &qword_269F44168, MEMORY[0x263F1B440], MEMORY[0x263F1B420], MEMORY[0x263F1A158]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F460A0);
    }
  }
}

void sub_2560956D8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_256095728()
{
  unint64_t result = qword_269F460B8;
  if (!qword_269F460B8)
  {
    sub_2560956D8(255, &qword_269F460A8, (uint64_t)&_s31StateOfMindTimelineChartWrapperVN, MEMORY[0x263F19110], MEMORY[0x263F18E28]);
    sub_2560957CC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F460B8);
  }
  return result;
}

unint64_t sub_2560957CC()
{
  unint64_t result = qword_269F460C0;
  if (!qword_269F460C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F460C0);
  }
  return result;
}

void sub_256095820()
{
  if (!qword_269F460C8)
  {
    sub_256095464();
    sub_256094EBC();
    sub_256095618();
    sub_256094DAC(255);
    sub_256097DFC(255, &qword_269F46030, MEMORY[0x263F19B28]);
    sub_256095118(&qword_269F46048, sub_256094DAC, (void (*)(void))sub_2560950D0, (void (*)(void))sub_25609520C);
    sub_256095240();
    sub_256095294();
    swift_getOpaqueTypeConformance2();
    sub_256095118(&qword_269F460B0, (void (*)(uint64_t))sub_256095618, (void (*)(void))sub_256095728, (void (*)(void))sub_255FE1E9C);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F460C8);
    }
  }
}

double sub_256095A04@<D0>(uint64_t *a1@<X8>)
{
  return sub_256093588(*(_OWORD **)(v1 + 16), a1);
}

uint64_t sub_256095A10@<X0>(uint64_t *a1@<X8>)
{
  return sub_256093C3C(v1 + 16, a1);
}

uint64_t sub_256095A18(uint64_t a1)
{
  return a1;
}

uint64_t sub_256095AA4()
{
  return sub_256093CB4();
}

void sub_256095AAC()
{
  if (!qword_269F460D0)
  {
    sub_2560982C0(255, &qword_269F45FB8, (uint64_t)&_s13PresentedViewON, MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_2561775A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F460D0);
    }
  }
}

uint64_t sub_256095B2C@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_256093D30(a1, (_OWORD *)(v2 + 16), a2);
}

uint64_t sub_256095B34(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

double sub_256095B98@<D0>(uint64_t a1@<X8>)
{
  return sub_2560946C4(v1 + 16, a1);
}

uint64_t sub_256095BA8()
{
  return sub_256176428();
}

uint64_t sub_256095BCC(uint64_t a1)
{
  uint64_t v2 = sub_256176178();
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_256176438();
}

void *sub_256095C94(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_2560982C0(0, (unint64_t *)&qword_26B2AD360, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
      long long v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      long long v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      long long v10 = (void *)MEMORY[0x263F8EE78];
      long long v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_256097318(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_256095DC4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t _s12TimelineViewVwxx()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t _s12TimelineViewVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  char v5 = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v6 = *(void *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = v6;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t _s12TimelineViewVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  char v4 = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = v4;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s12TimelineViewVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  char v5 = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = v5;
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  uint64_t v6 = *(void *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = v6;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for StateOfMindTimeline.TimelineView()
{
  return &type metadata for StateOfMindTimeline.TimelineView;
}

unint64_t sub_2560960C8()
{
  unint64_t result = qword_269F460D8;
  if (!qword_269F460D8)
  {
    sub_256094DE0(255, &qword_269F460E0, (void (*)(uint64_t))sub_256095820, MEMORY[0x263F1A470]);
    sub_256095464();
    sub_256094EBC();
    sub_256095618();
    sub_256094DAC(255);
    sub_256097DFC(255, &qword_269F46030, MEMORY[0x263F19B28]);
    sub_256095118(&qword_269F46048, sub_256094DAC, (void (*)(void))sub_2560950D0, (void (*)(void))sub_25609520C);
    sub_256095240();
    sub_256095294();
    swift_getOpaqueTypeConformance2();
    sub_256095118(&qword_269F460B0, (void (*)(uint64_t))sub_256095618, (void (*)(void))sub_256095728, (void (*)(void))sub_255FE1E9C);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_256094A44(&qword_269F42EA0, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F460D8);
  }
  return result;
}

ValueMetadata *_s18WidthPreferenceKeyVMa()
{
  return &_s18WidthPreferenceKeyVN;
}

unsigned char *_s13PresentedViewOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25609640CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s13PresentedViewOMa()
{
  return &_s13PresentedViewON;
}

unint64_t sub_256096448()
{
  unint64_t result = qword_269F460E8;
  if (!qword_269F460E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F460E8);
  }
  return result;
}

char *sub_25609649C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      sub_2560982C0(0, &qword_269F460F0, (uint64_t)&type metadata for StateOfMindEntryPhaseType, MEMORY[0x263F8E0F8]);
      long long v10 = (char *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      long long v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v12 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_25609740C(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2560965B8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_2560982C0(0, (unint64_t *)&qword_269F44378, MEMORY[0x263F8EF38], MEMORY[0x263F8E0F8]);
      long long v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      long long v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      long long v10 = (void *)MEMORY[0x263F8EE78];
      long long v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2560975E0(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_2560966E8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_2560982C0(0, qword_269F44F80, MEMORY[0x263F8E8F8], MEMORY[0x263F8E0F8]);
      long long v10 = (char *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 29;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 2);
      long long v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      long long v10 = (char *)MEMORY[0x263F8EE78];
      long long v13 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32]) {
          memmove(v13, a4 + 32, 4 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_2560974F4(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_256096818(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_256097994(0, &qword_269F46108, (uint64_t (*)(uint64_t))type metadata accessor for HKCVVertex, MEMORY[0x263F8E0F8]);
      long long v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      long long v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      long long v10 = (void *)MEMORY[0x263F8EE78];
      long long v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2560976CC(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_256096954(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_2560979F8();
      long long v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      long long v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      long long v10 = (void *)MEMORY[0x263F8EE78];
      long long v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2560977B8(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_256096A60(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_256097994(0, &qword_269F46100, (uint64_t (*)(uint64_t))type metadata accessor for HKCVLight, MEMORY[0x263F8E0F8]);
      long long v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      long long v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_2560978A4(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_256096BB4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      sub_2560982C0(0, &qword_269F460F8, MEMORY[0x263F8D4F8], MEMORY[0x263F8E0F8]);
      long long v10 = (char *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      long long v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v12 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_25609740C(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_256096CD0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_2560982C0(0, (unint64_t *)&unk_269F43B20, (uint64_t)&_s19EntryMomentDataViewV15ItemDescriptionVN, MEMORY[0x263F8E0F8]);
      long long v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      long long v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_256097B44(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_256096E18(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    long long v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_256097994(0, &qword_269F46128, MEMORY[0x263F06338], MEMORY[0x263F8E0F8]);
  uint64_t v10 = *(void *)(sub_256175458() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  long long v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_256178648();
    __break(1u);
    return result;
  }
  void v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_256175458() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_256097C3C(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

void *sub_2560970AC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_2560982C0(0, &qword_269F43AA0, MEMORY[0x263F8D6C8], MEMORY[0x263F8E0F8]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      long long v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      long long v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2560975E0(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2560971DC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_256097994(0, (unint64_t *)&qword_269F43B18, (uint64_t (*)(uint64_t))type metadata accessor for Label, MEMORY[0x263F8E0F8]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      long long v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      long long v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2560975E0(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_256097318(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2561786C8();
  __break(1u);
  return result;
}

char *sub_25609740C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_2561786C8();
  __break(1u);
  return result;
}

char *sub_2560974F4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 4 * a1 + 32);
    size_t v6 = 4 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_2561786C8();
  __break(1u);
  return result;
}

char *sub_2560975E0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_2561786C8();
  __break(1u);
  return result;
}

char *sub_2560976CC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 32 * a1 + 32);
    size_t v6 = 32 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_2561786C8();
  __break(1u);
  return result;
}

char *sub_2560977B8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_2561786C8();
  __break(1u);
  return result;
}

char *sub_2560978A4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 48 * a1 + 32);
    size_t v6 = 48 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_2561786C8();
  __break(1u);
  return result;
}

void sub_256097994(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2560979F8()
{
  if (!qword_269F46110)
  {
    sub_256097A88(255, &qword_269F46118, (uint64_t (*)(void))sub_256097AF0, MEMORY[0x263F8D5C8], MEMORY[0x263F8E698]);
    unint64_t v0 = sub_2561787F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46110);
    }
  }
}

void sub_256097A88(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_256097AF0()
{
  unint64_t result = qword_269F46120;
  if (!qword_269F46120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46120);
  }
  return result;
}

uint64_t sub_256097B44(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2561786C8();
  __break(1u);
  return result;
}

uint64_t sub_256097C3C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(sub_256175458() - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_2561786C8();
  __break(1u);
  return result;
}

uint64_t sub_256097D94(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_256097DFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_256094FDC(255, &qword_269F46038, MEMORY[0x263F19B28]);
    uint64_t v7 = v6;
    sub_256095044();
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_256097EA8(uint64_t a1, uint64_t a2)
{
  sub_256095044();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_256097F0C(uint64_t a1, uint64_t a2)
{
  sub_256094FDC(0, &qword_269F46038, MEMORY[0x263F19B28]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_256097F8C(uint64_t a1)
{
  sub_256094FDC(0, &qword_269F46038, MEMORY[0x263F19B28]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_256098008(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(v1 + 112))();
  }
  return result;
}

uint64_t sub_256098040(uint64_t a1)
{
  return a1;
}

uint64_t sub_2560980CC()
{
  return sub_256177588();
}

uint64_t sub_256098118()
{
  return sub_256177588();
}

uint64_t sub_256098168()
{
  return sub_256177588();
}

uint64_t objectdestroyTm_19()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_256098220()
{
  return sub_256093BBC(v0 + 16);
}

uint64_t sub_256098228()
{
  return sub_256176428();
}

uint64_t sub_256098250(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  sub_256097994(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

void sub_2560982C0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

char *sub_25609830C(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[2];
    *((void *)a1 + 1) = a2[1];
    *((void *)a1 + 2) = v8;
    *((void *)a1 + 3) = a2[3];
    uint64_t v9 = a3[7];
    uint64_t v24 = &a1[v9];
    uint64_t v10 = (uint64_t)a2 + v9;
    uint64_t v11 = sub_256177DB8();
    unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    long long v13 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v24, v10, v11);
    uint64_t v14 = a3[9];
    v7[a3[8]] = *((unsigned char *)a2 + a3[8]);
    *(void *)&v7[v14] = *(char **)((char *)a2 + v14);
    uint64_t v15 = a3[10];
    uint64_t v16 = a3[11];
    unint64_t v17 = &v7[v15];
    unint64_t v18 = (char **)((char *)a2 + v15);
    uint64_t v19 = v18[1];
    *(void *)unint64_t v17 = *v18;
    *((void *)v17 + 1) = v19;
    long long v20 = &v7[v16];
    long long v21 = (char **)((char *)a2 + v16);
    uint64_t v22 = v21[1];
    *(void *)long long v20 = *v21;
    *((void *)v20 + 1) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_25609846C(id *a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_256177DB8();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_25609851C(void *a1, uint64_t a2, int *a3)
{
  uint64_t v7 = *(void **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v8 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v8;
  uint64_t v9 = a3[7];
  uint64_t v24 = (char *)a1 + v9;
  uint64_t v10 = a2 + v9;
  uint64_t v11 = sub_256177DB8();
  unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  id v13 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v24, v10, v11);
  uint64_t v14 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)((char *)a1 + v14) = *(void *)(a2 + v14);
  uint64_t v15 = a3[10];
  uint64_t v16 = a3[11];
  unint64_t v17 = (void *)((char *)a1 + v15);
  unint64_t v18 = (void *)(a2 + v15);
  uint64_t v19 = v18[1];
  *unint64_t v17 = *v18;
  v17[1] = v19;
  long long v20 = (void *)((char *)a1 + v16);
  long long v21 = (void *)(a2 + v16);
  uint64_t v22 = v21[1];
  *long long v20 = *v21;
  v20[1] = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_256098628(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[7];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_256177DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v13 = a3[10];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[11];
  unint64_t v17 = (void *)(a1 + v16);
  unint64_t v18 = (void *)(a2 + v16);
  *unint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_256098768(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_256177DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  return a1;
}

uint64_t sub_256098824(uint64_t a1, void *a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_256177DB8();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(void *)(a1 + v12) = *(void *)((char *)a2 + v12);
  uint64_t v13 = a3[10];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[11];
  uint64_t v19 = (void *)(a1 + v18);
  long long v20 = (void *)((char *)a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_256098924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256098938);
}

uint64_t sub_256098938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_256177DB8();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_2560989E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2560989FC);
}

uint64_t sub_2560989FC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_256177DB8();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for StateOfMindCalendarDay()
{
  uint64_t result = qword_269F46140;
  if (!qword_269F46140) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_256098AF0()
{
  uint64_t result = sub_256177DB8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_256098BBC()
{
  uint64_t v1 = MEMORY[0x263F8EE78];
  long long v35 = (void *)MEMORY[0x263F8EE78];
  long long v36 = (void *)MEMORY[0x263F8EE78];
  if (*v0)
  {
    id v2 = *v0;
    int v3 = sub_256095C94(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v5 = v3[2];
    unint64_t v4 = v3[3];
    if (v5 >= v4 >> 1) {
      int v3 = sub_256095C94((void *)(v4 > 1), v5 + 1, 1, v3);
    }
    v3[2] = v5 + 1;
    uint64_t v6 = &v3[2 * v5];
    v6[4] = 0x796C696164;
    v6[5] = 0xE500000000000000;
    long long v36 = v3;
    objc_msgSend(v2, sel_valence);
    sub_2561780F8();
    uint64_t v7 = sub_256095C94(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v9 = v7[2];
    unint64_t v8 = v7[3];
    if (v9 >= v8 >> 1) {
      uint64_t v7 = sub_256095C94((void *)(v8 > 1), v9 + 1, 1, v7);
    }
    v7[2] = v9 + 1;
    uint64_t v10 = &v7[2 * v9];
    v10[4] = 0;
    v10[5] = 0xE000000000000000;

    long long v35 = v7;
  }
  unint64_t v11 = *(void *)(v32 + 8);
  unint64_t v12 = v11 >> 62;
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_256178678();
    if (v13) {
      goto LABEL_9;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    uint64_t v16 = MEMORY[0x263F8EE78];
    goto LABEL_20;
  }
  uint64_t v13 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v13) {
    goto LABEL_19;
  }
LABEL_9:
  uint64_t result = sub_2560E86DC(0, v13 & ~(v13 >> 63), 0);
  if (v13 < 0)
  {
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v15 = 0;
  uint64_t v16 = v1;
  do
  {
    if ((v11 & 0xC000000000000001) != 0) {
      id v17 = (id)MEMORY[0x25A2A1000](v15, v11);
    }
    else {
      id v17 = *(id *)(v11 + 8 * v15 + 32);
    }

    unint64_t v19 = *(void *)(v1 + 16);
    unint64_t v18 = *(void *)(v1 + 24);
    if (v19 >= v18 >> 1) {
      sub_2560E86DC(v18 > 1, v19 + 1, 1);
    }
    ++v15;
    *(void *)(v1 + 16) = v19 + 1;
    unint64_t v20 = v1 + 16 * v19;
    *(void *)(v20 + 32) = 0x7261746E656D6F6DLL;
    *(void *)(v20 + 40) = 0xE900000000000079;
  }
  while (v13 != v15);
  swift_bridgeObjectRelease();
  uint64_t v1 = MEMORY[0x263F8EE78];
  unint64_t v12 = v11 >> 62;
LABEL_20:
  sub_255FCD3A4(v16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_256178678();
    if (v21)
    {
LABEL_22:
      uint64_t result = sub_2560E86DC(0, v21 & ~(v21 >> 63), 0);
      if ((v21 & 0x8000000000000000) == 0)
      {
        uint64_t v22 = 0;
        uint64_t v23 = v1;
        do
        {
          if ((v11 & 0xC000000000000001) != 0) {
            id v24 = (id)MEMORY[0x25A2A1000](v22, v11);
          }
          else {
            id v24 = *(id *)(v11 + 8 * v22 + 32);
          }
          long long v25 = v24;
          objc_msgSend(v24, sel_valence);
          sub_2561780F8();

          unint64_t v27 = *(void *)(v1 + 16);
          unint64_t v26 = *(void *)(v1 + 24);
          if (v27 >= v26 >> 1) {
            sub_2560E86DC(v26 > 1, v27 + 1, 1);
          }
          ++v22;
          *(void *)(v1 + 16) = v27 + 1;
          unint64_t v28 = v1 + 16 * v27;
          *(void *)(v28 + 32) = 0;
          *(void *)(v28 + 40) = 0xE000000000000000;
        }
        while (v21 != v22);
        swift_bridgeObjectRelease();
        goto LABEL_33;
      }
LABEL_39:
      __break(1u);
      return result;
    }
  }
  else
  {
    uint64_t v21 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v21) {
      goto LABEL_22;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v23 = MEMORY[0x263F8EE78];
LABEL_33:
  sub_255FCD3A4(v23);
  if (v36[2] && v35[2])
  {
    sub_255FCD9E0();
    sub_255F744D8();
    sub_256177E28();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_256177E28();
    swift_bridgeObjectRelease();
    sub_256178558();
    swift_bridgeObjectRelease();
    sub_256177F68();
    swift_bridgeObjectRelease();
    sub_256177F68();
    sub_256177F68();
    swift_bridgeObjectRelease();
    sub_256177F68();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v29 = type metadata accessor for StateOfMindCalendarDay();
  uint64_t v30 = (uint64_t *)(v32 + *(int *)(v29 + 40));
  uint64_t v33 = *v30;
  uint64_t v34 = v30[1];
  swift_bridgeObjectRetain();
  sub_256177F68();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v31 = (void *)(v32 + *(int *)(v29 + 44));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v31 = v33;
  v31[1] = v34;
  return result;
}

uint64_t sub_256099120@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = type metadata accessor for StateOfMindCalendarDay();
  uint64_t v13 = (int *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (void *)((char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = MEMORY[0x263F8EE78];
  *uint64_t v15 = 0;
  v15[1] = v16;
  _OWORD v15[2] = a2;
  v15[3] = a3;
  id v17 = (char *)v15 + v13[9];
  uint64_t v18 = sub_256177DB8();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v17, a1, v18);
  *((unsigned char *)v15 + v13[10]) = a4;
  *(void *)((char *)v15 + v13[11]) = a5;
  uint64_t v26 = 0x7865646E49796144;
  unint64_t v27 = 0xE90000000000003ALL;
  v25[1] = sub_256177D78();
  sub_2561787E8();
  sub_256177F68();
  swift_bridgeObjectRelease();
  uint64_t v21 = v26;
  unint64_t v20 = v27;
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a1, v18);
  uint64_t v22 = (void *)((char *)v15 + v13[12]);
  uint64_t *v22 = v21;
  v22[1] = v20;
  uint64_t v23 = (void *)((char *)v15 + v13[13]);
  *uint64_t v23 = v21;
  v23[1] = v20;
  sub_2560992E0((uint64_t)v15, a6);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2560992E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StateOfMindCalendarDay();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t UIColor.init(valence:variant:colorScheme:)(char *a1, uint64_t a2, double a3)
{
  uint64_t v6 = sub_256175D98();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v13 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  Color.init(valence:variant:colorScheme:)(&v13, (uint64_t)v9, a3);
  uint64_t v10 = sub_256178428();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
  return v10;
}

uint64_t UIColor.init(valenceClassification:variant:colorScheme:)(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_256175D98();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v13 = *a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a3, v6);
  Color.init(valenceClassification:variant:colorScheme:)(a1, &v13, (uint64_t)v9);
  uint64_t v10 = sub_256178428();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a3, v6);
  return v10;
}

uint64_t sub_25609957C()
{
  return sub_2561763E8();
}

uint64_t type metadata accessor for NotificationsSetupPhaseSpecs()
{
  uint64_t result = qword_269F46150;
  if (!qword_269F46150) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_256099600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256099614);
}

uint64_t sub_256099614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_255FD8280();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_256176158();
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_25609970C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256099720);
}

uint64_t sub_256099720(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_255FD8280();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_256176158();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_256099824@<X0>(uint64_t a1@<X8>)
{
  return sub_255FD82D8(v1, a1);
}

uint64_t destroy for DomainsPicker()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for DomainsPicker(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DomainsPicker(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for DomainsPicker(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DomainsPicker(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DomainsPicker(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DomainsPicker()
{
  return &type metadata for DomainsPicker;
}

uint64_t sub_256099A54()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_256099A70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v43 = a4;
  uint64_t v41 = a1;
  uint64_t v44 = a5;
  sub_25609A36C(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v45 = (uint64_t)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v39 - v9;
  uint64_t v11 = type metadata accessor for ExpandableInfoSectionHeader();
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (void *)((char *)v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v12);
  uint64_t v46 = (uint64_t)v39 - v15;
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v16 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_2561755B8();
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();

  id v20 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_2561755B8();
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();

  *uint64_t v14 = v17;
  v14[1] = v19;
  uint64_t v14[2] = v21;
  v14[3] = v23;
  id v24 = (uint64_t *)((char *)v14 + *(int *)(v11 + 24));
  uint64_t *v24 = swift_getKeyPath();
  sub_25609A8EC(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  long long v25 = (char *)v14 + *(int *)(v11 + 28);
  char v47 = 0;
  sub_256177568();
  uint64_t v26 = v49;
  *long long v25 = v48;
  *((void *)v25 + 1) = v26;
  sub_25609A6F8((uint64_t)v14, v46);
  *(void *)uint64_t v10 = sub_256176798();
  *((void *)v10 + 1) = 0x4038000000000000;
  unsigned char v10[16] = 0;
  sub_25609A75C(0, &qword_269F461C0, (void (*)(uint64_t))sub_25609A3B4);
  v39[1] = &v10[*(int *)(v27 + 44)];
  long long v40 = v10;
  uint64_t v28 = v41;
  uint64_t v29 = swift_bridgeObjectRetain();
  uint64_t v30 = sub_2560EC5C4(v29);
  swift_bridgeObjectRelease();
  uint64_t v48 = v30;
  v39[0] = swift_getKeyPath();
  uint64_t v31 = (void *)swift_allocObject();
  uint64_t v32 = v42;
  v31[2] = v28;
  v31[3] = v32;
  v31[4] = a3;
  v31[5] = v43;
  sub_25609A8EC(0, &qword_269F46188, (uint64_t (*)(uint64_t))sub_25609A4C0, MEMORY[0x263F8D488]);
  sub_25609AA48(0, &qword_269F46198, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindDomain, sub_25609A52C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for TagPicker);
  sub_25609A560();
  sub_25609A658();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_2561777C8();
  uint64_t v33 = v46;
  sub_25609A81C(v46, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ExpandableInfoSectionHeader);
  uint64_t v34 = (uint64_t)v40;
  uint64_t v35 = v45;
  sub_25609A81C((uint64_t)v40, v45, (uint64_t (*)(void))sub_25609A36C);
  uint64_t v36 = v44;
  sub_25609A81C((uint64_t)v14, v44, (uint64_t (*)(void))type metadata accessor for ExpandableInfoSectionHeader);
  sub_25609A2FC();
  sub_25609A81C(v35, v36 + *(int *)(v37 + 48), (uint64_t (*)(void))sub_25609A36C);
  sub_25609A884(v34, (uint64_t (*)(void))sub_25609A36C);
  sub_25609A884(v33, (uint64_t (*)(void))type metadata accessor for ExpandableInfoSectionHeader);
  sub_25609A884(v35, (uint64_t (*)(void))sub_25609A36C);
  return sub_25609A884((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ExpandableInfoSectionHeader);
}

double sub_256099FCC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 8);
  sub_25609A8EC(0, &qword_269F44340, (uint64_t (*)(uint64_t))sub_255FEAE7C, MEMORY[0x263F1B750]);
  swift_bridgeObjectRetain();
  sub_256177748();
  uint64_t KeyPath = swift_getKeyPath();
  sub_25609AA48(0, &qword_269F46198, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindDomain, sub_25609A52C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for TagPicker);
  *(void *)(a2 + *(int *)(v5 + 60)) = KeyPath;
  sub_25609A8EC(0, &qword_269F440E8, MEMORY[0x263F18D80], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = v7;
  *(_OWORD *)(a2 + 16) = v8;
  *(unsigned char *)(a2 + 32) = 1;
  double result = 6.0;
  *(_OWORD *)(a2 + 40) = xmmword_2561A5EE0;
  *(void *)(a2 + 56) = sub_25609A168;
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = sub_25609A1B8;
  *(void *)(a2 + 80) = 0;
  return result;
}

uint64_t sub_25609A168()
{
  id v0 = (id)HKUILocalizedStringForStateOfMindDomain();
  uint64_t v1 = sub_256177EE8();

  return v1;
}

uint64_t sub_25609A1B8()
{
  sub_25609A950();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_2561A0040;
  *(void *)(v0 + 32) = 0x6E69616D6F44;
  *(void *)(v0 + 40) = 0xE600000000000000;
  id v1 = (id)NSStringFromHKStateOfMindDomain();
  uint64_t v2 = sub_256177EE8();
  uint64_t v4 = v3;

  *(void *)(v0 + 48) = v2;
  *(void *)(v0 + 56) = v4;
  return v0;
}

uint64_t sub_25609A244@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  uint64_t v5 = v1[3];
  *(void *)a1 = sub_256176798();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  sub_25609A75C(0, &qword_269F46160, sub_25609A2C8);
  return sub_256099A70(v3, v4, v6, v5, a1 + *(int *)(v7 + 44));
}

void sub_25609A2C8(uint64_t a1)
{
}

void sub_25609A2FC()
{
  if (!qword_269F46170)
  {
    type metadata accessor for ExpandableInfoSectionHeader();
    sub_25609A36C(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F46170);
    }
  }
}

void sub_25609A36C(uint64_t a1)
{
}

void sub_25609A3B4()
{
  if (!qword_269F46180)
  {
    sub_25609A8EC(255, &qword_269F46188, (uint64_t (*)(uint64_t))sub_25609A4C0, MEMORY[0x263F8D488]);
    sub_25609AA48(255, &qword_269F46198, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindDomain, sub_25609A52C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for TagPicker);
    sub_25609A560();
    unint64_t v0 = sub_2561777E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46180);
    }
  }
}

void sub_25609A4C0()
{
  if (!qword_269F46190)
  {
    sub_255FEAE7C(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F46190);
    }
  }
}

uint64_t sub_25609A52C()
{
  return sub_25609AAFC(&qword_269F461A0, type metadata accessor for __HKStateOfMindDomain);
}

unint64_t sub_25609A560()
{
  unint64_t result = qword_269F461A8;
  if (!qword_269F461A8)
  {
    sub_25609A8EC(255, &qword_269F46188, (uint64_t (*)(uint64_t))sub_25609A4C0, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F461A8);
  }
  return result;
}

unint64_t sub_25609A5E8()
{
  unint64_t result = qword_269F461B0;
  if (!qword_269F461B0)
  {
    sub_25609A3B4();
    sub_25609A658();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F461B0);
  }
  return result;
}

unint64_t sub_25609A658()
{
  unint64_t result = qword_269F461B8;
  if (!qword_269F461B8)
  {
    sub_25609AA48(255, &qword_269F46198, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindDomain, sub_25609A52C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for TagPicker);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F461B8);
  }
  return result;
}

uint64_t sub_25609A6F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ExpandableInfoSectionHeader();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_25609A75C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_256176048();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_25609A7C0()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

double sub_25609A810@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_256099FCC(a1, a2);
}

uint64_t sub_25609A81C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25609A884(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_25609A8EC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_25609A950()
{
  if (!qword_26B2AD360)
  {
    unint64_t v0 = sub_2561787F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B2AD360);
    }
  }
}

unint64_t sub_25609A9AC()
{
  unint64_t result = qword_269F461C8;
  if (!qword_269F461C8)
  {
    sub_25609AA48(255, &qword_269F461D0, (uint64_t (*)(uint64_t))sub_25609A2C8, sub_25609AAC8, MEMORY[0x263F1B6D0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F461C8);
  }
  return result;
}

void sub_25609AA48(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_25609AAC8()
{
  return sub_25609AAFC(&qword_269F461D8, sub_25609A2C8);
}

uint64_t sub_25609AAFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25609AB44(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v58 = *MEMORY[0x263EF8340];
  uint64_t v49 = *v2;
  uint64_t v4 = sub_256175B68();
  uint64_t v51 = *(void *)(v4 - 8);
  uint64_t v52 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v50 = (char *)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25609B258(0, (unint64_t *)&qword_269F44D30, MEMORY[0x263F07490]);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)v48 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v48 - v13;
  uint64_t v15 = sub_256175868();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)v48 - v20;
  double v22 = (double)(uint64_t)*MEMORY[0x263F09220];
  v48[1] = a1;
  sub_2561757E8();
  uint64_t v23 = (void *)v2[2];
  uint64_t v24 = *MEMORY[0x263F75C18];
  uint64_t v53 = v21;
  long long v25 = (void *)sub_2561757F8();
  uint64_t v55 = 0;
  id v26 = objc_msgSend(v23, sel_nextEventWithIdentifier_dueAfterDate_error_, v24, v25, &v55);

  uint64_t v27 = v55;
  id v57 = v55;
  if (v26)
  {
    sub_256175818();
    id v28 = v27;

    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v12, 1, 1, v15);
    id v29 = v27;
  }
  uint64_t v30 = v14;
  sub_25609B1D8((uint64_t)v12, (uint64_t)v14);
  if (v27)
  {
    uint64_t v31 = v15;
    uint64_t v32 = v50;
    sub_256175B48();
    uint64_t v33 = sub_256175B58();
    os_log_type_t v34 = sub_256178218();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v56 = v36;
      *(_DWORD *)uint64_t v35 = 136446466;
      uint64_t v37 = sub_256178978();
      uint64_t v49 = (uint64_t)v30;
      uint64_t v55 = (void *)sub_255FB29A8(v37, v38, &v56);
      sub_256178458();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2082;
      swift_beginAccess();
      id v39 = v57;
      uint64_t v54 = (uint64_t)v57;
      sub_25609B258(0, &qword_269F461E0, (void (*)(uint64_t))sub_25609B2AC);
      id v40 = v39;
      uint64_t v41 = sub_256177F18();
      uint64_t v54 = sub_255FB29A8(v41, v42, &v56);
      sub_256178458();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_255F58000, v33, v34, "[%{public}s] Error seeking next bedtime event: %{public}s", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25A2A1E90](v36, -1, -1);
      MEMORY[0x25A2A1E90](v35, -1, -1);

      (*(void (**)(char *, uint64_t))(v51 + 8))(v32, v52);
      uint64_t v43 = v49;
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v51 + 8))(v32, v52);
      uint64_t v43 = (uint64_t)v30;
    }
    sub_2560240C0(v43);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v53, v31);
    goto LABEL_11;
  }
  sub_25602402C((uint64_t)v14, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v9, 1, v15) == 1)
  {
    sub_2560240C0((uint64_t)v14);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v53, v15);
    sub_2560240C0((uint64_t)v9);
LABEL_11:

    return 1;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v9, v15);
  sub_2561757D8();
  double v46 = fabs(v45);
  char v47 = *(void (**)(char *, uint64_t))(v16 + 8);
  v47(v19, v15);
  sub_2560240C0((uint64_t)v14);
  v47(v53, v15);

  if (v46 > v22 * 4.0) {
    return 1;
  }
  else {
    return 2;
  }
}

uint64_t sub_25609B17C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PreferredReflectiveIntervalProvider()
{
  return self;
}

uint64_t sub_25609B1D8(uint64_t a1, uint64_t a2)
{
  sub_25609B258(0, (unint64_t *)&qword_269F44D30, MEMORY[0x263F07490]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_25609B258(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_256178448();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_25609B2AC()
{
  unint64_t result = qword_269F461E8;
  if (!qword_269F461E8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269F461E8);
  }
  return result;
}

void *sub_25609B2EC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    sub_2560A1364(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, v3, v7);
    }
    else
    {
      *a1 = *v3;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(v6 + 20);
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)v3 + v9);
    sub_2560A1364(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_256176AA8();
      uint64_t v13 = *(void *)(v12 - 8);
      uint64_t v86 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      uint64_t v85 = v13;
      uint64_t v83 = v3;
      if (v86((char *)v11, 1, v12))
      {
        sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      uint64_t v15 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v16 = v15[5];
      uint64_t v17 = (char *)v10 + v16;
      uint64_t v18 = (char *)v11 + v16;
      uint64_t v19 = sub_256176158();
      uint64_t v87 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
      v87(v17, v18, v19);
      *((unsigned char *)v10 + v15[6]) = *((unsigned char *)v11 + v15[6]);
      uint64_t v20 = v15[7];
      uint64_t v21 = (char *)v10 + v20;
      double v22 = (char *)v11 + v20;
      uint64_t v23 = sub_256175D98();
      uint64_t v81 = *(void (**)(char *, char *))(*(void *)(v23 - 8) + 16);
      uint64_t v82 = v23;
      v81(v21, v22);
      uint64_t v24 = v15[8];
      long long v25 = (char *)v10 + v24;
      id v26 = (char *)v11 + v24;
      uint64_t v27 = v86;
      if (v86((char *)v11 + v24, 1, v12))
      {
        sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v25, v26, v12);
        uint64_t v27 = v86;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v25, 0, 1, v12);
      }
      uint64_t v29 = _s6StylesV8TimelineVMa(0);
      v87(&v25[*(int *)(v29 + 20)], &v26[*(int *)(v29 + 20)], v19);
      uint64_t v30 = v15[9];
      uint64_t v31 = (char *)v10 + v30;
      uint64_t v32 = (char *)v11 + v30;
      uint64_t v84 = v6;
      if (v27((char *)v11 + v30, 1, v12))
      {
        sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v31, v32, v12);
        uint64_t v27 = v86;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v31, 0, 1, v12);
      }
      uint64_t v34 = _s6StylesV6NoDataVMa(0);
      v87(&v31[*(int *)(v34 + 20)], &v32[*(int *)(v34 + 20)], v19);
      v31[*(int *)(v34 + 24)] = v32[*(int *)(v34 + 24)];
      uint64_t v35 = v15[10];
      uint64_t v36 = (char *)v10 + v35;
      uint64_t v37 = (char *)v11 + v35;
      if (v27((char *)v11 + v35, 1, v12))
      {
        sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v36, v37, v12);
        uint64_t v27 = v86;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v36, 0, 1, v12);
      }
      uint64_t v39 = _s6StylesV11PlaceholderVMa(0);
      v87(&v36[*(int *)(v39 + 20)], &v37[*(int *)(v39 + 20)], v19);
      uint64_t v40 = v15[11];
      uint64_t v41 = (char *)v10 + v40;
      unint64_t v42 = (char *)v11 + v40;
      if (v27((char *)v11 + v40, 1, v12))
      {
        sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v41, v42, v12);
        uint64_t v27 = v86;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v41, 0, 1, v12);
      }
      uint64_t v44 = _s6StylesV6SymbolVMa(0);
      v87(&v41[*(int *)(v44 + 20)], &v42[*(int *)(v44 + 20)], v19);
      uint64_t v45 = v15[12];
      double v46 = (char *)v10 + v45;
      char v47 = (char *)v11 + v45;
      if (v27((char *)v11 + v45, 1, v12))
      {
        sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v46, v47, v12);
        uint64_t v27 = v86;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v46, 0, 1, v12);
      }
      uint64_t v49 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v87(&v46[v49[5]], &v47[v49[5]], v19);
      v46[v49[6]] = v47[v49[6]];
      ((void (*)(char *, char *, uint64_t))v81)(&v46[v49[7]], &v47[v49[7]], v82);
      uint64_t v50 = v15[13];
      uint64_t v51 = (char *)v10 + v50;
      uint64_t v52 = (char *)v11 + v50;
      if (v27((char *)v11 + v50, 1, v12))
      {
        sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v51, v52, v12);
        uint64_t v27 = v86;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v51, 0, 1, v12);
      }
      uint64_t v54 = _s6StylesV5EmptyVMa(0);
      v87(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v19);
      v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
      uint64_t v55 = v15[14];
      uint64_t v56 = (char *)v10 + v55;
      id v57 = (char *)v11 + v55;
      if (v27((char *)v11 + v55, 1, v12))
      {
        sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v56, v57, v12);
        uint64_t v27 = v86;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v56, 0, 1, v12);
      }
      uint64_t v59 = _s6StylesV5DailyVMa(0);
      v87(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v19);
      v56[*(int *)(v59 + 24)] = v57[*(int *)(v59 + 24)];
      uint64_t v60 = v15[15];
      long long v61 = (char *)v10 + v60;
      uint64_t v62 = (char *)v11 + v60;
      if (v27((char *)v11 + v60, 1, v12))
      {
        sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v61, v62, v12);
        uint64_t v27 = v86;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v61, 0, 1, v12);
      }
      uint64_t v6 = v84;
      uint64_t v64 = _s6StylesV9MomentaryVMa(0);
      v87(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v19);
      uint64_t v65 = v15[16];
      unint64_t v66 = (char *)v10 + v65;
      uint64_t v67 = (char *)v11 + v65;
      if (v27((char *)v11 + v65, 1, v12))
      {
        sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v66, v67, v12);
        uint64_t v27 = v86;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v66, 0, 1, v12);
      }
      uint64_t v69 = _s6StylesV6HeaderVMa(0);
      v87(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v19);
      uint64_t v70 = v15[17];
      uint64_t v71 = (char *)v10 + v70;
      uint64_t v72 = (char *)v11 + v70;
      if (v27((char *)v11 + v70, 1, v12))
      {
        sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v71, v72, v12);
        uint64_t v27 = v86;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v71, 0, 1, v12);
      }
      uint64_t v74 = _s6StylesV11ChartButtonVMa(0);
      v87(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v19);
      uint64_t v75 = v15[18];
      uint64_t v76 = (char *)v10 + v75;
      uint64_t v77 = (char *)v11 + v75;
      if (v27(v77, 1, v12))
      {
        sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v76, v77, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v76, 0, 1, v12);
      }
      uint64_t v79 = _s6StylesV15LogButtonFooterVMa(0);
      v87(&v76[*(int *)(v79 + 20)], &v77[*(int *)(v79 + 20)], v19);
      uint64_t v3 = v83;
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *(void *)((char *)a1 + *(int *)(v6 + 24)) = *(void *)((char *)v3 + *(int *)(v6 + 24));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_25609C1EC(uint64_t a1, uint64_t a2)
{
  sub_2560A1364(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_2560A1364(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256176AA8();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    if (!v8(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
    uint64_t v9 = type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v10 = v5 + *(int *)(v9 + 20);
    uint64_t v11 = sub_256176158();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
    uint64_t v13 = v10;
    uint64_t v14 = (int *)v9;
    v12(v13, v11);
    uint64_t v15 = v5 + *(int *)(v9 + 28);
    uint64_t v16 = sub_256175D98();
    uint64_t v43 = *(void (**)(uint64_t))(*(void *)(v16 - 8) + 8);
    uint64_t v44 = v16;
    v43(v15);
    uint64_t v17 = v5 + v14[8];
    if (!v8(v17, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v17, v6);
    }
    uint64_t v18 = _s6StylesV8TimelineVMa(0);
    v12(v17 + *(int *)(v18 + 20), v11);
    uint64_t v19 = v5 + v14[9];
    if (!v8(v19, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v19, v6);
    }
    uint64_t v20 = _s6StylesV6NoDataVMa(0);
    v12(v19 + *(int *)(v20 + 20), v11);
    uint64_t v21 = v5 + v14[10];
    if (!v8(v21, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v21, v6);
    }
    uint64_t v22 = _s6StylesV11PlaceholderVMa(0);
    v12(v21 + *(int *)(v22 + 20), v11);
    uint64_t v23 = v5 + v14[11];
    if (!v8(v23, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v23, v6);
    }
    uint64_t v24 = _s6StylesV6SymbolVMa(0);
    v12(v23 + *(int *)(v24 + 20), v11);
    uint64_t v25 = v5 + v14[12];
    uint64_t v45 = v14;
    if (!v8(v25, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v25, v6);
    }
    uint64_t v26 = v7;
    uint64_t v27 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v12(v25 + *(int *)(v27 + 20), v11);
    uint64_t v28 = *(int *)(v27 + 28);
    uint64_t v29 = v26;
    ((void (*)(uint64_t, uint64_t))v43)(v25 + v28, v44);
    uint64_t v30 = v5 + v45[13];
    if (!v8(v30, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v30, v6);
    }
    uint64_t v31 = _s6StylesV5EmptyVMa(0);
    v12(v30 + *(int *)(v31 + 20), v11);
    uint64_t v32 = v5 + v45[14];
    if (!v8(v32, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32, v6);
    }
    uint64_t v33 = _s6StylesV5DailyVMa(0);
    v12(v32 + *(int *)(v33 + 20), v11);
    uint64_t v34 = v5 + v45[15];
    if (!v8(v34, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v34, v6);
    }
    uint64_t v35 = _s6StylesV9MomentaryVMa(0);
    v12(v34 + *(int *)(v35 + 20), v11);
    uint64_t v36 = v5 + v45[16];
    if (!v8(v36, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v36, v6);
    }
    uint64_t v37 = _s6StylesV6HeaderVMa(0);
    v12(v36 + *(int *)(v37 + 20), v11);
    uint64_t v38 = v5 + v45[17];
    if (!v8(v38, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v38, v6);
    }
    uint64_t v39 = _s6StylesV11ChartButtonVMa(0);
    v12(v38 + *(int *)(v39 + 20), v11);
    uint64_t v40 = v5 + v45[18];
    if (!v8(v40, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v40, v6);
    }
    uint64_t v41 = _s6StylesV15LogButtonFooterVMa(0);
    v12(v40 + *(int *)(v41 + 20), v11);
  }
  else
  {
    swift_release();
  }

  return swift_bridgeObjectRelease();
}

void *sub_25609C8D8(void *a1, void *a2, uint64_t a3)
{
  sub_2560A1364(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256175D98();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_2560A1364(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_256176AA8();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v86 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    uint64_t v84 = a1;
    uint64_t v85 = v11;
    uint64_t v82 = a3;
    if (v86((char *)v9, 1, v10))
    {
      sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v13 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v14 = v13[5];
    uint64_t v15 = (char *)v8 + v14;
    uint64_t v16 = (char *)v9 + v14;
    uint64_t v17 = sub_256176158();
    uint64_t v18 = (void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
    uint64_t v87 = *v18;
    (*v18)(v15, v16, v17);
    *((unsigned char *)v8 + v13[6]) = *((unsigned char *)v9 + v13[6]);
    uint64_t v19 = v13[7];
    uint64_t v20 = (char *)v8 + v19;
    uint64_t v21 = (char *)v9 + v19;
    uint64_t v22 = sub_256175D98();
    uint64_t v80 = *(void (**)(char *, char *))(*(void *)(v22 - 8) + 16);
    uint64_t v81 = v22;
    v80(v20, v21);
    uint64_t v23 = v13[8];
    uint64_t v24 = (char *)v8 + v23;
    uint64_t v25 = (char *)v9 + v23;
    uint64_t v26 = v86;
    if (v86((char *)v9 + v23, 1, v10))
    {
      sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v24, v25, v10);
      uint64_t v26 = v86;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v24, 0, 1, v10);
    }
    uint64_t v28 = _s6StylesV8TimelineVMa(0);
    v87(&v24[*(int *)(v28 + 20)], &v25[*(int *)(v28 + 20)], v17);
    uint64_t v29 = v13[9];
    uint64_t v30 = (char *)v8 + v29;
    uint64_t v31 = (char *)v9 + v29;
    uint64_t v83 = a2;
    if (v26((char *)v9 + v29, 1, v10))
    {
      sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v30, v31, v10);
      uint64_t v26 = v86;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v30, 0, 1, v10);
    }
    uint64_t v33 = _s6StylesV6NoDataVMa(0);
    v87(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v17);
    v30[*(int *)(v33 + 24)] = v31[*(int *)(v33 + 24)];
    uint64_t v34 = v13[10];
    uint64_t v35 = (char *)v8 + v34;
    uint64_t v36 = (char *)v9 + v34;
    if (v26((char *)v9 + v34, 1, v10))
    {
      sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v35, v36, v10);
      uint64_t v26 = v86;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v35, 0, 1, v10);
    }
    uint64_t v38 = _s6StylesV11PlaceholderVMa(0);
    v87(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v17);
    uint64_t v39 = v13[11];
    uint64_t v40 = (char *)v8 + v39;
    uint64_t v41 = (char *)v9 + v39;
    if (v26((char *)v9 + v39, 1, v10))
    {
      sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v40, v41, v10);
      uint64_t v26 = v86;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v40, 0, 1, v10);
    }
    uint64_t v43 = _s6StylesV6SymbolVMa(0);
    v87(&v40[*(int *)(v43 + 20)], &v41[*(int *)(v43 + 20)], v17);
    uint64_t v44 = v13[12];
    uint64_t v45 = (char *)v8 + v44;
    double v46 = (char *)v9 + v44;
    if (v26((char *)v9 + v44, 1, v10))
    {
      sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v45, v46, v10);
      uint64_t v26 = v86;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v45, 0, 1, v10);
    }
    uint64_t v48 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v87(&v45[v48[5]], &v46[v48[5]], v17);
    v45[v48[6]] = v46[v48[6]];
    ((void (*)(char *, char *, uint64_t))v80)(&v45[v48[7]], &v46[v48[7]], v81);
    uint64_t v49 = v13[13];
    uint64_t v50 = (char *)v8 + v49;
    uint64_t v51 = (char *)v9 + v49;
    if (v26((char *)v9 + v49, 1, v10))
    {
      sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v50, v51, v10);
      uint64_t v26 = v86;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v50, 0, 1, v10);
    }
    uint64_t v53 = _s6StylesV5EmptyVMa(0);
    v87(&v50[*(int *)(v53 + 20)], &v51[*(int *)(v53 + 20)], v17);
    v50[*(int *)(v53 + 24)] = v51[*(int *)(v53 + 24)];
    uint64_t v54 = v13[14];
    uint64_t v55 = (char *)v8 + v54;
    uint64_t v56 = (char *)v9 + v54;
    if (v26((char *)v9 + v54, 1, v10))
    {
      sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v55, v56, v10);
      uint64_t v26 = v86;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v55, 0, 1, v10);
    }
    uint64_t v58 = _s6StylesV5DailyVMa(0);
    v87(&v55[*(int *)(v58 + 20)], &v56[*(int *)(v58 + 20)], v17);
    v55[*(int *)(v58 + 24)] = v56[*(int *)(v58 + 24)];
    uint64_t v59 = v13[15];
    uint64_t v60 = (char *)v8 + v59;
    long long v61 = (char *)v9 + v59;
    if (v26((char *)v9 + v59, 1, v10))
    {
      sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v60, v61, v10);
      uint64_t v26 = v86;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v60, 0, 1, v10);
    }
    a2 = v83;
    uint64_t v63 = _s6StylesV9MomentaryVMa(0);
    v87(&v60[*(int *)(v63 + 20)], &v61[*(int *)(v63 + 20)], v17);
    uint64_t v64 = v13[16];
    uint64_t v65 = (char *)v8 + v64;
    unint64_t v66 = (char *)v9 + v64;
    if (v26((char *)v9 + v64, 1, v10))
    {
      sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v65, v66, v10);
      uint64_t v26 = v86;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v65, 0, 1, v10);
    }
    uint64_t v68 = _s6StylesV6HeaderVMa(0);
    v87(&v65[*(int *)(v68 + 20)], &v66[*(int *)(v68 + 20)], v17);
    uint64_t v69 = v13[17];
    uint64_t v70 = (char *)v8 + v69;
    uint64_t v71 = (char *)v9 + v69;
    if (v26((char *)v9 + v69, 1, v10))
    {
      sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v70, v71, v10);
      uint64_t v26 = v86;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v70, 0, 1, v10);
    }
    uint64_t v73 = _s6StylesV11ChartButtonVMa(0);
    v87(&v70[*(int *)(v73 + 20)], &v71[*(int *)(v73 + 20)], v17);
    uint64_t v74 = v13[18];
    uint64_t v75 = (char *)v8 + v74;
    uint64_t v76 = (char *)v9 + v74;
    if (v26((char *)v9 + v74, 1, v10))
    {
      sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v75, v76, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v75, 0, 1, v10);
    }
    uint64_t v78 = _s6StylesV15LogButtonFooterVMa(0);
    v87(&v75[*(int *)(v78 + 20)], &v76[*(int *)(v78 + 20)], v17);
    a1 = v84;
    a3 = v82;
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_25609D78C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2;
  if (a1 != a2)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25609E64C((uint64_t)a1, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    sub_2560A1364(0, &qword_269F47D00, v6, v7);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, v4, v8);
    }
    else
    {
      *a1 = *v4;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)v4 + v9);
    uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25609E64C((uint64_t)a1 + v9, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    sub_2560A1364(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, v12);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_256176AA8();
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v90 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48);
      uint64_t v86 = a3;
      uint64_t v87 = v4;
      if (v90(v11, 1, v13))
      {
        sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v10, v11, v13);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v13);
      }
      uint64_t v16 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v17 = v16[5];
      uint64_t v18 = (char *)v10 + v17;
      uint64_t v19 = (char *)v11 + v17;
      uint64_t v20 = sub_256176158();
      uint64_t v21 = (void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
      long long v89 = *v21;
      (*v21)(v18, v19, v20);
      *((unsigned char *)v10 + v16[6]) = *((unsigned char *)v11 + v16[6]);
      uint64_t v22 = v16[7];
      uint64_t v23 = (char *)v10 + v22;
      uint64_t v24 = (char *)v11 + v22;
      uint64_t v25 = sub_256175D98();
      uint64_t v84 = *(void (**)(char *, char *))(*(void *)(v25 - 8) + 16);
      uint64_t v85 = v25;
      v84(v23, v24);
      uint64_t v26 = v16[8];
      uint64_t v27 = (char *)v10 + v26;
      uint64_t v28 = (char *)v11 + v26;
      if (v90((void *)((char *)v11 + v26), 1, v13))
      {
        sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v27, v28, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v27, 0, 1, v13);
      }
      uint64_t v30 = _s6StylesV8TimelineVMa(0);
      v89(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v20);
      uint64_t v31 = v16[9];
      uint64_t v32 = (char *)v10 + v31;
      uint64_t v33 = (char *)v11 + v31;
      uint64_t v88 = v14;
      if (v90((void *)((char *)v11 + v31), 1, v13))
      {
        sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v32, v33, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v32, 0, 1, v13);
      }
      uint64_t v35 = _s6StylesV6NoDataVMa(0);
      v89(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v20);
      v32[*(int *)(v35 + 24)] = v33[*(int *)(v35 + 24)];
      uint64_t v36 = v16[10];
      uint64_t v37 = (char *)v10 + v36;
      uint64_t v38 = (char *)v11 + v36;
      if (v90((void *)((char *)v11 + v36), 1, v13))
      {
        sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
        uint64_t v40 = v88;
      }
      else
      {
        uint64_t v40 = v88;
        (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v37, v38, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v37, 0, 1, v13);
      }
      uint64_t v41 = _s6StylesV11PlaceholderVMa(0);
      v89(&v37[*(int *)(v41 + 20)], &v38[*(int *)(v41 + 20)], v20);
      uint64_t v42 = v16[11];
      uint64_t v43 = (char *)v10 + v42;
      uint64_t v44 = (char *)v11 + v42;
      if (v90((void *)((char *)v11 + v42), 1, v13))
      {
        sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v43, v44, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v43, 0, 1, v13);
      }
      uint64_t v46 = _s6StylesV6SymbolVMa(0);
      v89(&v43[*(int *)(v46 + 20)], &v44[*(int *)(v46 + 20)], v20);
      uint64_t v47 = v16[12];
      uint64_t v48 = (char *)v10 + v47;
      uint64_t v49 = (char *)v11 + v47;
      if (v90((void *)((char *)v11 + v47), 1, v13))
      {
        sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v48, v49, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v48, 0, 1, v13);
      }
      uint64_t v51 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v89(&v48[v51[5]], &v49[v51[5]], v20);
      v48[v51[6]] = v49[v51[6]];
      ((void (*)(char *, char *, uint64_t))v84)(&v48[v51[7]], &v49[v51[7]], v85);
      uint64_t v52 = v16[13];
      uint64_t v53 = (char *)v10 + v52;
      uint64_t v54 = (char *)v11 + v52;
      if (v90((void *)((char *)v11 + v52), 1, v13))
      {
        sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v53, v54, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v53, 0, 1, v13);
      }
      uint64_t v56 = _s6StylesV5EmptyVMa(0);
      v89(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v20);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      uint64_t v57 = v16[14];
      uint64_t v58 = (char *)v10 + v57;
      uint64_t v59 = (char *)v11 + v57;
      if (v90((void *)((char *)v11 + v57), 1, v13))
      {
        sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v58, v59, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v58, 0, 1, v13);
      }
      uint64_t v61 = _s6StylesV5DailyVMa(0);
      v89(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v20);
      v58[*(int *)(v61 + 24)] = v59[*(int *)(v61 + 24)];
      uint64_t v62 = v16[15];
      uint64_t v63 = (char *)v10 + v62;
      uint64_t v64 = (char *)v11 + v62;
      if (v90((void *)((char *)v11 + v62), 1, v13))
      {
        sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
        uint64_t v66 = v88;
      }
      else
      {
        uint64_t v66 = v88;
        (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v63, v64, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v63, 0, 1, v13);
      }
      uint64_t v67 = _s6StylesV9MomentaryVMa(0);
      v89(&v63[*(int *)(v67 + 20)], &v64[*(int *)(v67 + 20)], v20);
      uint64_t v68 = v16[16];
      uint64_t v69 = (char *)v10 + v68;
      uint64_t v70 = (char *)v11 + v68;
      if (v90((void *)((char *)v11 + v68), 1, v13))
      {
        sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v69, v70, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v69, 0, 1, v13);
      }
      uint64_t v72 = _s6StylesV6HeaderVMa(0);
      v89(&v69[*(int *)(v72 + 20)], &v70[*(int *)(v72 + 20)], v20);
      uint64_t v73 = v16[17];
      uint64_t v74 = (char *)v10 + v73;
      uint64_t v75 = (char *)v11 + v73;
      if (v90((void *)((char *)v11 + v73), 1, v13))
      {
        sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v74, v75, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v74, 0, 1, v13);
      }
      uint64_t v77 = _s6StylesV11ChartButtonVMa(0);
      v89(&v74[*(int *)(v77 + 20)], &v75[*(int *)(v77 + 20)], v20);
      uint64_t v78 = v16[18];
      uint64_t v79 = (char *)v10 + v78;
      uint64_t v80 = (char *)v11 + v78;
      if (v90((void *)((char *)v11 + v78), 1, v13))
      {
        sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v79, v80, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v79, 0, 1, v13);
      }
      uint64_t v82 = _s6StylesV15LogButtonFooterVMa(0);
      v89(&v79[*(int *)(v82 + 20)], &v80[*(int *)(v82 + 20)], v20);
      a3 = v86;
      uint64_t v4 = v87;
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)v4 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25609E64C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_2560A1364(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

char *sub_25609E6A8(char *a1, char *a2, uint64_t a3)
{
  sub_2560A1364(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  uint64_t v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_256175D98();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  sub_2560A1364(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  uint64_t v13 = v12;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_256176AA8();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v90 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    uint64_t v88 = a1;
    uint64_t v89 = v15;
    uint64_t v86 = a3;
    if (v90(v11, 1, v14))
    {
      sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v10, v11, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
    }
    uint64_t v17 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v18 = v17[5];
    uint64_t v19 = &v10[v18];
    uint64_t v20 = &v11[v18];
    uint64_t v21 = sub_256176158();
    uint64_t v22 = (void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32);
    uint64_t v91 = *v22;
    (*v22)(v19, v20, v21);
    v10[v17[6]] = v11[v17[6]];
    uint64_t v23 = v17[7];
    uint64_t v24 = &v10[v23];
    uint64_t v25 = &v11[v23];
    uint64_t v26 = sub_256175D98();
    uint64_t v84 = *(void (**)(char *, char *))(*(void *)(v26 - 8) + 32);
    uint64_t v85 = v26;
    v84(v24, v25);
    uint64_t v27 = v17[8];
    uint64_t v28 = &v10[v27];
    uint64_t v29 = &v11[v27];
    uint64_t v30 = v90;
    if (v90(&v11[v27], 1, v14))
    {
      sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v28, v29, v14);
      uint64_t v30 = v90;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v28, 0, 1, v14);
    }
    uint64_t v32 = _s6StylesV8TimelineVMa(0);
    v91(&v28[*(int *)(v32 + 20)], &v29[*(int *)(v32 + 20)], v21);
    uint64_t v33 = v17[9];
    uint64_t v34 = &v10[v33];
    uint64_t v35 = &v11[v33];
    uint64_t v87 = a2;
    if (v30(&v11[v33], 1, v14))
    {
      sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v34, v35, v14);
      uint64_t v30 = v90;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v34, 0, 1, v14);
    }
    uint64_t v37 = _s6StylesV6NoDataVMa(0);
    v91(&v34[*(int *)(v37 + 20)], &v35[*(int *)(v37 + 20)], v21);
    v34[*(int *)(v37 + 24)] = v35[*(int *)(v37 + 24)];
    uint64_t v38 = v17[10];
    uint64_t v39 = &v10[v38];
    uint64_t v40 = &v11[v38];
    if (v30(&v11[v38], 1, v14))
    {
      sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v39, v40, v14);
      uint64_t v30 = v90;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v39, 0, 1, v14);
    }
    uint64_t v42 = _s6StylesV11PlaceholderVMa(0);
    v91(&v39[*(int *)(v42 + 20)], &v40[*(int *)(v42 + 20)], v21);
    uint64_t v43 = v17[11];
    uint64_t v44 = &v10[v43];
    uint64_t v45 = &v11[v43];
    if (v30(&v11[v43], 1, v14))
    {
      sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v44, v45, v14);
      uint64_t v30 = v90;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v44, 0, 1, v14);
    }
    uint64_t v47 = _s6StylesV6SymbolVMa(0);
    v91(&v44[*(int *)(v47 + 20)], &v45[*(int *)(v47 + 20)], v21);
    uint64_t v48 = v17[12];
    uint64_t v49 = &v10[v48];
    uint64_t v50 = &v11[v48];
    if (v30(&v11[v48], 1, v14))
    {
      sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v49, v50, v14);
      uint64_t v30 = v90;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v49, 0, 1, v14);
    }
    uint64_t v52 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v91(&v49[v52[5]], &v50[v52[5]], v21);
    v49[v52[6]] = v50[v52[6]];
    ((void (*)(char *, char *, uint64_t))v84)(&v49[v52[7]], &v50[v52[7]], v85);
    uint64_t v53 = v17[13];
    uint64_t v54 = &v10[v53];
    uint64_t v55 = &v11[v53];
    if (v30(&v11[v53], 1, v14))
    {
      sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v54, v55, v14);
      uint64_t v30 = v90;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v54, 0, 1, v14);
    }
    uint64_t v57 = _s6StylesV5EmptyVMa(0);
    v91(&v54[*(int *)(v57 + 20)], &v55[*(int *)(v57 + 20)], v21);
    v54[*(int *)(v57 + 24)] = v55[*(int *)(v57 + 24)];
    uint64_t v58 = v17[14];
    uint64_t v59 = &v10[v58];
    uint64_t v60 = &v11[v58];
    if (v30(&v11[v58], 1, v14))
    {
      sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v59, v60, v14);
      uint64_t v30 = v90;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v59, 0, 1, v14);
    }
    uint64_t v62 = _s6StylesV5DailyVMa(0);
    v91(&v59[*(int *)(v62 + 20)], &v60[*(int *)(v62 + 20)], v21);
    v59[*(int *)(v62 + 24)] = v60[*(int *)(v62 + 24)];
    uint64_t v63 = v17[15];
    uint64_t v64 = &v10[v63];
    uint64_t v65 = &v11[v63];
    if (v30(&v11[v63], 1, v14))
    {
      sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v64, v65, v14);
      uint64_t v30 = v90;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v64, 0, 1, v14);
    }
    a2 = v87;
    uint64_t v67 = _s6StylesV9MomentaryVMa(0);
    v91(&v64[*(int *)(v67 + 20)], &v65[*(int *)(v67 + 20)], v21);
    uint64_t v68 = v17[16];
    uint64_t v69 = &v10[v68];
    uint64_t v70 = &v11[v68];
    if (v30(&v11[v68], 1, v14))
    {
      sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v69, v70, v14);
      uint64_t v30 = v90;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v69, 0, 1, v14);
    }
    uint64_t v72 = _s6StylesV6HeaderVMa(0);
    v91(&v69[*(int *)(v72 + 20)], &v70[*(int *)(v72 + 20)], v21);
    uint64_t v73 = v17[17];
    uint64_t v74 = &v10[v73];
    uint64_t v75 = &v11[v73];
    if (v30(&v11[v73], 1, v14))
    {
      sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v74, v75, v14);
      uint64_t v30 = v90;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v74, 0, 1, v14);
    }
    uint64_t v77 = _s6StylesV11ChartButtonVMa(0);
    v91(&v74[*(int *)(v77 + 20)], &v75[*(int *)(v77 + 20)], v21);
    uint64_t v78 = v17[18];
    uint64_t v79 = &v10[v78];
    uint64_t v80 = &v11[v78];
    if (v30(&v11[v78], 1, v14))
    {
      sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v79, v80, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v79, 0, 1, v14);
    }
    uint64_t v82 = _s6StylesV15LogButtonFooterVMa(0);
    v91(&v79[*(int *)(v82 + 20)], &v80[*(int *)(v82 + 20)], v21);
    swift_storeEnumTagMultiPayload();
    a1 = v88;
    a3 = v86;
  }
  else
  {
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_25609F570(char *a1, char *a2, uint64_t a3)
{
  uint64_t v4 = a2;
  if (a1 != a2)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25609E64C((uint64_t)a1, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    sub_2560A1364(0, &qword_269F47D00, v6, v7);
    uint64_t v9 = v8;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_256175D98();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, v4, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, v4, *(void *)(*(void *)(v9 - 8) + 64));
    }
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &v4[v11];
    uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_25609E64C((uint64_t)&a1[v11], &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    sub_2560A1364(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, v14);
    uint64_t v16 = v15;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_256176AA8();
      uint64_t v18 = *(void *)(v17 - 8);
      long long v94 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
      uint64_t v90 = a3;
      uint64_t v91 = v4;
      if (v94(v13, 1, v17))
      {
        sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v12, v13, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v12, 0, 1, v17);
      }
      uint64_t v20 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v21 = v20[5];
      uint64_t v22 = &v12[v21];
      uint64_t v23 = &v13[v21];
      uint64_t v24 = sub_256176158();
      uint64_t v25 = (void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32);
      unint64_t v93 = *v25;
      (*v25)(v22, v23, v24);
      v12[v20[6]] = v13[v20[6]];
      uint64_t v26 = v20[7];
      uint64_t v27 = &v12[v26];
      uint64_t v28 = &v13[v26];
      uint64_t v29 = sub_256175D98();
      uint64_t v88 = *(void (**)(char *, char *))(*(void *)(v29 - 8) + 32);
      uint64_t v89 = v29;
      v88(v27, v28);
      uint64_t v30 = v20[8];
      uint64_t v31 = &v12[v30];
      uint64_t v32 = &v13[v30];
      if (v94(&v13[v30], 1, v17))
      {
        sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v31, v32, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v31, 0, 1, v17);
      }
      uint64_t v34 = _s6StylesV8TimelineVMa(0);
      v93(&v31[*(int *)(v34 + 20)], &v32[*(int *)(v34 + 20)], v24);
      uint64_t v35 = v20[9];
      uint64_t v36 = &v12[v35];
      uint64_t v37 = &v13[v35];
      uint64_t v92 = v18;
      if (v94(&v13[v35], 1, v17))
      {
        sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v36, v37, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v36, 0, 1, v17);
      }
      uint64_t v39 = _s6StylesV6NoDataVMa(0);
      v93(&v36[*(int *)(v39 + 20)], &v37[*(int *)(v39 + 20)], v24);
      v36[*(int *)(v39 + 24)] = v37[*(int *)(v39 + 24)];
      uint64_t v40 = v20[10];
      uint64_t v41 = &v12[v40];
      uint64_t v42 = &v13[v40];
      if (v94(&v13[v40], 1, v17))
      {
        sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
        uint64_t v44 = v92;
      }
      else
      {
        uint64_t v44 = v92;
        (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v41, v42, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v92 + 56))(v41, 0, 1, v17);
      }
      uint64_t v45 = _s6StylesV11PlaceholderVMa(0);
      v93(&v41[*(int *)(v45 + 20)], &v42[*(int *)(v45 + 20)], v24);
      uint64_t v46 = v20[11];
      uint64_t v47 = &v12[v46];
      uint64_t v48 = &v13[v46];
      if (v94(&v13[v46], 1, v17))
      {
        sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v47, v48, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v47, 0, 1, v17);
      }
      uint64_t v50 = _s6StylesV6SymbolVMa(0);
      v93(&v47[*(int *)(v50 + 20)], &v48[*(int *)(v50 + 20)], v24);
      uint64_t v51 = v20[12];
      uint64_t v52 = &v12[v51];
      uint64_t v53 = &v13[v51];
      if (v94(&v13[v51], 1, v17))
      {
        sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v52, v53, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v52, 0, 1, v17);
      }
      uint64_t v55 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v93(&v52[v55[5]], &v53[v55[5]], v24);
      v52[v55[6]] = v53[v55[6]];
      ((void (*)(char *, char *, uint64_t))v88)(&v52[v55[7]], &v53[v55[7]], v89);
      uint64_t v56 = v20[13];
      uint64_t v57 = &v12[v56];
      uint64_t v58 = &v13[v56];
      if (v94(&v13[v56], 1, v17))
      {
        sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v57, v58, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v92 + 56))(v57, 0, 1, v17);
      }
      uint64_t v60 = _s6StylesV5EmptyVMa(0);
      v93(&v57[*(int *)(v60 + 20)], &v58[*(int *)(v60 + 20)], v24);
      v57[*(int *)(v60 + 24)] = v58[*(int *)(v60 + 24)];
      uint64_t v61 = v20[14];
      uint64_t v62 = &v12[v61];
      uint64_t v63 = &v13[v61];
      if (v94(&v13[v61], 1, v17))
      {
        sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v62, v63, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v92 + 56))(v62, 0, 1, v17);
      }
      uint64_t v65 = _s6StylesV5DailyVMa(0);
      v93(&v62[*(int *)(v65 + 20)], &v63[*(int *)(v65 + 20)], v24);
      v62[*(int *)(v65 + 24)] = v63[*(int *)(v65 + 24)];
      uint64_t v66 = v20[15];
      uint64_t v67 = &v12[v66];
      uint64_t v68 = &v13[v66];
      if (v94(&v13[v66], 1, v17))
      {
        sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
        uint64_t v70 = v92;
      }
      else
      {
        uint64_t v70 = v92;
        (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v67, v68, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v92 + 56))(v67, 0, 1, v17);
      }
      uint64_t v71 = _s6StylesV9MomentaryVMa(0);
      v93(&v67[*(int *)(v71 + 20)], &v68[*(int *)(v71 + 20)], v24);
      uint64_t v72 = v20[16];
      uint64_t v73 = &v12[v72];
      uint64_t v74 = &v13[v72];
      if (v94(&v13[v72], 1, v17))
      {
        sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v73, v74, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v73, 0, 1, v17);
      }
      uint64_t v76 = _s6StylesV6HeaderVMa(0);
      v93(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v24);
      uint64_t v77 = v20[17];
      uint64_t v78 = &v12[v77];
      uint64_t v79 = &v13[v77];
      if (v94(&v13[v77], 1, v17))
      {
        sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v78, v79, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v78, 0, 1, v17);
      }
      uint64_t v81 = _s6StylesV11ChartButtonVMa(0);
      v93(&v78[*(int *)(v81 + 20)], &v79[*(int *)(v81 + 20)], v24);
      uint64_t v82 = v20[18];
      uint64_t v83 = &v12[v82];
      uint64_t v84 = &v13[v82];
      if (v94(&v13[v82], 1, v17))
      {
        sub_2560A1364(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v83, v84, *(void *)(*(void *)(v85 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v83, v84, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v83, 0, 1, v17);
      }
      uint64_t v86 = _s6StylesV15LogButtonFooterVMa(0);
      v93(&v83[*(int *)(v86 + 20)], &v84[*(int *)(v86 + 20)], v24);
      swift_storeEnumTagMultiPayload();
      a3 = v90;
      uint64_t v4 = v91;
    }
    else
    {
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
  }
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&v4[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2560A043C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2560A0450);
}

uint64_t sub_2560A0450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2560A1364(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  sub_2560A1364(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_2560A05C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2560A05D8);
}

void sub_2560A05D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_2560A1364(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    sub_2560A1364(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return;
    }
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  v11(v12, a2, a2, v10);
}

uint64_t _s21EntryMomentsEmptyViewVMa()
{
  uint64_t result = qword_269F461F0;
  if (!qword_269F461F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2560A0794()
{
  sub_2560A1364(319, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (v0 <= 0x3F)
  {
    sub_2560A1364(319, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_2560A08C8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2560A08E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v87 = a1;
  uint64_t v1 = sub_2561762D8();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v86 = (char *)v71 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_256177958();
  uint64_t v84 = *(void *)(v3 - 8);
  uint64_t v85 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v83 = (char *)v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_256175D98();
  uint64_t v80 = *(void *)(v82 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v82);
  uint64_t v79 = (char *)v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v89 = (uint64_t)v71 - v7;
  uint64_t v8 = sub_256176EE8();
  uint64_t v76 = *(void *)(v8 - 8);
  uint64_t v77 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v74 = (char *)v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560A1364(0, &qword_269F43500, MEMORY[0x263F1A620], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v71 - v11;
  uint64_t v13 = sub_256176F48();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F7285C();
  uint64_t v88 = v20;
  MEMORY[0x270FA5388](v20);
  uint64_t v78 = (char *)v71 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F84368(0);
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v81 = (char *)v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v24 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_2561755B8();
  uint64_t v27 = v26;
  swift_bridgeObjectRelease();

  uint64_t v91 = (void *)v25;
  uint64_t v92 = v27;
  sub_255F5CE90();
  uint64_t v28 = sub_256177028();
  v71[0] = v29;
  v71[1] = v30;
  char v32 = v31 & 1;
  uint64_t v75 = _s21EntryMomentsEmptyViewVMa();
  uint64_t v72 = v19;
  sub_256119CA0((uint64_t)v19);
  uint64_t v73 = type metadata accessor for StateOfMindTimeline.Styles;
  sub_2560A13C8((uint64_t)v19, type metadata accessor for StateOfMindTimeline.Styles);
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x263F1A6C8], v13);
  uint64_t v33 = *MEMORY[0x263F1A608];
  uint64_t v34 = v13;
  uint64_t v35 = sub_256176E58();
  uint64_t v36 = *(void *)(v35 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 104))(v12, v33, v35);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v12, 0, 1, v35);
  sub_256176E88();
  sub_256176EA8();
  sub_25609E64C((uint64_t)v12, &qword_269F43500, MEMORY[0x263F1A620], MEMORY[0x263F8D8F0]);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v34);
  uint64_t v38 = v76;
  uint64_t v37 = v77;
  uint64_t v39 = v74;
  (*(void (**)(char *, void, uint64_t))(v76 + 104))(v74, *MEMORY[0x263F1A680], v77);
  sub_256176F08();
  swift_release();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v37);
  uint64_t v40 = v28;
  uint64_t v41 = v71[0];
  uint64_t v42 = sub_256176FD8();
  uint64_t v44 = v43;
  LOBYTE(v37) = v45 & 1;
  sub_255F67B2C(v40, v41, v32);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v46 = (uint64_t)v72;
  sub_256119CA0((uint64_t)v72);
  sub_2560A13C8(v46, v73);
  id v47 = objc_msgSend(self, sel_quaternaryLabelColor);
  uint64_t v91 = (void *)MEMORY[0x25A29FE80](v47);
  uint64_t v48 = sub_256176FA8();
  uint64_t v76 = v49;
  uint64_t v77 = v50;
  int v52 = v51 & 1;
  sub_255F67B2C(v42, v44, v37);
  swift_release();
  swift_bridgeObjectRelease();
  sub_25611A114(v89);
  uint64_t v54 = v79;
  uint64_t v53 = v80;
  uint64_t v55 = v82;
  (*(void (**)(char *, void, uint64_t))(v80 + 104))(v79, *MEMORY[0x263F18508], v82);
  char v56 = sub_256175D88();
  uint64_t v80 = *(void *)(v53 + 8);
  ((void (*)(char *, uint64_t))v80)(v54, v55);
  uint64_t v58 = v83;
  uint64_t v57 = v84;
  uint64_t v59 = (unsigned int *)MEMORY[0x263F1B950];
  if ((v56 & 1) == 0) {
    uint64_t v59 = (unsigned int *)MEMORY[0x263F1B968];
  }
  uint64_t v60 = v85;
  (*(void (**)(char *, void, uint64_t))(v84 + 104))(v83, *v59, v85);
  uint64_t v61 = (uint64_t)v86;
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v86, v58, v60);
  uint64_t v62 = (uint64_t)v78;
  sub_2560A1428(v61, (uint64_t)&v78[*(int *)(v88 + 36)]);
  uint64_t v63 = v76;
  *(void *)uint64_t v62 = v48;
  *(void *)(v62 + 8) = v63;
  LODWORD(v74) = v52;
  *(unsigned char *)(v62 + 16) = v52;
  *(void *)(v62 + 24) = v77;
  sub_255F67B94(v48, v63, v52);
  swift_bridgeObjectRetain();
  sub_2560A13C8(v61, MEMORY[0x263F190D8]);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v60);
  ((void (*)(uint64_t, uint64_t))v80)(v89, v55);
  sub_255F67B2C(v48, v63, (char)v74);
  swift_bridgeObjectRelease();
  uint64_t v64 = *(void **)(v90 + *(int *)(v75 + 24));
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v64 = sub_256095C94(0, v64[2] + 1, 1, v64);
  }
  unint64_t v66 = v64[2];
  unint64_t v65 = v64[3];
  if (v66 >= v65 >> 1) {
    uint64_t v64 = sub_256095C94((void *)(v65 > 1), v66 + 1, 1, v64);
  }
  v64[2] = v66 + 1;
  uint64_t v67 = &v64[2 * v66];
  v67[4] = 0x62614C7974706D45;
  v67[5] = 0xEA00000000006C65;
  uint64_t v91 = &unk_2704B5358;
  uint64_t v68 = swift_bridgeObjectRetain();
  sub_255FCD3A4(v68);
  sub_255FCD9E0();
  sub_255FF10F4((unint64_t *)&qword_26B2AD358, (void (*)(uint64_t))sub_255FCD9E0);
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_255F74810();
  uint64_t v69 = (uint64_t)v81;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2560A13C8(v62, (uint64_t (*)(void))sub_255F7285C);
  return sub_2560A148C(v69, v87);
}

void sub_2560A1364(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2560A13C8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2560A1428(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2561762D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2560A148C(uint64_t a1, uint64_t a2)
{
  sub_255F84368(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2560A14F4()
{
  unint64_t result = qword_269F46200;
  if (!qword_269F46200)
  {
    sub_255F84368(255);
    sub_255F74810();
    sub_255FF10F4(&qword_269F42EA0, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46200);
  }
  return result;
}

uint64_t sub_2560A159C()
{
  return sub_2561763E8();
}

uint64_t type metadata accessor for ReflectiveIntervalSelectionPhaseSpecs()
{
  uint64_t result = qword_269F46208;
  if (!qword_269F46208) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2560A1620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2560A1634);
}

uint64_t sub_2560A1634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_255FD8280();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    unint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_256176158();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_2560A172C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2560A1740);
}

uint64_t sub_2560A1740(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_255FD8280();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_256176158();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void *sub_2560A1844(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  return sub_2560A185C(a1, a2, a3);
}

void *sub_2560A185C(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_256178678())
  {
    uint64_t v7 = 4;
    while (1)
    {
      id v8 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x25A2A1000](v7 - 4, a3) : *(id *)(a3 + 8 * v7);
      uint64_t v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      id v13 = v8;
      char v11 = a1(&v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v9;
      }
      if (v11)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_2560A1988()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();

  return swift_release();
}

uint64_t sub_2560A1A00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v19 = a1;
  uint64_t v18 = sub_256175868();
  uint64_t v1 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = _s9ViewModelOMa();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_256177DB8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  char v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  id v13 = (char *)&v18 - v12;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();
  swift_release();
  sub_2560F78A4((uint64_t)v13);
  sub_2560A8348((uint64_t)v6, (uint64_t (*)(void))_s9ViewModelOMa);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  sub_256177DA8();
  uint64_t v14 = sub_2560A32EC((uint64_t)v3);
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v18);
  sub_2560190A8(0, (uint64_t)v11, v14, v16, 0, qword_2704B62D8, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
}

void *sub_2560A1CAC()
{
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_2560A82E4(0, &qword_26B2AD328, MEMORY[0x263F07508], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v83 = (char *)&v75 - v3;
  uint64_t v85 = type metadata accessor for StateOfMindEntryModel.Configuration(0);
  uint64_t v4 = MEMORY[0x270FA5388](v85);
  uint64_t v82 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v89 = (uint64_t)&v75 - v6;
  sub_2560A82E4(0, (unint64_t *)&qword_269F44D30, MEMORY[0x263F07490], v1);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v76 = (char *)&v75 - v8;
  uint64_t v9 = sub_256175568();
  uint64_t v77 = *(void *)(v9 - 8);
  uint64_t v78 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v84 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = _s9ViewModelOMa();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v90 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_256175A08();
  uint64_t v13 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  uint64_t v15 = (char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_256177DB8();
  uint64_t v88 = *(void *)(v91 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v91);
  uint64_t v18 = (char *)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v75 - v19;
  uint64_t v21 = sub_256175868();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v75 = (char *)&v75 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v81 = (char *)&v75 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)&v75 - v28;
  uint64_t v30 = MEMORY[0x270FA5388](v27);
  char v32 = (char *)&v75 - v31;
  (*(void (**)(uint64_t))(v0 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_now))(v30);
  uint64_t v92 = v32;
  uint64_t v93 = v22;
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
  uint64_t v87 = v21;
  uint64_t v80 = v33;
  v33(v29, v32, v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v0 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_gregorianCalendar, v79);
  uint64_t v34 = v91;
  uint64_t v35 = v0;
  sub_256177D58();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v36 = (uint64_t)v90;
  sub_256175C88();
  swift_release();
  swift_release();
  sub_2560F78A4((uint64_t)v18);
  sub_2560A8348(v36, (uint64_t (*)(void))_s9ViewModelOMa);
  sub_2560A8AA8(&qword_269F462D8, MEMORY[0x263F090E8]);
  uint64_t v90 = v18;
  char v37 = sub_256177E98();
  uint64_t v86 = v20;
  if (v37)
  {
    uint64_t v84 = *(char **)(v0 + 16);
    uint64_t v38 = v29;
    uint64_t v39 = v29;
    uint64_t v40 = v87;
    v80(v38, v92, v87);
    uint64_t v41 = sub_2561758A8();
    uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56);
    uint64_t v43 = (uint64_t)v83;
    v42(v83, 1, 1, v41);
    uint64_t v44 = (int *)v85;
    uint64_t v45 = (uint64_t)v82;
    uint64_t v46 = (uint64_t)&v82[*(int *)(v85 + 24)];
    v42((char *)v46, 1, 1, v41);
    id v47 = (void *)(v45 + v44[7]);
    *id v47 = 0;
    v47[1] = 0;
    *(unsigned char *)(v45 + v44[8]) = 11;
    *(unsigned char *)(v45 + v44[9]) = 6;
    *(void *)uint64_t v45 = 0;
    *(unsigned char *)(v45 + 8) = 2;
    uint64_t v48 = v93;
    (*(void (**)(uint64_t, char *, uint64_t))(v93 + 32))(v45 + v44[5], v39, v40);
    uint64_t v49 = v84;
    sub_256004D24(v43, v46);
    swift_bridgeObjectRelease();
    *id v47 = 0;
    v47[1] = 0;
    uint64_t v50 = v89;
    sub_2560A8834(v45, v89, type metadata accessor for StateOfMindEntryModel.Configuration);
    type metadata accessor for StateOfMindEntryModel(0);
    swift_allocObject();
    char v51 = sub_256007D60(v49, v50, nullsub_1, 0);

    int v52 = *(void (**)(char *, uint64_t))(v88 + 8);
    v52(v90, v34);
    v52(v86, v34);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v92, v40);
  }
  else
  {
    uint64_t v79 = (uint64_t)v29;
    sub_256177D48();
    sub_256175518();
    sub_256175538();
    sub_256175548();
    uint64_t v53 = (uint64_t)v76;
    sub_256175998();
    uint64_t v54 = v75;
    uint64_t v55 = v87;
    char v56 = (void (*)(uint64_t, char *, uint64_t))v80;
    v80(v75, v92, v87);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v93 + 48))(v53, 1, v55) == 1)
    {
      uint64_t v57 = v81;
      uint64_t v75 = *(char **)(v93 + 32);
      ((void (*)(char *, char *, uint64_t))v75)(v81, v54, v55);
      sub_2560A8BFC(v53, (unint64_t *)&qword_269F44D30, MEMORY[0x263F07490]);
    }
    else
    {
      uint64_t v58 = v93;
      (*(void (**)(char *, uint64_t))(v93 + 8))(v54, v55);
      uint64_t v57 = v81;
      uint64_t v75 = *(char **)(v58 + 32);
      ((void (*)(char *, uint64_t, uint64_t))v75)(v81, v53, v55);
    }
    uint64_t v60 = (uint64_t)v82;
    uint64_t v59 = v83;
    uint64_t v83 = *(char **)(v35 + 16);
    uint64_t v61 = v79;
    v56(v79, v57, v55);
    uint64_t v62 = sub_2561758A8();
    uint64_t v63 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56);
    v63(v59, 1, 1, v62);
    uint64_t v64 = (int *)v85;
    uint64_t v65 = v55;
    uint64_t v66 = (uint64_t)v59;
    uint64_t v67 = v60 + *(int *)(v85 + 24);
    v63((char *)v67, 1, 1, v62);
    uint64_t v68 = (void *)(v60 + v64[7]);
    *uint64_t v68 = 0;
    v68[1] = 0;
    *(unsigned char *)(v60 + v64[8]) = 11;
    *(unsigned char *)(v60 + v64[9]) = 6;
    *(void *)uint64_t v60 = 2;
    *(unsigned char *)(v60 + 8) = 0;
    ((void (*)(uint64_t, uint64_t, uint64_t))v75)(v60 + v64[5], v61, v65);
    uint64_t v69 = v83;
    sub_256004D24(v66, v67);
    swift_bridgeObjectRelease();
    *uint64_t v68 = 0;
    v68[1] = 0;
    uint64_t v70 = v89;
    sub_2560A8834(v60, v89, type metadata accessor for StateOfMindEntryModel.Configuration);
    type metadata accessor for StateOfMindEntryModel(0);
    swift_allocObject();
    char v51 = sub_256007D60(v69, v70, nullsub_1, 0);

    uint64_t v71 = *(void (**)(char *, uint64_t))(v93 + 8);
    v71(v81, v65);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v84, v78);
    uint64_t v72 = *(void (**)(char *, uint64_t))(v88 + 8);
    uint64_t v73 = v91;
    v72(v90, v91);
    v72(v86, v73);
    v71(v92, v65);
  }
  return v51;
}

double sub_2560A2744()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();
  swift_release();
  return v1;
}

MentalHealthUI::StateOfMindTimeline::Model::TimeRange_optional __swiftcall StateOfMindTimeline.Model.TimeRange.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 7) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (rawValue == 1) {
    char v2 = 0;
  }
  *double v1 = v2;
  return (MentalHealthUI::StateOfMindTimeline::Model::TimeRange_optional)rawValue;
}

uint64_t StateOfMindTimeline.Model.TimeRange.rawValue.getter()
{
  if (*v0) {
    return 7;
  }
  else {
    return 1;
  }
}

uint64_t sub_2560A27E8()
{
  return sub_256178928();
}

uint64_t sub_2560A2838()
{
  return sub_2561788F8();
}

uint64_t sub_2560A2870()
{
  return sub_256178928();
}

void *sub_2560A28BC@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 7) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result == 1) {
    char v3 = 0;
  }
  else {
    char v3 = v2;
  }
  *a2 = v3;
  return result;
}

void sub_2560A28DC(uint64_t *a1@<X8>)
{
  uint64_t v2 = 7;
  if (!*v1) {
    uint64_t v2 = 1;
  }
  *a1 = v2;
}

uint64_t sub_2560A28F8@<X0>(char *a1@<X8>)
{
  uint64_t v36 = a1;
  sub_2560A8988();
  uint64_t v37 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v35 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v34 = (char *)&v32 - v5;
  uint64_t v6 = sub_256175A08();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_256175868();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v11 = sub_256177DB8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v32 - v17;
  (*(void (**)(uint64_t))(v1 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_endDate))(v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v1 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_gregorianCalendar, v6);
  sub_256177D58();
  sub_256177D88();
  sub_2560A8AA8((unint64_t *)&unk_269F476D0, MEMORY[0x263F090E8]);
  uint64_t result = sub_256177E68();
  if (result)
  {
    uint64_t v20 = v37;
    uint64_t v21 = v34;
    uint64_t v22 = &v34[*(int *)(v37 + 48)];
    uint64_t v23 = v12;
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v24(v34, v15, v11);
    uint64_t v33 = v22;
    v24(v22, v18, v11);
    uint64_t v25 = v35;
    uint64_t v26 = &v35[*(int *)(v20 + 48)];
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
    v27(v35, v21, v11);
    v27(v26, v22, v11);
    uint64_t v28 = v36;
    v24(v36, v25, v11);
    uint64_t v29 = *(void (**)(char *, uint64_t))(v23 + 8);
    v29(v26, v11);
    uint64_t v30 = &v25[*(int *)(v37 + 48)];
    v24(v25, v21, v11);
    v24(v30, v33, v11);
    sub_2560A7F6C();
    v24(&v28[*(int *)(v31 + 36)], v30, v11);
    return ((uint64_t (*)(char *, uint64_t))v29)(v25, v11);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t StateOfMindTimeline.Model.__allocating_init(healthStore:)(void *a1)
{
  uint64_t v39 = _s9ViewModelOMa();
  uint64_t v2 = MEMORY[0x270FA5388](v39);
  uint64_t v40 = (uint64_t)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v34 - v4;
  uint64_t v6 = sub_256175868();
  uint64_t v41 = *(void *)(v6 - 8);
  uint64_t v42 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v38 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v37 = (char *)&v34 - v9;
  sub_2560A8058(0, &qword_269F46218, MEMORY[0x263F8EF38], MEMORY[0x263EFDE58]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v34 - v13;
  uint64_t v15 = sub_256175A08();
  uint64_t v34 = *(void *)(v15 - 8);
  uint64_t v16 = v34;
  uint64_t v35 = v15;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v34 - v20;
  id v22 = objc_msgSend(self, sel_hk_gregorianCalendarWithLocalTimeZone);
  sub_256175988();

  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_observerQuery) = 0;
  *(void *)(v23 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_timeChangeObserver) = 0;
  uint64_t v24 = v23 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model__availableWidth;
  uint64_t v43 = 0;
  sub_256175C48();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v24, v14, v11);
  *(void *)(v23 + 16) = a1;
  id v36 = a1;
  uint64_t v25 = (uint64_t)v37;
  sub_256175858();
  sub_255F77638();
  uint64_t v27 = (uint64_t *)&v5[*(int *)(v26 + 48)];
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v38, v25, v42);
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  uint64_t v29 = v35;
  v28(v19, v21, v35);
  sub_256177D58();
  *uint64_t v27 = sub_2560A32EC(v25);
  v27[1] = v30;
  swift_storeEnumTagMultiPayload();
  swift_beginAccess();
  sub_2560A80F4((uint64_t)v5, v40, (uint64_t (*)(void))_s9ViewModelOMa);
  sub_256175C48();
  sub_2560A8348((uint64_t)v5, (uint64_t (*)(void))_s9ViewModelOMa);
  swift_endAccess();
  v28((char *)(v23 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_gregorianCalendar), v21, v29);
  *(unsigned char *)(v23 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_timeRange) = 1;
  uint64_t v31 = (uint64_t (**)())(v23 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_endDate);
  *uint64_t v31 = sub_2560A28F4;
  v31[1] = 0;
  uint64_t v32 = (uint64_t (**)())(v23 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_now);
  *uint64_t v32 = sub_2560A28F4;
  v32[1] = 0;
  sub_2560A39E0();
  sub_2560A3B94();

  (*(void (**)(char *, uint64_t))(v34 + 8))(v21, v29);
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v25, v42);
  return v23;
}

uint64_t StateOfMindTimeline.Model.__allocating_init(healthStore:gregorianCalendar:timeRange:endDate:now:)(void *a1, uint64_t a2, unsigned __int8 *a3, void (*a4)(id), void (*a5)(id), uint64_t a6, uint64_t a7)
{
  swift_allocObject();
  uint64_t v14 = sub_2560A76FC(a1, a2, a3, a4, a5, a6, a7);

  swift_release();
  swift_release();
  return v14;
}

uint64_t StateOfMindTimeline.Model.init(healthStore:gregorianCalendar:timeRange:endDate:now:)(void *a1, uint64_t a2, unsigned __int8 *a3, void (*a4)(id), void (*a5)(id), uint64_t a6, uint64_t a7)
{
  uint64_t v8 = sub_2560A76FC(a1, a2, a3, a4, a5, a6, a7);

  swift_release();
  swift_release();
  return v8;
}

uint64_t sub_2560A32EC(uint64_t a1)
{
  uint64_t v2 = sub_256175788();
  uint64_t v39 = *(void *)(v2 - 8);
  uint64_t v40 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v38 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_2561756D8();
  uint64_t v44 = *(void *)(v4 - 8);
  uint64_t v45 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_256175738();
  uint64_t v7 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2561757B8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v37 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v37 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v43 = (char *)&v37 - v21;
  sub_2560A82E4(0, &qword_269F462E8, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v24 = (char *)&v37 - v23;
  uint64_t v46 = a1;
  if (sub_256175908())
  {
    uint64_t v25 = sub_2561758C8();
    uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
    uint64_t v41 = v24;
    v26(v24, 1, 1, v25);
    sub_2560A8AF0();
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_2561A0960;
    uint64_t v40 = v27 + 32;
    MEMORY[0x25A29DDD0]();
    sub_256175728();
    sub_2561756B8();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v42);
    uint64_t v28 = *(void (**)(char *, uint64_t))(v11 + 8);
    v28(v17, v10);
    sub_2561756C8();
    uint64_t v29 = v43;
    sub_256175698();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v6, v45);
    v28(v20, v10);
    *(void *)(v27 + 56) = MEMORY[0x263F8D310];
    *(void *)(v27 + 64) = sub_2560A8BA8();
    sub_2560A8AA8(&qword_269F44BF8, MEMORY[0x263F07258]);
    sub_256175848();
    v28(v29, v10);
    if (qword_269F42348 != -1) {
      swift_once();
    }
    id v30 = (id)qword_269F50C88;
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_2561755B8();
    if (*(void *)(v27 + 16))
    {
      uint64_t v32 = (uint64_t)v41;
      uint64_t v31 = sub_256177EF8();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();

      uint64_t v32 = (uint64_t)v41;
    }
    swift_bridgeObjectRelease();
    sub_2560A8BFC(v32, &qword_269F462E8, MEMORY[0x263F07690]);
  }
  else
  {
    MEMORY[0x25A29DDD0]();
    sub_256175728();
    sub_2561756B8();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v42);
    uint64_t v33 = *(void (**)(char *, uint64_t))(v11 + 8);
    v33(v14, v10);
    sub_2561756C8();
    sub_256175698();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v6, v45);
    v33(v17, v10);
    uint64_t v34 = v38;
    sub_256175748();
    uint64_t v35 = v43;
    sub_2561757A8();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v34, v40);
    v33(v20, v10);
    sub_2560A8AA8(&qword_269F44BF8, MEMORY[0x263F07258]);
    sub_256175848();
    v33(v35, v10);
    return v47;
  }
  return v31;
}

void sub_2560A39E0()
{
  uint64_t v1 = *v0;
  sub_255FB58F8(0, &qword_269F46810);
  id v2 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_stateOfMindType);
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v1;
  id v5 = objc_allocWithZone(MEMORY[0x263F0A5A0]);
  v9[4] = sub_2560A8A28;
  v9[5] = v4;
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 1107296256;
  v9[2] = sub_2560A61E8;
  v9[3] = &block_descriptor_51;
  uint64_t v6 = _Block_copy(v9);
  swift_retain();
  id v7 = objc_msgSend(v5, sel_initWithSampleType_predicate_updateHandler_, v2, 0, v6);

  _Block_release(v6);
  swift_release();
  swift_release();
  objc_msgSend((id)v0[2], sel_executeQuery_, v7);
  uint64_t v8 = *(void **)((char *)v0 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_observerQuery);
  *(uint64_t *)((char *)v0 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_observerQuery) = (uint64_t)v7;
}

uint64_t sub_2560A3B94()
{
  id v1 = objc_msgSend(self, sel_defaultCenter);
  uint64_t v2 = *MEMORY[0x263F83390];
  id v3 = objc_msgSend(self, sel_mainQueue);
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  v8[4] = sub_2560A7F4C;
  v8[5] = v4;
  v8[0] = MEMORY[0x263EF8330];
  v8[1] = 1107296256;
  void v8[2] = sub_2560A4E28;
  v8[3] = &block_descriptor_9;
  id v5 = _Block_copy(v8);
  swift_release();
  id v6 = objc_msgSend(v1, sel_addObserverForName_object_queue_usingBlock_, v2, 0, v3, v5);
  _Block_release(v5);

  *(void *)(v0 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_timeChangeObserver) = v6;
  return swift_unknownObjectRelease();
}

uint64_t StateOfMindTimeline.Model.deinit()
{
  uint64_t v1 = OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_timeChangeObserver;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_timeChangeObserver);
  if (v2)
  {
    id v3 = self;
    swift_unknownObjectRetain();
    id v4 = objc_msgSend(v3, sel_defaultCenter);
    objc_msgSend(v4, sel_removeObserver_, v2);
    swift_unknownObjectRelease();
  }
  *(void *)(v0 + v1) = 0;
  swift_unknownObjectRelease();
  uint64_t v5 = OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_observerQuery;
  if (*(void *)(v0 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_observerQuery))
  {
    objc_msgSend(*(id *)(v0 + 16), sel_stopQuery_);
    id v6 = *(void **)(v0 + v5);
  }
  else
  {
    id v6 = 0;
  }
  *(void *)(v0 + v5) = 0;

  uint64_t v7 = v0 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_gregorianCalendar;
  uint64_t v8 = sub_256175A08();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_release();
  swift_release();

  swift_unknownObjectRelease();
  uint64_t v9 = v0 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model__viewModel;
  sub_2560A82E4(0, &qword_269F46260, (uint64_t (*)(uint64_t))_s9ViewModelOMa, MEMORY[0x263EFDE58]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = v0 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model__availableWidth;
  sub_2560A8058(0, &qword_269F46218, MEMORY[0x263F8EF38], MEMORY[0x263EFDE58]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  return v0;
}

uint64_t StateOfMindTimeline.Model.__deallocating_deinit()
{
  StateOfMindTimeline.Model.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_2560A3F84(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v7 = sub_256175B68();
  uint64_t v34 = *(void *)(v7 - 8);
  uint64_t v35 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_256177A18();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_256177A48();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4)
  {
    id v18 = a4;
    sub_256175B48();
    id v19 = a4;
    id v20 = a4;
    uint64_t v21 = sub_256175B58();
    os_log_type_t v22 = sub_256178218();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      aBlock[0] = v24;
      *(_DWORD *)uint64_t v23 = 136446466;
      uint64_t v25 = sub_256178978();
      uint64_t v36 = sub_255FB29A8(v25, v26, aBlock);
      sub_256178458();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      uint64_t v36 = (uint64_t)a4;
      id v27 = a4;
      sub_2560A8B58(0, (unint64_t *)&qword_269F43A30);
      uint64_t v28 = sub_256177F18();
      uint64_t v36 = sub_255FB29A8(v28, v29, aBlock);
      sub_256178458();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_255F58000, v21, v22, "[%{public}s] HKStateOfMind observer query failed: %s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25A2A1E90](v24, -1, -1);
      MEMORY[0x25A2A1E90](v23, -1, -1);
    }
    else
    {
    }
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v9, v35);
  }
  else
  {
    sub_255FB58F8(0, (unint64_t *)&qword_26B2AD368);
    uint64_t v35 = sub_2561782D8();
    aBlock[4] = (uint64_t)sub_2560A8A78;
    aBlock[5] = a5;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_255FA9E78;
    aBlock[3] = (uint64_t)&block_descriptor_57;
    id v30 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    sub_256177A38();
    aBlock[0] = MEMORY[0x263F8EE78];
    sub_2560A8AA8((unint64_t *)&unk_269F44D10, MEMORY[0x263F8F030]);
    sub_2560A82E4(0, &qword_269F439E0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
    sub_255FAED28();
    sub_2561784C8();
    uint64_t v31 = (void *)v35;
    MEMORY[0x25A2A0D70](0, v17, v13, v30);
    _Block_release(v30);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
}

uint64_t sub_2560A44A8()
{
  uint64_t v1 = v0;
  uint64_t v69 = *v0;
  uint64_t v2 = sub_256177A18();
  uint64_t v65 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v4 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_256177A48();
  uint64_t v67 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v66 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_256177A28();
  uint64_t v60 = *(void *)(v7 - 8);
  uint64_t v61 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v59 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560A7F6C();
  uint64_t v62 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v63 = v11;
  uint64_t v64 = (uint64_t)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v54 - v12;
  uint64_t v14 = dispatch_group_create();
  sub_2560A28F8(v13);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 0;
  dispatch_group_enter(v14);
  uint64_t v16 = sub_256177D78();
  uint64_t result = sub_256177D98();
  uint64_t v18 = result + 1;
  if (__OFADD__(result, 1))
  {
    __break(1u);
  }
  else
  {
    BOOL v19 = *((unsigned char *)v0 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_timeRange) == 0;
    uint64_t v58 = v5;
    if (v19) {
      uint64_t v20 = 1;
    }
    else {
      uint64_t v20 = 7;
    }
    uint64_t v21 = (void *)swift_allocObject();
    uint64_t v57 = v4;
    os_log_type_t v22 = v21;
    v21[2] = v15;
    v21[3] = v14;
    uint64_t v68 = v15;
    v21[4] = v69;
    id v23 = objc_allocWithZone(MEMORY[0x263F55010]);
    uint64_t v56 = v2;
    id v24 = v23;
    swift_retain();
    uint64_t v25 = v14;
    unint64_t v26 = (void *)sub_256175978();
    uint64_t v75 = sub_2560A803C;
    uint64_t v76 = v22;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v72 = 1107296256;
    uint64_t v73 = sub_2560D3C9C;
    uint64_t v74 = &block_descriptor_15;
    id v27 = _Block_copy(&aBlock);
    id v28 = objc_msgSend(v24, sel_initWithDayIndexRange_gregorianCalendar_ascending_limit_resultsHandler_, v16, v18, v26, 1, v20, v27);
    id v55 = v28;
    _Block_release(v27);

    swift_release();
    unint64_t v29 = (void *)v1[2];
    objc_msgSend(v29, sel_executeQuery_, v28);
    uint64_t v30 = swift_allocObject();
    *(unsigned char *)(v30 + 16) = 2;
    dispatch_group_enter(v25);
    sub_2560A8058(0, (unint64_t *)&qword_269F43AB0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_2561A27B0;
    sub_255FB58F8(0, &qword_269F46810);
    id v32 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_stateOfMindType);
    id v33 = objc_msgSend(self, sel_queryDescriptorWithSampleType_, v32);

    *(void *)(v31 + 32) = v33;
    uint64_t aBlock = v31;
    sub_256178018();
    uint64_t v34 = (void *)swift_allocObject();
    v34[2] = v30;
    v34[3] = v25;
    v34[4] = v69;
    id v35 = objc_allocWithZone(MEMORY[0x263F0A6E0]);
    sub_255FB58F8(0, &qword_269F46288);
    uint64_t v69 = v25;
    swift_retain();
    uint64_t v36 = (void *)sub_256177FF8();
    swift_bridgeObjectRelease();
    uint64_t v75 = sub_2560A80E8;
    uint64_t v76 = v34;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v72 = 1107296256;
    uint64_t v73 = sub_2560A62BC;
    uint64_t v74 = &block_descriptor_24;
    uint64_t v37 = _Block_copy(&aBlock);
    id v38 = objc_msgSend(v35, sel_initWithQueryDescriptors_limit_resultsHandler_, v36, 1, v37);
    id v54 = v38;

    _Block_release(v37);
    swift_release();
    objc_msgSend(v29, sel_executeQuery_, v38);
    sub_255FB58F8(0, (unint64_t *)&qword_26B2AD368);
    uint64_t v40 = v59;
    uint64_t v39 = v60;
    uint64_t v41 = v61;
    (*(void (**)(char *, void, uint64_t))(v60 + 104))(v59, *MEMORY[0x263F8F080], v61);
    uint64_t v42 = (void *)sub_2561782F8();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v41);
    uint64_t v43 = swift_allocObject();
    swift_weakInit();
    uint64_t v44 = v64;
    sub_2560A80F4((uint64_t)v13, v64, (uint64_t (*)(void))sub_2560A7F6C);
    unint64_t v45 = (*(unsigned __int8 *)(v62 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
    uint64_t v46 = (void *)swift_allocObject();
    uint64_t v47 = v68;
    v46[2] = v43;
    v46[3] = v47;
    v46[4] = v30;
    sub_2560A8834(v44, (uint64_t)v46 + v45, (uint64_t (*)(void))sub_2560A7F6C);
    uint64_t v75 = sub_2560A827C;
    uint64_t v76 = v46;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v72 = 1107296256;
    uint64_t v73 = sub_255FA9E78;
    uint64_t v74 = &block_descriptor_31;
    uint64_t v48 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v49 = v66;
    sub_256177A38();
    uint64_t v70 = MEMORY[0x263F8EE78];
    sub_2560A8AA8((unint64_t *)&unk_269F44D10, MEMORY[0x263F8F030]);
    sub_2560A82E4(0, &qword_269F439E0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
    sub_255FAED28();
    uint64_t v50 = (uint64_t)v13;
    char v51 = v57;
    uint64_t v52 = v56;
    sub_2561784C8();
    uint64_t v53 = v69;
    sub_2561782A8();
    _Block_release(v48);

    (*(void (**)(char *, uint64_t))(v65 + 8))(v51, v52);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v49, v58);
    sub_2560A8348(v50, (uint64_t (*)(void))sub_2560A7F6C);
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_2560A4DD0()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_2560A44A8();
    return swift_release();
  }
  return result;
}

uint64_t sub_2560A4E28(uint64_t a1)
{
  uint64_t v2 = sub_256175418();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  sub_2561753F8();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_2560A4F1C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, NSObject *a5)
{
  uint64_t v9 = sub_256175B68();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    id v13 = a3;
    sub_256175B48();
    id v14 = a3;
    id v15 = a3;
    uint64_t v16 = sub_256175B58();
    os_log_type_t v17 = sub_256178218();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v30 = a5;
      uint64_t v19 = v18;
      uint64_t v28 = swift_slowAlloc();
      v32[0] = v28;
      *(_DWORD *)uint64_t v19 = 136446466;
      uint64_t v29 = v9;
      uint64_t v20 = sub_256178978();
      uint64_t v31 = sub_255FB29A8(v20, v21, v32);
      sub_256178458();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2080;
      uint64_t v31 = (uint64_t)a3;
      id v22 = a3;
      sub_2560A8B58(0, (unint64_t *)&qword_269F43A30);
      uint64_t v23 = sub_256177F18();
      uint64_t v31 = sub_255FB29A8(v23, v24, v32);
      sub_256178458();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_255F58000, v16, v17, "[%{public}s] HKMHDaySummaryQuery query failed: %s", (uint8_t *)v19, 0x16u);
      uint64_t v25 = v28;
      swift_arrayDestroy();
      MEMORY[0x25A2A1E90](v25, -1, -1);
      uint64_t v26 = v19;
      a5 = v30;
      MEMORY[0x25A2A1E90](v26, -1, -1);

      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v29);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
  swift_beginAccess();
  *(void *)(a4 + 16) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  dispatch_group_leave(a5);
}

void sub_2560A520C(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, NSObject *a5)
{
  uint64_t v9 = sub_256175B68();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    id v13 = a3;
    sub_256175B48();
    id v14 = a3;
    id v15 = a3;
    uint64_t v16 = sub_256175B58();
    os_log_type_t v17 = sub_256178218();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      id v32 = a5;
      uint64_t v19 = v18;
      uint64_t v30 = swift_slowAlloc();
      v34[0] = v30;
      *(_DWORD *)uint64_t v19 = 136446466;
      uint64_t v31 = a4;
      uint64_t v20 = sub_256178978();
      uint64_t v33 = sub_255FB29A8(v20, v21, v34);
      sub_256178458();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2080;
      uint64_t v33 = (uint64_t)a3;
      id v22 = a3;
      sub_2560A8B58(0, (unint64_t *)&qword_269F43A30);
      uint64_t v23 = sub_256177F18();
      uint64_t v33 = sub_255FB29A8(v23, v24, v34);
      sub_256178458();
      a4 = v31;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_255F58000, v16, v17, "[%{public}s] HKMHDaySummaryQuery query failed: %s", (uint8_t *)v19, 0x16u);
      uint64_t v25 = v30;
      swift_arrayDestroy();
      MEMORY[0x25A2A1E90](v25, -1, -1);
      uint64_t v26 = v19;
      a5 = v32;
      MEMORY[0x25A2A1E90](v26, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  if (a2)
  {
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_256178678();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v27 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    char v28 = v27 != 0;
  }
  else
  {
    char v28 = 2;
  }
  swift_beginAccess();
  *(unsigned char *)(a4 + 16) = v28;
  dispatch_group_leave(a5);
}

uint64_t sub_2560A5530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_beginAccess();
    uint64_t v8 = *(void *)(a2 + 16);
    if (v8) {
      uint64_t v9 = v8;
    }
    else {
      uint64_t v9 = MEMORY[0x263F8EE78];
    }
    swift_beginAccess();
    char v10 = *(unsigned char *)(a3 + 16) & 1;
    swift_bridgeObjectRetain();
    sub_2560A560C(v9, v10, a4);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2560A560C(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_2560A8678(0, &qword_269F46290, &qword_269F46298, MEMORY[0x263F8D1C0], MEMORY[0x263F8DF48]);
  MEMORY[0x270FA5388](v8 - 8);
  char v10 = (char *)&v28 - v9;
  uint64_t v11 = sub_256177A18();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  id v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_256177A48();
  uint64_t v29 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  os_log_type_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v18 = sub_2560A80F4(a3, (uint64_t)v10, (uint64_t (*)(void))sub_2560A7F6C);
    MEMORY[0x270FA5388](v18);
    *(&v28 - 2) = v4;
    *(&v28 - 1) = a1;
    uint64_t v19 = sub_2560A6948((uint64_t)v10, (void (*)(void, char *))sub_2560A842C, (uint64_t)(&v28 - 4));
    sub_2560A8434((uint64_t)v10, &qword_269F46290, MEMORY[0x263F8DF48]);
    sub_255FB58F8(0, (unint64_t *)&qword_26B2AD368);
    uint64_t v20 = sub_2561782D8();
    uint64_t v21 = swift_allocObject();
    swift_weakInit();
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v21;
    *(void *)(v22 + 24) = v19;
    uint64_t v23 = (void *)v20;
    uint64_t v34 = sub_2560A84F0;
    uint64_t v35 = v22;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v31 = 1107296256;
    unint64_t v24 = &block_descriptor_42;
  }
  else
  {
    sub_255FB58F8(0, (unint64_t *)&qword_26B2AD368);
    uint64_t v23 = (void *)sub_2561782D8();
    uint64_t v25 = swift_allocObject();
    swift_weakInit();
    uint64_t v34 = sub_2560A83FC;
    uint64_t v35 = v25;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v31 = 1107296256;
    unint64_t v24 = &block_descriptor_35;
  }
  id v32 = sub_255FA9E78;
  uint64_t v33 = v24;
  uint64_t v26 = _Block_copy(&aBlock);
  swift_release();
  sub_256177A38();
  uint64_t aBlock = MEMORY[0x263F8EE78];
  sub_2560A8AA8((unint64_t *)&unk_269F44D10, MEMORY[0x263F8F030]);
  sub_2560A82E4(0, &qword_269F439E0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
  sub_255FAED28();
  sub_2561784C8();
  MEMORY[0x25A2A0D70](0, v17, v14, v26);
  _Block_release(v26);

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v17, v15);
}

uint64_t sub_2560A5AEC(uint64_t a1, void (*a2)(void))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a2();
    return swift_release();
  }
  return result;
}

uint64_t sub_2560A5B4C()
{
  uint64_t v22 = sub_256175A08();
  uint64_t v1 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = _s9ViewModelOMa();
  uint64_t v4 = MEMORY[0x270FA5388](v21);
  uint64_t v23 = (uint64_t)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_256175868();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v20 - v14;
  (*(void (**)(uint64_t))(v0 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_endDate))(v13);
  sub_255F77638();
  os_log_type_t v17 = (uint64_t *)&v7[*(int *)(v16 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v15, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v0 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_gregorianCalendar, v22);
  sub_256177D58();
  *os_log_type_t v17 = sub_2560A32EC((uint64_t)v15);
  v17[1] = v18;
  swift_storeEnumTagMultiPayload();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2560A80F4((uint64_t)v7, v23, (uint64_t (*)(void))_s9ViewModelOMa);
  swift_retain();
  sub_256175C98();
  sub_2560A8348((uint64_t)v7, (uint64_t (*)(void))_s9ViewModelOMa);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v15, v8);
}

uint64_t sub_2560A5E48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_256175868();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_256177DB8();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = &v21[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t))(v15 + 16))(v14, a2);
  sub_256177DA8();
  uint64_t v16 = sub_2560A32EC((uint64_t)v11);
  uint64_t v18 = v17;
  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v22 = a2;
  uint64_t v19 = sub_2560A185C((uint64_t (*)(id *))sub_2560A8938, (uint64_t)v21, a3);
  return sub_2560190A8(a1, (uint64_t)v14, v16, v18, v19, qword_2704B66B8, a4);
}

uint64_t sub_2560A603C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = _s9ViewModelOMa();
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (uint64_t *)((char *)&v10 - v7);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_256175C88();
    swift_release();
    swift_release();
    swift_bridgeObjectRetain();
    sub_2560F7B3C((uint64_t)v6, a2, v8);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2560A80F4((uint64_t)v8, (uint64_t)v6, (uint64_t (*)(void))_s9ViewModelOMa);
    swift_retain();
    sub_256175C98();
    sub_2560A8348((uint64_t)v8, (uint64_t (*)(void))_s9ViewModelOMa);
    return swift_release();
  }
  return result;
}

void sub_2560A61E8(uint64_t a1, void *a2, void *aBlock, void *a4)
{
  uint64_t v6 = *(void (**)(id, uint64_t (*)(), uint64_t, void *))(a1 + 32);
  uint64_t v7 = _Block_copy(aBlock);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  swift_retain();
  id v10 = a2;
  id v9 = a4;
  v6(v10, sub_2560A8A68, v8, a4);
  swift_release();
  swift_release();
}

uint64_t sub_2560A62BC(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a3;
  uint64_t v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_255FB58F8(0, &qword_269F44958);
    uint64_t v5 = sub_256178008();
  }
  swift_retain();
  id v8 = a2;
  id v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t _s14MentalHealthUI19StateOfMindTimelineO5ModelC05buildgH03day11healthStoreAE10Foundation4DateV_So08HKHealthL0CtFZ_0(uint64_t a1, void *a2)
{
  uint64_t v52 = a1;
  uint64_t v57 = _s9ViewModelOMa();
  uint64_t v3 = MEMORY[0x270FA5388](v57);
  uint64_t v58 = (uint64_t)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v56 = (char *)&v47 - v5;
  sub_2560A8058(0, &qword_269F46218, MEMORY[0x263F8EF38], MEMORY[0x263EFDE58]);
  uint64_t v55 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v47 - v8;
  uint64_t v10 = sub_256175868();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v53 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v47 - v15;
  uint64_t v59 = (char *)&v47 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v47 - v17;
  uint64_t v19 = sub_256175A08();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v60 = v19;
  uint64_t v61 = v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  char v51 = (char *)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v49 = (char *)&v47 - v23;
  unint64_t v24 = self;
  id v48 = a2;
  id v25 = objc_msgSend(v24, sel_hk_gregorianCalendarWithLocalTimeZone);
  sub_256175988();

  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v26(v18, v52, v10);
  v26(v16, (uint64_t)v18, v10);
  uint64_t v27 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v54 = v11;
  uint64_t v28 = (v27 + 16) & ~v27;
  uint64_t v52 = swift_allocObject();
  uint64_t v29 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 32);
  uint64_t v30 = v10;
  uint64_t v50 = v10;
  v29(v52 + v28, v18, v10);
  type metadata accessor for StateOfMindTimeline.Model();
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_observerQuery) = 0;
  *(void *)(v31 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_timeChangeObserver) = 0;
  uint64_t v32 = v31 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model__availableWidth;
  uint64_t v62 = 0;
  sub_256175C48();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v32, v9, v55);
  uint64_t v33 = v48;
  *(void *)(v31 + 16) = v48;
  sub_255F77638();
  uint64_t v35 = (uint64_t)v56;
  uint64_t v36 = (uint64_t *)&v56[*(int *)(v34 + 48)];
  uint64_t v37 = (uint64_t)v59;
  v26(v53, (uint64_t)v59, v30);
  id v38 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
  uint64_t v39 = v49;
  v38(v51, v49, v60);
  id v40 = v33;
  sub_256177D58();
  uint64_t *v36 = sub_2560A32EC(v37);
  v36[1] = v41;
  swift_storeEnumTagMultiPayload();
  swift_beginAccess();
  sub_2560A80F4(v35, v58, (uint64_t (*)(void))_s9ViewModelOMa);
  sub_256175C48();
  sub_2560A8348(v35, (uint64_t (*)(void))_s9ViewModelOMa);
  swift_endAccess();
  uint64_t v42 = v60;
  v38((char *)(v31 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_gregorianCalendar), v39, v60);
  *(unsigned char *)(v31 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_timeRange) = 0;
  uint64_t v43 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v31
                                                   + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_endDate);
  uint64_t v44 = v52;
  *uint64_t v43 = sub_2560A8D04;
  v43[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v44;
  unint64_t v45 = (uint64_t (**)())(v31 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_now);
  *unint64_t v45 = sub_2560A28F4;
  v45[1] = 0;
  swift_retain();
  sub_2560A39E0();
  sub_2560A3B94();
  swift_release();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v59, v50);

  (*(void (**)(char *, uint64_t))(v61 + 8))(v39, v42);
  return v31;
}

uint64_t sub_2560A6948(uint64_t a1, void (*a2)(void, char *), uint64_t a3)
{
  uint64_t v102 = a3;
  long long v101 = a2;
  uint64_t v120 = a1;
  uint64_t v3 = type metadata accessor for StateOfMindTimeline.DaySummary();
  uint64_t v100 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v115 = (uint64_t)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560A7F6C();
  uint64_t v109 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v117 = (uint64_t)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560A8500();
  uint64_t v113 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v122 = (uint64_t)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_256177DB8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  char v108 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  unsigned int v110 = (char *)&v91 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v93 = (char *)&v91 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v92 = (char *)&v91 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v116 = (char *)&v91 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v107 = (char *)&v91 - v21;
  sub_2560A860C();
  uint64_t v106 = v22;
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v105 = (char *)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  long long v99 = (uint64_t *)((char *)&v91 - v26);
  MEMORY[0x270FA5388](v25);
  long long v98 = (char *)&v91 - v27;
  sub_2560A8564();
  uint64_t v29 = MEMORY[0x270FA5388](v28 - 8);
  uint64_t v112 = (char *)&v91 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v104 = (char *)&v91 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v111 = (char *)&v91 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v95 = (uint64_t)&v91 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v121 = (uint64_t)&v91 - v38;
  MEMORY[0x270FA5388](v37);
  id v40 = (char *)&v91 - v39;
  sub_2560A8678(0, &qword_269F462C0, &qword_269F462C8, MEMORY[0x263F8D1E0], MEMORY[0x263F8DE58]);
  uint64_t v42 = v41 - 8;
  MEMORY[0x270FA5388](v41);
  uint64_t v44 = (char *)&v91 - v43;
  uint64_t v45 = MEMORY[0x263F8D1C0];
  sub_2560A8678(0, &qword_269F46290, &qword_269F46298, MEMORY[0x263F8D1C0], MEMORY[0x263F8DF48]);
  MEMORY[0x270FA5388](v46 - 8);
  id v48 = (char *)&v91 - v47;
  sub_2560A8678(0, &qword_269F462D0, &qword_269F46298, v45, MEMORY[0x263F8DF40]);
  uint64_t v50 = v49 - 8;
  MEMORY[0x270FA5388](v49);
  uint64_t v52 = (char *)&v91 - v51;
  uint64_t v124 = MEMORY[0x263F8EE78];
  sub_2560E87DC(0, 0, 0);
  sub_2560A8798(v120, (uint64_t)v48);
  sub_2560A80F4((uint64_t)v48, (uint64_t)v44, (uint64_t (*)(void))sub_2560A7F6C);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v40, v48, v9);
  uint64_t v53 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v10 += 56;
  uint64_t v119 = v53;
  v53((uint64_t)v40, 0, 1, v9);
  sub_2560A8348((uint64_t)v48, (uint64_t (*)(void))sub_2560A7F6C);
  sub_2560A8834((uint64_t)v40, (uint64_t)&v44[*(int *)(v42 + 44)], (uint64_t (*)(void))sub_2560A8564);
  sub_2560A889C((uint64_t)v44, (uint64_t)v52);
  uint64_t v103 = *(int *)(v50 + 44);
  *(void *)&v52[v103] = 0;
  uint64_t v54 = *(int *)(v42 + 44);
  uint64_t v118 = v52;
  uint64_t v55 = (uint64_t)&v52[v54];
  uint64_t v56 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 - 8);
  uint64_t v57 = (void (**)(char *, uint64_t, uint64_t))(v10 - 24);
  uint64_t v120 = v10;
  char v114 = (void (**)(uint64_t, uint64_t))(v10 - 48);
  long long v97 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 - 8);
  long long v96 = &v52[v54];
  while (1)
  {
    uint64_t v58 = v121;
    v119(v121, 1, 1, v9);
    uint64_t v59 = v122;
    uint64_t v60 = v122 + *(int *)(v113 + 48);
    sub_2560A80F4(v55, v122, (uint64_t (*)(void))sub_2560A8564);
    sub_2560A80F4(v58, v60, (uint64_t (*)(void))sub_2560A8564);
    uint64_t v61 = *v56;
    if ((*v56)(v59, 1, v9) == 1)
    {
      unsigned int v62 = v61(v60, 1, v9);
      uint64_t v64 = (uint64_t)v111;
      uint64_t v63 = (uint64_t)v112;
      if (v62 == 1)
      {
        sub_2560A8348(v122, (uint64_t (*)(void))sub_2560A8564);
        sub_2560A8348(v121, (uint64_t (*)(void))sub_2560A8564);
LABEL_20:
        sub_2560A8434((uint64_t)v118, &qword_269F462D0, MEMORY[0x263F8DF40]);
        return v124;
      }
      goto LABEL_7;
    }
    uint64_t v65 = v95;
    sub_2560A80F4(v122, v95, (uint64_t (*)(void))sub_2560A8564);
    if (v61(v60, 1, v9) == 1)
    {
      (*v114)(v65, v9);
      uint64_t v64 = (uint64_t)v111;
      uint64_t v63 = (uint64_t)v112;
LABEL_7:
      sub_2560A8348(v122, (uint64_t (*)(void))sub_2560A8500);
      sub_2560A8348(v121, (uint64_t (*)(void))sub_2560A8564);
      goto LABEL_9;
    }
    uint64_t v66 = *v57;
    uint64_t v67 = v92;
    (*v57)(v92, v65, v9);
    uint64_t v68 = v93;
    v66(v93, v60, v9);
    sub_2560A8AA8(&qword_269F462D8, MEMORY[0x263F090E8]);
    int v94 = sub_256177E98();
    uint64_t v69 = *v114;
    (*v114)((uint64_t)v68, v9);
    v69((uint64_t)v67, v9);
    sub_2560A8348(v122, (uint64_t (*)(void))sub_2560A8564);
    sub_2560A8348(v121, (uint64_t (*)(void))sub_2560A8564);
    uint64_t v64 = (uint64_t)v111;
    uint64_t v63 = (uint64_t)v112;
    if (v94) {
      goto LABEL_20;
    }
LABEL_9:
    sub_2560A80F4(v55, v64, (uint64_t (*)(void))sub_2560A8564);
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v61)(v64, 1, v9);
    if (result == 1) {
      goto LABEL_22;
    }
    uint64_t v71 = *v57;
    uint64_t v72 = v110;
    (*v57)(v110, v64, v9);
    v71(v116, (uint64_t)v72, v9);
    sub_2560A80F4((uint64_t)v118, v117, (uint64_t (*)(void))sub_2560A7F6C);
    sub_2560A80F4(v55, v63, (uint64_t (*)(void))sub_2560A8564);
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v61)(v63, 1, v9);
    if (result == 1) {
      goto LABEL_23;
    }
    uint64_t v73 = v108;
    v71(v108, v63, v9);
    sub_2560A8AA8(&qword_269F462D8, MEMORY[0x263F090E8]);
    if (sub_256177E98())
    {
      (*v114)((uint64_t)v73, v9);
      uint64_t v74 = 1;
      uint64_t v75 = v106;
      uint64_t v76 = (uint64_t)v104;
    }
    else
    {
      uint64_t v123 = 1;
      sub_2560A8AA8((unint64_t *)&unk_269F467B0, MEMORY[0x263F090E8]);
      uint64_t v76 = (uint64_t)v104;
      sub_256178478();
      (*v114)((uint64_t)v73, v9);
      uint64_t v74 = 0;
      uint64_t v75 = v106;
    }
    v119(v76, v74, 1, v9);
    sub_2560A8348(v117, (uint64_t (*)(void))sub_2560A7F6C);
    sub_2560A8348(v55, (uint64_t (*)(void))sub_2560A8564);
    sub_2560A8834(v76, v55, (uint64_t (*)(void))sub_2560A8564);
    uint64_t v77 = v107;
    v71(v107, (uint64_t)v116, v9);
    uint64_t v78 = v75;
    uint64_t v79 = &v105[*(int *)(v75 + 48)];
    uint64_t v80 = (uint64_t)v118;
    uint64_t v81 = v57;
    uint64_t v82 = v103;
    uint64_t v83 = *(void *)&v118[v103];
    uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v71)(v79, v77, v9);
    if (__OFADD__(v83, 1)) {
      break;
    }
    *(void *)(v80 + v82) = v83 + 1;
    uint64_t v84 = (uint64_t)v99;
    uint64_t v85 = (char *)v99 + *(int *)(v78 + 48);
    *long long v99 = v83;
    v71(v85, (uint64_t)v79, v9);
    uint64_t v86 = v98;
    sub_2560A8834(v84, (uint64_t)v98, (uint64_t (*)(void))sub_2560A860C);
    v101(*(void *)v86, &v86[*(int *)(v78 + 48)]);
    sub_2560A8348((uint64_t)v86, (uint64_t (*)(void))sub_2560A860C);
    uint64_t v87 = v124;
    uint64_t v57 = v81;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_2560E87DC(0, *(void *)(v87 + 16) + 1, 1);
      uint64_t v87 = v124;
    }
    uint64_t v88 = (uint64_t)v96;
    unint64_t v90 = *(void *)(v87 + 16);
    unint64_t v89 = *(void *)(v87 + 24);
    uint64_t v56 = v97;
    if (v90 >= v89 >> 1)
    {
      sub_2560E87DC(v89 > 1, v90 + 1, 1);
      uint64_t v87 = v124;
    }
    *(void *)(v87 + 16) = v90 + 1;
    sub_2560A8834(v115, v87+ ((*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80))+ *(void *)(v100 + 72) * v90, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.DaySummary);
    uint64_t v55 = v88;
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_2560A76FC(void *a1, uint64_t a2, unsigned __int8 *a3, void (*a4)(id), void (*a5)(id), uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v52 = a6;
  uint64_t v53 = a7;
  uint64_t v54 = a5;
  uint64_t v55 = a4;
  uint64_t v50 = a2;
  uint64_t v45 = a1;
  uint64_t v49 = sub_256175A08();
  uint64_t v56 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v47 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = _s9ViewModelOMa();
  uint64_t v11 = MEMORY[0x270FA5388](v48);
  uint64_t v51 = (uint64_t)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v42 - v13;
  uint64_t v15 = sub_256175868();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v43 = v15;
  uint64_t v44 = v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v42 - v20;
  sub_2560A8058(0, &qword_269F46218, MEMORY[0x263F8EF38], MEMORY[0x263EFDE58]);
  uint64_t v23 = v22;
  uint64_t v24 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v42 - v25;
  int v46 = *a3;
  *(void *)(v8 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_observerQuery) = 0;
  *(void *)(v8 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_timeChangeObserver) = 0;
  uint64_t v27 = v8 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model__availableWidth;
  uint64_t v57 = 0;
  sub_256175C48();
  (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v27, v26, v23);
  uint64_t v28 = v45;
  *(void *)(v8 + 16) = v45;
  id v29 = v28;
  v55(v29);
  sub_255F77638();
  uint64_t v31 = (uint64_t *)&v14[*(int *)(v30 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v21, v15);
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v56 + 16);
  uint64_t v34 = v49;
  uint64_t v33 = v50;
  v32(v47, v50, v49);
  sub_256177D58();
  uint64_t v35 = v33;
  *uint64_t v31 = sub_2560A32EC((uint64_t)v21);
  v31[1] = v36;
  swift_storeEnumTagMultiPayload();
  swift_beginAccess();
  sub_2560A80F4((uint64_t)v14, v51, (uint64_t (*)(void))_s9ViewModelOMa);
  sub_256175C48();
  sub_2560A8348((uint64_t)v14, (uint64_t (*)(void))_s9ViewModelOMa);
  swift_endAccess();
  v32((char *)(v8 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_gregorianCalendar), v33, v34);
  *(unsigned char *)(v8 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_timeRange) = v46;
  uint64_t v37 = (void (**)(id))(v8 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_endDate);
  uint64_t v38 = v54;
  *uint64_t v37 = v55;
  v37[1] = v38;
  uint64_t v39 = (void *)(v8 + OBJC_IVAR____TtCO14MentalHealthUI19StateOfMindTimeline5Model_now);
  uint64_t v40 = v53;
  *uint64_t v39 = v52;
  v39[1] = v40;
  swift_retain();
  swift_retain();
  sub_2560A39E0();
  sub_2560A3B94();
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v35, v34);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v21, v43);
  return v8;
}

unint64_t sub_2560A7BA0()
{
  unint64_t result = qword_269F46268;
  if (!qword_269F46268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46268);
  }
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindTimeline()
{
  return &type metadata for StateOfMindTimeline;
}

uint64_t sub_2560A7C04()
{
  return type metadata accessor for StateOfMindTimeline.Model();
}

uint64_t type metadata accessor for StateOfMindTimeline.Model()
{
  uint64_t result = qword_269F46270;
  if (!qword_269F46270) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2560A7C58()
{
  sub_256175A08();
  if (v0 <= 0x3F)
  {
    sub_2560A82E4(319, &qword_269F46260, (uint64_t (*)(uint64_t))_s9ViewModelOMa, MEMORY[0x263EFDE58]);
    if (v1 <= 0x3F)
    {
      sub_2560A8058(319, &qword_269F46218, MEMORY[0x263F8EF38], MEMORY[0x263EFDE58]);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for StateOfMindTimeline.Model(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for StateOfMindTimeline.Model);
}

uint64_t dispatch thunk of StateOfMindTimeline.Model.__allocating_init(healthStore:gregorianCalendar:timeRange:endDate:now:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

unsigned char *storeEnumTagSinglePayload for StateOfMindTimeline.Model.TimeRange(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2560A7EDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindTimeline.Model.TimeRange()
{
  return &type metadata for StateOfMindTimeline.Model.TimeRange;
}

uint64_t sub_2560A7F14()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_2560A7F4C()
{
  return sub_2560A4DD0();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

void sub_2560A7F6C()
{
  if (!qword_269F46280)
  {
    sub_256177DB8();
    sub_2560A8AA8((unint64_t *)&unk_269F476D0, MEMORY[0x263F090E8]);
    unint64_t v0 = sub_256177E78();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46280);
    }
  }
}

uint64_t sub_2560A8000()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_2560A803C(uint64_t a1, uint64_t a2, void *a3)
{
  sub_2560A4F1C(a1, a2, a3, *(void *)(v3 + 16), *(NSObject **)(v3 + 24));
}

uint64_t sub_2560A8048()
{
  return swift_deallocObject();
}

void sub_2560A8058(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t objectdestroy_11Tm()
{
  swift_release();

  return swift_deallocObject();
}

void sub_2560A80E8(uint64_t a1, unint64_t a2, void *a3)
{
  sub_2560A520C(a1, a2, a3, *(void *)(v3 + 16), *(NSObject **)(v3 + 24));
}

uint64_t sub_2560A80F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2560A815C()
{
  sub_2560A7F6C();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v4;
  uint64_t v6 = sub_256177DB8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(v5 + *(int *)(v2 + 44), v6);

  return swift_deallocObject();
}

uint64_t sub_2560A827C()
{
  sub_2560A7F6C();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = (uint64_t)v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return sub_2560A5530(v3, v4, v5, v6);
}

void sub_2560A82E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2560A8348(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_2560A83A8()
{
  unint64_t result = qword_269F462A0;
  if (!qword_269F462A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F462A0);
  }
  return result;
}

uint64_t sub_2560A83FC()
{
  return sub_2560A5AEC(v0, (void (*)(void))sub_2560A5B4C);
}

uint64_t sub_2560A842C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2560A5E48(a1, a2, *(void *)(v3 + 24), a3);
}

uint64_t sub_2560A8434(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  sub_2560A8678(0, a2, &qword_269F46298, MEMORY[0x263F8D1C0], a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_2560A84B0()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_2560A84F0()
{
  return sub_2560A603C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_2560A8500()
{
  if (!qword_269F462A8)
  {
    sub_2560A8564();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F462A8);
    }
  }
}

void sub_2560A8564()
{
  if (!qword_269F462B0)
  {
    sub_256177DB8();
    sub_2560A8AA8((unint64_t *)&unk_269F467B0, MEMORY[0x263F090E8]);
    sub_2560A83A8();
    unint64_t v0 = sub_256177E88();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F462B0);
    }
  }
}

void sub_2560A860C()
{
  if (!qword_269F462B8)
  {
    sub_256177DB8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F462B8);
    }
  }
}

void sub_2560A8678(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_2560A7F6C();
    uint64_t v10 = v9;
    uint64_t v11 = sub_2560A86FC(a3);
    unint64_t v12 = a5(a1, v10, v11);
    if (!v13) {
      atomic_store(v12, a2);
    }
  }
}

uint64_t sub_2560A86FC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2560A7F6C();
    sub_2560A8AA8((unint64_t *)&unk_269F467B0, MEMORY[0x263F090E8]);
    sub_2560A83A8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2560A8798(uint64_t a1, uint64_t a2)
{
  sub_2560A8678(0, &qword_269F46290, &qword_269F46298, MEMORY[0x263F8D1C0], MEMORY[0x263F8DF48]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2560A8834(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2560A889C(uint64_t a1, uint64_t a2)
{
  sub_2560A8678(0, &qword_269F462C0, &qword_269F462C8, MEMORY[0x263F8D1E0], MEMORY[0x263F8DE58]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL sub_2560A8938(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_dayIndex);
  return v1 == (id)sub_256177D78();
}

void sub_2560A8988()
{
  if (!qword_269F462E0)
  {
    sub_256177DB8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F462E0);
    }
  }
}

uint64_t sub_2560A89F0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2560A8A28(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_2560A3F84(a1, a2, a3, a4, *(void *)(v4 + 16));
}

uint64_t sub_2560A8A30()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_2560A8A68()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_2560A8A78()
{
  return sub_2560A5AEC(v0, (void (*)(void))sub_2560A44A8);
}

uint64_t sub_2560A8AA8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2560A8AF0()
{
  if (!qword_269F462F0)
  {
    sub_2560A8B58(255, (unint64_t *)&qword_269F462F8);
    unint64_t v0 = sub_2561787F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F462F0);
    }
  }
}

uint64_t sub_2560A8B58(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_2560A8BA8()
{
  unint64_t result = qword_269F46300;
  if (!qword_269F46300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46300);
  }
  return result;
}

uint64_t sub_2560A8BFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_2560A82E4(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_2560A8C74()
{
  uint64_t v1 = sub_256175868();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_2560A8D04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_256175868();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return v5(a1, v6, v3);
}

double StateOfMindVisualization.ValenceImage.init(valence:imageScale:)@<D0>(uint64_t a1@<X8>, double a2@<D0>)
{
  StateOfMindVisualization.ValenceImageProvider.init(valence:imageScale:)(&v5, a2);
  double result = *(double *)&v5;
  uint64_t v4 = v6;
  *(_OWORD *)a1 = v5;
  *(void *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_2560A8DFC(uint64_t a1, double a2)
{
  uint64_t v4 = sub_256175D98();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  if ((*(unsigned int (**)(char *, uint64_t))(v5 + 88))(v7, v4) == *MEMORY[0x263F184F8])
  {
    swift_getKeyPath();
    CGColorRef GenericRGB = CGColorCreateGenericRGB(1.0, 1.0, 1.0, 1.0);
    uint64_t v9 = sub_2560AB024;
  }
  else
  {
    swift_getKeyPath();
    CGColorRef GenericRGB = CGColorCreateGenericRGB(0.0, 0.0, 0.0, 1.0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v9 = sub_2560AABA0;
  }
  uint64_t v10 = (uint64_t (*)(double))v9;
  sub_2560AAD50(fmax(fmin(a2, 1.0), -1.0));
  unint64_t v12 = v11;
  uint64_t v13 = v10(0.6);
  uint64_t v14 = MEMORY[0x25A29FE60](v13);

  swift_release();
  return v14;
}

uint64_t sub_2560A8FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a1;
  uint64_t v8 = sub_2560AA124(a1, a2, a3);
  uint64_t v30 = MEMORY[0x263F8EE78];
  uint64_t result = sub_2560E86BC(0, v8 & ~(v8 >> 63), 0);
  if (v8 < 0) {
    goto LABEL_52;
  }
  uint64_t result = v30;
  uint64_t v10 = a4 + 0x4000000000000000;
  if (v8)
  {
    if ((v10 & 0x8000000000000000) == 0)
    {
      int v11 = 0;
      unint64_t v12 = 0;
      BOOL v13 = 0;
      double v14 = (double)(2 * a4);
      while (1)
      {
        BOOL v15 = v7 <= a2;
        if (a3 > 0) {
          BOOL v15 = v7 >= a2;
        }
        if (v15)
        {
          if (v11 & 1 | (v7 != a2)) {
            goto LABEL_50;
          }
          if (!v13 && v12 == 0x8000000000000000) {
            goto LABEL_51;
          }
          int v11 = 1;
          unint64_t v16 = a2;
        }
        else
        {
          BOOL v13 = !__OFADD__(v7, a3);
          if (__OFADD__(v7, a3)) {
            unint64_t v12 = 0x8000000000000000;
          }
          else {
            unint64_t v12 = 0;
          }
          if (__OFADD__(v7, a3)) {
            unint64_t v16 = ((v7 + a3) >> 63) ^ 0x8000000000000000;
          }
          else {
            unint64_t v16 = v7 + a3;
          }
        }
        uint64_t v31 = result;
        unint64_t v18 = *(void *)(result + 16);
        unint64_t v17 = *(void *)(result + 24);
        if (v18 >= v17 >> 1)
        {
          unint64_t v26 = v12;
          uint64_t v28 = v10;
          int v24 = v11;
          sub_2560E86BC(v17 > 1, v18 + 1, 1);
          int v11 = v24;
          unint64_t v12 = v26;
          uint64_t v10 = v28;
          uint64_t result = v31;
        }
        *(void *)(result + 16) = v18 + 1;
        *(double *)(result + 8 * v18 + 32) = (double)v7 / v14;
        uint64_t v7 = v16;
        if (!--v8)
        {
          uint64_t v7 = v16;
          goto LABEL_25;
        }
      }
    }
    goto LABEL_53;
  }
  int v11 = 0;
  unint64_t v12 = 0;
  BOOL v13 = 0;
  double v14 = (double)(2 * a4);
  while (1)
  {
LABEL_25:
    BOOL v19 = v7 <= a2;
    if (a3 > 0) {
      BOOL v19 = v7 >= a2;
    }
    if (v19) {
      break;
    }
    BOOL v21 = __OFADD__(v7, a3);
    if (v21) {
      uint64_t v20 = (a3 >> 63) ^ 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v20 = v7 + a3;
    }
    if (v21) {
      unint64_t v12 = 0x8000000000000000;
    }
    else {
      unint64_t v12 = 0;
    }
    BOOL v13 = !v21;
    if (v10 < 0) {
      goto LABEL_49;
    }
LABEL_45:
    uint64_t v32 = result;
    unint64_t v23 = *(void *)(result + 16);
    unint64_t v22 = *(void *)(result + 24);
    if (v23 >= v22 >> 1)
    {
      unint64_t v27 = v12;
      uint64_t v29 = v10;
      int v25 = v11;
      sub_2560E86BC(v22 > 1, v23 + 1, 1);
      int v11 = v25;
      unint64_t v12 = v27;
      uint64_t v10 = v29;
      uint64_t result = v32;
    }
    *(void *)(result + 16) = v23 + 1;
    *(double *)(result + 8 * v23 + 32) = (double)v7 / v14;
    uint64_t v7 = v20;
  }
  if ((v7 != a2) | v11 & 1) {
    return result;
  }
  if (v13)
  {
    int v11 = 1;
    uint64_t v20 = a2;
    BOOL v13 = 1;
    if (v10 < 0) {
      goto LABEL_49;
    }
    goto LABEL_45;
  }
  if (v12 == 0x8000000000000000) {
    return result;
  }
  BOOL v13 = 0;
  int v11 = 1;
  uint64_t v20 = a2;
  if ((v10 & 0x8000000000000000) == 0) {
    goto LABEL_45;
  }
LABEL_49:
  __break(1u);
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
  return result;
}

CGColorRef sub_2560A92A0()
{
  switch(*v0)
  {
    case 1:
      CGFloat v1 = 0.666666667;
      CGFloat v2 = 0.709803922;
      goto LABEL_5;
    case 2:
      CGFloat v1 = 0.68627451;
      CGFloat v2 = 0.752941176;
LABEL_5:
      uint64_t v3 = 0x3FEC1C1C1C1C1C1CLL;
      goto LABEL_10;
    case 3:
      CGFloat v1 = 0.741176471;
      CGFloat v2 = 0.82745098;
      CGFloat v4 = 0.839215686;
      CGFloat v5 = 1.0;
      return CGColorCreateGenericRGB(v1, v2, v4, v5);
    case 4:
      CGFloat v1 = 0.682352941;
      CGFloat v2 = 0.788235294;
      uint64_t v3 = 0x3FE0101010101010;
      goto LABEL_10;
    case 5:
      return CGColorCreateGenericRGB(0.956862745, 0.819607843, 0.619607843, 1.0);
    case 6:
      return CGColorCreateGenericRGB(0.996078431, 0.737254902, 0.392156863, 1.0);
    default:
      CGFloat v1 = 0.623529412;
      CGFloat v2 = 0.588235294;
      uint64_t v3 = 0x3FE7777777777777;
LABEL_10:
      CGFloat v4 = *(double *)&v3;
      CGFloat v5 = 1.0;
      return CGColorCreateGenericRGB(v1, v2, v4, v5);
  }
}

CGColorRef sub_2560A93B8()
{
  switch(*v0)
  {
    case 1:
      CGColorRef result = CGColorCreateGenericRGB(0.874509804, 0.898039216, 1.0, 1.0);
      break;
    case 2:
      CGColorRef result = CGColorCreateGenericRGB(0.807843137, 0.847058824, 0.905882353, 1.0);
      break;
    case 3:
      CGColorRef result = CGColorCreateGenericRGB(0.858823529, 0.882352941, 0.88627451, 1.0);
      break;
    case 4:
      CGColorRef result = CGColorCreateGenericRGB(0.807843137, 0.901960784, 0.643137255, 1.0);
      break;
    case 5:
      CGColorRef result = CGColorCreateGenericRGB(0.964705882, 0.831372549, 0.635294118, 1.0);
      break;
    case 6:
      CGColorRef result = CGColorCreateGenericRGB(1.0, 0.917647059, 0.882352941, 1.0);
      break;
    default:
      CGColorRef result = CGColorCreateGenericRGB(0.815686275, 0.776470588, 0.941176471, 1.0);
      break;
  }
  return result;
}

CGColorRef sub_2560A94DC()
{
  return CGColorCreateGenericRGB(0.0, 0.0, 0.0, 1.0);
}

uint64_t sub_2560A94F0()
{
  uint64_t v0 = sub_2560A92A0();
  if (CGColorGetNumberOfComponents(v0) != 4) {
    return (uint64_t)v0;
  }
  uint64_t result = sub_256178198();
  if (!result) {
    return (uint64_t)v0;
  }
  unint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    if (v2 != 1)
    {
      if (v2 >= 3)
      {
        CGFloat v3 = *(double *)(result + 32) * 0.5;
        CGFloat v4 = *(double *)(result + 40) * 0.5;
        double v5 = *(double *)(result + 48);
        swift_bridgeObjectRelease();
        CGColorRef GenericRGB = CGColorCreateGenericRGB(v3, v4, v5 * 0.5, 1.0);

        return (uint64_t)GenericRGB;
      }
      goto LABEL_10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_10:
  __break(1u);
  return result;
}

CGColorRef sub_2560A95B4()
{
  switch(*v0)
  {
    case 1:
      CGColorRef result = CGColorCreateGenericRGB(0.235294118, 0.298039216, 0.760784314, 1.0);
      break;
    case 2:
      CGColorRef result = CGColorCreateGenericRGB(0.133333333, 0.392156863, 0.749019608, 1.0);
      break;
    case 3:
      CGColorRef result = CGColorCreateGenericRGB(0.42745098, 0.682352941, 0.756862745, 1.0);
      break;
    case 4:
      CGColorRef result = CGColorCreateGenericRGB(0.431372549, 0.694117647, 0.0, 1.0);
      break;
    case 5:
      CGColorRef result = CGColorCreateGenericRGB(1.0, 0.603921569, 0.0117647059, 1.0);
      break;
    case 6:
      CGColorRef result = CGColorCreateGenericRGB(0.984313725, 0.454901961, 0.262745098, 1.0);
      break;
    default:
      CGColorRef result = CGColorCreateGenericRGB(0.207843137, 0.121568627, 0.462745098, 1.0);
      break;
  }
  return result;
}

CGColorRef sub_2560A96E4()
{
  switch(*v0)
  {
    case 1:
      CGColorRef result = CGColorCreateGenericRGB(0.556862745, 0.674509804, 0.996078431, 1.0);
      break;
    case 2:
      CGColorRef result = CGColorCreateGenericRGB(0.635294118, 0.811764706, 1.0, 1.0);
      break;
    case 3:
      CGColorRef result = CGColorCreateGenericRGB(0.796078431, 0.878431373, 0.909803922, 1.0);
      break;
    case 4:
      CGColorRef result = CGColorCreateGenericRGB(0.71372549, 0.858823529, 0.274509804, 1.0);
      break;
    case 5:
      CGColorRef result = CGColorCreateGenericRGB(0.996078431, 0.823529412, 0.392156863, 1.0);
      break;
    case 6:
      CGColorRef result = CGColorCreateGenericRGB(0.988235294, 0.745098039, 0.474509804, 1.0);
      break;
    default:
      CGColorRef result = CGColorCreateGenericRGB(0.611764706, 0.423529412, 0.764705882, 1.0);
      break;
  }
  return result;
}

void *static StateOfMindVisualization.Colors.allCases.getter()
{
  return &unk_2704B5900;
}

void sub_2560A9818(void *a1@<X8>)
{
  *a1 = &unk_2704B5900;
}

BOOL static StateOfMindVisualization.ValenceImageProvider.ImageScale.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t StateOfMindVisualization.ValenceImageProvider.ImageScale.hash(into:)()
{
  return sub_2561788F8();
}

uint64_t sub_2560A986C()
{
  if (*v0)
  {
    uint64_t v1 = MEMORY[0x263F8EE78];
    uint64_t v26 = MEMORY[0x263F8EE78];
    uint64_t v2 = qword_2704B5880;
    if (qword_2704B5880)
    {
      CGFloat v3 = (uint64_t *)&unk_2704B5898;
      do
      {
        uint64_t v22 = v2;
        uint64_t v4 = *(v3 - 1);
        uint64_t v5 = *v3;
        swift_bridgeObjectRetain();
        sub_2560E86DC(0, 3, 0);
        uint64_t v6 = v1;
        swift_bridgeObjectRetain();
        sub_2561787E8();
        sub_256177F68();
        swift_bridgeObjectRelease();
        uint64_t v25 = v1;
        unint64_t v8 = *(void *)(v1 + 16);
        unint64_t v7 = *(void *)(v25 + 24);
        if (v8 >= v7 >> 1)
        {
          sub_2560E86DC(v7 > 1, v8 + 1, 1);
          uint64_t v6 = v25;
        }
        *(void *)(v6 + 16) = v8 + 1;
        uint64_t v9 = v6 + 16 * v8;
        *(void *)(v9 + 32) = v4;
        *(void *)(v9 + 40) = v5;
        swift_bridgeObjectRetain();
        sub_2561787E8();
        sub_256177F68();
        swift_bridgeObjectRelease();
        unint64_t v11 = *(void *)(v6 + 16);
        unint64_t v10 = *(void *)(v6 + 24);
        if (v11 >= v10 >> 1) {
          sub_2560E86DC(v10 > 1, v11 + 1, 1);
        }
        *(void *)(v6 + 16) = v11 + 1;
        uint64_t v12 = v6 + 16 * v11;
        *(void *)(v12 + 32) = v4;
        *(void *)(v12 + 40) = v5;
        swift_bridgeObjectRetain();
        sub_2561787E8();
        sub_256177F68();
        swift_bridgeObjectRelease();
        unint64_t v14 = *(void *)(v6 + 16);
        unint64_t v13 = *(void *)(v6 + 24);
        if (v14 >= v13 >> 1) {
          sub_2560E86DC(v13 > 1, v14 + 1, 1);
        }
        v3 += 2;
        *(void *)(v6 + 16) = v14 + 1;
        uint64_t v15 = v6 + 16 * v14;
        *(void *)(v15 + 32) = v4;
        *(void *)(v15 + 40) = v5;
        swift_bridgeObjectRelease();
        sub_255FCD3A4(v6);
        uint64_t v2 = v22 - 1;
        uint64_t v1 = MEMORY[0x263F8EE78];
      }
      while (v22 != 1);
      return v26;
    }
  }
  else
  {
    uint64_t v16 = qword_2704B5880;
    uint64_t v1 = MEMORY[0x263F8EE78];
    if (qword_2704B5880)
    {
      uint64_t v27 = MEMORY[0x263F8EE78];
      sub_2560E86DC(0, qword_2704B5880, 0);
      unint64_t v17 = (uint64_t *)&unk_2704B5898;
      uint64_t v1 = v27;
      do
      {
        uint64_t v23 = *(v17 - 1);
        uint64_t v24 = *v17;
        swift_bridgeObjectRetain_n();
        sub_256177F68();
        swift_bridgeObjectRelease();
        unint64_t v19 = *(void *)(v27 + 16);
        unint64_t v18 = *(void *)(v27 + 24);
        if (v19 >= v18 >> 1) {
          sub_2560E86DC(v18 > 1, v19 + 1, 1);
        }
        v17 += 2;
        *(void *)(v27 + 16) = v19 + 1;
        unint64_t v20 = v27 + 16 * v19;
        *(void *)(v20 + 32) = v23;
        *(void *)(v20 + 40) = v24;
        --v16;
      }
      while (v16);
    }
  }
  return v1;
}

BOOL static StateOfMindVisualization.ValenceImageProvider.ImageGranularity.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t StateOfMindVisualization.ValenceImageProvider.ImageGranularity.hash(into:)()
{
  return sub_2561788F8();
}

uint64_t StateOfMindVisualization.ValenceImageProvider.ImageGranularity.hashValue.getter()
{
  return sub_256178928();
}

uint64_t StateOfMindVisualization.ValenceImageProvider.init(valence:imageScale:)@<X0>(void *a1@<X8>, double a2@<D0>)
{
  unint64_t v3 = sub_2560AA1D0(21, a2);
  uint64_t v4 = sub_256178408();
  char v6 = v5;
  uint64_t v7 = sub_2560A986C();
  if ((v3 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v3 >= *(void *)(v7 + 16))
  {
LABEL_7:
    __break(1u);
    JUMPOUT(0x2560A9D2CLL);
  }
  unint64_t v8 = v7 + 16 * v3;
  uint64_t v10 = *(void *)(v8 + 32);
  uint64_t v9 = *(void *)(v8 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v6) {
    uint64_t v4 = 4;
  }
  sub_256177F68();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v10;
  a1[1] = v9;
  a1[2] = v4;
  return result;
}

void StateOfMindVisualization.ValenceImageProvider.uiImage.getter()
{
  type metadata accessor for MentalHealthUIRepresentative();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v1 = self;
  swift_bridgeObjectRetain();
  id v2 = objc_msgSend(v1, sel_bundleForClass_, ObjCClassFromMetadata);
  unint64_t v3 = (void *)sub_256177EA8();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(self, sel_imageNamed_inBundle_, v3, v2);

  if (!v4) {
    __break(1u);
  }
}

uint64_t StateOfMindVisualization.ValenceImage.body.getter()
{
  uint64_t v0 = sub_2561774F8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  unint64_t v3 = (char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MentalHealthUIRepresentative();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  char v5 = self;
  swift_bridgeObjectRetain();
  id v6 = objc_msgSend(v5, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_256177538();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F1B4B8], v0);
  uint64_t v7 = sub_256177528();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v18[3] = v7;
  v18[4] = 0x3FF0000000000000;
  __int16 v19 = 0;
  id v8 = (id)HKUILocalizedStringForValenceClassification();
  uint64_t v9 = sub_256177EE8();
  uint64_t v11 = v10;

  v18[1] = v9;
  v18[2] = v11;
  sub_255F5CE90();
  uint64_t v12 = sub_256177028();
  uint64_t v14 = v13;
  char v16 = v15 & 1;
  sub_2560AA2DC();
  sub_255F6747C();
  sub_2561771B8();
  sub_255F67B2C(v12, v14, v16);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_2560AA054()
{
  off_269F46308 = &unk_2704B5900;
}

uint64_t sub_2560AA068()
{
  if (qword_269F42358 != -1) {
    uint64_t result = swift_once();
  }
  qword_269F46310 = *((void *)off_269F46308 + 2) - 1;
  return result;
}

double sub_2560AA0C4()
{
  if (qword_269F42360 != -1) {
    swift_once();
  }
  double result = 1.0 / (double)qword_269F46310;
  *(double *)&qword_269F46318 = result;
  return result;
}

uint64_t sub_2560AA124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = 0;
  char v5 = 0;
  unint64_t v6 = 0;
  char v7 = 0;
  do
  {
    BOOL v11 = a1 <= a2;
    if (a3 > 0) {
      BOOL v11 = a1 >= a2;
    }
    if (v11)
    {
      if ((a1 != a2) | v5 & 1) {
        return result;
      }
      if (v7)
      {
        char v5 = 1;
        a1 = a2;
        char v7 = 1;
      }
      else
      {
        if (v6 == 0x8000000000000000) {
          return result;
        }
        char v7 = 0;
        char v5 = 1;
        a1 = a2;
      }
    }
    else
    {
      BOOL v8 = __OFADD__(a1, a3);
      a1 += a3;
      char v9 = v8;
      BOOL v10 = (v9 & 1) == 0;
      if (v9)
      {
        a1 = (a3 >> 63) ^ 0x7FFFFFFFFFFFFFFFLL;
        unint64_t v6 = 0x8000000000000000;
      }
      else
      {
        unint64_t v6 = 0;
      }
      char v7 = v10;
    }
    BOOL v8 = __OFADD__(result++, 1);
  }
  while (!v8);
  __break(1u);
  return result;
}

uint64_t sub_2560AA1D0(uint64_t result, double a2)
{
  double v2 = 1.0;
  double v3 = (a2 + 1.0) * 0.5;
  if (v3 >= 1.0)
  {
    if (result <= 1) {
      return 0;
    }
  }
  else
  {
    if (v3 < 0.0) {
      double v2 = 0.0;
    }
    else {
      double v2 = v3;
    }
    if (result < 2) {
      return 0;
    }
  }
  if (result + 0x4000000000000000 >= 0)
  {
    uint64_t v5 = sub_2560A8FE8(1, 2 * result - 1, 2, result);
    uint64_t v6 = *(void *)(v5 + 16);
    if (v6)
    {
      uint64_t v7 = 0;
      uint64_t v4 = -1;
      double v8 = INFINITY;
      do
      {
        double v9 = vabdd_f64(*(double *)(v5 + 8 * v7 + 32), v2);
        if (v9 < v8)
        {
          uint64_t v4 = v7;
          double v8 = v9;
        }
        ++v7;
      }
      while (v6 != v7);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return -1;
    }
    return v4;
  }
  __break(1u);
  return result;
}

void sub_2560AA2DC()
{
  if (!qword_269F42BC8)
  {
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F42BC8);
    }
  }
}

unint64_t sub_2560AA340()
{
  unint64_t result = qword_269F46320;
  if (!qword_269F46320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46320);
  }
  return result;
}

uint64_t sub_2560AA394()
{
  return sub_2560AAB54(&qword_269F46328, (void (*)(uint64_t))sub_2560AA3DC);
}

void sub_2560AA3DC()
{
  if (!qword_269F46330)
  {
    unint64_t v0 = sub_256178078();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46330);
    }
  }
}

unint64_t sub_2560AA438()
{
  unint64_t result = qword_269F46338;
  if (!qword_269F46338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46338);
  }
  return result;
}

unint64_t sub_2560AA490()
{
  unint64_t result = qword_269F46340;
  if (!qword_269F46340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46340);
  }
  return result;
}

uint64_t sub_2560AA4E4()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for StateOfMindVisualization()
{
  return &type metadata for StateOfMindVisualization;
}

uint64_t getEnumTagSinglePayload for StateOfMindVisualization.Colors(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StateOfMindVisualization.Colors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2560AA66CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindVisualization.Colors()
{
  return &type metadata for StateOfMindVisualization.Colors;
}

ValueMetadata *type metadata accessor for StateOfMindVisualization.ValenceImageProvider()
{
  return &type metadata for StateOfMindVisualization.ValenceImageProvider;
}

uint64_t getEnumTagSinglePayload for Symbol(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StateOfMindVisualization.ValenceImageProvider.ImageScale(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2560AA824);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindVisualization.ValenceImageProvider.ImageScale()
{
  return &type metadata for StateOfMindVisualization.ValenceImageProvider.ImageScale;
}

unsigned char *storeEnumTagSinglePayload for StateOfMindVisualization.ValenceImageProvider.ImageGranularity(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2560AA928);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindVisualization.ValenceImageProvider.ImageGranularity()
{
  return &type metadata for StateOfMindVisualization.ValenceImageProvider.ImageGranularity;
}

void *_s14MentalHealthUI24StateOfMindVisualizationV20ValenceImageProviderVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

void *_s14MentalHealthUI24StateOfMindVisualizationV20ValenceImageProviderVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

void *_s14MentalHealthUI24StateOfMindVisualizationV20ValenceImageProviderVwta_0(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

ValueMetadata *type metadata accessor for StateOfMindVisualization.ValenceImage()
{
  return &type metadata for StateOfMindVisualization.ValenceImage;
}

unint64_t sub_2560AAA44()
{
  unint64_t result = qword_269F46348;
  if (!qword_269F46348)
  {
    sub_2560AAAEC();
    sub_255F6747C();
    sub_2560AAB54(&qword_269F42EA0, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46348);
  }
  return result;
}

void sub_2560AAAEC()
{
  if (!qword_269F46350)
  {
    sub_2560AA2DC();
    sub_256176D38();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46350);
    }
  }
}

uint64_t sub_2560AAB54(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

CGColorRef sub_2560AABA4(CGColor *a1, CGColor *a2, double a3, double a4, double a5)
{
  if (a3 < 0.0 || a3 > 1.0) {
    goto LABEL_21;
  }
  if (CGColorGetNumberOfComponents(a1) != 4) {
    goto LABEL_21;
  }
  if (CGColorGetNumberOfComponents(a2) != 4) {
    goto LABEL_21;
  }
  if (a4 < 0.0) {
    goto LABEL_21;
  }
  if (a4 > 1.0) {
    goto LABEL_21;
  }
  if (a5 < 0.0) {
    goto LABEL_21;
  }
  if (a5 > 1.0) {
    goto LABEL_21;
  }
  uint64_t v10 = sub_256178198();
  if (!v10) {
    goto LABEL_21;
  }
  uint64_t v11 = v10;
  CGColorRef result = (CGColorRef)sub_256178198();
  if (!result)
  {
    swift_bridgeObjectRelease();
LABEL_21:
    CGFloat v24 = 0.0;
    double v25 = 0.0;
    double v22 = 0.0;
    CGFloat v23 = 0.0;
    return CGColorCreateGenericRGB(v24, v25, v22, v23);
  }
  unint64_t v13 = *(void *)(v11 + 16);
  if (!v13)
  {
    __break(1u);
    goto LABEL_24;
  }
  CGColorRef v14 = result;
  unint64_t v15 = *((void *)result + 2);
  if (!v15)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v13 < 2)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v15 < 2)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v13 < 3)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  double v16 = *(double *)(v11 + 32);
  double v17 = *(double *)(v11 + 40);
  double v19 = *((double *)result + 4);
  double v18 = *((double *)result + 5);
  double v26 = *(double *)(v11 + 48);
  CGColorRef result = (CGColorRef)swift_bridgeObjectRelease();
  if (*((void *)v14 + 2) >= 3uLL)
  {
    CGFloat v20 = (1.0 - a3) * v16 + v19 * a3;
    double v21 = *((double *)v14 + 6);
    swift_bridgeObjectRelease();
    double v22 = (1.0 - a3) * v26 + v21 * a3;
    CGFloat v23 = 1.0;
    CGFloat v24 = v20;
    double v25 = (1.0 - a3) * v17 + v18 * a3;
    return CGColorCreateGenericRGB(v24, v25, v22, v23);
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_2560AAD50(double a1)
{
  if (qword_269F42360 != -1) {
LABEL_28:
  }
    swift_once();
  uint64_t v3 = (uint64_t *)qword_269F46310;
  if (qword_269F46310 < 0)
  {
    __break(1u);
  }
  else
  {
    if (qword_269F46310)
    {
      a1 = a1 + 1.0;
      double v1 = 0.5;
      if (qword_269F42368 == -1)
      {
LABEL_5:
        unint64_t v4 = 0;
        a1 = a1 * v1;
        while (1)
        {
          if (v3 == (uint64_t *)v4)
          {
            __break(1u);
LABEL_27:
            __break(1u);
            goto LABEL_28;
          }
          double v1 = *(double *)&qword_269F46318 * (double)(uint64_t)v4;
          if (v1 > *(double *)&qword_269F46318 + v1) {
            goto LABEL_27;
          }
          if (v1 <= a1 && a1 < *(double *)&qword_269F46318 + v1) {
            break;
          }
          if (v3 == (uint64_t *)++v4) {
            goto LABEL_13;
          }
        }
        uint64_t v7 = qword_269F46310;
        if (qword_269F42358 != -1) {
          swift_once();
        }
        if (v4 >= *((void *)off_269F46308 + 2))
        {
          __break(1u);
        }
        else
        {
          swift_getAtKeyPath();
          if (v4 + 1 < *((void *)off_269F46308 + 2))
          {
            swift_getAtKeyPath();
            unint64_t v8 = *((void *)off_269F46308 + 2);
            if (v4 < v8)
            {
              if (v4 + 1 < v8)
              {
                sub_2560AABA4(v10, v9, (a1 - v1) * (double)v7, dbl_2561A6750[*((char *)off_269F46308 + v4 + 32)], dbl_2561A6750[*((char *)off_269F46308 + v4 + 33)]);

                return;
              }
              goto LABEL_39;
            }
LABEL_38:
            __break(1u);
LABEL_39:
            __break(1u);
            return;
          }
        }
        __break(1u);
        goto LABEL_38;
      }
LABEL_35:
      swift_once();
      goto LABEL_5;
    }
LABEL_13:
    if (qword_269F42358 == -1)
    {
      unint64_t v6 = qword_269F46310;
      if ((qword_269F46310 & 0x8000000000000000) == 0) {
        goto LABEL_15;
      }
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_once();
  unint64_t v6 = qword_269F46310;
  if (qword_269F46310 < 0) {
    goto LABEL_31;
  }
LABEL_15:
  uint64_t v3 = &qword_269F46000;
  if (v6 >= *((void *)off_269F46308 + 2))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  LOBYTE(v9) = *((unsigned char *)off_269F46308 + v6 + 32);
  swift_getAtKeyPath();
  if (qword_269F46310 < 0)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if ((unint64_t)qword_269F46310 >= *((void *)off_269F46308 + 2))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
}

CGColorRef sub_2560AB028(CGColor *a1, CGColor *a2, double a3)
{
  if (CGColorGetNumberOfComponents(a1) == 4 && CGColorGetNumberOfComponents(a2) == 4 && a3 >= 0.0 && a3 <= 1.0)
  {
    uint64_t v5 = sub_256178198();
    if (v5)
    {
      uint64_t v6 = v5;
      CGColorRef result = (CGColorRef)sub_256178198();
      if (result)
      {
        unint64_t v8 = *(void *)(v6 + 16);
        if (v8)
        {
          CGColorRef v9 = result;
          unint64_t v10 = *((void *)result + 2);
          if (v10)
          {
            double v11 = (1.0 - *((double *)result + 4)) * a3;
            if (1.0 - (1.0 - *(double *)(v6 + 32) + v11) < 0.0) {
              double v12 = 0.0;
            }
            else {
              double v12 = 1.0 - (1.0 - *(double *)(v6 + 32) + v11);
            }
            if (v8 >= 2)
            {
              if (v10 >= 2)
              {
                double v13 = (1.0 - *((double *)result + 5)) * a3;
                if (1.0 - (1.0 - *(double *)(v6 + 40) + v13) < 0.0) {
                  double v14 = 0.0;
                }
                else {
                  double v14 = 1.0 - (1.0 - *(double *)(v6 + 40) + v13);
                }
                if (v8 >= 3)
                {
                  double v15 = *(double *)(v6 + 48);
                  CGColorRef result = (CGColorRef)swift_bridgeObjectRelease();
                  if (*((void *)v9 + 2) >= 3uLL)
                  {
                    double v17 = *((double *)v9 + 6);
                    swift_bridgeObjectRelease();
                    double v16 = 1.0 - v15;
                    if (1.0 - (v16 + (1.0 - v17) * a3) < 0.0) {
                      double v18 = 0.0;
                    }
                    else {
                      double v18 = 1.0 - (v16 + (1.0 - v17) * a3);
                    }
                    CGFloat v19 = 1.0;
                    CGFloat v20 = v12;
                    CGFloat v21 = v14;
                    goto LABEL_25;
                  }
LABEL_33:
                  __break(1u);
                  return result;
                }
LABEL_32:
                __break(1u);
                goto LABEL_33;
              }
LABEL_31:
              __break(1u);
              goto LABEL_32;
            }
LABEL_30:
            __break(1u);
            goto LABEL_31;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_30;
      }
      swift_bridgeObjectRelease();
    }
  }
  CGFloat v20 = 0.0;
  CGFloat v21 = 0.0;
  double v18 = 0.0;
  CGFloat v19 = 0.0;
LABEL_25:

  return CGColorCreateGenericRGB(v20, v21, v18, v19);
}

CGColorRef sub_2560AB1D4(CGColor *a1, CGColor *a2, double a3)
{
  if (CGColorGetNumberOfComponents(a1) != 4) {
    goto LABEL_15;
  }
  if (CGColorGetNumberOfComponents(a2) != 4) {
    goto LABEL_15;
  }
  if (a3 < 0.0) {
    goto LABEL_15;
  }
  if (a3 > 1.0) {
    goto LABEL_15;
  }
  uint64_t v5 = sub_256178198();
  if (!v5) {
    goto LABEL_15;
  }
  uint64_t v6 = v5;
  CGColorRef result = (CGColorRef)sub_256178198();
  if (!result)
  {
    swift_bridgeObjectRelease();
LABEL_15:
    double v20 = 0.0;
    CGFloat v21 = 0.0;
    double v18 = 0.0;
    CGFloat v19 = 0.0;
    goto LABEL_16;
  }
  unint64_t v8 = *(void *)(v6 + 16);
  if (!v8)
  {
    __break(1u);
    goto LABEL_20;
  }
  CGColorRef v9 = result;
  unint64_t v10 = *((void *)result + 2);
  if (!v10)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v8 < 2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v10 < 2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v8 < 3)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  double v11 = *(double *)(v6 + 32);
  double v12 = *(double *)(v6 + 40);
  double v14 = *((double *)result + 4);
  double v13 = *((double *)result + 5);
  double v15 = *(double *)(v6 + 48);
  CGColorRef result = (CGColorRef)swift_bridgeObjectRelease();
  if (*((void *)v9 + 2) < 3uLL)
  {
LABEL_24:
    __break(1u);
    return result;
  }
  CGFloat v16 = (1.0 - a3) * v12 + v13 * a3;
  double v17 = *((double *)v9 + 6);
  swift_bridgeObjectRelease();
  double v18 = (1.0 - a3) * v15 + v17 * a3;
  CGFloat v19 = 1.0;
  double v20 = (1.0 - a3) * v11 + v14 * a3;
  CGFloat v21 = v16;
LABEL_16:

  return CGColorCreateGenericRGB(v20, v21, v18, v19);
}

uint64_t sub_2560AB344@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = swift_getKeyPath();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  sub_2560B4008(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = (int *)_s12EntryDayViewVMa();
  unint64_t v8 = (uint64_t *)((char *)a3 + v7[5]);
  *unint64_t v8 = swift_getKeyPath();
  sub_2560B4008(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, v6);
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = (uint64_t)a3 + v7[6];
  uint64_t v10 = type metadata accessor for StateOfMindTimeline.DaySummary();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  sub_2560AB5B0(a1, v9);
  swift_bridgeObjectRetain();
  double v11 = a2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    double v11 = sub_256095C94(0, a2[2] + 1, 1, a2);
  }
  unint64_t v13 = v11[2];
  unint64_t v12 = v11[3];
  if (v13 >= v12 >> 1) {
    double v11 = sub_256095C94((void *)(v12 > 1), v13 + 1, 1, v11);
  }
  void v11[2] = v13 + 1;
  double v14 = &v11[2 * v13];
  v14[4] = 0x796C696144;
  v14[5] = 0xE500000000000000;
  swift_bridgeObjectRelease();
  uint64_t result = sub_2560B11D8(a1, &qword_269F46358, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary, MEMORY[0x263F8D8F0]);
  *(uint64_t *)((char *)a3 + v7[7]) = (uint64_t)v11;
  return result;
}

uint64_t _s12EntryDayViewVMa()
{
  uint64_t result = qword_269F46360;
  if (!qword_269F46360) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2560AB5B0(uint64_t a1, uint64_t a2)
{
  sub_2560B4008(0, &qword_269F46358, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_2560AB644@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = _s6StylesV5DailyVMa(0);
  uint64_t v4 = v3 - 8;
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StateOfMindTimeline.Styles(0);
  uint64_t v8 = v7 - 8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560B3F74();
  MEMORY[0x270FA5388](v11 - 8);
  unint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560B4204();
  MEMORY[0x270FA5388](v14 - 8);
  CGFloat v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)unint64_t v13 = sub_256176788();
  *((void *)v13 + 1) = 0;
  v13[16] = 0;
  sub_2560B4264();
  sub_2560AB8DC(v1, (uint64_t)&v13[*(int *)(v17 + 44)]);
  _s12EntryDayViewVMa();
  sub_256119CA0((uint64_t)v10);
  sub_2560B4380((uint64_t)&v10[*(int *)(v8 + 64)], (uint64_t)v6, _s6StylesV5DailyVMa);
  sub_2560B1234((uint64_t)v10, type metadata accessor for StateOfMindTimeline.Styles);
  if (v6[*(int *)(v4 + 32)]) {
    double v18 = 321.0;
  }
  else {
    double v18 = 0.0;
  }
  char v19 = v6[*(int *)(v4 + 32)] ^ 1;
  sub_2560B1234((uint64_t)v6, _s6StylesV5DailyVMa);
  uint64_t v20 = sub_2561778E8();
  sub_2561172C8(0.0, 1, 0.0, 1, INFINITY, 0, v18, v19, (uint64_t)v16, 0.0, 1, INFINITY, 0, v20, v21);
  sub_2560B1234((uint64_t)v13, (uint64_t (*)(void))sub_2560B3F74);
  return sub_2560B44B0((uint64_t)v16, a1, (uint64_t (*)(void))sub_2560B4204);
}

uint64_t sub_2560AB8DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v169 = a1;
  uint64_t v165 = a2;
  uint64_t v164 = _s17EntryDayEmptyViewVMa();
  uint64_t v2 = MEMORY[0x270FA5388](v164);
  uint64_t v137 = (uint64_t *)((char *)&v127 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v2);
  uint64_t v138 = (uint64_t)&v127 - v4;
  sub_2560B42FC(0, &qword_269F463A8, (uint64_t (*)(uint64_t))_s16EntryDayDataViewVMa, (uint64_t (*)(uint64_t))_s17EntryDayEmptyViewVMa, MEMORY[0x263F19B20]);
  uint64_t v159 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v163 = (uint64_t)&v127 - v6;
  uint64_t v162 = _s16EntryDayDataViewVMa();
  uint64_t v7 = MEMORY[0x270FA5388](v162);
  uint64_t v130 = (uint64_t *)((char *)&v127 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v7);
  uint64_t v132 = (uint64_t)&v127 - v9;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_2560B4008(0, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v135 = (uint64_t)&v127 - v12;
  uint64_t v134 = _s5EntryVMa();
  uint64_t v133 = *(void *)(v134 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v134);
  uint64_t v129 = (uint64_t)&v127 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v131 = (uint64_t)&v127 - v15;
  sub_2560B4008(0, &qword_269F46358, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary, v10);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v157 = (uint64_t)&v127 - v17;
  uint64_t v156 = type metadata accessor for StateOfMindTimeline.DaySummary();
  uint64_t v155 = *(void *)(v156 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v156);
  uint64_t v128 = (uint64_t)&v127 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v136 = (uint64_t)&v127 - v20;
  sub_2560B42FC(0, &qword_269F46388, (uint64_t (*)(uint64_t))_s16EntryDayDataViewVMa, (uint64_t (*)(uint64_t))_s17EntryDayEmptyViewVMa, MEMORY[0x263F19B28]);
  uint64_t v22 = MEMORY[0x270FA5388](v21 - 8);
  uint64_t v161 = (uint64_t)&v127 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v160 = (char *)&v127 - v24;
  uint64_t v25 = sub_2561762D8();
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v153 = (char *)&v127 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = sub_256177958();
  uint64_t v151 = *(void *)(v152 - 8);
  MEMORY[0x270FA5388](v152);
  float v150 = (char *)&v127 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = sub_256175D98();
  uint64_t v148 = *(void *)(v149 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v149);
  uint64_t v145 = (char *)&v127 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v167 = (char *)&v127 - v30;
  uint64_t v31 = sub_256176EE8();
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v34 = (char *)&v127 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x270FA5388](v35 - 8);
  uint64_t v37 = (char *)&v127 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F7285C();
  uint64_t v166 = v38;
  MEMORY[0x270FA5388](v38);
  uint64_t v146 = (char *)&v127 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560B42FC(0, &qword_269F42D60, (uint64_t (*)(uint64_t))sub_255F7285C, MEMORY[0x263F1A470], MEMORY[0x263F18E28]);
  uint64_t v41 = MEMORY[0x270FA5388](v40 - 8);
  uint64_t v158 = (uint64_t)&v127 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  char v154 = (char *)&v127 - v44;
  MEMORY[0x270FA5388](v43);
  uint64_t v168 = (uint64_t)&v127 - v45;
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v46 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v47 = sub_2561755B8();
  uint64_t v49 = v48;
  swift_bridgeObjectRelease();

  uint64_t v170 = (char *)v47;
  uint64_t v171 = v49;
  sub_255F5CE90();
  uint64_t v50 = sub_256177028();
  uint64_t v52 = v51;
  uint64_t v147 = v53;
  char v55 = v54 & 1;
  uint64_t v143 = _s12EntryDayViewVMa();
  uint64_t v56 = v169 + *(int *)(v143 + 20);
  sub_256119CA0((uint64_t)v37);
  uint64_t v142 = type metadata accessor for StateOfMindTimeline.Styles;
  sub_2560B1234((uint64_t)v37, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256176F28();
  (*(void (**)(char *, void, uint64_t))(v32 + 104))(v34, *MEMORY[0x263F1A680], v31);
  sub_256176F08();
  swift_release();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
  uint64_t v57 = sub_256176FD8();
  uint64_t v140 = v58;
  char v60 = v59 & 1;
  sub_255F67B2C(v50, v52, v55);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v147 = v56;
  sub_256119CA0((uint64_t)v37);
  char v144 = v37;
  sub_2560B1234((uint64_t)v37, v142);
  id v61 = objc_msgSend(self, sel_secondaryLabelColor);
  uint64_t v170 = (char *)MEMORY[0x25A29FE80](v61);
  uint64_t v62 = v140;
  uint64_t v141 = sub_256176FA8();
  uint64_t v64 = v63;
  uint64_t v142 = v65;
  int v67 = v66 & 1;
  sub_255F67B2C(v57, v62, v60);
  swift_release();
  swift_bridgeObjectRelease();
  sub_25611A114((uint64_t)v167);
  uint64_t v68 = v148;
  uint64_t v69 = v145;
  uint64_t v70 = v149;
  (*(void (**)(char *, void, uint64_t))(v148 + 104))(v145, *MEMORY[0x263F18508], v149);
  LOBYTE(v56) = sub_256175D88();
  uint64_t v148 = *(void *)(v68 + 8);
  ((void (*)(char *, uint64_t))v148)(v69, v70);
  uint64_t v71 = v151;
  uint64_t v72 = (unsigned int *)MEMORY[0x263F1B950];
  if ((v56 & 1) == 0) {
    uint64_t v72 = (unsigned int *)MEMORY[0x263F1B968];
  }
  uint64_t v73 = v150;
  uint64_t v74 = v152;
  (*(void (**)(char *, void, uint64_t))(v151 + 104))(v150, *v72, v152);
  uint64_t v75 = (uint64_t)v153;
  (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v153, v73, v74);
  uint64_t v76 = (uint64_t)v146;
  sub_2560B4380(v75, (uint64_t)&v146[*(int *)(v166 + 36)], MEMORY[0x263F190D8]);
  uint64_t v77 = v141;
  *(void *)uint64_t v76 = v141;
  *(void *)(v76 + 8) = v64;
  uint64_t v78 = v64;
  char v79 = v67;
  int v139 = v67;
  *(unsigned char *)(v76 + 16) = v67;
  *(void *)(v76 + 24) = v142;
  uint64_t v80 = v77;
  uint64_t v81 = v78;
  sub_255F67B94(v77, v78, v79);
  swift_bridgeObjectRetain();
  sub_2560B1234(v75, MEMORY[0x263F190D8]);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v73, v74);
  uint64_t v82 = v70;
  uint64_t v83 = v143;
  ((void (*)(char *, uint64_t))v148)(v167, v82);
  uint64_t v84 = v169;
  sub_255F67B2C(v80, v81, v139);
  swift_bridgeObjectRelease();
  uint64_t v85 = *(int *)(v83 + 28);
  uint64_t v86 = *(void **)(v84 + v85);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v86 = sub_256095C94(0, v86[2] + 1, 1, v86);
  }
  unint64_t v88 = v86[2];
  unint64_t v87 = v86[3];
  uint64_t v89 = (uint64_t)v160;
  if (v88 >= v87 >> 1) {
    uint64_t v86 = sub_256095C94((void *)(v87 > 1), v88 + 1, 1, v86);
  }
  v86[2] = v88 + 1;
  unint64_t v90 = &v86[2 * v88];
  v90[4] = 0x6E6F6974706143;
  v90[5] = 0xE700000000000000;
  uint64_t v170 = (char *)&unk_2704B5358;
  uint64_t v91 = swift_bridgeObjectRetain();
  sub_255FCD3A4(v91);
  sub_255FCD9E0();
  sub_2560B43E8((unint64_t *)&qword_26B2AD358, (void (*)(uint64_t))sub_255FCD9E0);
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_255F74810();
  uint64_t v92 = (uint64_t)v154;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2560B1234(v76, (uint64_t (*)(void))sub_255F7285C);
  sub_2560A148C(v92, v168);
  uint64_t v93 = (uint64_t)v144;
  sub_256119CA0((uint64_t)v144);
  sub_2560B1234(v93, type metadata accessor for StateOfMindTimeline.Styles);
  sub_2561778E8();
  sub_256175F38();
  uint64_t v167 = v170;
  LODWORD(v166) = v171;
  char v154 = v172;
  LODWORD(v153) = v173;
  uint64_t v152 = v174;
  uint64_t v151 = v175;
  uint64_t v94 = v157;
  sub_2560B4430(v84 + *(int *)(v83 + 24), v157, &qword_269F46358, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary);
  uint64_t v95 = v156;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v155 + 48))(v94, 1, v156) == 1)
  {
    long long v96 = &qword_269F46358;
    long long v97 = type metadata accessor for StateOfMindTimeline.DaySummary;
  }
  else
  {
    uint64_t v98 = v136;
    sub_2560B44B0(v94, v136, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.DaySummary);
    uint64_t v94 = v135;
    sub_2560B4430(v98 + *(int *)(v95 + 28), v135, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v133 + 48))(v94, 1, v134) != 1)
    {
      uint64_t v105 = v131;
      sub_2560B44B0(v94, v131, (uint64_t (*)(void))_s5EntryVMa);
      uint64_t v106 = v128;
      sub_2560B4380(v98, v128, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.DaySummary);
      uint64_t v107 = v129;
      sub_2560B4380(v105, v129, (uint64_t (*)(void))_s5EntryVMa);
      uint64_t v108 = *(void *)(v84 + v85);
      uint64_t KeyPath = swift_getKeyPath();
      unsigned int v110 = v130;
      *uint64_t v130 = KeyPath;
      uint64_t v111 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
      sub_2560B4008(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
      swift_storeEnumTagMultiPayload();
      uint64_t v112 = (int *)v162;
      uint64_t v113 = (uint64_t *)((char *)v110 + *(int *)(v162 + 20));
      *uint64_t v113 = swift_getKeyPath();
      sub_2560B4008(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, v111);
      swift_storeEnumTagMultiPayload();
      sub_2560B44B0(v106, (uint64_t)v110 + v112[6], (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.DaySummary);
      sub_2560B44B0(v107, (uint64_t)v110 + v112[7], (uint64_t (*)(void))_s5EntryVMa);
      *(uint64_t *)((char *)v110 + v112[8]) = v108;
      uint64_t v114 = (uint64_t)v110;
      uint64_t v115 = v132;
      sub_2560B44B0(v114, v132, (uint64_t (*)(void))_s16EntryDayDataViewVMa);
      sub_2560B4380(v115, v163, (uint64_t (*)(void))_s16EntryDayDataViewVMa);
      swift_storeEnumTagMultiPayload();
      sub_2560B43E8(&qword_269F463B0, (void (*)(uint64_t))_s16EntryDayDataViewVMa);
      sub_2560B43E8(&qword_269F463B8, (void (*)(uint64_t))_s17EntryDayEmptyViewVMa);
      swift_bridgeObjectRetain();
      sub_256176898();
      sub_2560B1234(v115, (uint64_t (*)(void))_s16EntryDayDataViewVMa);
      sub_2560B1234(v105, (uint64_t (*)(void))_s5EntryVMa);
      uint64_t v103 = type metadata accessor for StateOfMindTimeline.DaySummary;
      uint64_t v104 = v136;
      goto LABEL_15;
    }
    sub_2560B1234(v98, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.DaySummary);
    long long v96 = (unint64_t *)&qword_269F43410;
    long long v97 = _s5EntryVMa;
  }
  sub_2560B11D8(v94, v96, (uint64_t (*)(uint64_t))v97, MEMORY[0x263F8D8F0]);
  uint64_t v99 = *(void *)(v84 + v85);
  uint64_t v100 = swift_getKeyPath();
  uint64_t v101 = (uint64_t)v137;
  *uint64_t v137 = v100;
  sub_2560B4008(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  *(void *)(v101 + *(int *)(v164 + 20)) = v99;
  uint64_t v102 = v138;
  sub_2560B44B0(v101, v138, (uint64_t (*)(void))_s17EntryDayEmptyViewVMa);
  sub_2560B4380(v102, v163, (uint64_t (*)(void))_s17EntryDayEmptyViewVMa);
  swift_storeEnumTagMultiPayload();
  sub_2560B43E8(&qword_269F463B0, (void (*)(uint64_t))_s16EntryDayDataViewVMa);
  sub_2560B43E8(&qword_269F463B8, (void (*)(uint64_t))_s17EntryDayEmptyViewVMa);
  swift_bridgeObjectRetain();
  sub_256176898();
  uint64_t v103 = _s17EntryDayEmptyViewVMa;
  uint64_t v104 = v102;
LABEL_15:
  sub_2560B1234(v104, (uint64_t (*)(void))v103);
  uint64_t v116 = (uint64_t (*)(uint64_t))MEMORY[0x263F1A470];
  uint64_t v117 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F18E28];
  uint64_t v118 = v158;
  sub_2560B4518(v168, v158, &qword_269F42D60, (uint64_t (*)(uint64_t))sub_255F7285C, MEMORY[0x263F1A470], MEMORY[0x263F18E28]);
  uint64_t v119 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F19B28];
  uint64_t v120 = v161;
  sub_2560B4518(v89, v161, &qword_269F46388, (uint64_t (*)(uint64_t))_s16EntryDayDataViewVMa, (uint64_t (*)(uint64_t))_s17EntryDayEmptyViewVMa, MEMORY[0x263F19B28]);
  uint64_t v121 = v89;
  uint64_t v122 = v165;
  sub_2560B4518(v118, v165, &qword_269F42D60, (uint64_t (*)(uint64_t))sub_255F7285C, v116, v117);
  sub_2560B406C();
  uint64_t v124 = v122 + *(int *)(v123 + 48);
  *(void *)uint64_t v124 = 0;
  *(unsigned char *)(v124 + 8) = 1;
  *(void *)(v124 + 16) = v167;
  *(unsigned char *)(v124 + 24) = v166;
  *(void *)(v124 + 32) = v154;
  *(unsigned char *)(v124 + 40) = (_BYTE)v153;
  uint64_t v125 = v151;
  *(void *)(v124 + 48) = v152;
  *(void *)(v124 + 56) = v125;
  sub_2560B4518(v120, v122 + *(int *)(v123 + 64), &qword_269F46388, (uint64_t (*)(uint64_t))_s16EntryDayDataViewVMa, (uint64_t (*)(uint64_t))_s17EntryDayEmptyViewVMa, v119);
  sub_2560B458C(v121, &qword_269F46388, (uint64_t (*)(uint64_t))_s16EntryDayDataViewVMa, (uint64_t (*)(uint64_t))_s17EntryDayEmptyViewVMa, v119);
  sub_2560B458C(v168, &qword_269F42D60, (uint64_t (*)(uint64_t))sub_255F7285C, v116, v117);
  sub_2560B458C(v120, &qword_269F46388, (uint64_t (*)(uint64_t))_s16EntryDayDataViewVMa, (uint64_t (*)(uint64_t))_s17EntryDayEmptyViewVMa, v119);
  return sub_2560B458C(v118, &qword_269F42D60, (uint64_t (*)(uint64_t))sub_255F7285C, v116, v117);
}

void *sub_2560ACEF4(void *a1, void *a2, int *a3)
{
  uint64_t v3 = a2;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    sub_2560B4008(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, v3, v7);
    }
    else
    {
      *a1 = *v3;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = v6[5];
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)v3 + v9);
    sub_2560B4008(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_256176AA8();
      uint64_t v13 = *(void *)(v12 - 8);
      uint64_t v127 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      uint64_t v124 = v3;
      uint64_t v126 = v13;
      uint64_t v122 = v6;
      if (v127((char *)v11, 1, v12))
      {
        sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      uint64_t v15 = v127;
      uint64_t v16 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v17 = v16[5];
      uint64_t v18 = (char *)v10 + v17;
      uint64_t v19 = (char *)v11 + v17;
      uint64_t v20 = sub_256176158();
      uint64_t v129 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
      v129(v18, v19, v20);
      *((unsigned char *)v10 + v16[6]) = *((unsigned char *)v11 + v16[6]);
      uint64_t v21 = v16[7];
      uint64_t v22 = (char *)v10 + v21;
      uint64_t v23 = (char *)v11 + v21;
      uint64_t v24 = sub_256175D98();
      uint64_t v120 = *(void (**)(char *, char *))(*(void *)(v24 - 8) + 16);
      uint64_t v121 = v24;
      v120(v22, v23);
      uint64_t v25 = v16[8];
      uint64_t v26 = (char *)v10 + v25;
      uint64_t v27 = (char *)v11 + v25;
      if (v127((char *)v11 + v25, 1, v12))
      {
        sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v26, v27, v12);
        uint64_t v15 = v127;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v26, 0, 1, v12);
      }
      uint64_t v29 = _s6StylesV8TimelineVMa(0);
      v129(&v26[*(int *)(v29 + 20)], &v27[*(int *)(v29 + 20)], v20);
      uint64_t v30 = v16[9];
      uint64_t v31 = (char *)v10 + v30;
      uint64_t v32 = (char *)v11 + v30;
      uint64_t v33 = a1;
      if (v15((char *)v11 + v30, 1, v12))
      {
        sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v31, v32, v12);
        uint64_t v15 = v127;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v31, 0, 1, v12);
      }
      uint64_t v35 = _s6StylesV6NoDataVMa(0);
      v129(&v31[*(int *)(v35 + 20)], &v32[*(int *)(v35 + 20)], v20);
      v31[*(int *)(v35 + 24)] = v32[*(int *)(v35 + 24)];
      uint64_t v36 = v16[10];
      uint64_t v37 = (char *)v10 + v36;
      uint64_t v38 = (char *)v11 + v36;
      if (v15((char *)v11 + v36, 1, v12))
      {
        sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v37, v38, v12);
        uint64_t v15 = v127;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v37, 0, 1, v12);
      }
      uint64_t v40 = _s6StylesV11PlaceholderVMa(0);
      v129(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v20);
      uint64_t v41 = v16[11];
      uint64_t v42 = (char *)v10 + v41;
      uint64_t v43 = (char *)v11 + v41;
      if (v15((char *)v11 + v41, 1, v12))
      {
        sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v42, v43, v12);
        uint64_t v15 = v127;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v42, 0, 1, v12);
      }
      uint64_t v45 = _s6StylesV6SymbolVMa(0);
      v129(&v42[*(int *)(v45 + 20)], &v43[*(int *)(v45 + 20)], v20);
      uint64_t v46 = v16[12];
      uint64_t v47 = (char *)v10 + v46;
      uint64_t v48 = (char *)v11 + v46;
      if (v15((char *)v11 + v46, 1, v12))
      {
        sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v47, v48, v12);
        uint64_t v15 = v127;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v47, 0, 1, v12);
      }
      uint64_t v50 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v129(&v47[v50[5]], &v48[v50[5]], v20);
      v47[v50[6]] = v48[v50[6]];
      ((void (*)(char *, char *, uint64_t))v120)(&v47[v50[7]], &v48[v50[7]], v121);
      uint64_t v51 = v16[13];
      uint64_t v52 = (char *)v10 + v51;
      uint64_t v53 = (char *)v11 + v51;
      if (v15((char *)v11 + v51, 1, v12))
      {
        sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v52, v53, v12);
        uint64_t v15 = v127;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v52, 0, 1, v12);
      }
      uint64_t v55 = _s6StylesV5EmptyVMa(0);
      v129(&v52[*(int *)(v55 + 20)], &v53[*(int *)(v55 + 20)], v20);
      v52[*(int *)(v55 + 24)] = v53[*(int *)(v55 + 24)];
      uint64_t v56 = v16[14];
      uint64_t v57 = (char *)v10 + v56;
      uint64_t v58 = (char *)v11 + v56;
      if (v15((char *)v11 + v56, 1, v12))
      {
        sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v57, v58, v12);
        uint64_t v15 = v127;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v57, 0, 1, v12);
      }
      uint64_t v60 = _s6StylesV5DailyVMa(0);
      v129(&v57[*(int *)(v60 + 20)], &v58[*(int *)(v60 + 20)], v20);
      v57[*(int *)(v60 + 24)] = v58[*(int *)(v60 + 24)];
      uint64_t v61 = v16[15];
      uint64_t v62 = (char *)v10 + v61;
      uint64_t v63 = (char *)v11 + v61;
      if (v15((char *)v11 + v61, 1, v12))
      {
        sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v62, v63, v12);
        uint64_t v15 = v127;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v62, 0, 1, v12);
      }
      a1 = v33;
      uint64_t v65 = _s6StylesV9MomentaryVMa(0);
      v129(&v62[*(int *)(v65 + 20)], &v63[*(int *)(v65 + 20)], v20);
      uint64_t v66 = v16[16];
      int v67 = (char *)v10 + v66;
      uint64_t v68 = (char *)v11 + v66;
      if (v15((char *)v11 + v66, 1, v12))
      {
        sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v67, v68, v12);
        uint64_t v15 = v127;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v67, 0, 1, v12);
      }
      uint64_t v70 = _s6StylesV6HeaderVMa(0);
      v129(&v67[*(int *)(v70 + 20)], &v68[*(int *)(v70 + 20)], v20);
      uint64_t v71 = v16[17];
      uint64_t v72 = (char *)v10 + v71;
      uint64_t v73 = (char *)v11 + v71;
      if (v15((char *)v11 + v71, 1, v12))
      {
        sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v72, v73, v12);
        uint64_t v15 = v127;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v72, 0, 1, v12);
      }
      uint64_t v75 = _s6StylesV11ChartButtonVMa(0);
      v129(&v72[*(int *)(v75 + 20)], &v73[*(int *)(v75 + 20)], v20);
      uint64_t v76 = v16[18];
      uint64_t v77 = (char *)v10 + v76;
      uint64_t v78 = (char *)v11 + v76;
      if (v15(v78, 1, v12))
      {
        sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v77, v78, *(void *)(*(void *)(v79 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v77, v78, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v77, 0, 1, v12);
      }
      uint64_t v6 = v122;
      uint64_t v3 = v124;
      uint64_t v80 = _s6StylesV15LogButtonFooterVMa(0);
      v129(&v77[*(int *)(v80 + 20)], &v78[*(int *)(v80 + 20)], v20);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v81 = v6[6];
    uint64_t v82 = (void *)((char *)a1 + v81);
    uint64_t v83 = (void *)((char *)v3 + v81);
    uint64_t v84 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
    uint64_t v85 = *((void *)v84 - 1);
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v85 + 48))(v83, 1, v84))
    {
      sub_2560B4008(0, &qword_269F46358, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary, MEMORY[0x263F8D8F0]);
      memcpy(v82, v83, *(void *)(*(void *)(v86 - 8) + 64));
    }
    else
    {
      uint64_t v123 = v6;
      uint64_t v125 = v3;
      uint64_t v131 = a1;
      void *v82 = *v83;
      uint64_t v87 = v84[5];
      unint64_t v88 = (char *)v82 + v87;
      uint64_t v89 = (char *)v83 + v87;
      uint64_t v90 = sub_256177DB8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16))(v88, v89, v90);
      uint64_t v91 = v84[6];
      uint64_t v92 = (void *)((char *)v82 + v91);
      uint64_t v93 = (void *)((char *)v83 + v91);
      uint64_t v94 = v93[1];
      *uint64_t v92 = *v93;
      v92[1] = v94;
      uint64_t v95 = v84[7];
      long long v96 = (char *)v82 + v95;
      long long v97 = (char *)v83 + v95;
      uint64_t v98 = (int *)_s5EntryVMa();
      uint64_t v130 = *((void *)v98 - 1);
      uint64_t v99 = *(unsigned int (**)(char *, uint64_t, int *))(v130 + 48);
      swift_bridgeObjectRetain();
      if (v99(v97, 1, v98))
      {
        sub_2560B4008(0, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
        memcpy(v96, v97, *(void *)(*(void *)(v100 - 8) + 64));
      }
      else
      {
        uint64_t v101 = sub_2561758A8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 16))(v96, v97, v101);
        uint64_t v102 = v98[5];
        uint64_t v103 = &v96[v102];
        uint64_t v104 = &v97[v102];
        uint64_t v105 = *((void *)v104 + 1);
        *(void *)uint64_t v103 = *(void *)v104;
        *((void *)v103 + 1) = v105;
        uint64_t v106 = v98[6];
        uint64_t v107 = &v96[v106];
        uint64_t v108 = &v97[v106];
        uint64_t v128 = *((void *)v108 + 1);
        *(void *)uint64_t v107 = *(void *)v108;
        *((void *)v107 + 1) = v128;
        uint64_t v109 = v98[7];
        unsigned int v110 = &v96[v109];
        uint64_t v111 = &v97[v109];
        uint64_t v112 = *((void *)v111 + 1);
        *(void *)unsigned int v110 = *(void *)v111;
        *((void *)v110 + 1) = v112;
        uint64_t v113 = v98[8];
        uint64_t v114 = &v96[v113];
        uint64_t v115 = &v97[v113];
        uint64_t v116 = *((void *)v115 + 1);
        *(void *)uint64_t v114 = *(void *)v115;
        *((void *)v114 + 1) = v116;
        *(void *)&v96[v98[9]] = *(void *)&v97[v98[9]];
        uint64_t v117 = *(void (**)(char *, void, uint64_t, int *))(v130 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v117(v96, 0, 1, v98);
      }
      *(void *)((char *)v82 + v84[8]) = *(void *)((char *)v83 + v84[8]);
      *(void *)((char *)v82 + v84[9]) = *(void *)((char *)v83 + v84[9]);
      uint64_t v118 = *(void (**)(void *, void, uint64_t, int *))(v85 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v118(v82, 0, 1, v84);
      a1 = v131;
      uint64_t v6 = v123;
      uint64_t v3 = v125;
    }
    *(void *)((char *)a1 + v6[7]) = *(void *)((char *)v3 + v6[7]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_2560AE120(uint64_t a1, uint64_t a2)
{
  sub_2560B4008(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_2560B4008(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v52 = a2;
    uint64_t v6 = sub_256176AA8();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    if (!v8(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
    uint64_t v9 = type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v10 = v5 + *(int *)(v9 + 20);
    uint64_t v11 = sub_256176158();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
    uint64_t v13 = v10;
    uint64_t v14 = (int *)v9;
    v12(v13, v11);
    uint64_t v15 = v5 + *(int *)(v9 + 28);
    uint64_t v16 = sub_256175D98();
    uint64_t v50 = *(void (**)(uint64_t))(*(void *)(v16 - 8) + 8);
    uint64_t v51 = v16;
    v50(v15);
    uint64_t v17 = v5 + v14[8];
    if (!v8(v17, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v17, v6);
    }
    uint64_t v18 = _s6StylesV8TimelineVMa(0);
    v12(v17 + *(int *)(v18 + 20), v11);
    uint64_t v19 = v5 + v14[9];
    if (!v8(v19, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v19, v6);
    }
    uint64_t v20 = _s6StylesV6NoDataVMa(0);
    v12(v19 + *(int *)(v20 + 20), v11);
    uint64_t v21 = v5 + v14[10];
    if (!v8(v21, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v21, v6);
    }
    uint64_t v22 = _s6StylesV11PlaceholderVMa(0);
    v12(v21 + *(int *)(v22 + 20), v11);
    uint64_t v23 = v5 + v14[11];
    if (!v8(v23, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v23, v6);
    }
    uint64_t v24 = _s6StylesV6SymbolVMa(0);
    v12(v23 + *(int *)(v24 + 20), v11);
    uint64_t v25 = v5 + v14[12];
    uint64_t v53 = v14;
    if (!v8(v25, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v25, v6);
    }
    uint64_t v26 = v7;
    uint64_t v27 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v12(v25 + *(int *)(v27 + 20), v11);
    uint64_t v28 = *(int *)(v27 + 28);
    uint64_t v29 = v26;
    ((void (*)(uint64_t, uint64_t))v50)(v25 + v28, v51);
    uint64_t v30 = v5 + v53[13];
    if (!v8(v30, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v30, v6);
    }
    uint64_t v31 = _s6StylesV5EmptyVMa(0);
    v12(v30 + *(int *)(v31 + 20), v11);
    uint64_t v32 = v5 + v53[14];
    if (!v8(v32, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32, v6);
    }
    uint64_t v33 = _s6StylesV5DailyVMa(0);
    v12(v32 + *(int *)(v33 + 20), v11);
    uint64_t v34 = v5 + v53[15];
    if (!v8(v34, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v34, v6);
    }
    uint64_t v35 = _s6StylesV9MomentaryVMa(0);
    v12(v34 + *(int *)(v35 + 20), v11);
    uint64_t v36 = v5 + v53[16];
    if (!v8(v36, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v36, v6);
    }
    uint64_t v37 = _s6StylesV6HeaderVMa(0);
    v12(v36 + *(int *)(v37 + 20), v11);
    uint64_t v38 = v5 + v53[17];
    if (!v8(v38, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v38, v6);
    }
    uint64_t v39 = _s6StylesV11ChartButtonVMa(0);
    v12(v38 + *(int *)(v39 + 20), v11);
    uint64_t v40 = v5 + v53[18];
    if (!v8(v40, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v40, v6);
    }
    uint64_t v41 = _s6StylesV15LogButtonFooterVMa(0);
    v12(v40 + *(int *)(v41 + 20), v11);
    a2 = v52;
  }
  else
  {
    swift_release();
  }
  uint64_t v42 = a1 + *(int *)(a2 + 24);
  uint64_t v43 = type metadata accessor for StateOfMindTimeline.DaySummary();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 48))(v42, 1, v43))
  {
    uint64_t v44 = v42 + *(int *)(v43 + 20);
    uint64_t v45 = sub_256177DB8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v44, v45);
    swift_bridgeObjectRelease();
    uint64_t v46 = v42 + *(int *)(v43 + 28);
    uint64_t v47 = _s5EntryVMa();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 48))(v46, 1, v47))
    {
      uint64_t v48 = sub_2561758A8();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8))(v46, v48);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

void *sub_2560AE984(void *a1, void *a2, int *a3)
{
  sub_2560B4008(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256175D98();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_2560B4008(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v120 = a3;
    uint64_t v10 = sub_256176AA8();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v127 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    uint64_t v126 = v11;
    uint64_t v122 = a2;
    if (v127((char *)v9, 1, v10))
    {
      sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v13 = v127;
    uint64_t v14 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v15 = v14[5];
    uint64_t v16 = (char *)v8 + v15;
    uint64_t v17 = (char *)v9 + v15;
    uint64_t v18 = sub_256176158();
    uint64_t v19 = (void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
    uint64_t v128 = *v19;
    (*v19)(v16, v17, v18);
    *((unsigned char *)v8 + v14[6]) = *((unsigned char *)v9 + v14[6]);
    uint64_t v20 = v14[7];
    uint64_t v21 = (char *)v8 + v20;
    uint64_t v22 = (char *)v9 + v20;
    uint64_t v23 = sub_256175D98();
    uint64_t v118 = *(void (**)(char *, char *))(*(void *)(v23 - 8) + 16);
    uint64_t v119 = v23;
    v118(v21, v22);
    uint64_t v24 = v14[8];
    uint64_t v25 = (char *)v8 + v24;
    uint64_t v26 = (char *)v9 + v24;
    if (v127((char *)v9 + v24, 1, v10))
    {
      sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v25, v26, v10);
      uint64_t v13 = v127;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v25, 0, 1, v10);
    }
    uint64_t v28 = _s6StylesV8TimelineVMa(0);
    v128(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v18);
    uint64_t v29 = v14[9];
    uint64_t v30 = (char *)v8 + v29;
    uint64_t v31 = (char *)v9 + v29;
    uint64_t v124 = a1;
    if (v13((char *)v9 + v29, 1, v10))
    {
      sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v30, v31, v10);
      uint64_t v13 = v127;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v30, 0, 1, v10);
    }
    uint64_t v33 = _s6StylesV6NoDataVMa(0);
    v128(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v18);
    v30[*(int *)(v33 + 24)] = v31[*(int *)(v33 + 24)];
    uint64_t v34 = v14[10];
    uint64_t v35 = (char *)v8 + v34;
    uint64_t v36 = (char *)v9 + v34;
    if (v13((char *)v9 + v34, 1, v10))
    {
      sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v35, v36, v10);
      uint64_t v13 = v127;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v35, 0, 1, v10);
    }
    uint64_t v38 = _s6StylesV11PlaceholderVMa(0);
    v128(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v18);
    uint64_t v39 = v14[11];
    uint64_t v40 = (char *)v8 + v39;
    uint64_t v41 = (char *)v9 + v39;
    if (v13((char *)v9 + v39, 1, v10))
    {
      sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v40, v41, v10);
      uint64_t v13 = v127;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v40, 0, 1, v10);
    }
    uint64_t v43 = _s6StylesV6SymbolVMa(0);
    v128(&v40[*(int *)(v43 + 20)], &v41[*(int *)(v43 + 20)], v18);
    uint64_t v44 = v14[12];
    uint64_t v45 = (char *)v8 + v44;
    uint64_t v46 = (char *)v9 + v44;
    if (v13((char *)v9 + v44, 1, v10))
    {
      sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v45, v46, v10);
      uint64_t v13 = v127;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v45, 0, 1, v10);
    }
    uint64_t v48 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v128(&v45[v48[5]], &v46[v48[5]], v18);
    v45[v48[6]] = v46[v48[6]];
    ((void (*)(char *, char *, uint64_t))v118)(&v45[v48[7]], &v46[v48[7]], v119);
    uint64_t v49 = v14[13];
    uint64_t v50 = (char *)v8 + v49;
    uint64_t v51 = (char *)v9 + v49;
    if (v13((char *)v9 + v49, 1, v10))
    {
      sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v50, v51, v10);
      uint64_t v13 = v127;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v50, 0, 1, v10);
    }
    uint64_t v53 = _s6StylesV5EmptyVMa(0);
    v128(&v50[*(int *)(v53 + 20)], &v51[*(int *)(v53 + 20)], v18);
    v50[*(int *)(v53 + 24)] = v51[*(int *)(v53 + 24)];
    uint64_t v54 = v14[14];
    uint64_t v55 = (char *)v8 + v54;
    uint64_t v56 = (char *)v9 + v54;
    if (v13((char *)v9 + v54, 1, v10))
    {
      sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v55, v56, v10);
      uint64_t v13 = v127;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v55, 0, 1, v10);
    }
    uint64_t v58 = _s6StylesV5DailyVMa(0);
    v128(&v55[*(int *)(v58 + 20)], &v56[*(int *)(v58 + 20)], v18);
    v55[*(int *)(v58 + 24)] = v56[*(int *)(v58 + 24)];
    uint64_t v59 = v14[15];
    uint64_t v60 = (char *)v8 + v59;
    uint64_t v61 = (char *)v9 + v59;
    if (v13((char *)v9 + v59, 1, v10))
    {
      sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v60, v61, v10);
      uint64_t v13 = v127;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v60, 0, 1, v10);
    }
    a1 = v124;
    uint64_t v63 = _s6StylesV9MomentaryVMa(0);
    v128(&v60[*(int *)(v63 + 20)], &v61[*(int *)(v63 + 20)], v18);
    uint64_t v64 = v14[16];
    uint64_t v65 = (char *)v8 + v64;
    uint64_t v66 = (char *)v9 + v64;
    if (v13((char *)v9 + v64, 1, v10))
    {
      sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v65, v66, v10);
      uint64_t v13 = v127;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v65, 0, 1, v10);
    }
    uint64_t v68 = _s6StylesV6HeaderVMa(0);
    v128(&v65[*(int *)(v68 + 20)], &v66[*(int *)(v68 + 20)], v18);
    uint64_t v69 = v14[17];
    uint64_t v70 = (char *)v8 + v69;
    uint64_t v71 = (char *)v9 + v69;
    if (v13((char *)v9 + v69, 1, v10))
    {
      sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v70, v71, v10);
      uint64_t v13 = v127;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v70, 0, 1, v10);
    }
    uint64_t v73 = _s6StylesV11ChartButtonVMa(0);
    v128(&v70[*(int *)(v73 + 20)], &v71[*(int *)(v73 + 20)], v18);
    uint64_t v74 = v14[18];
    uint64_t v75 = (char *)v8 + v74;
    uint64_t v76 = (char *)v9 + v74;
    if (v13((char *)v9 + v74, 1, v10))
    {
      sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v75, v76, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v75, 0, 1, v10);
    }
    a3 = v120;
    a2 = v122;
    uint64_t v78 = _s6StylesV15LogButtonFooterVMa(0);
    v128(&v75[*(int *)(v78 + 20)], &v76[*(int *)(v78 + 20)], v18);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v79 = a3[6];
  uint64_t v80 = (void *)((char *)a1 + v79);
  uint64_t v81 = (void *)((char *)a2 + v79);
  uint64_t v82 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  uint64_t v83 = *((void *)v82 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v83 + 48))(v81, 1, v82))
  {
    sub_2560B4008(0, &qword_269F46358, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary, MEMORY[0x263F8D8F0]);
    memcpy(v80, v81, *(void *)(*(void *)(v84 - 8) + 64));
  }
  else
  {
    uint64_t v121 = a3;
    uint64_t v123 = a2;
    uint64_t v125 = a1;
    *uint64_t v80 = *v81;
    uint64_t v85 = v82[5];
    uint64_t v86 = (char *)v80 + v85;
    uint64_t v87 = (char *)v81 + v85;
    uint64_t v88 = sub_256177DB8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16))(v86, v87, v88);
    uint64_t v89 = v82[6];
    uint64_t v90 = (void *)((char *)v80 + v89);
    uint64_t v91 = (void *)((char *)v81 + v89);
    uint64_t v92 = v91[1];
    *uint64_t v90 = *v91;
    v90[1] = v92;
    uint64_t v93 = v82[7];
    uint64_t v94 = (char *)v80 + v93;
    uint64_t v95 = (char *)v81 + v93;
    long long v96 = (int *)_s5EntryVMa();
    uint64_t v130 = *((void *)v96 - 1);
    long long v97 = *(unsigned int (**)(char *, uint64_t, int *))(v130 + 48);
    swift_bridgeObjectRetain();
    if (v97(v95, 1, v96))
    {
      sub_2560B4008(0, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
      memcpy(v94, v95, *(void *)(*(void *)(v98 - 8) + 64));
    }
    else
    {
      uint64_t v99 = sub_2561758A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 16))(v94, v95, v99);
      uint64_t v100 = v96[5];
      uint64_t v101 = &v94[v100];
      uint64_t v102 = &v95[v100];
      uint64_t v103 = *((void *)v102 + 1);
      *(void *)uint64_t v101 = *(void *)v102;
      *((void *)v101 + 1) = v103;
      uint64_t v104 = v96[6];
      uint64_t v105 = &v94[v104];
      uint64_t v106 = &v95[v104];
      uint64_t v129 = *((void *)v106 + 1);
      *(void *)uint64_t v105 = *(void *)v106;
      *((void *)v105 + 1) = v129;
      uint64_t v107 = v96[7];
      uint64_t v108 = &v94[v107];
      uint64_t v109 = &v95[v107];
      uint64_t v110 = *((void *)v109 + 1);
      *(void *)uint64_t v108 = *(void *)v109;
      *((void *)v108 + 1) = v110;
      uint64_t v111 = v96[8];
      uint64_t v112 = &v94[v111];
      uint64_t v113 = &v95[v111];
      uint64_t v114 = *((void *)v113 + 1);
      *(void *)uint64_t v112 = *(void *)v113;
      *((void *)v112 + 1) = v114;
      *(void *)&v94[v96[9]] = *(void *)&v95[v96[9]];
      uint64_t v115 = *(void (**)(char *, void, uint64_t, int *))(v130 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v115(v94, 0, 1, v96);
    }
    *(void *)((char *)v80 + v82[8]) = *(void *)((char *)v81 + v82[8]);
    *(void *)((char *)v80 + v82[9]) = *(void *)((char *)v81 + v82[9]);
    uint64_t v116 = *(void (**)(void *, void, uint64_t, int *))(v83 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v116(v80, 0, 1, v82);
    a2 = v123;
    a1 = v125;
    a3 = v121;
  }
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_2560AFB64(uint64_t a1, void *a2, int *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = (void *)a1;
  if ((void *)a1 != a2)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_2560B11D8(a1, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    sub_2560B4008(0, &qword_269F47D00, v6, v7);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v5, v4, v8);
    }
    else
    {
      *uint64_t v5 = *v4;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (void *)((char *)v5 + v9);
    uint64_t v11 = (void *)((char *)v4 + v9);
    uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_2560B11D8((uint64_t)v5 + v9, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    sub_2560B4008(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, v12);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_256176AA8();
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v170 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
      uint64_t v167 = v5;
      uint64_t v169 = v14;
      uint64_t v164 = v4;
      if (v170((char *)v11, 1, v13))
      {
        sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v10, v11, v13);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v13);
      }
      uint64_t v16 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v17 = v16[5];
      uint64_t v18 = (char *)v10 + v17;
      uint64_t v19 = (char *)v11 + v17;
      uint64_t v20 = sub_256176158();
      uint64_t v171 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
      v171(v18, v19, v20);
      *((unsigned char *)v10 + v16[6]) = *((unsigned char *)v11 + v16[6]);
      uint64_t v21 = v16[7];
      uint64_t v22 = (char *)v10 + v21;
      uint64_t v23 = (char *)v11 + v21;
      uint64_t v24 = sub_256175D98();
      uint64_t v162 = *(void (**)(char *, char *))(*(void *)(v24 - 8) + 16);
      uint64_t v163 = v24;
      v162(v22, v23);
      uint64_t v25 = v16[8];
      uint64_t v26 = (char *)v10 + v25;
      uint64_t v27 = (char *)v11 + v25;
      uint64_t v28 = v170;
      if (v170((char *)v11 + v25, 1, v13))
      {
        sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v169 + 16))(v26, v27, v13);
        uint64_t v28 = v170;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v169 + 56))(v26, 0, 1, v13);
      }
      uint64_t v30 = _s6StylesV8TimelineVMa(0);
      v171(&v26[*(int *)(v30 + 20)], &v27[*(int *)(v30 + 20)], v20);
      uint64_t v31 = v16[9];
      uint64_t v32 = (char *)v10 + v31;
      uint64_t v33 = (char *)v11 + v31;
      uint64_t v34 = a3;
      if (v28((char *)v11 + v31, 1, v13))
      {
        sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v169 + 16))(v32, v33, v13);
        uint64_t v28 = v170;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v169 + 56))(v32, 0, 1, v13);
      }
      uint64_t v36 = _s6StylesV6NoDataVMa(0);
      v171(&v32[*(int *)(v36 + 20)], &v33[*(int *)(v36 + 20)], v20);
      v32[*(int *)(v36 + 24)] = v33[*(int *)(v36 + 24)];
      uint64_t v37 = v16[10];
      uint64_t v38 = (char *)v10 + v37;
      uint64_t v39 = (char *)v11 + v37;
      if (v28((char *)v11 + v37, 1, v13))
      {
        sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v169 + 16))(v38, v39, v13);
        uint64_t v28 = v170;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v169 + 56))(v38, 0, 1, v13);
      }
      uint64_t v41 = _s6StylesV11PlaceholderVMa(0);
      v171(&v38[*(int *)(v41 + 20)], &v39[*(int *)(v41 + 20)], v20);
      uint64_t v42 = v16[11];
      uint64_t v43 = (char *)v10 + v42;
      uint64_t v44 = (char *)v11 + v42;
      if (v28((char *)v11 + v42, 1, v13))
      {
        sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v169 + 16))(v43, v44, v13);
        uint64_t v28 = v170;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v169 + 56))(v43, 0, 1, v13);
      }
      uint64_t v46 = _s6StylesV6SymbolVMa(0);
      v171(&v43[*(int *)(v46 + 20)], &v44[*(int *)(v46 + 20)], v20);
      uint64_t v47 = v16[12];
      uint64_t v48 = (char *)v10 + v47;
      uint64_t v49 = (char *)v11 + v47;
      if (v28((char *)v11 + v47, 1, v13))
      {
        sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v169 + 16))(v48, v49, v13);
        uint64_t v28 = v170;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v169 + 56))(v48, 0, 1, v13);
      }
      uint64_t v51 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v171(&v48[v51[5]], &v49[v51[5]], v20);
      v48[v51[6]] = v49[v51[6]];
      ((void (*)(char *, char *, uint64_t))v162)(&v48[v51[7]], &v49[v51[7]], v163);
      uint64_t v52 = v16[13];
      uint64_t v53 = (char *)v10 + v52;
      uint64_t v54 = (char *)v11 + v52;
      if (v28((char *)v11 + v52, 1, v13))
      {
        sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v169 + 16))(v53, v54, v13);
        uint64_t v28 = v170;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v169 + 56))(v53, 0, 1, v13);
      }
      uint64_t v56 = _s6StylesV5EmptyVMa(0);
      v171(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v20);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      uint64_t v57 = v16[14];
      uint64_t v58 = (char *)v10 + v57;
      uint64_t v59 = (char *)v11 + v57;
      if (v28((char *)v11 + v57, 1, v13))
      {
        sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v169 + 16))(v58, v59, v13);
        uint64_t v28 = v170;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v169 + 56))(v58, 0, 1, v13);
      }
      uint64_t v61 = _s6StylesV5DailyVMa(0);
      v171(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v20);
      v58[*(int *)(v61 + 24)] = v59[*(int *)(v61 + 24)];
      uint64_t v62 = v16[15];
      uint64_t v63 = (char *)v10 + v62;
      uint64_t v64 = (char *)v11 + v62;
      if (v28((char *)v11 + v62, 1, v13))
      {
        sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v169 + 16))(v63, v64, v13);
        uint64_t v28 = v170;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v169 + 56))(v63, 0, 1, v13);
      }
      a3 = v34;
      uint64_t v66 = _s6StylesV9MomentaryVMa(0);
      v171(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v20);
      uint64_t v67 = v16[16];
      uint64_t v68 = (char *)v10 + v67;
      uint64_t v69 = (char *)v11 + v67;
      if (v28((char *)v11 + v67, 1, v13))
      {
        sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v169 + 16))(v68, v69, v13);
        uint64_t v28 = v170;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v169 + 56))(v68, 0, 1, v13);
      }
      uint64_t v71 = _s6StylesV6HeaderVMa(0);
      v171(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v20);
      uint64_t v72 = v16[17];
      uint64_t v73 = (char *)v10 + v72;
      uint64_t v74 = (char *)v11 + v72;
      if (v28((char *)v11 + v72, 1, v13))
      {
        sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v169 + 16))(v73, v74, v13);
        uint64_t v28 = v170;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v169 + 56))(v73, 0, 1, v13);
      }
      uint64_t v76 = _s6StylesV11ChartButtonVMa(0);
      v171(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v20);
      uint64_t v77 = v16[18];
      uint64_t v78 = (char *)v10 + v77;
      uint64_t v79 = (char *)v11 + v77;
      if (v28((char *)v11 + v77, 1, v13))
      {
        sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v169 + 16))(v78, v79, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v169 + 56))(v78, 0, 1, v13);
      }
      uint64_t v4 = v164;
      uint64_t v81 = _s6StylesV15LogButtonFooterVMa(0);
      v171(&v78[*(int *)(v81 + 20)], &v79[*(int *)(v81 + 20)], v20);
      uint64_t v5 = v167;
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v82 = a3[6];
  uint64_t v83 = (void *)((char *)v5 + v82);
  uint64_t v84 = (void *)((char *)v4 + v82);
  uint64_t v85 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  uint64_t v86 = *((void *)v85 - 1);
  uint64_t v87 = *(uint64_t (**)(void *, uint64_t, int *))(v86 + 48);
  int v88 = v87(v83, 1, v85);
  int v89 = v87(v84, 1, v85);
  if (!v88)
  {
    if (v89)
    {
      sub_2560B1234((uint64_t)v83, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.DaySummary);
      goto LABEL_51;
    }
    uint64_t v174 = a3;
    uint64_t v166 = v4;
    uint64_t v168 = v5;
    *uint64_t v83 = *v84;
    uint64_t v104 = v85[5];
    uint64_t v105 = (char *)v83 + v104;
    uint64_t v106 = (char *)v84 + v104;
    uint64_t v107 = sub_256177DB8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 24))(v105, v106, v107);
    uint64_t v108 = v85[6];
    uint64_t v109 = (void *)((char *)v83 + v108);
    uint64_t v110 = (void *)((char *)v84 + v108);
    *uint64_t v109 = *v110;
    v109[1] = v110[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v111 = v85[7];
    uint64_t v112 = (char *)v83 + v111;
    uint64_t v113 = (char *)v84 + v111;
    uint64_t v114 = (int *)_s5EntryVMa();
    uint64_t v115 = *((void *)v114 - 1);
    uint64_t v116 = *(uint64_t (**)(char *, uint64_t, int *))(v115 + 48);
    LODWORD(v105) = v116(v112, 1, v114);
    int v117 = v116(v113, 1, v114);
    if (v105)
    {
      if (!v117)
      {
        uint64_t v118 = sub_2561758A8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 16))(v112, v113, v118);
        uint64_t v119 = v114[5];
        uint64_t v120 = &v112[v119];
        uint64_t v121 = &v113[v119];
        *(void *)uint64_t v120 = *(void *)v121;
        *((void *)v120 + 1) = *((void *)v121 + 1);
        uint64_t v122 = v114[6];
        uint64_t v123 = &v112[v122];
        uint64_t v124 = &v113[v122];
        *(void *)uint64_t v123 = *(void *)v124;
        *((void *)v123 + 1) = *((void *)v124 + 1);
        uint64_t v125 = v114[7];
        uint64_t v126 = &v112[v125];
        uint64_t v127 = &v113[v125];
        *(void *)uint64_t v126 = *(void *)v127;
        *((void *)v126 + 1) = *((void *)v127 + 1);
        uint64_t v128 = v114[8];
        uint64_t v129 = &v112[v128];
        uint64_t v130 = &v113[v128];
        *(void *)uint64_t v129 = *(void *)v130;
        *((void *)v129 + 1) = *((void *)v130 + 1);
        *(void *)&v112[v114[9]] = *(void *)&v113[v114[9]];
        uint64_t v131 = *(void (**)(char *, void, uint64_t, int *))(v115 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v131(v112, 0, 1, v114);
LABEL_60:
        uint64_t v4 = v166;
        a3 = v174;
        *(void *)((char *)v83 + v85[8]) = *(void *)((char *)v84 + v85[8]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)((char *)v83 + v85[9]) = *(void *)((char *)v84 + v85[9]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_61:
        uint64_t v5 = v168;
        goto LABEL_62;
      }
    }
    else
    {
      if (!v117)
      {
        uint64_t v149 = sub_2561758A8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 24))(v112, v113, v149);
        uint64_t v150 = v114[5];
        uint64_t v151 = &v112[v150];
        uint64_t v152 = &v113[v150];
        *(void *)uint64_t v151 = *(void *)v152;
        *((void *)v151 + 1) = *((void *)v152 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v153 = v114[6];
        char v154 = &v112[v153];
        uint64_t v155 = &v113[v153];
        *(void *)char v154 = *(void *)v155;
        *((void *)v154 + 1) = *((void *)v155 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v156 = v114[7];
        uint64_t v157 = &v112[v156];
        uint64_t v158 = &v113[v156];
        *(void *)uint64_t v157 = *(void *)v158;
        *((void *)v157 + 1) = *((void *)v158 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v159 = v114[8];
        uint64_t v160 = &v112[v159];
        uint64_t v161 = &v113[v159];
        *(void *)uint64_t v160 = *(void *)v161;
        *((void *)v160 + 1) = *((void *)v161 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)&v112[v114[9]] = *(void *)&v113[v114[9]];
        goto LABEL_60;
      }
      sub_2560B1234((uint64_t)v112, (uint64_t (*)(void))_s5EntryVMa);
    }
    sub_2560B4008(0, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
    memcpy(v112, v113, *(void *)(*(void *)(v147 - 8) + 64));
    goto LABEL_60;
  }
  if (!v89)
  {
    unsigned __int8 v173 = a3;
    uint64_t v165 = v4;
    uint64_t v168 = v5;
    *uint64_t v83 = *v84;
    uint64_t v90 = v85[5];
    uint64_t v91 = (char *)v83 + v90;
    uint64_t v92 = (char *)v84 + v90;
    uint64_t v93 = sub_256177DB8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 16))(v91, v92, v93);
    uint64_t v94 = v85[6];
    uint64_t v95 = (void *)((char *)v83 + v94);
    long long v96 = (void *)((char *)v84 + v94);
    *uint64_t v95 = *v96;
    v95[1] = v96[1];
    uint64_t v97 = v85[7];
    uint64_t v98 = (char *)v83 + v97;
    uint64_t v99 = (char *)v84 + v97;
    uint64_t v100 = (int *)_s5EntryVMa();
    uint64_t v172 = *((void *)v100 - 1);
    uint64_t v101 = *(unsigned int (**)(char *, uint64_t, int *))(v172 + 48);
    swift_bridgeObjectRetain();
    if (v101(v99, 1, v100))
    {
      sub_2560B4008(0, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
      memcpy(v98, v99, *(void *)(*(void *)(v102 - 8) + 64));
    }
    else
    {
      uint64_t v132 = sub_2561758A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v132 - 8) + 16))(v98, v99, v132);
      uint64_t v133 = v100[5];
      uint64_t v134 = &v98[v133];
      uint64_t v135 = &v99[v133];
      *(void *)uint64_t v134 = *(void *)v135;
      *((void *)v134 + 1) = *((void *)v135 + 1);
      uint64_t v136 = v100[6];
      uint64_t v137 = &v98[v136];
      uint64_t v138 = &v99[v136];
      *(void *)uint64_t v137 = *(void *)v138;
      *((void *)v137 + 1) = *((void *)v138 + 1);
      uint64_t v139 = v100[7];
      uint64_t v140 = &v98[v139];
      uint64_t v141 = &v99[v139];
      *(void *)uint64_t v140 = *(void *)v141;
      *((void *)v140 + 1) = *((void *)v141 + 1);
      uint64_t v142 = v100[8];
      uint64_t v143 = &v98[v142];
      char v144 = &v99[v142];
      *(void *)uint64_t v143 = *(void *)v144;
      *((void *)v143 + 1) = *((void *)v144 + 1);
      *(void *)&v98[v100[9]] = *(void *)&v99[v100[9]];
      uint64_t v145 = *(void (**)(char *, void, uint64_t, int *))(v172 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v145(v98, 0, 1, v100);
    }
    uint64_t v4 = v165;
    a3 = v173;
    *(void *)((char *)v83 + v85[8]) = *(void *)((char *)v84 + v85[8]);
    *(void *)((char *)v83 + v85[9]) = *(void *)((char *)v84 + v85[9]);
    uint64_t v146 = *(void (**)(void *, void, uint64_t, int *))(v86 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v146(v83, 0, 1, v85);
    goto LABEL_61;
  }
LABEL_51:
  sub_2560B4008(0, &qword_269F46358, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary, MEMORY[0x263F8D8F0]);
  memcpy(v83, v84, *(void *)(*(void *)(v103 - 8) + 64));
LABEL_62:
  *(void *)((char *)v5 + a3[7]) = *(void *)((char *)v4 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_2560B11D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_2560B4008(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_2560B1234(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *sub_2560B1294(char *a1, char *a2, int *a3)
{
  sub_2560B4008(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  uint64_t v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_256175D98();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  sub_2560B4008(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  uint64_t v13 = v12;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_256176AA8();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v108 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    uint64_t v107 = v15;
    uint64_t v101 = a1;
    uint64_t v104 = a2;
    if (v108(v11, 1, v14))
    {
      sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v10, v11, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
    }
    uint64_t v17 = v108;
    uint64_t v18 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v19 = v18[5];
    uint64_t v20 = &v10[v19];
    uint64_t v21 = &v11[v19];
    uint64_t v22 = sub_256176158();
    uint64_t v23 = (void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32);
    uint64_t v109 = *v23;
    (*v23)(v20, v21, v22);
    v10[v18[6]] = v11[v18[6]];
    uint64_t v24 = v18[7];
    uint64_t v25 = &v10[v24];
    uint64_t v26 = &v11[v24];
    uint64_t v27 = sub_256175D98();
    uint64_t v102 = *(void (**)(char *, char *))(*(void *)(v27 - 8) + 32);
    uint64_t v103 = v27;
    v102(v25, v26);
    uint64_t v28 = v18[8];
    uint64_t v29 = &v10[v28];
    uint64_t v30 = &v11[v28];
    if (v108(&v11[v28], 1, v14))
    {
      sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v29, v30, v14);
      uint64_t v17 = v108;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v107 + 56))(v29, 0, 1, v14);
    }
    uint64_t v32 = _s6StylesV8TimelineVMa(0);
    v109(&v29[*(int *)(v32 + 20)], &v30[*(int *)(v32 + 20)], v22);
    uint64_t v33 = v18[9];
    uint64_t v34 = &v10[v33];
    uint64_t v35 = &v11[v33];
    uint64_t v105 = a3;
    if (v17(&v11[v33], 1, v14))
    {
      sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v34, v35, v14);
      uint64_t v17 = v108;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v107 + 56))(v34, 0, 1, v14);
    }
    uint64_t v37 = _s6StylesV6NoDataVMa(0);
    v109(&v34[*(int *)(v37 + 20)], &v35[*(int *)(v37 + 20)], v22);
    v34[*(int *)(v37 + 24)] = v35[*(int *)(v37 + 24)];
    uint64_t v38 = v18[10];
    uint64_t v39 = &v10[v38];
    uint64_t v40 = &v11[v38];
    if (v17(&v11[v38], 1, v14))
    {
      sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v39, v40, v14);
      uint64_t v17 = v108;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v107 + 56))(v39, 0, 1, v14);
    }
    uint64_t v42 = _s6StylesV11PlaceholderVMa(0);
    v109(&v39[*(int *)(v42 + 20)], &v40[*(int *)(v42 + 20)], v22);
    uint64_t v43 = v18[11];
    uint64_t v44 = &v10[v43];
    uint64_t v45 = &v11[v43];
    if (v17(&v11[v43], 1, v14))
    {
      sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v44, v45, v14);
      uint64_t v17 = v108;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v107 + 56))(v44, 0, 1, v14);
    }
    uint64_t v47 = _s6StylesV6SymbolVMa(0);
    v109(&v44[*(int *)(v47 + 20)], &v45[*(int *)(v47 + 20)], v22);
    uint64_t v48 = v18[12];
    uint64_t v49 = &v10[v48];
    uint64_t v50 = &v11[v48];
    if (v17(&v11[v48], 1, v14))
    {
      sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v49, v50, v14);
      uint64_t v17 = v108;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v107 + 56))(v49, 0, 1, v14);
    }
    uint64_t v52 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v109(&v49[v52[5]], &v50[v52[5]], v22);
    v49[v52[6]] = v50[v52[6]];
    ((void (*)(char *, char *, uint64_t))v102)(&v49[v52[7]], &v50[v52[7]], v103);
    uint64_t v53 = v18[13];
    uint64_t v54 = &v10[v53];
    uint64_t v55 = &v11[v53];
    if (v17(&v11[v53], 1, v14))
    {
      sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v54, v55, v14);
      uint64_t v17 = v108;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v107 + 56))(v54, 0, 1, v14);
    }
    uint64_t v57 = _s6StylesV5EmptyVMa(0);
    v109(&v54[*(int *)(v57 + 20)], &v55[*(int *)(v57 + 20)], v22);
    v54[*(int *)(v57 + 24)] = v55[*(int *)(v57 + 24)];
    uint64_t v58 = v18[14];
    uint64_t v59 = &v10[v58];
    uint64_t v60 = &v11[v58];
    if (v17(&v11[v58], 1, v14))
    {
      sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v59, v60, v14);
      uint64_t v17 = v108;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v107 + 56))(v59, 0, 1, v14);
    }
    uint64_t v62 = _s6StylesV5DailyVMa(0);
    v109(&v59[*(int *)(v62 + 20)], &v60[*(int *)(v62 + 20)], v22);
    v59[*(int *)(v62 + 24)] = v60[*(int *)(v62 + 24)];
    uint64_t v63 = v18[15];
    uint64_t v64 = &v10[v63];
    uint64_t v65 = &v11[v63];
    if (v17(&v11[v63], 1, v14))
    {
      sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v64, v65, v14);
      uint64_t v17 = v108;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v107 + 56))(v64, 0, 1, v14);
    }
    a3 = v105;
    uint64_t v67 = _s6StylesV9MomentaryVMa(0);
    v109(&v64[*(int *)(v67 + 20)], &v65[*(int *)(v67 + 20)], v22);
    uint64_t v68 = v18[16];
    uint64_t v69 = &v10[v68];
    uint64_t v70 = &v11[v68];
    if (v17(&v11[v68], 1, v14))
    {
      sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v69, v70, v14);
      uint64_t v17 = v108;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v107 + 56))(v69, 0, 1, v14);
    }
    uint64_t v72 = _s6StylesV6HeaderVMa(0);
    v109(&v69[*(int *)(v72 + 20)], &v70[*(int *)(v72 + 20)], v22);
    uint64_t v73 = v18[17];
    uint64_t v74 = &v10[v73];
    uint64_t v75 = &v11[v73];
    if (v17(&v11[v73], 1, v14))
    {
      sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v74, v75, v14);
      uint64_t v17 = v108;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v107 + 56))(v74, 0, 1, v14);
    }
    uint64_t v77 = _s6StylesV11ChartButtonVMa(0);
    v109(&v74[*(int *)(v77 + 20)], &v75[*(int *)(v77 + 20)], v22);
    uint64_t v78 = v18[18];
    uint64_t v79 = &v10[v78];
    uint64_t v80 = &v11[v78];
    if (v17(&v11[v78], 1, v14))
    {
      sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v79, v80, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v107 + 56))(v79, 0, 1, v14);
    }
    a1 = v101;
    uint64_t v82 = _s6StylesV15LogButtonFooterVMa(0);
    v109(&v79[*(int *)(v82 + 20)], &v80[*(int *)(v82 + 20)], v22);
    swift_storeEnumTagMultiPayload();
    a2 = v104;
  }
  else
  {
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  uint64_t v83 = a3[6];
  uint64_t v84 = &a1[v83];
  uint64_t v85 = &a2[v83];
  uint64_t v86 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  uint64_t v87 = *((void *)v86 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v87 + 48))(v85, 1, v86))
  {
    sub_2560B4008(0, &qword_269F46358, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary, MEMORY[0x263F8D8F0]);
    memcpy(v84, v85, *(void *)(*(void *)(v88 - 8) + 64));
  }
  else
  {
    uint64_t v106 = a3;
    *(void *)uint64_t v84 = *(void *)v85;
    uint64_t v89 = v86[5];
    uint64_t v90 = &v84[v89];
    uint64_t v91 = &v85[v89];
    uint64_t v92 = sub_256177DB8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 32))(v90, v91, v92);
    *(_OWORD *)&v84[v86[6]] = *(_OWORD *)&v85[v86[6]];
    uint64_t v93 = v86[7];
    uint64_t v94 = &v84[v93];
    uint64_t v95 = &v85[v93];
    long long v96 = (int *)_s5EntryVMa();
    uint64_t v97 = *((void *)v96 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v97 + 48))(v95, 1, v96))
    {
      sub_2560B4008(0, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
      memcpy(v94, v95, *(void *)(*(void *)(v98 - 8) + 64));
    }
    else
    {
      uint64_t v99 = sub_2561758A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 32))(v94, v95, v99);
      *(_OWORD *)&v94[v96[5]] = *(_OWORD *)&v95[v96[5]];
      *(_OWORD *)&v94[v96[6]] = *(_OWORD *)&v95[v96[6]];
      *(_OWORD *)&v94[v96[7]] = *(_OWORD *)&v95[v96[7]];
      *(_OWORD *)&v94[v96[8]] = *(_OWORD *)&v95[v96[8]];
      *(void *)&v94[v96[9]] = *(void *)&v95[v96[9]];
      (*(void (**)(char *, void, uint64_t, int *))(v97 + 56))(v94, 0, 1, v96);
    }
    *(void *)&v84[v86[8]] = *(void *)&v85[v86[8]];
    *(void *)&v84[v86[9]] = *(void *)&v85[v86[9]];
    (*(void (**)(char *, void, uint64_t, int *))(v87 + 56))(v84, 0, 1, v86);
    a3 = v106;
  }
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  return a1;
}

char *sub_2560B2430(char *a1, char *a2, int *a3)
{
  uint64_t v4 = a2;
  if (a1 != a2)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_2560B11D8((uint64_t)a1, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    sub_2560B4008(0, &qword_269F47D00, v6, v7);
    uint64_t v9 = v8;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_256175D98();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, v4, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, v4, *(void *)(*(void *)(v9 - 8) + 64));
    }
    uint64_t v11 = a3[5];
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &v4[v11];
    uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_2560B11D8((uint64_t)&a1[v11], &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    sub_2560B4008(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, v14);
    uint64_t v16 = v15;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_256176AA8();
      uint64_t v18 = *(void *)(v17 - 8);
      uint64_t v155 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
      uint64_t v151 = a3;
      uint64_t v154 = v18;
      if (v155(v13, 1, v17))
      {
        sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v12, v13, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v12, 0, 1, v17);
      }
      uint64_t v20 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v21 = v20[5];
      uint64_t v22 = &v12[v21];
      uint64_t v23 = &v13[v21];
      uint64_t v24 = sub_256176158();
      uint64_t v156 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32);
      v156(v22, v23, v24);
      v12[v20[6]] = v13[v20[6]];
      uint64_t v25 = v20[7];
      uint64_t v26 = &v12[v25];
      uint64_t v27 = &v13[v25];
      uint64_t v28 = sub_256175D98();
      uint64_t v148 = *(void (**)(char *, char *))(*(void *)(v28 - 8) + 32);
      uint64_t v149 = v28;
      v148(v26, v27);
      uint64_t v29 = v20[8];
      uint64_t v30 = &v12[v29];
      uint64_t v31 = &v13[v29];
      uint64_t v32 = v155;
      if (v155(&v13[v29], 1, v17))
      {
        sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v154 + 32))(v30, v31, v17);
        uint64_t v32 = v155;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v154 + 56))(v30, 0, 1, v17);
      }
      uint64_t v34 = _s6StylesV8TimelineVMa(0);
      v156(&v30[*(int *)(v34 + 20)], &v31[*(int *)(v34 + 20)], v24);
      uint64_t v35 = v20[9];
      uint64_t v36 = &v12[v35];
      uint64_t v37 = &v13[v35];
      uint64_t v150 = v4;
      if (v32(&v13[v35], 1, v17))
      {
        sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v154 + 32))(v36, v37, v17);
        uint64_t v32 = v155;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v154 + 56))(v36, 0, 1, v17);
      }
      uint64_t v39 = _s6StylesV6NoDataVMa(0);
      v156(&v36[*(int *)(v39 + 20)], &v37[*(int *)(v39 + 20)], v24);
      v36[*(int *)(v39 + 24)] = v37[*(int *)(v39 + 24)];
      uint64_t v40 = v20[10];
      uint64_t v41 = &v12[v40];
      uint64_t v42 = &v13[v40];
      if (v32(&v13[v40], 1, v17))
      {
        sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v154 + 32))(v41, v42, v17);
        uint64_t v32 = v155;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v154 + 56))(v41, 0, 1, v17);
      }
      uint64_t v44 = _s6StylesV11PlaceholderVMa(0);
      v156(&v41[*(int *)(v44 + 20)], &v42[*(int *)(v44 + 20)], v24);
      uint64_t v45 = v20[11];
      uint64_t v46 = &v12[v45];
      uint64_t v47 = &v13[v45];
      if (v32(&v13[v45], 1, v17))
      {
        sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v154 + 32))(v46, v47, v17);
        uint64_t v32 = v155;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v154 + 56))(v46, 0, 1, v17);
      }
      uint64_t v49 = _s6StylesV6SymbolVMa(0);
      v156(&v46[*(int *)(v49 + 20)], &v47[*(int *)(v49 + 20)], v24);
      uint64_t v50 = v20[12];
      uint64_t v51 = &v12[v50];
      uint64_t v52 = &v13[v50];
      if (v32(&v13[v50], 1, v17))
      {
        sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v154 + 32))(v51, v52, v17);
        uint64_t v32 = v155;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v154 + 56))(v51, 0, 1, v17);
      }
      uint64_t v54 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v156(&v51[v54[5]], &v52[v54[5]], v24);
      v51[v54[6]] = v52[v54[6]];
      ((void (*)(char *, char *, uint64_t))v148)(&v51[v54[7]], &v52[v54[7]], v149);
      uint64_t v55 = v20[13];
      uint64_t v56 = &v12[v55];
      uint64_t v57 = &v13[v55];
      if (v32(&v13[v55], 1, v17))
      {
        sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v154 + 32))(v56, v57, v17);
        uint64_t v32 = v155;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v154 + 56))(v56, 0, 1, v17);
      }
      uint64_t v59 = _s6StylesV5EmptyVMa(0);
      v156(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v24);
      v56[*(int *)(v59 + 24)] = v57[*(int *)(v59 + 24)];
      uint64_t v60 = v20[14];
      uint64_t v61 = &v12[v60];
      uint64_t v62 = &v13[v60];
      if (v32(&v13[v60], 1, v17))
      {
        sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v154 + 32))(v61, v62, v17);
        uint64_t v32 = v155;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v154 + 56))(v61, 0, 1, v17);
      }
      uint64_t v64 = _s6StylesV5DailyVMa(0);
      v156(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v24);
      v61[*(int *)(v64 + 24)] = v62[*(int *)(v64 + 24)];
      uint64_t v65 = v20[15];
      uint64_t v66 = &v12[v65];
      uint64_t v67 = &v13[v65];
      if (v32(&v13[v65], 1, v17))
      {
        sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v154 + 32))(v66, v67, v17);
        uint64_t v32 = v155;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v154 + 56))(v66, 0, 1, v17);
      }
      uint64_t v4 = v150;
      uint64_t v69 = _s6StylesV9MomentaryVMa(0);
      v156(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v24);
      uint64_t v70 = v20[16];
      uint64_t v71 = &v12[v70];
      uint64_t v72 = &v13[v70];
      if (v32(&v13[v70], 1, v17))
      {
        sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v154 + 32))(v71, v72, v17);
        uint64_t v32 = v155;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v154 + 56))(v71, 0, 1, v17);
      }
      uint64_t v74 = _s6StylesV6HeaderVMa(0);
      v156(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v24);
      uint64_t v75 = v20[17];
      uint64_t v76 = &v12[v75];
      uint64_t v77 = &v13[v75];
      if (v32(&v13[v75], 1, v17))
      {
        sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v154 + 32))(v76, v77, v17);
        uint64_t v32 = v155;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v154 + 56))(v76, 0, 1, v17);
      }
      uint64_t v79 = _s6StylesV11ChartButtonVMa(0);
      v156(&v76[*(int *)(v79 + 20)], &v77[*(int *)(v79 + 20)], v24);
      uint64_t v80 = v20[18];
      uint64_t v81 = &v12[v80];
      uint64_t v82 = &v13[v80];
      if (v32(&v13[v80], 1, v17))
      {
        sub_2560B4008(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v81, v82, *(void *)(*(void *)(v83 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v154 + 32))(v81, v82, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v154 + 56))(v81, 0, 1, v17);
      }
      a3 = v151;
      uint64_t v84 = _s6StylesV15LogButtonFooterVMa(0);
      v156(&v81[*(int *)(v84 + 20)], &v82[*(int *)(v84 + 20)], v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
  }
  uint64_t v85 = a3[6];
  uint64_t v86 = &a1[v85];
  uint64_t v87 = &v4[v85];
  uint64_t v88 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  uint64_t v89 = *((void *)v88 - 1);
  uint64_t v90 = *(uint64_t (**)(char *, uint64_t, int *))(v89 + 48);
  int v91 = v90(v86, 1, v88);
  int v92 = v90(v87, 1, v88);
  if (!v91)
  {
    if (v92)
    {
      sub_2560B1234((uint64_t)v86, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.DaySummary);
      goto LABEL_50;
    }
    uint64_t v153 = a3;
    *(void *)uint64_t v86 = *(void *)v87;
    uint64_t v104 = v88[5];
    uint64_t v105 = &v86[v104];
    uint64_t v106 = &v87[v104];
    uint64_t v107 = sub_256177DB8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 40))(v105, v106, v107);
    uint64_t v108 = v88[6];
    uint64_t v109 = &v86[v108];
    uint64_t v110 = &v87[v108];
    uint64_t v112 = *(void *)v110;
    uint64_t v111 = *((void *)v110 + 1);
    *(void *)uint64_t v109 = v112;
    *((void *)v109 + 1) = v111;
    swift_bridgeObjectRelease();
    uint64_t v113 = v88[7];
    uint64_t v114 = &v86[v113];
    uint64_t v115 = &v87[v113];
    uint64_t v116 = (int *)_s5EntryVMa();
    uint64_t v117 = *((void *)v116 - 1);
    uint64_t v118 = *(uint64_t (**)(char *, uint64_t, int *))(v117 + 48);
    uint64_t v157 = (uint64_t)v114;
    LODWORD(v114) = v118(v114, 1, v116);
    int v119 = v118(v115, 1, v116);
    if (v114)
    {
      if (!v119)
      {
        uint64_t v125 = sub_2561758A8();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v125 - 8) + 32))(v157, v115, v125);
        *(_OWORD *)(v157 + v116[5]) = *(_OWORD *)&v115[v116[5]];
        *(_OWORD *)(v157 + v116[6]) = *(_OWORD *)&v115[v116[6]];
        *(_OWORD *)(v157 + v116[7]) = *(_OWORD *)&v115[v116[7]];
        *(_OWORD *)(v157 + v116[8]) = *(_OWORD *)&v115[v116[8]];
        *(void *)(v157 + v116[9]) = *(void *)&v115[v116[9]];
        (*(void (**)(uint64_t, void, uint64_t, int *))(v117 + 56))(v157, 0, 1, v116);
        goto LABEL_61;
      }
      sub_2560B4008(0, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
      size_t v121 = *(void *)(*(void *)(v120 - 8) + 64);
      uint64_t v122 = (void *)v157;
    }
    else
    {
      if (!v119)
      {
        uint64_t v126 = sub_2561758A8();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v126 - 8) + 40))(v157, v115, v126);
        uint64_t v127 = v116[5];
        uint64_t v128 = (void *)(v157 + v127);
        uint64_t v129 = &v115[v127];
        uint64_t v131 = *(void *)v129;
        uint64_t v130 = *((void *)v129 + 1);
        void *v128 = v131;
        v128[1] = v130;
        swift_bridgeObjectRelease();
        uint64_t v132 = v116[6];
        uint64_t v133 = (void *)(v157 + v132);
        uint64_t v134 = &v115[v132];
        uint64_t v136 = *(void *)v134;
        uint64_t v135 = *((void *)v134 + 1);
        *uint64_t v133 = v136;
        v133[1] = v135;
        swift_bridgeObjectRelease();
        uint64_t v137 = v116[7];
        uint64_t v138 = (void *)(v157 + v137);
        uint64_t v139 = &v115[v137];
        uint64_t v141 = *(void *)v139;
        uint64_t v140 = *((void *)v139 + 1);
        *uint64_t v138 = v141;
        v138[1] = v140;
        swift_bridgeObjectRelease();
        uint64_t v142 = v116[8];
        uint64_t v143 = (void *)(v157 + v142);
        char v144 = &v115[v142];
        uint64_t v146 = *(void *)v144;
        uint64_t v145 = *((void *)v144 + 1);
        *uint64_t v143 = v146;
        v143[1] = v145;
        swift_bridgeObjectRelease();
        *(void *)(v157 + v116[9]) = *(void *)&v115[v116[9]];
        goto LABEL_61;
      }
      sub_2560B1234(v157, (uint64_t (*)(void))_s5EntryVMa);
      sub_2560B4008(0, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
      size_t v121 = *(void *)(*(void *)(v124 - 8) + 64);
      uint64_t v122 = (void *)v157;
    }
    memcpy(v122, v115, v121);
LABEL_61:
    a3 = v153;
    *(void *)&v86[v88[8]] = *(void *)&v87[v88[8]];
    swift_bridgeObjectRelease();
    *(void *)&v86[v88[9]] = *(void *)&v87[v88[9]];
    swift_bridgeObjectRelease();
    goto LABEL_62;
  }
  if (v92)
  {
LABEL_50:
    sub_2560B4008(0, &qword_269F46358, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary, MEMORY[0x263F8D8F0]);
    memcpy(v86, v87, *(void *)(*(void *)(v103 - 8) + 64));
    goto LABEL_62;
  }
  uint64_t v152 = a3;
  *(void *)uint64_t v86 = *(void *)v87;
  uint64_t v93 = v88[5];
  uint64_t v94 = &v86[v93];
  uint64_t v95 = &v87[v93];
  uint64_t v96 = sub_256177DB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 32))(v94, v95, v96);
  *(_OWORD *)&v86[v88[6]] = *(_OWORD *)&v87[v88[6]];
  uint64_t v97 = v88[7];
  uint64_t v98 = &v86[v97];
  uint64_t v99 = &v87[v97];
  uint64_t v100 = (int *)_s5EntryVMa();
  uint64_t v101 = *((void *)v100 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v101 + 48))(v99, 1, v100))
  {
    sub_2560B4008(0, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
    memcpy(v98, v99, *(void *)(*(void *)(v102 - 8) + 64));
  }
  else
  {
    uint64_t v123 = sub_2561758A8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 32))(v98, v99, v123);
    *(_OWORD *)&v98[v100[5]] = *(_OWORD *)&v99[v100[5]];
    *(_OWORD *)&v98[v100[6]] = *(_OWORD *)&v99[v100[6]];
    *(_OWORD *)&v98[v100[7]] = *(_OWORD *)&v99[v100[7]];
    *(_OWORD *)&v98[v100[8]] = *(_OWORD *)&v99[v100[8]];
    *(void *)&v98[v100[9]] = *(void *)&v99[v100[9]];
    (*(void (**)(char *, void, uint64_t, int *))(v101 + 56))(v98, 0, 1, v100);
  }
  a3 = v152;
  *(void *)&v86[v88[8]] = *(void *)&v87[v88[8]];
  *(void *)&v86[v88[9]] = *(void *)&v87[v88[9]];
  (*(void (**)(char *, void, uint64_t, int *))(v89 + 56))(v86, 0, 1, v88);
LABEL_62:
  *(void *)&a1[a3[7]] = *(void *)&v4[a3[7]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2560B39B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2560B39C8);
}

uint64_t sub_2560B39C8(uint64_t a1, uint64_t a2, int *a3)
{
  sub_2560B4008(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  sub_2560B4008(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  sub_2560B4008(0, &qword_269F46358, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary, MEMORY[0x263F8D8F0]);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  unint64_t v16 = *(void *)(a1 + a3[7]);
  if (v16 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  return (v16 + 1);
}

uint64_t sub_2560B3BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2560B3BCC);
}

void sub_2560B3BCC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_2560B4008(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    sub_2560B4008(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      sub_2560B4008(0, &qword_269F46358, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary, MEMORY[0x263F8D8F0]);
      if (*(_DWORD *)(*(void *)(v16 - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[7]) = (a2 - 1);
        return;
      }
      uint64_t v10 = v16;
      uint64_t v14 = *(void *)(v16 - 8);
      uint64_t v15 = a4[6];
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  v11(v12, a2, a2, v10);
}

void sub_2560B3DB8()
{
  sub_2560B4008(319, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (v0 <= 0x3F)
  {
    sub_2560B4008(319, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    if (v1 <= 0x3F)
    {
      sub_2560B4008(319, &qword_269F46358, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindTimeline.DaySummary, MEMORY[0x263F8D8F0]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_2560B3F58()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_2560B3F74()
{
  if (!qword_269F46370)
  {
    sub_2560B4008(255, &qword_269F46378, (uint64_t (*)(uint64_t))sub_2560B406C, MEMORY[0x263F1BAC8]);
    sub_2560B417C();
    unint64_t v0 = sub_2561776F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46370);
    }
  }
}

void sub_2560B4008(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2560B406C()
{
  if (!qword_269F46380)
  {
    sub_2560B42FC(255, &qword_269F42D60, (uint64_t (*)(uint64_t))sub_255F7285C, MEMORY[0x263F1A470], MEMORY[0x263F18E28]);
    sub_255F63658();
    sub_2560B42FC(255, &qword_269F46388, (uint64_t (*)(uint64_t))_s16EntryDayDataViewVMa, (uint64_t (*)(uint64_t))_s17EntryDayEmptyViewVMa, MEMORY[0x263F19B28]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_269F46380);
    }
  }
}

unint64_t sub_2560B417C()
{
  unint64_t result = qword_269F46390;
  if (!qword_269F46390)
  {
    sub_2560B4008(255, &qword_269F46378, (uint64_t (*)(uint64_t))sub_2560B406C, MEMORY[0x263F1BAC8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46390);
  }
  return result;
}

void sub_2560B4204()
{
  if (!qword_269F46398)
  {
    sub_2560B3F74();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46398);
    }
  }
}

void sub_2560B4264()
{
  if (!qword_269F463A0)
  {
    sub_2560B4008(255, &qword_269F46378, (uint64_t (*)(uint64_t))sub_2560B406C, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_256176048();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F463A0);
    }
  }
}

void sub_2560B42FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4(255);
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_2560B4380(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2560B43E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2560B4430(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_2560B4008(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_2560B44B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2560B4518(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t), uint64_t (*a6)(uint64_t, uint64_t, uint64_t))
{
  sub_2560B42FC(0, a3, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

uint64_t sub_2560B458C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  sub_2560B42FC(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

unint64_t sub_2560B45EC()
{
  unint64_t result = qword_269F463C0;
  if (!qword_269F463C0)
  {
    sub_2560B4204();
    sub_2560B43E8(&qword_269F463C8, (void (*)(uint64_t))sub_2560B3F74);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F463C0);
  }
  return result;
}

ValueMetadata *type metadata accessor for LinkToMindSettingsButton()
{
  return &type metadata for LinkToMindSettingsButton;
}

uint64_t sub_2560B46A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2560B46C0()
{
  sub_25605B2A0();
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v5 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_2561755B8();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();

  v10[0] = v6;
  v10[1] = v8;
  sub_255F5CE90();
  sub_2561775D8();
  v10[0] = &unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B66E8);
  sub_255FCD9E0();
  sub_2560B5190((unint64_t *)&qword_26B2AD358, (void (*)(uint64_t))sub_255FCD9E0);
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_2560B5190((unint64_t *)&qword_269F42EE0, (void (*)(uint64_t))sub_25605B2A0);
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_2560B496C()
{
  uint64_t v0 = sub_256175B68();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560B53AC(0, (unint64_t *)&qword_26B2AD320, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v26 - v5;
  uint64_t v7 = sub_256175628();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  unint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v26 - v12;
  id v14 = (id)HKMHMindfulnessSettingsURL();
  if (v14)
  {
    uint64_t v15 = v14;
    sub_256175608();

    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v16(v6, v11, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      v16(v13, v6, v7);
      id v17 = objc_msgSend(self, sel_defaultWorkspace);
      if (v17)
      {
        uint64_t v18 = v17;
        uint64_t v19 = (void *)sub_2561755F8();
        sub_25613372C(MEMORY[0x263F8EE78]);
        uint64_t v20 = (void *)sub_256177DD8();
        swift_bridgeObjectRelease();
        objc_msgSend(v18, sel_openSensitiveURL_withOptions_, v19, v20);
      }
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  sub_255FF0ED0((uint64_t)v6);
  sub_256175B48();
  uint64_t v22 = sub_256175B58();
  os_log_type_t v23 = sub_256178238();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    uint64_t v27 = v25;
    *(_DWORD *)uint64_t v24 = 136446210;
    uint64_t v26 = sub_255FB29A8(0xD000000000000018, 0x80000002561A6820, &v27);
    sub_256178458();
    _os_log_impl(&dword_255F58000, v22, v23, "[%{public}s] Failed to open Mindfulness settings in Bridge from State of Mind Settings.", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2A1E90](v25, -1, -1);
    MEMORY[0x25A2A1E90](v24, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_2560B4DC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v25 = a3;
  uint64_t v5 = sub_256176348();
  uint64_t v26 = *(void *)(v5 - 8);
  uint64_t v27 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255FFC224();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  sub_255F5CE90();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_256177028();
  uint64_t v13 = v12;
  char v15 = v14 & 1;
  uint64_t v29 = v11;
  uint64_t v30 = v12;
  char v31 = v14 & 1;
  uint64_t v32 = v16;
  uint64_t v28 = &unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B6728);
  sub_255FCD9E0();
  sub_2560B5190((unint64_t *)&qword_26B2AD358, (void (*)(uint64_t))sub_255FCD9E0);
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  sub_255F67B2C(v11, v13, v15);
  swift_bridgeObjectRelease();
  sub_256176338();
  uint64_t KeyPath = swift_getKeyPath();
  sub_256075220();
  uint64_t v19 = v25;
  uint64_t v20 = (uint64_t *)(v25 + *(int *)(v18 + 36));
  sub_2560B53AC(0, &qword_269F459F0, MEMORY[0x263F191A0], MEMORY[0x263F1A418]);
  uint64_t v23 = v26;
  uint64_t v22 = v27;
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))((char *)v20 + *(int *)(v21 + 28), v7, v27);
  *uint64_t v20 = KeyPath;
  sub_2560B52EC((uint64_t)v10, v19);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v22);
  return sub_2560B5350((uint64_t)v10);
}

uint64_t sub_2560B50B8()
{
  sub_256075220();
  MEMORY[0x270FA5388](v1);
  sub_2560B4DC4(*v0, v0[1], (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_255F737BC();
  sub_255FAC464();
  sub_256075A28();
  return sub_256177838();
}

uint64_t sub_2560B5190(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2560B51D8()
{
  return sub_256176448();
}

uint64_t sub_2560B51FC()
{
  return sub_256176448();
}

uint64_t sub_2560B5220(uint64_t a1)
{
  uint64_t v2 = sub_256176348();
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_256176458();
}

uint64_t sub_2560B52EC(uint64_t a1, uint64_t a2)
{
  sub_255FFC224();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2560B5350(uint64_t a1)
{
  sub_255FFC224();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2560B53AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_2560B5414()
{
  unint64_t result = qword_269F463D0;
  if (!qword_269F463D0)
  {
    sub_2560B5498();
    sub_255FAC464();
    sub_256075A28();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F463D0);
  }
  return result;
}

void sub_2560B5498()
{
  if (!qword_269F463D8)
  {
    sub_255F737BC();
    sub_256075220();
    unint64_t v0 = sub_256177848();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F463D8);
    }
  }
}

void *sub_2560B5508(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    *(_WORD *)(a1 + 33) = *(_WORD *)((char *)a2 + 33);
    uint64_t v7 = a2[6];
    uint64_t v8 = *(int *)(a3 + 36);
    uint64_t v9 = (uint64_t *)((char *)a2 + v8);
    uint64_t v10 = (void *)(a1 + v8);
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v7;
    sub_2560B64B8(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_256176AA8();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      {
        sub_2560B64B8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v10, v9, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v10, v9, v11);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
      }
      uint64_t v15 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
      uint64_t v16 = (char *)v10 + v15;
      id v17 = (char *)v9 + v15;
      uint64_t v18 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *uint64_t v10 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_2560B57C0(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  sub_2560B64B8(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_256176AA8();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
    uint64_t v7 = v4 + *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    uint64_t v8 = sub_256176158();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v9(v7, v8);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_2560B5960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  uint64_t v6 = *(void *)(a2 + 48);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (void *)(a2 + v7);
  uint64_t v9 = (void *)(a1 + v7);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  sub_2560B64B8(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_256176AA8();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      sub_2560B64B8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v9, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v9, v8, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    }
    uint64_t v13 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    uint64_t v14 = (char *)v9 + v13;
    uint64_t v15 = (char *)v8 + v13;
    uint64_t v16 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    *uint64_t v9 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_2560B5BC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 36);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    sub_2560B5E68(a1 + v7);
    sub_2560B64B8(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_256176AA8();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        sub_2560B64B8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      uint64_t v13 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
      uint64_t v14 = (char *)v8 + v13;
      uint64_t v15 = (char *)v9 + v13;
      uint64_t v16 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2560B5E68(uint64_t a1)
{
  sub_2560B64B8(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2560B5EF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = (char *)(a1 + v5);
  uint64_t v7 = (char *)(a2 + v5);
  sub_2560B64B8(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  uint64_t v9 = v8;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_256176AA8();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10))
    {
      sub_2560B64B8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v6, v7, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v6, v7, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
    }
    uint64_t v13 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    uint64_t v14 = &v6[v13];
    uint64_t v15 = &v7[v13];
    uint64_t v16 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_2560B6134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 36);
    uint64_t v8 = (char *)(a1 + v7);
    uint64_t v9 = (char *)(a2 + v7);
    sub_2560B5E68(a1 + v7);
    sub_2560B64B8(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    uint64_t v11 = v10;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_256176AA8();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12))
      {
        sub_2560B64B8(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v8, v9, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
      }
      uint64_t v15 = *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
      uint64_t v16 = &v8[v15];
      id v17 = &v9[v15];
      uint64_t v18 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2560B63C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2560B63D8);
}

uint64_t sub_2560B63D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_2560B64B8(0, &qword_269F444B8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

void sub_2560B64B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2560B651C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2560B6530);
}

uint64_t sub_2560B6530(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_2560B64B8(0, &qword_269F444B8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185D0]);
    unint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ValenceSelectionPhase_iOS()
{
  uint64_t result = qword_269F463E0;
  if (!qword_269F463E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2560B6654()
{
  sub_2560B64B8(319, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_2560B6740()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_2560B675C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_256175FC8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a2 + 24);
  char v11 = *(unsigned char *)(a2 + 32);
  v18[0] = *(void *)(a2 + 16);
  v18[1] = v10;
  char v19 = v11;
  sub_2560B7C44();
  swift_retain();
  sub_256177748();
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  char v14 = v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  LOBYTE(a1) = *(unsigned char *)(a2 + 34);
  LOBYTE(v6) = *(unsigned char *)(a2 + 33);
  uint64_t v15 = *(void *)(a2 + 40);
  uint64_t v16 = swift_retain();
  *(void *)&double result = sub_256079BF8(v12, v13, v14, (uint64_t)v9, a1, v6, v15, a3, v16).n128_u64[0];
  return result;
}

uint64_t sub_2560B68C0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_256175C88();
  swift_release();
  swift_release();
  swift_release();
  if (v3 == 2)
  {
    if (qword_269F42348 == -1) {
      goto LABEL_6;
    }
LABEL_9:
    swift_once();
    goto LABEL_6;
  }
  if (v3 != 1) {
    return 0;
  }
  if (qword_269F42348 != -1) {
    goto LABEL_9;
  }
LABEL_6:
  id v0 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_2561755B8();
  swift_bridgeObjectRelease();

  return v1;
}

id sub_2560B6A80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v81 = a1;
  uint64_t v75 = type metadata accessor for ValenceSelectionPhaseSpecs();
  uint64_t v2 = MEMORY[0x270FA5388](v75);
  uint64_t v76 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v74 = (char *)&v69 - v4;
  sub_2560B744C(0);
  uint64_t v69 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v71 = (uint64_t)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560B7648(0);
  uint64_t v80 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v70 = (uint64_t)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v72 = (uint64_t)&v69 - v10;
  sub_2560B7D6C(0, &qword_269F46428, MEMORY[0x263F19B20]);
  uint64_t v78 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v79 = (uint64_t)&v69 - v12;
  uint64_t v73 = type metadata accessor for ValenceSelectionPhase_iOS();
  uint64_t v13 = *(void *)(v73 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v73);
  sub_2560B749C();
  uint64_t v82 = *(void *)(v15 - 8);
  uint64_t v83 = v15;
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v69 - v19;
  sub_2560B7474(0);
  uint64_t v77 = v21;
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v69 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  uint64_t v27 = (char *)&v69 - v26;
  MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)&v69 - v28;
  int v30 = *(unsigned __int8 *)(*(void *)(v1 + 8)
                           + OBJC_IVAR____TtC14MentalHealthUI21StateOfMindEntryModel_useLiveVisualization);
  sub_2560B773C(v1, (uint64_t)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhase_iOS);
  unint64_t v31 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  if (v30 == 1)
  {
    uint64_t v32 = swift_allocObject();
    sub_2560B7BD4((uint64_t)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v32 + v31, (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhase_iOS);
    uint64_t v86 = sub_2560B76D8;
    uint64_t v87 = v32;
    if (*(unsigned char *)(v1 + 34))
    {
      uint64_t v33 = 0;
      unint64_t v34 = 0xE000000000000000;
    }
    else
    {
      uint64_t v33 = sub_2560B68C0();
      unint64_t v34 = v38;
    }
    uint64_t v40 = v82;
    uint64_t v39 = v83;
    uint64_t v84 = v33;
    unint64_t v85 = v34;
    sub_2560B756C();
    sub_2560B7600(&qword_269F46418, (void (*)(uint64_t))sub_2560B756C);
    sub_255F5CE90();
    sub_256177158();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v41 = sub_2561778E8();
    double v43 = sub_256117338(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v27, 0.0, 1, 0.0, 1, v41, v42);
    (*(void (**)(char *, uint64_t, double))(v40 + 8))(v20, v39, v43);
    sub_2560B7BD4((uint64_t)v27, (uint64_t)v29, (uint64_t (*)(void))sub_2560B7474);
    sub_2560B773C((uint64_t)v29, v79, (uint64_t (*)(void))sub_2560B7474);
    swift_storeEnumTagMultiPayload();
    sub_2560B77A4();
    sub_2560B78D4(&qword_269F46438, sub_2560B7648, (void (*)(void))sub_2560B7898);
    sub_256176898();
    uint64_t v44 = sub_2560B7474;
    uint64_t v45 = (uint64_t)v29;
    return (id)sub_2560B76DC(v45, (uint64_t (*)(void))v44);
  }
  uint64_t v35 = swift_allocObject();
  sub_2560B7BD4((uint64_t)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v35 + v31, (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhase_iOS);
  uint64_t v86 = sub_2560B76D8;
  uint64_t v87 = v35;
  if (*(unsigned char *)(v1 + 34))
  {
    uint64_t v36 = 0;
    unint64_t v37 = 0xE000000000000000;
  }
  else
  {
    uint64_t v36 = sub_2560B68C0();
    unint64_t v37 = v46;
  }
  uint64_t v47 = (uint64_t)v76;
  uint64_t v48 = (uint64_t)v74;
  uint64_t v84 = v36;
  unint64_t v85 = v37;
  sub_2560B756C();
  sub_2560B7600(&qword_269F46418, (void (*)(uint64_t))sub_2560B756C);
  sub_255F5CE90();
  sub_256177158();
  swift_release();
  swift_bridgeObjectRelease();
  sub_25611BB38(v48);
  sub_2560B76DC(v48, (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhaseSpecs);
  uint64_t v49 = sub_2561778E8();
  double v51 = sub_256117338(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v24, 0.0, 1, 0.0, 1, v49, v50);
  (*(void (**)(char *, uint64_t, double))(v82 + 8))(v18, v83, v51);
  char v52 = sub_256176D78();
  sub_25611BB38(v47);
  if ((sub_256176138() & 1) == 0)
  {
LABEL_12:
    sub_2560B76DC(v47, (uint64_t (*)(void))type metadata accessor for ValenceSelectionPhaseSpecs);
    sub_256175D48();
    uint64_t v56 = v55;
    uint64_t v58 = v57;
    uint64_t v60 = v59;
    uint64_t v62 = v61;
    uint64_t v63 = v71;
    sub_2560B773C((uint64_t)v24, v71, (uint64_t (*)(void))sub_2560B7474);
    uint64_t v64 = v63 + *(int *)(v69 + 36);
    *(unsigned char *)uint64_t v64 = v52;
    *(void *)(v64 + 8) = v56;
    *(void *)(v64 + 16) = v58;
    *(void *)(v64 + 24) = v60;
    *(void *)(v64 + 32) = v62;
    *(unsigned char *)(v64 + 40) = 0;
    sub_2560B76DC((uint64_t)v24, (uint64_t (*)(void))sub_2560B7474);
    uint64_t v65 = sub_2561778E8();
    uint64_t v66 = v70;
    sub_2561175AC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v70, 0.0, 1, 0.0, 1, v65, v67);
    sub_2560B76DC(v63, (uint64_t (*)(void))sub_2560B744C);
    uint64_t v68 = v72;
    sub_2560B7BD4(v66, v72, (uint64_t (*)(void))sub_2560B7648);
    sub_2560B773C(v68, v79, (uint64_t (*)(void))sub_2560B7648);
    swift_storeEnumTagMultiPayload();
    sub_2560B77A4();
    sub_2560B78D4(&qword_269F46438, sub_2560B7648, (void (*)(void))sub_2560B7898);
    sub_256176898();
    uint64_t v44 = sub_2560B7648;
    uint64_t v45 = v68;
    return (id)sub_2560B76DC(v45, (uint64_t (*)(void))v44);
  }
  id result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    uint64_t v54 = result;
    MobileGestalt_get_homeButtonType();

    goto LABEL_12;
  }
  __break(1u);
  return result;
}

void sub_2560B744C(uint64_t a1)
{
}

void sub_2560B7474(uint64_t a1)
{
}

void sub_2560B749C()
{
  if (!qword_269F46400)
  {
    sub_2560B756C();
    sub_2560B7600(&qword_269F46418, (void (*)(uint64_t))sub_2560B756C);
    sub_255F5CE90();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F46400);
    }
  }
}

void sub_2560B756C()
{
  if (!qword_269F46408)
  {
    type metadata accessor for ValenceSelectionPhaseContent();
    sub_2560B7600(&qword_269F46410, (void (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseContent);
    unint64_t v0 = sub_256176088();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46408);
    }
  }
}

uint64_t sub_2560B7600(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2560B7648(uint64_t a1)
{
}

void sub_2560B7670(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2560B76DC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2560B773C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_2560B77A4()
{
  unint64_t result = qword_269F46430;
  if (!qword_269F46430)
  {
    sub_2560B7474(255);
    sub_2560B756C();
    sub_2560B7600(&qword_269F46418, (void (*)(uint64_t))sub_2560B756C);
    sub_255F5CE90();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46430);
  }
  return result;
}

uint64_t sub_2560B7898()
{
  return sub_2560B78D4(&qword_269F46440, sub_2560B744C, (void (*)(void))sub_2560B77A4);
}

uint64_t sub_2560B78D4(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroyTm_20()
{
  uint64_t v1 = (int *)(type metadata accessor for ValenceSelectionPhase_iOS() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v3 = v2 + v1[11];
  sub_2560B64B8(0, &qword_269F439D8, (uint64_t (*)(uint64_t))type metadata accessor for ValenceSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256176AA8();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    }
    uint64_t v6 = v3 + *(int *)(type metadata accessor for ValenceSelectionPhaseSpecs() + 20);
    uint64_t v7 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

double sub_2560B7B54@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for ValenceSelectionPhase_iOS() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_2560B675C(a1, v6, a2);
}

uint64_t sub_2560B7BD4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_2560B7C44()
{
  if (!qword_269F47D40)
  {
    unint64_t v0 = sub_256177778();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F47D40);
    }
  }
}

unint64_t sub_2560B7CA0()
{
  unint64_t result = qword_269F46448;
  if (!qword_269F46448)
  {
    sub_2560B7D6C(255, &qword_269F46450, MEMORY[0x263F19B28]);
    sub_2560B77A4();
    sub_2560B78D4(&qword_269F46438, sub_2560B7648, (void (*)(void))sub_2560B7898);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46448);
  }
  return result;
}

void sub_2560B7D6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_2560B7474(255);
    uint64_t v7 = v6;
    sub_2560B7648(255);
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t *sub_2560B7DDC(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    sub_2560BD080(0, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_256175F88();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = a3[7];
    uint64_t v15 = (uint64_t *)((char *)v4 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    sub_2560BD080(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_256176AA8();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        sub_2560BD080(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v18 + 16))(v15, v16, v17);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      uint64_t v20 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      uint64_t v21 = (char *)v15 + v20;
      uint64_t v22 = (char *)v16 + v20;
      uint64_t v23 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v24 = a3[8];
    uint64_t v25 = (uint64_t *)((char *)v4 + v24);
    uint64_t v26 = (uint64_t *)((char *)a2 + v24);
    uint64_t v27 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v27;
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_2560B8154(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  sub_2560BD080(0, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_256175F88();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  sub_2560BD080(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_256176AA8();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
    uint64_t v9 = v6 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    uint64_t v10 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();

  return swift_release();
}

void *sub_2560B838C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void *)((char *)a2 + v8);
  sub_2560BD080(0, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_256175F88();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *uint64_t v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  sub_2560BD080(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_256176AA8();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      sub_2560BD080(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    uint64_t v18 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    uint64_t v19 = (char *)v13 + v18;
    uint64_t v20 = (char *)v14 + v18;
    uint64_t v21 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  else
  {
    *uint64_t v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  uint64_t v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *sub_2560B86B8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = a3[6];
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    uint64_t v9 = (uint64_t (*)(uint64_t))MEMORY[0x263F188C0];
    sub_2560B8A58((uint64_t)a1 + v6, &qword_269F42CC0, MEMORY[0x263F188C0]);
    sub_2560BD080(0, &qword_269F42CC0, v9, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_256175F88();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v7, v8, v10);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = a3[7];
    uint64_t v12 = (void *)((char *)a1 + v11);
    uint64_t v13 = (void *)((char *)a2 + v11);
    sub_2560B8A58((uint64_t)a1 + v11, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs);
    sub_2560BD080(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_256176AA8();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        sub_2560BD080(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v12, v13, v14);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      uint64_t v17 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      uint64_t v18 = (char *)v12 + v17;
      uint64_t v19 = (char *)v13 + v17;
      uint64_t v20 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v21 = a3[8];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  *(void *)((char *)a1 + v21) = *(void *)((char *)a2 + v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v22 + 1) = *((void *)v23 + 1);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2560B8A58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_2560BD080(0, a2, a3, MEMORY[0x263F185C8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_2560B8AC8(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  sub_2560BD080(0, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
  uint64_t v10 = v9;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_256175F88();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v7, v8, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  sub_2560BD080(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  uint64_t v16 = v15;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_256176AA8();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v14, 1, v17))
    {
      sub_2560BD080(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v13, v14, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v13, 0, 1, v17);
    }
    uint64_t v20 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    uint64_t v21 = &v13[v20];
    uint64_t v22 = &v14[v20];
    uint64_t v23 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  return a1;
}

void *sub_2560B8DE8(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v7 = a3[6];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = (uint64_t (*)(uint64_t))MEMORY[0x263F188C0];
    sub_2560B8A58((uint64_t)a1 + v7, &qword_269F42CC0, MEMORY[0x263F188C0]);
    sub_2560BD080(0, &qword_269F42CC0, v10, MEMORY[0x263F185C8]);
    uint64_t v12 = v11;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_256175F88();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    uint64_t v14 = a3[7];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    sub_2560B8A58((uint64_t)a1 + v14, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs);
    sub_2560BD080(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    uint64_t v18 = v17;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_256176AA8();
      uint64_t v20 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v16, 1, v19))
      {
        sub_2560BD080(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v15, v16, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v15, v16, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v15, 0, 1, v19);
      }
      uint64_t v22 = *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
      uint64_t v23 = &v15[v22];
      uint64_t v24 = &v16[v22];
      uint64_t v25 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
    }
  }
  uint64_t v26 = a3[8];
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (void *)((char *)a2 + v26);
  *(void *)((char *)a1 + v26) = *v28;
  swift_bridgeObjectRelease();
  *((void *)v27 + 1) = v28[1];
  swift_release();
  return a1;
}

uint64_t sub_2560B9178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2560B918C);
}

uint64_t sub_2560B918C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_2560BD080(0, &qword_269F42CC8, MEMORY[0x263F188C0], MEMORY[0x263F185D0]);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_2560BD080(0, &qword_269F43D20, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185D0]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_2560B9318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2560B932C);
}

uint64_t sub_2560B932C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    sub_2560BD080(0, &qword_269F42CC8, MEMORY[0x263F188C0], MEMORY[0x263F185D0]);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_2560BD080(0, &qword_269F43D20, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185D0]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for ShowAllLabelsPicker()
{
  uint64_t result = qword_269F46458;
  if (!qword_269F46458) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2560B9504()
{
  sub_2560BD080(319, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
  if (v0 <= 0x3F)
  {
    sub_2560BD080(319, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_2560B964C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2560B9668@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v61 = a2;
  uint64_t v58 = sub_256177858();
  uint64_t v54 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  char v52 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560BC560(0);
  MEMORY[0x270FA5388](v4 - 8);
  double v51 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ShowAllLabelsPicker();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v56 = v8;
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560BBC94();
  uint64_t v55 = v10;
  uint64_t v53 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unint64_t v46 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560BBC60(0);
  uint64_t v49 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v48 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560BBB48();
  uint64_t v59 = *(void *)(v14 - 8);
  uint64_t v60 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v57 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for ShowAllLabelsPicker;
  sub_2560BD594(a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ShowAllLabelsPicker);
  sub_2561780C8();
  uint64_t v16 = sub_2561780B8();
  uint64_t v45 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v17 = (v45 + 32) & ~v45;
  uint64_t v47 = v45 | 7;
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = MEMORY[0x263F8F500];
  *(void *)(v18 + 16) = v16;
  *(void *)(v18 + 24) = v19;
  sub_2560BCAC0((uint64_t)v9, v18 + v17);
  sub_2560BD594(a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ShowAllLabelsPicker);
  uint64_t v20 = sub_2561780B8();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v20;
  *(void *)(v21 + 24) = v19;
  sub_2560BCAC0((uint64_t)v9, v21 + v17);
  sub_2560BCED0();
  sub_256177758();
  uint64_t v63 = a1;
  type metadata accessor for Label(0);
  sub_2560BBD50();
  sub_2560BD764(&qword_269F464F8, type metadata accessor for Label);
  sub_2560BC2E8();
  uint64_t v22 = v46;
  sub_256176F58();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v24 = v54;
  uint64_t v25 = v52;
  uint64_t v26 = v58;
  (*(void (**)(char *, void, uint64_t))(v54 + 104))(v52, *MEMORY[0x263F1B878], v58);
  uint64_t v27 = (uint64_t)v51;
  sub_256177768();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v26);
  sub_2560BC594(0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 0, 1, v28);
  uint64_t v29 = (uint64_t)v48;
  int v30 = (uint64_t *)&v48[*(int *)(v49 + 36)];
  sub_2560BC52C(0);
  sub_2560BCFE4(v27, (uint64_t)v30 + *(int *)(v31 + 28));
  *int v30 = KeyPath;
  uint64_t v32 = v53;
  uint64_t v33 = v55;
  (*(void (**)(uint64_t, char *, uint64_t))(v53 + 16))(v29, v22, v55);
  sub_2560BCFFC(v27, (uint64_t (*)(void))sub_2560BC560);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v22, v33);
  uint64_t v62 = a1;
  sub_2560BC5C8(0);
  sub_2560BD6A4(&qword_269F46570, sub_2560BBC60, (void (*)(void))sub_2560BC860, (void (*)(void))sub_2560BC894);
  sub_2560BD764(&qword_269F46588, sub_2560BC5C8);
  unint64_t v34 = v57;
  sub_256177348();
  sub_2560BCFFC(v29, (uint64_t (*)(void))sub_2560BBC60);
  sub_2560BD594(a1, (uint64_t)v9, (uint64_t (*)(void))v50);
  uint64_t v35 = (v45 + 16) & ~v45;
  uint64_t v36 = swift_allocObject();
  sub_2560BCAC0((uint64_t)v9, v36 + v35);
  char v64 = 0;
  swift_retain();
  sub_256177568();
  LOBYTE(v35) = v65;
  uint64_t v37 = v66;
  uint64_t v39 = v59;
  uint64_t v38 = v60;
  uint64_t v40 = v61;
  (*(void (**)(uint64_t, char *, uint64_t))(v59 + 16))(v61, v34, v60);
  swift_release();
  sub_2560BBAE8();
  uint64_t v42 = v40 + *(int *)(v41 + 36);
  *(void *)uint64_t v42 = sub_2560BD068;
  *(void *)(v42 + 8) = v36;
  *(unsigned char *)(v42 + 16) = v35;
  *(void *)(v42 + 24) = v37;
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v34, v38);
}

uint64_t sub_2560B9E24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v13 = a1;
  sub_2560BBDC0(0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560BBD50();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_256178308();
  swift_bridgeObjectRetain();
  sub_25615A4CC(&v14);
  uint64_t v9 = swift_bridgeObjectRelease();
  uint64_t v10 = v14;
  MEMORY[0x270FA5388](v9);
  *(&v12 - 2) = v10;
  sub_2560BB254((uint64_t)v3);
  sub_2560BC1E4();
  sub_2560BD6A4(&qword_269F46508, sub_2560BBDC0, (void (*)(void))sub_2560BC3B0, (void (*)(void))sub_2560BC488);
  sub_2560BC4BC();
  sub_256177818();
  swift_release();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(v13, v8, v5);
}

uint64_t sub_2560BA050@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v19[1] = a2;
  sub_2560BC5FC();
  v19[0] = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560BC6BC();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_256176958();
  MEMORY[0x270FA5388](v11 - 8);
  sub_255F73708();
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256176938();
  _OWORD v19[8] = a1;
  sub_255F737BC();
  sub_2560BD6A4((unint64_t *)&qword_269F42ED8, (void (*)(uint64_t))sub_255F737BC, (void (*)(void))sub_255F738A0, (void (*)(void))sub_255F73540);
  sub_256175E68();
  sub_256176948();
  v19[4] = a1;
  sub_2560BCA48(0, &qword_269F46560, (void (*)(uint64_t))sub_2560481EC, MEMORY[0x263F1A470]);
  sub_2560BC75C();
  sub_256175E68();
  uint64_t v17 = &v5[*(int *)(v19[0] + 48)];
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v5, v16, v13);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v10, v7);
  sub_2561767A8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_2560BA3AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v19[1] = a2;
  uint64_t v3 = type metadata accessor for ShowAllLabelsPicker();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  sub_2560BC66C(0, (unint64_t *)&qword_269F42ED0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
  v19[0] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v19 - v8;
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v10 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_2561755B8();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();

  uint64_t v20 = (void *)v11;
  uint64_t v21 = v13;
  sub_2560BD594(a1, (uint64_t)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ShowAllLabelsPicker);
  unint64_t v14 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v15 = swift_allocObject();
  sub_2560BCAC0((uint64_t)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14);
  sub_255F5CE90();
  uint64_t v16 = MEMORY[0x263F8D310];
  sub_2561775D8();
  uint64_t v20 = &unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B6768);
  sub_2560BD5FC(0, (unint64_t *)&qword_26B2AD350, v16, MEMORY[0x263F8D488]);
  sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_255F738A0();
  uint64_t v17 = v19[0];
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v17);
}

uint64_t sub_2560BA704()
{
  uint64_t v0 = sub_256175F88();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ShowAllLabelsPicker();
  sub_25611A6E4((uint64_t)v3);
  sub_256175F78();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_2560BA7E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v27 = a2;
  uint64_t v2 = type metadata accessor for ShowAllLabelsPicker();
  uint64_t v23 = *(void *)(v2 - 8);
  uint64_t v3 = *(void *)(v23 + 64);
  MEMORY[0x270FA5388](v2 - 8);
  sub_2560BC66C(0, (unint64_t *)&qword_269F42ED0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
  uint64_t v5 = v4;
  uint64_t v6 = *((void *)v4 - 1);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v22 - v7;
  sub_2560481EC();
  uint64_t v25 = *(void *)(v9 - 8);
  uint64_t v26 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v12 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_2561755B8();
  unint64_t v15 = v14;
  swift_bridgeObjectRelease();

  uint64_t v28 = (void *)v13;
  unint64_t v29 = v15;
  sub_2560BD594(v24, (uint64_t)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ShowAllLabelsPicker);
  unint64_t v16 = (*(unsigned __int8 *)(v23 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v17 = swift_allocObject();
  sub_2560BCAC0((uint64_t)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16);
  sub_255F5CE90();
  uint64_t v18 = MEMORY[0x263F8D310];
  sub_2561775D8();
  unint64_t v19 = sub_255F738A0();
  sub_256177298();
  (*(void (**)(char *, void *))(v6 + 8))(v8, v5);
  uint64_t v28 = &unk_2704B5358;
  sub_255FCD3A4((uint64_t)&unk_2704B67A8);
  sub_2560BD5FC(0, (unint64_t *)&qword_26B2AD350, v18, MEMORY[0x263F8D488]);
  sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  uint64_t v28 = v5;
  unint64_t v29 = v19;
  swift_getOpaqueTypeConformance2();
  uint64_t v20 = v26;
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v11, v20);
}

uint64_t sub_2560BAC10(uint64_t a1)
{
  uint64_t v2 = sub_256175F88();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = (uint64_t *)(a1 + *(int *)(type metadata accessor for ShowAllLabelsPicker() + 32));
  uint64_t v8 = *v6;
  uint64_t v7 = v6[1];
  uint64_t v11 = v8;
  *(void *)&long long v12 = v7;
  sub_2560BD080(0, &qword_269F465A8, (uint64_t (*)(uint64_t))sub_25600525C, MEMORY[0x263F1B5D0]);
  sub_256177578();
  uint64_t v11 = *(void *)(a1 + 8);
  long long v12 = *(_OWORD *)(a1 + 16);
  sub_2560BD080(0, &qword_269F45478, (uint64_t (*)(uint64_t))sub_25600525C, MEMORY[0x263F1B750]);
  sub_256177728();
  sub_25611A6E4((uint64_t)v5);
  sub_256175F78();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_2560BADA0(uint64_t a1)
{
  uint64_t v7 = *(void *)(a1 + 8);
  long long v8 = *(_OWORD *)(a1 + 16);
  sub_2560BD080(0, &qword_269F45478, (uint64_t (*)(uint64_t))sub_25600525C, MEMORY[0x263F1B750]);
  MEMORY[0x25A2A01A0](&v6);
  uint64_t v2 = (uint64_t *)(a1 + *(int *)(type metadata accessor for ShowAllLabelsPicker() + 32));
  uint64_t v4 = *v2;
  uint64_t v3 = v2[1];
  uint64_t v7 = v4;
  *(void *)&long long v8 = v3;
  sub_2560BD080(0, &qword_269F465A8, (uint64_t (*)(uint64_t))sub_25600525C, MEMORY[0x263F1B5D0]);
  return sub_256177588();
}

uint64_t sub_2560BAE78()
{
  return sub_2561777C8();
}

uint64_t sub_2560BAFA4()
{
  id v0 = (id)HKUILocalizedStringForStateOfMindLabel();
  sub_256177EE8();

  sub_255F5CE90();
  uint64_t v1 = sub_256177028();
  uint64_t v3 = v2;
  char v5 = v4 & 1;
  sub_256176E18();
  uint64_t v6 = sub_256176FD8();
  uint64_t v8 = v7;
  LOBYTE(v0) = v9;
  swift_release();
  char v10 = v0 & 1;
  sub_255F67B2C(v1, v3, v5);
  swift_bridgeObjectRelease();
  uint64_t v11 = MEMORY[0x263F8D310];
  sub_2560BD5FC(0, (unint64_t *)&qword_26B2AD360, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2561A69E0;
  strcpy((char *)(inited + 32), "ShowAllLabels");
  *(_WORD *)(inited + 46) = -4864;
  *(void *)(inited + 48) = 0x6C6562614CLL;
  *(void *)(inited + 56) = 0xE500000000000000;
  id v13 = (id)NSStringFromHKStateOfMindLabel();
  uint64_t v14 = sub_256177EE8();
  uint64_t v16 = v15;

  *(void *)(inited + 64) = v14;
  *(void *)(inited + 72) = v16;
  uint64_t v17 = swift_bridgeObjectRetain();
  sub_255FCD3A4(v17);
  sub_2560BD5FC(0, (unint64_t *)&qword_26B2AD350, v11, MEMORY[0x263F8D488]);
  sub_255F744D8();
  sub_256177E28();
  swift_bridgeObjectRelease();
  sub_256177238();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  sub_255F67B2C(v6, v8, v10);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2560BB254@<X0>(uint64_t a1@<X8>)
{
  uint64_t v54 = a1;
  sub_2560BC11C(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v53 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560BBF40();
  uint64_t v47 = *(void *)(v3 - 8);
  uint64_t v48 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v45 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560BBEAC();
  uint64_t v46 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560BBE28();
  uint64_t v51 = *(void *)(v8 - 8);
  uint64_t v52 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v49 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560BBDF4(0);
  uint64_t v44 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v50 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v12 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_2561755B8();
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();

  uint64_t v55 = v13;
  uint64_t v56 = v15;
  sub_255F5CE90();
  uint64_t v16 = sub_256177028();
  uint64_t v18 = v17;
  LOBYTE(v12) = v19 & 1;
  sub_256176E18();
  uint64_t v20 = sub_256176FD8();
  uint64_t v22 = v21;
  char v24 = v23;
  uint64_t v26 = v25;
  swift_release();
  char v27 = v24 & 1;
  sub_255F67B2C(v16, v18, (char)v12);
  swift_bridgeObjectRelease();
  uint64_t v55 = v20;
  uint64_t v56 = v22;
  char v57 = v24 & 1;
  uint64_t v58 = v26;
  uint64_t v28 = v45;
  sub_256177198();
  sub_255F67B2C(v20, v22, v27);
  swift_bridgeObjectRelease();
  LODWORD(v16) = sub_256176A48();
  uint64_t v30 = v47;
  uint64_t v29 = v48;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v7, v28, v48);
  *(_DWORD *)&v7[*(int *)(v46 + 36)] = v16;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v28, v29);
  sub_2560BBFBC();
  uint64_t v31 = v49;
  sub_256177298();
  sub_2560BCFFC((uint64_t)v7, (uint64_t (*)(void))sub_2560BBEAC);
  uint64_t v32 = sub_256176FB8();
  uint64_t v33 = (uint64_t)v53;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v53, 1, 1, v32);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v35 = (uint64_t)v50;
  uint64_t v36 = (uint64_t *)&v50[*(int *)(v44 + 36)];
  sub_2560BC0E8(0);
  sub_2560BD57C(v33, (uint64_t)v36 + *(int *)(v37 + 28));
  uint64_t *v36 = KeyPath;
  uint64_t v39 = v51;
  uint64_t v38 = v52;
  (*(void (**)(uint64_t, char *, uint64_t))(v51 + 16))(v35, v31, v52);
  sub_2560BCFFC(v33, (uint64_t (*)(void))sub_2560BC11C);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v31, v38);
  uint64_t v40 = v54;
  sub_2560BD594(v35, v54, (uint64_t (*)(void))sub_2560BBDF4);
  sub_2560BBDC0(0);
  uint64_t v42 = v40 + *(int *)(v41 + 36);
  *(void *)uint64_t v42 = 0;
  *(void *)(v42 + 8) = 0;
  *(_OWORD *)(v42 + 16) = xmmword_2561A69F0;
  *(unsigned char *)(v42 + 32) = 0;
  return sub_2560BCFFC(v35, (uint64_t (*)(void))sub_2560BBDF4);
}

uint64_t sub_2560BB7A4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ShowAllLabelsPicker();
  sub_2560BD080(0, &qword_269F465A8, (uint64_t (*)(uint64_t))sub_25600525C, MEMORY[0x263F1B5D0]);
  sub_256177578();
  uint64_t v2 = sub_256153670(v4);
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_2560BB850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_255FB3688(v5);
  swift_bridgeObjectRelease();
  v11[0] = (uint64_t)v6;
  sub_25615A4CC(v11);
  uint64_t v7 = (uint64_t *)(a4 + *(int *)(type metadata accessor for ShowAllLabelsPicker() + 32));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  v11[0] = v9;
  v11[1] = v8;
  sub_2560BD080(0, &qword_269F465A8, (uint64_t (*)(uint64_t))sub_25600525C, MEMORY[0x263F1B5D0]);
  return sub_256177588();
}

uint64_t sub_2560BB924@<X0>(uint64_t a1@<X8>)
{
  sub_2560BBA6C();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = v1;
  sub_2560BBAE8();
  sub_2560BC8C8();
  sub_2561761D8();
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v5 + 16))(a1, v7, v4);
  sub_2560BCA14(0);
  uint64_t v10 = (uint64_t *)(a1 + *(int *)(v9 + 36));
  *uint64_t v10 = KeyPath;
  v10[1] = 0;
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_2560BBA6C()
{
  if (!qword_269F46468)
  {
    sub_2561760D8();
    sub_2560BBAE8();
    sub_2560BC8C8();
    unint64_t v0 = sub_2561761E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46468);
    }
  }
}

void sub_2560BBAE8()
{
  if (!qword_269F46470)
  {
    sub_2560BBB48();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46470);
    }
  }
}

void sub_2560BBB48()
{
  if (!qword_269F46478)
  {
    sub_2560BBC60(255);
    sub_2560BC5C8(255);
    sub_2560BD6A4(&qword_269F46570, sub_2560BBC60, (void (*)(void))sub_2560BC860, (void (*)(void))sub_2560BC894);
    sub_2560BD764(&qword_269F46588, sub_2560BC5C8);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F46478);
    }
  }
}

void sub_2560BBC60(uint64_t a1)
{
}

void sub_2560BBC94()
{
  if (!qword_269F46488)
  {
    type metadata accessor for Label(255);
    sub_2560BBD50();
    sub_2560BD764(&qword_269F464F8, type metadata accessor for Label);
    sub_2560BC2E8();
    unint64_t v0 = sub_256176F78();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46488);
    }
  }
}

void sub_2560BBD50()
{
  if (!qword_269F46490)
  {
    sub_2560BBDC0(255);
    sub_2560BC1E4();
    unint64_t v0 = sub_256177848();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46490);
    }
  }
}

void sub_2560BBDC0(uint64_t a1)
{
}

void sub_2560BBDF4(uint64_t a1)
{
}

void sub_2560BBE28()
{
  if (!qword_269F464A8)
  {
    sub_2560BBEAC();
    sub_2560BBFBC();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F464A8);
    }
  }
}

void sub_2560BBEAC()
{
  if (!qword_269F464B0)
  {
    sub_2560BBF40();
    sub_2560BC66C(255, (unint64_t *)&qword_269F45928, MEMORY[0x263F19E50], MEMORY[0x263F19E40], MEMORY[0x263F1A180]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F464B0);
    }
  }
}

void sub_2560BBF40()
{
  if (!qword_269F464B8)
  {
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_269F464B8);
    }
  }
}

unint64_t sub_2560BBFBC()
{
  unint64_t result = qword_269F464C0;
  if (!qword_269F464C0)
  {
    sub_2560BBEAC();
    swift_getOpaqueTypeConformance2();
    sub_2560BC064();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F464C0);
  }
  return result;
}

unint64_t sub_2560BC064()
{
  unint64_t result = qword_269F45940;
  if (!qword_269F45940)
  {
    sub_2560BC66C(255, (unint64_t *)&qword_269F45928, MEMORY[0x263F19E50], MEMORY[0x263F19E40], MEMORY[0x263F1A180]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F45940);
  }
  return result;
}

void sub_2560BC0E8(uint64_t a1)
{
}

void sub_2560BC11C(uint64_t a1)
{
}

void sub_2560BC150()
{
  if (!qword_269F464D8)
  {
    sub_2561769C8();
    sub_2560BD764(&qword_269F464E0, MEMORY[0x263F19D18]);
    unint64_t v0 = sub_256176A28();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F464D8);
    }
  }
}

void sub_2560BC1E4()
{
  if (!qword_269F464E8)
  {
    sub_25600525C(255);
    type metadata accessor for Label(255);
    sub_255FFC224();
    sub_2560BD764(&qword_269F464F0, sub_25600525C);
    sub_2560BD764(&qword_269F464F8, type metadata accessor for Label);
    unint64_t v0 = sub_2561777E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F464E8);
    }
  }
}

unint64_t sub_2560BC2E8()
{
  unint64_t result = qword_269F46500;
  if (!qword_269F46500)
  {
    sub_2560BBD50();
    sub_2560BD6A4(&qword_269F46508, sub_2560BBDC0, (void (*)(void))sub_2560BC3B0, (void (*)(void))sub_2560BC488);
    sub_2560BC4BC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46500);
  }
  return result;
}

unint64_t sub_2560BC3B0()
{
  unint64_t result = qword_269F46510;
  if (!qword_269F46510)
  {
    sub_2560BBDF4(255);
    sub_2560BBEAC();
    sub_2560BBFBC();
    swift_getOpaqueTypeConformance2();
    sub_2560BD764(&qword_269F46518, sub_2560BC0E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46510);
  }
  return result;
}

uint64_t sub_2560BC488()
{
  return sub_2560BD764(&qword_269F46520, (void (*)(uint64_t))sub_2560BC150);
}

unint64_t sub_2560BC4BC()
{
  unint64_t result = qword_269F46528;
  if (!qword_269F46528)
  {
    sub_2560BC1E4();
    sub_2560755C8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46528);
  }
  return result;
}

void sub_2560BC52C(uint64_t a1)
{
}

void sub_2560BC560(uint64_t a1)
{
}

void sub_2560BC594(uint64_t a1)
{
}

void sub_2560BC5C8(uint64_t a1)
{
}

void sub_2560BC5FC()
{
  if (!qword_269F46550)
  {
    sub_255F73708();
    sub_2560BC6BC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F46550);
    }
  }
}

void sub_2560BC66C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_2560BC6BC()
{
  if (!qword_269F46558)
  {
    sub_2560BCA48(255, &qword_269F46560, (void (*)(uint64_t))sub_2560481EC, MEMORY[0x263F1A470]);
    sub_2560BC75C();
    unint64_t v0 = sub_256175E78();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46558);
    }
  }
}

unint64_t sub_2560BC75C()
{
  unint64_t result = qword_269F46568;
  if (!qword_269F46568)
  {
    sub_2560BCA48(255, &qword_269F46560, (void (*)(uint64_t))sub_2560481EC, MEMORY[0x263F1A470]);
    sub_2560BC66C(255, (unint64_t *)&qword_269F42ED0, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
    sub_255F738A0();
    swift_getOpaqueTypeConformance2();
    sub_255F73540();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46568);
  }
  return result;
}

uint64_t sub_2560BC860()
{
  return sub_2560BD764(&qword_269F46578, (void (*)(uint64_t))sub_2560BBC94);
}

uint64_t sub_2560BC894()
{
  return sub_2560BD764(&qword_269F46580, sub_2560BC52C);
}

unint64_t sub_2560BC8C8()
{
  unint64_t result = qword_269F46590;
  if (!qword_269F46590)
  {
    sub_2560BBAE8();
    sub_2560BBC60(255);
    sub_2560BC5C8(255);
    sub_2560BD6A4(&qword_269F46570, sub_2560BBC60, (void (*)(void))sub_2560BC860, (void (*)(void))sub_2560BC894);
    sub_2560BD764(&qword_269F46588, sub_2560BC5C8);
    swift_getOpaqueTypeConformance2();
    sub_25605A398();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46590);
  }
  return result;
}

uint64_t sub_2560BCA04@<X0>(uint64_t a1@<X8>)
{
  return sub_2560B9668(*(void *)(v1 + 16), a1);
}

void sub_2560BCA14(uint64_t a1)
{
}

void sub_2560BCA48(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    unint64_t v6 = sub_2561761B8();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_2560BCAC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShowAllLabelsPicker();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2560BCB24@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ShowAllLabelsPicker();

  return sub_2560BB7A4(a1);
}

uint64_t objectdestroyTm_21()
{
  uint64_t v1 = type metadata accessor for ShowAllLabelsPicker();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v3 = v0 + v2 + *(int *)(v1 + 24);
  sub_2560BD080(0, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256175F88();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  unint64_t v5 = v0 + v2 + *(int *)(v1 + 28);
  sub_2560BD080(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256176AA8();
    uint64_t v7 = *(void *)(v6 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
      (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
    unint64_t v8 = v5 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    uint64_t v9 = sub_256176158();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2560BCE5C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for ShowAllLabelsPicker() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_2560BB850(a1, v4, v5, v6);
}

void sub_2560BCED0()
{
  if (!qword_269F465A0)
  {
    type metadata accessor for Label(255);
    sub_2560BD764(&qword_269F464F8, type metadata accessor for Label);
    unint64_t v0 = sub_256178118();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F465A0);
    }
  }
}

uint64_t sub_2560BCF64@<X0>(uint64_t a1@<X8>)
{
  return sub_2560B9E24(a1);
}

uint64_t sub_2560BCF6C()
{
  return sub_256176558();
}

uint64_t sub_2560BCF90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2560BD484(a1, a2, a3, a4, (uint64_t (*)(void))sub_2560BC560, (void (*)(uint64_t, char *))sub_2560BCFE4, MEMORY[0x263F195F0]);
}

uint64_t sub_2560BCFE4(uint64_t a1, uint64_t a2)
{
  return sub_2560BD594(a1, a2, (uint64_t (*)(void))sub_2560BC560);
}

uint64_t sub_2560BCFFC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2560BD05C@<X0>(uint64_t a1@<X8>)
{
  return sub_2560BA050(*(void *)(v1 + 16), a1);
}

uint64_t sub_2560BD068()
{
  return sub_2560BD3E4(sub_2560BADA0);
}

void sub_2560BD080(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2560BD0E4@<X0>(uint64_t a1@<X8>)
{
  return sub_2560BA3AC(*(void *)(v1 + 16), a1);
}

uint64_t sub_2560BD0EC@<X0>(uint64_t a1@<X8>)
{
  return sub_2560BA7E8(*(void *)(v1 + 16), a1);
}

uint64_t objectdestroy_13Tm()
{
  uint64_t v1 = type metadata accessor for ShowAllLabelsPicker();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + *(int *)(v1 + 24);
  sub_2560BD080(0, &qword_269F42CC0, MEMORY[0x263F188C0], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256175F88();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = v2 + *(int *)(v1 + 28);
  sub_2560BD080(0, &qword_269F435C0, (uint64_t (*)(uint64_t))type metadata accessor for AssociationSelectionPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256176AA8();
    uint64_t v7 = *(void *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
    uint64_t v8 = v5 + *(int *)(type metadata accessor for AssociationSelectionPhaseSpecs() + 20);
    uint64_t v9 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2560BD3B0()
{
  return sub_2560BD3E4(sub_2560BAC10);
}

uint64_t sub_2560BD3CC()
{
  return sub_2560BD3E4((uint64_t (*)(uint64_t))sub_2560BA704);
}

uint64_t sub_2560BD3E4(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for ShowAllLabelsPicker() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_2560BD458()
{
  return sub_2560BAE78();
}

uint64_t sub_2560BD460()
{
  return sub_256176568();
}

uint64_t sub_2560BD484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void (*a6)(uint64_t, char *), uint64_t (*a7)(char *))
{
  uint64_t v10 = a5(0);
  MEMORY[0x270FA5388](v10 - 8);
  id v12 = (char *)&v14 - v11;
  a6(a1, (char *)&v14 - v11);
  return a7(v12);
}

uint64_t sub_2560BD528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2560BD484(a1, a2, a3, a4, (uint64_t (*)(void))sub_2560BC11C, (void (*)(uint64_t, char *))sub_2560BD57C, MEMORY[0x263F19600]);
}

uint64_t sub_2560BD57C(uint64_t a1, uint64_t a2)
{
  return sub_2560BD594(a1, a2, (uint64_t (*)(void))sub_2560BC11C);
}

uint64_t sub_2560BD594(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_2560BD5FC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_2560BD648()
{
  return sub_2560BD6A4(&qword_269F465B0, sub_2560BCA14, (void (*)(void))sub_2560BD730, (void (*)(void))sub_255F8A254);
}

uint64_t sub_2560BD6A4(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2560BD730()
{
  return sub_2560BD764(&qword_269F465B8, (void (*)(uint64_t))sub_2560BBA6C);
}

uint64_t sub_2560BD764(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindHeaderImage()
{
  return &type metadata for StateOfMindHeaderImage;
}

uint64_t sub_2560BD7BC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2560BD7D8()
{
  type metadata accessor for MentalHealthUIRepresentative();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_256177538();
  sub_2561771E8();
  return swift_release();
}

unint64_t sub_2560BD890()
{
  unint64_t result = qword_269F465C0;
  if (!qword_269F465C0)
  {
    sub_2560BD908();
    sub_255F73540();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F465C0);
  }
  return result;
}

void sub_2560BD908()
{
  if (!qword_269F465C8)
  {
    sub_256176D38();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F465C8);
    }
  }
}

unint64_t HKMHDaySummary.representativeStateOfMind.getter()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_256175868();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v25 - v7;
  id v9 = objc_msgSend((id)v1, sel_dailyStateOfMind);

  if (v9) {
    return (unint64_t)objc_msgSend((id)v1, sel_dailyStateOfMind);
  }
  id v11 = objc_msgSend((id)v1, sel_momentaryStatesOfMind);
  sub_25601CB34();
  unint64_t v12 = sub_256178008();

  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = (void *)sub_256178678();
    swift_bridgeObjectRelease();
    if (!v13) {
      goto LABEL_28;
    }
  }
  else
  {
    uint64_t v13 = *(void **)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v13) {
      goto LABEL_28;
    }
  }
  if ((v12 & 0xC000000000000001) != 0)
  {
    id v14 = (id)MEMORY[0x25A2A1000](0, v12);
  }
  else
  {
    if (!*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_26;
    }
    id v14 = *(id *)(v12 + 32);
  }
  uint64_t v13 = v14;
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend((id)v1, sel_momentaryStatesOfMind);
  unint64_t v1 = sub_256178008();

  if (!(v1 >> 62))
  {
    uint64_t v16 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v16) {
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_26:
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_256178678();
  swift_bridgeObjectRelease();
  if (!v16)
  {
LABEL_27:

LABEL_28:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_10:
  unint64_t result = v16 - 1;
  if (__OFSUB__(v16, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if ((v1 & 0xC000000000000001) != 0)
  {
LABEL_31:
    id v18 = (id)MEMORY[0x25A2A1000](result, v1);
    goto LABEL_15;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v18 = *(id *)(v1 + 8 * result + 32);
LABEL_15:
    char v19 = v18;
    swift_bridgeObjectRelease();
    id v20 = objc_msgSend(v13, sel_startDate);
    sub_256175818();

    id v21 = objc_msgSend(v19, sel_startDate);
    sub_256175818();

    sub_2560BDEE0();
    char v22 = sub_256177E48();
    char v23 = *(void (**)(char *, uint64_t))(v3 + 8);
    v23(v6, v2);
    v23(v8, v2);
    if (v22) {
      char v24 = v13;
    }
    else {
      char v24 = v19;
    }
    if (v22) {
      uint64_t v10 = v19;
    }
    else {
      uint64_t v10 = v13;
    }

    return (unint64_t)v10;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_2560BDCBC(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_2560BDDD8(v6, a2, a3);
  return sub_2560BDD24;
}

uint64_t (*sub_2560BDD28(void (**a1)(id *), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_2560BDE60(v6, a2, a3);
  return sub_2560BDD24;
}

void sub_2560BDD90(void *a1)
{
  unint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_2560BDDD8(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x25A2A1000](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_2560BDE58;
  }
  __break(1u);
  return result;
}

void sub_2560BDE58(id *a1)
{
}

void (*sub_2560BDE60(void (*result)(id *), unint64_t a2, uint64_t a3))(id *)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x25A2A1000](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_2560BDF38;
  }
  __break(1u);
  return result;
}

unint64_t sub_2560BDEE0()
{
  unint64_t result = qword_269F451B8;
  if (!qword_269F451B8)
  {
    sub_256175868();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F451B8);
  }
  return result;
}

uint64_t *sub_2560BDF3C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  id v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    id v4 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v6 = a3;
    sub_2560C35B4(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_256176AA8();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v90 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
      uint64_t v88 = v8;
      uint64_t v87 = v6;
      if (v90(a2, 1, v7))
      {
        sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v4, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v4, a2, v7);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
      }
      id v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v12 = v11[5];
      uint64_t v13 = (char *)v4 + v12;
      id v14 = (char *)a2 + v12;
      uint64_t v15 = sub_256176158();
      uint64_t v16 = (void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
      uint64_t v89 = *v16;
      (*v16)(v13, v14, v15);
      *((unsigned char *)v4 + v11[6]) = *((unsigned char *)a2 + v11[6]);
      uint64_t v17 = v11[7];
      id v18 = (char *)v4 + v17;
      char v19 = (char *)a2 + v17;
      uint64_t v20 = sub_256175D98();
      uint64_t v86 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
      v86(v18, v19, v20);
      uint64_t v21 = v11[8];
      char v22 = (char *)v4 + v21;
      char v23 = (char *)a2 + v21;
      if (v90((uint64_t *)((char *)a2 + v21), 1, v7))
      {
        sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v22, v23, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v22, 0, 1, v7);
      }
      uint64_t v25 = _s6StylesV8TimelineVMa(0);
      v89(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
      uint64_t v26 = v11[9];
      char v27 = (char *)v4 + v26;
      uint64_t v28 = (char *)a2 + v26;
      if (v90((uint64_t *)((char *)a2 + v26), 1, v7))
      {
        sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v27, v28, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v27, 0, 1, v7);
      }
      uint64_t v30 = _s6StylesV6NoDataVMa(0);
      v89(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
      v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
      uint64_t v31 = v11[10];
      uint64_t v32 = (char *)v4 + v31;
      uint64_t v33 = (char *)a2 + v31;
      if (v90((uint64_t *)((char *)a2 + v31), 1, v7))
      {
        sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v32, v33, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v32, 0, 1, v7);
      }
      uint64_t v35 = _s6StylesV11PlaceholderVMa(0);
      v89(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
      uint64_t v36 = v11[11];
      uint64_t v37 = (char *)v4 + v36;
      uint64_t v38 = (char *)a2 + v36;
      if (v90((uint64_t *)((char *)a2 + v36), 1, v7))
      {
        sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v37, v38, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v37, 0, 1, v7);
      }
      uint64_t v40 = _s6StylesV6SymbolVMa(0);
      v89(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
      uint64_t v41 = v11[12];
      uint64_t v42 = (char *)v4 + v41;
      double v43 = (char *)a2 + v41;
      if (v90((uint64_t *)((char *)a2 + v41), 1, v7))
      {
        sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v42, v43, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v42, 0, 1, v7);
      }
      uint64_t v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v89(&v42[v45[5]], &v43[v45[5]], v15);
      v42[v45[6]] = v43[v45[6]];
      v86(&v42[v45[7]], &v43[v45[7]], v20);
      uint64_t v46 = v11[13];
      uint64_t v47 = (char *)v4 + v46;
      uint64_t v48 = (char *)a2 + v46;
      if (v90((uint64_t *)((char *)a2 + v46), 1, v7))
      {
        sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
        uint64_t v50 = v88;
      }
      else
      {
        uint64_t v50 = v88;
        (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v47, v48, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v47, 0, 1, v7);
      }
      uint64_t v51 = _s6StylesV5EmptyVMa(0);
      v89(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
      v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
      uint64_t v52 = v11[14];
      uint64_t v53 = (char *)v4 + v52;
      uint64_t v54 = (char *)a2 + v52;
      if (v90((uint64_t *)((char *)a2 + v52), 1, v7))
      {
        sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v53, v54, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v7);
      }
      uint64_t v56 = _s6StylesV5DailyVMa(0);
      v89(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      uint64_t v57 = v11[15];
      uint64_t v58 = (char *)v4 + v57;
      uint64_t v59 = (char *)a2 + v57;
      if (v90((uint64_t *)((char *)a2 + v57), 1, v7))
      {
        sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v58, v59, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v7);
      }
      uint64_t v61 = _s6StylesV9MomentaryVMa(0);
      v89(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
      uint64_t v62 = v11[16];
      uint64_t v63 = (char *)v4 + v62;
      char v64 = (char *)a2 + v62;
      if (v90((uint64_t *)((char *)a2 + v62), 1, v7))
      {
        sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v63, v64, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v7);
      }
      uint64_t v66 = _s6StylesV6HeaderVMa(0);
      v89(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
      uint64_t v67 = v11[17];
      uint64_t v68 = (char *)v4 + v67;
      uint64_t v69 = (char *)a2 + v67;
      if (v90((uint64_t *)((char *)a2 + v67), 1, v7))
      {
        sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v68, v69, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v7);
      }
      uint64_t v71 = _s6StylesV11ChartButtonVMa(0);
      v89(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
      uint64_t v72 = v11[18];
      uint64_t v73 = (char *)v4 + v72;
      uint64_t v74 = (char *)a2 + v72;
      if (v90((uint64_t *)((char *)a2 + v72), 1, v7))
      {
        sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v73, v74, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v7);
      }
      uint64_t v76 = _s6StylesV15LogButtonFooterVMa(0);
      v89(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
      swift_storeEnumTagMultiPayload();
      uint64_t v6 = v87;
    }
    else
    {
      *id v4 = *a2;
      swift_retain();
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v77 = *(int *)(v6 + 20);
    uint64_t v78 = *(int *)(v6 + 24);
    uint64_t v79 = (uint64_t *)((char *)v4 + v77);
    uint64_t v80 = (uint64_t *)((char *)a2 + v77);
    uint64_t v81 = v80[1];
    *uint64_t v79 = *v80;
    v79[1] = v81;
    uint64_t v82 = (uint64_t *)((char *)v4 + v78);
    uint64_t v83 = (uint64_t *)((char *)a2 + v78);
    uint64_t v84 = v83[1];
    void *v82 = *v83;
    v82[1] = v84;
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_2560BED80(uint64_t a1)
{
  sub_2560C35B4(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_256176AA8();
    uint64_t v3 = *(void *)(v2 - 8);
    id v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
    if (!v4(a1, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    }
    uint64_t v5 = type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v6 = a1 + *(int *)(v5 + 20);
    uint64_t v7 = sub_256176158();
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    uint64_t v9 = v6;
    uint64_t v10 = (int *)v5;
    v8(v9, v7);
    uint64_t v11 = a1 + *(int *)(v5 + 28);
    uint64_t v12 = sub_256175D98();
    uint64_t v38 = *(void (**)(uint64_t))(*(void *)(v12 - 8) + 8);
    uint64_t v39 = v12;
    v38(v11);
    uint64_t v13 = a1 + v10[8];
    if (!v4(v13, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v13, v2);
    }
    uint64_t v14 = _s6StylesV8TimelineVMa(0);
    v8(v13 + *(int *)(v14 + 20), v7);
    uint64_t v15 = a1 + v10[9];
    if (!v4(v15, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v15, v2);
    }
    uint64_t v16 = _s6StylesV6NoDataVMa(0);
    v8(v15 + *(int *)(v16 + 20), v7);
    uint64_t v17 = a1 + v10[10];
    if (!v4(v17, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v17, v2);
    }
    uint64_t v18 = _s6StylesV11PlaceholderVMa(0);
    v8(v17 + *(int *)(v18 + 20), v7);
    uint64_t v19 = a1 + v10[11];
    if (!v4(v19, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v19, v2);
    }
    uint64_t v20 = _s6StylesV6SymbolVMa(0);
    v8(v19 + *(int *)(v20 + 20), v7);
    uint64_t v21 = a1 + v10[12];
    if (!v4(v21, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v21, v2);
    }
    uint64_t v40 = v3;
    uint64_t v22 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v8(v21 + *(int *)(v22 + 20), v7);
    ((void (*)(uint64_t, uint64_t))v38)(v21 + *(int *)(v22 + 28), v39);
    char v23 = v10;
    uint64_t v24 = a1 + v10[13];
    if (!v4(v24, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v24, v2);
    }
    uint64_t v25 = _s6StylesV5EmptyVMa(0);
    v8(v24 + *(int *)(v25 + 20), v7);
    uint64_t v26 = a1 + v23[14];
    if (!v4(v26, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v26, v2);
    }
    uint64_t v27 = _s6StylesV5DailyVMa(0);
    v8(v26 + *(int *)(v27 + 20), v7);
    uint64_t v28 = a1 + v23[15];
    if (!v4(v28, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v28, v2);
    }
    uint64_t v29 = _s6StylesV9MomentaryVMa(0);
    v8(v28 + *(int *)(v29 + 20), v7);
    uint64_t v30 = a1 + v23[16];
    uint64_t v31 = v7;
    if (!v4(v30, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v30, v2);
    }
    uint64_t v32 = _s6StylesV6HeaderVMa(0);
    v8(v30 + *(int *)(v32 + 20), v7);
    uint64_t v33 = a1 + v23[17];
    if (!v4(v33, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v33, v2);
    }
    uint64_t v34 = _s6StylesV11ChartButtonVMa(0);
    v8(v33 + *(int *)(v34 + 20), v7);
    uint64_t v35 = a1 + v23[18];
    if (!v4(v35, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v35, v2);
    }
    uint64_t v36 = _s6StylesV15LogButtonFooterVMa(0);
    v8(v35 + *(int *)(v36 + 20), v31);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();

  return swift_release();
}

void *sub_2560BF3D0(void *a1, void *a2, uint64_t a3)
{
  sub_2560C35B4(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256176AA8();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v88 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48);
    uint64_t v86 = v7;
    if (v88(a2, 1, v6))
    {
      sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    uint64_t v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v10 = v9[5];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_256176158();
    uint64_t v14 = (void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    uint64_t v87 = *v14;
    (*v14)(v11, v12, v13);
    *((unsigned char *)a1 + v9[6]) = *((unsigned char *)a2 + v9[6]);
    uint64_t v15 = v9[7];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_256175D98();
    uint64_t v84 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
    v84(v16, v17, v18);
    uint64_t v19 = v9[8];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    if (v88((void *)((char *)a2 + v19), 1, v6))
    {
      sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v20, v21, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v20, 0, 1, v6);
    }
    uint64_t v23 = _s6StylesV8TimelineVMa(0);
    v87(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
    uint64_t v24 = v9[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v85 = a3;
    if (v88((void *)((char *)a2 + v24), 1, v6))
    {
      sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v25, v26, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v25, 0, 1, v6);
    }
    uint64_t v28 = _s6StylesV6NoDataVMa(0);
    v87(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
    v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
    uint64_t v29 = v9[10];
    uint64_t v30 = (char *)a1 + v29;
    uint64_t v31 = (char *)a2 + v29;
    if (v88((void *)((char *)a2 + v29), 1, v6))
    {
      sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v30, v31, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v30, 0, 1, v6);
    }
    uint64_t v33 = _s6StylesV11PlaceholderVMa(0);
    v87(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v13);
    uint64_t v34 = v9[11];
    uint64_t v35 = (char *)a1 + v34;
    uint64_t v36 = (char *)a2 + v34;
    if (v88((void *)((char *)a2 + v34), 1, v6))
    {
      sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v35, v36, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v35, 0, 1, v6);
    }
    uint64_t v38 = _s6StylesV6SymbolVMa(0);
    v87(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v13);
    uint64_t v39 = v9[12];
    uint64_t v40 = (char *)a1 + v39;
    uint64_t v41 = (char *)a2 + v39;
    if (v88((void *)((char *)a2 + v39), 1, v6))
    {
      sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v40, v41, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v40, 0, 1, v6);
    }
    double v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v87(&v40[v43[5]], &v41[v43[5]], v13);
    v40[v43[6]] = v41[v43[6]];
    v84(&v40[v43[7]], &v41[v43[7]], v18);
    uint64_t v44 = v9[13];
    uint64_t v45 = (char *)a1 + v44;
    uint64_t v46 = (char *)a2 + v44;
    if (v88((void *)((char *)a2 + v44), 1, v6))
    {
      sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
      uint64_t v48 = v86;
    }
    else
    {
      uint64_t v48 = v86;
      (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v45, v46, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v45, 0, 1, v6);
    }
    uint64_t v49 = _s6StylesV5EmptyVMa(0);
    v87(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v13);
    v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
    uint64_t v50 = v9[14];
    uint64_t v51 = (char *)a1 + v50;
    uint64_t v52 = (char *)a2 + v50;
    if (v88((void *)((char *)a2 + v50), 1, v6))
    {
      sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v52, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v6);
    }
    uint64_t v54 = _s6StylesV5DailyVMa(0);
    v87(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v13);
    v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
    uint64_t v55 = v9[15];
    uint64_t v56 = (char *)a1 + v55;
    uint64_t v57 = (char *)a2 + v55;
    if (v88((void *)((char *)a2 + v55), 1, v6))
    {
      sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v56, v57, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v6);
    }
    a3 = v85;
    uint64_t v59 = _s6StylesV9MomentaryVMa(0);
    v87(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v13);
    uint64_t v60 = v9[16];
    uint64_t v61 = (char *)a1 + v60;
    uint64_t v62 = (char *)a2 + v60;
    if (v88((void *)((char *)a2 + v60), 1, v6))
    {
      sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v6);
    }
    uint64_t v64 = _s6StylesV6HeaderVMa(0);
    v87(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v13);
    uint64_t v65 = v9[17];
    uint64_t v66 = (char *)a1 + v65;
    uint64_t v67 = (char *)a2 + v65;
    if (v88((void *)((char *)a2 + v65), 1, v6))
    {
      sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v67, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v6);
    }
    uint64_t v69 = _s6StylesV11ChartButtonVMa(0);
    v87(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v13);
    uint64_t v70 = v9[18];
    uint64_t v71 = (char *)a1 + v70;
    uint64_t v72 = (char *)a2 + v70;
    if (v88((void *)((char *)a2 + v70), 1, v6))
    {
      sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v72, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v6);
    }
    uint64_t v74 = _s6StylesV15LogButtonFooterVMa(0);
    v87(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v13);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v75 = *(int *)(a3 + 20);
  uint64_t v76 = *(int *)(a3 + 24);
  uint64_t v77 = (void *)((char *)a1 + v75);
  uint64_t v78 = (void *)((char *)a2 + v75);
  uint64_t v79 = v78[1];
  *uint64_t v77 = *v78;
  v77[1] = v79;
  uint64_t v80 = (void *)((char *)a1 + v76);
  uint64_t v81 = (void *)((char *)a2 + v76);
  uint64_t v82 = v81[1];
  *uint64_t v80 = *v81;
  v80[1] = v82;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *sub_2560C01C8(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_255F612BC((uint64_t)a1);
    sub_2560C35B4(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_256176AA8();
      uint64_t v7 = *(void *)(v6 - 8);
      uint64_t v87 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48);
      uint64_t v84 = a3;
      uint64_t v85 = v7;
      if (v87(a2, 1, v6))
      {
        sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      uint64_t v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v10 = v9[5];
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_256176158();
      uint64_t v14 = (void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
      uint64_t v86 = *v14;
      (*v14)(v11, v12, v13);
      *((unsigned char *)a1 + v9[6]) = *((unsigned char *)a2 + v9[6]);
      uint64_t v15 = v9[7];
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = sub_256175D98();
      uint64_t v83 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
      v83(v16, v17, v18);
      uint64_t v19 = v9[8];
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      if (v87((void *)((char *)a2 + v19), 1, v6))
      {
        sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v20, v21, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v20, 0, 1, v6);
      }
      uint64_t v23 = _s6StylesV8TimelineVMa(0);
      v86(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
      uint64_t v24 = v9[9];
      uint64_t v25 = (char *)a1 + v24;
      uint64_t v26 = (char *)a2 + v24;
      if (v87((void *)((char *)a2 + v24), 1, v6))
      {
        sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v25, v26, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v25, 0, 1, v6);
      }
      uint64_t v28 = _s6StylesV6NoDataVMa(0);
      v86(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
      v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
      uint64_t v29 = v9[10];
      uint64_t v30 = (char *)a1 + v29;
      uint64_t v31 = (char *)a2 + v29;
      if (v87((void *)((char *)a2 + v29), 1, v6))
      {
        sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v30, v31, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v30, 0, 1, v6);
      }
      uint64_t v33 = _s6StylesV11PlaceholderVMa(0);
      v86(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v13);
      uint64_t v34 = v9[11];
      uint64_t v35 = (char *)a1 + v34;
      uint64_t v36 = (char *)a2 + v34;
      if (v87((void *)((char *)a2 + v34), 1, v6))
      {
        sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v35, v36, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v35, 0, 1, v6);
      }
      uint64_t v38 = _s6StylesV6SymbolVMa(0);
      v86(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v13);
      uint64_t v39 = v9[12];
      uint64_t v40 = (char *)a1 + v39;
      uint64_t v41 = (char *)a2 + v39;
      if (v87((void *)((char *)a2 + v39), 1, v6))
      {
        sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v40, v41, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v40, 0, 1, v6);
      }
      double v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v86(&v40[v43[5]], &v41[v43[5]], v13);
      v40[v43[6]] = v41[v43[6]];
      v83(&v40[v43[7]], &v41[v43[7]], v18);
      uint64_t v44 = v9[13];
      uint64_t v45 = (char *)a1 + v44;
      uint64_t v46 = (char *)a2 + v44;
      if (v87((void *)((char *)a2 + v44), 1, v6))
      {
        sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
        uint64_t v48 = v85;
      }
      else
      {
        uint64_t v48 = v85;
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v45, v46, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v45, 0, 1, v6);
      }
      uint64_t v49 = _s6StylesV5EmptyVMa(0);
      v86(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v13);
      v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
      uint64_t v50 = v9[14];
      uint64_t v51 = (char *)a1 + v50;
      uint64_t v52 = (char *)a2 + v50;
      if (v87((void *)((char *)a2 + v50), 1, v6))
      {
        sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v52, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v6);
      }
      uint64_t v54 = _s6StylesV5DailyVMa(0);
      v86(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v13);
      v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
      uint64_t v55 = v9[15];
      uint64_t v56 = (char *)a1 + v55;
      uint64_t v57 = (char *)a2 + v55;
      if (v87((void *)((char *)a2 + v55), 1, v6))
      {
        sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v56, v57, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v6);
      }
      uint64_t v59 = _s6StylesV9MomentaryVMa(0);
      v86(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v13);
      uint64_t v60 = v9[16];
      uint64_t v61 = (char *)a1 + v60;
      uint64_t v62 = (char *)a2 + v60;
      if (v87((void *)((char *)a2 + v60), 1, v6))
      {
        sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v6);
      }
      uint64_t v64 = _s6StylesV6HeaderVMa(0);
      v86(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v13);
      uint64_t v65 = v9[17];
      uint64_t v66 = (char *)a1 + v65;
      uint64_t v67 = (char *)a2 + v65;
      if (v87((void *)((char *)a2 + v65), 1, v6))
      {
        sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v67, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v6);
      }
      uint64_t v69 = _s6StylesV11ChartButtonVMa(0);
      v86(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v13);
      uint64_t v70 = v9[18];
      uint64_t v71 = (char *)a1 + v70;
      uint64_t v72 = (char *)a2 + v70;
      if (v87((void *)((char *)a2 + v70), 1, v6))
      {
        sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v72, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v6);
      }
      uint64_t v74 = _s6StylesV15LogButtonFooterVMa(0);
      v86(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v13);
      a3 = v84;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v75 = *(int *)(a3 + 20);
  uint64_t v76 = (void *)((char *)a1 + v75);
  uint64_t v77 = (void *)((char *)a2 + v75);
  *uint64_t v76 = *v77;
  v76[1] = v77[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v78 = *(int *)(a3 + 24);
  uint64_t v79 = (void *)((char *)a1 + v78);
  uint64_t v80 = (void *)((char *)a2 + v78);
  uint64_t v81 = v80[1];
  *uint64_t v79 = *v80;
  v79[1] = v81;
  swift_retain();
  swift_release();
  return a1;
}

char *sub_2560C0FE8(char *a1, char *a2, uint64_t a3)
{
  sub_2560C35B4(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  uint64_t v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_256176AA8();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v83 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    uint64_t v81 = v9;
    if (v83(a2, 1, v8))
    {
      sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    uint64_t v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v12 = v11[5];
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    uint64_t v15 = sub_256176158();
    uint64_t v16 = (void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
    uint64_t v82 = *v16;
    (*v16)(v13, v14, v15);
    a1[v11[6]] = a2[v11[6]];
    uint64_t v17 = v11[7];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    uint64_t v20 = sub_256175D98();
    uint64_t v79 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32);
    v79(v18, v19, v20);
    uint64_t v21 = v11[8];
    uint64_t v22 = &a1[v21];
    uint64_t v23 = &a2[v21];
    if (v83(&a2[v21], 1, v8))
    {
      sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v22, v23, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v22, 0, 1, v8);
    }
    uint64_t v25 = _s6StylesV8TimelineVMa(0);
    v82(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
    uint64_t v26 = v11[9];
    uint64_t v27 = &a1[v26];
    uint64_t v28 = &a2[v26];
    uint64_t v80 = a3;
    if (v83(&a2[v26], 1, v8))
    {
      sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v27, v28, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v27, 0, 1, v8);
    }
    uint64_t v30 = _s6StylesV6NoDataVMa(0);
    v82(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
    v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
    uint64_t v31 = v11[10];
    uint64_t v32 = &a1[v31];
    uint64_t v33 = &a2[v31];
    if (v83(&a2[v31], 1, v8))
    {
      sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v32, v33, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v32, 0, 1, v8);
    }
    uint64_t v35 = _s6StylesV11PlaceholderVMa(0);
    v82(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
    uint64_t v36 = v11[11];
    uint64_t v37 = &a1[v36];
    uint64_t v38 = &a2[v36];
    if (v83(&a2[v36], 1, v8))
    {
      sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v37, v38, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v37, 0, 1, v8);
    }
    uint64_t v40 = _s6StylesV6SymbolVMa(0);
    v82(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
    uint64_t v41 = v11[12];
    uint64_t v42 = &a1[v41];
    double v43 = &a2[v41];
    if (v83(&a2[v41], 1, v8))
    {
      sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v42, v43, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v42, 0, 1, v8);
    }
    uint64_t v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v82(&v42[v45[5]], &v43[v45[5]], v15);
    v42[v45[6]] = v43[v45[6]];
    v79(&v42[v45[7]], &v43[v45[7]], v20);
    uint64_t v46 = v11[13];
    uint64_t v47 = &a1[v46];
    uint64_t v48 = &a2[v46];
    if (v83(&a2[v46], 1, v8))
    {
      sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
      uint64_t v50 = v81;
    }
    else
    {
      uint64_t v50 = v81;
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v47, v48, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v47, 0, 1, v8);
    }
    uint64_t v51 = _s6StylesV5EmptyVMa(0);
    v82(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
    v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
    uint64_t v52 = v11[14];
    uint64_t v53 = &a1[v52];
    uint64_t v54 = &a2[v52];
    if (v83(&a2[v52], 1, v8))
    {
      sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v53, v54, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v8);
    }
    uint64_t v56 = _s6StylesV5DailyVMa(0);
    v82(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
    v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
    uint64_t v57 = v11[15];
    uint64_t v58 = &a1[v57];
    uint64_t v59 = &a2[v57];
    if (v83(&a2[v57], 1, v8))
    {
      sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v58, v59, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v8);
    }
    a3 = v80;
    uint64_t v61 = _s6StylesV9MomentaryVMa(0);
    v82(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
    uint64_t v62 = v11[16];
    uint64_t v63 = &a1[v62];
    uint64_t v64 = &a2[v62];
    if (v83(&a2[v62], 1, v8))
    {
      sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v63, v64, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v8);
    }
    uint64_t v66 = _s6StylesV6HeaderVMa(0);
    v82(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
    uint64_t v67 = v11[17];
    uint64_t v68 = &a1[v67];
    uint64_t v69 = &a2[v67];
    if (v83(&a2[v67], 1, v8))
    {
      sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v68, v69, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v8);
    }
    uint64_t v71 = _s6StylesV11ChartButtonVMa(0);
    v82(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
    uint64_t v72 = v11[18];
    uint64_t v73 = &a1[v72];
    uint64_t v74 = &a2[v72];
    if (v83(&a2[v72], 1, v8))
    {
      sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v73, v74, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v8);
    }
    uint64_t v76 = _s6StylesV15LogButtonFooterVMa(0);
    v82(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  uint64_t v77 = *(int *)(a3 + 24);
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  *(_OWORD *)&a1[v77] = *(_OWORD *)&a2[v77];
  return a1;
}

char *sub_2560C1DCC(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_255F612BC((uint64_t)a1);
    sub_2560C35B4(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    uint64_t v7 = v6;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_256176AA8();
      uint64_t v9 = *(void *)(v8 - 8);
      uint64_t v87 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
      uint64_t v84 = a3;
      uint64_t v85 = v9;
      if (v87(a2, 1, v8))
      {
        sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      uint64_t v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v12 = v11[5];
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      uint64_t v15 = sub_256176158();
      uint64_t v16 = (void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
      uint64_t v86 = *v16;
      (*v16)(v13, v14, v15);
      a1[v11[6]] = a2[v11[6]];
      uint64_t v17 = v11[7];
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      uint64_t v20 = sub_256175D98();
      uint64_t v83 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32);
      v83(v18, v19, v20);
      uint64_t v21 = v11[8];
      uint64_t v22 = &a1[v21];
      uint64_t v23 = &a2[v21];
      if (v87(&a2[v21], 1, v8))
      {
        sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v22, v23, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v22, 0, 1, v8);
      }
      uint64_t v25 = _s6StylesV8TimelineVMa(0);
      v86(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
      uint64_t v26 = v11[9];
      uint64_t v27 = &a1[v26];
      uint64_t v28 = &a2[v26];
      if (v87(&a2[v26], 1, v8))
      {
        sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v27, v28, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v27, 0, 1, v8);
      }
      uint64_t v30 = _s6StylesV6NoDataVMa(0);
      v86(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
      v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
      uint64_t v31 = v11[10];
      uint64_t v32 = &a1[v31];
      uint64_t v33 = &a2[v31];
      if (v87(&a2[v31], 1, v8))
      {
        sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v32, v33, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v32, 0, 1, v8);
      }
      uint64_t v35 = _s6StylesV11PlaceholderVMa(0);
      v86(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
      uint64_t v36 = v11[11];
      uint64_t v37 = &a1[v36];
      uint64_t v38 = &a2[v36];
      if (v87(&a2[v36], 1, v8))
      {
        sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v37, v38, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v37, 0, 1, v8);
      }
      uint64_t v40 = _s6StylesV6SymbolVMa(0);
      v86(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
      uint64_t v41 = v11[12];
      uint64_t v42 = &a1[v41];
      double v43 = &a2[v41];
      if (v87(&a2[v41], 1, v8))
      {
        sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v42, v43, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v42, 0, 1, v8);
      }
      uint64_t v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v86(&v42[v45[5]], &v43[v45[5]], v15);
      v42[v45[6]] = v43[v45[6]];
      v83(&v42[v45[7]], &v43[v45[7]], v20);
      uint64_t v46 = v11[13];
      uint64_t v47 = &a1[v46];
      uint64_t v48 = &a2[v46];
      if (v87(&a2[v46], 1, v8))
      {
        sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
        uint64_t v50 = v85;
      }
      else
      {
        uint64_t v50 = v85;
        (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v47, v48, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v47, 0, 1, v8);
      }
      uint64_t v51 = _s6StylesV5EmptyVMa(0);
      v86(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
      v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
      uint64_t v52 = v11[14];
      uint64_t v53 = &a1[v52];
      uint64_t v54 = &a2[v52];
      if (v87(&a2[v52], 1, v8))
      {
        sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v53, v54, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v8);
      }
      uint64_t v56 = _s6StylesV5DailyVMa(0);
      v86(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      uint64_t v57 = v11[15];
      uint64_t v58 = &a1[v57];
      uint64_t v59 = &a2[v57];
      if (v87(&a2[v57], 1, v8))
      {
        sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v58, v59, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v8);
      }
      uint64_t v61 = _s6StylesV9MomentaryVMa(0);
      v86(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
      uint64_t v62 = v11[16];
      uint64_t v63 = &a1[v62];
      uint64_t v64 = &a2[v62];
      if (v87(&a2[v62], 1, v8))
      {
        sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v63, v64, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v8);
      }
      uint64_t v66 = _s6StylesV6HeaderVMa(0);
      v86(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
      uint64_t v67 = v11[17];
      uint64_t v68 = &a1[v67];
      uint64_t v69 = &a2[v67];
      if (v87(&a2[v67], 1, v8))
      {
        sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v68, v69, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v8);
      }
      uint64_t v71 = _s6StylesV11ChartButtonVMa(0);
      v86(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
      uint64_t v72 = v11[18];
      uint64_t v73 = &a1[v72];
      uint64_t v74 = &a2[v72];
      if (v87(&a2[v72], 1, v8))
      {
        sub_2560C35B4(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v73, v74, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v8);
      }
      uint64_t v76 = _s6StylesV15LogButtonFooterVMa(0);
      v86(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
      swift_storeEnumTagMultiPayload();
      a3 = v84;
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
  }
  uint64_t v77 = *(int *)(a3 + 20);
  uint64_t v78 = &a1[v77];
  uint64_t v79 = &a2[v77];
  uint64_t v81 = *(void *)v79;
  uint64_t v80 = *((void *)v79 + 1);
  *(void *)uint64_t v78 = v81;
  *((void *)v78 + 1) = v80;
  swift_bridgeObjectRelease();
  *(_OWORD *)&a1[*(int *)(a3 + 24)] = *(_OWORD *)&a2[*(int *)(a3 + 24)];
  swift_release();
  return a1;
}

uint64_t sub_2560C2BD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2560C2BEC);
}

uint64_t sub_2560C2BEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2560C35B4(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_2560C2CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2560C2CF4);
}

void sub_2560C2CF4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_2560C35B4(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
}

uint64_t _s9LogButtonVMa()
{
  uint64_t result = qword_269F465D0;
  if (!qword_269F465D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2560C2E30()
{
  sub_2560C35B4(319, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_2560C2F04()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2560C2F20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v46 = a1;
  uint64_t v2 = sub_2561762B8();
  uint64_t v3 = v2 - 8;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (_OWORD *)((char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for StateOfMindTimeline.Styles(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v43 = (uint64_t)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)&v41 - v9;
  sub_255F85EA4(0);
  uint64_t v12 = v11 - 8;
  MEMORY[0x270FA5388](v11);
  uint64_t v42 = (uint64_t)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560C3618();
  uint64_t v44 = *(void *)(v14 - 8);
  uint64_t v45 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v41 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s9LogButtonVMa();
  uint64_t v47 = v1;
  sub_256035E30();
  sub_2560361E8();
  swift_retain();
  sub_2561775C8();
  sub_256119CA0((uint64_t)v10);
  sub_2560C3684((uint64_t)v10, type metadata accessor for StateOfMindTimeline.Styles);
  uint64_t v16 = (char *)v5 + *(int *)(v3 + 28);
  uint64_t v17 = *MEMORY[0x263F19860];
  uint64_t v18 = sub_2561766E8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v16, v17, v18);
  __asm { FMOV            V0.2D, #18.0 }
  *uint64_t v5 = _Q0;
  uint64_t v24 = v43;
  sub_256119CA0(v43);
  sub_2560C3684(v24, type metadata accessor for StateOfMindTimeline.Styles);
  uint64_t v25 = sub_256177438();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v27 = v42;
  sub_2560C3830((uint64_t)v5, v42, MEMORY[0x263F19048]);
  uint64_t v28 = (uint64_t *)(v27 + *(int *)(v12 + 44));
  *uint64_t v28 = KeyPath;
  v28[1] = v25;
  sub_2560C3684((uint64_t)v5, MEMORY[0x263F19048]);
  uint64_t v29 = sub_2561778E8();
  uint64_t v31 = v30;
  sub_2560C36EC();
  uint64_t v33 = v46;
  uint64_t v34 = v46 + *(int *)(v32 + 36);
  sub_2560C3830(v27, v34, (uint64_t (*)(void))sub_255F85EA4);
  sub_2560C3754();
  uint64_t v36 = (uint64_t *)(v34 + *(int *)(v35 + 36));
  uint64_t *v36 = v29;
  v36[1] = v31;
  uint64_t v38 = v44;
  uint64_t v37 = v45;
  uint64_t v39 = v41;
  (*(void (**)(uint64_t, char *, uint64_t))(v44 + 16))(v33, v41, v45);
  sub_2560C3684(v27, (uint64_t (*)(void))sub_255F85EA4);
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v39, v37);
}

uint64_t sub_2560C32F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for StateOfMindTimeline.Styles(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t *)(a1 + *(int *)(_s9LogButtonVMa() + 20));
  uint64_t v8 = v7[1];
  uint64_t v47 = *v7;
  uint64_t v48 = v8;
  sub_255F5CE90();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_256177028();
  uint64_t v11 = v10;
  char v13 = v12 & 1;
  sub_256119CA0((uint64_t)v6);
  uint64_t v43 = type metadata accessor for StateOfMindTimeline.Styles;
  sub_2560C3684((uint64_t)v6, type metadata accessor for StateOfMindTimeline.Styles);
  sub_256176E68();
  uint64_t v14 = sub_256176F88();
  uint64_t v16 = v15;
  v42[1] = v17;
  LOBYTE(v8) = v18 & 1;
  sub_255F67B2C(v9, v11, v13);
  swift_bridgeObjectRelease();
  sub_256119CA0((uint64_t)v6);
  uint64_t v19 = v43;
  sub_2560C3684((uint64_t)v6, v43);
  uint64_t v47 = sub_256177488();
  uint64_t v20 = sub_256176FA8();
  uint64_t v44 = v21;
  uint64_t v45 = v20;
  char v23 = v22;
  uint64_t v46 = v24;
  sub_255F67B2C(v14, v16, v8);
  swift_release();
  swift_bridgeObjectRelease();
  LOBYTE(v8) = sub_256176DD8();
  sub_256119CA0((uint64_t)v6);
  sub_2560C3684((uint64_t)v6, v19);
  sub_256175D48();
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  LOBYTE(v9) = sub_256176D78();
  sub_256119CA0((uint64_t)v6);
  sub_2560C3684((uint64_t)v6, v19);
  uint64_t result = sub_256175D48();
  char v52 = 0;
  char v49 = 0;
  uint64_t v34 = v44;
  *(void *)a2 = v45;
  *(void *)(a2 + 8) = v34;
  *(unsigned char *)(a2 + 16) = v23 & 1;
  *(_DWORD *)(a2 + 17) = v47;
  *(_DWORD *)(a2 + 20) = *(_DWORD *)((char *)&v47 + 3);
  *(void *)(a2 + 24) = v46;
  *(unsigned char *)(a2 + 32) = v8;
  int v35 = *(_DWORD *)v53;
  *(_DWORD *)(a2 + 36) = *(_DWORD *)&v53[3];
  *(_DWORD *)(a2 + 33) = v35;
  *(void *)(a2 + 40) = v26;
  *(void *)(a2 + 48) = v28;
  *(void *)(a2 + 56) = v30;
  *(void *)(a2 + 64) = v32;
  *(unsigned char *)(a2 + 72) = v52;
  int v36 = *(_DWORD *)v51;
  *(_DWORD *)(a2 + 76) = *(_DWORD *)&v51[3];
  *(_DWORD *)(a2 + 73) = v36;
  *(unsigned char *)(a2 + 80) = v9;
  int v37 = *(_DWORD *)v50;
  *(_DWORD *)(a2 + 84) = *(_DWORD *)&v50[3];
  *(_DWORD *)(a2 + 81) = v37;
  *(void *)(a2 + 88) = v38;
  *(void *)(a2 + 96) = v39;
  *(void *)(a2 + 104) = v40;
  *(void *)(a2 + 112) = v41;
  *(unsigned char *)(a2 + 120) = v49;
  return result;
}

void sub_2560C35B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2560C3618()
{
  if (!qword_269F465E0)
  {
    sub_256035E30();
    sub_2560361E8();
    unint64_t v0 = sub_2561775E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F465E0);
    }
  }
}

uint64_t sub_2560C367C@<X0>(uint64_t a1@<X8>)
{
  return sub_2560C32F0(*(void *)(v1 + 16), a1);
}

uint64_t sub_2560C3684(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_2560C36EC()
{
  if (!qword_269F465E8)
  {
    sub_2560C3618();
    sub_2560C3754();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F465E8);
    }
  }
}

void sub_2560C3754()
{
  if (!qword_269F43270)
  {
    sub_255F85EA4(255);
    sub_2560C38F4((unint64_t *)&qword_269F43290, sub_255F85EA4, (void (*)(void))sub_2560C37FC, (void (*)(void))sub_255F8A254);
    unint64_t v0 = sub_256176888();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F43270);
    }
  }
}

uint64_t sub_2560C37FC()
{
  return sub_2560C39B4(&qword_269F42DD0, MEMORY[0x263F19048]);
}

uint64_t sub_2560C3830(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2560C3898()
{
  return sub_2560C38F4(&qword_269F465F0, (void (*)(uint64_t))sub_2560C36EC, (void (*)(void))sub_2560C3980, (void (*)(void))sub_255F8668C);
}

uint64_t sub_2560C38F4(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2560C3980()
{
  return sub_2560C39B4(&qword_269F465F8, (void (*)(uint64_t))sub_2560C3618);
}

uint64_t sub_2560C39B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_2560C39FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    uint64_t v11 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v6 = a3;
    sub_2560CA1DC(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    uint64_t v123 = v6;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_256176AA8();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v126 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
      if (v126(a2, 1, v7))
      {
        sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      char v12 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v13 = v12[5];
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = sub_256176158();
      uint64_t v17 = (void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
      uint64_t v124 = *v17;
      (*v17)(v14, v15, v16);
      *((unsigned char *)a1 + v12[6]) = *((unsigned char *)a2 + v12[6]);
      uint64_t v18 = v12[7];
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      uint64_t v21 = sub_256175D98();
      size_t v121 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
      v121(v19, v20, v21);
      uint64_t v22 = v12[8];
      char v23 = (char *)a1 + v22;
      uint64_t v24 = (char *)a2 + v22;
      if (v126((uint64_t *)((char *)a2 + v22), 1, v7))
      {
        sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v23, v24, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v23, 0, 1, v7);
      }
      uint64_t v26 = _s6StylesV8TimelineVMa(0);
      v124(&v23[*(int *)(v26 + 20)], &v24[*(int *)(v26 + 20)], v16);
      uint64_t v27 = v12[9];
      uint64_t v28 = (char *)a1 + v27;
      uint64_t v29 = (char *)a2 + v27;
      uint64_t v122 = v8;
      if (v126((uint64_t *)((char *)a2 + v27), 1, v7))
      {
        sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v28, v29, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v28, 0, 1, v7);
      }
      uint64_t v31 = _s6StylesV6NoDataVMa(0);
      v124(&v28[*(int *)(v31 + 20)], &v29[*(int *)(v31 + 20)], v16);
      v28[*(int *)(v31 + 24)] = v29[*(int *)(v31 + 24)];
      uint64_t v32 = v12[10];
      uint64_t v33 = (char *)a1 + v32;
      uint64_t v34 = (char *)a2 + v32;
      if (v126((uint64_t *)((char *)a2 + v32), 1, v7))
      {
        sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
        uint64_t v36 = v122;
      }
      else
      {
        uint64_t v36 = v122;
        (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v33, v34, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v33, 0, 1, v7);
      }
      uint64_t v37 = _s6StylesV11PlaceholderVMa(0);
      v124(&v33[*(int *)(v37 + 20)], &v34[*(int *)(v37 + 20)], v16);
      uint64_t v38 = v12[11];
      uint64_t v39 = (char *)a1 + v38;
      uint64_t v40 = (char *)a2 + v38;
      if (v126((uint64_t *)((char *)a2 + v38), 1, v7))
      {
        sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v39, v40, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v39, 0, 1, v7);
      }
      uint64_t v42 = _s6StylesV6SymbolVMa(0);
      v124(&v39[*(int *)(v42 + 20)], &v40[*(int *)(v42 + 20)], v16);
      uint64_t v43 = v12[12];
      uint64_t v44 = (char *)a1 + v43;
      uint64_t v45 = (char *)a2 + v43;
      if (v126((uint64_t *)((char *)a2 + v43), 1, v7))
      {
        sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v44, v45, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v44, 0, 1, v7);
      }
      uint64_t v47 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v124(&v44[v47[5]], &v45[v47[5]], v16);
      v44[v47[6]] = v45[v47[6]];
      v121(&v44[v47[7]], &v45[v47[7]], v21);
      uint64_t v48 = v12[13];
      char v49 = (char *)a1 + v48;
      uint64_t v50 = (char *)a2 + v48;
      if (v126((uint64_t *)((char *)a2 + v48), 1, v7))
      {
        sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v49, v50, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v49, 0, 1, v7);
      }
      uint64_t v52 = _s6StylesV5EmptyVMa(0);
      v124(&v49[*(int *)(v52 + 20)], &v50[*(int *)(v52 + 20)], v16);
      v49[*(int *)(v52 + 24)] = v50[*(int *)(v52 + 24)];
      uint64_t v53 = v12[14];
      uint64_t v54 = (char *)a1 + v53;
      uint64_t v55 = (char *)a2 + v53;
      if (v126((uint64_t *)((char *)a2 + v53), 1, v7))
      {
        sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v54, v55, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v54, 0, 1, v7);
      }
      uint64_t v57 = _s6StylesV5DailyVMa(0);
      v124(&v54[*(int *)(v57 + 20)], &v55[*(int *)(v57 + 20)], v16);
      v54[*(int *)(v57 + 24)] = v55[*(int *)(v57 + 24)];
      uint64_t v58 = v12[15];
      uint64_t v59 = (char *)a1 + v58;
      uint64_t v60 = (char *)a2 + v58;
      if (v126((uint64_t *)((char *)a2 + v58), 1, v7))
      {
        sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
        uint64_t v62 = v122;
      }
      else
      {
        uint64_t v62 = v122;
        (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v59, v60, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v59, 0, 1, v7);
      }
      uint64_t v63 = _s6StylesV9MomentaryVMa(0);
      v124(&v59[*(int *)(v63 + 20)], &v60[*(int *)(v63 + 20)], v16);
      uint64_t v64 = v12[16];
      uint64_t v65 = (char *)a1 + v64;
      uint64_t v66 = (char *)a2 + v64;
      if (v126((uint64_t *)((char *)a2 + v64), 1, v7))
      {
        sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v65, v66, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v65, 0, 1, v7);
      }
      uint64_t v68 = _s6StylesV6HeaderVMa(0);
      v124(&v65[*(int *)(v68 + 20)], &v66[*(int *)(v68 + 20)], v16);
      uint64_t v69 = v12[17];
      uint64_t v70 = (char *)a1 + v69;
      uint64_t v71 = (char *)a2 + v69;
      if (v126((uint64_t *)((char *)a2 + v69), 1, v7))
      {
        sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v70, v71, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v70, 0, 1, v7);
      }
      uint64_t v73 = _s6StylesV11ChartButtonVMa(0);
      v124(&v70[*(int *)(v73 + 20)], &v71[*(int *)(v73 + 20)], v16);
      uint64_t v74 = v12[18];
      uint64_t v75 = (char *)a1 + v74;
      uint64_t v76 = (char *)a2 + v74;
      if (v126((uint64_t *)((char *)a2 + v74), 1, v7))
      {
        sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v75, v76, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v75, 0, 1, v7);
      }
      uint64_t v6 = v123;
      uint64_t v78 = _s6StylesV15LogButtonFooterVMa(0);
      v124(&v75[*(int *)(v78 + 20)], &v76[*(int *)(v78 + 20)], v16);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v79 = *(int *)(v6 + 20);
    uint64_t v125 = a1;
    uint64_t v127 = a2;
    uint64_t v80 = (char *)a1 + v79;
    uint64_t v81 = (uint64_t *)((char *)a2 + v79);
    *(uint64_t *)((char *)a1 + v79) = *v81;
    uint64_t v82 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
    uint64_t v83 = v82[5];
    uint64_t v84 = &v80[v83];
    uint64_t v85 = (char *)v81 + v83;
    uint64_t v86 = sub_256177DB8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16))(v84, v85, v86);
    uint64_t v87 = v82[6];
    uint64_t v88 = &v80[v87];
    uint64_t v89 = (uint64_t *)((char *)v81 + v87);
    uint64_t v90 = v89[1];
    *(void *)uint64_t v88 = *v89;
    *((void *)v88 + 1) = v90;
    uint64_t v91 = v82[7];
    int v92 = &v80[v91];
    uint64_t v93 = (char *)v81 + v91;
    uint64_t v94 = (int *)_s5EntryVMa();
    uint64_t v95 = *((void *)v94 - 1);
    uint64_t v96 = *(unsigned int (**)(char *, uint64_t, int *))(v95 + 48);
    swift_bridgeObjectRetain();
    if (v96(v93, 1, v94))
    {
      sub_2560CA1DC(0, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
      memcpy(v92, v93, *(void *)(*(void *)(v97 - 8) + 64));
    }
    else
    {
      uint64_t v98 = sub_2561758A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 16))(v92, v93, v98);
      uint64_t v99 = v94[5];
      uint64_t v100 = &v92[v99];
      uint64_t v101 = &v93[v99];
      uint64_t v102 = *((void *)v101 + 1);
      *(void *)uint64_t v100 = *(void *)v101;
      *((void *)v100 + 1) = v102;
      uint64_t v103 = v94[6];
      uint64_t v104 = &v92[v103];
      uint64_t v105 = &v93[v103];
      uint64_t v106 = *((void *)v105 + 1);
      *(void *)uint64_t v104 = *(void *)v105;
      *((void *)v104 + 1) = v106;
      uint64_t v107 = v94[7];
      uint64_t v108 = &v92[v107];
      uint64_t v109 = &v93[v107];
      uint64_t v110 = *((void *)v109 + 1);
      *(void *)uint64_t v108 = *(void *)v109;
      *((void *)v108 + 1) = v110;
      uint64_t v111 = v94[8];
      uint64_t v112 = &v92[v111];
      uint64_t v113 = &v93[v111];
      uint64_t v114 = *((void *)v113 + 1);
      *(void *)uint64_t v112 = *(void *)v113;
      *((void *)v112 + 1) = v114;
      *(void *)&v92[v94[9]] = *(void *)&v93[v94[9]];
      uint64_t v115 = *(void (**)(char *, void, uint64_t, int *))(v95 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v115(v92, 0, 1, v94);
    }
    uint64_t v11 = v125;
    *(void *)&v80[v82[8]] = *(uint64_t *)((char *)v81 + v82[8]);
    *(void *)&v80[v82[9]] = *(uint64_t *)((char *)v81 + v82[9]);
    uint64_t v116 = *(int *)(v123 + 24);
    uint64_t v117 = (uint64_t *)((char *)v125 + v116);
    uint64_t v118 = (uint64_t *)((char *)v127 + v116);
    uint64_t v119 = v118[1];
    *uint64_t v117 = *v118;
    v117[1] = v119;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v11;
}

uint64_t sub_2560C4A4C(uint64_t a1, uint64_t a2)
{
  sub_2560CA1DC(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v49 = a2;
    uint64_t v4 = sub_256176AA8();
    uint64_t v5 = *(void *)(v4 - 8);
    uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (!v6(a1, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    }
    uint64_t v7 = type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v8 = a1 + *(int *)(v7 + 20);
    uint64_t v9 = sub_256176158();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    uint64_t v11 = v8;
    char v12 = (int *)v7;
    v10(v11, v9);
    uint64_t v13 = a1 + *(int *)(v7 + 28);
    uint64_t v14 = sub_256175D98();
    uint64_t v47 = *(void (**)(uint64_t))(*(void *)(v14 - 8) + 8);
    uint64_t v48 = v14;
    v47(v13);
    uint64_t v15 = a1 + v12[8];
    if (!v6(v15, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v15, v4);
    }
    uint64_t v16 = _s6StylesV8TimelineVMa(0);
    v10(v15 + *(int *)(v16 + 20), v9);
    uint64_t v17 = a1 + v12[9];
    if (!v6(v17, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v17, v4);
    }
    uint64_t v18 = _s6StylesV6NoDataVMa(0);
    v10(v17 + *(int *)(v18 + 20), v9);
    uint64_t v19 = a1 + v12[10];
    if (!v6(v19, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v19, v4);
    }
    uint64_t v20 = _s6StylesV11PlaceholderVMa(0);
    v10(v19 + *(int *)(v20 + 20), v9);
    uint64_t v21 = a1 + v12[11];
    if (!v6(v21, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v21, v4);
    }
    uint64_t v22 = _s6StylesV6SymbolVMa(0);
    v10(v21 + *(int *)(v22 + 20), v9);
    uint64_t v23 = a1 + v12[12];
    if (!v6(v23, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v23, v4);
    }
    uint64_t v50 = v5;
    uint64_t v24 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v10(v23 + *(int *)(v24 + 20), v9);
    ((void (*)(uint64_t, uint64_t))v47)(v23 + *(int *)(v24 + 28), v48);
    uint64_t v25 = v12;
    uint64_t v26 = a1 + v12[13];
    if (!v6(v26, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v26, v4);
    }
    uint64_t v27 = _s6StylesV5EmptyVMa(0);
    v10(v26 + *(int *)(v27 + 20), v9);
    uint64_t v28 = a1 + v25[14];
    if (!v6(v28, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v28, v4);
    }
    uint64_t v29 = _s6StylesV5DailyVMa(0);
    v10(v28 + *(int *)(v29 + 20), v9);
    uint64_t v30 = a1 + v25[15];
    if (!v6(v30, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v30, v4);
    }
    uint64_t v31 = _s6StylesV9MomentaryVMa(0);
    v10(v30 + *(int *)(v31 + 20), v9);
    uint64_t v32 = a1 + v25[16];
    uint64_t v33 = v9;
    if (!v6(v32, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v32, v4);
    }
    uint64_t v34 = _s6StylesV6HeaderVMa(0);
    v10(v32 + *(int *)(v34 + 20), v9);
    uint64_t v35 = a1 + v25[17];
    if (!v6(v35, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v35, v4);
    }
    uint64_t v36 = _s6StylesV11ChartButtonVMa(0);
    v10(v35 + *(int *)(v36 + 20), v9);
    uint64_t v37 = a1 + v25[18];
    if (!v6(v37, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v37, v4);
    }
    uint64_t v38 = _s6StylesV15LogButtonFooterVMa(0);
    v10(v37 + *(int *)(v38 + 20), v33);
    a2 = v49;
  }
  else
  {
    swift_release();
  }
  uint64_t v39 = a1 + *(int *)(a2 + 20);
  uint64_t v40 = type metadata accessor for StateOfMindTimeline.DaySummary();
  uint64_t v41 = v39 + *(int *)(v40 + 20);
  uint64_t v42 = sub_256177DB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
  swift_bridgeObjectRelease();
  uint64_t v43 = v39 + *(int *)(v40 + 28);
  uint64_t v44 = _s5EntryVMa();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 48))(v43, 1, v44))
  {
    uint64_t v45 = sub_2561758A8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v43, v45);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

void *sub_2560C51CC(void *a1, void *a2, uint64_t a3)
{
  sub_2560CA1DC(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  uint64_t v120 = a3;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_256176AA8();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v123 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48);
    if (v123(a2, 1, v6))
    {
      sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    uint64_t v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v10 = v9[5];
    uint64_t v11 = (char *)a1 + v10;
    char v12 = (char *)a2 + v10;
    uint64_t v13 = sub_256176158();
    uint64_t v14 = (void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    size_t v121 = *v14;
    (*v14)(v11, v12, v13);
    *((unsigned char *)a1 + v9[6]) = *((unsigned char *)a2 + v9[6]);
    uint64_t v15 = v9[7];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_256175D98();
    uint64_t v118 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
    v118(v16, v17, v18);
    uint64_t v19 = v9[8];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    if (v123((void *)((char *)a2 + v19), 1, v6))
    {
      sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v20, v21, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v20, 0, 1, v6);
    }
    uint64_t v23 = _s6StylesV8TimelineVMa(0);
    v121(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
    uint64_t v24 = v9[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v119 = v7;
    if (v123((void *)((char *)a2 + v24), 1, v6))
    {
      sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v25, v26, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v25, 0, 1, v6);
    }
    uint64_t v28 = _s6StylesV6NoDataVMa(0);
    v121(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
    v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
    uint64_t v29 = v9[10];
    uint64_t v30 = (char *)a1 + v29;
    uint64_t v31 = (char *)a2 + v29;
    if (v123((void *)((char *)a2 + v29), 1, v6))
    {
      sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
      uint64_t v33 = v119;
    }
    else
    {
      uint64_t v33 = v119;
      (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v30, v31, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v30, 0, 1, v6);
    }
    uint64_t v34 = _s6StylesV11PlaceholderVMa(0);
    v121(&v30[*(int *)(v34 + 20)], &v31[*(int *)(v34 + 20)], v13);
    uint64_t v35 = v9[11];
    uint64_t v36 = (char *)a1 + v35;
    uint64_t v37 = (char *)a2 + v35;
    if (v123((void *)((char *)a2 + v35), 1, v6))
    {
      sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v36, v37, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v36, 0, 1, v6);
    }
    uint64_t v39 = _s6StylesV6SymbolVMa(0);
    v121(&v36[*(int *)(v39 + 20)], &v37[*(int *)(v39 + 20)], v13);
    uint64_t v40 = v9[12];
    uint64_t v41 = (char *)a1 + v40;
    uint64_t v42 = (char *)a2 + v40;
    if (v123((void *)((char *)a2 + v40), 1, v6))
    {
      sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v41, v42, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v41, 0, 1, v6);
    }
    uint64_t v44 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v121(&v41[v44[5]], &v42[v44[5]], v13);
    v41[v44[6]] = v42[v44[6]];
    v118(&v41[v44[7]], &v42[v44[7]], v18);
    uint64_t v45 = v9[13];
    uint64_t v46 = (char *)a1 + v45;
    uint64_t v47 = (char *)a2 + v45;
    if (v123((void *)((char *)a2 + v45), 1, v6))
    {
      sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v46, v47, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v46, 0, 1, v6);
    }
    uint64_t v49 = _s6StylesV5EmptyVMa(0);
    v121(&v46[*(int *)(v49 + 20)], &v47[*(int *)(v49 + 20)], v13);
    v46[*(int *)(v49 + 24)] = v47[*(int *)(v49 + 24)];
    uint64_t v50 = v9[14];
    uint64_t v51 = (char *)a1 + v50;
    uint64_t v52 = (char *)a2 + v50;
    if (v123((void *)((char *)a2 + v50), 1, v6))
    {
      sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v51, v52, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v51, 0, 1, v6);
    }
    uint64_t v54 = _s6StylesV5DailyVMa(0);
    v121(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v13);
    v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
    uint64_t v55 = v9[15];
    uint64_t v56 = (char *)a1 + v55;
    uint64_t v57 = (char *)a2 + v55;
    if (v123((void *)((char *)a2 + v55), 1, v6))
    {
      sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
      uint64_t v59 = v119;
    }
    else
    {
      uint64_t v59 = v119;
      (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v56, v57, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v56, 0, 1, v6);
    }
    uint64_t v60 = _s6StylesV9MomentaryVMa(0);
    v121(&v56[*(int *)(v60 + 20)], &v57[*(int *)(v60 + 20)], v13);
    uint64_t v61 = v9[16];
    uint64_t v62 = (char *)a1 + v61;
    uint64_t v63 = (char *)a2 + v61;
    if (v123((void *)((char *)a2 + v61), 1, v6))
    {
      sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v62, v63, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v62, 0, 1, v6);
    }
    uint64_t v65 = _s6StylesV6HeaderVMa(0);
    v121(&v62[*(int *)(v65 + 20)], &v63[*(int *)(v65 + 20)], v13);
    uint64_t v66 = v9[17];
    uint64_t v67 = (char *)a1 + v66;
    uint64_t v68 = (char *)a2 + v66;
    if (v123((void *)((char *)a2 + v66), 1, v6))
    {
      sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v67, v68, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v67, 0, 1, v6);
    }
    uint64_t v70 = _s6StylesV11ChartButtonVMa(0);
    v121(&v67[*(int *)(v70 + 20)], &v68[*(int *)(v70 + 20)], v13);
    uint64_t v71 = v9[18];
    uint64_t v72 = (char *)a1 + v71;
    uint64_t v73 = (char *)a2 + v71;
    if (v123((void *)((char *)a2 + v71), 1, v6))
    {
      sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v72, v73, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v72, 0, 1, v6);
    }
    a3 = v120;
    uint64_t v75 = _s6StylesV15LogButtonFooterVMa(0);
    v121(&v72[*(int *)(v75 + 20)], &v73[*(int *)(v75 + 20)], v13);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v76 = *(int *)(a3 + 20);
  uint64_t v122 = a1;
  uint64_t v124 = a2;
  uint64_t v77 = (char *)a1 + v76;
  uint64_t v78 = (void *)((char *)a2 + v76);
  *(void *)((char *)a1 + v76) = *v78;
  uint64_t v79 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  uint64_t v80 = v79[5];
  uint64_t v81 = &v77[v80];
  uint64_t v82 = (char *)v78 + v80;
  uint64_t v83 = sub_256177DB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16))(v81, v82, v83);
  uint64_t v84 = v79[6];
  uint64_t v85 = &v77[v84];
  uint64_t v86 = (void *)((char *)v78 + v84);
  uint64_t v87 = v86[1];
  *(void *)uint64_t v85 = *v86;
  *((void *)v85 + 1) = v87;
  uint64_t v88 = v79[7];
  uint64_t v89 = &v77[v88];
  uint64_t v90 = (char *)v78 + v88;
  uint64_t v91 = (int *)_s5EntryVMa();
  uint64_t v92 = *((void *)v91 - 1);
  uint64_t v93 = *(unsigned int (**)(char *, uint64_t, int *))(v92 + 48);
  swift_bridgeObjectRetain();
  if (v93(v90, 1, v91))
  {
    sub_2560CA1DC(0, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
    memcpy(v89, v90, *(void *)(*(void *)(v94 - 8) + 64));
  }
  else
  {
    uint64_t v95 = sub_2561758A8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 16))(v89, v90, v95);
    uint64_t v96 = v91[5];
    uint64_t v97 = &v89[v96];
    uint64_t v98 = &v90[v96];
    uint64_t v99 = *((void *)v98 + 1);
    *(void *)uint64_t v97 = *(void *)v98;
    *((void *)v97 + 1) = v99;
    uint64_t v100 = v91[6];
    uint64_t v101 = &v89[v100];
    uint64_t v102 = &v90[v100];
    uint64_t v103 = *((void *)v102 + 1);
    *(void *)uint64_t v101 = *(void *)v102;
    *((void *)v101 + 1) = v103;
    uint64_t v104 = v91[7];
    uint64_t v105 = &v89[v104];
    uint64_t v106 = &v90[v104];
    uint64_t v107 = *((void *)v106 + 1);
    *(void *)uint64_t v105 = *(void *)v106;
    *((void *)v105 + 1) = v107;
    uint64_t v108 = v91[8];
    uint64_t v109 = &v89[v108];
    uint64_t v110 = &v90[v108];
    uint64_t v111 = *((void *)v110 + 1);
    *(void *)uint64_t v109 = *(void *)v110;
    *((void *)v109 + 1) = v111;
    *(void *)&v89[v91[9]] = *(void *)&v90[v91[9]];
    uint64_t v112 = *(void (**)(char *, void, uint64_t, int *))(v92 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v112(v89, 0, 1, v91);
  }
  *(void *)&v77[v79[8]] = *(void *)((char *)v78 + v79[8]);
  *(void *)&v77[v79[9]] = *(void *)((char *)v78 + v79[9]);
  uint64_t v113 = *(int *)(v120 + 24);
  uint64_t v114 = (void *)((char *)v122 + v113);
  uint64_t v115 = (void *)((char *)v124 + v113);
  uint64_t v116 = v115[1];
  *uint64_t v114 = *v115;
  v114[1] = v116;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return v122;
}

void *sub_2560C61D0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  if (a1 != a2)
  {
    sub_255F612BC((uint64_t)a1);
    sub_2560CA1DC(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_256176AA8();
      uint64_t v7 = *(void *)(v6 - 8);
      uint64_t v132 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48);
      uint64_t v128 = v7;
      if (v132(a2, 1, v6))
      {
        sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      uint64_t v9 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v10 = v9[5];
      uint64_t v11 = (char *)a1 + v10;
      char v12 = (char *)a2 + v10;
      uint64_t v13 = sub_256176158();
      uint64_t v14 = (void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
      uint64_t v130 = *v14;
      (*v14)(v11, v12, v13);
      *((unsigned char *)a1 + v9[6]) = *((unsigned char *)a2 + v9[6]);
      uint64_t v15 = v9[7];
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = sub_256175D98();
      uint64_t v127 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
      v127(v16, v17, v18);
      uint64_t v19 = v9[8];
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      if (v132((void *)((char *)a2 + v19), 1, v6))
      {
        sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v128 + 16))(v20, v21, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v128 + 56))(v20, 0, 1, v6);
      }
      uint64_t v23 = _s6StylesV8TimelineVMa(0);
      v130(&v20[*(int *)(v23 + 20)], &v21[*(int *)(v23 + 20)], v13);
      uint64_t v24 = v9[9];
      uint64_t v25 = (char *)a1 + v24;
      uint64_t v26 = (char *)a2 + v24;
      if (v132((void *)((char *)a2 + v24), 1, v6))
      {
        sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v128 + 16))(v25, v26, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v128 + 56))(v25, 0, 1, v6);
      }
      uint64_t v28 = _s6StylesV6NoDataVMa(0);
      v130(&v25[*(int *)(v28 + 20)], &v26[*(int *)(v28 + 20)], v13);
      v25[*(int *)(v28 + 24)] = v26[*(int *)(v28 + 24)];
      uint64_t v29 = v9[10];
      uint64_t v30 = (char *)a1 + v29;
      uint64_t v31 = (char *)a2 + v29;
      if (v132((void *)((char *)a2 + v29), 1, v6))
      {
        sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v128 + 16))(v30, v31, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v128 + 56))(v30, 0, 1, v6);
      }
      uint64_t v33 = _s6StylesV11PlaceholderVMa(0);
      v130(&v30[*(int *)(v33 + 20)], &v31[*(int *)(v33 + 20)], v13);
      uint64_t v34 = v9[11];
      uint64_t v35 = (char *)a1 + v34;
      uint64_t v36 = (char *)a2 + v34;
      if (v132((void *)((char *)a2 + v34), 1, v6))
      {
        sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v128 + 16))(v35, v36, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v128 + 56))(v35, 0, 1, v6);
      }
      uint64_t v38 = _s6StylesV6SymbolVMa(0);
      v130(&v35[*(int *)(v38 + 20)], &v36[*(int *)(v38 + 20)], v13);
      uint64_t v39 = v9[12];
      uint64_t v40 = (char *)a1 + v39;
      uint64_t v41 = (char *)a2 + v39;
      if (v132((void *)((char *)a2 + v39), 1, v6))
      {
        sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v128 + 16))(v40, v41, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v128 + 56))(v40, 0, 1, v6);
      }
      uint64_t v43 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v130(&v40[v43[5]], &v41[v43[5]], v13);
      v40[v43[6]] = v41[v43[6]];
      v127(&v40[v43[7]], &v41[v43[7]], v18);
      uint64_t v44 = v9[13];
      uint64_t v45 = (char *)a1 + v44;
      uint64_t v46 = (char *)a2 + v44;
      if (v132((void *)((char *)a2 + v44), 1, v6))
      {
        sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
        uint64_t v48 = v128;
      }
      else
      {
        uint64_t v48 = v128;
        (*(void (**)(char *, char *, uint64_t))(v128 + 16))(v45, v46, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v128 + 56))(v45, 0, 1, v6);
      }
      uint64_t v49 = _s6StylesV5EmptyVMa(0);
      v130(&v45[*(int *)(v49 + 20)], &v46[*(int *)(v49 + 20)], v13);
      v45[*(int *)(v49 + 24)] = v46[*(int *)(v49 + 24)];
      uint64_t v50 = v9[14];
      uint64_t v51 = (char *)a1 + v50;
      uint64_t v52 = (char *)a2 + v50;
      if (v132((void *)((char *)a2 + v50), 1, v6))
      {
        sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, v52, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v6);
      }
      uint64_t v54 = _s6StylesV5DailyVMa(0);
      v130(&v51[*(int *)(v54 + 20)], &v52[*(int *)(v54 + 20)], v13);
      v51[*(int *)(v54 + 24)] = v52[*(int *)(v54 + 24)];
      uint64_t v55 = v9[15];
      uint64_t v56 = (char *)a1 + v55;
      uint64_t v57 = (char *)a2 + v55;
      if (v132((void *)((char *)a2 + v55), 1, v6))
      {
        sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v56, v57, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v56, 0, 1, v6);
      }
      uint64_t v59 = _s6StylesV9MomentaryVMa(0);
      v130(&v56[*(int *)(v59 + 20)], &v57[*(int *)(v59 + 20)], v13);
      uint64_t v60 = v9[16];
      uint64_t v61 = (char *)a1 + v60;
      uint64_t v62 = (char *)a2 + v60;
      if (v132((void *)((char *)a2 + v60), 1, v6))
      {
        sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v6);
      }
      uint64_t v64 = _s6StylesV6HeaderVMa(0);
      v130(&v61[*(int *)(v64 + 20)], &v62[*(int *)(v64 + 20)], v13);
      uint64_t v65 = v9[17];
      uint64_t v66 = (char *)a1 + v65;
      uint64_t v67 = (char *)a2 + v65;
      if (v132((void *)((char *)a2 + v65), 1, v6))
      {
        sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v66, v67, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v6);
      }
      uint64_t v69 = _s6StylesV11ChartButtonVMa(0);
      v130(&v66[*(int *)(v69 + 20)], &v67[*(int *)(v69 + 20)], v13);
      uint64_t v70 = v9[18];
      uint64_t v71 = (char *)a1 + v70;
      uint64_t v72 = (char *)a2 + v70;
      if (v132((void *)((char *)a2 + v70), 1, v6))
      {
        sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v72, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v71, 0, 1, v6);
      }
      uint64_t v74 = _s6StylesV15LogButtonFooterVMa(0);
      v130(&v71[*(int *)(v74 + 20)], &v72[*(int *)(v74 + 20)], v13);
      uint64_t v3 = a3;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v75 = *(int *)(v3 + 20);
  uint64_t v131 = a1;
  uint64_t v133 = a2;
  uint64_t v76 = (char *)a1 + v75;
  uint64_t v77 = (void *)((char *)a2 + v75);
  *(void *)((char *)a1 + v75) = *v77;
  uint64_t v78 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  uint64_t v79 = v78[5];
  uint64_t v80 = &v76[v79];
  uint64_t v81 = (char *)v77 + v79;
  uint64_t v82 = sub_256177DB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 24))(v80, v81, v82);
  uint64_t v83 = v78[6];
  uint64_t v84 = &v76[v83];
  uint64_t v85 = (void *)((char *)v77 + v83);
  *(void *)uint64_t v84 = *v85;
  *((void *)v84 + 1) = v85[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v86 = v78[7];
  uint64_t v87 = &v76[v86];
  uint64_t v88 = (char *)v77 + v86;
  uint64_t v89 = (int *)_s5EntryVMa();
  uint64_t v90 = *((void *)v89 - 1);
  uint64_t v91 = *(uint64_t (**)(char *, uint64_t, int *))(v90 + 48);
  int v92 = v91(v87, 1, v89);
  int v93 = v91(v88, 1, v89);
  if (!v92)
  {
    if (!v93)
    {
      uint64_t v114 = sub_2561758A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 24))(v87, v88, v114);
      uint64_t v115 = v89[5];
      uint64_t v116 = &v87[v115];
      uint64_t v117 = &v88[v115];
      *(void *)uint64_t v116 = *(void *)v117;
      *((void *)v116 + 1) = *((void *)v117 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v118 = v89[6];
      uint64_t v119 = &v87[v118];
      uint64_t v120 = &v88[v118];
      *(void *)uint64_t v119 = *(void *)v120;
      *((void *)v119 + 1) = *((void *)v120 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v121 = v89[7];
      uint64_t v122 = &v87[v121];
      uint64_t v123 = &v88[v121];
      *(void *)uint64_t v122 = *(void *)v123;
      *((void *)v122 + 1) = *((void *)v123 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v124 = v89[8];
      uint64_t v125 = &v87[v124];
      uint64_t v126 = &v88[v124];
      *(void *)uint64_t v125 = *(void *)v126;
      *((void *)v125 + 1) = *((void *)v126 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v87[v89[9]] = *(void *)&v88[v89[9]];
      goto LABEL_48;
    }
    sub_2560C7398((uint64_t)v87, (uint64_t (*)(void))_s5EntryVMa);
    goto LABEL_47;
  }
  if (v93)
  {
LABEL_47:
    sub_2560CA1DC(0, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
    memcpy(v87, v88, *(void *)(*(void *)(v108 - 8) + 64));
    goto LABEL_48;
  }
  uint64_t v94 = sub_2561758A8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 16))(v87, v88, v94);
  uint64_t v95 = v89[5];
  uint64_t v96 = &v87[v95];
  uint64_t v97 = &v88[v95];
  *(void *)uint64_t v96 = *(void *)v97;
  *((void *)v96 + 1) = *((void *)v97 + 1);
  uint64_t v98 = v89[6];
  uint64_t v99 = &v87[v98];
  uint64_t v100 = &v88[v98];
  *(void *)uint64_t v99 = *(void *)v100;
  *((void *)v99 + 1) = *((void *)v100 + 1);
  uint64_t v101 = v89[7];
  uint64_t v102 = &v87[v101];
  uint64_t v103 = &v88[v101];
  *(void *)uint64_t v102 = *(void *)v103;
  *((void *)v102 + 1) = *((void *)v103 + 1);
  uint64_t v104 = v89[8];
  uint64_t v105 = &v87[v104];
  uint64_t v106 = &v88[v104];
  *(void *)uint64_t v105 = *(void *)v106;
  *((void *)v105 + 1) = *((void *)v106 + 1);
  *(void *)&v87[v89[9]] = *(void *)&v88[v89[9]];
  uint64_t v107 = *(void (**)(char *, void, uint64_t, int *))(v90 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v107(v87, 0, 1, v89);
LABEL_48:
  *(void *)&v76[v78[8]] = *(void *)((char *)v77 + v78[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v76[v78[9]] = *(void *)((char *)v77 + v78[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v109 = *(int *)(a3 + 24);
  uint64_t v110 = (void *)((char *)v131 + v109);
  uint64_t v111 = (void *)((char *)v133 + v109);
  uint64_t v112 = v111[1];
  *uint64_t v110 = *v111;
  v110[1] = v112;
  swift_retain();
  swift_release();
  return v131;
}

uint64_t sub_2560C7398(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *sub_2560C73F8(char *a1, char *a2, uint64_t a3)
{
  sub_2560CA1DC(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  uint64_t v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_256176AA8();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v96 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    uint64_t v93 = a3;
    uint64_t v94 = v9;
    if (v96(a2, 1, v8))
    {
      sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    uint64_t v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
    uint64_t v12 = v11[5];
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    uint64_t v15 = sub_256176158();
    uint64_t v16 = (void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
    uint64_t v95 = *v16;
    (*v16)(v13, v14, v15);
    a1[v11[6]] = a2[v11[6]];
    uint64_t v17 = v11[7];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    uint64_t v20 = sub_256175D98();
    int v92 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32);
    v92(v18, v19, v20);
    uint64_t v21 = v11[8];
    uint64_t v22 = &a1[v21];
    uint64_t v23 = &a2[v21];
    if (v96(&a2[v21], 1, v8))
    {
      sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v22, v23, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v22, 0, 1, v8);
    }
    uint64_t v25 = _s6StylesV8TimelineVMa(0);
    v95(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
    uint64_t v26 = v11[9];
    uint64_t v27 = &a1[v26];
    uint64_t v28 = &a2[v26];
    if (v96(&a2[v26], 1, v8))
    {
      sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v27, v28, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v27, 0, 1, v8);
    }
    uint64_t v30 = _s6StylesV6NoDataVMa(0);
    v95(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
    v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
    uint64_t v31 = v11[10];
    uint64_t v32 = &a1[v31];
    uint64_t v33 = &a2[v31];
    if (v96(&a2[v31], 1, v8))
    {
      sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v32, v33, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v32, 0, 1, v8);
    }
    uint64_t v35 = _s6StylesV11PlaceholderVMa(0);
    v95(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
    uint64_t v36 = v11[11];
    uint64_t v37 = &a1[v36];
    uint64_t v38 = &a2[v36];
    if (v96(&a2[v36], 1, v8))
    {
      sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v37, v38, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v37, 0, 1, v8);
    }
    uint64_t v40 = _s6StylesV6SymbolVMa(0);
    v95(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
    uint64_t v41 = v11[12];
    uint64_t v42 = &a1[v41];
    uint64_t v43 = &a2[v41];
    if (v96(&a2[v41], 1, v8))
    {
      sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v42, v43, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v42, 0, 1, v8);
    }
    uint64_t v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
    v95(&v42[v45[5]], &v43[v45[5]], v15);
    v42[v45[6]] = v43[v45[6]];
    v92(&v42[v45[7]], &v43[v45[7]], v20);
    uint64_t v46 = v11[13];
    uint64_t v47 = &a1[v46];
    uint64_t v48 = &a2[v46];
    if (v96(&a2[v46], 1, v8))
    {
      sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v47, v48, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v47, 0, 1, v8);
    }
    a3 = v93;
    uint64_t v50 = _s6StylesV5EmptyVMa(0);
    v95(&v47[*(int *)(v50 + 20)], &v48[*(int *)(v50 + 20)], v15);
    v47[*(int *)(v50 + 24)] = v48[*(int *)(v50 + 24)];
    uint64_t v51 = v11[14];
    uint64_t v52 = &a1[v51];
    uint64_t v53 = &a2[v51];
    if (v96(&a2[v51], 1, v8))
    {
      sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v52, v53, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v52, 0, 1, v8);
    }
    uint64_t v55 = _s6StylesV5DailyVMa(0);
    v95(&v52[*(int *)(v55 + 20)], &v53[*(int *)(v55 + 20)], v15);
    v52[*(int *)(v55 + 24)] = v53[*(int *)(v55 + 24)];
    uint64_t v56 = v11[15];
    uint64_t v57 = &a1[v56];
    uint64_t v58 = &a2[v56];
    if (v96(&a2[v56], 1, v8))
    {
      sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v57, v58, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v57, 0, 1, v8);
    }
    uint64_t v60 = _s6StylesV9MomentaryVMa(0);
    v95(&v57[*(int *)(v60 + 20)], &v58[*(int *)(v60 + 20)], v15);
    uint64_t v61 = v11[16];
    uint64_t v62 = &a1[v61];
    uint64_t v63 = &a2[v61];
    if (v96(&a2[v61], 1, v8))
    {
      sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v62, v63, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v62, 0, 1, v8);
    }
    uint64_t v65 = _s6StylesV6HeaderVMa(0);
    v95(&v62[*(int *)(v65 + 20)], &v63[*(int *)(v65 + 20)], v15);
    uint64_t v66 = v11[17];
    uint64_t v67 = &a1[v66];
    uint64_t v68 = &a2[v66];
    if (v96(&a2[v66], 1, v8))
    {
      sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v67, v68, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v67, 0, 1, v8);
    }
    uint64_t v70 = _s6StylesV11ChartButtonVMa(0);
    v95(&v67[*(int *)(v70 + 20)], &v68[*(int *)(v70 + 20)], v15);
    uint64_t v71 = v11[18];
    uint64_t v72 = &a1[v71];
    uint64_t v73 = &a2[v71];
    if (v96(&a2[v71], 1, v8))
    {
      sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v72, v73, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v72, 0, 1, v8);
    }
    uint64_t v75 = _s6StylesV15LogButtonFooterVMa(0);
    v95(&v72[*(int *)(v75 + 20)], &v73[*(int *)(v75 + 20)], v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  uint64_t v76 = *(int *)(a3 + 20);
  uint64_t v77 = &a1[v76];
  uint64_t v78 = &a2[v76];
  *(void *)&a1[v76] = *(void *)&a2[v76];
  uint64_t v79 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  uint64_t v80 = v79[5];
  uint64_t v81 = &v77[v80];
  uint64_t v82 = &v78[v80];
  uint64_t v83 = sub_256177DB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 32))(v81, v82, v83);
  *(_OWORD *)&v77[v79[6]] = *(_OWORD *)&v78[v79[6]];
  uint64_t v84 = v79[7];
  uint64_t v85 = &v77[v84];
  uint64_t v86 = &v78[v84];
  uint64_t v87 = (int *)_s5EntryVMa();
  uint64_t v88 = *((void *)v87 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v88 + 48))(v86, 1, v87))
  {
    sub_2560CA1DC(0, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
    memcpy(v85, v86, *(void *)(*(void *)(v89 - 8) + 64));
  }
  else
  {
    uint64_t v90 = sub_2561758A8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 32))(v85, v86, v90);
    *(_OWORD *)&v85[v87[5]] = *(_OWORD *)&v86[v87[5]];
    *(_OWORD *)&v85[v87[6]] = *(_OWORD *)&v86[v87[6]];
    *(_OWORD *)&v85[v87[7]] = *(_OWORD *)&v86[v87[7]];
    *(_OWORD *)&v85[v87[8]] = *(_OWORD *)&v86[v87[8]];
    *(void *)&v85[v87[9]] = *(void *)&v86[v87[9]];
    (*(void (**)(char *, void, uint64_t, int *))(v88 + 56))(v85, 0, 1, v87);
  }
  *(void *)&v77[v79[8]] = *(void *)&v78[v79[8]];
  *(void *)&v77[v79[9]] = *(void *)&v78[v79[9]];
  *(_OWORD *)&a1[*(int *)(a3 + 24)] = *(_OWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_2560C83CC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  if (a1 != a2)
  {
    sub_255F612BC((uint64_t)a1);
    sub_2560CA1DC(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
    uint64_t v7 = v6;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_256176AA8();
      uint64_t v9 = *(void *)(v8 - 8);
      uint64_t v126 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
      uint64_t v122 = v9;
      if (v126(a2, 1, v8))
      {
        sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      uint64_t v11 = (int *)type metadata accessor for StateOfMindTimeline.Styles(0);
      uint64_t v12 = v11[5];
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      uint64_t v15 = sub_256176158();
      uint64_t v16 = (void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
      uint64_t v124 = *v16;
      (*v16)(v13, v14, v15);
      a1[v11[6]] = a2[v11[6]];
      uint64_t v17 = v11[7];
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      uint64_t v20 = sub_256175D98();
      uint64_t v121 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32);
      v121(v18, v19, v20);
      uint64_t v21 = v11[8];
      uint64_t v22 = &a1[v21];
      uint64_t v23 = &a2[v21];
      if (v126(&a2[v21], 1, v8))
      {
        sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v122 + 32))(v22, v23, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v22, 0, 1, v8);
      }
      uint64_t v25 = _s6StylesV8TimelineVMa(0);
      v124(&v22[*(int *)(v25 + 20)], &v23[*(int *)(v25 + 20)], v15);
      uint64_t v26 = v11[9];
      uint64_t v27 = &a1[v26];
      uint64_t v28 = &a2[v26];
      if (v126(&a2[v26], 1, v8))
      {
        sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v122 + 32))(v27, v28, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v27, 0, 1, v8);
      }
      uint64_t v30 = _s6StylesV6NoDataVMa(0);
      v124(&v27[*(int *)(v30 + 20)], &v28[*(int *)(v30 + 20)], v15);
      v27[*(int *)(v30 + 24)] = v28[*(int *)(v30 + 24)];
      uint64_t v31 = v11[10];
      uint64_t v32 = &a1[v31];
      uint64_t v33 = &a2[v31];
      if (v126(&a2[v31], 1, v8))
      {
        sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v122 + 32))(v32, v33, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v32, 0, 1, v8);
      }
      uint64_t v35 = _s6StylesV11PlaceholderVMa(0);
      v124(&v32[*(int *)(v35 + 20)], &v33[*(int *)(v35 + 20)], v15);
      uint64_t v36 = v11[11];
      uint64_t v37 = &a1[v36];
      uint64_t v38 = &a2[v36];
      if (v126(&a2[v36], 1, v8))
      {
        sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v122 + 32))(v37, v38, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v37, 0, 1, v8);
      }
      uint64_t v40 = _s6StylesV6SymbolVMa(0);
      v124(&v37[*(int *)(v40 + 20)], &v38[*(int *)(v40 + 20)], v15);
      uint64_t v41 = v11[12];
      uint64_t v42 = &a1[v41];
      uint64_t v43 = &a2[v41];
      if (v126(&a2[v41], 1, v8))
      {
        sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v122 + 32))(v42, v43, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v42, 0, 1, v8);
      }
      uint64_t v45 = (int *)type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
      v124(&v42[v45[5]], &v43[v45[5]], v15);
      v42[v45[6]] = v43[v45[6]];
      v121(&v42[v45[7]], &v43[v45[7]], v20);
      uint64_t v46 = v11[13];
      uint64_t v47 = &a1[v46];
      uint64_t v48 = &a2[v46];
      if (v126(&a2[v46], 1, v8))
      {
        sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
        uint64_t v50 = v122;
      }
      else
      {
        uint64_t v50 = v122;
        (*(void (**)(char *, char *, uint64_t))(v122 + 32))(v47, v48, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v47, 0, 1, v8);
      }
      uint64_t v51 = _s6StylesV5EmptyVMa(0);
      v124(&v47[*(int *)(v51 + 20)], &v48[*(int *)(v51 + 20)], v15);
      v47[*(int *)(v51 + 24)] = v48[*(int *)(v51 + 24)];
      uint64_t v52 = v11[14];
      uint64_t v53 = &a1[v52];
      uint64_t v54 = &a2[v52];
      if (v126(&a2[v52], 1, v8))
      {
        sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v53, v54, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v8);
      }
      uint64_t v56 = _s6StylesV5DailyVMa(0);
      v124(&v53[*(int *)(v56 + 20)], &v54[*(int *)(v56 + 20)], v15);
      v53[*(int *)(v56 + 24)] = v54[*(int *)(v56 + 24)];
      uint64_t v57 = v11[15];
      uint64_t v58 = &a1[v57];
      uint64_t v59 = &a2[v57];
      if (v126(&a2[v57], 1, v8))
      {
        sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v58, v59, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v58, 0, 1, v8);
      }
      uint64_t v3 = a3;
      uint64_t v61 = _s6StylesV9MomentaryVMa(0);
      v124(&v58[*(int *)(v61 + 20)], &v59[*(int *)(v61 + 20)], v15);
      uint64_t v62 = v11[16];
      uint64_t v63 = &a1[v62];
      uint64_t v64 = &a2[v62];
      if (v126(&a2[v62], 1, v8))
      {
        sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v63, v64, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v63, 0, 1, v8);
      }
      uint64_t v66 = _s6StylesV6HeaderVMa(0);
      v124(&v63[*(int *)(v66 + 20)], &v64[*(int *)(v66 + 20)], v15);
      uint64_t v67 = v11[17];
      uint64_t v68 = &a1[v67];
      uint64_t v69 = &a2[v67];
      if (v126(&a2[v67], 1, v8))
      {
        sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v68, v69, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v68, 0, 1, v8);
      }
      uint64_t v71 = _s6StylesV11ChartButtonVMa(0);
      v124(&v68[*(int *)(v71 + 20)], &v69[*(int *)(v71 + 20)], v15);
      uint64_t v72 = v11[18];
      uint64_t v73 = &a1[v72];
      uint64_t v74 = &a2[v72];
      if (v126(&a2[v72], 1, v8))
      {
        sub_2560CA1DC(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v73, v74, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v73, 0, 1, v8);
      }
      uint64_t v76 = _s6StylesV15LogButtonFooterVMa(0);
      v124(&v73[*(int *)(v76 + 20)], &v74[*(int *)(v76 + 20)], v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
  }
  uint64_t v77 = *(int *)(v3 + 20);
  uint64_t v125 = a2;
  uint64_t v127 = a1;
  uint64_t v78 = &a1[v77];
  uint64_t v79 = &a2[v77];
  *(void *)&a1[v77] = *(void *)&a2[v77];
  uint64_t v80 = (int *)type metadata accessor for StateOfMindTimeline.DaySummary();
  uint64_t v81 = v80[5];
  uint64_t v82 = &v78[v81];
  uint64_t v83 = &v79[v81];
  uint64_t v84 = sub_256177DB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 40))(v82, v83, v84);
  uint64_t v85 = v80[6];
  uint64_t v86 = &v78[v85];
  uint64_t v87 = &v79[v85];
  uint64_t v89 = *(void *)v87;
  uint64_t v88 = *((void *)v87 + 1);
  *(void *)uint64_t v86 = v89;
  *((void *)v86 + 1) = v88;
  swift_bridgeObjectRelease();
  uint64_t v90 = v80[7];
  uint64_t v91 = &v78[v90];
  int v92 = &v79[v90];
  uint64_t v93 = (int *)_s5EntryVMa();
  uint64_t v94 = *((void *)v93 - 1);
  uint64_t v95 = *(uint64_t (**)(char *, uint64_t, int *))(v94 + 48);
  LODWORD(v82) = v95(v91, 1, v93);
  int v96 = v95(v92, 1, v93);
  if (!v82)
  {
    if (!v96)
    {
      uint64_t v100 = sub_2561758A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 40))(v91, v92, v100);
      uint64_t v101 = v93[5];
      uint64_t v102 = &v91[v101];
      uint64_t v103 = &v92[v101];
      uint64_t v105 = *(void *)v103;
      uint64_t v104 = *((void *)v103 + 1);
      *(void *)uint64_t v102 = v105;
      *((void *)v102 + 1) = v104;
      swift_bridgeObjectRelease();
      uint64_t v106 = v93[6];
      uint64_t v107 = &v91[v106];
      uint64_t v108 = &v92[v106];
      uint64_t v110 = *(void *)v108;
      uint64_t v109 = *((void *)v108 + 1);
      *(void *)uint64_t v107 = v110;
      *((void *)v107 + 1) = v109;
      swift_bridgeObjectRelease();
      uint64_t v111 = v93[7];
      uint64_t v112 = &v91[v111];
      uint64_t v113 = &v92[v111];
      uint64_t v115 = *(void *)v113;
      uint64_t v114 = *((void *)v113 + 1);
      *(void *)uint64_t v112 = v115;
      *((void *)v112 + 1) = v114;
      swift_bridgeObjectRelease();
      uint64_t v116 = v93[8];
      uint64_t v117 = &v91[v116];
      uint64_t v118 = &v92[v116];
      uint64_t v120 = *(void *)v118;
      uint64_t v119 = *((void *)v118 + 1);
      *(void *)uint64_t v117 = v120;
      *((void *)v117 + 1) = v119;
      swift_bridgeObjectRelease();
      *(void *)&v91[v93[9]] = *(void *)&v92[v93[9]];
      goto LABEL_47;
    }
    sub_2560C7398((uint64_t)v91, (uint64_t (*)(void))_s5EntryVMa);
    goto LABEL_46;
  }
  if (v96)
  {
LABEL_46:
    sub_2560CA1DC(0, (unint64_t *)&qword_269F43410, (uint64_t (*)(uint64_t))_s5EntryVMa, MEMORY[0x263F8D8F0]);
    memcpy(v91, v92, *(void *)(*(void *)(v98 - 8) + 64));
    goto LABEL_47;
  }
  uint64_t v97 = sub_2561758A8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 32))(v91, v92, v97);
  *(_OWORD *)&v91[v93[5]] = *(_OWORD *)&v92[v93[5]];
  *(_OWORD *)&v91[v93[6]] = *(_OWORD *)&v92[v93[6]];
  *(_OWORD *)&v91[v93[7]] = *(_OWORD *)&v92[v93[7]];
  *(_OWORD *)&v91[v93[8]] = *(_OWORD *)&v92[v93[8]];
  *(void *)&v91[v93[9]] = *(void *)&v92[v93[9]];
  (*(void (**)(char *, void, uint64_t, int *))(v94 + 56))(v91, 0, 1, v93);
LABEL_47:
  *(void *)&v78[v80[8]] = *(void *)&v79[v80[8]];
  swift_bridgeObjectRelease();
  *(void *)&v78[v80[9]] = *(void *)&v79[v80[9]];
  swift_bridgeObjectRelease();
  *(_OWORD *)&v127[*(int *)(a3 + 24)] = *(_OWORD *)&v125[*(int *)(a3 + 24)];
  swift_release();
  return v127;
}

uint64_t sub_2560C94C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2560C94DC);
}

uint64_t sub_2560C94DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2560CA1DC(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for StateOfMindTimeline.DaySummary();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_2560C9620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2560C9634);
}

uint64_t sub_2560C9634(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_2560CA1DC(0, &qword_269F42AE8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185D0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for StateOfMindTimeline.DaySummary();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t _s16EntryLimitedViewVMa()
{
  uint64_t result = qword_269F46600;
  if (!qword_269F46600) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2560C97C0()
{
  sub_2560CA1DC(319, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for StateOfMindTimeline.DaySummary();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_2560C98C4()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_2560C98E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v89 = a1;
  uint64_t v2 = type metadata accessor for StateOfMindTimeline.Styles.Entry(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v85 = (uint64_t (*)(void))((char *)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v90 = sub_2561762B8();
  MEMORY[0x270FA5388](v90);
  uint64_t v88 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_255F85EA4(0);
  uint64_t v84 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v87 = (uint64_t)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = _s14ShowMoreButtonVMa();
  MEMORY[0x270FA5388](v77);
  uint64_t v8 = (uint64_t *)((char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v80 = type metadata accessor for StateOfMindTimeline.Styles(0);
  uint64_t v9 = MEMORY[0x270FA5388](v80);
  uint64_t v79 = (uint64_t)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v86 = (uint64_t)&v72 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v72 - v13;
  uint64_t v75 = type metadata accessor for StateOfMindTimeline.DaySummary();
  MEMORY[0x270FA5388](v75);
  uint64_t v16 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = _s13EntryBaseViewVMa();
  uint64_t v18 = v17 - 8;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (uint64_t *)((char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2560CA240();
  uint64_t v76 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (double *)((char *)&v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2560CA374(0);
  uint64_t v78 = v24;
  MEMORY[0x270FA5388](v24);
  uint64_t v83 = (char *)&v72 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560CA41C(0);
  uint64_t v81 = v26;
  MEMORY[0x270FA5388](v26);
  uint64_t v82 = (char *)&v72 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = _s16EntryLimitedViewVMa();
  uint64_t v29 = v1 + *(int *)(v28 + 20);
  sub_2560CA454(v29, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.DaySummary);
  *uint64_t v20 = swift_getKeyPath();
  sub_2560CA1DC(0, &qword_269F42AD8, type metadata accessor for StateOfMindTimeline.Styles, MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  sub_2560CA4C4((uint64_t)v16, (uint64_t)v20 + *(int *)(v18 + 28), (uint64_t (*)(void))type metadata accessor for StateOfMindTimeline.DaySummary);
  *(uint64_t *)((char *)v20 + *(int *)(v18 + 32)) = 0;
  uint64_t v30 = (uint64_t *)(v1 + *(int *)(v28 + 24));
  uint64_t v31 = *v30;
  uint64_t v32 = v30[1];
  uint64_t v91 = v1;
  sub_256119CA0((uint64_t)v14);
  sub_2560C7398((uint64_t)v14, type metadata accessor for StateOfMindTimeline.Styles);
  id result = objc_msgSend(self, sel_sharedBehavior);
  if (result)
  {
    uint64_t v34 = result;
    unsigned int v35 = objc_msgSend(result, sel_isiPad);

    double v36 = 462.0;
    if (v35) {
      double v36 = 490.0;
    }
    uint64_t v37 = v76;
    uint64_t v38 = *(void *)(v29 + *(int *)(v75 + 36));
    *uint64_t v23 = v36;
    v23[1] = v36;
    *((unsigned char *)v23 + 16) = 0;
    *((void *)v23 + 3) = v31;
    *((void *)v23 + 4) = v32;
    sub_2560CA454((uint64_t)v20, (uint64_t)v23 + v37[15], (uint64_t (*)(void))_s13EntryBaseViewVMa);
    uint64_t v39 = (uint64_t)v23 + v37[16];
    *uint64_t v8 = swift_getKeyPath();
    swift_storeEnumTagMultiPayload();
    uint64_t v40 = v77;
    uint64_t v41 = (uint64_t *)((char *)v8 + *(int *)(v77 + 20));
    *uint64_t v41 = v31;
    v41[1] = v32;
    *(uint64_t *)((char *)v8 + *(int *)(v40 + 24)) = v38;
    sub_2560CA4C4((uint64_t)v8, v39, (uint64_t (*)(void))_s14ShowMoreButtonVMa);
    uint64_t v42 = (char *)v23 + v37[17];
    char v92 = 0;
    swift_retain_n();
    swift_bridgeObjectRetain();
    sub_256177568();
    uint64_t v43 = v94;
    *uint64_t v42 = v93;
    *((void *)v42 + 1) = v43;
    sub_2560C7398((uint64_t)v20, (uint64_t (*)(void))_s13EntryBaseViewVMa);
    uint64_t v44 = v86;
    sub_256119CA0(v86);
    uint64_t v73 = type metadata accessor for StateOfMindTimeline.Styles;
    sub_2560C7398(v44, type metadata accessor for StateOfMindTimeline.Styles);
    uint64_t v45 = v88;
    uint64_t v46 = &v88[*(int *)(v90 + 20)];
    LODWORD(v76) = *MEMORY[0x263F19860];
    uint64_t v47 = v76;
    uint64_t v48 = sub_2561766E8();
    uint64_t v49 = *(void *)(v48 - 8);
    uint64_t v75 = *(void *)(v49 + 104);
    uint64_t v77 = v49 + 104;
    ((void (*)(char *, uint64_t, uint64_t))v75)(v46, v47, v48);
    __asm { FMOV            V0.2D, #18.0 }
    long long v74 = _Q0;
    *uint64_t v45 = _Q0;
    uint64_t v55 = v79;
    sub_256119CA0(v79);
    uint64_t v56 = v85;
    sub_2560CA454(v55 + *(int *)(v80 + 48), (uint64_t)v85, type metadata accessor for StateOfMindTimeline.Styles.Entry);
    sub_2560C7398(v55, type metadata accessor for StateOfMindTimeline.Styles);
    uint64_t v57 = sub_25604A3E0();
    sub_2560C7398((uint64_t)v56, type metadata accessor for StateOfMindTimeline.Styles.Entry);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v59 = (uint64_t (*)(void))MEMORY[0x263F19048];
    uint64_t v60 = v87;
    sub_2560CA454((uint64_t)v45, v87, MEMORY[0x263F19048]);
    uint64_t v61 = (uint64_t *)(v60 + *(int *)(v84 + 36));
    uint64_t *v61 = KeyPath;
    v61[1] = v57;
    uint64_t v85 = (uint64_t (*)(void))MEMORY[0x263F19048];
    sub_2560C7398((uint64_t)v45, MEMORY[0x263F19048]);
    uint64_t v62 = sub_2561778E8();
    uint64_t v64 = v63;
    uint64_t v65 = (uint64_t)v83;
    uint64_t v66 = (uint64_t)&v83[*(int *)(v78 + 36)];
    sub_2560CA454(v60, v66, (uint64_t (*)(void))sub_255F85EA4);
    sub_2560C3754();
    uint64_t v68 = (uint64_t *)(v66 + *(int *)(v67 + 36));
    *uint64_t v68 = v62;
    v68[1] = v64;
    sub_2560CA454((uint64_t)v23, v65, (uint64_t (*)(void))sub_2560CA240);
    sub_2560C7398(v60, (uint64_t (*)(void))sub_255F85EA4);
    sub_2560C7398((uint64_t)v23, (uint64_t (*)(void))sub_2560CA240);
    sub_256119CA0(v44);
    sub_2560C7398(v44, v73);
    ((void (*)(char *, void, uint64_t))v75)((char *)v45 + *(int *)(v90 + 20), v76, v48);
    *uint64_t v45 = v74;
    uint64_t v69 = (uint64_t)v82;
    uint64_t v70 = (uint64_t)&v82[*(int *)(v81 + 36)];
    sub_2560CA454((uint64_t)v45, v70, v59);
    sub_255F72C18();
    *(_WORD *)(v70 + *(int *)(v71 + 36)) = 256;
    sub_2560CA454(v65, v69, (uint64_t (*)(void))sub_2560CA374);
    sub_2560C7398((uint64_t)v45, v85);
    sub_2560C7398(v65, (uint64_t (*)(void))sub_2560CA374);
    return (id)sub_2560CA4C4(v69, v89, (uint64_t (*)(void))sub_2560CA41C);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_2560CA1DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2560CA240()
{
  if (!qword_269F46610)
  {
    _s13EntryBaseViewVMa();
    _s14ShowMoreButtonVMa();
    sub_2560CA32C(&qword_269F457A8, (void (*)(uint64_t))_s13EntryBaseViewVMa);
    sub_2560CA32C(&qword_269F42DA8, (void (*)(uint64_t))_s14ShowMoreButtonVMa);
    unint64_t v0 = type metadata accessor for UnlimitedHeightVStackWithFooter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46610);
    }
  }
}

uint64_t sub_2560CA32C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2560CA374(uint64_t a1)
{
}

void sub_2560CA3A8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    unint64_t v6 = sub_2561761B8();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_2560CA41C(uint64_t a1)
{
}

uint64_t sub_2560CA454(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2560CA4C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2560CA52C()
{
  return sub_2560CA588(&qword_269F46628, sub_2560CA41C, (void (*)(void))sub_2560CA614, (void (*)(void))sub_255F73B74);
}

uint64_t sub_2560CA588(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2560CA614()
{
  return sub_2560CA588(&qword_269F46630, sub_2560CA374, (void (*)(void))sub_2560CA65C, (void (*)(void))sub_255F8668C);
}

uint64_t sub_2560CA65C()
{
  return sub_2560CA32C(&qword_269F46638, (void (*)(uint64_t))sub_2560CA240);
}

uint64_t sub_2560CA690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2561780E8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_2561780D8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_2560D2198(a1, &qword_26B2AD1F8, MEMORY[0x263F8F520]);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_256178088();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_2560CA850()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();

  return swift_release();
}

uint64_t sub_2560CA8C8()
{
  return sub_2560CBD14();
}

uint64_t AssessmentFeatureModel.__allocating_init(featureStatusManager:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  uint64_t v9 = sub_2560D044C((uint64_t)v7, v2, v3, v4);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v9;
}

uint64_t AssessmentFeatureModel.init(featureStatusManager:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  uint64_t v9 = sub_2560D044C((uint64_t)v7, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v9;
}

uint64_t sub_2560CAACC()
{
  return sub_2560CBDA0((uint64_t)&unk_2704BABF8, (uint64_t)sub_2560D1F54);
}

uint64_t sub_2560CAAEC(uint64_t a1)
{
  sub_2560D0914(0);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v11[-v6];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v9 = sub_256175AC8();
    uint64_t v10 = *(void *)(v9 - 8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v10 + 16))(v7, a1, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2560D1DEC((uint64_t)v7, (uint64_t)v5);
    swift_retain();
    sub_256175C98();
    sub_2560D1E50((uint64_t)v7);
    swift_getKeyPath();
    swift_getKeyPath();
    v11[7] = 2;
    return sub_256175C98();
  }
  return result;
}

id sub_2560CACC8()
{
  return sub_2560CACE0();
}

id sub_2560CACD4()
{
  return sub_2560CACE0();
}

id sub_2560CACE0()
{
  uint64_t v0 = sub_256175AC8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560D0914(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v6, 1, v0))
  {
    sub_2560D1E50((uint64_t)v6);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v6, v0);
    sub_2560D1E50((uint64_t)v6);
    uint64_t v8 = (void *)sub_256175AD8();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    id v7 = objc_msgSend(v8, sel_areAllRequirementsSatisfied);
  }
  return v7;
}

uint64_t sub_2560CAEBC()
{
  uint64_t v0 = sub_256175AC8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2560D0914(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();
  swift_release();
  if (v11 == 2)
  {
    if (sub_2560CACD4())
    {
      swift_getKeyPath();
      swift_getKeyPath();
      sub_256175C88();
      swift_release();
      swift_release();
      if (!(*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v1 + 48))(v6, 1, v0))
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v1 + 16))(v3, v6, v0);
        sub_2560D1E50((uint64_t)v6);
        uint64_t v9 = (void *)sub_256175AD8();
        (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
        char v7 = sub_256178418();

        return v7 & 1;
      }
      sub_2560D1E50((uint64_t)v6);
    }
    char v7 = 0;
  }
  else
  {
    char v7 = v11 & 1;
  }
  return v7 & 1;
}

uint64_t sub_2560CB100(char a1)
{
  uint64_t v3 = *v1;
  sub_2560D0948(0, &qword_26B2AD1F8, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = &v10[-v5];
  swift_getKeyPath();
  swift_getKeyPath();
  unsigned char v10[15] = a1;
  swift_retain();
  sub_256175C98();
  uint64_t v7 = sub_2561780E8();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0;
  *(void *)(v8 + 24) = 0;
  *(void *)(v8 + 32) = v1;
  *(unsigned char *)(v8 + 40) = a1;
  *(void *)(v8 + 48) = v3;
  swift_retain();
  sub_2560CA690((uint64_t)v6, (uint64_t)&unk_269F466D8, v8);
  return swift_release();
}

uint64_t sub_2560CB2A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  *(unsigned char *)(v6 + 136) = a5;
  *(void *)(v6 + 48) = a4;
  *(void *)(v6 + 56) = a6;
  uint64_t v7 = sub_256175B68();
  *(void *)(v6 + 64) = v7;
  *(void *)(v6 + 72) = *(void *)(v7 - 8);
  *(void *)(v6 + 80) = swift_task_alloc();
  sub_2560D214C(0, &qword_269F466E0, MEMORY[0x263F8D4F8], MEMORY[0x263F44B40]);
  *(void *)(v6 + 88) = v8;
  *(void *)(v6 + 96) = *(void *)(v8 - 8);
  *(void *)(v6 + 104) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2560CB3E8, 0, 0);
}

uint64_t sub_2560CB3E8()
{
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 48) + 16), *(void *)(*(void *)(v0 + 48) + 40));
  *(void *)(v0 + 112) = sub_256175AE8();
  uint64_t ObjectType = swift_getObjectType();
  sub_256178288();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_2560CB4D0;
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v4 = *(unsigned __int8 *)(v0 + 136);
  return MEMORY[0x270F35298](v4, v3, ObjectType);
}

uint64_t sub_2560CB4D0()
{
  uint64_t v2 = *(void *)(*v1 + 104);
  uint64_t v3 = *(void *)(*v1 + 96);
  uint64_t v4 = *(void *)(*v1 + 88);
  uint64_t v5 = *v1;
  *(void *)(v5 + 128) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_unknownObjectRelease();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_2560CB6A0, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_2560CB6A0()
{
  uint64_t v30 = v0;
  uint64_t v1 = (void *)v0[16];
  sub_256175B48();
  id v2 = v1;
  swift_retain();
  id v3 = v1;
  swift_retain();
  uint64_t v4 = sub_256175B58();
  os_log_type_t v5 = sub_256178218();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[16];
    uint64_t v26 = v0[9];
    uint64_t v27 = v0[8];
    uint64_t v28 = v0[10];
    uint64_t v7 = v0[6];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    uint64_t v29 = v25;
    *(_DWORD *)uint64_t v8 = 136446722;
    os_log_type_t type = v5;
    uint64_t v9 = sub_256178978();
    v0[2] = sub_255FB29A8(v9, v10, &v29);
    sub_256178458();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2082;
    __swift_project_boxed_opaque_existential_1((void *)(v7 + 16), *(void *)(v7 + 40));
    char v11 = (void *)sub_256175B08();
    uint64_t v12 = sub_256177EE8();
    unint64_t v14 = v13;

    v0[3] = sub_255FB29A8(v12, v14, &v29);
    sub_256178458();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v8 + 22) = 2082;
    v0[4] = v6;
    id v15 = v6;
    sub_255FB3160();
    uint64_t v16 = sub_256177F18();
    v0[5] = sub_255FB29A8(v16, v17, &v29);
    sub_256178458();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_255F58000, v4, type, "[%{public}s:%{public}s] Error setting feature setting: %{public}s", (uint8_t *)v8, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x25A2A1E90](v25, -1, -1);
    MEMORY[0x25A2A1E90](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v27);
  }
  else
  {
    uint64_t v18 = (void *)v0[16];
    uint64_t v20 = v0[9];
    uint64_t v19 = v0[10];
    uint64_t v21 = v0[8];

    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t AssessmentFeatureModel.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  uint64_t v1 = v0 + OBJC_IVAR____TtC14MentalHealthUI22AssessmentFeatureModel__featureStatus;
  sub_2560D0948(0, &qword_26B2AD1D8, (uint64_t (*)(uint64_t))sub_2560D0914, MEMORY[0x263EFDE58]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC14MentalHealthUI22AssessmentFeatureModel__locallyUpdatedEnabledSetting;
  sub_2560D09AC(0, &qword_26B2AD1E0, &qword_26B2AD1F0, MEMORY[0x263F8D4F8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AssessmentFeatureModel.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  uint64_t v1 = v0 + OBJC_IVAR____TtC14MentalHealthUI22AssessmentFeatureModel__featureStatus;
  sub_2560D0948(0, &qword_26B2AD1D8, (uint64_t (*)(uint64_t))sub_2560D0914, MEMORY[0x263EFDE58]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC14MentalHealthUI22AssessmentFeatureModel__locallyUpdatedEnabledSetting;
  sub_2560D09AC(0, &qword_26B2AD1E0, &qword_26B2AD1F0, MEMORY[0x263F8D4F8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_2560CBC48()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_2560CBCC0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for AssessmentFeatureModel(0);
  uint64_t result = sub_256175C08();
  *a1 = result;
  return result;
}

uint64_t sub_2560CBD00()
{
  return sub_2560CBD14();
}

uint64_t sub_2560CBD14()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_2560CBD80()
{
  return sub_2560CBDA0((uint64_t)&unk_2704BABD0, (uint64_t)sub_2560D1DDC);
}

uint64_t sub_2560CBDA0(uint64_t a1, uint64_t a2)
{
  v14[0] = a1;
  v14[1] = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F110];
  sub_2560D0948(0, &qword_26B2ACE08, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v14 - v5;
  sub_2560D1C3C();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  char v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 16), *(void *)(v2 + 40));
  uint64_t v14[2] = sub_256175B18();
  sub_255FB58F8(0, (unint64_t *)&qword_26B2AD368);
  id v15 = (id)sub_2561782D8();
  uint64_t v12 = sub_2561782C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
  sub_2560D1D0C();
  sub_2560D1388(&qword_26B2AD1C8, 255, (void (*)(uint64_t))sub_2560D1D0C);
  sub_2560D1D74();
  sub_256175CD8();
  sub_2560D2198((uint64_t)v6, &qword_26B2ACE08, v3);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_2560D1388(&qword_26B2AD1B8, 255, (void (*)(uint64_t))sub_2560D1C3C);
  sub_256175CF8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_beginAccess();
  sub_256175BE8();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_2560CC0C4(uint64_t a1)
{
  sub_2560D0914(0);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v11 - v6;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v9 = sub_256175AC8();
    uint64_t v10 = *(void *)(v9 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v7, a1, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2560D1DEC((uint64_t)v7, (uint64_t)v5);
    swift_retain_n();
    sub_256175C98();
    sub_2560D1E50((uint64_t)v7);
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v12) = 2;
    swift_retain();
    sub_256175C98();
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v12 = 0;
    char v13 = 1;
    swift_retain();
    sub_256175C98();
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v12) = 2;
    return sub_256175C98();
  }
  return result;
}

uint64_t sub_2560CC33C()
{
  sub_2560D214C(0, &qword_269F466C8, MEMORY[0x263F8D6C8], MEMORY[0x263F44B40]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v17 - v3;
  sub_2560D0914(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_256175AB8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();
  swift_release();
  if (v18 != 1) {
    return v17;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();
  swift_release();
  uint64_t v12 = sub_256175AC8();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v7, 1, v12) == 1)
  {
    sub_2560D1E50((uint64_t)v7);
    return *MEMORY[0x263F54F78];
  }
  if ((*(unsigned int (**)(char *, uint64_t))(v13 + 88))(v7, v12) != *MEMORY[0x263F44990])
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v12);
    return *MEMORY[0x263F54F78];
  }
  (*(void (**)(char *, uint64_t))(v13 + 96))(v7, v12);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  id v15 = (void *)sub_256175AA8();
  sub_256177EE8();
  sub_256178278();
  sub_256178298();

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v18) {
    uint64_t v14 = *MEMORY[0x263F54F78];
  }
  else {
    uint64_t v14 = v17;
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v14;
}

uint64_t sub_2560CC704(uint64_t a1)
{
  uint64_t v3 = *v1;
  sub_2560D0948(0, &qword_26B2AD1F8, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v10 - v5;
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v10 = a1;
  char v11 = 0;
  swift_retain();
  sub_256175C98();
  uint64_t v7 = sub_2561780E8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = (void *)swift_allocObject();
  void v8[2] = 0;
  v8[3] = 0;
  v8[4] = v1;
  v8[5] = a1;
  void v8[6] = v3;
  swift_retain();
  sub_2560CA690((uint64_t)v6, (uint64_t)&unk_269F466C0, (uint64_t)v8);
  return swift_release();
}

uint64_t sub_2560CC8A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a4;
  uint64_t v7 = sub_256175B68();
  v6[9] = v7;
  v6[10] = *(void *)(v7 - 8);
  v6[11] = swift_task_alloc();
  sub_2560D214C(0, &qword_269F466C8, MEMORY[0x263F8D6C8], MEMORY[0x263F44B40]);
  v6[12] = v8;
  v6[13] = *(void *)(v8 - 8);
  v6[14] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2560CC9EC, 0, 0);
}

uint64_t sub_2560CC9EC()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0[6] + 16), *(void *)(v0[6] + 40));
  v0[15] = sub_256175AE8();
  uint64_t ObjectType = swift_getObjectType();
  sub_256177EE8();
  sub_256178278();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[16] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_2560CCAEC;
  uint64_t v3 = v0[14];
  uint64_t v4 = v0[7];
  return MEMORY[0x270F352A0](v4, v3, ObjectType);
}

uint64_t sub_2560CCAEC()
{
  uint64_t v2 = *(void *)(*v1 + 112);
  uint64_t v3 = *(void *)(*v1 + 104);
  uint64_t v4 = *(void *)(*v1 + 96);
  uint64_t v5 = *v1;
  *(void *)(v5 + 136) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_unknownObjectRelease();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_2560CCCBC, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_2560CCCBC()
{
  uint64_t v30 = v0;
  uint64_t v1 = (void *)v0[17];
  sub_256175B48();
  id v2 = v1;
  swift_retain();
  id v3 = v1;
  swift_retain();
  uint64_t v4 = sub_256175B58();
  os_log_type_t v5 = sub_256178218();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[17];
    uint64_t v26 = v0[10];
    uint64_t v27 = v0[9];
    uint64_t v28 = v0[11];
    uint64_t v7 = v0[6];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    uint64_t v29 = v25;
    *(_DWORD *)uint64_t v8 = 136446722;
    os_log_type_t type = v5;
    uint64_t v9 = sub_256178978();
    v0[2] = sub_255FB29A8(v9, v10, &v29);
    sub_256178458();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2082;
    __swift_project_boxed_opaque_existential_1((void *)(v7 + 16), *(void *)(v7 + 40));
    char v11 = (void *)sub_256175B08();
    uint64_t v12 = sub_256177EE8();
    unint64_t v14 = v13;

    v0[3] = sub_255FB29A8(v12, v14, &v29);
    sub_256178458();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v8 + 22) = 2082;
    v0[4] = v6;
    id v15 = v6;
    sub_255FB3160();
    uint64_t v16 = sub_256177F18();
    v0[5] = sub_255FB29A8(v16, v17, &v29);
    sub_256178458();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_255F58000, v4, type, "[%{public}s:%{public}s] Error setting feature setting: %{public}s", (uint8_t *)v8, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x25A2A1E90](v25, -1, -1);
    MEMORY[0x25A2A1E90](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v27);
  }
  else
  {
    char v18 = (void *)v0[17];
    uint64_t v20 = v0[10];
    uint64_t v19 = v0[11];
    uint64_t v21 = v0[9];

    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_2560CD018()
{
  uint64_t v1 = *v0;
  sub_2560D0948(0, &qword_26B2AD1F8, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = &v10[-v3];
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v11 = 30;
  char v12 = 0;
  swift_retain();
  sub_256175C98();
  uint64_t v5 = sub_2561780E8();
  uint64_t v6 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v0;
  v7[5] = 30;
  v7[6] = v1;
  swift_retain();
  sub_2560CA690((uint64_t)v4, (uint64_t)&unk_269F466F8, (uint64_t)v7);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  unsigned char v10[15] = 1;
  swift_retain();
  sub_256175C98();
  v6(v4, 1, 1, v5);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0;
  *(void *)(v8 + 24) = 0;
  *(void *)(v8 + 32) = v0;
  *(unsigned char *)(v8 + 40) = 1;
  *(void *)(v8 + 48) = v1;
  swift_retain();
  sub_2560CA690((uint64_t)v4, (uint64_t)&unk_269F46700, v8);
  return swift_release();
}

uint64_t PeriodicAssessmentPromptsFeatureModel.__allocating_init(featureStatusManager:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  uint64_t v6 = sub_2560D0FEC(v5, v2, v3, v4);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v6;
}

uint64_t PeriodicAssessmentPromptsFeatureModel.init(featureStatusManager:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  uint64_t v6 = sub_2560D0FEC(v5, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v6;
}

uint64_t sub_2560CD344()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC14MentalHealthUI37PeriodicAssessmentPromptsFeatureModel__locallyUpdatedCadenceInDays;
  sub_2560D09AC(0, &qword_26B2AD1E8, &qword_26B2ACE00, MEMORY[0x263F8D6C8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0
     + OBJC_IVAR____TtC14MentalHealthUI37PeriodicAssessmentPromptsFeatureModel__locallyUpdatedIsPeriodicPromptSettingOn;
  sub_2560D09AC(0, &qword_26B2AD1E0, &qword_26B2AD1F0, MEMORY[0x263F8D4F8]);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);

  return v5(v3, v4);
}

uint64_t PeriodicAssessmentPromptsFeatureModel.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  uint64_t v1 = v0 + OBJC_IVAR____TtC14MentalHealthUI22AssessmentFeatureModel__featureStatus;
  sub_2560D0948(0, &qword_26B2AD1D8, (uint64_t (*)(uint64_t))sub_2560D0914, MEMORY[0x263EFDE58]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC14MentalHealthUI22AssessmentFeatureModel__locallyUpdatedEnabledSetting;
  sub_2560D09AC(0, &qword_26B2AD1E0, &qword_26B2AD1F0, MEMORY[0x263F8D4F8]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v6(v3, v4);
  swift_bridgeObjectRelease();
  uint64_t v7 = v0 + OBJC_IVAR____TtC14MentalHealthUI37PeriodicAssessmentPromptsFeatureModel__locallyUpdatedCadenceInDays;
  sub_2560D09AC(0, &qword_26B2AD1E8, &qword_26B2ACE00, MEMORY[0x263F8D6C8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  v6(v0+ OBJC_IVAR____TtC14MentalHealthUI37PeriodicAssessmentPromptsFeatureModel__locallyUpdatedIsPeriodicPromptSettingOn, v5);
  return v0;
}

uint64_t PeriodicAssessmentPromptsFeatureModel.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  uint64_t v1 = v0 + OBJC_IVAR____TtC14MentalHealthUI22AssessmentFeatureModel__featureStatus;
  sub_2560D0948(0, &qword_26B2AD1D8, (uint64_t (*)(uint64_t))sub_2560D0914, MEMORY[0x263EFDE58]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC14MentalHealthUI22AssessmentFeatureModel__locallyUpdatedEnabledSetting;
  sub_2560D09AC(0, &qword_26B2AD1E0, &qword_26B2AD1F0, MEMORY[0x263F8D4F8]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v6(v3, v4);
  swift_bridgeObjectRelease();
  uint64_t v7 = v0 + OBJC_IVAR____TtC14MentalHealthUI37PeriodicAssessmentPromptsFeatureModel__locallyUpdatedCadenceInDays;
  sub_2560D09AC(0, &qword_26B2AD1E8, &qword_26B2ACE00, MEMORY[0x263F8D6C8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  v6(v0+ OBJC_IVAR____TtC14MentalHealthUI37PeriodicAssessmentPromptsFeatureModel__locallyUpdatedIsPeriodicPromptSettingOn, v5);

  return swift_deallocClassInstance();
}

uint64_t AssessmentsSettingsModel.__allocating_init(healthStore:)(void *a1)
{
  uint64_t v2 = (void *)*MEMORY[0x263F097C0];
  id v3 = objc_allocWithZone(MEMORY[0x263F0A3D0]);
  id v4 = v2;
  id v5 = objc_msgSend(v3, sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, v4, a1, 0);
  type metadata accessor for PeriodicAssessmentPromptsFeatureModel(0);
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = sub_2560CFD7C((uint64_t)v5, v6);

  uint64_t v8 = (void *)*MEMORY[0x263F09808];
  id v9 = objc_allocWithZone(MEMORY[0x263F0A3D0]);
  id v10 = a1;
  id v11 = v8;
  id v12 = objc_msgSend(v9, sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, v11, v10, 0);
  type metadata accessor for AssessmentFeatureModel(0);
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = sub_2560CFFEC((uint64_t)v12, v13);

  uint64_t v15 = swift_allocObject();
  AssessmentsSettingsModel.init(periodicAssessmentPromptsFeatureModel:loggingPatternEscalationsFeatureModel:)(v7, v14);

  return v15;
}

uint64_t AssessmentsSettingsModel.__allocating_init(periodicAssessmentPromptsFeatureModel:loggingPatternEscalationsFeatureModel:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  AssessmentsSettingsModel.init(periodicAssessmentPromptsFeatureModel:loggingPatternEscalationsFeatureModel:)(a1, a2);
  return v4;
}

void *AssessmentsSettingsModel.init(periodicAssessmentPromptsFeatureModel:loggingPatternEscalationsFeatureModel:)(uint64_t a1, uint64_t a2)
{
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_256178678()) {
    unint64_t v5 = sub_2560D0D34(MEMORY[0x263F8EE78]);
  }
  else {
    unint64_t v5 = MEMORY[0x263F8EE88];
  }
  v2[4] = v5;
  v2[2] = a1;
  v2[3] = a2;
  type metadata accessor for PeriodicAssessmentPromptsFeatureModel(0);
  sub_2560D1388(&qword_26B2ACDE8, 255, (void (*)(uint64_t))type metadata accessor for PeriodicAssessmentPromptsFeatureModel);
  swift_retain();
  swift_retain();
  sub_256175C08();
  swift_allocObject();
  swift_weakInit();
  sub_256175C38();
  sub_256175CF8();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_256175BE8();
  swift_endAccess();
  swift_release();
  type metadata accessor for AssessmentFeatureModel(0);
  sub_2560D1388(&qword_26B2AD188, 255, (void (*)(uint64_t))type metadata accessor for AssessmentFeatureModel);
  sub_256175C08();
  swift_allocObject();
  swift_weakInit();
  sub_256175CF8();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_256175BE8();
  swift_endAccess();
  swift_release();
  swift_release();
  swift_release();
  return v2;
}

uint64_t sub_2560CDBA0()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    type metadata accessor for AssessmentsSettingsModel();
    sub_2560D1388(&qword_269F44F10, v1, (void (*)(uint64_t))type metadata accessor for AssessmentsSettingsModel);
    sub_256175C08();
    swift_release();
    sub_256175C28();
    return swift_release();
  }
  return result;
}

Swift::Void __swiftcall AssessmentsSettingsModel.onboardToRecommendedPregnancySettings()()
{
  uint64_t v1 = v0;
  sub_2560D0948(0, &qword_26B2AD1F8, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - v3;
  sub_2560CD018();
  uint64_t v5 = sub_2561780E8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v1;
  swift_retain();
  sub_2560CA690((uint64_t)v4, (uint64_t)&unk_269F46648, (uint64_t)v6);
  swift_release();
}

uint64_t sub_2560CDD80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = sub_256175868();
  v4[3] = v5;
  v4[4] = *(void *)(v5 - 8);
  v4[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2560CDE40, 0, 0);
}

uint64_t sub_2560CDE40()
{
  sub_256175828();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2560CDEE0;
  uint64_t v2 = *(void *)(v0 + 40);
  return AssessmentsSettingsModel.resetPeriodicPromptsTimer(acknowledgmentDate:)(v2);
}

uint64_t sub_2560CDEE0()
{
  uint64_t v1 = *(void *)(*v0 + 40);
  uint64_t v2 = *(void *)(*v0 + 32);
  uint64_t v3 = *(void *)(*v0 + 24);
  uint64_t v6 = *v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v6 + 8);
  return v4();
}

uint64_t AssessmentsSettingsModel.resetPeriodicPromptsTimer(acknowledgmentDate:)(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  v2[7] = *v1;
  uint64_t v3 = sub_256175B68();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  sub_2560D0948(0, &qword_269F46658, MEMORY[0x263F07490], MEMORY[0x263F44B40]);
  v2[11] = v4;
  v2[12] = *(void *)(v4 - 8);
  v2[13] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2560CE1AC, 0, 0);
}

uint64_t sub_2560CE1AC()
{
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0[6] + 16) + 16), *(void *)(*(void *)(v0[6] + 16) + 40));
  v0[14] = sub_256175AE8();
  uint64_t ObjectType = swift_getObjectType();
  sub_256177EE8();
  sub_256175868();
  sub_256178278();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[15] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_2560CE2CC;
  uint64_t v3 = v0[13];
  uint64_t v4 = v0[5];
  return MEMORY[0x270F35290](v4, v3, ObjectType);
}

uint64_t sub_2560CE2CC()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 104);
  uint64_t v3 = *(void *)(*(void *)v1 + 96);
  uint64_t v4 = *(void *)(*(void *)v1 + 88);
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0) {
    uint64_t v5 = sub_2560CE4B0;
  }
  else {
    uint64_t v5 = sub_2560CE43C;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_2560CE43C()
{
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2560CE4B0()
{
  uint64_t v24 = v0;
  uint64_t v1 = (void *)v0[16];
  swift_unknownObjectRelease();
  sub_256175B48();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_256175B58();
  os_log_type_t v5 = sub_256178218();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[16];
    uint64_t v7 = v0[9];
    uint64_t v21 = v0[8];
    uint64_t v22 = v0[10];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v23 = v9;
    *(_DWORD *)uint64_t v8 = 136446466;
    uint64_t v10 = sub_256178978();
    v0[2] = sub_255FB29A8(v10, v11, &v23);
    sub_256178458();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2082;
    v0[3] = v6;
    id v12 = v6;
    sub_255FB3160();
    uint64_t v13 = sub_256177F18();
    v0[4] = sub_255FB29A8(v13, v14, &v23);
    sub_256178458();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_255F58000, v4, v5, "[%{public}s] Error setting acknowledgment date: %{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A2A1E90](v9, -1, -1);
    MEMORY[0x25A2A1E90](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v22, v21);
  }
  else
  {
    uint64_t v15 = (void *)v0[16];
    uint64_t v17 = v0[9];
    uint64_t v16 = v0[10];
    uint64_t v18 = v0[8];

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

Swift::Bool __swiftcall AssessmentsSettingsModel.isSetToRecommendedPregnancySettings()()
{
  if (sub_2560CC33C() == 30) {
    return sub_2560CAEBC() & 1;
  }
  else {
    return 0;
  }
}

unint64_t AssessmentsSettingsModel.areSettingsVisible.getter()
{
  if (sub_2560CACC8()) {
    return 1;
  }
  else {
    return (unint64_t)sub_2560CACC8() & 1;
  }
}

uint64_t AssessmentsSettingsModel.isPeriodicPromptsSettingOn.getter()
{
  return sub_2560CAEBC() & 1;
}

uint64_t sub_2560CE7DC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2560CAEBC();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2560CE810(char *a1, uint64_t *a2)
{
  sub_2560D0948(0, &qword_26B2AD1F8, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v12 - v5;
  char v7 = *a1;
  uint64_t v8 = *a2;
  sub_2560CB100(*a1);
  uint64_t v9 = sub_2561780E8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  *(void *)(v10 + 24) = 0;
  *(unsigned char *)(v10 + 32) = v7;
  *(void *)(v10 + 40) = v8;
  swift_retain();
  sub_2560CA690((uint64_t)v6, (uint64_t)&unk_269F466B0, v10);
  return swift_release();
}

uint64_t AssessmentsSettingsModel.isPeriodicPromptsSettingOn.setter(char a1)
{
  uint64_t v2 = v1;
  sub_2560D0948(0, &qword_26B2AD1F8, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v10 - v5;
  sub_2560CB100(a1);
  uint64_t v7 = sub_2561780E8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0;
  *(void *)(v8 + 24) = 0;
  *(unsigned char *)(v8 + 32) = a1;
  *(void *)(v8 + 40) = v2;
  swift_retain();
  sub_2560CA690((uint64_t)v6, (uint64_t)&unk_269F46668, v8);
  return swift_release();
}

uint64_t sub_2560CEA90(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a5;
  *(unsigned char *)(v5 + 56) = a4;
  uint64_t v6 = sub_256175868();
  *(void *)(v5 + 24) = v6;
  *(void *)(v5 + 32) = *(void *)(v6 - 8);
  *(void *)(v5 + 40) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2560CEB54, 0, 0);
}

uint64_t sub_2560CEB54()
{
  if (*(unsigned char *)(v0 + 56) == 1)
  {
    sub_256175828();
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 48) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_2560CEC38;
    uint64_t v2 = *(void *)(v0 + 40);
    return AssessmentsSettingsModel.resetPeriodicPromptsTimer(acknowledgmentDate:)(v2);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_2560CEC38()
{
  uint64_t v1 = *(void *)(*v0 + 40);
  uint64_t v2 = *(void *)(*v0 + 32);
  uint64_t v3 = *(void *)(*v0 + 24);
  uint64_t v6 = *v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v6 + 8);
  return v4();
}

void (*AssessmentsSettingsModel.isPeriodicPromptsSettingOn.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  *(void *)a1 = v1;
  sub_2560D0948(0, &qword_26B2AD1F8, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  uint64_t v4 = malloc(*(void *)(*(void *)(v3 - 8) + 64));
  uint64_t v5 = *(void *)(v1 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = sub_2560CAEBC() & 1;
  return sub_2560CEE34;
}

void sub_2560CEE34(uint64_t *a1, char a2)
{
  uint64_t v4 = a1[1];
  char v5 = *((unsigned char *)a1 + 24);
  sub_2560CB100(v5);
  uint64_t v6 = sub_2561780E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  uint64_t v8 = *a1;
  uint64_t v7 = (void *)a1[1];
  if (a2)
  {
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = 0;
    *(void *)(v9 + 24) = 0;
    *(unsigned char *)(v9 + 32) = v5;
    *(void *)(v9 + 40) = v8;
    swift_retain();
    uint64_t v10 = &unk_269F46670;
  }
  else
  {
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = 0;
    *(void *)(v9 + 24) = 0;
    *(unsigned char *)(v9 + 32) = v5;
    *(void *)(v9 + 40) = v8;
    swift_retain();
    uint64_t v10 = &unk_269F46678;
  }
  sub_2560CA690((uint64_t)v7, (uint64_t)v10, v9);
  swift_release();

  free(v7);
}

uint64_t AssessmentsSettingsModel.periodicAssessmentAlertCadence.getter()
{
  return sub_2560CC33C();
}

uint64_t sub_2560CEF88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2560CC33C();
  *a1 = result;
  return result;
}

uint64_t sub_2560CEFB8(uint64_t *a1, uint64_t *a2)
{
  sub_2560D0948(0, &qword_26B2AD1F8, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = *a2;
  sub_2560CC704(*a1);
  uint64_t v8 = sub_2561780E8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v7;
  swift_retain();
  sub_2560CA690((uint64_t)v6, (uint64_t)&unk_269F466A8, (uint64_t)v9);
  return swift_release();
}

uint64_t AssessmentsSettingsModel.periodicAssessmentAlertCadence.setter(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_2560D0948(0, &qword_26B2AD1F8, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v10 - v5;
  sub_2560CC704(a1);
  uint64_t v7 = sub_2561780E8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = (void *)swift_allocObject();
  void v8[2] = 0;
  v8[3] = 0;
  v8[4] = v2;
  swift_retain();
  sub_2560CA690((uint64_t)v6, (uint64_t)&unk_269F46688, (uint64_t)v8);
  return swift_release();
}

uint64_t sub_2560CF22C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = sub_256175868();
  v4[3] = v5;
  v4[4] = *(void *)(v5 - 8);
  v4[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2560CF2EC, 0, 0);
}

uint64_t sub_2560CF2EC()
{
  sub_256175828();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2560D25BC;
  uint64_t v2 = *(void *)(v0 + 40);
  return AssessmentsSettingsModel.resetPeriodicPromptsTimer(acknowledgmentDate:)(v2);
}

void (*AssessmentsSettingsModel.periodicAssessmentAlertCadence.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[1] = v1;
  sub_2560D0948(0, &qword_26B2AD1F8, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  uint64_t v4 = malloc(*(void *)(*(void *)(v3 - 8) + 64));
  uint64_t v5 = *(void *)(v1 + 16);
  a1[2] = (uint64_t)v4;
  a1[3] = v5;
  *a1 = sub_2560CC33C();
  return sub_2560CF42C;
}

void sub_2560CF42C(uint64_t *a1, char a2)
{
  uint64_t v4 = a1[2];
  sub_2560CC704(*a1);
  uint64_t v5 = sub_2561780E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v7 = a1[1];
  uint64_t v6 = (void *)a1[2];
  if (a2)
  {
    uint64_t v8 = (void *)swift_allocObject();
    void v8[2] = 0;
    v8[3] = 0;
    v8[4] = v7;
    swift_retain();
    uint64_t v9 = &unk_269F46690;
  }
  else
  {
    uint64_t v8 = (void *)swift_allocObject();
    void v8[2] = 0;
    v8[3] = 0;
    v8[4] = v7;
    swift_retain();
    uint64_t v9 = &unk_269F46698;
  }
  sub_2560CA690((uint64_t)v6, (uint64_t)v9, (uint64_t)v8);
  swift_release();

  free(v6);
}

unint64_t AssessmentsSettingsModel.isPeriodicPromptsSettingUserInteractionEnabled.getter()
{
  return (unint64_t)sub_2560CACD4() & 1;
}

uint64_t AssessmentsSettingsModel.isLoggingPatternEscalationsSettingOn.getter()
{
  return sub_2560CAEBC() & 1;
}

uint64_t sub_2560CF598@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2560CAEBC();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2560CF5CC(char *a1)
{
  return sub_2560CB100(*a1);
}

uint64_t AssessmentsSettingsModel.isLoggingPatternEscalationsSettingOn.setter(char a1)
{
  return sub_2560CB100(a1);
}

uint64_t (*AssessmentsSettingsModel.isLoggingPatternEscalationsSettingOn.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = *(void *)(v1 + 24);
  *(unsigned char *)(a1 + 8) = sub_2560CAEBC() & 1;
  return sub_2560CF66C;
}

uint64_t sub_2560CF66C(uint64_t a1)
{
  return sub_2560CB100(*(unsigned char *)(a1 + 8));
}

unint64_t AssessmentsSettingsModel.isLoggingPatternEscalationsSettingUserInteractionEnabled.getter()
{
  return (unint64_t)sub_2560CACD4() & 1;
}

BOOL static AssessmentsSettingsModel.DisabledMessaging.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t AssessmentsSettingsModel.DisabledMessaging.hash(into:)()
{
  return sub_2561788F8();
}

uint64_t AssessmentsSettingsModel.DisabledMessaging.hashValue.getter()
{
  return sub_256178928();
}

id AssessmentsSettingsModel.disabledMessaging.getter@<X0>(char *a1@<X8>)
{
  if (sub_2560CACD4() & 1) != 0 || (id result = sub_2560CACD4(), (result))
  {
    id result = sub_2560CACD4();
    if (result)
    {
      id result = sub_2560CACD4();
      if (result) {
        char v3 = 3;
      }
      else {
        char v3 = 1;
      }
    }
    else
    {
      char v3 = 2;
    }
  }
  else
  {
    char v3 = 0;
  }
  *a1 = v3;
  return result;
}

uint64_t AssessmentsSettingsModel.deinit()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AssessmentsSettingsModel.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_2560CF838()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();

  return swift_release();
}

uint64_t sub_2560CF8B4(uint64_t a1)
{
  sub_2560D0914(0);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_2560D1DEC(a1, (uint64_t)&v9 - v6);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2560D1DEC((uint64_t)v7, (uint64_t)v5);
  swift_retain();
  sub_256175C98();
  return sub_2560D1E50((uint64_t)v7);
}

uint64_t sub_2560CF9B0@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();
  uint64_t result = swift_release();
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_2560CFA38()
{
  return sub_256175C98();
}

uint64_t sub_2560CFABC@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_256175C88();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_2560CFB38()
{
  return sub_256175C98();
}

uint64_t sub_2560CFBA8(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  char v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *char v4 = v2;
  v4[1] = sub_2560CFC84;
  return v6(a1);
}

uint64_t sub_2560CFC84()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_2560CFD7C(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a1;
  sub_2560D09AC(0, &qword_26B2AD1E0, &qword_26B2AD1F0, MEMORY[0x263F8D4F8]);
  uint64_t v19 = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v18 - v5;
  uint64_t v7 = MEMORY[0x263F8D6C8];
  sub_2560D09AC(0, &qword_26B2AD1E8, &qword_26B2ACE00, MEMORY[0x263F8D6C8]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v18 - v11;
  uint64_t v13 = a2 + OBJC_IVAR____TtC14MentalHealthUI37PeriodicAssessmentPromptsFeatureModel__locallyUpdatedCadenceInDays;
  uint64_t v22 = 0;
  char v23 = 1;
  unint64_t v14 = (uint64_t (*)(void, uint64_t))MEMORY[0x263F8D8F0];
  sub_2560D214C(0, &qword_26B2ACE00, v7, MEMORY[0x263F8D8F0]);
  swift_retain();
  sub_256175C48();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v13, v12, v9);
  uint64_t v15 = a2
      + OBJC_IVAR____TtC14MentalHealthUI37PeriodicAssessmentPromptsFeatureModel__locallyUpdatedIsPeriodicPromptSettingOn;
  char v21 = 2;
  sub_2560D214C(0, &qword_26B2AD1F0, MEMORY[0x263F8D4F8], v14);
  sub_256175C48();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v15, v6, v19);
  uint64_t v16 = a2 + OBJC_IVAR____TtC14MentalHealthUI37PeriodicAssessmentPromptsFeatureModel_pregnancyModeSettings;
  *(void *)uint64_t v16 = 30;
  *(unsigned char *)(v16 + 8) = 1;
  swift_release();
  return sub_2560CFFEC(v20, a2);
}

uint64_t sub_2560CFFEC(uint64_t a1, uint64_t a2)
{
  sub_2560D09AC(0, &qword_26B2AD1E0, &qword_26B2AD1F0, MEMORY[0x263F8D4F8]);
  uint64_t v33 = *(void *)(v4 - 8);
  uint64_t v34 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v32 = (char *)v30 - v5;
  sub_2560D0948(0, &qword_26B2AD1D8, (uint64_t (*)(uint64_t))sub_2560D0914, MEMORY[0x263EFDE58]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v30 - v9;
  sub_2560D0914(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  unint64_t v14 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)v30 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v30 - v18;
  uint64_t v37 = sub_255FB58F8(0, (unint64_t *)&unk_26B2AD208);
  uint64_t v38 = MEMORY[0x263F44B48];
  v30[1] = v37;
  v36[0] = a1;
  uint64_t v20 = a2 + OBJC_IVAR____TtC14MentalHealthUI22AssessmentFeatureModel__featureStatus;
  uint64_t v21 = sub_256175AC8();
  uint64_t v22 = *(void *)(v21 - 8);
  char v23 = *(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56);
  v30[2] = v22 + 56;
  uint64_t v31 = v23;
  v23(v19, 1, 1, v21);
  sub_2560D1DEC((uint64_t)v19, (uint64_t)v17);
  sub_256175C48();
  sub_2560D1E50((uint64_t)v19);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v20, v10, v7);
  uint64_t v24 = a2 + OBJC_IVAR____TtC14MentalHealthUI22AssessmentFeatureModel__locallyUpdatedEnabledSetting;
  char v35 = 2;
  sub_2560D214C(0, &qword_26B2AD1F0, MEMORY[0x263F8D4F8], MEMORY[0x263F8D8F0]);
  uint64_t v25 = v32;
  sub_256175C48();
  (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v24, v25, v34);
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_256178678()) {
    unint64_t v26 = sub_2560D0D34(MEMORY[0x263F8EE78]);
  }
  else {
    unint64_t v26 = MEMORY[0x263F8EE88];
  }
  uint64_t v27 = v31;
  *(void *)(a2 + OBJC_IVAR____TtC14MentalHealthUI22AssessmentFeatureModel_subscriptions) = v26;
  sub_2560D24B8((uint64_t)v36, a2 + 16);
  sub_256175B28();
  v27(v14, 0, 1, v21);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2560D1DEC((uint64_t)v14, (uint64_t)v19);
  swift_retain();
  sub_256175C98();
  uint64_t v28 = sub_2560D1E50((uint64_t)v14);
  (*(void (**)(uint64_t))(*(void *)a2 + 240))(v28);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  return a2;
}

uint64_t sub_2560D044C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v38 = a1;
  sub_2560D09AC(0, &qword_26B2AD1E0, &qword_26B2AD1F0, MEMORY[0x263F8D4F8]);
  uint64_t v40 = *(void *)(v7 - 8);
  uint64_t v41 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v35 - v8;
  sub_2560D0948(0, &qword_26B2AD1D8, (uint64_t (*)(uint64_t))sub_2560D0914, MEMORY[0x263EFDE58]);
  uint64_t v39 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v35 - v12;
  sub_2560D0914(0);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)v35 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)v35 - v21;
  id v43[3] = a3;
  v43[4] = a4;
  uint64_t v37 = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v43);
  uint64_t v24 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32);
  v35[1] = boxed_opaque_existential_1;
  uint64_t v25 = v38;
  uint64_t v38 = a3;
  v24(boxed_opaque_existential_1, v25, a3);
  uint64_t v26 = a2 + OBJC_IVAR____TtC14MentalHealthUI22AssessmentFeatureModel__featureStatus;
  uint64_t v27 = sub_256175AC8();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56);
  _OWORD v35[2] = v28 + 56;
  double v36 = v29;
  v29(v22, 1, 1, v27);
  sub_2560D1DEC((uint64_t)v22, (uint64_t)v20);
  sub_256175C48();
  sub_2560D1E50((uint64_t)v22);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v26, v13, v39);
  uint64_t v30 = a2 + OBJC_IVAR____TtC14MentalHealthUI22AssessmentFeatureModel__locallyUpdatedEnabledSetting;
  char v42 = 2;
  sub_2560D214C(0, &qword_26B2AD1F0, MEMORY[0x263F8D4F8], MEMORY[0x263F8D8F0]);
  sub_256175C48();
  (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v30, v9, v41);
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_256178678()) {
    unint64_t v31 = sub_2560D0D34(MEMORY[0x263F8EE78]);
  }
  else {
    unint64_t v31 = MEMORY[0x263F8EE88];
  }
  uint64_t v32 = v36;
  *(void *)(a2 + OBJC_IVAR____TtC14MentalHealthUI22AssessmentFeatureModel_subscriptions) = v31;
  sub_2560D24B8((uint64_t)v43, a2 + 16);
  sub_256175AF8();
  v32(v17, 0, 1, v27);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2560D1DEC((uint64_t)v17, (uint64_t)v22);
  swift_retain();
  sub_256175C98();
  uint64_t v33 = sub_2560D1E50((uint64_t)v17);
  (*(void (**)(uint64_t))(*(void *)a2 + 240))(v33);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  return a2;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

void sub_2560D0914(uint64_t a1)
{
}

void sub_2560D0948(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2560D09AC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_2560D214C(255, a3, a4, MEMORY[0x263F8D8F0]);
    unint64_t v5 = sub_256175CA8();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_2560D0A18(uint64_t a1)
{
  uint64_t v2 = sub_2561759E8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_2560D251C();
    uint64_t v9 = sub_256178538();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    char v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    unint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_2560D1388(&qword_269F46728, 255, MEMORY[0x263F07908]);
      uint64_t v16 = sub_256177E08();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_2560D1388((unint64_t *)&unk_269F46730, 255, MEMORY[0x263F07908]);
          char v23 = sub_256177E98();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

unint64_t sub_2560D0D34(unint64_t result)
{
  unint64_t v1 = result;
  unint64_t v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_256178678();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_2560D2420();
      uint64_t result = sub_256178538();
      unint64_t v3 = result;
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_256178678();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v5) {
        return v3;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  unint64_t v3 = MEMORY[0x263F8EE88];
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return v3;
  }
LABEL_9:
  unint64_t v7 = 0;
  unint64_t v8 = v3 + 56;
  unint64_t v22 = v1 & 0xC000000000000001;
  unint64_t v19 = v1 + 32;
  uint64_t v20 = v1 & 0xFFFFFFFFFFFFFF8;
  unint64_t v21 = v1;
  while (v22)
  {
    uint64_t result = MEMORY[0x25A2A1000](v7, v1);
    unint64_t v9 = result;
    BOOL v10 = __OFADD__(v7++, 1);
    if (v10) {
      goto LABEL_26;
    }
LABEL_18:
    sub_256175BF8();
    sub_2560D1388(&qword_269F46710, 255, MEMORY[0x263EFDD18]);
    uint64_t result = sub_256177E08();
    uint64_t v11 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v12 = result & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = *(void *)(v8 + 8 * (v12 >> 6));
    uint64_t v15 = 1 << v12;
    if (((1 << v12) & v14) != 0)
    {
      uint64_t v16 = ~v11;
      sub_2560D1388(&qword_269F46718, 255, MEMORY[0x263EFDD18]);
      do
      {
        uint64_t result = sub_256177E98();
        if (result)
        {
          uint64_t result = swift_release();
          unint64_t v1 = v21;
          goto LABEL_11;
        }
        unint64_t v12 = (v12 + 1) & v16;
        unint64_t v13 = v12 >> 6;
        uint64_t v14 = *(void *)(v8 + 8 * (v12 >> 6));
        uint64_t v15 = 1 << v12;
      }
      while ((v14 & (1 << v12)) != 0);
      unint64_t v1 = v21;
    }
    *(void *)(v8 + 8 * v13) = v15 | v14;
    *(void *)(*(void *)(v3 + 48) + 8 * v12) = v9;
    uint64_t v17 = *(void *)(v3 + 16);
    BOOL v10 = __OFADD__(v17, 1);
    uint64_t v18 = v17 + 1;
    if (v10) {
      goto LABEL_27;
    }
    *(void *)(v3 + 16) = v18;
LABEL_11:
    if (v7 == v5) {
      return v3;
    }
  }
  if (v7 >= *(void *)(v20 + 16)) {
    goto LABEL_28;
  }
  unint64_t v9 = *(void *)(v19 + 8 * v7);
  uint64_t result = swift_retain();
  BOOL v10 = __OFADD__(v7++, 1);
  if (!v10) {
    goto LABEL_18;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2560D0FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a1;
  uint64_t v29 = a4;
  uint64_t v26 = *(void *)(a3 - 8);
  uint64_t v27 = a3;
  MEMORY[0x270FA5388](a1);
  uint64_t v25 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560D09AC(0, &qword_26B2AD1E0, &qword_26B2AD1F0, MEMORY[0x263F8D4F8]);
  uint64_t v24 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v23 - v8;
  uint64_t v10 = MEMORY[0x263F8D6C8];
  sub_2560D09AC(0, &qword_26B2AD1E8, &qword_26B2ACE00, MEMORY[0x263F8D6C8]);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v23 - v14;
  uint64_t v16 = a2 + OBJC_IVAR____TtC14MentalHealthUI37PeriodicAssessmentPromptsFeatureModel__locallyUpdatedCadenceInDays;
  uint64_t v31 = 0;
  char v32 = 1;
  uint64_t v17 = (uint64_t (*)(void, uint64_t))MEMORY[0x263F8D8F0];
  sub_2560D214C(0, &qword_26B2ACE00, v10, MEMORY[0x263F8D8F0]);
  swift_retain();
  sub_256175C48();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v16, v15, v12);
  uint64_t v18 = a2
      + OBJC_IVAR____TtC14MentalHealthUI37PeriodicAssessmentPromptsFeatureModel__locallyUpdatedIsPeriodicPromptSettingOn;
  char v30 = 2;
  sub_2560D214C(0, &qword_26B2AD1F0, MEMORY[0x263F8D4F8], v17);
  sub_256175C48();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v18, v9, v24);
  uint64_t v19 = a2 + OBJC_IVAR____TtC14MentalHealthUI37PeriodicAssessmentPromptsFeatureModel_pregnancyModeSettings;
  *(void *)uint64_t v19 = 30;
  *(unsigned char *)(v19 + 8) = 1;
  swift_release();
  uint64_t v20 = (uint64_t)v25;
  uint64_t v21 = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v25, v28, v27);
  return sub_2560D044C(v20, a2, v21, v29);
}

uint64_t type metadata accessor for PeriodicAssessmentPromptsFeatureModel(uint64_t a1)
{
  return sub_256008F08(a1, (uint64_t *)&unk_26B2ACDF0);
}

uint64_t type metadata accessor for AssessmentFeatureModel(uint64_t a1)
{
  return sub_256008F08(a1, (uint64_t *)&unk_26B2AD190);
}

uint64_t sub_2560D1334()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_2560D136C()
{
  return sub_2560CDBA0();
}

uint64_t sub_2560D1388(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2560D13D0()
{
  return objectdestroy_3Tm();
}

uint64_t sub_2560D13D8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_2560D25C0;
  return sub_2560CDD80(a1, v4, v5, v6);
}

uint64_t sub_2560D1490(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  char v6 = *(unsigned char *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_2560D25C0;
  return sub_2560CEA90(a1, v4, v5, v6, v7);
}

uint64_t sub_2560D155C()
{
  return objectdestroy_3Tm();
}

uint64_t sub_2560D1564(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_2560D25C0;
  return sub_2560CF22C(a1, v4, v5, v6);
}

uint64_t sub_2560D1618()
{
  return objectdestroy_3Tm();
}

uint64_t sub_2560D1620()
{
  return objectdestroy_3Tm();
}

unint64_t sub_2560D162C()
{
  unint64_t result = qword_269F466A0;
  if (!qword_269F466A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F466A0);
  }
  return result;
}

uint64_t sub_2560D1680@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2560CAEBC();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2560D16B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2560CC33C();
  *a1 = result;
  return result;
}

uint64_t sub_2560D16EC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2560CAEBC();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2560D1720(char *a1)
{
  return sub_2560CB100(*a1);
}

uint64_t sub_2560D174C()
{
  return type metadata accessor for AssessmentFeatureModel(0);
}

void sub_2560D1754()
{
  sub_2560D0948(319, &qword_26B2AD1D8, (uint64_t (*)(uint64_t))sub_2560D0914, MEMORY[0x263EFDE58]);
  if (v0 <= 0x3F)
  {
    sub_2560D09AC(319, &qword_26B2AD1E0, &qword_26B2AD1F0, MEMORY[0x263F8D4F8]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for AssessmentFeatureModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AssessmentFeatureModel);
}

uint64_t dispatch thunk of AssessmentFeatureModel.__allocating_init(featureStatusManager:)()
{
  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t sub_2560D18A8()
{
  return type metadata accessor for PeriodicAssessmentPromptsFeatureModel(0);
}

void sub_2560D18B0()
{
  sub_2560D09AC(319, &qword_26B2AD1E8, &qword_26B2ACE00, MEMORY[0x263F8D6C8]);
  if (v0 <= 0x3F)
  {
    sub_2560D09AC(319, &qword_26B2AD1E0, &qword_26B2AD1F0, MEMORY[0x263F8D4F8]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t type metadata accessor for AssessmentsSettingsModel()
{
  return self;
}

uint64_t method lookup function for AssessmentsSettingsModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AssessmentsSettingsModel);
}

uint64_t dispatch thunk of AssessmentsSettingsModel.__allocating_init(periodicAssessmentPromptsFeatureModel:loggingPatternEscalationsFeatureModel:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t getEnumTagSinglePayload for AssessmentsSettingsModel.DisabledMessaging(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AssessmentsSettingsModel.DisabledMessaging(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2560D1B5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssessmentsSettingsModel.DisabledMessaging()
{
  return &type metadata for AssessmentsSettingsModel.DisabledMessaging;
}

uint64_t getEnumTagSinglePayload for PromptedAssessmentsSettingsConfiguration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PromptedAssessmentsSettingsConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PromptedAssessmentsSettingsConfiguration()
{
  return &type metadata for PromptedAssessmentsSettingsConfiguration;
}

void sub_2560D1C3C()
{
  if (!qword_26B2AD1C0)
  {
    sub_2560D1D0C();
    sub_255FB58F8(255, (unint64_t *)&qword_26B2AD368);
    sub_2560D1388(&qword_26B2AD1C8, 255, (void (*)(uint64_t))sub_2560D1D0C);
    sub_2560D1D74();
    unint64_t v0 = sub_256175BC8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B2AD1C0);
    }
  }
}

void sub_2560D1D0C()
{
  if (!qword_26B2AD1D0)
  {
    sub_256175AC8();
    unint64_t v0 = sub_256175BD8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B2AD1D0);
    }
  }
}

unint64_t sub_2560D1D74()
{
  unint64_t result = qword_26B2AD200;
  if (!qword_26B2AD200)
  {
    sub_255FB58F8(255, (unint64_t *)&qword_26B2AD368);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2AD200);
  }
  return result;
}

uint64_t sub_2560D1DDC(uint64_t a1)
{
  return sub_2560CC0C4(a1);
}

uint64_t sub_2560D1DEC(uint64_t a1, uint64_t a2)
{
  sub_2560D0914(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2560D1E50(uint64_t a1)
{
  sub_2560D0914(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2560D1EAC@<X0>(unsigned char *a1@<X8>)
{
  return sub_2560CFABC(a1);
}

uint64_t sub_2560D1ED4()
{
  return sub_2560CFB38();
}

uint64_t sub_2560D1F04@<X0>(unsigned char *a1@<X8>)
{
  return sub_2560CFABC(a1);
}

uint64_t sub_2560D1F2C()
{
  return sub_2560CFB38();
}

uint64_t sub_2560D1F54(uint64_t a1)
{
  return sub_2560CAAEC(a1);
}

uint64_t sub_2560D1F5C()
{
  return objectdestroy_3Tm();
}

uint64_t objectdestroy_8Tm()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2560D1FA8()
{
  return objectdestroy_3Tm();
}

uint64_t sub_2560D1FB0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_2560D25C0;
  return sub_2560CC8A8(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_2560D2078()
{
  return objectdestroy_3Tm();
}

uint64_t sub_2560D2080(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_2560D25C0;
  return sub_2560CB2A4(a1, v4, v5, v6, v7, v8);
}

void sub_2560D214C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_2560D2198(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_2560D0948(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_2560D2208()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2560D2240(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_255FAF204;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269F466E8 + dword_269F466E8);
  return v6(a1, v4);
}

uint64_t sub_2560D22F8()
{
  return objectdestroy_3Tm();
}

uint64_t sub_2560D2300()
{
  return objectdestroy_3Tm();
}

uint64_t objectdestroy_3Tm()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2560D2354(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_255FAF204;
  return sub_2560CB2A4(a1, v4, v5, v6, v7, v8);
}

void sub_2560D2420()
{
  if (!qword_269F46708)
  {
    sub_256175BF8();
    sub_2560D1388(&qword_269F46710, 255, MEMORY[0x263EFDD18]);
    unint64_t v0 = sub_256178548();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46708);
    }
  }
}

uint64_t sub_2560D24B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_2560D251C()
{
  if (!qword_269F46720)
  {
    sub_2561759E8();
    sub_2560D1388(&qword_269F46728, 255, MEMORY[0x263F07908]);
    unint64_t v0 = sub_256178548();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46720);
    }
  }
}

uint64_t sub_2560D25C4@<X0>(uint64_t a1@<X8>)
{
  v16[3] = a1;
  uint64_t v1 = sub_256178348();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25608C39C();
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  void v16[2] = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  MEMORY[0x270FA5388](v8);
  v16[1] = (char *)v16 - v9;
  uint64_t v10 = self;
  id v11 = objc_msgSend(v10, sel_defaultCenter);
  sub_256178358();

  sub_2560D2A70(&qword_269F45DB8, MEMORY[0x263F07CB0]);
  sub_256175CC8();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v2 + 8);
  v12(v4, v1);
  id v13 = objc_msgSend(v10, sel_defaultCenter);
  sub_256178358();

  sub_256175CC8();
  v12(v4, v1);
  id v14 = objc_msgSend(v10, sel_defaultCenter);
  sub_256178358();

  sub_256175CC8();
  v12(v4, v1);
  sub_2560D2A70(&qword_269F45DC0, (void (*)(uint64_t))sub_25608C39C);
  return sub_256175BB8();
}

CGFloat sub_2560D2944()
{
  uint64_t v0 = sub_256175408();
  if (!v0)
  {
    long long v6 = 0u;
    long long v7 = 0u;
LABEL_10:
    sub_256040650((uint64_t)&v6);
    return 0.0;
  }
  uint64_t v1 = v0;
  sub_256177EE8();
  sub_256178508();
  if (*(void *)(v1 + 16) && (unint64_t v2 = sub_256137F38((uint64_t)&v5), (v3 & 1) != 0))
  {
    sub_255FB5934(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v6);
  }
  else
  {
    long long v6 = 0u;
    long long v7 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_2560D2AB8((uint64_t)&v5);
  if (!*((void *)&v7 + 1)) {
    goto LABEL_10;
  }
  type metadata accessor for CGRect(0);
  if (swift_dynamicCast()) {
    return CGRectGetHeight(v5);
  }
  return 0.0;
}

void sub_2560D2A3C(CGFloat *a1@<X8>)
{
  *a1 = sub_2560D2944();
}

void sub_2560D2A68(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_2560D2A70(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2560D2AB8(uint64_t a1)
{
  return a1;
}

uint64_t sub_2560D2B10(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  v2[5] = *v1;
  return MEMORY[0x270FA2498](sub_2560D2B58, 0, 0);
}

uint64_t sub_2560D2B58()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(void *)(v2 + 32) = v1;
  char v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  sub_2560D5270(0, &qword_269F46788, MEMORY[0x263F8D060]);
  *char v3 = v0;
  v3[1] = sub_2560D2C7C;
  return MEMORY[0x270FA2318](v0 + 16, 0, 0, 0xD000000000000010, 0x80000002561AC830, sub_2560D39E0, v2, v4);
}

uint64_t sub_2560D2C7C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2560D2D94, 0, 0);
}

uint64_t sub_2560D2D94()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

void sub_2560D2DB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_2560D3A34();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v7);
  uint64_t v19 = sub_256177D78();
  sub_2560D3AB8();
  sub_256177DB8();
  sub_2560D39EC((unint64_t *)&unk_269F467B0, MEMORY[0x263F090E8]);
  sub_256178488();
  uint64_t v11 = aBlock[0];
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v13 + v12, (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  *(void *)(v13 + ((v10 + v12 + 7) & 0xFFFFFFFFFFFFFFF8)) = a4;
  id v14 = objc_allocWithZone(MEMORY[0x263F55010]);
  uint64_t v15 = (void *)sub_256175978();
  aBlock[4] = sub_2560D3BE8;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2560D3C9C;
  aBlock[3] = &block_descriptor_10;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = objc_msgSend(v14, sel_initWithDayIndexRange_gregorianCalendar_ascending_limit_resultsHandler_, v19, v11, v15, 1, 0, v16);
  _Block_release(v16);

  swift_release();
  objc_msgSend(*(id *)(a3 + 16), sel_executeQuery_, v17);
}

uint64_t sub_2560D303C(uint64_t a1, unint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = sub_256175B68();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_256177DB8();
  uint64_t v46 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  unint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2 || a3)
  {
    sub_256175B48();
    id v13 = a3;
    id v14 = a3;
    uint64_t v15 = sub_256175B58();
    os_log_type_t v16 = sub_256178238();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      unint64_t v52 = v18;
      *(_DWORD *)uint64_t v17 = 136446466;
      uint64_t v44 = a4;
      uint64_t v19 = sub_256178978();
      uint64_t v51 = sub_255FB29A8(v19, v20, (uint64_t *)&v52);
      sub_256178458();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2080;
      uint64_t v51 = (uint64_t)a3;
      id v21 = a3;
      sub_2560D3D6C();
      uint64_t v22 = sub_256177F08();
      uint64_t v51 = sub_255FB29A8(v22, v23, (uint64_t *)&v52);
      sub_256178458();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_255F58000, v15, v16, "[%{public}s] error fetching day summaries: %s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25A2A1E90](v18, -1, -1);
      MEMORY[0x25A2A1E90](v17, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    unint64_t v52 = sub_2561339E4(MEMORY[0x263F8EE78]);
    sub_2560D3A34();
    return sub_256178098();
  }
  if (a2 >> 62)
  {
LABEL_31:
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_256178678();
    uint64_t v44 = a4;
    if (v25) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v25 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v44 = a4;
    if (v25)
    {
LABEL_9:
      unint64_t v49 = a2 & 0xC000000000000001;
      uint64_t v45 = v46 + 16;
      uint64_t v47 = (void (**)(char *, uint64_t))(v46 + 8);
      uint64_t v26 = (void *)MEMORY[0x263F8EE80];
      uint64_t v27 = 4;
      unint64_t v48 = a2;
      while (1)
      {
        a4 = v27 - 4;
        if (v49) {
          id v30 = (id)MEMORY[0x25A2A1000](v27 - 4, a2);
        }
        else {
          id v30 = *(id *)(a2 + 8 * v27);
        }
        id v31 = v30;
        a2 = v27 - 3;
        if (__OFADD__(a4, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
LABEL_30:
          __break(1u);
          goto LABEL_31;
        }
        objc_msgSend(v30, sel_dayIndex);
        sub_256177D68();
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v52 = (unint64_t)v26;
        unint64_t v34 = sub_256137F7C((uint64_t)v12);
        uint64_t v35 = v26[2];
        BOOL v36 = (v33 & 1) == 0;
        uint64_t v37 = v35 + v36;
        if (__OFADD__(v35, v36)) {
          goto LABEL_29;
        }
        a4 = v33;
        if (v26[3] >= v37)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            uint64_t v26 = (void *)v52;
            if (v33) {
              goto LABEL_10;
            }
          }
          else
          {
            sub_2560D4FC0();
            uint64_t v26 = (void *)v52;
            if (a4) {
              goto LABEL_10;
            }
          }
        }
        else
        {
          sub_2560D47B0(v37, isUniquelyReferenced_nonNull_native);
          unint64_t v38 = sub_256137F7C((uint64_t)v12);
          if ((a4 & 1) != (v39 & 1))
          {
            uint64_t result = sub_256178868();
            __break(1u);
            return result;
          }
          unint64_t v34 = v38;
          uint64_t v26 = (void *)v52;
          if (a4)
          {
LABEL_10:
            uint64_t v28 = v26[7];

            *(void *)(v28 + 8 * v34) = v31;
            goto LABEL_11;
          }
        }
        v26[(v34 >> 6) + 8] |= 1 << v34;
        (*(void (**)(unint64_t, char *, uint64_t))(v46 + 16))(v26[6] + *(void *)(v46 + 72) * v34, v12, v50);
        *(void *)(v26[7] + 8 * v34) = v31;
        uint64_t v40 = v26[2];
        BOOL v41 = __OFADD__(v40, 1);
        uint64_t v42 = v40 + 1;
        if (v41) {
          goto LABEL_30;
        }
        v26[2] = v42;
LABEL_11:
        swift_bridgeObjectRelease();
        (*v47)(v12, v50);
        ++v27;
        BOOL v29 = a2 == v25;
        a2 = v48;
        if (v29)
        {
          swift_bridgeObjectRelease();
          goto LABEL_33;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v26 = (void *)MEMORY[0x263F8EE80];
LABEL_33:
  unint64_t v52 = (unint64_t)v26;
  sub_2560D3A34();
  swift_bridgeObjectRetain();
  sub_256178098();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2560D35CC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC14MentalHealthUI29StateOfMindCalendarDataSource_gregorianCalendar;
  uint64_t v2 = sub_256175A08();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_2560D3684()
{
  return type metadata accessor for StateOfMindCalendarDataSource();
}

uint64_t type metadata accessor for StateOfMindCalendarDataSource()
{
  uint64_t result = qword_269F46750;
  if (!qword_269F46750) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2560D36D8()
{
  uint64_t result = sub_256175A08();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_2560D3788()
{
  unint64_t result = qword_269F46768;
  if (!qword_269F46768)
  {
    sub_255FB58F8(255, (unint64_t *)&qword_269F46770);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46768);
  }
  return result;
}

uint64_t sub_2560D37F0(uint64_t a1)
{
  uint64_t v4 = *v1;
  CGRect v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *CGRect v5 = v2;
  v5[1] = sub_2560D38C8;
  v5[3] = a1;
  v5[4] = v4;
  v5[5] = *v4;
  return MEMORY[0x270FA2498](sub_2560D2B58, 0, 0);
}

uint64_t sub_2560D38C8(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  CGRect v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_2560D39C8()
{
  return swift_retain();
}

void sub_2560D39E0(uint64_t a1)
{
  sub_2560D2DB0(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_2560D39EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2560D3A34()
{
  if (!qword_269F46798)
  {
    sub_2560D5270(255, &qword_269F46788, MEMORY[0x263F8D060]);
    unint64_t v0 = sub_2561780A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46798);
    }
  }
}

void sub_2560D3AB8()
{
  if (!qword_269F467A0)
  {
    sub_256177DB8();
    sub_2560D39EC((unint64_t *)&unk_269F476D0, MEMORY[0x263F090E8]);
    unint64_t v0 = sub_256178188();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F467A0);
    }
  }
}

uint64_t sub_2560D3B4C()
{
  sub_2560D3A34();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_2560D3BE8(uint64_t a1, unint64_t a2, void *a3)
{
  sub_2560D3A34();
  uint64_t v8 = v3
     + ((*(unsigned __int8 *)(*(void *)(v7 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80));

  return sub_2560D303C(a1, a2, a3, v8);
}

uint64_t sub_2560D3C9C(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a3;
  uint64_t v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_255FB58F8(0, (unint64_t *)&qword_269F46770);
    uint64_t v5 = sub_256178008();
  }
  swift_retain();
  id v8 = a2;
  id v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

void sub_2560D3D6C()
{
  if (!qword_269F44D38)
  {
    sub_255FB3160();
    unint64_t v0 = sub_256178448();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F44D38);
    }
  }
}

uint64_t sub_2560D3DC4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_2560D5334();
  char v33 = a2;
  uint64_t v6 = sub_256178698();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v32 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v31 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v18 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v20 >= v31) {
      break;
    }
    id v21 = (void *)(v5 + 64);
    unint64_t v22 = *(void *)(v32 + 8 * v20);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v20 + 1;
      if (v20 + 1 >= v31) {
        goto LABEL_33;
      }
      unint64_t v22 = *(void *)(v32 + 8 * v13);
      if (!v22)
      {
        int64_t v23 = v20 + 2;
        if (v23 >= v31)
        {
LABEL_33:
          swift_release();
          if ((v33 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v22 = *(void *)(v32 + 8 * v23);
        if (!v22)
        {
          while (1)
          {
            int64_t v13 = v23 + 1;
            if (__OFADD__(v23, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v31) {
              goto LABEL_33;
            }
            unint64_t v22 = *(void *)(v32 + 8 * v13);
            ++v23;
            if (v22) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v23;
      }
    }
LABEL_30:
    unint64_t v10 = (v22 - 1) & v22;
    unint64_t v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_31:
    char v28 = *(unsigned char *)(*(void *)(v5 + 48) + v19);
    uint64_t v29 = *(void *)(*(void *)(v5 + 56) + 8 * v19);
    if ((v33 & 1) == 0) {
      swift_unknownObjectRetain();
    }
    sub_2561788E8();
    sub_256177F38();
    swift_bridgeObjectRelease();
    uint64_t result = sub_256178928();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v26 = v16 == v25;
        if (v16 == v25) {
          unint64_t v16 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v16);
      }
      while (v27 == -1);
      unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(unsigned char *)(*(void *)(v7 + 48) + v17) = v28;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v29;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  id v21 = (void *)(v5 + 64);
  if ((v33 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
  if (v30 >= 64) {
    bzero(v21, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *id v21 = -1 << v30;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2560D412C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_2560D5404();
  char v34 = a2;
  uint64_t v6 = sub_256178698();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v31 = v2;
  int64_t v32 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v18 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v20 >= v32) {
      break;
    }
    id v21 = (void *)(v5 + 64);
    unint64_t v22 = *(void *)(v33 + 8 * v20);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v20 + 1;
      if (v20 + 1 >= v32) {
        goto LABEL_33;
      }
      unint64_t v22 = *(void *)(v33 + 8 * v13);
      if (!v22)
      {
        int64_t v23 = v20 + 2;
        if (v23 >= v32)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v31;
          if ((v34 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v22 = *(void *)(v33 + 8 * v23);
        if (!v22)
        {
          while (1)
          {
            int64_t v13 = v23 + 1;
            if (__OFADD__(v23, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v32) {
              goto LABEL_33;
            }
            unint64_t v22 = *(void *)(v33 + 8 * v13);
            ++v23;
            if (v22) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v23;
      }
    }
LABEL_30:
    unint64_t v10 = (v22 - 1) & v22;
    unint64_t v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_31:
    char v28 = *(unsigned char *)(*(void *)(v5 + 48) + v19);
    uint64_t v29 = *(void *)(*(void *)(v5 + 56) + 8 * v19);
    if ((v34 & 1) == 0) {
      swift_unknownObjectRetain();
    }
    sub_2561788E8();
    sub_256177F38();
    swift_bridgeObjectRelease();
    uint64_t result = sub_256178928();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v26 = v16 == v25;
        if (v16 == v25) {
          unint64_t v16 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v16);
      }
      while (v27 == -1);
      unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(unsigned char *)(*(void *)(v7 + 48) + v17) = v28;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v29;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v31;
  id v21 = (void *)(v5 + 64);
  if ((v34 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
  if (v30 >= 64) {
    bzero(v21, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *id v21 = -1 << v30;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2560D4498(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_2560D5B6C(0, &qword_269F467F0);
  char v6 = a2;
  uint64_t v7 = sub_256178698();
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v35 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v34 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v14 << 6);
      }
      else
      {
        int64_t v19 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v19 >= v34) {
          goto LABEL_34;
        }
        unint64_t v20 = v35[v19];
        ++v14;
        if (!v20)
        {
          int64_t v14 = v19 + 1;
          if (v19 + 1 >= v34) {
            goto LABEL_34;
          }
          unint64_t v20 = v35[v14];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v34)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (v6)
              {
                uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
                if (v33 >= 64) {
                  bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v35 = -1 << v33;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v20 = v35[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v14 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_41;
                }
                if (v14 >= v34) {
                  goto LABEL_34;
                }
                unint64_t v20 = v35[v14];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v14 = v21;
          }
        }
LABEL_21:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v14 << 6);
      }
      unint64_t v22 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v18);
      uint64_t v24 = *v22;
      uint64_t v23 = v22[1];
      unint64_t v25 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v18);
      if (v6)
      {
        sub_25601DCC4(v25, v36);
      }
      else
      {
        sub_255FB5934((uint64_t)v25, (uint64_t)v36);
        swift_bridgeObjectRetain();
      }
      sub_2561788E8();
      sub_256177F38();
      uint64_t result = sub_256178928();
      uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v15 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      unint64_t v16 = (void *)(*(void *)(v8 + 48) + 16 * v15);
      *unint64_t v16 = v24;
      v16[1] = v23;
      uint64_t result = (uint64_t)sub_25601DCC4(v36, (_OWORD *)(*(void *)(v8 + 56) + 32 * v15));
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v8;
  return result;
}

uint64_t sub_2560D47B0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_256177DB8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_2560D5270(0, (unint64_t *)&qword_269F47610, MEMORY[0x263F8DFB0]);
  int v46 = a2;
  uint64_t v10 = sub_256178698();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v14 = *(void *)(v9 + 64);
  uint64_t v42 = (void *)(v9 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  uint64_t v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  unint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    unint64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    sub_2560D39EC(&qword_269F46790, MEMORY[0x263F090E8]);
    uint64_t result = sub_256177E08();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  unint64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

void *sub_2560D4BEC()
{
  return sub_2560D4C1C((void (*)(void))sub_2560D5334);
}

void *sub_2560D4C04()
{
  return sub_2560D4C1C((void (*)(void))sub_2560D5404);
}

void *sub_2560D4C1C(void (*a1)(void))
{
  uint64_t v2 = v1;
  a1(0);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_256178688();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v7 + 8 * v10);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = *(void *)(*(void *)(v3 + 56) + 8 * v16);
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = *(unsigned char *)(*(void *)(v3 + 48) + v16);
    *(void *)(*(void *)(v5 + 56) + 8 * v16) = v17;
    uint64_t result = (void *)swift_unknownObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v14) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v7 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2560D4DC4()
{
  uint64_t v1 = v0;
  sub_2560D5B6C(0, &qword_269F467F0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_256178688();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t v25 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_255FB5934(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = v19;
    v21[1] = v18;
    sub_25601DCC4(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_2560D4FC0()
{
  uint64_t v1 = sub_256177DB8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560D5270(0, (unint64_t *)&qword_269F47610, MEMORY[0x263F8DFB0]);
  unint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_256178688();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (id)swift_release();
    *unint64_t v23 = v7;
    return result;
  }
  id result = (id)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void **)(*(void *)(v5 + 56) + v17);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_2560D5270(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_256177DB8();
    uint64_t v7 = sub_255FB58F8(255, (unint64_t *)&qword_269F46770);
    uint64_t v8 = sub_2560D39EC(&qword_269F46790, MEMORY[0x263F090E8]);
    unint64_t v9 = a3(a1, v6, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_2560D5334()
{
  if (!qword_269F467C0)
  {
    sub_2560D5480(255, &qword_269F467C8);
    sub_2560D53B0();
    unint64_t v0 = sub_2561786B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F467C0);
    }
  }
}

unint64_t sub_2560D53B0()
{
  unint64_t result = qword_269F467D0;
  if (!qword_269F467D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F467D0);
  }
  return result;
}

void sub_2560D5404()
{
  if (!qword_269F467D8)
  {
    sub_2560D5480(255, &qword_269F467E0);
    sub_2560D54D4();
    unint64_t v0 = sub_2561786B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F467D8);
    }
  }
}

uint64_t sub_2560D5480(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_2560D54D4()
{
  unint64_t result = qword_269F467E8;
  if (!qword_269F467E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F467E8);
  }
  return result;
}

void *sub_2560D5528()
{
  uint64_t v1 = v0;
  sub_2560D5B6C(0, (unint64_t *)&unk_269F46820);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_256178688();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    sub_2560D5BC4(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    uint64_t v17 = 32 * v15;
    sub_255FB5934(*(void *)(v2 + 56) + v17, (uint64_t)v24);
    uint64_t v18 = *(void *)(v4 + 48) + v16;
    long long v19 = v25[0];
    long long v20 = v25[1];
    *(void *)(v18 + 32) = v26;
    *(_OWORD *)uint64_t v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    unint64_t result = sub_25601DCC4(v24, (_OWORD *)(*(void *)(v4 + 56) + v17));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t *sub_2560D5724(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v24 = *v3;
  uint64_t v25 = a2;
  uint64_t v26 = sub_2561781A8();
  uint64_t v6 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560D5AD8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v27 = v9;
  uint64_t v28 = v10;
  MEMORY[0x270FA5388](v9);
  unint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[2] = (uint64_t)a1;
  int64_t v13 = (char *)v3 + OBJC_IVAR____TtC14MentalHealthUI29StateOfMindCalendarDataSource_gregorianCalendar;
  uint64_t v14 = sub_256175A08();
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v13, a2, v14);
  sub_25601D9B8();
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_2561A27B0;
  sub_255FB58F8(0, &qword_269F46810);
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  a1;
  id v18 = objc_msgSend(ObjCClassFromMetadata, sel_stateOfMindType);
  id v19 = objc_msgSend(self, sel_queryDescriptorWithSampleType_, v18);

  *(void *)(v16 + 32) = v19;
  uint64_t v29 = v16;
  sub_256178018();
  uint64_t v29 = v24;
  swift_getMetatypeMetadata();
  sub_256177F08();
  sub_2561781B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2560D39EC((unint64_t *)&unk_269F46800, MEMORY[0x263F44AB8]);
  uint64_t v20 = v26;
  sub_256175CE8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v20);
  sub_2560D39EC(&qword_269F46818, (void (*)(uint64_t))sub_2560D5AD8);
  uint64_t v21 = v27;
  uint64_t v22 = sub_256175CB8();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v25, v14);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v21);
  *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC14MentalHealthUI29StateOfMindCalendarDataSource_modelsDidChangePublisher) = v22;
  return v3;
}

void sub_2560D5AD8()
{
  if (!qword_269F467F8)
  {
    sub_2561781A8();
    sub_2560D39EC((unint64_t *)&unk_269F46800, MEMORY[0x263F44AB8]);
    unint64_t v0 = sub_256175B98();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F467F8);
    }
  }
}

void sub_2560D5B6C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_2561786B8();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_2560D5BC4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_2560D5C20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8 = sub_256175D98();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560AA1D0(21, a4);
  sub_2560D7714(0, &qword_269F454F0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2561A44F0;
  int64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v13(v11, a1, v8);
  *(void *)(inited + 32) = sub_2560D691C(1, v11);
  v13(v11, a1, v8);
  *(void *)(inited + 40) = sub_2560D691C(2, v11);
  v13(v11, a1, v8);
  *(void *)(inited + 48) = sub_2560D691C(3, v11);
  v13(v11, a1, v8);
  *(void *)(inited + 56) = sub_2560D691C(4, v11);
  v13(v11, a1, v8);
  *(void *)(inited + 64) = sub_2560D691C(5, v11);
  v13(v11, a1, v8);
  *(void *)(inited + 72) = sub_2560D691C(6, v11);
  v13(v11, a1, v8);
  *(void *)(inited + 80) = sub_2560D691C(7, v11);
  sub_2560D6CBC(inited, (uint64_t)&unk_2704B5E38, a2, (void (*)(uint64_t, uint64_t))sub_2560D76FC, (uint64_t (*)(void))sub_255FD6864, a3, -1.0, 1.0);
  swift_setDeallocating();
  return swift_arrayDestroy();
}

uint64_t sub_2560D5EBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8 = sub_256175D98();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560AA1D0(21, a4);
  sub_2560D7714(0, &qword_269F454F0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2561A44F0;
  int64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v13(v11, a1, v8);
  *(void *)(inited + 32) = sub_2560D691C(1, v11);
  v13(v11, a1, v8);
  *(void *)(inited + 40) = sub_2560D691C(2, v11);
  v13(v11, a1, v8);
  *(void *)(inited + 48) = sub_2560D691C(3, v11);
  v13(v11, a1, v8);
  *(void *)(inited + 56) = sub_2560D691C(4, v11);
  v13(v11, a1, v8);
  *(void *)(inited + 64) = sub_2560D691C(5, v11);
  v13(v11, a1, v8);
  *(void *)(inited + 72) = sub_2560D691C(6, v11);
  v13(v11, a1, v8);
  *(void *)(inited + 80) = sub_2560D691C(7, v11);
  sub_2560D6CBC(inited, (uint64_t)&unk_2704B5E90, a2, (void (*)(uint64_t, uint64_t))sub_2560D77DC, (uint64_t (*)(void))sub_255FDE1B8, a3, -1.0, 1.0);
  swift_setDeallocating();
  return swift_arrayDestroy();
}

uint64_t sub_2560D6158@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8 = sub_256175D98();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560AA1D0(21, a4);
  sub_2560D7714(0, &qword_269F454F0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2561A44F0;
  int64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v13(v11, a1, v8);
  *(void *)(inited + 32) = sub_2560D691C(1, v11);
  v13(v11, a1, v8);
  *(void *)(inited + 40) = sub_2560D691C(2, v11);
  v13(v11, a1, v8);
  *(void *)(inited + 48) = sub_2560D691C(3, v11);
  v13(v11, a1, v8);
  *(void *)(inited + 56) = sub_2560D691C(4, v11);
  v13(v11, a1, v8);
  *(void *)(inited + 64) = sub_2560D691C(5, v11);
  v13(v11, a1, v8);
  *(void *)(inited + 72) = sub_2560D691C(6, v11);
  v13(v11, a1, v8);
  *(void *)(inited + 80) = sub_2560D691C(7, v11);
  sub_2560D6CBC(inited, (uint64_t)&unk_2704B5F40, a2, (void (*)(uint64_t, uint64_t))sub_2560D77F4, (uint64_t (*)(void))sub_256081C3C, a3, -1.0, 1.0);
  swift_setDeallocating();
  return swift_arrayDestroy();
}

uint64_t sub_2560D63F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8 = sub_256175D98();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560AA1D0(21, a4);
  sub_2560D7714(0, &qword_269F454F0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2561A44F0;
  int64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v13(v11, a1, v8);
  *(void *)(inited + 32) = sub_2560D691C(1, v11);
  v13(v11, a1, v8);
  *(void *)(inited + 40) = sub_2560D691C(2, v11);
  v13(v11, a1, v8);
  *(void *)(inited + 48) = sub_2560D691C(3, v11);
  v13(v11, a1, v8);
  *(void *)(inited + 56) = sub_2560D691C(4, v11);
  v13(v11, a1, v8);
  *(void *)(inited + 64) = sub_2560D691C(5, v11);
  v13(v11, a1, v8);
  *(void *)(inited + 72) = sub_2560D691C(6, v11);
  v13(v11, a1, v8);
  *(void *)(inited + 80) = sub_2560D691C(7, v11);
  sub_2560D6CBC(inited, (uint64_t)&unk_2704B5F98, a2, (void (*)(uint64_t, uint64_t))sub_2560D775C, (uint64_t (*)(void))sub_25608C548, a3, -1.0, 1.0);
  swift_setDeallocating();
  return swift_arrayDestroy();
}

uint64_t sub_2560D6690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>, double a7@<D0>)
{
  int v21 = a5;
  uint64_t v20 = a4;
  uint64_t v12 = sub_256175D98();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560AA1D0(21, a7);
  sub_2560D7714(0, &qword_269F454F0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2561A44F0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v17(v15, a1, v12);
  *(void *)(inited + 32) = sub_2560D691C(1, v15);
  v17(v15, a1, v12);
  *(void *)(inited + 40) = sub_2560D691C(2, v15);
  v17(v15, a1, v12);
  *(void *)(inited + 48) = sub_2560D691C(3, v15);
  v17(v15, a1, v12);
  *(void *)(inited + 56) = sub_2560D691C(4, v15);
  v17(v15, a1, v12);
  *(void *)(inited + 64) = sub_2560D691C(5, v15);
  v17(v15, a1, v12);
  *(void *)(inited + 72) = sub_2560D691C(6, v15);
  v17(v15, a1, v12);
  *(void *)(inited + 80) = sub_2560D691C(7, v15);
  sub_2560D6E80(inited, (uint64_t)&unk_2704B5FF0, a2, a3, v20, v21, a6, -1.0, 1.0);
  swift_setDeallocating();
  return swift_arrayDestroy();
}

uint64_t sub_2560D691C(uint64_t a1, char *a2)
{
  int v21 = a2;
  uint64_t v22 = a1;
  uint64_t v4 = sub_256175D98();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v20 - v9;
  sub_2560D7714(0, (unint64_t *)&qword_269F43AB0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2561A3730;
  sub_25601DB3C();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v12(v10, a2, v4);
  LOBYTE(v23) = 1;
  v12(v8, v10, v4);
  Color.init(valenceClassification:variant:colorScheme:)(a1, (unsigned __int8 *)&v23, (uint64_t)v8);
  uint64_t v13 = sub_256178428();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v10, v4);
  *(void *)(inited + 32) = v13;
  uint64_t v15 = v21;
  v12(v10, v21, v4);
  LOBYTE(v23) = 0;
  v12(v8, v10, v4);
  Color.init(valenceClassification:variant:colorScheme:)(v22, (unsigned __int8 *)&v23, (uint64_t)v8);
  uint64_t v16 = sub_256178428();
  v14(v10, v4);
  *(void *)(inited + 40) = v16;
  unint64_t v23 = inited;
  sub_256178018();
  sub_2560D6B50(v23);
  uint64_t v18 = v17;
  v14(v15, v4);
  return v18;
}

void sub_2560D6B50(unint64_t a1)
{
  if (a1 >> 62)
  {
    uint64_t v2 = sub_256178678();
    if (!v2) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v2) {
      goto LABEL_12;
    }
  }
  sub_2561785F8();
  if (v2 < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v3 = 0;
    do
    {
      uint64_t v4 = v3 + 1;
      uint64_t v5 = MEMORY[0x25A2A1000]();
      MEMORY[0x25A29FE80](v5);
      sub_2561785D8();
      sub_256178608();
      sub_256178618();
      sub_2561785E8();
      uint64_t v3 = v4;
    }
    while (v2 != v4);
  }
  else
  {
    uint64_t v6 = (void **)(a1 + 32);
    do
    {
      uint64_t v7 = *v6++;
      MEMORY[0x25A29FE80](v7);
      sub_2561785D8();
      sub_256178608();
      sub_256178618();
      sub_2561785E8();
      --v2;
    }
    while (v2);
  }
LABEL_12:
  swift_bridgeObjectRelease();

LABEL_16:
  JUMPOUT(0x25A2A0310);
}

__n128 sub_2560D6CBC@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t, uint64_t)@<X3>, uint64_t (*a5)(void)@<X4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>)
{
  double v14 = a8 - a7;
  int64_t v15 = *(void *)(a2 + 16);
  uint64_t v16 = MEMORY[0x263F8EE78];
  if (v15)
  {
    uint64_t v30 = MEMORY[0x263F8EE78];
    sub_2560E86BC(0, v15, 0);
    uint64_t v16 = v30;
    uint64_t v18 = (double *)(a2 + 32);
    unint64_t v19 = *(void *)(v30 + 16);
    do
    {
      double v20 = *v18;
      uint64_t v29 = v16;
      unint64_t v21 = *(void *)(v16 + 24);
      if (v19 >= v21 >> 1) {
        sub_2560E86BC(v21 > 1, v19 + 1, 1);
      }
      *(void *)(v16 + 16) = v19 + 1;
      *(double *)(v16 + 8 * v19 + 32) = (v20 - a7) / v14;
      ++v18;
      ++v19;
      --v15;
    }
    while (v15);
  }
  sub_2560D7058(a1, v16);
  sub_2561779B8();
  sub_2561779C8();
  sub_2561760B8();
  uint64_t v22 = sub_2561778E8();
  uint64_t v24 = v23;
  uint64_t v25 = sub_2561761F8();
  char v26 = sub_256176D88();
  a4(a3, a6);
  swift_bridgeObjectRelease();
  uint64_t v27 = a6 + *(int *)(a5(0) + 36);
  *(void *)uint64_t v27 = v29;
  __n128 result = v31;
  *(__n128 *)(v27 + 8) = v31;
  *(void *)(v27 + 24) = v32;
  *(void *)(v27 + 32) = v33;
  *(void *)(v27 + 40) = v25;
  *(unsigned char *)(v27 + 48) = v26;
  *(void *)(v27 + 56) = v22;
  *(void *)(v27 + 64) = v24;
  return result;
}

uint64_t sub_2560D6E80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>, double a8@<D0>, double a9@<D1>)
{
  char v9 = a6;
  uint64_t v10 = a5;
  uint64_t v12 = a3;
  double v16 = a9 - a8;
  int64_t v17 = *(void *)(a2 + 16);
  uint64_t v18 = MEMORY[0x263F8EE78];
  if (v17)
  {
    uint64_t v34 = MEMORY[0x263F8EE78];
    sub_2560E86BC(0, v17, 0);
    uint64_t v18 = v34;
    uint64_t v22 = (double *)(a2 + 32);
    unint64_t v23 = *(void *)(v34 + 16);
    do
    {
      double v24 = *v22;
      uint64_t v33 = v18;
      unint64_t v25 = *(void *)(v18 + 24);
      if (v23 >= v25 >> 1) {
        sub_2560E86BC(v25 > 1, v23 + 1, 1);
      }
      *(void *)(v18 + 16) = v23 + 1;
      *(double *)(v18 + 8 * v23 + 32) = (v24 - a8) / v16;
      ++v22;
      ++v23;
      --v17;
    }
    while (v17);
    char v9 = a6;
    uint64_t v10 = a5;
    uint64_t v12 = a3;
  }
  sub_2560D7058(a1, v18);
  sub_2561779B8();
  sub_2561779C8();
  sub_2561760B8();
  uint64_t v26 = sub_2561778E8();
  uint64_t v28 = v27;
  uint64_t v29 = sub_2561761F8();
  char v30 = sub_256176D88();
  *(void *)a7 = v12;
  *(void *)(a7 + 8) = a4;
  *(void *)(a7 + 16) = v10;
  *(unsigned char *)(a7 + 24) = v9;
  *(void *)(a7 + 32) = v33;
  *(_OWORD *)(a7 + 40) = v35;
  *(void *)(a7 + 56) = v36;
  *(void *)(a7 + 64) = v37;
  *(void *)(a7 + 72) = v29;
  *(unsigned char *)(a7 + 80) = v30;
  *(void *)(a7 + 88) = v26;
  *(void *)(a7 + 96) = v28;
  swift_retain();

  return swift_bridgeObjectRelease();
}

unint64_t sub_2560D7058(uint64_t a1, uint64_t a2)
{
  sub_256177E38();
  unint64_t v4 = *(void *)(a2 + 16);
  unint64_t result = sub_2560D74D8(0, v4, a2, v15);
  if ((v6 & 1) == 0)
  {
LABEL_4:
    unint64_t v7 = result - 1;
    if (__OFSUB__(result, 1))
    {
      __break(1u);
    }
    else if (v7 < v4)
    {
      if (result < v4)
      {
        unint64_t v8 = *(void *)(a1 + 16);
        if (v7 < v8)
        {
          if (result < v8)
          {
            uint64_t v9 = a1 + 32;
            uint64_t v10 = *(void *)(a1 + 32 + 8 * v7);
            uint64_t v11 = *(void *)(v9 + 8 * result);
            int64_t v12 = *(void *)(v10 + 16);
            if (v12 == *(void *)(v11 + 16))
            {
              double v13 = (v15 - *(double *)(a2 + 32 + 8 * v7))
                  / (*(double *)(a2 + 32 + 8 * result) - *(double *)(a2 + 32 + 8 * v7));
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              unint64_t v14 = sub_2560D755C(0, v12, v10, v11, v13);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return MEMORY[0x25A2A0310](v14);
            }
            goto LABEL_16;
          }
LABEL_15:
          __break(1u);
LABEL_16:
          __break(1u);
          goto LABEL_17;
        }
LABEL_14:
        __break(1u);
        goto LABEL_15;
      }
LABEL_13:
      __break(1u);
      goto LABEL_14;
    }
    __break(1u);
    goto LABEL_13;
  }
  if (v4)
  {
    unint64_t result = v4 - 1;
    goto LABEL_4;
  }
LABEL_17:
  __break(1u);
  return result;
}

double sub_2560D71BC@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  sub_2560D7714(0, (unint64_t *)&qword_269F42F40);
  if (a1)
  {
    double v4 = COERCE_DOUBLE(swift_allocObject());
    *(_OWORD *)(*(void *)&v4 + 16) = xmmword_2561A0040;
    *(void *)(*(void *)&v4 + 32) = sub_256177468();
    *(void *)(*(void *)&v4 + 40) = sub_256177478();
  }
  else
  {
    double v4 = COERCE_DOUBLE(swift_allocObject());
    *(_OWORD *)(*(void *)&v4 + 16) = xmmword_2561A0960;
    *(void *)(*(void *)&v4 + 32) = sub_256177468();
  }
  *(double *)&long long v6 = v4;
  sub_256178018();
  MEMORY[0x25A2A0310](*(void *)&v4);
  sub_2561760B8();
  double result = v4;
  *(_OWORD *)a2 = v6;
  *(_OWORD *)(a2 + 16) = v7;
  *(void *)(a2 + 32) = v8;
  return result;
}

uint64_t sub_2560D729C(void *a1, void *a2, double a3)
{
  uint64_t v6 = sub_256177408();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(a1, sel_CGColor);
  uint64_t v11 = sub_256178198();

  if (!v11)
  {
LABEL_11:
    id v22 = a1;
LABEL_20:
    JUMPOUT(0x25A29FF60);
  }
  id v12 = objc_msgSend(a2, sel_CGColor);
  uint64_t v13 = sub_256178198();

  if (!v13)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  unint64_t v14 = *(void *)(v11 + 16);
  if (!v14)
  {
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v15 = *(void *)(v13 + 16);
  if (!v15)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v14 < 2)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v15 < 2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v14 < 3)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v15 < 3)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  double v16 = *(double *)(v11 + 32) + (*(double *)(v13 + 32) - *(double *)(v11 + 32)) * a3;
  double v17 = *(double *)(v11 + 40) + (*(double *)(v13 + 40) - *(double *)(v11 + 40)) * a3;
  double v18 = *(double *)(v11 + 48);
  double v19 = *(double *)(v13 + 48);
  swift_bridgeObjectRelease();
  double v20 = *(double *)(v11 + 48);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F1B388], v6);
  return MEMORY[0x25A29FF50](v9, v16, v17, v18 + (v19 - v20) * a3, 1.0);
}

uint64_t sub_2560D74D8(uint64_t result, uint64_t a2, uint64_t a3, double a4)
{
  if (result == a2) {
    return 0;
  }
  uint64_t v4 = result;
  if (a2 >= result)
  {
    if (*(void *)(a3 + 16) <= result) {
      uint64_t v5 = result;
    }
    else {
      uint64_t v5 = *(void *)(a3 + 16);
    }
    while (result < a2)
    {
      if (v4 < 0) {
        goto LABEL_15;
      }
      if (v5 == result) {
        goto LABEL_16;
      }
      if (*(double *)(a3 + 32 + 8 * result) > a4) {
        return result;
      }
      if (a2 == ++result) {
        return 0;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_2560D755C(unint64_t result, int64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  int64_t v19 = result;
  unint64_t v5 = a2 - result;
  if (__OFSUB__(a2, result)) {
    goto LABEL_20;
  }
  double result = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v20 = MEMORY[0x263F8EE78];
    sub_2561785F8();
    double result = sub_25601DB3C();
    if (a2 < v19 || (v5 & 0x8000000000000000) != 0) {
      goto LABEL_21;
    }
    int64_t v10 = *(void *)(a3 + 16);
    if (v10 <= v19) {
      int64_t v10 = v19;
    }
    int64_t v11 = v10 - v19;
    if (*(void *)(a4 + 16) <= v19) {
      int64_t v12 = v19;
    }
    else {
      int64_t v12 = *(void *)(a4 + 16);
    }
    int64_t v13 = v12 - v19;
    uint64_t v14 = 16 * v19 + 32;
    uint64_t v15 = a3 + v14;
    uint64_t v16 = a4 + v14;
    while ((v19 & 0x8000000000000000) == 0)
    {
      if (!v11) {
        goto LABEL_18;
      }
      swift_retain();
      double result = sub_256178428();
      if (!v13) {
        goto LABEL_19;
      }
      double v17 = (void *)result;
      v16 += 16;
      swift_retain();
      double v18 = (void *)sub_256178428();
      sub_2560D729C(v17, v18, a5);

      sub_2561785D8();
      sub_256178608();
      sub_256178618();
      double result = sub_2561785E8();
      --v13;
      --v11;
      v15 += 16;
      if (!--v5) {
        return v20;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
  }
  return result;
}

uint64_t sub_2560D76FC(uint64_t a1, uint64_t a2)
{
  return sub_2560D7774(a1, a2, (uint64_t (*)(void))sub_255FD6724);
}

void sub_2560D7714(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_2561787F8();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_2560D775C(uint64_t a1, uint64_t a2)
{
  return sub_2560D7774(a1, a2, (uint64_t (*)(void))sub_25608C590);
}

uint64_t sub_2560D7774(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2560D77DC(uint64_t a1, uint64_t a2)
{
  return sub_2560D7774(a1, a2, (uint64_t (*)(void))sub_255FDDE50);
}

uint64_t sub_2560D77F4(uint64_t a1, uint64_t a2)
{
  return sub_2560D7774(a1, a2, (uint64_t (*)(void))sub_256081C84);
}

uint64_t *sub_2560D780C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    int64_t v10 = (uint64_t *)((char *)a2 + v8);
    sub_2560D7B50(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (uint64_t *)((char *)v4 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    sub_2560D7B50(0, &qword_269F42B40, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_256176AA8();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        sub_2560D7B50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v14, v15, v16);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      uint64_t v19 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
      uint64_t v20 = (char *)v14 + v19;
      unint64_t v21 = (char *)v15 + v19;
      uint64_t v22 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    }
    else
    {
      *uint64_t v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

void sub_2560D7B50(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2560D7BB4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_2560D7B50(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_256175D98();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  sub_2560D7B50(0, &qword_269F42B40, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_256176AA8();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
    uint64_t v9 = v6 + *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
    uint64_t v10 = sub_256176158();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    return v11(v9, v10);
  }
  else
  {
    return swift_release();
  }
}

void *sub_2560D7DD4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_2560D7B50(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_256175D98();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  sub_2560D7B50(0, &qword_269F42B40, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_256176AA8();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      sub_2560D7B50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    uint64_t v17 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
    uint64_t v18 = (char *)v12 + v17;
    uint64_t v19 = (char *)v13 + v17;
    uint64_t v20 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  }
  else
  {
    *uint64_t v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_2560D80C0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    uint64_t v9 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    sub_2560D83F4((uint64_t)a1 + v6, &qword_269F47D00, MEMORY[0x263F18520]);
    sub_2560D7B50(0, &qword_269F47D00, v9, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_256175D98();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v7, v8, v10);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = (void *)((char *)a1 + v11);
    uint64_t v13 = (void *)((char *)a2 + v11);
    sub_2560D83F4((uint64_t)a1 + v11, &qword_269F42B40, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs);
    sub_2560D7B50(0, &qword_269F42B40, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_256176AA8();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        sub_2560D7B50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v12, v13, v14);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      uint64_t v17 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
      uint64_t v18 = (char *)v12 + v17;
      uint64_t v19 = (char *)v13 + v17;
      uint64_t v20 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2560D83F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_2560D7B50(0, a2, a3, MEMORY[0x263F185C8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

_OWORD *sub_2560D8464(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  sub_2560D7B50(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  uint64_t v10 = v9;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_256175D98();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v7, v8, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  sub_2560D7B50(0, &qword_269F42B40, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, MEMORY[0x263F185C8]);
  uint64_t v16 = v15;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_256176AA8();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v14, 1, v17))
    {
      sub_2560D7B50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v13, v14, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v13, 0, 1, v17);
    }
    uint64_t v20 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
    unint64_t v21 = &v13[v20];
    uint64_t v22 = &v14[v20];
    uint64_t v23 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  return a1;
}

void *sub_2560D8760(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    sub_2560D83F4((uint64_t)a1 + v7, &qword_269F47D00, MEMORY[0x263F18520]);
    sub_2560D7B50(0, &qword_269F47D00, v10, MEMORY[0x263F185C8]);
    uint64_t v12 = v11;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_256175D98();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    sub_2560D83F4((uint64_t)a1 + v14, &qword_269F42B40, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs);
    sub_2560D7B50(0, &qword_269F42B40, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, MEMORY[0x263F185C8]);
    uint64_t v18 = v17;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_256176AA8();
      uint64_t v20 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v16, 1, v19))
      {
        sub_2560D7B50(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v15, v16, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v15, v16, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v15, 0, 1, v19);
      }
      uint64_t v22 = *(int *)(type metadata accessor for IntroPhaseSpecs() + 20);
      uint64_t v23 = &v15[v22];
      double v24 = &v16[v22];
      uint64_t v25 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2560D8AA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2560D8AB8);
}

uint64_t sub_2560D8AB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_2560D7B50(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_2560D7B50(0, &qword_269F42B50, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, MEMORY[0x263F185D0]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_2560D8C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2560D8C58);
}

uint64_t sub_2560D8C58(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_2560D7B50(0, &qword_269F42B48, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_2560D7B50(0, &qword_269F42B50, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, MEMORY[0x263F185D0]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for IntroPhaseHeaderText()
{
  uint64_t result = qword_269F46830;
  if (!qword_269F46830) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2560D8E30()
{
  sub_2560D7B50(319, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (v0 <= 0x3F)
  {
    sub_2560D7B50(319, &qword_269F42B40, (uint64_t (*)(uint64_t))type metadata accessor for IntroPhaseSpecs, MEMORY[0x263F185C8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_2560D8F64()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2560D8F80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v94 = a1;
  uint64_t v2 = sub_2561762D8();
  MEMORY[0x270FA5388](v2 - 8);
  char v93 = (char *)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_256175D98();
  uint64_t v77 = *(void *)(v78 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v78);
  uint64_t v75 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  long long v74 = (char *)&v72 - v6;
  uint64_t v7 = sub_256177958();
  uint64_t v91 = *(void *)(v7 - 8);
  uint64_t v92 = v7;
  MEMORY[0x270FA5388](v7);
  int v96 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_256176158();
  uint64_t v87 = *(void *)(v89 - 8);
  MEMORY[0x270FA5388](v89);
  uint64_t v86 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_256176EE8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v88 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v72 - v14;
  uint64_t v95 = type metadata accessor for IntroPhaseSpecs() - 8;
  uint64_t v16 = MEMORY[0x270FA5388](v95);
  uint64_t v83 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v82 = (uint64_t)&v72 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v72 - v20;
  sub_2560D9898();
  uint64_t v90 = v22;
  MEMORY[0x270FA5388](v22);
  uint64_t v79 = (char *)&v72 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = v1[1];
  uint64_t v97 = *v1;
  uint64_t v98 = v24;
  sub_255F5CE90();
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_256177028();
  uint64_t v27 = v26;
  char v29 = v28 & 1;
  uint64_t v73 = type metadata accessor for IntroPhaseHeaderText();
  uint64_t v30 = *(int *)(v73 + 24);
  uint64_t v76 = v1;
  uint64_t v80 = (char *)v1 + v30;
  sub_25611A408((uint64_t)v21);
  sub_256176DE8();
  char v31 = sub_256176138();
  uint64_t v32 = (unsigned int *)MEMORY[0x263F1A680];
  if ((v31 & 1) == 0) {
    uint64_t v32 = (unsigned int *)MEMORY[0x263F1A688];
  }
  uint64_t v33 = v88;
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v88, *v32, v10);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v33, v10);
  sub_256176F08();
  swift_release();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
  sub_2560D9C44((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for IntroPhaseSpecs);
  uint64_t v34 = sub_256176FD8();
  uint64_t v36 = v35;
  char v38 = v37 & 1;
  sub_255F67B2C(v25, v27, v29);
  swift_release();
  swift_bridgeObjectRelease();
  sub_256176E88();
  uint64_t v39 = sub_256176F88();
  uint64_t v84 = v40;
  uint64_t v85 = v39;
  int v81 = v41;
  uint64_t v88 = v42;
  sub_255F67B2C(v34, v36, v38);
  swift_bridgeObjectRelease();
  uint64_t v43 = v82;
  sub_25611A408(v82);
  uint64_t v44 = v43;
  int v46 = v86;
  uint64_t v45 = v87;
  uint64_t v47 = v89;
  (*(void (**)(char *, void, uint64_t))(v87 + 104))(v86, *MEMORY[0x263F18CF8], v89);
  char v48 = sub_256176148();
  unint64_t v49 = v46;
  uint64_t v50 = (uint64_t)v83;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v49, v47);
  uint64_t v51 = sub_2560D9BDC(v44, v50, (uint64_t (*)(void))type metadata accessor for IntroPhaseSpecs);
  if (v48)
  {
    char v52 = sub_25605FF84(v51);
    sub_2560D9C44(v50, (uint64_t (*)(void))type metadata accessor for IntroPhaseSpecs);
    uint64_t v53 = v78;
    uint64_t v54 = v77;
    uint64_t v55 = v75;
    uint64_t v56 = (uint64_t)v74;
    if (v52)
    {
      LODWORD(v95) = 0;
      uint64_t v89 = 1;
      goto LABEL_8;
    }
  }
  else
  {
    sub_2560D9C44(v50, (uint64_t (*)(void))type metadata accessor for IntroPhaseSpecs);
    uint64_t v53 = v78;
    uint64_t v54 = v77;
    uint64_t v55 = v75;
    uint64_t v56 = (uint64_t)v74;
  }
  uint64_t v89 = 0;
  LODWORD(v95) = 1;
LABEL_8:
  sub_2560D9C44(v44, (uint64_t (*)(void))type metadata accessor for IntroPhaseSpecs);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v87 = swift_getKeyPath();
  LODWORD(v86) = sub_256176A48();
  uint64_t v83 = (char *)swift_getKeyPath();
  sub_25611A114(v56);
  (*(void (**)(char *, void, uint64_t))(v54 + 104))(v55, *MEMORY[0x263F184F8], v53);
  char v58 = sub_256175D88();
  uint64_t v59 = *(void (**)(char *, uint64_t))(v54 + 8);
  v59(v55, v53);
  v59((char *)v56, v53);
  uint64_t v61 = v91;
  uint64_t v60 = v92;
  uint64_t v62 = (unsigned int *)MEMORY[0x263F1B968];
  if ((v58 & 1) == 0) {
    uint64_t v62 = (unsigned int *)MEMORY[0x263F1B998];
  }
  uint64_t v63 = v96;
  (*(void (**)(char *, void, uint64_t))(v91 + 104))(v96, *v62, v92);
  int v64 = v81 & 1;
  uint64_t v65 = (uint64_t)v93;
  (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v93, v63, v60);
  uint64_t v66 = (uint64_t)v79;
  uint64_t v67 = (uint64_t)&v79[*((int *)v90 + 9)];
  uint64_t v90 = (uint64_t (*)(void))MEMORY[0x263F190D8];
  sub_2560D9BDC(v65, v67, MEMORY[0x263F190D8]);
  uint64_t v69 = v84;
  uint64_t v68 = v85;
  *(void *)uint64_t v66 = v85;
  *(void *)(v66 + 8) = v69;
  LODWORD(v82) = v64;
  *(unsigned char *)(v66 + 16) = v64;
  uint64_t v70 = v89;
  *(void *)(v66 + 24) = v88;
  *(void *)(v66 + 32) = KeyPath;
  *(void *)(v66 + 40) = v70;
  *(unsigned char *)(v66 + 48) = v95;
  *(void *)(v66 + 56) = v87;
  *(void *)(v66 + 64) = 0x3FE3333333333333;
  *(_DWORD *)(v66 + 72) = v86;
  *(_WORD *)(v66 + 76) = 256;
  *(void *)(v66 + 80) = v83;
  *(unsigned char *)(v66 + 88) = 1;
  sub_255F67B94(v68, v69, v64);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_2560D9C44(v65, v90);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v96, v60);
  sub_255F67B2C(v68, v69, v82);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_2560D9CA4(v66, v94);
}

void sub_2560D9898()
{
  if (!qword_269F46840)
  {
    sub_2560D992C(255, &qword_269F46848, (void (*)(uint64_t))sub_2560D99C4, (unint64_t *)&qword_269F42C58, MEMORY[0x263F18968]);
    sub_2561762D8();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46840);
    }
  }
}

void sub_2560D992C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  if (!*a2)
  {
    a3(255);
    sub_2560D9B78(255, a4, a5, MEMORY[0x263F1A418]);
    unint64_t v8 = sub_2561761B8();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2560D99C4()
{
  if (!qword_269F46850)
  {
    sub_2560D9A24();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46850);
    }
  }
}

void sub_2560D9A24()
{
  if (!qword_269F46858)
  {
    sub_2560D992C(255, &qword_269F46860, (void (*)(uint64_t))sub_2560D9AB8, &qword_269F44EA0, MEMORY[0x263F8EF38]);
    sub_2560D9B18();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46858);
    }
  }
}

void sub_2560D9AB8()
{
  if (!qword_269F46868)
  {
    sub_2560614D4();
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F46868);
    }
  }
}

void sub_2560D9B18()
{
  if (!qword_269F45928)
  {
    unint64_t v0 = sub_256176B78();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F45928);
    }
  }
}

void sub_2560D9B78(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_2560D9BDC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2560D9C44(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2560D9CA4(uint64_t a1, uint64_t a2)
{
  sub_2560D9898();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2560D9D08()
{
  return sub_2560D9E54(&qword_269F46870, (void (*)(uint64_t))sub_2560D9898, (void (*)(void))sub_2560D9D58);
}

unint64_t sub_2560D9D58()
{
  unint64_t result = qword_269F46878;
  if (!qword_269F46878)
  {
    uint64_t v1 = MEMORY[0x263F18968];
    sub_2560D992C(255, &qword_269F46848, (void (*)(uint64_t))sub_2560D99C4, (unint64_t *)&qword_269F42C58, MEMORY[0x263F18968]);
    sub_2560D9E54(&qword_269F46880, (void (*)(uint64_t))sub_2560D99C4, (void (*)(void))sub_2560D9ED4);
    sub_2560DA0E8((unint64_t *)&qword_269F434F0, (unint64_t *)&qword_269F42C58, v1);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46878);
  }
  return result;
}

uint64_t sub_2560D9E54(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2560D9ED4()
{
  unint64_t result = qword_269F46888;
  if (!qword_269F46888)
  {
    sub_2560D9A24();
    sub_2560D9F7C();
    sub_2560DA14C((unint64_t *)&qword_269F45940, (void (*)(uint64_t))sub_2560D9B18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46888);
  }
  return result;
}

unint64_t sub_2560D9F7C()
{
  unint64_t result = qword_269F46890;
  if (!qword_269F46890)
  {
    uint64_t v1 = MEMORY[0x263F8EF38];
    sub_2560D992C(255, &qword_269F46860, (void (*)(uint64_t))sub_2560D9AB8, &qword_269F44EA0, MEMORY[0x263F8EF38]);
    sub_2560DA040();
    sub_2560DA0E8(&qword_269F45690, &qword_269F44EA0, v1);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46890);
  }
  return result;
}

unint64_t sub_2560DA040()
{
  unint64_t result = qword_269F46898;
  if (!qword_269F46898)
  {
    sub_2560D9AB8();
    sub_2560DA14C(&qword_269F45688, (void (*)(uint64_t))sub_2560614D4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46898);
  }
  return result;
}

uint64_t sub_2560DA0E8(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2560D9B78(255, a2, a3, MEMORY[0x263F1A418]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2560DA14C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for StateOfMindCalendarSpacerCell()
{
  return self;
}

void *sub_2560DA270(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    uint64_t v5 = (void *)a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v5;
    uint64_t v6 = *(int *)(a3 + 28);
    uint64_t v7 = (void *)(a1 + v6);
    unint64_t v8 = (uint64_t *)((char *)a2 + v6);
    sub_2560DA514(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
    swift_retain();
    swift_retain();
    id v9 = v5;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_256176AA8();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        sub_2560DA514(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v7, v8, v10);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      uint64_t v14 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      uint64_t v15 = (char *)v7 + v14;
      uint64_t v16 = (char *)v8 + v14;
      uint64_t v17 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

void sub_2560DA514(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2560DA578(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();

  uint64_t v4 = a1 + *(int *)(a2 + 28);
  sub_2560DA514(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_256176AA8();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
    uint64_t v7 = v4 + *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    uint64_t v8 = sub_256176158();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v9(v7, v8);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_2560DA710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(void **)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (void *)(a2 + v5);
  sub_2560DA514(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  swift_retain();
  swift_retain();
  id v8 = v4;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_256176AA8();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9))
    {
      sub_2560DA514(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v6, v7, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
    }
    uint64_t v12 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    uint64_t v13 = (char *)v6 + v12;
    uint64_t v14 = (char *)v7 + v12;
    uint64_t v15 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else
  {
    *uint64_t v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_2560DA95C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = (void *)a2[4];
  id v8 = (void *)a1[4];
  a1[4] = v7;
  id v9 = v7;

  if (a1 != a2)
  {
    uint64_t v10 = *(int *)(a3 + 28);
    uint64_t v11 = (void *)((char *)a1 + v10);
    uint64_t v12 = (void *)((char *)a2 + v10);
    uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_2560DEBC4((uint64_t)a1 + v10, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
    sub_2560DA514(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v13);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_256176AA8();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
      {
        sub_2560DA514(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v11, v12, v14);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
      }
      uint64_t v17 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      uint64_t v18 = (char *)v11 + v17;
      uint64_t v19 = (char *)v12 + v17;
      uint64_t v20 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2560DABE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (char *)(a1 + v5);
  uint64_t v7 = (char *)(a2 + v5);
  sub_2560DA514(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  uint64_t v9 = v8;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_256176AA8();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10))
    {
      sub_2560DA514(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v6, v7, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v6, v7, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
    }
    uint64_t v13 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    uint64_t v14 = &v6[v13];
    uint64_t v15 = &v7[v13];
    uint64_t v16 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_2560DAE18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  uint64_t v7 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  if (a1 != a2)
  {
    uint64_t v8 = *(int *)(a3 + 28);
    uint64_t v9 = (char *)(a1 + v8);
    uint64_t v10 = (char *)(a2 + v8);
    uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_2560DEBC4(a1 + v8, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
    sub_2560DA514(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v11);
    uint64_t v13 = v12;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_256176AA8();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v10, 1, v14))
      {
        sub_2560DA514(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v9, v10, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v9, 0, 1, v14);
      }
      uint64_t v17 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      uint64_t v18 = &v9[v17];
      uint64_t v19 = &v10[v17];
      uint64_t v20 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2560DB098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm);
}

uint64_t sub_2560DB0B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm);
}

uint64_t type metadata accessor for ReminderView(uint64_t a1)
{
  return sub_256008F08(a1, (uint64_t *)&unk_269F468A0);
}

void sub_2560DB0E8()
{
}

uint64_t sub_2560DB104()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2560DB120@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v102 = a2;
  uint64_t v3 = type metadata accessor for NotificationsSetupPhaseSpecs();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v97 = (uint64_t)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = type metadata accessor for ReminderView(0);
  uint64_t v90 = *(void *)(v95 - 8);
  MEMORY[0x270FA5388](v95);
  uint64_t v91 = v5;
  uint64_t v92 = (uint64_t)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = type metadata accessor for EditButton();
  MEMORY[0x270FA5388](v93);
  int v96 = (uint64_t *)((char *)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2560DDB48(0);
  uint64_t v94 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v101 = (uint64_t)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v100 = (uint64_t)&v84 - v10;
  sub_2560DDA10(0);
  uint64_t v89 = v11;
  uint64_t v88 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v85 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560DA514(0, &qword_269F468C8, (uint64_t (*)(uint64_t))sub_2560DDA10, MEMORY[0x263F8D8F0]);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v99 = (uint64_t)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v103 = (uint64_t)&v84 - v16;
  uint64_t v17 = type metadata accessor for BulletPointView(0);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v98 = (uint64_t)&v84 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v87 = (uint64_t)&v84 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v84 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v105 = (uint64_t)&v84 - v25;
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v26 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_2561755B8();
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();

  uint64_t v30 = sub_2560DBE04();
  uint64_t v32 = v31;
  *(void *)&v24[*(int *)(v17 + 28)] = swift_getKeyPath();
  uint64_t v33 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  sub_2560DA514(0, &qword_269F440E8, MEMORY[0x263F18D80], MEMORY[0x263F185C8]);
  uint64_t v104 = a1;
  uint64_t v86 = v34;
  swift_storeEnumTagMultiPayload();
  *(void *)uint64_t v24 = v27;
  *((void *)v24 + 1) = v29;
  *((void *)v24 + 2) = v30;
  *((void *)v24 + 3) = v32;
  strcpy(v24 + 32, "sun.max.fill");
  v24[45] = 0;
  *((_WORD *)v24 + 23) = -5120;
  uint64_t v35 = (uint64_t *)&v24[*(int *)(v17 + 32)];
  *uint64_t v35 = swift_getKeyPath();
  sub_2560DA514(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v33);
  swift_storeEnumTagMultiPayload();
  sub_2560DDD68((uint64_t)v24, v105, type metadata accessor for BulletPointView);
  id v36 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v37 = sub_2561755B8();
  uint64_t v39 = v38;
  swift_bridgeObjectRelease();

  uint64_t v40 = sub_2560DBFAC();
  uint64_t v42 = v41;
  *(void *)&v24[*(int *)(v17 + 28)] = swift_getKeyPath();
  uint64_t v43 = v104;
  swift_storeEnumTagMultiPayload();
  *(void *)uint64_t v24 = v37;
  *((void *)v24 + 1) = v39;
  *((void *)v24 + 2) = v40;
  *((void *)v24 + 3) = v42;
  *((void *)v24 + 4) = 0xD000000000000014;
  *((void *)v24 + 5) = 0x80000002561AC920;
  uint64_t v86 = v17;
  uint64_t v44 = (uint64_t *)&v24[*(int *)(v17 + 32)];
  *uint64_t v44 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  uint64_t v45 = v87;
  sub_2560DDD68((uint64_t)v24, v87, type metadata accessor for BulletPointView);
  int v46 = *(void **)(v43 + 32);
  if (objc_msgSend(v46, sel_hasEverEnabledAStateOfMindReminderNotification))
  {
    id v47 = objc_msgSend(v46, sel_customReminderSchedule);
    sub_2560758C8();
    unint64_t v48 = sub_256178008();

    if (v48 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v49 = sub_256178678();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v49 = *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v50 = v103;
    uint64_t v51 = v105;
    uint64_t v52 = (uint64_t)v85;
    if (v49)
    {
      unint64_t v107 = v48;
      swift_getKeyPath();
      sub_2560DA514(0, &qword_269F43B08, (uint64_t (*)(uint64_t))sub_2560758C8, MEMORY[0x263F8D488]);
      sub_256075908();
      sub_2560E0DB4(&qword_269F45A58, (void (*)(uint64_t))sub_2560758C8);
      sub_2560E0DB4(&qword_269F468E8, (void (*)(uint64_t))type metadata accessor for BulletPointView);
      sub_2561777C8();
      sub_2560DDA44();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v52, 0, 1, v53);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_2560DDA44();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v52, 1, 1, v55);
    }
    uint64_t v43 = v104;
    sub_2560DDD68(v52, v50, (uint64_t (*)(void))sub_2560DDA10);
    uint64_t v54 = 0;
  }
  else
  {
    uint64_t v54 = 1;
    uint64_t v50 = v103;
    uint64_t v51 = v105;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v88 + 56))(v50, v54, 1, v89);
  uint64_t v56 = v92;
  sub_2560DDE34(v43, v92, type metadata accessor for ReminderView);
  unint64_t v57 = (*(unsigned __int8 *)(v90 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
  uint64_t v58 = swift_allocObject();
  sub_2560DDD68(v56, v58 + v57, type metadata accessor for ReminderView);
  type metadata accessor for StateOfMindEntryModel(0);
  sub_2560E0DB4(&qword_269F42CB0, (void (*)(uint64_t))type metadata accessor for StateOfMindEntryModel);
  swift_retain();
  uint64_t v59 = sub_2561760E8();
  uint64_t v60 = (uint64_t)v96;
  *int v96 = v59;
  *(void *)(v60 + 8) = v61;
  char v106 = 0;
  sub_256177568();
  uint64_t v62 = v108;
  *(unsigned char *)(v60 + 16) = v107;
  *(void *)(v60 + 24) = v62;
  *(void *)(v60 + 32) = sub_2560DDDD0;
  *(void *)(v60 + 40) = v58;
  uint64_t v63 = (uint64_t *)(v60 + *(int *)(v93 + 28));
  *uint64_t v63 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  LOBYTE(v63) = sub_256176D98();
  uint64_t v64 = v97;
  sub_25611B298(v97);
  sub_2560DDE9C(v64, (uint64_t (*)(void))type metadata accessor for NotificationsSetupPhaseSpecs);
  sub_256175D48();
  uint64_t v66 = v65;
  uint64_t v68 = v67;
  uint64_t v70 = v69;
  uint64_t v72 = v71;
  uint64_t v73 = v101;
  sub_2560DDE34(v60, v101, (uint64_t (*)(void))type metadata accessor for EditButton);
  uint64_t v74 = v73 + *(int *)(v94 + 36);
  *(unsigned char *)uint64_t v74 = (_BYTE)v63;
  *(void *)(v74 + 8) = v66;
  *(void *)(v74 + 16) = v68;
  *(void *)(v74 + 24) = v70;
  *(void *)(v74 + 32) = v72;
  *(unsigned char *)(v74 + 40) = 0;
  sub_2560DDE9C(v60, (uint64_t (*)(void))type metadata accessor for EditButton);
  uint64_t v75 = v100;
  sub_2560DDD68(v73, v100, (uint64_t (*)(void))sub_2560DDB48);
  sub_2560DDE34(v51, (uint64_t)v24, type metadata accessor for BulletPointView);
  uint64_t v76 = v98;
  sub_2560DDE34(v45, v98, type metadata accessor for BulletPointView);
  uint64_t v77 = v50;
  uint64_t v78 = v99;
  sub_2560DDEFC(v77, v99);
  sub_2560DDE34(v75, v73, (uint64_t (*)(void))sub_2560DDB48);
  uint64_t v79 = v102;
  sub_2560DDE34((uint64_t)v24, v102, type metadata accessor for BulletPointView);
  sub_2560DD938();
  uint64_t v81 = v80;
  sub_2560DDE34(v76, v79 + *(int *)(v80 + 48), type metadata accessor for BulletPointView);
  sub_2560DDEFC(v78, v79 + *(int *)(v81 + 64));
  sub_2560DDE34(v73, v79 + *(int *)(v81 + 80), (uint64_t (*)(void))sub_2560DDB48);
  sub_2560DDE9C(v75, (uint64_t (*)(void))sub_2560DDB48);
  uint64_t v82 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_2560DEBC4(v103, &qword_269F468C8, (uint64_t (*)(uint64_t))sub_2560DDA10, MEMORY[0x263F8D8F0]);
  sub_2560DDE9C(v45, type metadata accessor for BulletPointView);
  sub_2560DDE9C(v105, type metadata accessor for BulletPointView);
  sub_2560DDE9C(v73, (uint64_t (*)(void))sub_2560DDB48);
  sub_2560DEBC4(v78, &qword_269F468C8, (uint64_t (*)(uint64_t))sub_2560DDA10, v82);
  sub_2560DDE9C(v76, type metadata accessor for BulletPointView);
  return sub_2560DDE9C((uint64_t)v24, type metadata accessor for BulletPointView);
}

uint64_t sub_2560DBE04()
{
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v1 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_2561755B8();
  swift_bridgeObjectRelease();

  uint64_t v3 = *(void **)(v0 + 32);
  if (objc_msgSend(v3, sel_hasEverEnabledAStateOfMindReminderNotification, 0xE000000000000000))
  {
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_middayNotificationsEnabled);
    id v4 = (id)qword_269F50C88;
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_2561755B8();
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_2560DBFAC()
{
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v1 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_2561755B8();
  swift_bridgeObjectRelease();

  uint64_t v3 = *(void **)(v0 + 32);
  if (objc_msgSend(v3, sel_hasEverEnabledAStateOfMindReminderNotification, 0xE000000000000000))
  {
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_endOfDayNotificationsEnabled);
    id v4 = (id)qword_269F50C88;
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_2561755B8();
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_2560DC154@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v33 = sub_256175668();
  uint64_t v4 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_256175688();
  uint64_t v7 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_256175868();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CustomReminderModel();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *a1;
  id v18 = v17;
  sub_256016624(v17, (uint64_t)v16);
  sub_256015DD0((uint64_t)v13);
  sub_256175678();
  sub_256175658();
  uint64_t v19 = sub_256175838();
  uint64_t v34 = v20;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v33);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v32);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_2560DDE9C((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for CustomReminderModel);
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v21 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_2561755B8();
  uint64_t v24 = v23;
  swift_bridgeObjectRelease();

  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v26 = type metadata accessor for BulletPointView(0);
  *(uint64_t *)((char *)a2 + *(int *)(v26 + 28)) = KeyPath;
  uint64_t v27 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  sub_2560DA514(0, &qword_269F440E8, MEMORY[0x263F18D80], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  uint64_t v28 = v34;
  *a2 = v19;
  a2[1] = v28;
  a2[2] = v22;
  a2[3] = v24;
  a2[4] = 0x6B636F6C63;
  a2[5] = 0xE500000000000000;
  uint64_t v29 = (uint64_t *)((char *)a2 + *(int *)(v26 + 32));
  *uint64_t v29 = swift_getKeyPath();
  sub_2560DA514(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v27);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_2560DC580@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for NotificationsSetupPhaseSpecs();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_256176798();
  sub_25611B298((uint64_t)v5);
  sub_2560DDE9C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for NotificationsSetupPhaseSpecs);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = 0x4024000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  sub_2560DF964(0, &qword_269F468B0, sub_2560DD904);
  return sub_2560DB120(v1, a1 + *(int *)(v7 + 44));
}

uint64_t sub_2560DC684@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v52 = a1;
  sub_2560DF800(0);
  uint64_t v53 = v3;
  MEMORY[0x270FA5388](v3);
  id v47 = (uint64_t *)((char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2560E0B84(0, &qword_269F46928, (uint64_t (*)(uint64_t))sub_2560DF91C, (uint64_t (*)(uint64_t))sub_2560DF800, MEMORY[0x263F19B20]);
  uint64_t v49 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v51 = (uint64_t)&v46 - v6;
  uint64_t v48 = type metadata accessor for BulletPointContent(0);
  MEMORY[0x270FA5388](v48);
  uint64_t v8 = (uint64_t **)((char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for NotificationsSetupPhaseSpecs();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560DF91C(0);
  uint64_t v50 = v12;
  MEMORY[0x270FA5388](v12);
  int v46 = (uint64_t *)((char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_256176158();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  id v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v46 - v19;
  type metadata accessor for BulletPointView(0);
  sub_25611B56C((uint64_t)v20);
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v18, *MEMORY[0x263F18CC8], v14);
  sub_2560E0DB4(&qword_269F43358, MEMORY[0x263F18D80]);
  char v21 = sub_256177E48();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v15 + 8);
  v22(v18, v14);
  v22(v20, v14);
  if (v21)
  {
    uint64_t v23 = sub_256176658();
    sub_25611B298((uint64_t)v11);
    sub_2560DDE9C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for NotificationsSetupPhaseSpecs);
    uint64_t v24 = (uint64_t)v47;
    *id v47 = v23;
    *(void *)(v24 + 8) = 0x4024000000000000;
    *(unsigned char *)(v24 + 16) = 0;
    sub_2560DF964(0, &qword_269F46950, (void (*)(uint64_t))type metadata accessor for BulletPointContent);
    uint64_t v26 = v24 + *(int *)(v25 + 44);
    uint64_t v27 = v2[1];
    uint64_t v28 = v2[2];
    uint64_t v29 = v2[3];
    uint64_t v30 = v2[4];
    uint64_t v31 = v2[5];
    *uint64_t v8 = *v2;
    v8[1] = v27;
    void v8[2] = v28;
    v8[3] = v29;
    v8[4] = v30;
    v8[5] = v31;
    uint64_t v32 = (void *)((char *)v8 + *(int *)(v48 + 28));
    *uint64_t v32 = swift_getKeyPath();
    sub_2560DA514(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
    swift_storeEnumTagMultiPayload();
    sub_2560DDD68((uint64_t)v8, v26, type metadata accessor for BulletPointContent);
    sub_2560DDE34(v24, v51, (uint64_t (*)(void))sub_2560DF800);
    swift_storeEnumTagMultiPayload();
    sub_2560E0DB4(&qword_269F46940, sub_2560DF91C);
    sub_2560E0DB4(&qword_269F46948, sub_2560DF800);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_256176898();
    uint64_t v33 = sub_2560DF800;
    uint64_t v34 = v24;
  }
  else
  {
    uint64_t v35 = sub_256176798();
    sub_25611B298((uint64_t)v11);
    sub_2560DDE9C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for NotificationsSetupPhaseSpecs);
    uint64_t v36 = (uint64_t)v46;
    *int v46 = v35;
    *(void *)(v36 + 8) = 0x4024000000000000;
    *(unsigned char *)(v36 + 16) = 0;
    sub_2560DF964(0, &qword_269F46938, (void (*)(uint64_t))type metadata accessor for BulletPointContent);
    uint64_t v38 = v36 + *(int *)(v37 + 44);
    uint64_t v39 = v2[1];
    uint64_t v40 = v2[2];
    uint64_t v41 = v2[3];
    uint64_t v42 = v2[4];
    uint64_t v43 = v2[5];
    *uint64_t v8 = *v2;
    v8[1] = v39;
    void v8[2] = v40;
    v8[3] = v41;
    v8[4] = v42;
    v8[5] = v43;
    uint64_t v44 = (void *)((char *)v8 + *(int *)(v48 + 28));
    *uint64_t v44 = swift_getKeyPath();
    sub_2560DA514(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
    swift_storeEnumTagMultiPayload();
    sub_2560DDD68((uint64_t)v8, v38, type metadata accessor for BulletPointContent);
    sub_2560DDE34(v36, v51, (uint64_t (*)(void))sub_2560DF91C);
    swift_storeEnumTagMultiPayload();
    sub_2560E0DB4(&qword_269F46940, sub_2560DF91C);
    sub_2560E0DB4(&qword_269F46948, sub_2560DF800);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_256176898();
    uint64_t v33 = sub_2560DF91C;
    uint64_t v34 = v36;
  }
  return sub_2560DDE9C(v34, (uint64_t (*)(void))v33);
}

uint64_t sub_2560DCE08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v69 = a1;
  uint64_t v67 = sub_2560E0C24;
  sub_2560DF848(0, &qword_269F46978, (uint64_t (*)(uint64_t))sub_2560E0C24, sub_2560E0D80, MEMORY[0x263F1B6D0]);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v68 = (uint64_t)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v66 = (uint64_t *)((char *)&v55 - v5);
  uint64_t v6 = type metadata accessor for LoggingFlowBlendMode();
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v63 = (uint64_t *)((char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v7);
  uint64_t v64 = (uint64_t)&v55 - v9;
  uint64_t v10 = sub_256176EE8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v58 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v55 - v14;
  uint64_t v16 = type metadata accessor for NotificationsSetupPhaseSpecs();
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v62 = (uint64_t)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v55 - v19;
  sub_2560E0B84(0, &qword_269F469A0, (uint64_t (*)(uint64_t))sub_2560E0DFC, (uint64_t (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode, MEMORY[0x263F18E28]);
  uint64_t v22 = v21 - 8;
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v55 - v23;
  sub_2560E0F78();
  uint64_t v61 = v25 - 8;
  uint64_t v26 = MEMORY[0x270FA5388](v25 - 8);
  uint64_t v65 = (uint64_t)&v55 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v59 = (uint64_t)&v55 - v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v60 = (uint64_t)&v55 - v30;
  unint64_t v57 = v1;
  swift_bridgeObjectRetain();
  uint64_t v56 = sub_2561774E8();
  type metadata accessor for BulletPointContent(0);
  sub_25611B298((uint64_t)v20);
  sub_256176E48();
  char v31 = sub_256176138();
  uint64_t v32 = (unsigned int *)MEMORY[0x263F1A680];
  if ((v31 & 1) == 0) {
    uint64_t v32 = (unsigned int *)MEMORY[0x263F1A688];
  }
  uint64_t v33 = v58;
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v58, *v32, v10);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v33, v10);
  uint64_t v34 = sub_256176F08();
  swift_release();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
  sub_2560DDE9C((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for NotificationsSetupPhaseSpecs);
  uint64_t KeyPath = swift_getKeyPath();
  int v36 = sub_256176A58();
  uint64_t v37 = swift_getKeyPath();
  uint64_t v38 = v63;
  *uint64_t v63 = v37;
  sub_2560DA514(0, &qword_269F47D00, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  uint64_t v39 = (uint64_t)v38;
  uint64_t v40 = v64;
  sub_2560DDD68(v39, v64, (uint64_t (*)(void))type metadata accessor for LoggingFlowBlendMode);
  sub_2560DDE34(v40, (uint64_t)&v24[*(int *)(v22 + 44)], (uint64_t (*)(void))type metadata accessor for LoggingFlowBlendMode);
  *(void *)uint64_t v24 = v56;
  *((void *)v24 + 1) = KeyPath;
  *((void *)v24 + 2) = v34;
  *((_DWORD *)v24 + 6) = v36;
  sub_2560DDE9C(v40, (uint64_t (*)(void))type metadata accessor for LoggingFlowBlendMode);
  uint64_t v41 = v62;
  sub_25611B298(v62);
  sub_2560DDE9C(v41, (uint64_t (*)(void))type metadata accessor for NotificationsSetupPhaseSpecs);
  sub_2561778E8();
  sub_256175F38();
  uint64_t v42 = v59;
  sub_2560E102C((uint64_t)v24, v59);
  uint64_t v43 = (_OWORD *)(v42 + *(int *)(v61 + 44));
  long long v44 = v71;
  *uint64_t v43 = v70;
  v43[1] = v44;
  v43[2] = v72;
  sub_2560E10D4((uint64_t)v24);
  uint64_t v45 = v60;
  sub_2560DDD68(v42, v60, (uint64_t (*)(void))sub_2560E0F78);
  uint64_t v46 = sub_256176798();
  uint64_t v48 = (uint64_t)v66;
  id v47 = v67;
  *uint64_t v66 = v46;
  *(void *)(v48 + 8) = 0;
  *(unsigned char *)(v48 + 16) = 0;
  sub_2560DF964(0, &qword_269F469C0, v47);
  sub_2560DD4FC(v57, v48 + *(int *)(v49 + 44));
  uint64_t v50 = v65;
  sub_2560DDE34(v45, v65, (uint64_t (*)(void))sub_2560E0F78);
  uint64_t v51 = v68;
  sub_2560E1174(v48, v68);
  uint64_t v52 = v69;
  sub_2560DDE34(v50, v69, (uint64_t (*)(void))sub_2560E0F78);
  sub_2560E121C();
  sub_2560E1174(v51, v52 + *(int *)(v53 + 48));
  sub_2560E12D0(v48);
  sub_2560DDE9C(v45, (uint64_t (*)(void))sub_2560E0F78);
  sub_2560E12D0(v51);
  return sub_2560DDE9C(v50, (uint64_t (*)(void))sub_2560E0F78);
}

uint64_t sub_2560DD4FC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for NotificationsSetupPhaseSpecs();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v53 = &v47[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_2561777B8();
  uint64_t v54 = *(void *)(v6 - 8);
  uint64_t v55 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = &v47[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2560E0D04(0);
  uint64_t v10 = v9 - 8;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = &v47[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v11);
  unint64_t v57 = &v47[-v14];
  uint64_t v15 = a1[1];
  uint64_t v58 = *a1;
  uint64_t v59 = v15;
  sub_255F5CE90();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_256177028();
  uint64_t v18 = v17;
  LOBYTE(v15) = v19 & 1;
  uint64_t v20 = sub_256176FC8();
  uint64_t v50 = v21;
  uint64_t v51 = v20;
  uint64_t v52 = v22;
  int v56 = v23 & 1;
  sub_255F67B2C(v16, v18, v15);
  swift_bridgeObjectRelease();
  uint64_t v24 = a1[3];
  uint64_t v58 = a1[2];
  uint64_t v59 = v24;
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_256177028();
  uint64_t v27 = v26;
  uint64_t v49 = v28;
  int v48 = v29 & 1;
  sub_2561777A8();
  LOBYTE(v15) = sub_256176D98();
  type metadata accessor for BulletPointContent(0);
  uint64_t v30 = v53;
  sub_25611B298((uint64_t)v53);
  sub_2560DDE9C((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for NotificationsSetupPhaseSpecs);
  sub_256175D48();
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v54;
  uint64_t v39 = v55;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v54 + 16))(v13, v8, v55);
  uint64_t v41 = &v13[*(int *)(v10 + 44)];
  *uint64_t v41 = v15;
  *((void *)v41 + 1) = v32;
  *((void *)v41 + 2) = v34;
  *((void *)v41 + 3) = v36;
  *((void *)v41 + 4) = v38;
  v41[40] = 0;
  (*(void (**)(unsigned char *, uint64_t))(v40 + 8))(v8, v39);
  uint64_t v42 = v57;
  sub_2560DDD68((uint64_t)v13, (uint64_t)v57, (uint64_t (*)(void))sub_2560E0D04);
  LOBYTE(v40) = v56;
  LOBYTE(v58) = v56;
  sub_2560DDE34((uint64_t)v42, (uint64_t)v13, (uint64_t (*)(void))sub_2560E0D04);
  uint64_t v44 = v50;
  uint64_t v43 = v51;
  *(void *)a2 = v51;
  *(void *)(a2 + 8) = v44;
  *(unsigned char *)(a2 + 16) = v40;
  *(void *)(a2 + 24) = v52;
  *(void *)(a2 + 32) = v25;
  *(void *)(a2 + 40) = v27;
  LOBYTE(v42) = v48;
  *(unsigned char *)(a2 + 48) = v48;
  *(void *)(a2 + 56) = v49;
  *(_WORD *)(a2 + 64) = 256;
  sub_2560E0C58();
  sub_2560DDE34((uint64_t)v13, a2 + *(int *)(v45 + 64), (uint64_t (*)(void))sub_2560E0D04);
  sub_255F67B94(v43, v44, v56);
  swift_bridgeObjectRetain();
  sub_255F67B94(v25, v27, (char)v42);
  swift_bridgeObjectRetain();
  sub_2560DDE9C((uint64_t)v57, (uint64_t (*)(void))sub_2560E0D04);
  sub_2560DDE9C((uint64_t)v13, (uint64_t (*)(void))sub_2560E0D04);
  sub_255F67B2C(v25, v27, (char)v42);
  swift_bridgeObjectRelease();
  sub_255F67B2C(v43, v44, v58);
  return swift_bridgeObjectRelease();
}

void sub_2560DD904(uint64_t a1)
{
}

void sub_2560DD938()
{
  if (!qword_269F468C0)
  {
    type metadata accessor for BulletPointView(255);
    sub_2560DA514(255, &qword_269F468C8, (uint64_t (*)(uint64_t))sub_2560DDA10, MEMORY[0x263F8D8F0]);
    sub_2560DDB48(255);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_269F468C0);
    }
  }
}

uint64_t type metadata accessor for BulletPointView(uint64_t a1)
{
  return sub_256008F08(a1, (uint64_t *)&unk_269F468F0);
}

void sub_2560DDA10(uint64_t a1)
{
}

void sub_2560DDA44()
{
  if (!qword_269F468D8)
  {
    sub_2560DA514(255, &qword_269F43B08, (uint64_t (*)(uint64_t))sub_2560758C8, MEMORY[0x263F8D488]);
    sub_2560758C8();
    type metadata accessor for BulletPointView(255);
    sub_256075908();
    sub_2560E0DB4(&qword_269F45A58, (void (*)(uint64_t))sub_2560758C8);
    unint64_t v0 = sub_2561777E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F468D8);
    }
  }
}

void sub_2560DDB48(uint64_t a1)
{
}

uint64_t sub_2560DDB74()
{
  uint64_t v1 = (int *)(type metadata accessor for ReminderView(0) - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_release();
  swift_release();

  uint64_t v3 = v2 + v1[9];
  sub_2560DA514(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_256176AA8();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    }
    uint64_t v6 = v3 + *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    uint64_t v7 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_2560DDD68(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2560DDDD0()
{
  uint64_t v1 = *(void *)(type metadata accessor for ReminderView(0) - 8);
  return (*(uint64_t (**)(void))(v0
                              + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
                              + 16))();
}

uint64_t sub_2560DDE34(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2560DDE9C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2560DDEFC(uint64_t a1, uint64_t a2)
{
  sub_2560DA514(0, &qword_269F468C8, (uint64_t (*)(uint64_t))sub_2560DDA10, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_2560DDF90(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    uint64_t v10 = *(int *)(a3 + 28);
    uint64_t v11 = (uint64_t *)((char *)a1 + v10);
    uint64_t v12 = (uint64_t *)((char *)a2 + v10);
    a1[4] = a2[4];
    a1[5] = v9;
    sub_2560DA514(0, &qword_269F440E8, MEMORY[0x263F18D80], MEMORY[0x263F185C8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_256176158();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = *(int *)(a3 + 32);
    uint64_t v16 = (uint64_t *)((char *)v4 + v15);
    uint64_t v17 = (uint64_t *)((char *)a2 + v15);
    sub_2560DA514(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = sub_256176AA8();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        sub_2560DA514(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v16, v17, v18);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      uint64_t v21 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      uint64_t v22 = (char *)v16 + v21;
      char v23 = (char *)v17 + v21;
      uint64_t v24 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    }
    else
    {
      *uint64_t v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_2560DE2FC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  sub_2560DA514(0, &qword_269F440E8, MEMORY[0x263F18D80], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_256176158();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  sub_2560DA514(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_256176AA8();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
    uint64_t v9 = v6 + *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    uint64_t v10 = sub_256176158();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    return v11(v9, v10);
  }
  else
  {
    return swift_release();
  }
}

void *sub_2560DE52C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[5];
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (void *)((char *)a1 + v9);
  uint64_t v11 = (void *)((char *)a2 + v9);
  a1[4] = a2[4];
  a1[5] = v8;
  sub_2560DA514(0, &qword_269F440E8, MEMORY[0x263F18D80], MEMORY[0x263F185C8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_256176158();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  else
  {
    *uint64_t v10 = *v11;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = *(int *)(a3 + 32);
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  sub_2560DA514(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_256176AA8();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      sub_2560DA514(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v19 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    uint64_t v20 = (char *)v14 + v19;
    uint64_t v21 = (char *)v15 + v19;
    uint64_t v22 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  }
  else
  {
    *uint64_t v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_2560DE840(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 28);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    uint64_t v9 = (uint64_t (*)(uint64_t))MEMORY[0x263F18D80];
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_2560DEBC4((uint64_t)a1 + v6, &qword_269F440E8, MEMORY[0x263F18D80], MEMORY[0x263F185C8]);
    sub_2560DA514(0, &qword_269F440E8, v9, v10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_256176158();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v7, v8, v11);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = *(int *)(a3 + 32);
    uint64_t v13 = (void *)((char *)a1 + v12);
    uint64_t v14 = (void *)((char *)a2 + v12);
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_2560DEBC4((uint64_t)a1 + v12, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
    sub_2560DA514(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v15);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_256176AA8();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
      {
        sub_2560DA514(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v13, v14, v16);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
      }
      uint64_t v19 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      uint64_t v20 = (char *)v13 + v19;
      uint64_t v21 = (char *)v14 + v19;
      uint64_t v22 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    }
    else
    {
      *uint64_t v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2560DEBC4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_2560DA514(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

_OWORD *sub_2560DEC20(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  sub_2560DA514(0, &qword_269F440E8, MEMORY[0x263F18D80], MEMORY[0x263F185C8]);
  uint64_t v11 = v10;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v8, v9, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = *(int *)(a3 + 32);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  sub_2560DA514(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  uint64_t v17 = v16;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = sub_256176AA8();
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18))
    {
      sub_2560DA514(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v14, v15, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v14, v15, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v14, 0, 1, v18);
    }
    uint64_t v21 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    uint64_t v22 = &v14[v21];
    char v23 = &v15[v21];
    uint64_t v24 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  return a1;
}

void *sub_2560DEF24(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v9 = *(int *)(a3 + 28);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = (uint64_t (*)(uint64_t))MEMORY[0x263F18D80];
    uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_2560DEBC4((uint64_t)a1 + v9, &qword_269F440E8, MEMORY[0x263F18D80], MEMORY[0x263F185C8]);
    sub_2560DA514(0, &qword_269F440E8, v12, v13);
    uint64_t v15 = v14;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v10, v11, v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    uint64_t v17 = *(int *)(a3 + 32);
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_2560DEBC4((uint64_t)a1 + v17, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
    sub_2560DA514(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v20);
    uint64_t v22 = v21;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = sub_256176AA8();
      uint64_t v24 = *(void *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v19, 1, v23))
      {
        sub_2560DA514(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v18, v19, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v18, 0, 1, v23);
      }
      uint64_t v26 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      uint64_t v27 = &v18[v26];
      uint64_t v28 = &v19[v26];
      uint64_t v29 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2560DF298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2560DF2AC);
}

uint64_t sub_2560DF2AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_2560DA514(0, &qword_269F44188, MEMORY[0x263F18D80], MEMORY[0x263F185D0]);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_2560DA514(0, &qword_269F43F38, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185D0]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_2560DF438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2560DF44C);
}

uint64_t sub_2560DF44C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_2560DA514(0, &qword_269F44188, MEMORY[0x263F18D80], MEMORY[0x263F185D0]);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_2560DA514(0, &qword_269F43F38, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185D0]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_2560DF5D8()
{
  sub_2560DA514(319, &qword_269F440E8, MEMORY[0x263F18D80], MEMORY[0x263F185C8]);
  if (v0 <= 0x3F)
  {
    sub_2560DA514(319, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unint64_t sub_2560DF714()
{
  unint64_t result = qword_269F46900;
  if (!qword_269F46900)
  {
    sub_2560DF848(255, &qword_269F46908, (uint64_t (*)(uint64_t))sub_2560DD904, sub_2560DF7B0, MEMORY[0x263F1B6D0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46900);
  }
  return result;
}

uint64_t sub_2560DF7B0()
{
  return sub_2560E0DB4(&qword_269F46910, sub_2560DD904);
}

uint64_t sub_2560DF7E4()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_2560DF800(uint64_t a1)
{
}

void sub_2560DF848(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t type metadata accessor for BulletPointContent(uint64_t a1)
{
  return sub_256008F08(a1, (uint64_t *)&unk_269F46958);
}

uint64_t sub_2560DF8E8()
{
  return sub_2560E0DB4(&qword_269F46920, (void (*)(uint64_t))type metadata accessor for BulletPointContent);
}

void sub_2560DF91C(uint64_t a1)
{
}

void sub_2560DF964(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_256176048();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t *sub_2560DF9D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    uint64_t v8 = *(int *)(a3 + 28);
    uint64_t v9 = (uint64_t *)((char *)a2 + v8);
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    a1[4] = a2[4];
    a1[5] = v7;
    sub_2560DA514(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_256176AA8();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      {
        sub_2560DA514(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v10, v9, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v10, v9, v11);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
      }
      uint64_t v15 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      uint64_t v16 = (char *)v10 + v15;
      uint64_t v17 = (char *)v9 + v15;
      uint64_t v18 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *uint64_t v10 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_2560DFC70(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  sub_2560DA514(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_256176AA8();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
    uint64_t v7 = v4 + *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    uint64_t v8 = sub_256176158();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v9(v7, v8);
  }
  else
  {
    return swift_release();
  }
}

void *sub_2560DFE08(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (void *)((char *)a2 + v7);
  uint64_t v9 = (void *)((char *)a1 + v7);
  a1[4] = a2[4];
  a1[5] = v6;
  sub_2560DA514(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_256176AA8();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      sub_2560DA514(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v9, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v9, v8, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    }
    uint64_t v13 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    uint64_t v14 = (char *)v9 + v13;
    uint64_t v15 = (char *)v8 + v13;
    uint64_t v16 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    *uint64_t v9 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_2560E0050(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 28);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_2560DEBC4((uint64_t)a1 + v6, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
    sub_2560DA514(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v9);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_256176AA8();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        sub_2560DA514(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v7, v8, v10);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      uint64_t v13 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      uint64_t v14 = (char *)v7 + v13;
      uint64_t v15 = (char *)v8 + v13;
      uint64_t v16 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_2560E02F0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  sub_2560DA514(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  uint64_t v9 = v8;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_256176AA8();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10))
    {
      sub_2560DA514(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
      memcpy(v6, v7, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v6, v7, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
    }
    uint64_t v13 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
    uint64_t v14 = &v6[v13];
    uint64_t v15 = &v7[v13];
    uint64_t v16 = sub_256176158();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
  }
  return a1;
}

void *sub_2560E0520(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v9 = *(int *)(a3 + 28);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_2560DEBC4((uint64_t)a1 + v9, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
    sub_2560DA514(0, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, v12);
    uint64_t v14 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_256176AA8();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v11, 1, v15))
      {
        sub_2560DA514(0, (unint64_t *)&qword_269F42AE0, MEMORY[0x263F19F18], MEMORY[0x263F8D8F0]);
        memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v10, v11, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v10, 0, 1, v15);
      }
      uint64_t v18 = *(int *)(type metadata accessor for NotificationsSetupPhaseSpecs() + 20);
      uint64_t v19 = &v10[v18];
      uint64_t v20 = &v11[v18];
      uint64_t v21 = sub_256176158();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2560E07A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2560E07B4);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_2560DA514(0, &qword_269F43F38, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_2560E0898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2560E08AC);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_2560DA514(0, &qword_269F43F38, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185D0]);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_2560E0988()
{
}

void sub_2560E0998()
{
  sub_2560DA514(319, &qword_269F439D0, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsSetupPhaseSpecs, MEMORY[0x263F185C8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_2560E0A68()
{
  unint64_t result = qword_269F46968;
  if (!qword_269F46968)
  {
    sub_2560E0B84(255, &qword_269F46970, (uint64_t (*)(uint64_t))sub_2560DF91C, (uint64_t (*)(uint64_t))sub_2560DF800, MEMORY[0x263F19B28]);
    sub_2560E0DB4(&qword_269F46940, sub_2560DF91C);
    sub_2560E0DB4(&qword_269F46948, sub_2560DF800);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F46968);
  }
  return result;
}

void sub_2560E0B84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4(255);
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_2560E0C08()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_2560E0C24(uint64_t a1)
{
}

void sub_2560E0C58()
{
  if (!qword_269F46988)
  {
    sub_255F672DC(255, (unint64_t *)&qword_269F43530, MEMORY[0x263F1A830], MEMORY[0x263F190F0], MEMORY[0x263F18E28]);
    sub_2560E0D04(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_269F46988);
    }
  }
}

void sub_2560E0D04(uint64_t a1)
{
}

void sub_2560E0D24(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2561761B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2560E0D80()
{
  return sub_2560E0DB4(&qword_269F46998, sub_2560E0C24);
}

uint64_t sub_2560E0DB4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2560E0DFC()
{
  if (!qword_269F469A8)
  {
    sub_2560E0E90();
    sub_255F672DC(255, (unint64_t *)&qword_269F45928, MEMORY[0x263F19E50], MEMORY[0x263F19E40], MEMORY[0x263F1A180]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F469A8);
    }
  }
}

void sub_2560E0E90()
{
  if (!qword_269F469B0)
  {
    sub_2560DA514(255, (unint64_t *)&qword_269F42BD8, (uint64_t (*)(uint64_t))sub_2560E0F20, MEMORY[0x263F1A418]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F469B0);
    }
  }
}

void sub_2560E0F20()
{
  if (!qword_269F42BE0)
  {
    unint64_t v0 = sub_256178448();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F42BE0);
    }
  }
}

void sub_2560E0F78()
{
  if (!qword_269F469B8)
  {
    sub_2560E0B84(255, &qword_269F469A0, (uint64_t (*)(uint64_t))sub_2560E0DFC, (uint64_t (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode, MEMORY[0x263F18E28]);
    unint64_t v0 = sub_2561761B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269F469B8);
    }
  }
}

uint64_t sub_2560E102C(uint64_t a1, uint64_t a2)
{
  sub_2560E0B84(0, &qword_269F469A0, (uint64_t (*)(uint64_t))sub_2560E0DFC, (uint64_t (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode, MEMORY[0x263F18E28]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2560E10D4(uint64_t a1)
{
  sub_2560E0B84(0, &qword_269F469A0, (uint64_t (*)(uint64_t))sub_2560E0DFC, (uint64_t (*)(uint64_t))type metadata accessor for LoggingFlowBlendMode, MEMORY[0x263F18E28]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2560E1174(uint64_t a1, uint64_t a2)
{
  sub_2560DF848(0, &qword_269F46978, (uint64_t (*)(uint64_t))sub_2560E0C24, sub_2560E0D80, MEMORY[0x263F1B6D0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2560E121C()
{
  if (!qword_269F469C8)
  {
    sub_2560E0F78();
    sub_2560DF848(255, &qword_269F46978, (uint64_t (*)(uint64_t))sub_2560E0C24, sub_2560E0D80, MEMORY[0x263F1B6D0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269F469C8);
    }
  }
}

uint64_t sub_2560E12D0(uint64_t a1)
{
  sub_2560DF848(0, &qword_269F46978, (uint64_t (*)(uint64_t))sub_2560E0C24, sub_2560E0D80, MEMORY[0x263F1B6D0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2560E1374()
{
  unint64_t result = qword_269F469D0;
  if (!qword_269F469D0)
  {
    sub_2560DA514(255, &qword_269F469D8, (uint64_t (*)(uint64_t))sub_2560E121C, MEMORY[0x263F1BAC8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F469D0);
  }
  return result;
}

uint64_t sub_2560E13FC(void *a1, __n128 a2)
{
  uint64_t v3 = 0;
  uint64_t v4 = *(char *)(v2 + 16);
  uint64_t v5 = qword_2561A7518[v4];
  if (v4 < 2) {
    uint64_t v6 = 3;
  }
  else {
    uint64_t v6 = 4;
  }
  uint64_t v94 = 116 * *(unsigned __int8 *)(v2 + 16) + 128;
  uint64_t v96 = v5 - 1;
  float v7 = (float)(v5 - 1);
  float v8 = (float)(v6 + 1);
  uint64_t v101 = v6;
  uint64_t v95 = v6 + 2 * v5;
  uint64_t v9 = (void *)MEMORY[0x263F8EE78];
  uint64_t v10 = (char *)MEMORY[0x263F8EE78];
LABEL_7:
  uint64_t v11 = 0;
  uint64_t v97 = v3 + 1;
  uint64_t v102 = v3;
  a2.n128_f32[0] = (float)((float)((float)v3 / (float)v94) * 3.1416) + (float)((float)((float)v3 / (float)v94) * 3.1416);
  __n128 v98 = a2;
  *(void *)&long long v12 = a2.n128_u64[0];
  *((void *)&v12 + 1) = COERCE_UNSIGNED_INT(-1.0);
  long long v99 = v12;
  while (1)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_256096818(0, v9[2] + 1, 1, v9);
    }
    unint64_t v14 = v9[2];
    unint64_t v13 = v9[3];
    if (v14 >= v13 >> 1) {
      uint64_t v9 = sub_256096818((void *)(v13 > 1), v14 + 1, 1, v9);
    }
    long long v15 = v99;
    *((float *)&v15 + 1) = (float)v11 / v7;
    v9[2] = v14 + 1;
    uint64_t v16 = &v9[4 * v14];
    *((_OWORD *)v16 + 2) = v15;
    *((_DWORD *)v16 + 12) = 0;
    uint64_t v17 = sub_2560E1BDC(v3, v11);
    uint64_t v18 = *(void *)(v17 + 16);
    int64_t v19 = *((void *)v10 + 2);
    int64_t v20 = v19 + v18;
    if (__OFADD__(v19, v18)) {
      break;
    }
    uint64_t v21 = v17;
    int isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v20 <= *((void *)v10 + 3) >> 1)
    {
      if (*(void *)(v21 + 16)) {
        goto LABEL_23;
      }
    }
    else
    {
      if (v19 <= v20) {
        int64_t v23 = v19 + v18;
      }
      else {
        int64_t v23 = v19;
      }
      uint64_t v10 = sub_2560966E8(isUniquelyReferenced_nonNull_native, v23, 1, v10);
      if (*(void *)(v21 + 16))
      {
LABEL_23:
        uint64_t v24 = *((void *)v10 + 2);
        if ((*((void *)v10 + 3) >> 1) - v24 < v18) {
          goto LABEL_105;
        }
        uint64_t v25 = &v10[4 * v24 + 32];
        uint64_t v26 = (char *)(v21 + 32);
        size_t v27 = 4 * v18;
        if (v21 + 32 < (unint64_t)&v25[4 * v18] && v25 < &v26[v27]) {
          goto LABEL_117;
        }
        memcpy(v25, v26, v27);
        if (v18)
        {
          uint64_t v28 = *((void *)v10 + 2);
          BOOL v29 = __OFADD__(v28, v18);
          uint64_t v30 = v28 + v18;
          if (v29) {
            goto LABEL_108;
          }
          *((void *)v10 + 2) = v30;
        }
        goto LABEL_9;
      }
    }
    if (v18) {
      goto LABEL_98;
    }
LABEL_9:
    ++v11;
    swift_bridgeObjectRelease();
    if (v5 == v11)
    {
      uint64_t v31 = 0;
      __n128 v32 = v98;
      v32.n128_u32[1] = 1.0;
      v32.n128_u32[3] = 0;
      __n128 v100 = v32;
      while (1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v9 = sub_256096818(0, v9[2] + 1, 1, v9);
        }
        unint64_t v34 = v9[2];
        unint64_t v33 = v9[3];
        if (v34 >= v33 >> 1) {
          uint64_t v9 = sub_256096818((void *)(v33 > 1), v34 + 1, 1, v9);
        }
        uint64_t v35 = v31 + 1;
        __n128 v36 = v100;
        v36.n128_f32[2] = (float)((float)(v31 + 1) / v8) + -1.0;
        v9[2] = v34 + 1;
        uint64_t v37 = (__n128 *)&v9[4 * v34];
        v37[2] = v36;
        v37[3].n128_u32[0] = 1065353216;
        if (__OFADD__(v31, v5)) {
          goto LABEL_99;
        }
        uint64_t v38 = sub_2560E1BDC(v3, v31 + v5);
        uint64_t v39 = *(void *)(v38 + 16);
        int64_t v40 = *((void *)v10 + 2);
        int64_t v41 = v40 + v39;
        if (__OFADD__(v40, v39)) {
          goto LABEL_100;
        }
        uint64_t v42 = v38;
        uint64_t v43 = (char *)swift_isUniquelyReferenced_nonNull_native();
        if (v43 && v41 <= *((void *)v10 + 3) >> 1)
        {
          if (*(void *)(v42 + 16)) {
            goto LABEL_46;
          }
        }
        else
        {
          if (v40 <= v41) {
            int64_t v44 = v40 + v39;
          }
          else {
            int64_t v44 = v40;
          }
          uint64_t v10 = sub_2560966E8(v43, v44, 1, v10);
          if (*(void *)(v42 + 16))
          {
LABEL_46:
            uint64_t v45 = *((void *)v10 + 2);
            if ((*((void *)v10 + 3) >> 1) - v45 < v39) {
              goto LABEL_106;
            }
            uint64_t v46 = &v10[4 * v45 + 32];
            id v47 = (char *)(v42 + 32);
            size_t v48 = 4 * v39;
            if (v42 + 32 < (unint64_t)&v46[4 * v39] && v46 < &v47[v48]) {
              goto LABEL_117;
            }
            memcpy(v46, v47, v48);
            if (v39)
            {
              uint64_t v49 = *((void *)v10 + 2);
              BOOL v29 = __OFADD__(v49, v39);
              uint64_t v50 = v49 + v39;
              if (v29) {
                goto LABEL_109;
              }
              *((void *)v10 + 2) = v50;
            }
            goto LABEL_31;
          }
        }
        if (v39) {
          goto LABEL_101;
        }
LABEL_31:
        swift_bridgeObjectRelease();
        uint64_t v31 = v35;
        if (v101 == v35)
        {
          uint64_t v51 = v5;
          uint64_t v52 = v96;
          while (1)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v9 = sub_256096818(0, v9[2] + 1, 1, v9);
            }
            unint64_t v54 = v9[2];
            unint64_t v53 = v9[3];
            if (v54 >= v53 >> 1) {
              uint64_t v9 = sub_256096818((void *)(v53 > 1), v54 + 1, 1, v9);
            }
            long long v55 = v98.n128_u32[0];
            *((float *)&v55 + 1) = (float)v52 / v7;
            v9[2] = v54 + 1;
            int v56 = &v9[4 * v54];
            *((_OWORD *)v56 + 2) = v55;
            *((_DWORD *)v56 + 12) = 0;
            if (__OFADD__(v51, v101)) {
              goto LABEL_102;
            }
            uint64_t v57 = v5;
            uint64_t v58 = sub_2560E1BDC(v102, v51 + v101);
            uint64_t v59 = *(void *)(v58 + 16);
            int64_t v60 = *((void *)v10 + 2);
            int64_t v61 = v60 + v59;
            if (__OFADD__(v60, v59)) {
              goto LABEL_103;
            }
            uint64_t v62 = v58;
            uint64_t v63 = (char *)swift_isUniquelyReferenced_nonNull_native();
            if (!v63 || v61 > *((void *)v10 + 3) >> 1)
            {
              if (v60 <= v61) {
                int64_t v64 = v60 + v59;
              }
              else {
                int64_t v64 = v60;
              }
              uint64_t v10 = sub_2560966E8(v63, v64, 1, v10);
            }
            uint64_t v5 = v57;
            if (*(void *)(v62 + 16))
            {
              uint64_t v65 = *((void *)v10 + 2);
              if ((*((void *)v10 + 3) >> 1) - v65 < v59) {
                goto LABEL_107;
              }
              uint64_t v66 = &v10[4 * v65 + 32];
              uint64_t v67 = (char *)(v62 + 32);
              size_t v68 = 4 * v59;
              if (v62 + 32 < (unint64_t)&v66[4 * v59] && v66 < &v67[v68]) {
                goto LABEL_117;
              }
              memcpy(v66, v67, v68);
              if (v59)
              {
                uint64_t v69 = *((void *)v10 + 2);
                BOOL v29 = __OFADD__(v69, v59);
                uint64_t v70 = v69 + v59;
                if (v29) {
                  goto LABEL_110;
                }
                *((void *)v10 + 2) = v70;
              }
            }
            else if (v59)
            {
              goto LABEL_104;
            }
            swift_bridgeObjectRelease();
            --v52;
            ++v51;
            if (v52 == -1)
            {
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v9 = sub_256096818(0, v9[2] + 1, 1, v9);
              }
              unint64_t v72 = v9[2];
              unint64_t v71 = v9[3];
              if (v72 >= v71 >> 1) {
                uint64_t v9 = sub_256096818((void *)(v71 > 1), v72 + 1, 1, v9);
              }
              *(void *)&long long v73 = v98.n128_u32[0];
              *((void *)&v73 + 1) = COERCE_UNSIGNED_INT(0.5);
              v9[2] = v72 + 1;
              uint64_t v74 = (uint64_t)&v9[4 * v72 + 4];
              *(_OWORD *)uint64_t v74 = v73;
              *(_DWORD *)(v74 + 16) = -1082130432;
              uint64_t v75 = sub_2560E1BDC(v102, v95);
              uint64_t v76 = *(void *)(v75 + 16);
              int64_t v77 = *((void *)v10 + 2);
              int64_t v78 = v77 + v76;
              if (__OFADD__(v77, v76)) {
                goto LABEL_111;
              }
              uint64_t v79 = v75;
              uint64_t v80 = (char *)swift_isUniquelyReferenced_nonNull_native();
              if (!v80 || v78 > *((void *)v10 + 3) >> 1)
              {
                if (v77 <= v78) {
                  int64_t v81 = v77 + v76;
                }
                else {
                  int64_t v81 = v77;
                }
                uint64_t v10 = sub_2560966E8(v80, v81, 1, v10);
              }
              uint64_t v5 = v57;
              if (*(void *)(v79 + 16))
              {
                uint64_t v82 = *((void *)v10 + 2);
                if ((*((void *)v10 + 3) >> 1) - v82 < v76) {
                  goto LABEL_113;
                }
                uint64_t v83 = &v10[4 * v82 + 32];
                uint64_t v84 = (char *)(v79 + 32);
                size_t v85 = 4 * v76;
                if (v79 + 32 < (unint64_t)&v83[4 * v76] && v83 < &v84[v85]) {
                  goto LABEL_117;
                }
                memcpy(v83, v84, v85);
                if (v76)
                {
                  uint64_t v86 = *((void *)v10 + 2);
                  BOOL v29 = __OFADD__(v86, v76);
                  uint64_t v87 = v86 + v76;
                  if (v29) {
                    goto LABEL_114;
                  }
                  *((void *)v10 + 2) = v87;
                }
              }
              else if (v76)
              {
                goto LABEL_112;
              }
              swift_bridgeObjectRelease();
              uint64_t v3 = v97;
              if (v97 != v94) {
                goto LABEL_7;
              }
              unint64_t v88 = v9[2];
              *(void *)(v2 + 48) = v88;
              *(void *)(v2 + 56) = *((void *)v10 + 2);
              if (v88 >> 58) {
                goto LABEL_115;
              }
              id v89 = objc_msgSend(a1, sel_newBufferWithBytes_length_options_, v9 + 4, 32 * v88, 0);
              swift_bridgeObjectRelease();
              *(void *)(v2 + 64) = v89;
              swift_unknownObjectRelease();
              uint64_t v90 = *(void *)(v2 + 56);
              if ((unint64_t)(v90 - 0x2000000000000000) >> 62 != 3) {
                goto LABEL_116;
              }
              id v91 = objc_msgSend(a1, sel_newBufferWithBytes_length_options_, v10 + 32, 4 * v90, 0);
              swift_bridgeObjectRelease();
              *(void *)(v2 + 72) = v91;
              return swift_unknownObjectRelease();
            }
          }
        }
      }
    }
  }
  __break(1u);
LABEL_98:
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
LABEL_105:
  __break(1u);
LABEL_106:
  __break(1u);
LABEL_107:
  __break(1u);
LABEL_108:
  __break(1u);
LABEL_109:
  __break(1u);
LABEL_110:
  __break(1u);
LABEL_111:
  __break(1u);
LABEL_112:
  __break(1u);
LABEL_113:
  __break(1u);
LABEL_114:
  __break(1u);
LABEL_115:
  __break(1u);
LABEL_116:
  __break(1u);
LABEL_117:
  uint64_t result = sub_2561786C8();
  __break(1u);
  return result;
}

uint64_t sub_2560E1BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(char *)(v2 + 16);
  uint64_t v4 = 4;
  if (v3 >= 2) {
    uint64_t v4 = 5;
  }
  uint64_t v5 = v4 + qword_2561A7530[v3];
  uint64_t v6 = a1 * v5;
  if ((unsigned __int128)(a1 * (__int128)v5) >> 64 != (a1 * v5) >> 63)
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v7 = v6 + a2;
  if (__OFADD__(v6, a2))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = v8 % v5;
  unint64_t v10 = v6 + v8 % v5;
  if (__OFADD__(v6, v8 % v5))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (__OFADD__(a1, 1))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v11 = (a1 + 1) % (116 * v3 + 128) * v5;
  unint64_t v12 = v11 + a2;
  if (__OFADD__(v11, a2))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_256032F88();
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_2561A3CC0;
  if ((v7 & 0x8000000000000000) == 0 && !HIDWORD(v7))
  {
    *(_DWORD *)(result + 32) = v7;
    if ((v10 & 0x8000000000000000) == 0 && !HIDWORD(v10))
    {
      int v14 = v11 + v9;
      *(_DWORD *)(result + 36) = v10;
      if (((v11 + v9) & 0x8000000000000000) == 0)
      {
        *(_DWORD *)(result + 40) = v14;
        *(_DWORD *)(result + 44) = v7;
        *(_DWORD *)(result + 48) = v14;
        if ((v12 & 0x8000000000000000) == 0 && !HIDWORD(v12))
        {
          *(_DWORD *)(result + 52) = v12;
          return result;
        }
      }
    }
  }
LABEL_23:
  uint64_t result = sub_256178648();
  __break(1u);
  return result;
}

uint64_t sub_2560E1D88()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DiscMesh()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for DiscMesh.Quality(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2560E1EB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscMesh.Quality()
{
  return &type metadata for DiscMesh.Quality;
}

unint64_t sub_2560E1EF4()
{
  unint64_t result = qword_269F469E0;
  if (!qword_269F469E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269F469E0);
  }
  return result;
}

id sub_2560E1F48()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F12A80]), sel_init);
  id v1 = objc_msgSend(v0, sel_attributes);
  id v2 = objc_msgSend(v0, sel_layouts);
  id result = objc_msgSend(v1, sel_objectAtIndexedSubscript_, 0);
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  unsigned int v4 = result;
  objc_msgSend(result, sel_setFormat_, 30);

  id result = objc_msgSend(v1, sel_objectAtIndexedSubscript_, 0);
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v5 = result;
  objc_msgSend(result, sel_setOffset_, 0);

  id result = objc_msgSend(v1, sel_objectAtIndexedSubscript_, 0);
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  unsigned int v6 = result;
  objc_msgSend(result, sel_setBufferIndex_, 0);

  id result = objc_msgSend(v1, sel_objectAtIndexedSubscript_, 4);
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v7 = result;
  objc_msgSend(result, sel_setFormat_, 28);

  id result = objc_msgSend(v1, sel_objectAtIndexedSubscript_, 4);
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v8 = result;
  objc_msgSend(result, sel_setOffset_, 12);

  id result = objc_msgSend(v1, sel_objectAtIndexedSubscript_, 4);
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v9 = result;
  objc_msgSend(result, sel_setBufferIndex_, 0);

  id result = objc_msgSend(v2, sel_objectAtIndexedSubscript_, 0);
  if (result)
  {
    unint64_t v10 = result;
    objc_msgSend(result, sel_setStride_, 32);

    return v0;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_2560E2158(void *a1, char a2)
{
  *(void *)(v2 + 24) = 1;
  *(void *)(v2 + 32) = 0x3DCCCCCD3F800000;
  *(_DWORD *)(v2 + 40) = 1097859072;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(unsigned char *)(v2 + 16) = a2;
  sub_2560E13FC(a1, (__n128)0);
  return v2;
}

char *static StateOfMindOverlayRoomViewController.createInteractiveChartViewController(forTypeIdentifier:chartFactory:applicationItems:display:preferredOverlay:restorationUserActivity:trendModel:factorDisplayTypes:additionalChartOptions:)(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_2560E8C48(a3, a4, a5, a6, a7, a9, a10);
}

char *StateOfMindOverlayRoomViewController.__allocating_init(displayDate:applicationItems:factorDisplayTypes:sleepChartFormatter:addDataViewControllerProvider:preferredOverlay:)(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  id v13 = objc_allocWithZone(v6);
  return StateOfMindOverlayRoomViewController.init(displayDate:applicationItems:factorDisplayTypes:sleepChartFormatter:addDataViewControllerProvider:preferredOverlay:)(a1, a2, a3, a4, a5, a6);
}

char *StateOfMindOverlayRoomViewController.init(displayDate:applicationItems:factorDisplayTypes:sleepChartFormatter:addDataViewControllerProvider:preferredOverlay:)(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  unint64_t v7 = v6;
  uint64_t v31 = a6;
  uint64_t ObjectType = swift_getObjectType();
  sub_2560E91C4(0, (unint64_t *)&qword_269F44D30, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v13 - 8);
  long long v15 = (char *)&v28 - v14;
  *(void *)&v7[OBJC_IVAR____TtC14MentalHealthUI36StateOfMindOverlayRoomViewController_preferredOverlayContextLocation] = 0;
  *(void *)&v7[OBJC_IVAR____TtC14MentalHealthUI36StateOfMindOverlayRoomViewController_sleepChartFormatter] = a4;
  *(void *)&v7[OBJC_IVAR____TtC14MentalHealthUI36StateOfMindOverlayRoomViewController_addDataViewControllerProvider] = a5;
  sub_255FB58F8(0, (unint64_t *)&qword_269F46A00);
  uint64_t v16 = v7;
  id v29 = a4;
  swift_unknownObjectRetain();
  sub_256141D2C(a2, 0, 0);
  *(void *)&v16[OBJC_IVAR____TtC14MentalHealthUI36StateOfMindOverlayRoomViewController_stateOfMindInteractiveChartDisplayType] = v17;
  sub_256141D2C(a2, 0, 1);
  *(void *)&v16[OBJC_IVAR____TtC14MentalHealthUI36StateOfMindOverlayRoomViewController_stateOfMindInteractiveChartDisplayTypeWithLegend] = v18;

  sub_25602402C(a1, (uint64_t)v15);
  uint64_t v19 = sub_256175868();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v15, 1, v19) != 1)
  {
    uint64_t v21 = (void *)sub_2561757F8();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v19);
  }
  if (a3)
  {
    uint64_t v22 = (void *)sub_256177FF8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v22 = 0;
  }
  int64_t v23 = (objc_class *)type metadata accessor for StateOfMindOverlayRoomViewController();
  v32.receiver = v16;
  v32.super_class = v23;
  uint64_t v24 = (char *)objc_msgSendSuper2(&v32, sel_initWithDisplayDate_applicationItems_factorDisplayTypes_mode_, v21, a2, v22, 3);

  id v25 = static StateOfMindOverlayRoomViewController.stateOfMindContextLocation(for:)();
  swift_unknownObjectRelease();
  sub_2560240C0(a1);
  uint64_t v26 = *(void **)&v24[OBJC_IVAR____TtC14MentalHealthUI36StateOfMindOverlayRoomViewController_preferredOverlayContextLocation];
  *(void *)&v24[OBJC_IVAR____TtC14MentalHealthUI36StateOfMindOverlayRoomViewController_preferredOverlayContextLocation] = v25;

  return v24;
}

id static StateOfMindOverlayRoomViewController.stateOfMindContextLocation(for:)()
{
  uint64_t v0 = sub_256175B68();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_256178328();
  id result = 0;
  if (v6) {
    return result;
  }
  type metadata accessor for StateOfMindOverlayRoomViewController();
  uint64_t v7 = static StateOfMindOverlayRoomViewController.supportedStateOfMindDomainContexts()();
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8) {
    goto LABEL_9;
  }
  if (*(void *)(v7 + 32) != v4)
  {
    uint64_t v9 = 0;
    uint64_t v10 = v8 - 1;
    while (v10 != v9)
    {
      uint64_t v11 = *(void *)(v7 + 40 + 8 * v9++);
      if (v11 == v4) {
        goto LABEL_8;
      }
    }
LABEL_9:
    swift_bridgeObjectRelease();
    sub_256175B48();
    unint64_t v12 = sub_256175B58();
    os_log_type_t v13 = sub_256178218();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v21 = v19;
      *(_DWORD *)uint64_t v14 = 136446466;
      uint64_t v15 = sub_256178978();
      uint64_t v20 = sub_255FB29A8(v15, v16, &v21);
      sub_256178458();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2048;
      uint64_t v20 = v4;
      sub_256178458();
      _os_log_impl(&dword_255F58000, v12, v13, "[%{public}s] Asked to create context location for unsupported domain: %ld", (uint8_t *)v14, 0x16u);
      uint64_t v17 = v19;
      swift_arrayDestroy();
      MEMORY[0x25A2A1E90](v17, -1, -1);
      MEMORY[0x25A2A1E90](v14, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return 0;
  }
  uint64_t v9 = 0;
LABEL_8:
  swift_bridgeObjectRelease();
  return objc_msgSend(objc_allocWithZone(MEMORY[0x263F468C8]), sel_initWithContainerIndex_sectionIndex_itemIndex_, 1, 0, v9);
}

id sub_2560E2AE0()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_256175B68();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256175B48();
  char v6 = sub_256175B58();
  os_log_type_t v7 = sub_256178238();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v17 = v1;
    uint64_t v9 = (uint8_t *)v8;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v19 = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    uint64_t v11 = sub_256178978();
    uint64_t v18 = sub_255FB29A8(v11, v12, &v19);
    sub_256178458();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_255F58000, v6, v7, "[%{public}s] View did load", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2A1E90](v10, -1, -1);
    os_log_type_t v13 = v9;
    uint64_t v1 = v17;
    MEMORY[0x25A2A1E90](v13, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v14 = (objc_class *)type metadata accessor for StateOfMindOverlayRoomViewController();
  v20.receiver = v1;
  v20.super_class = v14;
  return objc_msgSendSuper2(&v20, sel_viewDidLoad);
}

id sub_2560E2DB8()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_256175B68();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2560E91C4(0, &qword_269F45188, MEMORY[0x263F07920]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v47 - v7;
  sub_2560E91C4(0, (unint64_t *)&qword_269F44D30, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v47 - v10;
  id v12 = objc_msgSend(v1, sel_primaryDisplayType);
  if (v12)
  {
    os_log_type_t v13 = v12;
    self;
    uint64_t v14 = swift_dynamicCastObjCClass();
    if (v14)
    {
      uint64_t v15 = (void *)v14;
      id v16 = v13;
      id v17 = objc_msgSend(v15, sel_baseDisplayType);
      if (v17)
      {
        uint64_t v18 = v17;
        unint64_t v19 = (unint64_t)objc_msgSend(v17, sel_hk_interactiveChartOptions);
      }
      else
      {

        unint64_t v19 = 0;
      }
    }
    else
    {
      unint64_t v19 = (unint64_t)objc_msgSend(v13, sel_hk_interactiveChartOptions);
    }
    unint64_t v48 = (unint64_t)objc_msgSend(v1, sel_additionalChartOptions) | v19;
    id v29 = objc_msgSend(v1, sel_applicationItems);
    id v47 = objc_msgSend(v29, sel_healthStore);

    id v30 = objc_msgSend(v1, sel_applicationItems);
    id v31 = objc_msgSend(v30, sel_unitController);

    id v32 = objc_msgSend(v1, sel_applicationItems);
    id v33 = objc_msgSend(v32, sel_dateCache);

    id v34 = objc_msgSend(v1, sel_applicationItems);
    id v35 = objc_msgSend(v34, sel_chartDataCacheController);

    id v36 = objc_msgSend(v1, sel_applicationItems);
    id v37 = objc_msgSend(v36, sel_timeScopeController);

    id v38 = objc_msgSend(v1, sel_applicationItems);
    id v39 = objc_msgSend(v38, sel_sampleDateRangeController);

    id v40 = objc_msgSend(v1, sel_displayDate);
    if (v40)
    {
      int64_t v41 = v40;
      sub_256175818();

      uint64_t v42 = sub_256175868();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v11, 0, 1, v42);
    }
    else
    {
      uint64_t v43 = sub_256175868();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v11, 1, 1, v43);
    }
    type metadata accessor for StateOfMindChartViewController();
    uint64_t v44 = sub_256175A08();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v8, 1, 1, v44);
    id v45 = v13;
    id v46 = sub_25603E644(v47, v45, v31, v33, v35, v37, v39, (uint64_t)v11, (uint64_t)v8, v48);
    objc_msgSend(v46, sel_setCurrentOverlayLocationProvider_, v1);

    return v46;
  }
  else
  {
    sub_256175B48();
    objc_super v20 = sub_256175B58();
    os_log_type_t v21 = sub_256178228();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v50 = v23;
      *(_DWORD *)uint64_t v22 = 136446210;
      unint64_t v48 = (unint64_t)(v22 + 4);
      uint64_t v24 = sub_256178978();
      uint64_t v49 = sub_255FB29A8(v24, v25, &v50);
      sub_256178458();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_255F58000, v20, v21, "[%{public}s] Asked to create chart overlay without a display type", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2A1E90](v23, -1, -1);
      MEMORY[0x25A2A1E90](v22, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v26 = (objc_class *)type metadata accessor for StateOfMindOverlayRoomViewController();
    v51.receiver = v1;
    v51.super_class = v26;
    id v27 = objc_msgSendSuper2(&v51, sel_createChartOverlayViewController);
    return v27;
  }
}

id sub_2560E34E0(uint64_t a1, uint64_t a2)
{
  if (a1 != 3) {
    return 0;
  }
  id result = *(id *)(v2
                 + OBJC_IVAR____TtC14MentalHealthUI36StateOfMindOverlayRoomViewController_preferredOverlayContextLocation);
  if (result)
  {
    *(void *)(v2
              + OBJC_IVAR____TtC14MentalHealthUI36StateOfMindOverlayRoomViewController_preferredOverlayContextLocation) = 0;
    return result;
  }
  if (a2 == 2) {
    return objc_msgSend(objc_allocWithZone(MEMORY[0x263F468C8]), sel_initWithContainerIndex_sectionIndex_itemIndex_, 2, 0, 0);
  }
  else {
    return 0;
  }
}

uint64_t sub_2560E36D8(void *a1)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v4 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  sub_2561755B8();
  swift_bridgeObjectRelease();

  sub_2560E9AB4(0, (unint64_t *)&qword_269F43AB0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v78 = swift_allocObject();
  *(_OWORD *)(v78 + 16) = xmmword_2561A27B0;
  uint64_t v80 = swift_allocObject();
  *(_OWORD *)(v80 + 16) = xmmword_2561A3730;
  id v5 = objc_msgSend(v1, sel_applicationItems, 0xE000000000000000);
  sub_255FB58F8(0, &qword_269F46AA0);
  uint64_t v6 = (void *)qword_269F50C88;
  id v7 = a1;
  id v8 = v6;
  swift_bridgeObjectRetain();
  sub_2561755B8();
  swift_bridgeObjectRelease();

  uint64_t v9 = (void *)sub_2561783E8();
  swift_bridgeObjectRelease();
  uint64_t v10 = (objc_class *)type metadata accessor for StateOfMindSampleCountContext();
  uint64_t v11 = (char *)objc_allocWithZone(v10);
  int64_t v77 = v1;
  uint64_t v12 = OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem;
  *(void *)&v11[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem] = 0;
  os_log_type_t v13 = &v11[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_accessibilityIdentifier_];
  *(void *)os_log_type_t v13 = 0x6E6152796C696144;
  *((void *)v13 + 1) = 0xEA00000000006567;
  *(void *)&v11[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayChartController] = v7;
  sub_255FB58F8(0, (unint64_t *)&qword_269F46A00);
  id v14 = v7;
  uint64_t v15 = v11;
  sub_256141D2C(v5, v9, 0);
  *(void *)&v15[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayDisplayType] = v16;
  *(void *)&v15[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayPredicate] = v9;
  id v17 = *(void **)&v11[v12];
  *(void *)&v11[v12] = 0;
  id v18 = v9;

  unint64_t v19 = (objc_class *)type metadata accessor for StateOfMindOverlayContext();
  v83.receiver = v15;
  v83.super_class = v19;
  id v20 = objc_msgSendSuper2(&v83, sel_init, 0xE000000000000000);

  *(void *)(v80 + 32) = v20;
  id v21 = objc_msgSend(v2, sel_applicationItems);
  uint64_t v22 = (void *)qword_269F50C88;
  id v23 = v14;
  id v24 = v22;
  swift_bridgeObjectRetain();
  sub_2561755B8();
  swift_bridgeObjectRelease();

  unint64_t v25 = (void *)sub_2561783E8();
  swift_bridgeObjectRelease();
  uint64_t v26 = (char *)objc_allocWithZone(v10);
  uint64_t v27 = OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem;
  *(void *)&v26[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_currentContextItem] = 0;
  uint64_t v28 = &v26[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_accessibilityIdentifier_];
  strcpy(&v26[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_accessibilityIdentifier_], "MomentaryRange");
  v28[15] = -18;
  *(void *)&v26[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayChartController] = v23;
  id v29 = v23;
  id v30 = v26;
  sub_256141D2C(v21, v25, 0);
  *(void *)&v30[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayDisplayType] = v31;
  *(void *)&v30[OBJC_IVAR____TtC14MentalHealthUI25StateOfMindOverlayContext_overlayPredicate] = v25;
  id v32 = *(void **)&v26[v27];
  *(void *)&v26[v27] = 0;
  id v33 = v25;

  v82.receiver = v30;
  v82.super_class = v19;
  id v34 = objc_msgSendSuper2(&v82, sel_init, 0xE000000000000000);

  *(void *)(v80 + 40) = v34;
  sub_256178018();
  id v35 = objc_allocWithZone(MEMORY[0x263F468D0]);
  sub_2560D5480(0, &qword_269F46AA8);
  id v36 = (void *)sub_256177FF8();
  swift_bridgeObjectRelease();
  id v37 = objc_msgSend(v35, sel_initWithSectionTitle_overlayContextItems_, 0, v36);

  *(void *)(v78 + 32) = v37;
  sub_256178018();
  id v38 = objc_allocWithZone(MEMORY[0x263F468D8]);
  id v39 = (void *)sub_256177EA8();
  swift_bridgeObjectRelease();
  sub_255FB58F8(0, (unint64_t *)&unk_269F46AB0);
  id v40 = (void *)sub_256177FF8();
  swift_bridgeObjectRelease();
  id v79 = objc_msgSend(v38, sel_initWithContainerTitle_overlayContextSections_, v39, v40);

  id v41 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  sub_2561755B8();
  swift_bridgeObjectRelease();

  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_2561A27B0;
  uint64_t v43 = static StateOfMindOverlayRoomViewController.supportedStateOfMindDomainContexts()();
  id v44 = v29;
  id v45 = v77;
  sub_2560E887C(v43, v45, v44);
  swift_bridgeObjectRelease();

  id v46 = objc_allocWithZone(MEMORY[0x263F468D0]);
  id v47 = (void *)sub_256177FF8();
  swift_bridgeObjectRelease();
  id v48 = objc_msgSend(v46, sel_initWithSectionTitle_overlayContextItems_, 0, v47, 0xE000000000000000);

  *(void *)(v42 + 32) = v48;
  sub_256178018();
  id v49 = objc_allocWithZone(MEMORY[0x263F468D8]);
  uint64_t v50 = (void *)sub_256177EA8();
  swift_bridgeObjectRelease();
  objc_super v51 = (void *)sub_256177FF8();
  swift_bridgeObjectRelease();
  id v52 = objc_msgSend(v49, sel_initWithContainerTitle_overlayContextSections_, v50, v51);

  unint64_t v53 = sub_2560E4B18();
  id v54 = v44;
  long long v55 = (char *)v45;
  unint64_t v56 = sub_2560E8AD8(v53, v55, v54);
  swift_bridgeObjectRelease();

  id v57 = objc_msgSend(v55, sel_buildFactorContextsAllowingDeselection_, 0);
  if (v57)
  {
    uint64_t v58 = v57;
    id v59 = objc_msgSend(v57, sel_activeFactorContexts);
    sub_255FB58F8(0, &qword_269F46A88);
    unint64_t v60 = sub_256178008();

    if (v60 >> 62)
    {
      sub_255FB58F8(0, &qword_269F43AD0);
      swift_bridgeObjectRetain();
      uint64_t v61 = sub_256178668();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_256178838();
      sub_255FB58F8(0, &qword_269F43AD0);
      uint64_t v61 = v60;
    }
    swift_bridgeObjectRelease();
    sub_255FCD4F8(v56);
    unint64_t v62 = v61;
    id v63 = objc_msgSend(v58, sel_inactiveFactorContexts);
    unint64_t v64 = sub_256178008();

    if (v64 >> 62)
    {
      sub_255FB58F8(0, &qword_269F43AD0);
      swift_bridgeObjectRetain();
      sub_256178668();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_256178838();
      sub_255FB58F8(0, &qword_269F43AD0);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v65 = swift_bridgeObjectRetain();
    sub_255FCD4F8(v65);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    unint64_t v56 = v62;
  }
  id v66 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  sub_2561755B8();
  swift_bridgeObjectRelease();

  uint64_t v67 = swift_allocObject();
  *(_OWORD *)(v67 + 16) = xmmword_2561A27B0;
  swift_bridgeObjectRetain();
  if (v56 >> 62)
  {
    sub_256178668();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_256178838();
  }
  swift_bridgeObjectRelease();
  id v68 = objc_allocWithZone(MEMORY[0x263F468D0]);
  uint64_t v69 = (void *)sub_256177FF8();
  swift_bridgeObjectRelease();
  id v70 = objc_msgSend(v68, sel_initWithSectionTitle_overlayContextItems_, 0, v69, 0xE000000000000000);

  *(void *)(v67 + 32) = v70;
  sub_256178018();
  id v71 = objc_allocWithZone(MEMORY[0x263F468D8]);
  unint64_t v72 = (void *)sub_256177EA8();
  swift_bridgeObjectRelease();
  long long v73 = (void *)sub_256177FF8();
  swift_bridgeObjectRelease();
  id v74 = objc_msgSend(v71, sel_initWithContainerTitle_overlayContextSections_, v72, v73);

  uint64_t v75 = swift_allocObject();
  *(_OWORD *)(v75 + 16) = xmmword_2561A7550;
  *(void *)(v75 + 32) = v79;
  *(void *)(v75 + 40) = v52;
  *(void *)(v75 + 48) = v74;
  uint64_t v81 = v75;
  sub_256178018();
  return v81;
}

void sub_2560E4298(void **a1@<X0>, char *a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  sub_2560E91C4(0, &qword_269F45188, MEMORY[0x263F07920]);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  os_log_type_t v13 = (char *)&v32 - v12;
  id v14 = *a1;
  id v15 = objc_msgSend(v14, sel_objectType);
  id v16 = objc_msgSend(v15, sel_code);

  if (v16 == (id)63)
  {
    sub_255FB58F8(0, (unint64_t *)&unk_269F46AC0);
    id v17 = objc_msgSend(a2, sel_applicationItems);
    id v18 = *(void **)&a2[OBJC_IVAR____TtC14MentalHealthUI36StateOfMindOverlayRoomViewController_sleepChartFormatter];
    unint64_t v19 = *(void **)&a2[OBJC_IVAR____TtC14MentalHealthUI36StateOfMindOverlayRoomViewController_stateOfMindInteractiveChartDisplayTypeWithLegend];
    uint64_t v20 = sub_256175A08();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v13, 1, 1, v20);
    id v21 = sub_2560E45FC(v17, a3, v18, v19, 0x4D664F6574617453, 0xEB00000000646E69, 0, (uint64_t)v13, 0);
  }
  else
  {
    id v22 = objc_msgSend(v14, sel_sampleType);
    id v23 = *(void **)&a2[OBJC_IVAR____TtC14MentalHealthUI36StateOfMindOverlayRoomViewController_stateOfMindInteractiveChartDisplayTypeWithLegend];
    uint64_t v24 = sub_256175A08();
    uint64_t v25 = *(void *)(v24 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v11, 1, 1, v24);
    id v26 = a3;
    id v27 = v23;
    id v28 = v22;
    id v29 = objc_msgSend(a2, sel_applicationItems);
    id v30 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v11, 1, v24) != 1)
    {
      id v30 = (void *)sub_256175978();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v24);
    }
    LOBYTE(v31) = 0;
    id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F468F8]), sel_initWithDisplayType_overlayDisplayType_stackedSampleType_overlayChartController_currentCalendarOverride_applicationItems_isInfoButtonHidden_, v27, 0, v28, v26, v30, v29, v31);
  }
  *a4 = v21;
}

id sub_2560E45FC(void *a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, char a9)
{
  id v14 = (void *)sub_256177EA8();
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_256175A08();
  uint64_t v16 = *(void *)(v15 - 8);
  id v17 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(a8, 1, v15) != 1)
  {
    id v17 = (void *)sub_256175978();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a8, v15);
  }
  LOBYTE(v20) = a9 & 1;
  id v18 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithApplicationItems_overlayChartController_sleepChartFormatter_primaryDisplayType_uniqueIdentifier_firstWeekdayOverride_currentCalendarOverride_isInfoButtonHidden_, a1, a2, a3, a4, v14, a7, v17, v20);

  return v18;
}

uint64_t static StateOfMindOverlayRoomViewController.supportedStateOfMindDomainContexts()()
{
  uint64_t v0 = sub_256178338();
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 16);
  if (v2)
  {
    unint64_t v3 = 0;
    uint64_t v4 = v0 + 32;
    uint64_t v5 = MEMORY[0x263F8EE78];
    while (v3 < *(void *)(v1 + 16))
    {
      uint64_t v8 = *(void *)(v4 + 8 * v3);
      uint64_t v11 = v8;
      if (sub_2560E48BC(&v11))
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v12 = v5;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_2560E87FC(0, *(void *)(v5 + 16) + 1, 1);
          uint64_t v5 = v12;
        }
        unint64_t v7 = *(void *)(v5 + 16);
        unint64_t v6 = *(void *)(v5 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_2560E87FC(v6 > 1, v7 + 1, 1);
          uint64_t v5 = v12;
        }
        *(void *)(v5 + 16) = v7 + 1;
        *(void *)(v5 + 8 * v7 + 32) = v8;
      }
      if (v2 == ++v3) {
        goto LABEL_12;
      }
    }
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
LABEL_12:
    swift_bridgeObjectRelease();
    uint64_t v12 = v5;
    swift_retain();
    sub_2560E686C(&v12);
    swift_release();
    return v12;
  }
  return result;
}

BOOL sub_2560E48BC(uint64_t *a1)
{
  uint64_t v3 = sub_256175B68();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a1;
  id v8 = (id)HKUILocalizedStringForStateOfMindDomain();
  uint64_t v9 = sub_256177EE8();
  unint64_t v11 = v10;

  swift_bridgeObjectRelease();
  if ((v11 & 0x2000000000000000) != 0) {
    uint64_t v12 = HIBYTE(v11) & 0xF;
  }
  else {
    uint64_t v12 = v9 & 0xFFFFFFFFFFFFLL;
  }
  if (!v12)
  {
    sub_256175B48();
    os_log_type_t v13 = sub_256175B58();
    os_log_type_t v14 = sub_256178228();
    int v15 = v14;
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v16 = swift_slowAlloc();
      int v24 = v15;
      uint64_t v17 = v16;
      uint64_t v25 = swift_slowAlloc();
      uint64_t v28 = v25;
      *(_DWORD *)uint64_t v17 = 136446466;
      v23[1] = v17 + 4;
      uint64_t v18 = sub_256178978();
      uint64_t v20 = sub_255FB29A8(v18, v19, &v28);
      uint64_t v26 = v1;
      uint64_t v27 = v20;
      sub_256178458();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2048;
      uint64_t v27 = v7;
      sub_256178458();
      _os_log_impl(&dword_255F58000, v13, (os_log_type_t)v24, "[%{public}s] Active domain has empty title: %ld", (uint8_t *)v17, 0x16u);
      uint64_t v21 = v25;
      swift_arrayDestroy();
      MEMORY[0x25A2A1E90](v21, -1, -1);
      MEMORY[0x25A2A1E90](v17, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v12 != 0;
}

uint64_t sub_2560E4B18()
{
  uint64_t v1 = v0;
  sub_2560E9AB4(0, (unint64_t *)&qword_269F43AB0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2561A7560;
  sub_255FB58F8(0, &qword_269F46810);
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id v4 = objc_msgSend(ObjCClassFromMetadata, sel_dataTypeWithCode_, 75);
  if (!v4)
  {
    __break(1u);
    goto LABEL_11;
  }
  *(void *)(inited + 32) = v4;
  id v5 = objc_msgSend(ObjCClassFromMetadata, sel_dataTypeWithCode_, 99);
  if (!v5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  *(void *)(inited + 40) = v5;
  id v6 = objc_msgSend(ObjCClassFromMetadata, sel_dataTypeWithCode_, 63);
  if (!v6)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  *(void *)(inited + 48) = v6;
  id v7 = objc_msgSend(ObjCClassFromMetadata, sel_dataTypeWithCode_, 279);
  if (!v7)
  {
LABEL_13:
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  *(void *)(inited + 56) = v7;
  unint64_t v13 = inited;
  sub_256178018();
  id v8 = v1;
  uint64_t v9 = sub_2560E9218(inited, v8);
  swift_bridgeObjectRelease();

  if (v9 < 0 || (v9 & 0x4000000000000000) != 0)
  {
    unint64_t v12 = swift_bridgeObjectRetain();
    uint64_t v10 = (uint64_t)sub_255FB376C(v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  unint64_t v13 = v10;
  sub_2560E68D8((uint64_t *)&v13);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_2560E4D3C(uint64_t a1)
{
  swift_getObjectType();
  uint64_t v2 = sub_256175B68();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v6 = sub_2560E4B18();
  unint64_t v7 = v6;
  if (a1 < 0) {
    goto LABEL_21;
  }
  if (!(v6 >> 62))
  {
    uint64_t result = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (result > a1) {
      goto LABEL_4;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t result = sub_256178678();
  if (result <= a1) {
    goto LABEL_21;
  }
LABEL_4:
  if ((v7 & 0xC000000000000001) != 0)
  {
    id v9 = (id)MEMORY[0x25A2A1000](a1, v7);
LABEL_7:
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();
    id v11 = objc_msgSend(v10, sel_objectType);
    uint64_t v12 = (uint64_t)objc_msgSend(v11, sel_code);

    if (v12 > 98)
    {
      if (v12 == 99)
      {
        uint64_t v13 = 1;
        os_log_type_t v14 = v10;
        uint64_t v15 = 0x4E4C5546444E494DLL;
        uint64_t v16 = (void *)0xEB00000000535345;
      }
      else
      {
        if (v12 != 279)
        {
LABEL_17:
          sub_256175B48();
          uint64_t v17 = sub_256175B58();
          os_log_type_t v18 = sub_256178218();
          if (os_log_type_enabled(v17, v18))
          {
            unint64_t v19 = (uint8_t *)swift_slowAlloc();
            uint64_t v20 = swift_slowAlloc();
            uint64_t v24 = v20;
            *(_DWORD *)unint64_t v19 = 136446210;
            v23[1] = v19 + 4;
            uint64_t v21 = sub_256178978();
            void v23[2] = sub_255FB29A8(v21, v22, &v24);
            sub_256178458();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_255F58000, v17, v18, "[%{public}s] Unsupported comparison type", v19, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x25A2A1E90](v20, -1, -1);
            MEMORY[0x25A2A1E90](v19, -1, -1);
          }

          (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
          return 0;
        }
        uint64_t v13 = 1;
        os_log_type_t v14 = v10;
        uint64_t v15 = 0x544847494C594144;
        uint64_t v16 = (void *)0xE800000000000000;
      }
    }
    else
    {
      if (v12 != 63)
      {
        if (v12 == 75)
        {
          sub_2560E54BC(v10, 0x4553494352455845, (void *)0xE800000000000000, 0);

          return 1;
        }
        goto LABEL_17;
      }
      uint64_t v13 = 1;
      os_log_type_t v14 = v10;
      uint64_t v15 = 0x5045454C53;
      uint64_t v16 = (void *)0xE500000000000000;
    }
    sub_2560E54BC(v14, v15, v16, 1);

    return v13;
  }
  if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) > (unint64_t)a1)
  {
    id v9 = *(id *)(v7 + 8 * a1 + 32);
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_2560E50B4(uint64_t a1, void *a2)
{
  unint64_t v5 = sub_2560E4B18();
  if (v5 >> 62) {
    uint64_t v6 = sub_256178678();
  }
  else {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!a2) {
    return 0;
  }
  id v7 = a2;
  id v8 = objc_msgSend(v7, sel_activeFactorContexts);
  uint64_t v9 = sub_255FB58F8(0, &qword_269F46A88);
  unint64_t v10 = sub_256178008();

  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_256178678();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t result = swift_bridgeObjectRelease();
  if (v11 > a1)
  {
    id v13 = objc_msgSend(v7, sel_activeFactorContexts);
    uint64_t v14 = sub_256178008();

    if ((v14 & 0xC000000000000001) != 0)
    {
      id v15 = (id)MEMORY[0x25A2A1000](a1, v14);
LABEL_11:
      uint64_t v16 = v15;
      swift_bridgeObjectRelease();
      id v17 = objc_msgSend(v16, sel_stackedBaseDisplayType);
      os_log_type_t v18 = self;
      uint64_t v19 = *(void *)&v2[OBJC_IVAR____TtC14MentalHealthUI36StateOfMindOverlayRoomViewController_stateOfMindInteractiveChartDisplayType];
      id v20 = v17;
      id v21 = objc_msgSend(v2, sel_applicationItems);
      id v22 = objc_msgSend(v21, sel_healthStore);

      id v23 = objc_msgSend(v18, sel_infographicViewControllerForDisplayType_factorDisplayType_healthStore_, v19, v20, v22);
      if (v23)
      {
        uint64_t v24 = v7;
        id v25 = v23;
LABEL_25:
        id v35 = v16;
        uint64_t v26 = 1;
        objc_msgSend(v2, sel_hk_presentModalCardViewController_fullScreen_animated_completion_, v23, 0, 1, 0);

        id v7 = v25;
        uint64_t v16 = v20;
        id v20 = v35;
LABEL_27:

        id v7 = v20;
        goto LABEL_28;
      }
      goto LABEL_26;
    }
    if (a1 < 0)
    {
      __break(1u);
    }
    else if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) > (unint64_t)a1)
    {
      id v15 = *(id *)(v14 + 8 * a1 + 32);
      goto LABEL_11;
    }
    __break(1u);
    goto LABEL_35;
  }
  if (__OFADD__(v6, v11))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (v6 + v11 > a1)
  {
    uint64_t v26 = 0;
LABEL_28:

    return v26;
  }
  id v27 = objc_msgSend(v7, sel_inactiveFactorContexts);
  uint64_t v9 = sub_256178008();

  uint64_t v28 = a1 - v6;
  if (__OFSUB__(a1, v6)) {
    goto LABEL_36;
  }
  unint64_t result = v28 - v11;
  if (__OFSUB__(v28, v11))
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if ((v9 & 0xC000000000000001) != 0)
  {
LABEL_38:
    id v29 = (id)MEMORY[0x25A2A1000](result, v9);
LABEL_23:
    uint64_t v16 = v29;
    swift_bridgeObjectRelease();
    id v30 = objc_msgSend(v16, sel_stackedBaseDisplayType);
    uint64_t v31 = self;
    uint64_t v32 = *(void *)&v2[OBJC_IVAR____TtC14MentalHealthUI36StateOfMindOverlayRoomViewController_stateOfMindInteractiveChartDisplayType];
    id v20 = v30;
    id v33 = objc_msgSend(v2, sel_applicationItems);
    id v34 = objc_msgSend(v33, sel_healthStore);

    id v23 = objc_msgSend(v31, sel_infographicViewControllerForDisplayType_factorDisplayType_healthStore_, v32, v20, v34);
    if (v23)
    {
      uint64_t v24 = v23;
      id v25 = v20;
      id v20 = v16;
      uint64_t v16 = v7;
      goto LABEL_25;
    }
LABEL_26:
    uint64_t v26 = 0;
    goto LABEL_27;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v29 = *(id *)(v9 + 8 * result + 32);
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

void sub_2560E54BC(void *a1, uint64_t a2, void *a3, int a4)
{
  LODWORD(v74) = a4;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = sub_256175B68();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256175B48();
  id v12 = a1;
  id v13 = sub_256175B58();
  os_log_type_t v14 = sub_256178238();
  BOOL v15 = os_log_type_enabled(v13, v14);
  id v69 = v12;
  uint64_t v70 = ObjectType;
  if (v15)
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v72 = swift_slowAlloc();
    uint64_t v78 = v72;
    *(_DWORD *)uint64_t v16 = 136446466;
    *(void *)&long long v73 = a2;
    uint64_t v17 = sub_256178978();
    id v75 = a3;
    uint64_t v77 = sub_255FB29A8(v17, v18, &v78);
    uint64_t v71 = v9;
    sub_256178458();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2082;
    id v19 = v12;
    id v20 = objc_msgSend(v19, sel_description);
    uint64_t v21 = sub_256177EE8();
    uint64_t v68 = v8;
    unint64_t v23 = v22;

    uint64_t v77 = sub_255FB29A8(v21, v23, &v78);
    sub_256178458();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_255F58000, v13, v14, "[%{public}s] Opening life factor view for type: %{public}s", (uint8_t *)v16, 0x16u);
    uint64_t v24 = v72;
    swift_arrayDestroy();
    MEMORY[0x25A2A1E90](v24, -1, -1);
    MEMORY[0x25A2A1E90](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v71 + 8))(v11, v68);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  id v75 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46848]), sel_init);
  uint64_t v78 = 0;
  unint64_t v79 = 0xE000000000000000;
  sub_256178558();
  swift_bridgeObjectRelease();
  uint64_t v68 = (uint64_t)"ayTypeWithLegend";
  uint64_t v78 = 0xD000000000000012;
  unint64_t v79 = 0x80000002561ACD40;
  sub_256177F68();
  sub_256177F68();
  if (qword_269F42348 != -1) {
    swift_once();
  }
  id v25 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_2561755B8();
  uint64_t v72 = v27;
  *(void *)&long long v73 = v26;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v78 = 0;
  unint64_t v79 = 0xE000000000000000;
  sub_256178558();
  swift_bridgeObjectRelease();
  uint64_t v78 = 0xD000000000000012;
  unint64_t v79 = 0x80000002561ACD40;
  sub_256177F68();
  sub_256177F68();
  id v28 = (id)qword_269F50C88;
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_2561755B8();
  uint64_t v71 = v30;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v31 = 0;
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  if (v74)
  {
    uint64_t v78 = 0;
    unint64_t v79 = 0xE000000000000000;
    sub_256178558();
    swift_bridgeObjectRelease();
    uint64_t v78 = 0xD000000000000012;
    unint64_t v79 = v68 | 0x8000000000000000;
    sub_256177F68();
    sub_256177F68();
    id v35 = (id)qword_269F50C88;
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_2561755B8();
    uint64_t v34 = v36;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v37 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v32 = (void *)swift_allocObject();
    id v39 = v69;
    uint64_t v38 = v70;
    v32[2] = v37;
    uint64_t v32[3] = v39;
    id v40 = v75;
    v32[4] = v75;
    v32[5] = v38;
    id v41 = v39;
    id v42 = v40;
    uint64_t v31 = sub_2560E9A90;
  }
  id v43 = objc_allocWithZone(MEMORY[0x263F467C0]);
  sub_255FF0D20((uint64_t)v31);
  id v44 = sub_2560E671C(v73, v72, v29, v71, v33, v34, (uint64_t)v31, (uint64_t)v32);
  sub_2560E9AB4(0, (unint64_t *)&qword_269F43AB0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v45 = swift_allocObject();
  long long v73 = xmmword_2561A27B0;
  *(_OWORD *)(v45 + 16) = xmmword_2561A27B0;
  *(void *)(v45 + 32) = v44;
  uint64_t v78 = v45;
  sub_256178018();
  id v46 = objc_allocWithZone(MEMORY[0x263F467C8]);
  sub_2560D5480(0, &qword_269F46A78);
  id v74 = v44;
  id v47 = (void *)sub_256177FF8();
  swift_bridgeObjectRelease();
  id v48 = objc_msgSend(v46, sel_initWithItems_, v47);

  id v49 = (void *)qword_269F50C88;
  id v50 = v48;
  id v51 = v49;
  swift_bridgeObjectRetain();
  sub_2561755B8();
  swift_bridgeObjectRelease();

  id v52 = (void *)sub_256177EA8();
  swift_bridgeObjectRelease();
  objc_msgSend(v50, sel_setTitle_, v52);

  id v53 = objc_msgSend(v50, sel_navigationItem);
  id v54 = (void *)sub_256177EA8();
  id v55 = (id)HKUILocalizedString();

  if (v55)
  {
    uint64_t v56 = sub_256177EE8();
    uint64_t v58 = v57;
  }
  else
  {
    uint64_t v56 = 0;
    uint64_t v58 = 0;
  }
  uint64_t v80 = type metadata accessor for StateOfMindOverlayRoomViewController();
  id v59 = (void *)v76;
  uint64_t v78 = v76;
  id v60 = objc_allocWithZone(MEMORY[0x263F824A8]);
  id v61 = v59;
  id v62 = sub_2561401F4(v56, v58, 2, &v78, (uint64_t)sel_dismissAnimated_);
  objc_msgSend(v53, sel_setRightBarButtonItem_, v62);

  uint64_t v63 = swift_allocObject();
  *(_OWORD *)(v63 + 16) = v73;
  *(void *)(v63 + 32) = v50;
  uint64_t v78 = v63;
  sub_256178018();
  sub_255FB58F8(0, &qword_269F46A80);
  id v64 = v50;
  unint64_t v65 = (void *)sub_256177FF8();
  swift_bridgeObjectRelease();
  id v66 = v75;
  objc_msgSend(v75, sel_setViewControllers_animated_, v65, 0);

  objc_msgSend(v61, sel_hk_presentModalCardViewController_fullScreen_animated_completion_, v66, 0, 1, 0);
  sub_255FF0D30((uint64_t)v31);
}

void sub_2560E5DD4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6 = sub_256175B68();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v10 = MEMORY[0x25A2A1F80](a1 + 16);
  if (v10)
  {
    uint64_t v11 = (char *)v10;
    sub_256175B48();
    id v12 = a2;
    id v13 = sub_256175B58();
    os_log_type_t v14 = sub_256178238();
    int v15 = v14;
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v37 = v7;
      uint64_t v17 = v16;
      uint64_t v35 = swift_slowAlloc();
      uint64_t v40 = v35;
      *(_DWORD *)uint64_t v17 = 136446466;
      uint64_t v36 = v6;
      uint64_t v18 = sub_256178978();
      uint64_t v39 = sub_255FB29A8(v18, v19, &v40);
      sub_256178458();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2082;
      uint64_t v34 = v17 + 14;
      id v20 = v12;
      id v21 = objc_msgSend(v20, sel_description);
      uint64_t v22 = sub_256177EE8();
      int v33 = v15;
      unint64_t v23 = v11;
      id v24 = v12;
      uint64_t v25 = v22;
      uint64_t v38 = a3;
      unint64_t v27 = v26;

      uint64_t v28 = v25;
      id v12 = v24;
      uint64_t v11 = v23;
      uint64_t v39 = sub_255FB29A8(v28, v27, &v40);
      sub_256178458();

      a3 = v38;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_255F58000, v13, (os_log_type_t)v33, "[%{public}s] Opening logging view for type: %{public}s", (uint8_t *)v17, 0x16u);
      uint64_t v29 = v35;
      swift_arrayDestroy();
      MEMORY[0x25A2A1E90](v29, -1, -1);
      MEMORY[0x25A2A1E90](v17, -1, -1);

      (*(void (**)(char *, uint64_t))(v37 + 8))(v9, v36);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    id v30 = objc_msgSend(*(id *)&v11[OBJC_IVAR____TtC14MentalHealthUI36StateOfMindOverlayRoomViewController_addDataViewControllerProvider], sel_addDataViewControllerForDisplayType_, v12);
    id v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F829B8]), sel_initWithRootViewController_, v30);
    objc_msgSend(a3, sel_hk_presentModalCardViewController_fullScreen_animated_completion_, v31, 0, 1, 0);
  }
}

id sub_2560E6128()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_256175B68();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_256175B48();
  uint64_t v6 = sub_256175B58();
  os_log_type_t v7 = sub_256178238();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v16 = v1;
    uint64_t v9 = (uint8_t *)v8;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v18 = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    uint64_t v11 = sub_256178978();
    uint64_t v17 = sub_255FB29A8(v11, v12, &v18);
    sub_256178458();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_255F58000, v6, v7, "[%{public}s] Dismissing", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2A1E90](v10, -1, -1);
    id v13 = v9;
    uint64_t v1 = v16;
    MEMORY[0x25A2A1E90](v13, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

id StateOfMindOverlayRoomViewController.__allocating_init(displayDate:applicationItems:factorDisplayTypes:mode:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = v4;
  uint64_t v10 = sub_256175868();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a1, 1, v10) != 1)
  {
    unint64_t v12 = (void *)sub_2561757F8();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  }
  if (a3)
  {
    sub_255FB58F8(0, (unint64_t *)&qword_269F46A00);
    id v13 = (void *)sub_256177FF8();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v13 = 0;
  }
  id v14 = objc_msgSend(objc_allocWithZone(v5), sel_initWithDisplayDate_applicationItems_factorDisplayTypes_mode_, v12, a2, v13, a4);

  return v14;
}

void StateOfMindOverlayRoomViewController.init(displayDate:applicationItems:factorDisplayTypes:mode:)()
{
}

id StateOfMindOverlayRoomViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StateOfMindOverlayRoomViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_2560E671C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v12 = (void *)sub_256177EA8();
  swift_bridgeObjectRelease();
  id v13 = (void *)sub_256177EA8();
  swift_bridgeObjectRelease();
  if (!a6)
  {
    id v14 = 0;
    if (a7) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v15 = 0;
    goto LABEL_6;
  }
  id v14 = (void *)sub_256177EA8();
  swift_bridgeObjectRelease();
  if (!a7) {
    goto LABEL_5;
  }
LABEL_3:
  v18[4] = a7;
  void v18[5] = a8;
  v18[0] = MEMORY[0x263EF8330];
  v18[1] = 1107296256;
  void v18[2] = sub_255FA9E78;
  v18[3] = &block_descriptor_11;
  uint64_t v15 = _Block_copy(v18);
  swift_release();
LABEL_6:
  id v16 = objc_msgSend(v8, sel_initWithTitle_detail_buttonTextString_buttonAction_, v12, v13, v14, v15);
  _Block_release(v15);

  return v16;
}

uint64_t sub_2560E686C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_256153618(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_2560E6954(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_2560E68D8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_256154FCC();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_2560E71C8(v6);
  return sub_2561785E8();
}

uint64_t sub_2560E6954(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_2561787D8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_155;
    }
    if (v3) {
      return sub_2560E7B64(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_163;
  }
  uint64_t v124 = v3;
  uint64_t v121 = result;
  uint64_t v129 = v1;
  uint64_t v118 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    uint64_t v128 = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_120:
      uint64_t v120 = v8;
      if (v12 >= 2)
      {
        uint64_t v110 = *v118;
        do
        {
          unint64_t v111 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_150;
          }
          if (!v110) {
            goto LABEL_162;
          }
          uint64_t v112 = *(void *)&v11[16 * v111 + 32];
          uint64_t v113 = *(void *)&v11[16 * v12 + 24];
          sub_2560E7E64((char *)(v110 + 8 * v112), (char *)(v110 + 8 * *(void *)&v11[16 * v12 + 16]), v110 + 8 * v113, v128);
          if (v129) {
            break;
          }
          if (v113 < v112) {
            goto LABEL_151;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v11 = sub_256152458((uint64_t)v11);
          }
          if (v111 >= *((void *)v11 + 2)) {
            goto LABEL_152;
          }
          uint64_t v114 = &v11[16 * v111 + 32];
          *(void *)uint64_t v114 = v112;
          *((void *)v114 + 1) = v113;
          unint64_t v115 = *((void *)v11 + 2);
          if (v12 > v115) {
            goto LABEL_153;
          }
          memmove(&v11[16 * v12 + 16], &v11[16 * v12 + 32], 16 * (v115 - v12));
          *((void *)v11 + 2) = v115 - 1;
          unint64_t v12 = v115 - 1;
        }
        while (v115 > 2);
      }
LABEL_131:
      swift_bridgeObjectRelease();
      *(void *)(v120 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v120 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    type metadata accessor for __HKStateOfMindDomain(0);
    uint64_t v7 = sub_256178048();
    *(void *)(v7 + 16) = v6;
    uint64_t v3 = v124;
    uint64_t v120 = v7;
    uint64_t v128 = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v119 = v10 + 16;
  uint64_t v117 = v10 - 8;
  uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  while (1)
  {
    uint64_t v13 = v9 + 1;
    uint64_t v123 = v9;
    if (v9 + 1 >= v3) {
      goto LABEL_47;
    }
    id v14 = (id)HKUILocalizedStringForStateOfMindDomain();
    uint64_t v15 = sub_256177EE8();
    uint64_t v17 = v16;

    id v18 = (id)HKUILocalizedStringForStateOfMindDomain();
    uint64_t v19 = sub_256177EE8();
    uint64_t v21 = v20;

    if (v15 == v19 && v17 == v21) {
      int v23 = 0;
    }
    else {
      int v23 = sub_256178828();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v13 = v9 + 2;
    uint64_t v3 = v124;
    if (v9 + 2 >= v124) {
      goto LABEL_37;
    }
    uint64_t v125 = v10;
    uint64_t v24 = v119 + 8 * v9;
    while (1)
    {
      uint64_t v26 = v13;
      id v27 = (id)HKUILocalizedStringForStateOfMindDomain();
      uint64_t v28 = sub_256177EE8();
      uint64_t v30 = v29;

      id v31 = (id)HKUILocalizedStringForStateOfMindDomain();
      uint64_t v32 = sub_256177EE8();
      uint64_t v34 = v33;

      if (v28 == v32 && v30 == v34)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v13 = v26;
        if (v23)
        {
          uint64_t v3 = v124;
          uint64_t v10 = v125;
          uint64_t v9 = v123;
          goto LABEL_38;
        }
        goto LABEL_26;
      }
      int v25 = sub_256178828();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = v26;
      if ((v23 ^ v25)) {
        break;
      }
LABEL_26:
      v24 += 8;
      ++v13;
      uint64_t v3 = v124;
      if (v124 == v13)
      {
        uint64_t v13 = v124;
        goto LABEL_36;
      }
    }
    uint64_t v3 = v124;
LABEL_36:
    uint64_t v10 = v125;
    uint64_t v9 = v123;
LABEL_37:
    if (v23)
    {
LABEL_38:
      if (v13 < v9) {
        goto LABEL_156;
      }
      if (v9 < v13)
      {
        uint64_t v36 = v13 - 1;
        uint64_t v37 = v9;
        do
        {
          if (v37 != v36)
          {
            if (!v10) {
              goto LABEL_161;
            }
            uint64_t v38 = *(void *)(v10 + 8 * v37);
            *(void *)(v10 + 8 * v37) = *(void *)(v10 + 8 * v36);
            *(void *)(v10 + 8 * v36) = v38;
          }
          BOOL v86 = ++v37 < v36--;
        }
        while (v86);
      }
    }
LABEL_47:
    if (v13 < v3)
    {
      if (__OFSUB__(v13, v9)) {
        goto LABEL_154;
      }
      if (v13 - v9 < v121) {
        break;
      }
    }
LABEL_70:
    if (v13 < v9) {
      goto LABEL_149;
    }
    uint64_t v127 = v13;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_2561522A0(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v55 = *((void *)v11 + 2);
    unint64_t v54 = *((void *)v11 + 3);
    unint64_t v12 = v55 + 1;
    if (v55 >= v54 >> 1) {
      uint64_t v11 = sub_2561522A0((char *)(v54 > 1), v55 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v56 = v11 + 32;
    uint64_t v57 = &v11[16 * v55 + 32];
    *(void *)uint64_t v57 = v9;
    *((void *)v57 + 1) = v127;
    if (v55)
    {
      while (1)
      {
        unint64_t v58 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v63 = &v56[16 * v12];
          uint64_t v64 = *((void *)v63 - 8);
          uint64_t v65 = *((void *)v63 - 7);
          BOOL v69 = __OFSUB__(v65, v64);
          uint64_t v66 = v65 - v64;
          if (v69) {
            goto LABEL_138;
          }
          uint64_t v68 = *((void *)v63 - 6);
          uint64_t v67 = *((void *)v63 - 5);
          BOOL v69 = __OFSUB__(v67, v68);
          uint64_t v61 = v67 - v68;
          char v62 = v69;
          if (v69) {
            goto LABEL_139;
          }
          unint64_t v70 = v12 - 2;
          uint64_t v71 = &v56[16 * v12 - 32];
          uint64_t v73 = *(void *)v71;
          uint64_t v72 = *((void *)v71 + 1);
          BOOL v69 = __OFSUB__(v72, v73);
          uint64_t v74 = v72 - v73;
          if (v69) {
            goto LABEL_141;
          }
          BOOL v69 = __OFADD__(v61, v74);
          uint64_t v75 = v61 + v74;
          if (v69) {
            goto LABEL_144;
          }
          if (v75 >= v66)
          {
            uint64_t v93 = &v56[16 * v58];
            uint64_t v95 = *(void *)v93;
            uint64_t v94 = *((void *)v93 + 1);
            BOOL v69 = __OFSUB__(v94, v95);
            uint64_t v96 = v94 - v95;
            if (v69) {
              goto LABEL_148;
            }
            BOOL v86 = v61 < v96;
            goto LABEL_107;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v87 = *((void *)v11 + 4);
            uint64_t v88 = *((void *)v11 + 5);
            BOOL v69 = __OFSUB__(v88, v87);
            uint64_t v80 = v88 - v87;
            char v81 = v69;
            goto LABEL_101;
          }
          uint64_t v60 = *((void *)v11 + 4);
          uint64_t v59 = *((void *)v11 + 5);
          BOOL v69 = __OFSUB__(v59, v60);
          uint64_t v61 = v59 - v60;
          char v62 = v69;
        }
        if (v62) {
          goto LABEL_140;
        }
        unint64_t v70 = v12 - 2;
        uint64_t v76 = &v56[16 * v12 - 32];
        uint64_t v78 = *(void *)v76;
        uint64_t v77 = *((void *)v76 + 1);
        BOOL v79 = __OFSUB__(v77, v78);
        uint64_t v80 = v77 - v78;
        char v81 = v79;
        if (v79) {
          goto LABEL_143;
        }
        objc_super v82 = &v56[16 * v58];
        uint64_t v84 = *(void *)v82;
        uint64_t v83 = *((void *)v82 + 1);
        BOOL v69 = __OFSUB__(v83, v84);
        uint64_t v85 = v83 - v84;
        if (v69) {
          goto LABEL_146;
        }
        if (__OFADD__(v80, v85)) {
          goto LABEL_147;
        }
        if (v80 + v85 >= v61)
        {
          BOOL v86 = v61 < v85;
LABEL_107:
          if (v86) {
            unint64_t v58 = v70;
          }
          goto LABEL_109;
        }
LABEL_101:
        if (v81) {
          goto LABEL_142;
        }
        id v89 = &v56[16 * v58];
        uint64_t v91 = *(void *)v89;
        uint64_t v90 = *((void *)v89 + 1);
        BOOL v69 = __OFSUB__(v90, v91);
        uint64_t v92 = v90 - v91;
        if (v69) {
          goto LABEL_145;
        }
        if (v92 < v80) {
          goto LABEL_15;
        }
LABEL_109:
        unint64_t v97 = v58 - 1;
        if (v58 - 1 >= v12)
        {
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
          goto LABEL_158;
        }
        uint64_t v98 = v10;
        if (!v10) {
          goto LABEL_160;
        }
        long long v99 = v11;
        __n128 v100 = v56;
        uint64_t v101 = &v56[16 * v97];
        uint64_t v102 = *(void *)v101;
        uint64_t v103 = v100;
        unint64_t v104 = v58;
        uint64_t v105 = &v100[16 * v58];
        uint64_t v106 = *((void *)v105 + 1);
        uint64_t v107 = v98;
        sub_2560E7E64((char *)(v98 + 8 * *(void *)v101), (char *)(v98 + 8 * *(void *)v105), v98 + 8 * v106, v128);
        if (v129) {
          goto LABEL_131;
        }
        if (v106 < v102) {
          goto LABEL_135;
        }
        if (v104 > *((void *)v99 + 2)) {
          goto LABEL_136;
        }
        unint64_t v108 = v104;
        *(void *)uint64_t v101 = v102;
        *(void *)&v103[16 * v97 + 8] = v106;
        unint64_t v109 = *((void *)v99 + 2);
        if (v104 >= v109) {
          goto LABEL_137;
        }
        uint64_t v56 = v103;
        uint64_t v11 = v99;
        uint64_t v129 = 0;
        unint64_t v12 = v109 - 1;
        memmove(v105, v105 + 16, 16 * (v109 - 1 - v108));
        *((void *)v99 + 2) = v109 - 1;
        uint64_t v10 = v107;
        if (v109 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v124;
    uint64_t v9 = v127;
    if (v127 >= v124)
    {
      uint64_t v8 = v120;
      goto LABEL_120;
    }
  }
  if (__OFADD__(v9, v121)) {
    goto LABEL_157;
  }
  if (v9 + v121 >= v3) {
    uint64_t v39 = v3;
  }
  else {
    uint64_t v39 = v9 + v121;
  }
  if (v39 >= v9)
  {
    if (v13 != v39)
    {
      uint64_t v116 = v11;
      uint64_t v40 = (void *)(v117 + 8 * v13);
      uint64_t v122 = v39;
      do
      {
        uint64_t v126 = v40;
        while (1)
        {
          uint64_t v41 = v10;
          uint64_t v42 = v13;
          id v43 = (id)HKUILocalizedStringForStateOfMindDomain();
          uint64_t v44 = sub_256177EE8();
          uint64_t v46 = v45;

          id v47 = (id)HKUILocalizedStringForStateOfMindDomain();
          uint64_t v48 = sub_256177EE8();
          uint64_t v50 = v49;

          if (v44 == v48 && v46 == v50) {
            break;
          }
          char v52 = sub_256178828();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v52 & 1) == 0) {
            goto LABEL_58;
          }
          if (!v41) {
            goto LABEL_159;
          }
          uint64_t v13 = v42;
          uint64_t v10 = v41;
          uint64_t v53 = *v40;
          *uint64_t v40 = v40[1];
          v40[1] = v53;
          --v40;
          if (v13 == ++v9) {
            goto LABEL_59;
          }
        }
        swift_bridgeObjectRelease_n();
LABEL_58:
        uint64_t v13 = v42;
        uint64_t v10 = v41;
LABEL_59:
        ++v13;
        uint64_t v40 = v126 + 1;
        uint64_t v9 = v123;
      }
      while (v13 != v122);
      uint64_t v13 = v122;
      uint64_t v11 = v116;
    }
    goto LABEL_70;
  }
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  uint64_t result = sub_256178648();
  __break(1u);
  return result;
}