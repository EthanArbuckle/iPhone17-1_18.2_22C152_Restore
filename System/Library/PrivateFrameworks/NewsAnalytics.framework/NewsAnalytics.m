unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *result = *a2;
  return result;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *__n128 result = *a2;
  return result;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t objectdestroyTm()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t objectdestroyTm_0()
{
  uint64_t v1 = sub_1DE47F9D0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t objectdestroyTm_1()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 33, 7);
}

__n128 __swift_memcpy136_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t objectdestroy_2Tm()
{
  if (*(void *)(v0 + 56)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  }

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t BannerAdData.init(traits:)@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  sub_1DE049A58();
  uint64_t v4 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  long long v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  v9 = &v18[-v8];
  MEMORY[0x1F4188790](v7);
  v11 = &v18[-v10];
  sub_1DE049AB0(a1, (uint64_t)&v18[-v10]);
  uint64_t v12 = sub_1DE47F8C0();
  uint64_t v13 = *(void *)(v12 - 8);
  v14 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v11, 1, v12) == 1)
  {
    sub_1DE049B14((uint64_t)v11);
    int v19 = 0;
  }
  else
  {
    int v19 = sub_1DE47F8B0();
    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v11, v12);
  }
  sub_1DE049AB0(a1, (uint64_t)v9);
  if (v14(v9, 1, v12) == 1)
  {
    sub_1DE049B14((uint64_t)v9);
    char v15 = 0;
  }
  else
  {
    char v15 = sub_1DE47F8A0();
    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v9, v12);
  }
  sub_1DE049AB0(a1, (uint64_t)v6);
  if (v14(v6, 1, v12) == 1)
  {
    sub_1DE049B14(a1);
    uint64_t result = sub_1DE049B14((uint64_t)v6);
    char v17 = 0;
  }
  else
  {
    char v17 = sub_1DE47F890();
    sub_1DE049B14(a1);
    uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v13 + 8))(v6, v12);
  }
  *a2 = v17 & 1;
  a2[1] = v15 & 1;
  a2[2] = v19 & 1;
  return result;
}

void sub_1DE049A58()
{
  if (!qword_1EBECBF88)
  {
    sub_1DE47F8C0();
    unint64_t v0 = sub_1DE480220();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBECBF88);
    }
  }
}

uint64_t sub_1DE049AB0(uint64_t a1, uint64_t a2)
{
  sub_1DE049A58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DE049B14(uint64_t a1)
{
  sub_1DE049A58();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void type metadata accessor for FCEndpointEnvironment(uint64_t a1)
{
}

void type metadata accessor for UIBackgroundTaskIdentifier(uint64_t a1)
{
}

void type metadata accessor for FCRelativePriority(uint64_t a1)
{
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
}

void sub_1DE049BC0(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1DE049BCC()
{
  return sub_1DE480750();
}

uint64_t sub_1DE049C14()
{
  return sub_1DE480740();
}

uint64_t sub_1DE049C40()
{
  return sub_1DE480750();
}

uint64_t sub_1DE049C84(uint64_t a1, uint64_t a2)
{
  return sub_1DE04A464(a1, a2, MEMORY[0x1E4FBB198]);
}

uint64_t sub_1DE049CA4(uint64_t a1, uint64_t a2)
{
  return sub_1DE04A464(a1, a2, MEMORY[0x1E4F27EB8]);
}

uint64_t sub_1DE049CC8(uint64_t a1, id *a2)
{
  uint64_t result = sub_1DE47FE70();
  *a2 = 0;
  return result;
}

uint64_t sub_1DE049D40(uint64_t a1, id *a2)
{
  char v3 = sub_1DE47FE80();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1DE049DC0@<X0>(uint64_t *a1@<X8>)
{
  sub_1DE47FE90();
  uint64_t v2 = sub_1DE47FE60();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1DE049E04()
{
  return MEMORY[0x1F40E6478](*v0);
}

uint64_t sub_1DE049E0C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = 0;
  char v7 = 1;
  uint64_t result = MEMORY[0x1E01CE150](a1, &v6);
  uint64_t v4 = v6;
  char v5 = v7;
  if (v7) {
    uint64_t v4 = 0;
  }
  *(void *)a2 = v4;
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_1DE049E60(uint64_t a1, uint64_t a2)
{
  char v3 = sub_1DE4800C0();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return v3 & 1;
}

uint64_t sub_1DE049EB8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DE4800D0();
  *a1 = result;
  return result;
}

BOOL sub_1DE049EE4(void *a1, void *a2)
{
  return *a1 == *a2;
}

void *sub_1DE049EF8@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_1DE049F08()
{
  uint64_t v0 = sub_1DE47FE90();
  uint64_t v2 = v1;
  if (v0 == sub_1DE47FE90() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1DE480660();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1DE049F98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DE47FE90();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DE049FC4()
{
  sub_1DE04A110((unint64_t *)&qword_1EBEC7450, type metadata accessor for NSKeyValueChangeKey);
  sub_1DE04A110(&qword_1EABA1628, type metadata accessor for NSKeyValueChangeKey);

  return sub_1DE480410();
}

uint64_t sub_1DE04A080()
{
  return sub_1DE04A110(&qword_1EABA1580, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_1DE04A0C8()
{
  return sub_1DE04A110(&qword_1EABA1588, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_1DE04A110(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DE04A158()
{
  sub_1DE04A110(&qword_1EABA16F8, type metadata accessor for UIContentSizeCategory);
  sub_1DE04A110(&qword_1EABA1700, type metadata accessor for UIContentSizeCategory);

  return sub_1DE480410();
}

uint64_t sub_1DE04A214@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1DE47FE60();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1DE04A25C()
{
  sub_1DE04A110(&qword_1EABA55C0, type metadata accessor for OpenURLOptionsKey);
  sub_1DE04A110(&qword_1EABA16F0, type metadata accessor for OpenURLOptionsKey);

  return sub_1DE480410();
}

uint64_t sub_1DE04A318()
{
  return sub_1DE480410();
}

uint64_t sub_1DE04A3D4()
{
  return sub_1DE04A110(&qword_1EABA1590, type metadata accessor for UIBackgroundTaskIdentifier);
}

uint64_t sub_1DE04A41C()
{
  return sub_1DE04A110(&qword_1EABA1598, type metadata accessor for UIBackgroundTaskIdentifier);
}

uint64_t sub_1DE04A464(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1DE47FE90();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1DE04A4A8()
{
  sub_1DE47FE90();
  sub_1DE47FF00();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE04A4FC()
{
  sub_1DE47FE90();
  sub_1DE480730();
  sub_1DE47FF00();
  uint64_t v0 = sub_1DE480750();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1DE04A570()
{
  return MEMORY[0x1F4184270](*v0);
}

uint64_t sub_1DE04A578(uint64_t a1)
{
  return MEMORY[0x1F4185EA8](a1, *v1);
}

uint64_t sub_1DE04A580()
{
  return sub_1DE04A110((unint64_t *)&unk_1EABA15A0, type metadata accessor for UIBackgroundTaskIdentifier);
}

uint64_t sub_1DE04A5C8()
{
  return sub_1DE04A110((unint64_t *)&unk_1EBEC7458, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t initializeBufferWithCopyOfBuffer for UserBundleSubscriptionContextData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_1DE04A644(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1DE04A664(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

void type metadata accessor for OpenURLOptionsKey(uint64_t a1)
{
}

void type metadata accessor for FCSubscriptionOrigin(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for CLAuthorizationStatus(uint64_t a1)
{
}

void type metadata accessor for UIContentSizeCategory(uint64_t a1)
{
}

uint64_t sub_1DE04A708()
{
  return sub_1DE04A110(&qword_1EABA16B0, type metadata accessor for UIContentSizeCategory);
}

uint64_t sub_1DE04A750()
{
  return sub_1DE04A110(&qword_1EABA16B8, type metadata accessor for UIContentSizeCategory);
}

uint64_t sub_1DE04A798()
{
  return sub_1DE04A110(&qword_1EABA16C0, type metadata accessor for UIContentSizeCategory);
}

uint64_t sub_1DE04A7E0()
{
  return sub_1DE04A110(&qword_1EABA16C8, type metadata accessor for OpenURLOptionsKey);
}

uint64_t sub_1DE04A828()
{
  return sub_1DE04A110(&qword_1EABA16D0, type metadata accessor for OpenURLOptionsKey);
}

uint64_t sub_1DE04A870()
{
  return sub_1DE04A110(&qword_1EABA16D8, type metadata accessor for OpenURLOptionsKey);
}

uint64_t sub_1DE04A8B8()
{
  return sub_1DE04A110((unint64_t *)&unk_1EABA16E0, type metadata accessor for FCSubscriptionOrigin);
}

uint64_t sub_1DE04A900(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1DE04A920(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void sub_1DE04A970(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t static StartMethodData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t StartMethodData.sessionStartSource.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StartMethodData.sessionStartSource.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*StartMethodData.sessionStartSource.modify())()
{
  return nullsub_1;
}

NewsAnalytics::StartMethodData __swiftcall StartMethodData.init(sessionStartSource:)(NewsAnalytics::StartMethodData sessionStartSource)
{
  *uint64_t v1 = sessionStartSource;
  return sessionStartSource;
}

uint64_t sub_1DE04AA74()
{
  return 1;
}

uint64_t sub_1DE04AA7C()
{
  return sub_1DE480750();
}

uint64_t sub_1DE04AAC0()
{
  return sub_1DE480740();
}

uint64_t sub_1DE04AAE8()
{
  return sub_1DE480750();
}

unint64_t sub_1DE04AB28()
{
  return 0xD000000000000012;
}

uint64_t sub_1DE04AB44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE04B55C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DE04AB70()
{
  return 0;
}

void sub_1DE04AB7C(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DE04AB88(uint64_t a1)
{
  unint64_t v2 = sub_1DE04AD4C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE04ABC4(uint64_t a1)
{
  unint64_t v2 = sub_1DE04AD4C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t StartMethodData.encode(to:)(void *a1)
{
  sub_1DE04AF24(0, &qword_1EBEC7620, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE04AD4C();
  sub_1DE480790();
  sub_1DE480580();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DE04AD4C()
{
  unint64_t result = qword_1EBEC2F20;
  if (!qword_1EBEC2F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC2F20);
  }
  return result;
}

uint64_t StartMethodData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1DE04AF24(0, &qword_1EABA19C0, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE04AD4C();
  sub_1DE480770();
  if (!v2)
  {
    uint64_t v10 = sub_1DE4804A0();
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DE04AF24(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE04AD4C();
    unint64_t v7 = a3(a1, &type metadata for StartMethodData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1DE04AF8C()
{
  unint64_t result = qword_1EBEC2F48;
  if (!qword_1EBEC2F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC2F48);
  }
  return result;
}

unint64_t sub_1DE04AFE4()
{
  unint64_t result = qword_1EBEC2F40;
  if (!qword_1EBEC2F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC2F40);
  }
  return result;
}

uint64_t sub_1DE04B038()
{
  return 0;
}

uint64_t sub_1DE04B040()
{
  return sub_1DE47EC80();
}

uint64_t sub_1DE04B058()
{
  return sub_1DE47EC90();
}

uint64_t sub_1DE04B070()
{
  return sub_1DE47EC70();
}

uint64_t sub_1DE04B088@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return StartMethodData.init(from:)(a1, a2);
}

uint64_t sub_1DE04B0A0(void *a1)
{
  sub_1DE04AF24(0, &qword_1EBEC7620, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE04AD4C();
  sub_1DE480790();
  sub_1DE480580();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void *initializeBufferWithCopyOfBuffer for StartMethodData(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for StartMethodData()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for StartMethodData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for StartMethodData(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StartMethodData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StartMethodData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StartMethodData()
{
  return &type metadata for StartMethodData;
}

uint64_t getEnumTagSinglePayload for StartMethodData.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for StartMethodData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DE04B41CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StartMethodData.CodingKeys()
{
  return &type metadata for StartMethodData.CodingKeys;
}

unint64_t sub_1DE04B458()
{
  unint64_t result = qword_1EABA19C8;
  if (!qword_1EABA19C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA19C8);
  }
  return result;
}

unint64_t sub_1DE04B4B0()
{
  unint64_t result = qword_1EBEC2F30;
  if (!qword_1EBEC2F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC2F30);
  }
  return result;
}

unint64_t sub_1DE04B508()
{
  unint64_t result = qword_1EBEC2F28;
  if (!qword_1EBEC2F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC2F28);
  }
  return result;
}

uint64_t sub_1DE04B55C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000001DE4BDCD0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1DE480660();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t static OfflineModeData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t OfflineModeData.isItemAvailable.getter()
{
  return *v0;
}

uint64_t OfflineModeData.isItemAvailable.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*OfflineModeData.isItemAvailable.modify())()
{
  return nullsub_1;
}

NewsAnalytics::OfflineModeData __swiftcall OfflineModeData.init(isItemAvailable:)(NewsAnalytics::OfflineModeData isItemAvailable)
{
  v1->isItemAvailable = isItemAvailable.isItemAvailable;
  return isItemAvailable;
}

uint64_t sub_1DE04B628()
{
  return 0x76416D6574497369;
}

uint64_t sub_1DE04B64C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x76416D6574497369 && a2 == 0xEF656C62616C6961)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1DE480660();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DE04B708(uint64_t a1)
{
  unint64_t v2 = sub_1DE04B8C8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE04B744(uint64_t a1)
{
  unint64_t v2 = sub_1DE04B8C8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t OfflineModeData.encode(to:)(void *a1)
{
  sub_1DE04BAA0(0, &qword_1EBEC9C10, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE04B8C8();
  sub_1DE480790();
  sub_1DE480590();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DE04B8C8()
{
  unint64_t result = qword_1EBEC97E8;
  if (!qword_1EBEC97E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC97E8);
  }
  return result;
}

uint64_t OfflineModeData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_1DE04BAA0(0, &qword_1EBEC9BA0, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE04B8C8();
  sub_1DE480770();
  if (!v2)
  {
    char v10 = sub_1DE4804B0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DE04BAA0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE04B8C8();
    unint64_t v7 = a3(a1, &type metadata for OfflineModeData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1DE04BB08()
{
  unint64_t result = qword_1EBEC9070;
  if (!qword_1EBEC9070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC9070);
  }
  return result;
}

unint64_t sub_1DE04BB60()
{
  unint64_t result = qword_1EBEC9800;
  if (!qword_1EBEC9800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC9800);
  }
  return result;
}

uint64_t sub_1DE04BBB4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return OfflineModeData.init(from:)(a1, a2);
}

uint64_t sub_1DE04BBCC(void *a1)
{
  sub_1DE04BAA0(0, &qword_1EBEC9C10, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE04B8C8();
  sub_1DE480790();
  sub_1DE480590();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t getEnumTagSinglePayload for OfflineModeData(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for OfflineModeData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE04BE80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OfflineModeData()
{
  return &type metadata for OfflineModeData;
}

unsigned char *storeEnumTagSinglePayload for OfflineModeData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DE04BF54);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for OfflineModeData.CodingKeys()
{
  return &type metadata for OfflineModeData.CodingKeys;
}

unint64_t sub_1DE04BF90()
{
  unint64_t result = qword_1EABA19D0;
  if (!qword_1EABA19D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA19D0);
  }
  return result;
}

unint64_t sub_1DE04BFE8()
{
  unint64_t result = qword_1EBEC97F8;
  if (!qword_1EBEC97F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC97F8);
  }
  return result;
}

unint64_t sub_1DE04C040()
{
  unint64_t result = qword_1EBEC97F0;
  if (!qword_1EBEC97F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC97F0);
  }
  return result;
}

NewsAnalytics::CacheState_optional __swiftcall CacheState.init(rawValue:)(Swift::String rawValue)
{
  int v2 = v1;
  unint64_t v3 = sub_1DE480420();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *int v2 = v5;
  return result;
}

uint64_t CacheState.rawValue.getter()
{
  uint64_t v1 = 7629160;
  if (*v0 != 1) {
    uint64_t v1 = 1936943469;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_1DE04C13C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DE3DC0A4(*a1, *a2);
}

unint64_t sub_1DE04C14C()
{
  unint64_t result = qword_1EABA19D8;
  if (!qword_1EABA19D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA19D8);
  }
  return result;
}

uint64_t sub_1DE04C1A0()
{
  return sub_1DE480750();
}

uint64_t sub_1DE04C234()
{
  sub_1DE47FF00();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE04C2B4()
{
  return sub_1DE480750();
}

NewsAnalytics::CacheState_optional sub_1DE04C344(Swift::String *a1)
{
  return CacheState.init(rawValue:)(*a1);
}

void sub_1DE04C350(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE300000000000000;
  uint64_t v5 = 7629160;
  if (v2 != 1)
  {
    uint64_t v5 = 1936943469;
    unint64_t v4 = 0xE400000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1DE04C3A0()
{
  return sub_1DE47FFF0();
}

uint64_t sub_1DE04C400()
{
  return sub_1DE47FFE0();
}

uint64_t getEnumTagSinglePayload for CacheState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CacheState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE04C5ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_1DE04C5D4(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1DE04C5DC(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for CacheState()
{
  return &type metadata for CacheState;
}

unint64_t sub_1DE04C5F4()
{
  unint64_t result = qword_1EBEC22E8;
  if (!qword_1EBEC22E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC22E8);
  }
  return result;
}

uint64_t sub_1DE04C648()
{
  sub_1DE04C848();
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  unsigned int v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE04C8F8();
  sub_1DE04CAF8(0, (unint64_t *)&qword_1EBEC7720, MEMORY[0x1E4F4AA20], MEMORY[0x1E4FBBE00]);
  uint64_t v5 = sub_1DE47ECB0();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1DE481D50;
  (*(void (**)(unint64_t, void, uint64_t))(v6 + 104))(v8 + v7, *MEMORY[0x1E4F4AA10], v5);
  sub_1DE04C8A4();
  sub_1DE47EF20();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

void sub_1DE04C848()
{
  if (!qword_1EBEC1D38)
  {
    sub_1DE04C8A4();
    unint64_t v0 = sub_1DE47EB40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBEC1D38);
    }
  }
}

unint64_t sub_1DE04C8A4()
{
  unint64_t result = qword_1EBEC70F8;
  if (!qword_1EBEC70F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC70F8);
  }
  return result;
}

uint64_t sub_1DE04C8F8()
{
  uint64_t v1 = v0;
  id v2 = *(id *)(v0 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_client);
  uint64_t v3 = sub_1DE47F220();
  uint64_t v5 = v4;
  uint64_t v6 = sub_1DE47F200();
  uint64_t v8 = v7;

  sub_1DE04CA64(v1 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_appExtensionCommunicator, (uint64_t)v15);
  uint64_t v9 = v16;
  if (v16)
  {
    uint64_t v10 = v17;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    v14[3] = &type metadata for AppData;
    v14[4] = sub_1DE04C8A4();
    uint64_t v11 = (void *)swift_allocObject();
    v14[0] = v11;
    v11[2] = v3;
    v11[3] = v5;
    v11[4] = v6;
    v11[5] = v8;
    uint64_t v12 = *(void (**)(void *, uint64_t, uint64_t))(v10 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v14, v9, v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  else
  {
    sub_1DE04CBB4((uint64_t)v15);
  }
  v15[0] = v3;
  v15[1] = v5;
  v15[2] = v6;
  uint64_t v16 = v8;
  sub_1DE04C8A4();
  return sub_1DE47EB30();
}

uint64_t sub_1DE04CA64(uint64_t a1, uint64_t a2)
{
  sub_1DE04CAF8(0, &qword_1EBECB6E0, (uint64_t (*)(uint64_t))sub_1DE04CB5C, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1DE04CAF8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1DE04CB5C()
{
  unint64_t result = qword_1EBECB6D0;
  if (!qword_1EBECB6D0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBECB6D0);
  }
  return result;
}

uint64_t sub_1DE04CBB4(uint64_t a1)
{
  sub_1DE04CAF8(0, &qword_1EBECB6E0, (uint64_t (*)(uint64_t))sub_1DE04CB5C, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DE04CC40()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

NewsAnalytics::LiveActivityDismissal_optional __swiftcall LiveActivityDismissal.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1DE480420();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t LiveActivityDismissal.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6D6574737973;
      break;
    case 2:
      uint64_t result = 0x6C69546F63736964;
      break;
    case 3:
      uint64_t result = 0x6465626D45626577;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE04CD6C(unsigned __int8 *a1, char *a2)
{
  return sub_1DE3D5AB8(*a1, *a2);
}

unint64_t sub_1DE04CD7C()
{
  unint64_t result = qword_1EABA19E0;
  if (!qword_1EABA19E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA19E0);
  }
  return result;
}

uint64_t sub_1DE04CDD0()
{
  return sub_1DE480750();
}

uint64_t sub_1DE04CEAC()
{
  sub_1DE47FF00();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE04CF70()
{
  return sub_1DE480750();
}

NewsAnalytics::LiveActivityDismissal_optional sub_1DE04D048(Swift::String *a1)
{
  return LiveActivityDismissal.init(rawValue:)(*a1);
}

void sub_1DE04D054(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x6D6574737973;
      goto LABEL_3;
    case 2:
      *a1 = 0x6C69546F63736964;
      a1[1] = 0xE900000000000065;
      break;
    case 3:
      *a1 = 0x6465626D45626577;
      a1[1] = 0xE800000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1DE04D0F0()
{
  return sub_1DE47FFF0();
}

uint64_t sub_1DE04D150()
{
  return sub_1DE47FFE0();
}

uint64_t getEnumTagSinglePayload for LiveActivityDismissal(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for LiveActivityDismissal(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE04D2FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LiveActivityDismissal()
{
  return &type metadata for LiveActivityDismissal;
}

unint64_t sub_1DE04D334()
{
  unint64_t result = qword_1EABA19E8;
  if (!qword_1EABA19E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA19E8);
  }
  return result;
}

uint64_t sub_1DE04D388(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4A9C8], qword_1EABA19F0, MEMORY[0x1E4F4A9C0]);
}

uint64_t static PersonalizedAdsEngagementEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0920, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EABA19F0, a1);
}

uint64_t static PersonalizedAdsEngagementEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_1DE04D3F0(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4AAB0], qword_1EABA1A08, MEMORY[0x1E4F4AAA0]);
}

uint64_t sub_1DE04D418(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, unsigned int *a4)
{
  uint64_t v6 = a2(0);
  __swift_allocate_value_buffer(v6, a3);
  uint64_t v7 = __swift_project_value_buffer(v6, (uint64_t)a3);
  uint64_t v8 = *a4;
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104);

  return v9(v7, v8, v6);
}

uint64_t static PersonalizedAdsEngagementEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0928, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EABA1A08, a1);
}

uint64_t sub_1DE04D4DC()
{
  uint64_t v0 = sub_1DE47F020();
  __swift_allocate_value_buffer(v0, qword_1EABA1A20);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EABA1A20);
  return sub_1DE47F010();
}

uint64_t static PersonalizedAdsEngagementEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0930, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA1A20, a1);
}

uint64_t sub_1DE04D560@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = __swift_project_value_buffer(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t PersonalizedAdsEngagementEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084((uint64_t (*)(void))sub_1DE04D618, a1);
}

void sub_1DE04D618()
{
  if (!qword_1EBEC2008)
  {
    sub_1DE47F330();
    uint64_t v0 = (void (*)(uint64_t))MEMORY[0x1E4F4AB70];
    sub_1DE04D884(&qword_1EBEC2038, MEMORY[0x1E4F4AB70]);
    sub_1DE04D884(&qword_1EBEC2030, v0);
    unint64_t v1 = sub_1DE47ECA0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBEC2008);
    }
  }
}

uint64_t PersonalizedAdsEngagementEvent.eventData.setter(uint64_t a1)
{
  sub_1DE04D618();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*PersonalizedAdsEngagementEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t PersonalizedAdsEngagementEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E120(type metadata accessor for PersonalizedAdsEngagementEvent, (uint64_t (*)(void))sub_1DE04D7B8, a1);
}

uint64_t type metadata accessor for PersonalizedAdsEngagementEvent(uint64_t a1)
{
  return sub_1DE04E1D0(a1, (uint64_t *)&unk_1EABA1A68);
}

void sub_1DE04D7B8()
{
  if (!qword_1EBEC2010)
  {
    sub_1DE47F350();
    uint64_t v0 = (void (*)(uint64_t))MEMORY[0x1E4F4AB90];
    sub_1DE04D884((unint64_t *)&unk_1EBEC2048, MEMORY[0x1E4F4AB90]);
    sub_1DE04D884(&qword_1EBEC2040, v0);
    unint64_t v1 = sub_1DE47ECA0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBEC2010);
    }
  }
}

uint64_t sub_1DE04D884(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t PersonalizedAdsEngagementEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PersonalizedAdsEngagementEvent(0) + 20);
  sub_1DE04D7B8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PersonalizedAdsEngagementEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t PersonalizedAdsEngagementEvent.userSelectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PersonalizedAdsEngagementEvent(0) + 24);
  sub_1DE04DC8C(0, &qword_1EABA1A38, (void (*)(void))sub_1DE04DA3C, (void (*)(void))sub_1DE04DA90);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE04DA3C()
{
  unint64_t result = qword_1EABA1A40;
  if (!qword_1EABA1A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1A40);
  }
  return result;
}

unint64_t sub_1DE04DA90()
{
  unint64_t result = qword_1EABA1A48;
  if (!qword_1EABA1A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1A48);
  }
  return result;
}

uint64_t PersonalizedAdsEngagementEvent.userSelectionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PersonalizedAdsEngagementEvent(0) + 24);
  sub_1DE04DC8C(0, &qword_1EABA1A38, (void (*)(void))sub_1DE04DA3C, (void (*)(void))sub_1DE04DA90);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PersonalizedAdsEngagementEvent.userSelectionData.modify())()
{
  return nullsub_1;
}

uint64_t PersonalizedAdsEngagementEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PersonalizedAdsEngagementEvent(0) + 28);
  sub_1DE04DC8C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_1DE04DC8C(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_1DE47ECA0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1DE04DD08()
{
  unint64_t result = qword_1EBEC6B58;
  if (!qword_1EBEC6B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC6B58);
  }
  return result;
}

unint64_t sub_1DE04DD5C()
{
  unint64_t result = qword_1EBEC6B50;
  if (!qword_1EBEC6B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC6B50);
  }
  return result;
}

uint64_t PersonalizedAdsEngagementEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PersonalizedAdsEngagementEvent(0) + 28);
  sub_1DE04DC8C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PersonalizedAdsEngagementEvent.userBundleSubscriptionContextData.modify())()
{
  return nullsub_1;
}

uint64_t PersonalizedAdsEngagementEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for PersonalizedAdsEngagementEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_1DE04DC8C(0, &qword_1EABA1A38, (void (*)(void))sub_1DE04DA3C, (void (*)(void))sub_1DE04DA90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_1DE04DC8C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);

  return v11(v9, v2, v10);
}

uint64_t PersonalizedAdsEngagementEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084(MEMORY[0x1E4F4AB70], a1);
}

uint64_t sub_1DE04E084@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a2, v2, v4);
}

uint64_t PersonalizedAdsEngagementEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E120(type metadata accessor for PersonalizedAdsEngagementEvent.Model, MEMORY[0x1E4F4AB90], a1);
}

uint64_t sub_1DE04E120@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for PersonalizedAdsEngagementEvent.Model(uint64_t a1)
{
  return sub_1DE04E1D0(a1, (uint64_t *)&unk_1EABA1A78);
}

uint64_t sub_1DE04E1D0(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t PersonalizedAdsEngagementEvent.Model.userSelectionData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for PersonalizedAdsEngagementEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t PersonalizedAdsEngagementEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (char *)(v1 + *(int *)(type metadata accessor for PersonalizedAdsEngagementEvent.Model(0) + 28));
  char v4 = *v3;
  uint64_t v5 = *((void *)v3 + 1);
  uint64_t v6 = *((void *)v3 + 2);
  char v7 = v3[24];
  char v8 = v3[25];
  uint64_t v10 = *((void *)v3 + 4);
  uint64_t v9 = *((void *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(unsigned char *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 25) = v8;
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t PersonalizedAdsEngagementEvent.Model.init(eventData:timedData:userSelectionData:userBundleSubscriptionContextData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  char v8 = *a3;
  char v9 = *a4;
  uint64_t v10 = *((void *)a4 + 1);
  uint64_t v11 = *((void *)a4 + 2);
  char v12 = a4[24];
  char v13 = a4[25];
  uint64_t v21 = *((void *)a4 + 5);
  uint64_t v22 = *((void *)a4 + 4);
  char v20 = a4[48];
  uint64_t v14 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(a5, a1, v14);
  char v15 = (int *)type metadata accessor for PersonalizedAdsEngagementEvent.Model(0);
  uint64_t v16 = a5 + v15[5];
  uint64_t v17 = sub_1DE47F350();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v16, a2, v17);
  *(unsigned char *)(a5 + v15[6]) = v8;
  uint64_t v19 = a5 + v15[7];
  *(unsigned char *)uint64_t v19 = v9;
  *(void *)(v19 + 8) = v10;
  *(void *)(v19 + 16) = v11;
  *(unsigned char *)(v19 + 24) = v12;
  *(unsigned char *)(v19 + 25) = v13;
  *(void *)(v19 + 32) = v22;
  *(void *)(v19 + 40) = v21;
  *(unsigned char *)(v19 + 48) = v20;
  return result;
}

BOOL sub_1DE04E3EC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1DE04E400()
{
  return sub_1DE480750();
}

uint64_t sub_1DE04E448()
{
  return sub_1DE480740();
}

uint64_t sub_1DE04E474()
{
  return sub_1DE480750();
}

unint64_t sub_1DE04E4B8()
{
  unint64_t result = 0x746144746E657665;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x74614464656D6974;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0xD000000000000021;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE04E554@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE050F10(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DE04E57C(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1DE04E588(uint64_t a1)
{
  unint64_t v2 = sub_1DE04E8CC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE04E5C4(uint64_t a1)
{
  unint64_t v2 = sub_1DE04E8CC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PersonalizedAdsEngagementEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1DE04EE68(0, &qword_1EABA1A50, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE04E8CC();
  sub_1DE480790();
  char v17 = 0;
  sub_1DE47F330();
  sub_1DE04D884(&qword_1EBEC2030, MEMORY[0x1E4F4AB70]);
  sub_1DE4805C0();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for PersonalizedAdsEngagementEvent.Model(0);
    char v17 = 1;
    sub_1DE47F350();
    sub_1DE04D884(&qword_1EBEC2040, MEMORY[0x1E4F4AB90]);
    sub_1DE4805C0();
    char v17 = *(unsigned char *)(v3 + *(int *)(v10 + 24));
    char v23 = 2;
    sub_1DE04DA90();
    sub_1DE4805C0();
    uint64_t v11 = v3 + *(int *)(v10 + 28);
    char v12 = *(unsigned char *)(v11 + 24);
    char v13 = *(unsigned char *)(v11 + 25);
    char v14 = *(unsigned char *)(v11 + 48);
    char v17 = *(unsigned char *)v11;
    long long v18 = *(_OWORD *)(v11 + 8);
    char v19 = v12;
    char v20 = v13;
    long long v21 = *(_OWORD *)(v11 + 32);
    char v22 = v14;
    char v23 = 3;
    sub_1DE04DD5C();
    sub_1DE4805C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DE04E8CC()
{
  unint64_t result = qword_1EABA1A58;
  if (!qword_1EABA1A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1A58);
  }
  return result;
}

uint64_t PersonalizedAdsEngagementEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v27 = sub_1DE47F350();
  uint64_t v24 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  char v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DE47F330();
  uint64_t v26 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  v29 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE04EE68(0, &qword_1EABA1A60, MEMORY[0x1E4FBBDC0]);
  uint64_t v28 = v7;
  uint64_t v25 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  char v9 = (char *)&v23 - v8;
  uint64_t v10 = (int *)type metadata accessor for PersonalizedAdsEngagementEvent.Model(0);
  MEMORY[0x1F4188790](v10);
  char v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE04E8CC();
  v30 = v9;
  uint64_t v13 = (uint64_t)v31;
  sub_1DE480770();
  if (v13) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v31 = a1;
  uint64_t v15 = v26;
  uint64_t v14 = v27;
  char v32 = 0;
  sub_1DE04D884(&qword_1EBEC2038, MEMORY[0x1E4F4AB70]);
  sub_1DE4804E0();
  uint64_t v16 = *(void (**)(char *, char *))(v15 + 32);
  char v17 = v29;
  v29 = (char *)v5;
  v16(v12, v17);
  char v32 = 1;
  sub_1DE04D884((unint64_t *)&unk_1EBEC2048, MEMORY[0x1E4F4AB90]);
  sub_1DE4804E0();
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(&v12[v10[5]], v4, v14);
  char v38 = 2;
  sub_1DE04DA3C();
  sub_1DE4804E0();
  v12[v10[6]] = v32;
  char v38 = 3;
  sub_1DE04DD08();
  sub_1DE4804E0();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v28);
  char v18 = v34;
  char v19 = v35;
  char v20 = v37;
  long long v21 = &v12[v10[7]];
  *long long v21 = v32;
  *(_OWORD *)(v21 + 8) = v33;
  v21[24] = v18;
  v21[25] = v19;
  *((_OWORD *)v21 + 2) = v36;
  v21[48] = v20;
  sub_1DE04EECC((uint64_t)v12, v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  return sub_1DE04EF30((uint64_t)v12);
}

void sub_1DE04EE68(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE04E8CC();
    unint64_t v7 = a3(a1, &type metadata for PersonalizedAdsEngagementEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DE04EECC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PersonalizedAdsEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DE04EF30(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PersonalizedAdsEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DE04EF8C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PersonalizedAdsEngagementEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DE04EFA4(void *a1)
{
  return PersonalizedAdsEngagementEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DE04EFBC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0920, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EABA19F0, a1);
}

uint64_t sub_1DE04EFF4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0928, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EABA1A08, a1);
}

uint64_t sub_1DE04F02C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0930, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA1A20, a1);
}

uint64_t sub_1DE04F064@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = __swift_project_value_buffer(v7, a3);
  char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_1DE04F108@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_1DE04DC8C(0, &qword_1EABA1A38, (void (*)(void))sub_1DE04DA3C, (void (*)(void))sub_1DE04DA90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_1DE04DC8C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  char v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);

  return v12(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for PersonalizedAdsEngagementEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DE04D618();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DE04D7B8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_1DE04DC8C(0, &qword_1EABA1A38, (void (*)(void))sub_1DE04DA3C, (void (*)(void))sub_1DE04DA90);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    char v17 = (char *)a1 + v16;
    char v18 = (char *)a2 + v16;
    sub_1DE04DC8C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for PersonalizedAdsEngagementEvent(uint64_t a1, int *a2)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_1DE04DC8C(0, &qword_1EABA1A38, (void (*)(void))sub_1DE04DA3C, (void (*)(void))sub_1DE04DA90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_1DE04DC8C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t initializeWithCopy for PersonalizedAdsEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE04DC8C(0, &qword_1EABA1A38, (void (*)(void))sub_1DE04DA3C, (void (*)(void))sub_1DE04DA90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE04DC8C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for PersonalizedAdsEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE04DC8C(0, &qword_1EABA1A38, (void (*)(void))sub_1DE04DA3C, (void (*)(void))sub_1DE04DA90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE04DC8C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for PersonalizedAdsEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE04DC8C(0, &qword_1EABA1A38, (void (*)(void))sub_1DE04DA3C, (void (*)(void))sub_1DE04DA90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE04DC8C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for PersonalizedAdsEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE04DC8C(0, &qword_1EABA1A38, (void (*)(void))sub_1DE04DA3C, (void (*)(void))sub_1DE04DA90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE04DC8C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for PersonalizedAdsEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE04FD88);
}

uint64_t sub_1DE04FD88(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  sub_1DE04D7B8();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  sub_1DE04DC8C(0, &qword_1EABA1A38, (void (*)(void))sub_1DE04DA3C, (void (*)(void))sub_1DE04DA90);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  sub_1DE04DC8C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for PersonalizedAdsEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE04FFA4);
}

uint64_t sub_1DE04FFA4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_1DE04D618();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  sub_1DE04D7B8();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  sub_1DE04DC8C(0, &qword_1EABA1A38, (void (*)(void))sub_1DE04DA3C, (void (*)(void))sub_1DE04DA90);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  sub_1DE04DC8C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

void sub_1DE0501B8()
{
  sub_1DE04D618();
  if (v0 <= 0x3F)
  {
    sub_1DE04D7B8();
    if (v1 <= 0x3F)
    {
      sub_1DE04DC8C(319, &qword_1EABA1A38, (void (*)(void))sub_1DE04DA3C, (void (*)(void))sub_1DE04DA90);
      if (v2 <= 0x3F)
      {
        sub_1DE04DC8C(319, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for PersonalizedAdsEngagementEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DE47F330();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DE47F350();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    *uint64_t v13 = *v14;
    uint64_t v15 = *((void *)v14 + 2);
    *((void *)v13 + 1) = *((void *)v14 + 1);
    *((void *)v13 + 2) = v15;
    *((_WORD *)v13 + 12) = *((_WORD *)v14 + 12);
    uint64_t v16 = *((void *)v14 + 5);
    *((void *)v13 + 4) = *((void *)v14 + 4);
    *((void *)v13 + 5) = v16;
    v13[48] = v14[48];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for PersonalizedAdsEngagementEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PersonalizedAdsEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)uint64_t v12 = *(unsigned char *)v13;
  uint64_t v14 = *(void *)(v13 + 16);
  *(void *)(v12 + 8) = *(void *)(v13 + 8);
  *(void *)(v12 + 16) = v14;
  *(_WORD *)(v12 + 24) = *(_WORD *)(v13 + 24);
  uint64_t v15 = *(void *)(v13 + 40);
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  *(void *)(v12 + 40) = v15;
  *(unsigned char *)(v12 + 48) = *(unsigned char *)(v13 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PersonalizedAdsEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v11 = a3[7];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)uint64_t v12 = *(unsigned char *)v13;
  *(void *)(v12 + 8) = *(void *)(v13 + 8);
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 24) = *(unsigned char *)(v13 + 24);
  *(unsigned char *)(v12 + 25) = *(unsigned char *)(v13 + 25);
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  *(void *)(v12 + 40) = *(void *)(v13 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 48) = *(unsigned char *)(v13 + 48);
  return a1;
}

uint64_t initializeWithTake for PersonalizedAdsEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  long long v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
  *(unsigned char *)(v12 + 48) = *(unsigned char *)(v13 + 48);
  return a1;
}

uint64_t assignWithTake for PersonalizedAdsEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)uint64_t v12 = *(unsigned char *)v13;
  uint64_t v14 = *(void *)(v13 + 16);
  *(void *)(v12 + 8) = *(void *)(v13 + 8);
  *(void *)(v12 + 16) = v14;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 24) = *(unsigned char *)(v13 + 24);
  *(unsigned char *)(v12 + 25) = *(unsigned char *)(v13 + 25);
  uint64_t v15 = *(void *)(v13 + 40);
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  *(void *)(v12 + 40) = v15;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 48) = *(unsigned char *)(v13 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for PersonalizedAdsEngagementEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE0509DC);
}

uint64_t sub_1DE0509DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DE47F330();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1DE47F350();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 28) + 16);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  int v15 = v14 - 1;
  if (v15 < 0) {
    int v15 = -1;
  }
  return (v15 + 1);
}

uint64_t storeEnumTagSinglePayload for PersonalizedAdsEngagementEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE050B14);
}

uint64_t sub_1DE050B14(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1DE47F330();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_1DE47F350();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 28) + 16) = a2;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_1DE050C28()
{
  uint64_t result = sub_1DE47F330();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1DE47F350();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PersonalizedAdsEngagementEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE050DD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonalizedAdsEngagementEvent.Model.CodingKeys()
{
  return &type metadata for PersonalizedAdsEngagementEvent.Model.CodingKeys;
}

unint64_t sub_1DE050E0C()
{
  unint64_t result = qword_1EABA1A88;
  if (!qword_1EABA1A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1A88);
  }
  return result;
}

unint64_t sub_1DE050E64()
{
  unint64_t result = qword_1EABA1A90;
  if (!qword_1EABA1A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1A90);
  }
  return result;
}

unint64_t sub_1DE050EBC()
{
  unint64_t result = qword_1EABA1A98;
  if (!qword_1EABA1A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1A98);
  }
  return result;
}

uint64_t sub_1DE050F10(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DE4BDD80 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001DE4BDDA0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1DE480660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t static ReferralData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t ReferralData.referringApplication.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ReferralData.referringApplication.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *BOOL v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ReferralData.referringApplication.modify())()
{
  return nullsub_1;
}

uint64_t ReferralData.referringUrl.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ReferralData.referringUrl.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ReferralData.referringUrl.modify())()
{
  return nullsub_1;
}

uint64_t ReferralData.userActivityType.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ReferralData.userActivityType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*ReferralData.userActivityType.modify())()
{
  return nullsub_1;
}

void __swiftcall ReferralData.init(referringApplication:referringUrl:userActivityType:)(NewsAnalytics::ReferralData *__return_ptr retstr, Swift::String referringApplication, Swift::String referringUrl, Swift::String_optional userActivityType)
{
  retstr->referringApplication = referringApplication;
  retstr->referringUrl = referringUrl;
  retstr->userActivityType = userActivityType;
}

unint64_t sub_1DE051280()
{
  unint64_t v1 = 0xD000000000000010;
  if (*v0 == 1) {
    unint64_t v1 = 0x6E69727265666572;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000014;
  }
}

uint64_t sub_1DE0512E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE051DDC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DE051310(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1DE05131C(uint64_t a1)
{
  unint64_t v2 = sub_1DE05155C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE051358(uint64_t a1)
{
  unint64_t v2 = sub_1DE05155C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ReferralData.encode(to:)(void *a1)
{
  sub_1DE051864(0, &qword_1EBEC1C28, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v12 - v6;
  uint64_t v8 = v1[2];
  v12[3] = v1[3];
  v12[4] = v8;
  uint64_t v9 = v1[4];
  v12[1] = v1[5];
  v12[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE05155C();
  sub_1DE480790();
  char v15 = 0;
  uint64_t v10 = v12[5];
  sub_1DE480580();
  if (!v10)
  {
    char v14 = 1;
    sub_1DE480580();
    char v13 = 2;
    sub_1DE480520();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DE05155C()
{
  unint64_t result = qword_1EBEC1560;
  if (!qword_1EBEC1560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC1560);
  }
  return result;
}

uint64_t ReferralData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1DE051864(0, &qword_1EBEC1C00, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE05155C();
  sub_1DE480770();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v28 = 0;
    uint64_t v10 = sub_1DE4804A0();
    uint64_t v13 = v12;
    uint64_t v25 = v10;
    char v27 = 1;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1DE4804A0();
    uint64_t v16 = v15;
    uint64_t v23 = v14;
    char v26 = 2;
    swift_bridgeObjectRetain();
    uint64_t v24 = v16;
    uint64_t v17 = sub_1DE480440();
    uint64_t v19 = v18;
    uint64_t v20 = v17;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v21 = v24;
    *a2 = v25;
    a2[1] = v13;
    a2[2] = v23;
    a2[3] = v21;
    a2[4] = v20;
    a2[5] = v19;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void sub_1DE051864(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE05155C();
    unint64_t v7 = a3(a1, &type metadata for ReferralData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1DE0518CC()
{
  unint64_t result = qword_1EBEC25B0;
  if (!qword_1EBEC25B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC25B0);
  }
  return result;
}

unint64_t sub_1DE051924()
{
  unint64_t result = qword_1EBEC25A8;
  if (!qword_1EBEC25A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC25A8);
  }
  return result;
}

uint64_t sub_1DE051978@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ReferralData.init(from:)(a1, a2);
}

uint64_t sub_1DE051990(void *a1)
{
  return ReferralData.encode(to:)(a1);
}

uint64_t destroy for ReferralData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ReferralData(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ReferralData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ReferralData(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ReferralData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReferralData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReferralData()
{
  return &type metadata for ReferralData;
}

unsigned char *storeEnumTagSinglePayload for ReferralData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE051C9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReferralData.CodingKeys()
{
  return &type metadata for ReferralData.CodingKeys;
}

unint64_t sub_1DE051CD8()
{
  unint64_t result = qword_1EABA1AA0;
  if (!qword_1EABA1AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1AA0);
  }
  return result;
}

unint64_t sub_1DE051D30()
{
  unint64_t result = qword_1EBEC1570;
  if (!qword_1EBEC1570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC1570);
  }
  return result;
}

unint64_t sub_1DE051D88()
{
  unint64_t result = qword_1EBEC1568;
  if (!qword_1EBEC1568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC1568);
  }
  return result;
}

uint64_t sub_1DE051DDC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000001DE4BDDD0 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E69727265666572 && a2 == 0xEC0000006C725567 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DE4BDDF0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_1DE480660();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t static UserData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t UserData.userID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UserData.userID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*UserData.userID.modify())()
{
  return nullsub_1;
}

uint64_t UserData.isUserIDTemporary.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t UserData.isUserIDTemporary.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t (*UserData.isUserIDTemporary.modify())()
{
  return nullsub_1;
}

void UserData.userType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 17);
}

unsigned char *UserData.userType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 17) = *result;
  return result;
}

uint64_t (*UserData.userType.modify())()
{
  return nullsub_1;
}

uint64_t UserData.userStartDate.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t UserData.userStartDate.setter(uint64_t result)
{
  *(void *)(v1 + 24) = result;
  return result;
}

uint64_t (*UserData.userStartDate.modify())()
{
  return nullsub_1;
}

uint64_t UserData.ageBracket.getter()
{
  return *(unsigned int *)(v0 + 32);
}

uint64_t UserData.ageBracket.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 32) = result;
  return result;
}

uint64_t (*UserData.ageBracket.modify())()
{
  return nullsub_1;
}

float UserData.ageBracketConfidenceLevel.getter()
{
  return *(float *)(v0 + 36);
}

void UserData.ageBracketConfidenceLevel.setter(float a1)
{
  *(float *)(v1 + 36) = a1;
}

uint64_t (*UserData.ageBracketConfidenceLevel.modify())()
{
  return nullsub_1;
}

uint64_t UserData.gender.getter()
{
  return *(unsigned int *)(v0 + 40);
}

uint64_t UserData.gender.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*UserData.gender.modify())()
{
  return nullsub_1;
}

float UserData.genderConfidenceLevel.getter()
{
  return *(float *)(v0 + 44);
}

void UserData.genderConfidenceLevel.setter(float a1)
{
  *(float *)(v1 + 44) = a1;
}

uint64_t (*UserData.genderConfidenceLevel.modify())()
{
  return nullsub_1;
}

uint64_t UserData.userStorefrontID.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UserData.userStorefrontID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*UserData.userStorefrontID.modify())()
{
  return nullsub_1;
}

uint64_t UserData.init(userID:isUserIDTemporary:userType:userStartDate:ageBracket:ageBracketConfidenceLevel:gender:genderConfidenceLevel:userStorefrontID:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, char *a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, float a10@<S0>, float a11@<S1>, uint64_t a12)
{
  char v12 = *a4;
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(unsigned char *)(a9 + 16) = a3;
  *(unsigned char *)(a9 + 17) = v12;
  *(void *)(a9 + 24) = a5;
  *(_DWORD *)(a9 + 32) = a6;
  *(float *)(a9 + 36) = a10;
  *(_DWORD *)(a9 + 40) = a7;
  *(float *)(a9 + 44) = a11;
  *(void *)(a9 + 48) = a8;
  *(void *)(a9 + 56) = a12;
  return result;
}

unint64_t sub_1DE0521E4(char a1)
{
  unint64_t result = 0x444972657375;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x6570795472657375;
      break;
    case 3:
      unint64_t result = 0x7261745372657375;
      break;
    case 4:
      unint64_t result = 0x6B63617242656761;
      break;
    case 5:
      unint64_t result = 0xD000000000000019;
      break;
    case 6:
      unint64_t result = 0x7265646E6567;
      break;
    case 7:
      unint64_t result = 0xD000000000000015;
      break;
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DE05231C()
{
  return sub_1DE0521E4(*v0);
}

uint64_t sub_1DE052324@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE05319C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DE05234C(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_1DE052358(uint64_t a1)
{
  unint64_t v2 = sub_1DE0526DC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE052394(uint64_t a1)
{
  unint64_t v2 = sub_1DE0526DC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t UserData.encode(to:)(void *a1)
{
  sub_1DE052B0C(0, &qword_1EBEC76E0, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unsigned int v6 = (char *)v16 - v5;
  int v7 = *(unsigned __int8 *)(v1 + 16);
  int v20 = *(unsigned __int8 *)(v1 + 17);
  LODWORD(v21) = v7;
  uint64_t v19 = *(void *)(v1 + 24);
  int v18 = *(_DWORD *)(v1 + 32);
  v16[1] = *(_DWORD *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 56);
  uint64_t v17 = *(void *)(v1 + 48);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1;
  uint64_t v12 = v11;
  __swift_project_boxed_opaque_existential_1(v10, v9);
  sub_1DE0526DC();
  sub_1DE480790();
  char v32 = 0;
  uint64_t v13 = v22;
  sub_1DE480580();
  if (v13) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v12);
  }
  char v14 = v20;
  uint64_t v22 = v8;
  char v31 = 1;
  sub_1DE480530();
  char v30 = v14;
  char v29 = 2;
  sub_1DE052730();
  uint64_t v21 = v6;
  sub_1DE4805C0();
  char v28 = 3;
  sub_1DE4805E0();
  char v27 = 4;
  sub_1DE4805D0();
  char v26 = 5;
  sub_1DE4805B0();
  char v25 = 6;
  sub_1DE4805D0();
  char v24 = 7;
  sub_1DE4805B0();
  char v23 = 8;
  sub_1DE480580();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v21, v12);
}

unint64_t sub_1DE0526DC()
{
  unint64_t result = qword_1EBEC7198;
  if (!qword_1EBEC7198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC7198);
  }
  return result;
}

unint64_t sub_1DE052730()
{
  unint64_t result = qword_1EBEC71C8;
  if (!qword_1EBEC71C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC71C8);
  }
  return result;
}

uint64_t UserData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1DE052B0C(0, &qword_1EBEC75A0, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0526DC();
  sub_1DE480770();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v36 = 0;
  uint64_t v10 = sub_1DE4804A0();
  uint64_t v12 = v11;
  char v35 = 1;
  swift_bridgeObjectRetain();
  int v26 = sub_1DE480450();
  char v33 = 2;
  sub_1DE052B70();
  sub_1DE4804E0();
  int v25 = v34;
  char v32 = 3;
  uint64_t v24 = sub_1DE480500();
  char v31 = 4;
  int v23 = sub_1DE4804F0();
  char v30 = 5;
  sub_1DE4804D0();
  int v14 = v13;
  char v29 = 6;
  int v22 = sub_1DE4804F0();
  char v28 = 7;
  sub_1DE4804D0();
  int v21 = v15;
  char v27 = 8;
  uint64_t v20 = sub_1DE4804A0();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v12;
  *(unsigned char *)(a2 + 16) = v26;
  *(unsigned char *)(a2 + 17) = v25;
  *(void *)(a2 + 24) = v24;
  *(_DWORD *)(a2 + 32) = v23;
  *(_DWORD *)(a2 + 36) = v14;
  *(_DWORD *)(a2 + 40) = v22;
  *(_DWORD *)(a2 + 44) = v21;
  *(void *)(a2 + 48) = v20;
  *(void *)(a2 + 56) = v18;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1DE052B0C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE0526DC();
    unint64_t v7 = a3(a1, &type metadata for UserData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1DE052B70()
{
  unint64_t result = qword_1EBEC71D8;
  if (!qword_1EBEC71D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC71D8);
  }
  return result;
}

unint64_t sub_1DE052BC8()
{
  unint64_t result = qword_1EBEC71C0;
  if (!qword_1EBEC71C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC71C0);
  }
  return result;
}

unint64_t sub_1DE052C20()
{
  unint64_t result = qword_1EBEC71B8;
  if (!qword_1EBEC71B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC71B8);
  }
  return result;
}

uint64_t sub_1DE052C74@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return UserData.init(from:)(a1, a2);
}

uint64_t sub_1DE052C8C(void *a1)
{
  return UserData.encode(to:)(a1);
}

uint64_t destroy for UserData()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UserData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UserData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for UserData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UserData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UserData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserData()
{
  return &type metadata for UserData;
}

uint64_t getEnumTagSinglePayload for UserData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for UserData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE05305CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserData.CodingKeys()
{
  return &type metadata for UserData.CodingKeys;
}

unint64_t sub_1DE053098()
{
  unint64_t result = qword_1EABA1AA8;
  if (!qword_1EABA1AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1AA8);
  }
  return result;
}

unint64_t sub_1DE0530F0()
{
  unint64_t result = qword_1EBEC71A8;
  if (!qword_1EBEC71A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC71A8);
  }
  return result;
}

unint64_t sub_1DE053148()
{
  unint64_t result = qword_1EBEC71A0;
  if (!qword_1EBEC71A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC71A0);
  }
  return result;
}

uint64_t sub_1DE05319C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x444972657375 && a2 == 0xE600000000000000;
  if (v2 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DE4BDE10 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6570795472657375 && a2 == 0xE800000000000000 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7261745372657375 && a2 == 0xED00006574614474 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6B63617242656761 && a2 == 0xEA00000000007465 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001DE4BDE30 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7265646E6567 && a2 == 0xE600000000000000 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DE4BDE50 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DE4BDE70)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_1DE480660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

NewsAnalytics::ICloudAccountState_optional __swiftcall ICloudAccountState.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_1DE480420();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *BOOL v2 = v5;
  return result;
}

uint64_t ICloudAccountState.rawValue.getter()
{
  uint64_t v1 = 0x6E496E6567676F6CLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x754F646567676F6CLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_1DE053604(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DE3D7DAC(*a1, *a2);
}

unint64_t sub_1DE053614()
{
  unint64_t result = qword_1EABA1AB0;
  if (!qword_1EABA1AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1AB0);
  }
  return result;
}

uint64_t sub_1DE053668()
{
  return sub_1DE480750();
}

uint64_t sub_1DE053710()
{
  sub_1DE47FF00();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE0537A4()
{
  return sub_1DE480750();
}

NewsAnalytics::ICloudAccountState_optional sub_1DE053848(Swift::String *a1)
{
  return ICloudAccountState.init(rawValue:)(*a1);
}

void sub_1DE053854(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x6E496E6567676F6CLL;
  if (v2 != 1)
  {
    uint64_t v5 = 0x754F646567676F6CLL;
    unint64_t v4 = 0xE900000000000074;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1DE0538B8()
{
  return sub_1DE47FFF0();
}

uint64_t sub_1DE053918()
{
  return sub_1DE47FFE0();
}

unsigned char *storeEnumTagSinglePayload for ICloudAccountState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE053A34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICloudAccountState()
{
  return &type metadata for ICloudAccountState;
}

unint64_t sub_1DE053A6C()
{
  unint64_t result = qword_1EBEC4B00;
  if (!qword_1EBEC4B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC4B00);
  }
  return result;
}

uint64_t sub_1DE053AC0(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4A9C8], qword_1EABA1AB8, MEMORY[0x1E4F4A9C0]);
}

uint64_t static ReplicaAdvertisementViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0938, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EABA1AB8, a1);
}

uint64_t static ReplicaAdvertisementViewEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_1DE053B28(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4AAB0], qword_1EABA1AD0, MEMORY[0x1E4F4AAA0]);
}

uint64_t static ReplicaAdvertisementViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0940, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EABA1AD0, a1);
}

uint64_t sub_1DE053B88()
{
  uint64_t v0 = sub_1DE47F020();
  __swift_allocate_value_buffer(v0, qword_1EABA1AE8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EABA1AE8);
  return sub_1DE47F010();
}

uint64_t static ReplicaAdvertisementViewEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0948, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA1AE8, a1);
}

uint64_t ReplicaAdvertisementViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084((uint64_t (*)(void))sub_1DE04D618, a1);
}

uint64_t ReplicaAdvertisementViewEvent.eventData.setter(uint64_t a1)
{
  sub_1DE04D618();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*ReplicaAdvertisementViewEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ReplicaAdvertisementViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE056040(type metadata accessor for ReplicaAdvertisementViewEvent, (uint64_t (*)(void))sub_1DE04D7B8, a1);
}

uint64_t type metadata accessor for ReplicaAdvertisementViewEvent(uint64_t a1)
{
  return sub_1DE04E1D0(a1, qword_1EBEC68E0);
}

uint64_t ReplicaAdvertisementViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 20);
  sub_1DE04D7B8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReplicaAdvertisementViewEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t ReplicaAdvertisementViewEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 24);
  sub_1DE055730(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE053E68()
{
  unint64_t result = qword_1EBEC23D0;
  if (!qword_1EBEC23D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC23D0);
  }
  return result;
}

unint64_t sub_1DE053EBC()
{
  unint64_t result = qword_1EBEC23C8;
  if (!qword_1EBEC23C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC23C8);
  }
  return result;
}

uint64_t ReplicaAdvertisementViewEvent.articleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 24);
  sub_1DE055730(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReplicaAdvertisementViewEvent.articleData.modify())()
{
  return nullsub_1;
}

uint64_t ReplicaAdvertisementViewEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 28);
  sub_1DE055730(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE0540B8()
{
  unint64_t result = qword_1EBEC7200;
  if (!qword_1EBEC7200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC7200);
  }
  return result;
}

unint64_t sub_1DE05410C()
{
  unint64_t result = qword_1EBEC71F8;
  if (!qword_1EBEC71F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC71F8);
  }
  return result;
}

uint64_t ReplicaAdvertisementViewEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 28);
  sub_1DE055730(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReplicaAdvertisementViewEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t ReplicaAdvertisementViewEvent.articleScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 32);
  sub_1DE055730(0, &qword_1EBEC1E38, (void (*)(void))sub_1DE054308, (void (*)(void))sub_1DE05435C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE054308()
{
  unint64_t result = qword_1EBEC2480;
  if (!qword_1EBEC2480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC2480);
  }
  return result;
}

unint64_t sub_1DE05435C()
{
  unint64_t result = qword_1EBEC2478;
  if (!qword_1EBEC2478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC2478);
  }
  return result;
}

uint64_t ReplicaAdvertisementViewEvent.articleScienceData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 32);
  sub_1DE055730(0, &qword_1EBEC1E38, (void (*)(void))sub_1DE054308, (void (*)(void))sub_1DE05435C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReplicaAdvertisementViewEvent.articleScienceData.modify())()
{
  return nullsub_1;
}

uint64_t ReplicaAdvertisementViewEvent.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 36);
  sub_1DE055730(0, &qword_1EBEC1F68, (void (*)(void))sub_1DE054558, (void (*)(void))sub_1DE0545AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE054558()
{
  unint64_t result = qword_1EBEC5C48;
  if (!qword_1EBEC5C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC5C48);
  }
  return result;
}

unint64_t sub_1DE0545AC()
{
  unint64_t result = qword_1EBEC5C40;
  if (!qword_1EBEC5C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC5C40);
  }
  return result;
}

uint64_t ReplicaAdvertisementViewEvent.userChannelContextData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 36);
  sub_1DE055730(0, &qword_1EBEC1F68, (void (*)(void))sub_1DE054558, (void (*)(void))sub_1DE0545AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReplicaAdvertisementViewEvent.userChannelContextData.modify())()
{
  return nullsub_1;
}

uint64_t ReplicaAdvertisementViewEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 40);
  sub_1DE055730(0, &qword_1EBEC1EC0, (void (*)(void))sub_1DE0547A8, (void (*)(void))sub_1DE0547FC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE0547A8()
{
  unint64_t result = qword_1EBEC2F08;
  if (!qword_1EBEC2F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC2F08);
  }
  return result;
}

unint64_t sub_1DE0547FC()
{
  unint64_t result = qword_1EBEC2F00;
  if (!qword_1EBEC2F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC2F00);
  }
  return result;
}

uint64_t ReplicaAdvertisementViewEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 40);
  sub_1DE055730(0, &qword_1EBEC1EC0, (void (*)(void))sub_1DE0547A8, (void (*)(void))sub_1DE0547FC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReplicaAdvertisementViewEvent.orientationData.modify())()
{
  return nullsub_1;
}

uint64_t ReplicaAdvertisementViewEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 44);
  sub_1DE055730(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE0549F8()
{
  unint64_t result = qword_1EBEC72C0;
  if (!qword_1EBEC72C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC72C0);
  }
  return result;
}

unint64_t sub_1DE054A4C()
{
  unint64_t result = qword_1EBEC72B8;
  if (!qword_1EBEC72B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC72B8);
  }
  return result;
}

uint64_t ReplicaAdvertisementViewEvent.issueData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 44);
  sub_1DE055730(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReplicaAdvertisementViewEvent.issueData.modify())()
{
  return nullsub_1;
}

uint64_t ReplicaAdvertisementViewEvent.issueViewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 48);
  sub_1DE055730(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE054C48()
{
  unint64_t result = qword_1EBEC2900;
  if (!qword_1EBEC2900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC2900);
  }
  return result;
}

unint64_t sub_1DE054C9C()
{
  unint64_t result = qword_1EBEC28F8;
  if (!qword_1EBEC28F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC28F8);
  }
  return result;
}

uint64_t ReplicaAdvertisementViewEvent.issueViewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 48);
  sub_1DE055730(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReplicaAdvertisementViewEvent.issueViewData.modify())()
{
  return nullsub_1;
}

uint64_t ReplicaAdvertisementViewEvent.issueExposureContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 52);
  sub_1DE055730(0, &qword_1EBEC1F70, (void (*)(void))sub_1DE054E98, (void (*)(void))sub_1DE054EEC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE054E98()
{
  unint64_t result = qword_1EBEC5F90;
  if (!qword_1EBEC5F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC5F90);
  }
  return result;
}

unint64_t sub_1DE054EEC()
{
  unint64_t result = qword_1EBEC5F88;
  if (!qword_1EBEC5F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC5F88);
  }
  return result;
}

uint64_t ReplicaAdvertisementViewEvent.issueExposureContextData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 52);
  sub_1DE055730(0, &qword_1EBEC1F70, (void (*)(void))sub_1DE054E98, (void (*)(void))sub_1DE054EEC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReplicaAdvertisementViewEvent.issueExposureContextData.modify())()
{
  return nullsub_1;
}

uint64_t ReplicaAdvertisementViewEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 56);
  sub_1DE055730(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ReplicaAdvertisementViewEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 56);
  sub_1DE055730(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReplicaAdvertisementViewEvent.userBundleSubscriptionContextData.modify())()
{
  return nullsub_1;
}

uint64_t ReplicaAdvertisementViewEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 60);
  sub_1DE055730(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE055290()
{
  unint64_t result = qword_1EBEC2410;
  if (!qword_1EBEC2410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC2410);
  }
  return result;
}

unint64_t sub_1DE0552E4()
{
  unint64_t result = qword_1EBEC2408;
  if (!qword_1EBEC2408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC2408);
  }
  return result;
}

uint64_t ReplicaAdvertisementViewEvent.channelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 60);
  sub_1DE055730(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReplicaAdvertisementViewEvent.channelData.modify())()
{
  return nullsub_1;
}

uint64_t ReplicaAdvertisementViewEvent.issueViewContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 64);
  sub_1DE055730(0, &qword_1EBEC1F48, (void (*)(void))sub_1DE0554E0, (void (*)(void))sub_1DE055534);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE0554E0()
{
  unint64_t result = qword_1EBEC51F0;
  if (!qword_1EBEC51F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC51F0);
  }
  return result;
}

unint64_t sub_1DE055534()
{
  unint64_t result = qword_1EBEC51E8;
  if (!qword_1EBEC51E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC51E8);
  }
  return result;
}

uint64_t ReplicaAdvertisementViewEvent.issueViewContextData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 64);
  sub_1DE055730(0, &qword_1EBEC1F48, (void (*)(void))sub_1DE0554E0, (void (*)(void))sub_1DE055534);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReplicaAdvertisementViewEvent.issueViewContextData.modify())()
{
  return nullsub_1;
}

uint64_t ReplicaAdvertisementViewEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 68);
  sub_1DE055730(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_1DE055730(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_1DE47ECA0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1DE0557AC()
{
  unint64_t result = qword_1EBEC7178;
  if (!qword_1EBEC7178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC7178);
  }
  return result;
}

unint64_t sub_1DE055800()
{
  unint64_t result = qword_1EBEC7170;
  if (!qword_1EBEC7170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC7170);
  }
  return result;
}

uint64_t ReplicaAdvertisementViewEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent(0) + 68);
  sub_1DE055730(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ReplicaAdvertisementViewEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t ReplicaAdvertisementViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for ReplicaAdvertisementViewEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_1DE055730(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_1DE055730(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + v4[8];
  sub_1DE055730(0, &qword_1EBEC1E38, (void (*)(void))sub_1DE054308, (void (*)(void))sub_1DE05435C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v2, v12);
  uint64_t v13 = a1 + v4[9];
  sub_1DE055730(0, &qword_1EBEC1F68, (void (*)(void))sub_1DE054558, (void (*)(void))sub_1DE0545AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v2, v14);
  uint64_t v15 = a1 + v4[10];
  sub_1DE055730(0, &qword_1EBEC1EC0, (void (*)(void))sub_1DE0547A8, (void (*)(void))sub_1DE0547FC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v2, v16);
  uint64_t v17 = a1 + v4[11];
  sub_1DE055730(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v2, v18);
  uint64_t v19 = a1 + v4[12];
  uint64_t v20 = *MEMORY[0x1E4F4A9F8];
  sub_1DE055730(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v19, v20, v21);
  uint64_t v22 = a1 + v4[13];
  sub_1DE055730(0, &qword_1EBEC1F70, (void (*)(void))sub_1DE054E98, (void (*)(void))sub_1DE054EEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v22, v20, v23);
  uint64_t v24 = a1 + v4[14];
  sub_1DE055730(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v24, v2, v25);
  uint64_t v26 = a1 + v4[15];
  sub_1DE055730(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(v26, v2, v27);
  uint64_t v28 = a1 + v4[16];
  sub_1DE055730(0, &qword_1EBEC1F48, (void (*)(void))sub_1DE0554E0, (void (*)(void))sub_1DE055534);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104))(v28, v20, v29);
  uint64_t v30 = a1 + v4[17];
  sub_1DE055730(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  char v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 104);

  return v32(v30, v20, v31);
}

uint64_t ReplicaAdvertisementViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084(MEMORY[0x1E4F4AB70], a1);
}

uint64_t ReplicaAdvertisementViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE056040(type metadata accessor for ReplicaAdvertisementViewEvent.Model, MEMORY[0x1E4F4AB90], a1);
}

uint64_t sub_1DE056040@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for ReplicaAdvertisementViewEvent.Model(uint64_t a1)
{
  return sub_1DE04E1D0(a1, qword_1EBEC6820);
}

uint64_t ReplicaAdvertisementViewEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent.Model(0) + 24);
  long long v4 = *(_OWORD *)(v3 + 80);
  long long v5 = *(_OWORD *)(v3 + 112);
  long long v21 = *(_OWORD *)(v3 + 96);
  v22[0] = v5;
  long long v6 = *(_OWORD *)(v3 + 16);
  long long v7 = *(_OWORD *)(v3 + 48);
  long long v17 = *(_OWORD *)(v3 + 32);
  long long v8 = v17;
  long long v18 = v7;
  long long v9 = *(_OWORD *)(v3 + 48);
  long long v10 = *(_OWORD *)(v3 + 80);
  long long v19 = *(_OWORD *)(v3 + 64);
  long long v11 = v19;
  long long v20 = v10;
  long long v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  long long v13 = v16[0];
  v16[1] = v12;
  long long v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  *(void *)((char *)v22 + 15) = *(void *)(v3 + 127);
  *(void *)(a1 + 127) = *(void *)(v3 + 127);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1DE056184((uint64_t)v16);
}

uint64_t sub_1DE056184(uint64_t a1)
{
  return a1;
}

uint64_t ReplicaAdvertisementViewEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent.Model(0) + 28));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t ReplicaAdvertisementViewEvent.Model.articleScienceData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (const void *)(v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent.Model(0) + 32));
  memcpy(__dst, v3, 0x111uLL);
  memcpy(a1, v3, 0x111uLL);
  return sub_1DE056294((uint64_t)__dst);
}

uint64_t sub_1DE056294(uint64_t a1)
{
  return a1;
}

uint64_t ReplicaAdvertisementViewEvent.Model.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for ReplicaAdvertisementViewEvent.Model(0);
  uint64_t v4 = (char *)(v1 + *(int *)(result + 36));
  char v5 = *v4;
  char v6 = v4[1];
  LOWORD(v4) = *((_WORD *)v4 + 1);
  *(unsigned char *)a1 = v5;
  *(unsigned char *)(a1 + 1) = v6;
  *(_WORD *)(a1 + 2) = (_WORD)v4;
  return result;
}

uint64_t ReplicaAdvertisementViewEvent.Model.orientationData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for ReplicaAdvertisementViewEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t ReplicaAdvertisementViewEvent.Model.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent.Model(0) + 44);
  uint64_t v4 = *(void *)(v3 + 8);
  char v5 = *(unsigned char *)(v3 + 16);
  char v6 = *(unsigned char *)(v3 + 17);
  uint64_t v7 = *(void *)(v3 + 24);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 17) = v6;
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t ReplicaAdvertisementViewEvent.Model.issueViewData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent.Model(0) + 48));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t ReplicaAdvertisementViewEvent.Model.issueExposureContextData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent.Model(0) + 52));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t ReplicaAdvertisementViewEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (char *)(v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent.Model(0) + 56));
  char v4 = *v3;
  uint64_t v5 = *((void *)v3 + 1);
  uint64_t v6 = *((void *)v3 + 2);
  char v7 = v3[24];
  char v8 = v3[25];
  uint64_t v10 = *((void *)v3 + 4);
  uint64_t v9 = *((void *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(unsigned char *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 25) = v8;
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t ReplicaAdvertisementViewEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent.Model(0) + 60);
  uint64_t v4 = *(void *)(v3 + 8);
  char v5 = *(unsigned char *)(v3 + 16);
  char v6 = *(unsigned char *)(v3 + 17);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 32);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 17) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t ReplicaAdvertisementViewEvent.Model.issueViewContextData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for ReplicaAdvertisementViewEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 64));
  return result;
}

uint64_t ReplicaAdvertisementViewEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ReplicaAdvertisementViewEvent.Model(0) + 68));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;

  return sub_1DE056598(v4, v5, v6);
}

uint64_t sub_1DE056598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

__n128 ReplicaAdvertisementViewEvent.Model.init(eventData:timedData:articleData:viewData:articleScienceData:userChannelContextData:orientationData:issueData:issueViewData:issueExposureContextData:userBundleSubscriptionContextData:channelData:issueViewContextData:feedData:)@<Q0>(void *__src@<X4>, uint64_t a2@<X0>, uint64_t a3@<X1>, long long *a4@<X2>, uint64_t *a5@<X3>, char *a6@<X5>, _WORD *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, uint64_t *a11, char *a12, uint64_t *a13, char *a14, __n128 *a15)
{
  long long v72 = a4[6];
  *(_OWORD *)v73 = a4[7];
  *(void *)&v73[15] = *(void *)((char *)a4 + 127);
  long long v68 = a4[2];
  long long v69 = a4[3];
  long long v70 = a4[4];
  long long v71 = a4[5];
  long long v66 = *a4;
  long long v67 = a4[1];
  uint64_t v39 = a5[1];
  uint64_t v40 = *a5;
  __int16 v38 = *((_WORD *)a5 + 8);
  memcpy(__dst, __src, sizeof(__dst));
  char v41 = a6[1];
  char v42 = *a6;
  LOWORD(a6) = *((_WORD *)a6 + 1);
  LOWORD(a7) = *a7;
  uint64_t v47 = a8[1];
  uint64_t v48 = *a8;
  char v45 = *((unsigned char *)a8 + 17);
  char v46 = *((unsigned char *)a8 + 16);
  uint64_t v44 = a8[3];
  uint64_t v49 = a10[1];
  uint64_t v50 = *a10;
  uint64_t v51 = a11[1];
  uint64_t v52 = *a11;
  char v60 = *a12;
  uint64_t v58 = *((void *)a12 + 2);
  uint64_t v59 = *((void *)a12 + 1);
  char v56 = a12[25];
  char v57 = a12[24];
  uint64_t v54 = *((void *)a12 + 5);
  uint64_t v55 = *((void *)a12 + 4);
  char v53 = a12[48];
  uint64_t v19 = *a13;
  uint64_t v64 = a13[1];
  char v62 = *((unsigned char *)a13 + 17);
  char v63 = *((unsigned char *)a13 + 16);
  uint64_t v20 = a13[4];
  uint64_t v61 = a13[3];
  char v21 = *a14;
  __n128 v65 = *a15;
  unint64_t v22 = a15[1].n128_u64[0];
  uint64_t v23 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(a9, a2, v23);
  uint64_t v24 = (int *)type metadata accessor for ReplicaAdvertisementViewEvent.Model(0);
  uint64_t v25 = a9 + v24[5];
  uint64_t v26 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v25, a3, v26);
  uint64_t v27 = a9 + v24[6];
  *(_OWORD *)(v27 + 96) = v72;
  *(_OWORD *)(v27 + 112) = *(_OWORD *)v73;
  *(void *)(v27 + 127) = *(void *)&v73[15];
  *(_OWORD *)(v27 + 32) = v68;
  *(_OWORD *)(v27 + 48) = v69;
  *(_OWORD *)(v27 + 64) = v70;
  *(_OWORD *)(v27 + 80) = v71;
  *(_OWORD *)uint64_t v27 = v66;
  *(_OWORD *)(v27 + 16) = v67;
  uint64_t v28 = a9 + v24[7];
  *(void *)uint64_t v28 = v40;
  *(void *)(v28 + 8) = v39;
  *(_WORD *)(v28 + 16) = v38;
  memcpy((void *)(a9 + v24[8]), __dst, 0x111uLL);
  uint64_t v29 = a9 + v24[9];
  *(unsigned char *)uint64_t v29 = v42;
  *(unsigned char *)(v29 + 1) = v41;
  *(_WORD *)(v29 + 2) = (_WORD)a6;
  *(_WORD *)(a9 + v24[10]) = (_WORD)a7;
  uint64_t v30 = a9 + v24[11];
  *(void *)uint64_t v30 = v48;
  *(void *)(v30 + 8) = v47;
  *(unsigned char *)(v30 + 16) = v46;
  *(unsigned char *)(v30 + 17) = v45;
  *(void *)(v30 + 24) = v44;
  uint64_t v31 = (void *)(a9 + v24[12]);
  void *v31 = v50;
  v31[1] = v49;
  char v32 = (void *)(a9 + v24[13]);
  *char v32 = v52;
  v32[1] = v51;
  uint64_t v33 = a9 + v24[14];
  *(unsigned char *)uint64_t v33 = v60;
  *(void *)(v33 + 8) = v59;
  *(void *)(v33 + 16) = v58;
  *(unsigned char *)(v33 + 24) = v57;
  *(unsigned char *)(v33 + 25) = v56;
  *(void *)(v33 + 32) = v55;
  *(void *)(v33 + 40) = v54;
  *(unsigned char *)(v33 + 48) = v53;
  uint64_t v34 = a9 + v24[15];
  *(void *)uint64_t v34 = v19;
  *(void *)(v34 + 8) = v64;
  *(unsigned char *)(v34 + 16) = v63;
  *(unsigned char *)(v34 + 17) = v62;
  *(void *)(v34 + 24) = v61;
  *(void *)(v34 + 32) = v20;
  *(unsigned char *)(a9 + v24[16]) = v21;
  char v35 = (__n128 *)(a9 + v24[17]);
  __n128 result = v65;
  *char v35 = v65;
  v35[1].n128_u64[0] = v22;
  return result;
}

unint64_t sub_1DE0568FC(char a1)
{
  unint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x74614464656D6974;
      break;
    case 2:
      unint64_t result = 0x44656C6369747261;
      break;
    case 3:
      unint64_t result = 0x6174614477656976;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    case 6:
      unint64_t result = 0x7461746E6569726FLL;
      break;
    case 7:
      unint64_t result = 0x7461446575737369;
      break;
    case 8:
      unint64_t result = 0x6569566575737369;
      break;
    case 9:
      unint64_t result = 0xD000000000000018;
      break;
    case 10:
      unint64_t result = 0xD000000000000021;
      break;
    case 11:
      unint64_t result = 0x446C656E6E616863;
      break;
    case 12:
      unint64_t result = 0xD000000000000014;
      break;
    case 13:
      unint64_t result = 0x6174614464656566;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DE056ACC()
{
  return sub_1DE0568FC(*v0);
}

uint64_t sub_1DE056AD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE05DFC8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DE056AFC(unsigned char *a1@<X8>)
{
  *a1 = 14;
}

uint64_t sub_1DE056B08(uint64_t a1)
{
  unint64_t v2 = sub_1DE057194();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE056B44(uint64_t a1)
{
  unint64_t v2 = sub_1DE057194();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ReplicaAdvertisementViewEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1DE057DE8(0, &qword_1EABA1B00, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v42 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE057194();
  sub_1DE480790();
  v44[0] = 0;
  sub_1DE47F330();
  sub_1DE04D884(&qword_1EBEC2030, MEMORY[0x1E4F4AB70]);
  sub_1DE4805C0();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for ReplicaAdvertisementViewEvent.Model(0);
    char v49 = 1;
    sub_1DE47F350();
    sub_1DE04D884(&qword_1EBEC2040, MEMORY[0x1E4F4AB90]);
    sub_1DE4805C0();
    uint64_t v11 = v3 + v10[6];
    long long v12 = *(_OWORD *)(v11 + 112);
    *(_OWORD *)&v44[96] = *(_OWORD *)(v11 + 96);
    *(_OWORD *)&v44[112] = v12;
    *(void *)&v44[127] = *(void *)(v11 + 127);
    long long v13 = *(_OWORD *)(v11 + 48);
    *(_OWORD *)&v44[32] = *(_OWORD *)(v11 + 32);
    *(_OWORD *)&v44[48] = v13;
    long long v14 = *(_OWORD *)(v11 + 80);
    *(_OWORD *)&v44[64] = *(_OWORD *)(v11 + 64);
    *(_OWORD *)&v44[80] = v14;
    long long v15 = *(_OWORD *)(v11 + 16);
    *(_OWORD *)uint64_t v44 = *(_OWORD *)v11;
    *(_OWORD *)&v44[16] = v15;
    LOBYTE(v46) = 2;
    sub_1DE053EBC();
    sub_1DE4805C0();
    uint64_t v16 = (uint64_t *)(v3 + v10[7]);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    LOWORD(v16) = *((_WORD *)v16 + 8);
    uint64_t v46 = v17;
    uint64_t v47 = v18;
    __int16 v48 = (__int16)v16;
    char v45 = 3;
    sub_1DE05410C();
    sub_1DE4805C0();
    memcpy(v44, (const void *)(v3 + v10[8]), sizeof(v44));
    char v43 = 4;
    sub_1DE05435C();
    sub_1DE4805C0();
    uint64_t v19 = (char *)(v3 + v10[9]);
    char v20 = *v19;
    char v21 = v19[1];
    LOWORD(v19) = *((_WORD *)v19 + 1);
    v44[0] = v20;
    v44[1] = v21;
    *(_WORD *)&v44[2] = (_WORD)v19;
    char v43 = 5;
    sub_1DE0545AC();
    sub_1DE4805C0();
    *(_WORD *)uint64_t v44 = *(_WORD *)(v3 + v10[10]);
    char v43 = 6;
    sub_1DE0547FC();
    sub_1DE4805C0();
    unint64_t v22 = (uint64_t *)(v3 + v10[11]);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    char v25 = *((unsigned char *)v22 + 16);
    char v26 = *((unsigned char *)v22 + 17);
    uint64_t v27 = v22[3];
    *(void *)uint64_t v44 = v23;
    *(void *)&v44[8] = v24;
    v44[16] = v25;
    v44[17] = v26;
    *(void *)&v44[24] = v27;
    char v43 = 7;
    sub_1DE054A4C();
    sub_1DE4805C0();
    *(_OWORD *)uint64_t v44 = *(_OWORD *)(v3 + v10[12]);
    char v43 = 8;
    sub_1DE054C9C();
    sub_1DE480550();
    *(_OWORD *)uint64_t v44 = *(_OWORD *)(v3 + v10[13]);
    char v43 = 9;
    sub_1DE054EEC();
    sub_1DE480550();
    uint64_t v28 = v3 + v10[14];
    char v29 = *(unsigned char *)(v28 + 24);
    char v30 = *(unsigned char *)(v28 + 25);
    char v31 = *(unsigned char *)(v28 + 48);
    v44[0] = *(unsigned char *)v28;
    *(_OWORD *)&v44[8] = *(_OWORD *)(v28 + 8);
    v44[24] = v29;
    v44[25] = v30;
    *(_OWORD *)&v44[32] = *(_OWORD *)(v28 + 32);
    v44[48] = v31;
    char v43 = 10;
    sub_1DE04DD5C();
    sub_1DE4805C0();
    char v32 = (uint64_t *)(v3 + v10[15]);
    uint64_t v33 = *v32;
    uint64_t v34 = v32[1];
    char v35 = *((unsigned char *)v32 + 16);
    char v36 = *((unsigned char *)v32 + 17);
    uint64_t v38 = v32[3];
    uint64_t v37 = v32[4];
    *(void *)uint64_t v44 = v33;
    *(void *)&v44[8] = v34;
    v44[16] = v35;
    v44[17] = v36;
    *(void *)&v44[24] = v38;
    *(void *)&v44[32] = v37;
    char v43 = 11;
    sub_1DE0552E4();
    sub_1DE4805C0();
    v44[0] = *(unsigned char *)(v3 + v10[16]);
    char v43 = 12;
    sub_1DE055534();
    sub_1DE480550();
    uint64_t v39 = v3 + v10[17];
    uint64_t v40 = *(void *)(v39 + 16);
    *(_OWORD *)uint64_t v44 = *(_OWORD *)v39;
    *(void *)&v44[16] = v40;
    char v43 = 13;
    sub_1DE055800();
    sub_1DE480550();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DE057194()
{
  unint64_t result = qword_1EABA1B08;
  if (!qword_1EABA1B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1B08);
  }
  return result;
}

uint64_t ReplicaAdvertisementViewEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v63 = a2;
  uint64_t v3 = sub_1DE47F350();
  uint64_t v66 = *(void *)(v3 - 8);
  uint64_t v67 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DE47F330();
  uint64_t v68 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE057DE8(0, &qword_1EABA1B10, MEMORY[0x1E4FBBDC0]);
  uint64_t v64 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  long long v12 = (char *)&v63 - v11;
  v89 = (int *)type metadata accessor for ReplicaAdvertisementViewEvent.Model(0);
  MEMORY[0x1F4188790](v89);
  long long v72 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  uint64_t v70 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1DE057194();
  long long v69 = v12;
  uint64_t v15 = v71;
  sub_1DE480770();
  uint64_t v65 = v6;
  if (v15)
  {
    uint64_t v71 = v15;
    LODWORD(v69) = 0;
    uint64_t result = __swift_destroy_boxed_opaque_existential_1(v70);
    LODWORD(v70) = 0;
    int v17 = 0;
    int v18 = 0;
    if (v69) {
      goto LABEL_5;
    }
  }
  else
  {
    LOBYTE(v88[0]) = 0;
    sub_1DE04D884(&qword_1EBEC2038, MEMORY[0x1E4F4AB70]);
    sub_1DE4804E0();
    uint64_t v25 = v6;
    char v26 = v72;
    (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v72, v8, v25);
    LOBYTE(v88[0]) = 1;
    sub_1DE04D884((unint64_t *)&unk_1EBEC2048, MEMORY[0x1E4F4AB90]);
    uint64_t v27 = v67;
    sub_1DE4804E0();
    uint64_t v28 = v89;
    (*(void (**)(char *, char *, uint64_t))(v66 + 32))(&v26[v89[5]], v5, v27);
    char v79 = 2;
    sub_1DE053E68();
    sub_1DE4804E0();
    char v29 = &v26[v28[6]];
    long long v30 = v85;
    long long v31 = *(_OWORD *)v87;
    *((_OWORD *)v29 + 6) = v86;
    *((_OWORD *)v29 + 7) = v31;
    *(void *)(v29 + 127) = *(void *)&v87[15];
    long long v32 = v83;
    *((_OWORD *)v29 + 2) = v82;
    *((_OWORD *)v29 + 3) = v32;
    *((_OWORD *)v29 + 4) = v84;
    *((_OWORD *)v29 + 5) = v30;
    long long v33 = v81;
    *(_OWORD *)char v29 = v80;
    *((_OWORD *)v29 + 1) = v33;
    v73[0] = 3;
    sub_1DE0540B8();
    sub_1DE4804E0();
    uint64_t v34 = *((void *)&v88[0] + 1);
    __int16 v35 = v88[1];
    char v36 = &v26[v28[7]];
    *(void *)char v36 = *(void *)&v88[0];
    *((void *)v36 + 1) = v34;
    *((_WORD *)v36 + 8) = v35;
    char v78 = 4;
    sub_1DE054308();
    sub_1DE4804E0();
    memcpy(&v26[v28[8]], v88, 0x111uLL);
    char v77 = 5;
    sub_1DE054558();
    sub_1DE4804E0();
    char v37 = v73[1];
    __int16 v38 = *(_WORD *)&v73[2];
    uint64_t v39 = &v26[v28[9]];
    *uint64_t v39 = v73[0];
    v39[1] = v37;
    *((_WORD *)v39 + 1) = v38;
    char v77 = 6;
    sub_1DE0547A8();
    sub_1DE4804E0();
    *(_WORD *)&v26[v28[10]] = *(_WORD *)v73;
    char v77 = 7;
    sub_1DE0549F8();
    sub_1DE4804E0();
    uint64_t v40 = *(void *)&v73[8];
    char v41 = v73[16];
    char v42 = v73[17];
    uint64_t v43 = v74;
    uint64_t v44 = &v26[v28[11]];
    *(void *)uint64_t v44 = *(void *)v73;
    *((void *)v44 + 1) = v40;
    v44[16] = v41;
    v44[17] = v42;
    *((void *)v44 + 3) = v43;
    char v77 = 8;
    sub_1DE054C48();
    sub_1DE480470();
    *(_OWORD *)&v26[v89[12]] = *(_OWORD *)v73;
    char v77 = 9;
    sub_1DE054E98();
    sub_1DE480470();
    uint64_t v71 = 0;
    *(_OWORD *)&v72[v89[13]] = *(_OWORD *)v73;
    char v77 = 10;
    sub_1DE04DD08();
    uint64_t v45 = v71;
    sub_1DE4804E0();
    uint64_t v71 = v45;
    if (v45)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v69, v64);
      __swift_destroy_boxed_opaque_existential_1(v70);
      int v17 = 0;
      LODWORD(v70) = 0;
      LODWORD(v69) = 1;
      int v18 = 1;
      uint64_t v46 = v72;
    }
    else
    {
      char v47 = v74;
      char v48 = BYTE1(v74);
      char v49 = v76;
      uint64_t v50 = &v72[v89[14]];
      *uint64_t v50 = v73[0];
      *(_OWORD *)(v50 + 8) = *(_OWORD *)&v73[8];
      v50[24] = v47;
      v50[25] = v48;
      *((_OWORD *)v50 + 2) = v75;
      v50[48] = v49;
      char v77 = 11;
      sub_1DE055290();
      uint64_t v51 = v71;
      sub_1DE4804E0();
      uint64_t v71 = v51;
      if (v51)
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v69, v64);
        __swift_destroy_boxed_opaque_existential_1(v70);
        LODWORD(v70) = 0;
        LODWORD(v69) = 1;
        int v18 = 1;
        int v17 = 1;
        uint64_t v46 = v72;
      }
      else
      {
        uint64_t v52 = *(void *)&v73[8];
        char v53 = v73[16];
        char v54 = v73[17];
        uint64_t v55 = v74;
        uint64_t v56 = v75;
        char v57 = &v72[v89[15]];
        *(void *)char v57 = *(void *)v73;
        *((void *)v57 + 1) = v52;
        v57[16] = v53;
        v57[17] = v54;
        *((void *)v57 + 3) = v55;
        *((void *)v57 + 4) = v56;
        char v77 = 12;
        sub_1DE0554E0();
        uint64_t v58 = v71;
        sub_1DE480470();
        uint64_t v71 = v58;
        if (!v58)
        {
          v72[v89[16]] = v73[0];
          char v77 = 13;
          sub_1DE0557AC();
          uint64_t v59 = v71;
          sub_1DE480470();
          uint64_t v71 = v59;
          if (!v59)
          {
            (*(void (**)(char *, uint64_t))(v10 + 8))(v69, v64);
            uint64_t v60 = *(void *)&v73[16];
            uint64_t v61 = (uint64_t)v72;
            char v62 = &v72[v89[17]];
            *(_OWORD *)char v62 = *(_OWORD *)v73;
            *((void *)v62 + 2) = v60;
            sub_1DE057ED0(v61, v63);
            __swift_destroy_boxed_opaque_existential_1(v70);
            return sub_1DE057F34(v61);
          }
        }
        (*(void (**)(char *, uint64_t))(v10 + 8))(v69, v64);
        __swift_destroy_boxed_opaque_existential_1(v70);
        LODWORD(v69) = 1;
        int v18 = 1;
        int v17 = 1;
        LODWORD(v70) = 1;
        uint64_t v46 = v72;
      }
    }
    (*(void (**)(char *, uint64_t))(v68 + 8))(v46, v65);
    uint64_t v24 = v89;
    (*(void (**)(char *, uint64_t))(v66 + 8))(&v46[v89[5]], v67);
    uint64_t v19 = &v46[v24[6]];
    long long v20 = *((_OWORD *)v19 + 7);
    v88[6] = *((_OWORD *)v19 + 6);
    v88[7] = v20;
    *(void *)((char *)&v88[7] + 15) = *(void *)(v19 + 127);
    long long v21 = *((_OWORD *)v19 + 3);
    v88[2] = *((_OWORD *)v19 + 2);
    v88[3] = v21;
    long long v22 = *((_OWORD *)v19 + 5);
    v88[4] = *((_OWORD *)v19 + 4);
    v88[5] = v22;
    long long v23 = *((_OWORD *)v19 + 1);
    v88[0] = *(_OWORD *)v19;
    v88[1] = v23;
    sub_1DE057E78((uint64_t)v88);
    swift_bridgeObjectRelease();
    memcpy(v88, &v46[v24[8]], 0x111uLL);
    sub_1DE057E4C((uint64_t)v88);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v69)
    {
LABEL_5:
      uint64_t result = swift_bridgeObjectRelease();
      if ((v18 & 1) == 0) {
        goto LABEL_6;
      }
      goto LABEL_11;
    }
  }
  if (!v18)
  {
LABEL_6:
    if (v17) {
      goto LABEL_7;
    }
LABEL_12:
    if (!v70) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_11:
  uint64_t result = swift_bridgeObjectRelease();
  if ((v17 & 1) == 0) {
    goto LABEL_12;
  }
LABEL_7:
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v70 & 1) == 0) {
    return result;
  }
LABEL_13:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1DE057DE8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE057194();
    unint64_t v7 = a3(a1, &type metadata for ReplicaAdvertisementViewEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DE057E4C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DE057E78(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DE057ED0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReplicaAdvertisementViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DE057F34(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ReplicaAdvertisementViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DE057F90@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ReplicaAdvertisementViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DE057FA8(void *a1)
{
  return ReplicaAdvertisementViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DE057FC0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0938, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EABA1AB8, a1);
}

uint64_t sub_1DE057FF8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0940, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EABA1AD0, a1);
}

uint64_t sub_1DE058030@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0948, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA1AE8, a1);
}

uint64_t sub_1DE058068@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_1DE055730(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_1DE055730(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  sub_1DE055730(0, &qword_1EBEC1E38, (void (*)(void))sub_1DE054308, (void (*)(void))sub_1DE05435C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v4, v13);
  uint64_t v14 = a2 + a1[9];
  sub_1DE055730(0, &qword_1EBEC1F68, (void (*)(void))sub_1DE054558, (void (*)(void))sub_1DE0545AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v4, v15);
  uint64_t v16 = a2 + a1[10];
  sub_1DE055730(0, &qword_1EBEC1EC0, (void (*)(void))sub_1DE0547A8, (void (*)(void))sub_1DE0547FC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v4, v17);
  uint64_t v18 = a2 + a1[11];
  sub_1DE055730(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v4, v19);
  uint64_t v20 = a2 + a1[12];
  uint64_t v21 = *MEMORY[0x1E4F4A9F8];
  sub_1DE055730(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v20, v21, v22);
  uint64_t v23 = a2 + a1[13];
  sub_1DE055730(0, &qword_1EBEC1F70, (void (*)(void))sub_1DE054E98, (void (*)(void))sub_1DE054EEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v23, v21, v24);
  uint64_t v25 = a2 + a1[14];
  sub_1DE055730(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104))(v25, v4, v26);
  uint64_t v27 = a2 + a1[15];
  sub_1DE055730(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104))(v27, v4, v28);
  uint64_t v29 = a2 + a1[16];
  sub_1DE055730(0, &qword_1EBEC1F48, (void (*)(void))sub_1DE0554E0, (void (*)(void))sub_1DE055534);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104))(v29, v21, v30);
  uint64_t v31 = a2 + a1[17];
  sub_1DE055730(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  long long v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104);

  return v33(v31, v21, v32);
}

uint64_t *initializeBufferWithCopyOfBuffer for ReplicaAdvertisementViewEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v60 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v60 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DE04D618();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DE04D7B8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_1DE055730(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_1DE055730(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_1DE055730(0, &qword_1EBEC1E38, (void (*)(void))sub_1DE054308, (void (*)(void))sub_1DE05435C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_1DE055730(0, &qword_1EBEC1F68, (void (*)(void))sub_1DE054558, (void (*)(void))sub_1DE0545AC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    sub_1DE055730(0, &qword_1EBEC1EC0, (void (*)(void))sub_1DE0547A8, (void (*)(void))sub_1DE0547FC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    long long v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    sub_1DE055730(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    char v37 = (char *)a1 + v36;
    __int16 v38 = (char *)a2 + v36;
    sub_1DE055730(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = a3[13];
    char v41 = (char *)a1 + v40;
    char v42 = (char *)a2 + v40;
    sub_1DE055730(0, &qword_1EBEC1F70, (void (*)(void))sub_1DE054E98, (void (*)(void))sub_1DE054EEC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    uint64_t v44 = a3[14];
    uint64_t v45 = (char *)a1 + v44;
    uint64_t v46 = (char *)a2 + v44;
    sub_1DE055730(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
    uint64_t v48 = a3[15];
    char v49 = (char *)a1 + v48;
    uint64_t v50 = (char *)a2 + v48;
    sub_1DE055730(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
    uint64_t v52 = a3[16];
    char v53 = (char *)a1 + v52;
    char v54 = (char *)a2 + v52;
    sub_1DE055730(0, &qword_1EBEC1F48, (void (*)(void))sub_1DE0554E0, (void (*)(void))sub_1DE055534);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
    uint64_t v56 = a3[17];
    char v57 = (char *)a1 + v56;
    uint64_t v58 = (char *)a2 + v56;
    sub_1DE055730(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
  }
  return a1;
}

uint64_t destroy for ReplicaAdvertisementViewEvent(uint64_t a1, int *a2)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_1DE055730(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_1DE055730(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_1DE055730(0, &qword_1EBEC1E38, (void (*)(void))sub_1DE054308, (void (*)(void))sub_1DE05435C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_1DE055730(0, &qword_1EBEC1F68, (void (*)(void))sub_1DE054558, (void (*)(void))sub_1DE0545AC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_1DE055730(0, &qword_1EBEC1EC0, (void (*)(void))sub_1DE0547A8, (void (*)(void))sub_1DE0547FC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_1DE055730(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  sub_1DE055730(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[13];
  sub_1DE055730(0, &qword_1EBEC1F70, (void (*)(void))sub_1DE054E98, (void (*)(void))sub_1DE054EEC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = a1 + a2[14];
  sub_1DE055730(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
  uint64_t v25 = a1 + a2[15];
  sub_1DE055730(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
  uint64_t v27 = a1 + a2[16];
  sub_1DE055730(0, &qword_1EBEC1F48, (void (*)(void))sub_1DE0554E0, (void (*)(void))sub_1DE055534);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
  uint64_t v29 = a1 + a2[17];
  sub_1DE055730(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8);

  return v31(v29, v30);
}

uint64_t initializeWithCopy for ReplicaAdvertisementViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE055730(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE055730(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE055730(0, &qword_1EBEC1E38, (void (*)(void))sub_1DE054308, (void (*)(void))sub_1DE05435C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE055730(0, &qword_1EBEC1F68, (void (*)(void))sub_1DE054558, (void (*)(void))sub_1DE0545AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE055730(0, &qword_1EBEC1EC0, (void (*)(void))sub_1DE0547A8, (void (*)(void))sub_1DE0547FC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE055730(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE055730(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_1DE055730(0, &qword_1EBEC1F70, (void (*)(void))sub_1DE054E98, (void (*)(void))sub_1DE054EEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_1DE055730(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_1DE055730(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  sub_1DE055730(0, &qword_1EBEC1F48, (void (*)(void))sub_1DE0554E0, (void (*)(void))sub_1DE055534);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
  uint64_t v55 = a3[17];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  sub_1DE055730(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
  return a1;
}

uint64_t assignWithCopy for ReplicaAdvertisementViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE055730(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE055730(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE055730(0, &qword_1EBEC1E38, (void (*)(void))sub_1DE054308, (void (*)(void))sub_1DE05435C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE055730(0, &qword_1EBEC1F68, (void (*)(void))sub_1DE054558, (void (*)(void))sub_1DE0545AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE055730(0, &qword_1EBEC1EC0, (void (*)(void))sub_1DE0547A8, (void (*)(void))sub_1DE0547FC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE055730(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE055730(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_1DE055730(0, &qword_1EBEC1F70, (void (*)(void))sub_1DE054E98, (void (*)(void))sub_1DE054EEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_1DE055730(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_1DE055730(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 24))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  sub_1DE055730(0, &qword_1EBEC1F48, (void (*)(void))sub_1DE0554E0, (void (*)(void))sub_1DE055534);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 24))(v52, v53, v54);
  uint64_t v55 = a3[17];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  sub_1DE055730(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 24))(v56, v57, v58);
  return a1;
}

uint64_t initializeWithTake for ReplicaAdvertisementViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE055730(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE055730(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE055730(0, &qword_1EBEC1E38, (void (*)(void))sub_1DE054308, (void (*)(void))sub_1DE05435C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE055730(0, &qword_1EBEC1F68, (void (*)(void))sub_1DE054558, (void (*)(void))sub_1DE0545AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE055730(0, &qword_1EBEC1EC0, (void (*)(void))sub_1DE0547A8, (void (*)(void))sub_1DE0547FC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE055730(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE055730(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_1DE055730(0, &qword_1EBEC1F70, (void (*)(void))sub_1DE054E98, (void (*)(void))sub_1DE054EEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_1DE055730(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_1DE055730(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  sub_1DE055730(0, &qword_1EBEC1F48, (void (*)(void))sub_1DE0554E0, (void (*)(void))sub_1DE055534);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
  uint64_t v55 = a3[17];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  sub_1DE055730(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
  return a1;
}

uint64_t assignWithTake for ReplicaAdvertisementViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE055730(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE055730(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE055730(0, &qword_1EBEC1E38, (void (*)(void))sub_1DE054308, (void (*)(void))sub_1DE05435C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE055730(0, &qword_1EBEC1F68, (void (*)(void))sub_1DE054558, (void (*)(void))sub_1DE0545AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE055730(0, &qword_1EBEC1EC0, (void (*)(void))sub_1DE0547A8, (void (*)(void))sub_1DE0547FC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE055730(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE055730(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_1DE055730(0, &qword_1EBEC1F70, (void (*)(void))sub_1DE054E98, (void (*)(void))sub_1DE054EEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_1DE055730(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_1DE055730(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 40))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  sub_1DE055730(0, &qword_1EBEC1F48, (void (*)(void))sub_1DE0554E0, (void (*)(void))sub_1DE055534);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 40))(v52, v53, v54);
  uint64_t v55 = a3[17];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  sub_1DE055730(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 40))(v56, v57, v58);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReplicaAdvertisementViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE05AF84);
}

uint64_t sub_1DE05AF84(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_28:
    return v9(v10, a2, v8);
  }
  sub_1DE04D7B8();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_27:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_28;
  }
  sub_1DE055730(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_27;
  }
  sub_1DE055730(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_27;
  }
  sub_1DE055730(0, &qword_1EBEC1E38, (void (*)(void))sub_1DE054308, (void (*)(void))sub_1DE05435C);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_27;
  }
  sub_1DE055730(0, &qword_1EBEC1F68, (void (*)(void))sub_1DE054558, (void (*)(void))sub_1DE0545AC);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_27;
  }
  sub_1DE055730(0, &qword_1EBEC1EC0, (void (*)(void))sub_1DE0547A8, (void (*)(void))sub_1DE0547FC);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_27;
  }
  sub_1DE055730(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_27;
  }
  sub_1DE055730(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_27;
  }
  sub_1DE055730(0, &qword_1EBEC1F70, (void (*)(void))sub_1DE054E98, (void (*)(void))sub_1DE054EEC);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a2)
  {
    uint64_t v8 = v21;
    uint64_t v12 = *(void *)(v21 - 8);
    uint64_t v13 = a3[13];
    goto LABEL_27;
  }
  sub_1DE055730(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a2)
  {
    uint64_t v8 = v22;
    uint64_t v12 = *(void *)(v22 - 8);
    uint64_t v13 = a3[14];
    goto LABEL_27;
  }
  sub_1DE055730(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a2)
  {
    uint64_t v8 = v23;
    uint64_t v12 = *(void *)(v23 - 8);
    uint64_t v13 = a3[15];
    goto LABEL_27;
  }
  sub_1DE055730(0, &qword_1EBEC1F48, (void (*)(void))sub_1DE0554E0, (void (*)(void))sub_1DE055534);
  if (*(_DWORD *)(*(void *)(v24 - 8) + 84) == a2)
  {
    uint64_t v8 = v24;
    uint64_t v12 = *(void *)(v24 - 8);
    uint64_t v13 = a3[16];
    goto LABEL_27;
  }
  sub_1DE055730(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48);
  uint64_t v28 = v26;
  uint64_t v29 = a1 + a3[17];

  return v27(v29, a2, v28);
}

uint64_t storeEnumTagSinglePayload for ReplicaAdvertisementViewEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE05B6C8);
}

uint64_t sub_1DE05B6C8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_1DE04D618();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_28:
    return v11(v12, a2, a2, v10);
  }
  sub_1DE04D7B8();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_27:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_28;
  }
  sub_1DE055730(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_27;
  }
  sub_1DE055730(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_27;
  }
  sub_1DE055730(0, &qword_1EBEC1E38, (void (*)(void))sub_1DE054308, (void (*)(void))sub_1DE05435C);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_27;
  }
  sub_1DE055730(0, &qword_1EBEC1F68, (void (*)(void))sub_1DE054558, (void (*)(void))sub_1DE0545AC);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_27;
  }
  sub_1DE055730(0, &qword_1EBEC1EC0, (void (*)(void))sub_1DE0547A8, (void (*)(void))sub_1DE0547FC);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_27;
  }
  sub_1DE055730(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_27;
  }
  sub_1DE055730(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_27;
  }
  sub_1DE055730(0, &qword_1EBEC1F70, (void (*)(void))sub_1DE054E98, (void (*)(void))sub_1DE054EEC);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a3)
  {
    uint64_t v10 = v23;
    uint64_t v14 = *(void *)(v23 - 8);
    uint64_t v15 = a4[13];
    goto LABEL_27;
  }
  sub_1DE055730(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  if (*(_DWORD *)(*(void *)(v24 - 8) + 84) == a3)
  {
    uint64_t v10 = v24;
    uint64_t v14 = *(void *)(v24 - 8);
    uint64_t v15 = a4[14];
    goto LABEL_27;
  }
  sub_1DE055730(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  if (*(_DWORD *)(*(void *)(v25 - 8) + 84) == a3)
  {
    uint64_t v10 = v25;
    uint64_t v14 = *(void *)(v25 - 8);
    uint64_t v15 = a4[15];
    goto LABEL_27;
  }
  sub_1DE055730(0, &qword_1EBEC1F48, (void (*)(void))sub_1DE0554E0, (void (*)(void))sub_1DE055534);
  if (*(_DWORD *)(*(void *)(v26 - 8) + 84) == a3)
  {
    uint64_t v10 = v26;
    uint64_t v14 = *(void *)(v26 - 8);
    uint64_t v15 = a4[16];
    goto LABEL_27;
  }
  sub_1DE055730(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56);
  uint64_t v30 = v28;
  uint64_t v31 = a1 + a4[17];

  return v29(v31, a2, a2, v30);
}

void sub_1DE05BE04()
{
  sub_1DE04D618();
  if (v0 <= 0x3F)
  {
    sub_1DE04D7B8();
    if (v1 <= 0x3F)
    {
      sub_1DE055730(319, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
      if (v2 <= 0x3F)
      {
        sub_1DE055730(319, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
        if (v3 <= 0x3F)
        {
          sub_1DE055730(319, &qword_1EBEC1E38, (void (*)(void))sub_1DE054308, (void (*)(void))sub_1DE05435C);
          if (v4 <= 0x3F)
          {
            sub_1DE055730(319, &qword_1EBEC1F68, (void (*)(void))sub_1DE054558, (void (*)(void))sub_1DE0545AC);
            if (v5 <= 0x3F)
            {
              sub_1DE055730(319, &qword_1EBEC1EC0, (void (*)(void))sub_1DE0547A8, (void (*)(void))sub_1DE0547FC);
              if (v6 <= 0x3F)
              {
                sub_1DE055730(319, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
                if (v7 <= 0x3F)
                {
                  sub_1DE055730(319, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
                  if (v8 <= 0x3F)
                  {
                    sub_1DE055730(319, &qword_1EBEC1F70, (void (*)(void))sub_1DE054E98, (void (*)(void))sub_1DE054EEC);
                    if (v9 <= 0x3F)
                    {
                      sub_1DE055730(319, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
                      if (v10 <= 0x3F)
                      {
                        sub_1DE055730(319, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
                        if (v11 <= 0x3F)
                        {
                          sub_1DE055730(319, &qword_1EBEC1F48, (void (*)(void))sub_1DE0554E0, (void (*)(void))sub_1DE055534);
                          if (v12 <= 0x3F)
                          {
                            sub_1DE055730(319, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
                            if (v13 <= 0x3F) {
                              swift_initStructMetadata();
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ReplicaAdvertisementViewEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v68 = *a2;
    *a1 = *a2;
    a1 = (void *)(v68 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DE47F330();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    unint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DE47F350();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)a1 + v12;
    uint64_t v15 = (char *)a2 + v12;
    *(void *)uint64_t v14 = *(void *)v15;
    v14[8] = v15[8];
    uint64_t v16 = *((void *)v15 + 3);
    *((void *)v14 + 2) = *((void *)v15 + 2);
    *((void *)v14 + 3) = v16;
    v14[32] = v15[32];
    uint64_t v17 = *((void *)v15 + 6);
    *((void *)v14 + 5) = *((void *)v15 + 5);
    *((void *)v14 + 6) = v17;
    v14[56] = v15[56];
    v14[57] = v15[57];
    uint64_t v18 = *((void *)v15 + 9);
    *((void *)v14 + 8) = *((void *)v15 + 8);
    *((void *)v14 + 9) = v18;
    v14[80] = v15[80];
    *(_OWORD *)(v14 + 88) = *(_OWORD *)(v15 + 88);
    *((void *)v14 + 13) = *((void *)v15 + 13);
    v14[112] = v15[112];
    *((void *)v14 + 15) = *((void *)v15 + 15);
    *((_DWORD *)v14 + 32) = *((_DWORD *)v15 + 32);
    v14[132] = v15[132];
    *(_WORD *)(v14 + 133) = *(_WORD *)(v15 + 133);
    uint64_t v19 = (char *)a1 + v13;
    uint64_t v20 = (char *)a2 + v13;
    uint64_t v21 = *((void *)v20 + 1);
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    *((_WORD *)v19 + 8) = *((_WORD *)v20 + 8);
    uint64_t v22 = a3[8];
    uint64_t v23 = a3[9];
    uint64_t v24 = (char *)a1 + v22;
    uint64_t v25 = (char *)a2 + v22;
    long long v26 = *((_OWORD *)v25 + 1);
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    *((_OWORD *)v24 + 1) = v26;
    long long v27 = *((_OWORD *)v25 + 3);
    *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
    *((_OWORD *)v24 + 3) = v27;
    long long v28 = *((_OWORD *)v25 + 5);
    *((_OWORD *)v24 + 4) = *((_OWORD *)v25 + 4);
    *((_OWORD *)v24 + 5) = v28;
    *((_OWORD *)v24 + 6) = *((_OWORD *)v25 + 6);
    uint64_t v29 = *((void *)v25 + 15);
    uint64_t v30 = *((void *)v25 + 14);
    v24[128] = v25[128];
    *((void *)v24 + 14) = v30;
    *((void *)v24 + 15) = v29;
    uint64_t v31 = *((void *)v25 + 17);
    v24[144] = v25[144];
    *((void *)v24 + 17) = v31;
    uint64_t v32 = *((void *)v25 + 19);
    v24[160] = v25[160];
    *((void *)v24 + 19) = v32;
    uint64_t v33 = *((void *)v25 + 21);
    v24[176] = v25[176];
    *((void *)v24 + 21) = v33;
    uint64_t v34 = *((void *)v25 + 23);
    v24[192] = v25[192];
    *((void *)v24 + 23) = v34;
    uint64_t v35 = *((void *)v25 + 25);
    v24[208] = v25[208];
    *((void *)v24 + 25) = v35;
    uint64_t v36 = *((void *)v25 + 27);
    v24[224] = v25[224];
    *((void *)v24 + 27) = v36;
    uint64_t v37 = *((void *)v25 + 29);
    v24[240] = v25[240];
    *((void *)v24 + 29) = v37;
    uint64_t v38 = *((void *)v25 + 31);
    v24[256] = v25[256];
    *((void *)v24 + 31) = v38;
    uint64_t v39 = *((void *)v25 + 33);
    v24[272] = v25[272];
    *((void *)v24 + 33) = v39;
    *(_DWORD *)((char *)a1 + v23) = *(_DWORD *)((char *)a2 + v23);
    uint64_t v40 = a3[11];
    *(_WORD *)((char *)a1 + a3[10]) = *(_WORD *)((char *)a2 + a3[10]);
    uint64_t v41 = (char *)a1 + v40;
    uint64_t v42 = (char *)a2 + v40;
    uint64_t v43 = *((void *)v42 + 1);
    *(void *)uint64_t v41 = *(void *)v42;
    *((void *)v41 + 1) = v43;
    v41[16] = v42[16];
    v41[17] = v42[17];
    *((void *)v41 + 3) = *((void *)v42 + 3);
    uint64_t v44 = a3[12];
    uint64_t v45 = a3[13];
    uint64_t v46 = (void *)((char *)a1 + v44);
    uint64_t v47 = (void *)((char *)a2 + v44);
    uint64_t v48 = v47[1];
    *uint64_t v46 = *v47;
    v46[1] = v48;
    uint64_t v49 = (void *)((char *)a1 + v45);
    uint64_t v50 = (void *)((char *)a2 + v45);
    uint64_t v51 = v50[1];
    *uint64_t v49 = *v50;
    v49[1] = v51;
    uint64_t v52 = a3[14];
    uint64_t v53 = a3[15];
    uint64_t v54 = (char *)a1 + v52;
    uint64_t v55 = (char *)a2 + v52;
    *uint64_t v54 = *v55;
    uint64_t v56 = *((void *)v55 + 2);
    *((void *)v54 + 1) = *((void *)v55 + 1);
    *((void *)v54 + 2) = v56;
    v54[24] = v55[24];
    v54[25] = v55[25];
    uint64_t v57 = *((void *)v55 + 5);
    *((void *)v54 + 4) = *((void *)v55 + 4);
    *((void *)v54 + 5) = v57;
    v54[48] = v55[48];
    uint64_t v58 = (char *)a1 + v53;
    uint64_t v59 = (char *)a2 + v53;
    uint64_t v60 = *((void *)v59 + 1);
    *(void *)uint64_t v58 = *(void *)v59;
    *((void *)v58 + 1) = v60;
    v58[16] = v59[16];
    v58[17] = v59[17];
    uint64_t v61 = *((void *)v59 + 3);
    uint64_t v62 = *((void *)v59 + 4);
    uint64_t v63 = a3[16];
    uint64_t v64 = a3[17];
    LOBYTE(v17) = *((unsigned char *)a2 + v63);
    *((void *)v58 + 3) = v61;
    *((void *)v58 + 4) = v62;
    *((unsigned char *)a1 + v63) = v17;
    uint64_t v65 = (char *)a1 + v64;
    uint64_t v66 = (char *)a2 + v64;
    uint64_t v67 = *(void *)((char *)a2 + v64 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v67 == 1)
    {
      *(_OWORD *)uint64_t v65 = *(_OWORD *)v66;
      *((void *)v65 + 2) = *((void *)v66 + 2);
    }
    else
    {
      *uint64_t v65 = *v66;
      *((void *)v65 + 1) = *((void *)v66 + 1);
      *((void *)v65 + 2) = v67;
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t destroy for ReplicaAdvertisementViewEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + *(int *)(a2 + 68) + 16);
  if (result != 1)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ReplicaAdvertisementViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  uint64_t v15 = *(void *)(v14 + 24);
  *(void *)(v13 + 16) = *(void *)(v14 + 16);
  *(void *)(v13 + 24) = v15;
  *(unsigned char *)(v13 + 32) = *(unsigned char *)(v14 + 32);
  uint64_t v16 = *(void *)(v14 + 48);
  *(void *)(v13 + 40) = *(void *)(v14 + 40);
  *(void *)(v13 + 48) = v16;
  *(unsigned char *)(v13 + 56) = *(unsigned char *)(v14 + 56);
  *(unsigned char *)(v13 + 57) = *(unsigned char *)(v14 + 57);
  uint64_t v17 = *(void *)(v14 + 72);
  *(void *)(v13 + 64) = *(void *)(v14 + 64);
  *(void *)(v13 + 72) = v17;
  *(unsigned char *)(v13 + 80) = *(unsigned char *)(v14 + 80);
  *(_OWORD *)(v13 + 88) = *(_OWORD *)(v14 + 88);
  *(void *)(v13 + 104) = *(void *)(v14 + 104);
  *(unsigned char *)(v13 + 112) = *(unsigned char *)(v14 + 112);
  *(void *)(v13 + 120) = *(void *)(v14 + 120);
  *(_DWORD *)(v13 + 128) = *(_DWORD *)(v14 + 128);
  *(unsigned char *)(v13 + 132) = *(unsigned char *)(v14 + 132);
  *(_WORD *)(v13 + 133) = *(_WORD *)(v14 + 133);
  uint64_t v18 = a1 + v12;
  uint64_t v19 = a2 + v12;
  uint64_t v20 = *(void *)(v19 + 8);
  *(void *)uint64_t v18 = *(void *)v19;
  *(void *)(v18 + 8) = v20;
  *(_WORD *)(v18 + 16) = *(_WORD *)(v19 + 16);
  uint64_t v21 = a3[8];
  uint64_t v22 = a3[9];
  uint64_t v23 = a1 + v21;
  uint64_t v24 = a2 + v21;
  long long v25 = *(_OWORD *)(v24 + 16);
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  *(_OWORD *)(v23 + 16) = v25;
  long long v26 = *(_OWORD *)(v24 + 48);
  *(_OWORD *)(v23 + 32) = *(_OWORD *)(v24 + 32);
  *(_OWORD *)(v23 + 48) = v26;
  long long v27 = *(_OWORD *)(v24 + 80);
  *(_OWORD *)(v23 + 64) = *(_OWORD *)(v24 + 64);
  *(_OWORD *)(v23 + 80) = v27;
  *(_OWORD *)(v23 + 96) = *(_OWORD *)(v24 + 96);
  uint64_t v28 = *(void *)(v24 + 120);
  uint64_t v29 = *(void *)(v24 + 112);
  *(unsigned char *)(v23 + 128) = *(unsigned char *)(v24 + 128);
  *(void *)(v23 + 112) = v29;
  *(void *)(v23 + 120) = v28;
  uint64_t v30 = *(void *)(v24 + 136);
  *(unsigned char *)(v23 + 144) = *(unsigned char *)(v24 + 144);
  *(void *)(v23 + 136) = v30;
  uint64_t v31 = *(void *)(v24 + 152);
  *(unsigned char *)(v23 + 160) = *(unsigned char *)(v24 + 160);
  *(void *)(v23 + 152) = v31;
  uint64_t v32 = *(void *)(v24 + 168);
  *(unsigned char *)(v23 + 176) = *(unsigned char *)(v24 + 176);
  *(void *)(v23 + 168) = v32;
  uint64_t v33 = *(void *)(v24 + 184);
  *(unsigned char *)(v23 + 192) = *(unsigned char *)(v24 + 192);
  *(void *)(v23 + 184) = v33;
  uint64_t v34 = *(void *)(v24 + 200);
  *(unsigned char *)(v23 + 208) = *(unsigned char *)(v24 + 208);
  *(void *)(v23 + 200) = v34;
  uint64_t v35 = *(void *)(v24 + 216);
  *(unsigned char *)(v23 + 224) = *(unsigned char *)(v24 + 224);
  *(void *)(v23 + 216) = v35;
  uint64_t v36 = *(void *)(v24 + 232);
  *(unsigned char *)(v23 + 240) = *(unsigned char *)(v24 + 240);
  *(void *)(v23 + 232) = v36;
  uint64_t v37 = *(void *)(v24 + 248);
  *(unsigned char *)(v23 + 256) = *(unsigned char *)(v24 + 256);
  *(void *)(v23 + 248) = v37;
  uint64_t v38 = *(void *)(v24 + 264);
  *(unsigned char *)(v23 + 272) = *(unsigned char *)(v24 + 272);
  *(void *)(v23 + 264) = v38;
  *(_DWORD *)(a1 + v22) = *(_DWORD *)(a2 + v22);
  uint64_t v39 = a3[11];
  *(_WORD *)(a1 + a3[10]) = *(_WORD *)(a2 + a3[10]);
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = *(void *)(v41 + 8);
  *(void *)uint64_t v40 = *(void *)v41;
  *(void *)(v40 + 8) = v42;
  *(unsigned char *)(v40 + 16) = *(unsigned char *)(v41 + 16);
  *(unsigned char *)(v40 + 17) = *(unsigned char *)(v41 + 17);
  *(void *)(v40 + 24) = *(void *)(v41 + 24);
  uint64_t v43 = a3[12];
  uint64_t v44 = a3[13];
  uint64_t v45 = (void *)(a1 + v43);
  uint64_t v46 = (void *)(a2 + v43);
  uint64_t v47 = v46[1];
  *uint64_t v45 = *v46;
  v45[1] = v47;
  uint64_t v48 = (void *)(a1 + v44);
  uint64_t v49 = (void *)(a2 + v44);
  uint64_t v50 = v49[1];
  *uint64_t v48 = *v49;
  v48[1] = v50;
  uint64_t v51 = a3[14];
  uint64_t v52 = a3[15];
  uint64_t v53 = a1 + v51;
  uint64_t v54 = a2 + v51;
  *(unsigned char *)uint64_t v53 = *(unsigned char *)v54;
  uint64_t v55 = *(void *)(v54 + 16);
  *(void *)(v53 + 8) = *(void *)(v54 + 8);
  *(void *)(v53 + 16) = v55;
  *(unsigned char *)(v53 + 24) = *(unsigned char *)(v54 + 24);
  *(unsigned char *)(v53 + 25) = *(unsigned char *)(v54 + 25);
  uint64_t v56 = *(void *)(v54 + 40);
  *(void *)(v53 + 32) = *(void *)(v54 + 32);
  *(void *)(v53 + 40) = v56;
  *(unsigned char *)(v53 + 48) = *(unsigned char *)(v54 + 48);
  uint64_t v57 = a1 + v52;
  uint64_t v58 = a2 + v52;
  uint64_t v59 = *(void *)(v58 + 8);
  *(void *)uint64_t v57 = *(void *)v58;
  *(void *)(v57 + 8) = v59;
  *(unsigned char *)(v57 + 16) = *(unsigned char *)(v58 + 16);
  *(unsigned char *)(v57 + 17) = *(unsigned char *)(v58 + 17);
  uint64_t v60 = *(void *)(v58 + 24);
  uint64_t v61 = *(void *)(v58 + 32);
  uint64_t v62 = a3[16];
  uint64_t v63 = a3[17];
  LOBYTE(v16) = *(unsigned char *)(a2 + v62);
  *(void *)(v57 + 24) = v60;
  *(void *)(v57 + 32) = v61;
  *(unsigned char *)(a1 + v62) = v16;
  uint64_t v64 = a1 + v63;
  uint64_t v65 = a2 + v63;
  uint64_t v66 = *(void *)(a2 + v63 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v66 == 1)
  {
    *(_OWORD *)uint64_t v64 = *(_OWORD *)v65;
    *(void *)(v64 + 16) = *(void *)(v65 + 16);
  }
  else
  {
    *(unsigned char *)uint64_t v64 = *(unsigned char *)v65;
    *(void *)(v64 + 8) = *(void *)(v65 + 8);
    *(void *)(v64 + 16) = v66;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for ReplicaAdvertisementViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)uint64_t v12 = *(unsigned char *)(a2 + v11);
  *(_DWORD *)(v12 + 4) = *(_DWORD *)(a2 + v11 + 4);
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(a2 + v11 + 8);
  *(void *)(v12 + 16) = *(void *)(a2 + v11 + 16);
  *(void *)(v12 + 24) = *(void *)(a2 + v11 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 32) = *(unsigned char *)(v13 + 32);
  *(void *)(v12 + 40) = *(void *)(v13 + 40);
  uint64_t v14 = *(void *)(v13 + 48);
  *(unsigned char *)(v12 + 56) = *(unsigned char *)(v13 + 56);
  *(void *)(v12 + 48) = v14;
  *(unsigned char *)(v12 + 57) = *(unsigned char *)(v13 + 57);
  *(void *)(v12 + 64) = *(void *)(v13 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v13 + 72);
  *(unsigned char *)(v12 + 80) = *(unsigned char *)(v13 + 80);
  *(void *)(v12 + 72) = v15;
  *(void *)(v12 + 88) = *(void *)(v13 + 88);
  *(void *)(v12 + 96) = *(void *)(v13 + 96);
  *(void *)(v12 + 104) = *(void *)(v13 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 112) = *(unsigned char *)(v13 + 112);
  *(void *)(v12 + 120) = *(void *)(v13 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 128) = *(unsigned char *)(v13 + 128);
  *(unsigned char *)(v12 + 129) = *(unsigned char *)(v13 + 129);
  *(unsigned char *)(v12 + 130) = *(unsigned char *)(v13 + 130);
  *(unsigned char *)(v12 + 131) = *(unsigned char *)(v13 + 131);
  *(unsigned char *)(v12 + 132) = *(unsigned char *)(v13 + 132);
  *(unsigned char *)(v12 + 133) = *(unsigned char *)(v13 + 133);
  *(unsigned char *)(v12 + 134) = *(unsigned char *)(v13 + 134);
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(void *)uint64_t v17 = *(void *)(a2 + v16);
  *(void *)(v17 + 8) = *(void *)(a2 + v16 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v17 + 16) = *(unsigned char *)(v18 + 16);
  *(unsigned char *)(v17 + 17) = *(unsigned char *)(v18 + 17);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(void *)uint64_t v20 = *(void *)(a2 + v19);
  *(void *)(v20 + 8) = *(void *)(a2 + v19 + 8);
  *(void *)(v20 + 16) = *(void *)(a2 + v19 + 16);
  *(void *)(v20 + 24) = *(void *)(a2 + v19 + 24);
  *(void *)(v20 + 32) = *(void *)(a2 + v19 + 32);
  *(void *)(v20 + 40) = *(void *)(a2 + v19 + 40);
  *(void *)(v20 + 48) = *(void *)(a2 + v19 + 48);
  *(void *)(v20 + 56) = *(void *)(a2 + v19 + 56);
  *(void *)(v20 + 64) = *(void *)(a2 + v19 + 64);
  *(void *)(v20 + 72) = *(void *)(a2 + v19 + 72);
  *(void *)(v20 + 80) = *(void *)(a2 + v19 + 80);
  *(void *)(v20 + 88) = *(void *)(a2 + v19 + 88);
  *(void *)(v20 + 96) = *(void *)(a2 + v19 + 96);
  *(void *)(v20 + 104) = *(void *)(a2 + v19 + 104);
  *(void *)(v20 + 112) = *(void *)(a2 + v19 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(v21 + 120);
  *(unsigned char *)(v20 + 128) = *(unsigned char *)(v21 + 128);
  *(void *)(v20 + 120) = v22;
  uint64_t v23 = *(void *)(v21 + 136);
  *(unsigned char *)(v20 + 144) = *(unsigned char *)(v21 + 144);
  *(void *)(v20 + 136) = v23;
  uint64_t v24 = *(void *)(v21 + 152);
  *(unsigned char *)(v20 + 160) = *(unsigned char *)(v21 + 160);
  *(void *)(v20 + 152) = v24;
  uint64_t v25 = *(void *)(v21 + 168);
  *(unsigned char *)(v20 + 176) = *(unsigned char *)(v21 + 176);
  *(void *)(v20 + 168) = v25;
  uint64_t v26 = *(void *)(v21 + 184);
  *(unsigned char *)(v20 + 192) = *(unsigned char *)(v21 + 192);
  *(void *)(v20 + 184) = v26;
  uint64_t v27 = *(void *)(v21 + 200);
  *(unsigned char *)(v20 + 208) = *(unsigned char *)(v21 + 208);
  *(void *)(v20 + 200) = v27;
  uint64_t v28 = *(void *)(v21 + 216);
  *(unsigned char *)(v20 + 224) = *(unsigned char *)(v21 + 224);
  *(void *)(v20 + 216) = v28;
  uint64_t v29 = *(void *)(v21 + 232);
  *(unsigned char *)(v20 + 240) = *(unsigned char *)(v21 + 240);
  *(void *)(v20 + 232) = v29;
  uint64_t v30 = *(void *)(v21 + 248);
  *(unsigned char *)(v20 + 256) = *(unsigned char *)(v21 + 256);
  *(void *)(v20 + 248) = v30;
  uint64_t v31 = *(void *)(v21 + 264);
  *(unsigned char *)(v20 + 272) = *(unsigned char *)(v21 + 272);
  *(void *)(v20 + 264) = v31;
  uint64_t v32 = a3[9];
  uint64_t v33 = (unsigned char *)(a1 + v32);
  uint64_t v34 = (unsigned char *)(a2 + v32);
  *uint64_t v33 = *v34;
  v33[1] = v34[1];
  v33[2] = v34[2];
  v33[3] = v34[3];
  uint64_t v35 = a3[10];
  uint64_t v36 = (unsigned char *)(a1 + v35);
  uint64_t v37 = (unsigned char *)(a2 + v35);
  *uint64_t v36 = *v37;
  v36[1] = v37[1];
  uint64_t v38 = a3[11];
  uint64_t v39 = a1 + v38;
  uint64_t v40 = a2 + v38;
  *(void *)uint64_t v39 = *(void *)(a2 + v38);
  *(void *)(v39 + 8) = *(void *)(a2 + v38 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v39 + 16) = *(unsigned char *)(v40 + 16);
  *(unsigned char *)(v39 + 17) = *(unsigned char *)(v40 + 17);
  *(void *)(v39 + 24) = *(void *)(v40 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v41 = a3[12];
  uint64_t v42 = (void *)(a1 + v41);
  uint64_t v43 = (void *)(a2 + v41);
  *uint64_t v42 = *v43;
  v42[1] = v43[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[13];
  uint64_t v45 = (void *)(a1 + v44);
  uint64_t v46 = (void *)(a2 + v44);
  *uint64_t v45 = *v46;
  v45[1] = v46[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v47 = a3[14];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  *(unsigned char *)uint64_t v48 = *(unsigned char *)(a2 + v47);
  *(void *)(v48 + 8) = *(void *)(a2 + v47 + 8);
  *(void *)(v48 + 16) = *(void *)(a2 + v47 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v48 + 24) = *(unsigned char *)(v49 + 24);
  *(unsigned char *)(v48 + 25) = *(unsigned char *)(v49 + 25);
  *(void *)(v48 + 32) = *(void *)(v49 + 32);
  *(void *)(v48 + 40) = *(void *)(v49 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v48 + 48) = *(unsigned char *)(v49 + 48);
  uint64_t v50 = a3[15];
  uint64_t v51 = a1 + v50;
  uint64_t v52 = a2 + v50;
  *(void *)uint64_t v51 = *(void *)(a2 + v50);
  *(void *)(v51 + 8) = *(void *)(a2 + v50 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v51 + 16) = *(unsigned char *)(v52 + 16);
  *(unsigned char *)(v51 + 17) = *(unsigned char *)(v52 + 17);
  *(void *)(v51 + 24) = *(void *)(v52 + 24);
  *(void *)(v51 + 32) = *(void *)(v52 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  uint64_t v53 = a3[17];
  uint64_t v54 = a1 + v53;
  uint64_t v55 = (long long *)(a2 + v53);
  uint64_t v56 = *(void *)(a1 + v53 + 16);
  uint64_t v57 = *((void *)v55 + 2);
  if (v56 == 1)
  {
    if (v57 == 1)
    {
      long long v58 = *v55;
      *(void *)(v54 + 16) = *((void *)v55 + 2);
      *(_OWORD *)uint64_t v54 = v58;
    }
    else
    {
      *(unsigned char *)uint64_t v54 = *(unsigned char *)v55;
      *(void *)(v54 + 8) = *((void *)v55 + 1);
      *(void *)(v54 + 16) = *((void *)v55 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v57 == 1)
  {
    sub_1DE05D370(v54);
    uint64_t v59 = *((void *)v55 + 2);
    *(_OWORD *)uint64_t v54 = *v55;
    *(void *)(v54 + 16) = v59;
  }
  else
  {
    *(unsigned char *)uint64_t v54 = *(unsigned char *)v55;
    *(void *)(v54 + 8) = *((void *)v55 + 1);
    *(void *)(v54 + 16) = *((void *)v55 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t sub_1DE05D370(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for ReplicaAdvertisementViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(void *)(v13 + 127) = *(void *)(v14 + 127);
  long long v15 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 48) = v15;
  long long v16 = *(_OWORD *)(v14 + 112);
  *(_OWORD *)(v13 + 96) = *(_OWORD *)(v14 + 96);
  *(_OWORD *)(v13 + 112) = v16;
  long long v17 = *(_OWORD *)(v14 + 80);
  *(_OWORD *)(v13 + 64) = *(_OWORD *)(v14 + 64);
  *(_OWORD *)(v13 + 80) = v17;
  long long v18 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v18;
  uint64_t v19 = a1 + v12;
  uint64_t v20 = (long long *)(a2 + v12);
  long long v21 = *v20;
  *(_WORD *)(v19 + 16) = *((_WORD *)v20 + 8);
  uint64_t v22 = a3[8];
  *(_OWORD *)uint64_t v19 = v21;
  memcpy((void *)(a1 + v22), (const void *)(a2 + v22), 0x111uLL);
  uint64_t v23 = a3[10];
  *(_DWORD *)(a1 + a3[9]) = *(_DWORD *)(a2 + a3[9]);
  *(_WORD *)(a1 + v23) = *(_WORD *)(a2 + v23);
  uint64_t v24 = a3[11];
  uint64_t v25 = a3[12];
  uint64_t v26 = (_OWORD *)(a1 + v24);
  uint64_t v27 = (_OWORD *)(a2 + v24);
  long long v28 = v27[1];
  *uint64_t v26 = *v27;
  v26[1] = v28;
  *(_OWORD *)(a1 + v25) = *(_OWORD *)(a2 + v25);
  uint64_t v29 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  long long v32 = *(_OWORD *)(v31 + 16);
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  *(_OWORD *)(v30 + 16) = v32;
  *(_OWORD *)(v30 + 32) = *(_OWORD *)(v31 + 32);
  *(unsigned char *)(v30 + 48) = *(unsigned char *)(v31 + 48);
  uint64_t v33 = a3[15];
  uint64_t v34 = a3[16];
  uint64_t v35 = a1 + v33;
  uint64_t v36 = (long long *)(a2 + v33);
  long long v37 = *v36;
  long long v38 = v36[1];
  *(void *)(v35 + 32) = *((void *)v36 + 4);
  *(_OWORD *)uint64_t v35 = v37;
  *(_OWORD *)(v35 + 16) = v38;
  *(unsigned char *)(a1 + v34) = *(unsigned char *)(a2 + v34);
  uint64_t v39 = a3[17];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  *(void *)(v40 + 16) = *(void *)(v41 + 16);
  *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
  return a1;
}

uint64_t assignWithTake for ReplicaAdvertisementViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)uint64_t v12 = *(unsigned char *)(a2 + v11);
  *(_DWORD *)(v12 + 4) = *(_DWORD *)(a2 + v11 + 4);
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(a2 + v11 + 8);
  uint64_t v14 = *(void *)(a2 + v11 + 24);
  *(void *)(v12 + 16) = *(void *)(a2 + v11 + 16);
  *(void *)(v12 + 24) = v14;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 32) = *(unsigned char *)(v13 + 32);
  uint64_t v15 = *(void *)(v13 + 48);
  *(void *)(v12 + 40) = *(void *)(v13 + 40);
  *(void *)(v12 + 48) = v15;
  *(unsigned char *)(v12 + 56) = *(unsigned char *)(v13 + 56);
  *(unsigned char *)(v12 + 57) = *(unsigned char *)(v13 + 57);
  *(void *)(v12 + 64) = *(void *)(v13 + 64);
  swift_bridgeObjectRelease();
  *(void *)(v12 + 72) = *(void *)(v13 + 72);
  *(unsigned char *)(v12 + 80) = *(unsigned char *)(v13 + 80);
  *(_OWORD *)(v12 + 88) = *(_OWORD *)(v13 + 88);
  *(void *)(v12 + 104) = *(void *)(v13 + 104);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 112) = *(unsigned char *)(v13 + 112);
  *(void *)(v12 + 120) = *(void *)(v13 + 120);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 128) = *(unsigned char *)(v13 + 128);
  *(unsigned char *)(v12 + 129) = *(unsigned char *)(v13 + 129);
  *(unsigned char *)(v12 + 130) = *(unsigned char *)(v13 + 130);
  *(unsigned char *)(v12 + 131) = *(unsigned char *)(v13 + 131);
  *(unsigned char *)(v12 + 132) = *(unsigned char *)(v13 + 132);
  *(unsigned char *)(v12 + 133) = *(unsigned char *)(v13 + 133);
  *(unsigned char *)(v12 + 134) = *(unsigned char *)(v13 + 134);
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = *(void *)(a2 + v16 + 8);
  *(void *)uint64_t v17 = *(void *)(a2 + v16);
  *(void *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  *(_WORD *)(v17 + 16) = *(_WORD *)(v18 + 16);
  uint64_t v20 = a3[8];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  long long v23 = *(_OWORD *)(a2 + v20 + 16);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)(a2 + v20);
  *(_OWORD *)(v21 + 16) = v23;
  long long v24 = *(_OWORD *)(a2 + v20 + 48);
  *(_OWORD *)(v21 + 32) = *(_OWORD *)(a2 + v20 + 32);
  *(_OWORD *)(v21 + 48) = v24;
  long long v25 = *(_OWORD *)(a2 + v20 + 80);
  *(_OWORD *)(v21 + 64) = *(_OWORD *)(a2 + v20 + 64);
  *(_OWORD *)(v21 + 80) = v25;
  *(_OWORD *)(v21 + 96) = *(_OWORD *)(a2 + v20 + 96);
  *(void *)(v21 + 112) = *(void *)(a2 + v20 + 112);
  swift_bridgeObjectRelease();
  *(void *)(v21 + 120) = *(void *)(v22 + 120);
  *(unsigned char *)(v21 + 128) = *(unsigned char *)(v22 + 128);
  *(void *)(v21 + 136) = *(void *)(v22 + 136);
  *(unsigned char *)(v21 + 144) = *(unsigned char *)(v22 + 144);
  *(void *)(v21 + 152) = *(void *)(v22 + 152);
  *(unsigned char *)(v21 + 160) = *(unsigned char *)(v22 + 160);
  *(unsigned char *)(v21 + 176) = *(unsigned char *)(v22 + 176);
  *(void *)(v21 + 168) = *(void *)(v22 + 168);
  uint64_t v26 = *(void *)(v22 + 184);
  *(unsigned char *)(v21 + 192) = *(unsigned char *)(v22 + 192);
  *(void *)(v21 + 184) = v26;
  *(void *)(v21 + 200) = *(void *)(v22 + 200);
  *(unsigned char *)(v21 + 208) = *(unsigned char *)(v22 + 208);
  *(void *)(v21 + 216) = *(void *)(v22 + 216);
  *(unsigned char *)(v21 + 224) = *(unsigned char *)(v22 + 224);
  *(void *)(v21 + 232) = *(void *)(v22 + 232);
  *(unsigned char *)(v21 + 240) = *(unsigned char *)(v22 + 240);
  *(unsigned char *)(v21 + 256) = *(unsigned char *)(v22 + 256);
  *(void *)(v21 + 248) = *(void *)(v22 + 248);
  *(unsigned char *)(v21 + 272) = *(unsigned char *)(v22 + 272);
  *(void *)(v21 + 264) = *(void *)(v22 + 264);
  uint64_t v27 = a3[9];
  uint64_t v28 = a3[10];
  uint64_t v29 = a1 + v27;
  uint64_t v30 = a2 + v27;
  *(unsigned char *)uint64_t v29 = *(unsigned char *)v30;
  *(unsigned char *)(v29 + 1) = *(unsigned char *)(v30 + 1);
  *(_WORD *)(v29 + 2) = *(_WORD *)(v30 + 2);
  *(_WORD *)(a1 + v28) = *(_WORD *)(a2 + v28);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = *(void *)(a2 + v31 + 8);
  *(void *)uint64_t v32 = *(void *)(a2 + v31);
  *(void *)(v32 + 8) = v34;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v32 + 16) = *(unsigned char *)(v33 + 16);
  *(unsigned char *)(v32 + 17) = *(unsigned char *)(v33 + 17);
  *(void *)(v32 + 24) = *(void *)(v33 + 24);
  swift_bridgeObjectRelease();
  uint64_t v35 = a3[12];
  uint64_t v36 = (void *)(a1 + v35);
  long long v37 = (uint64_t *)(a2 + v35);
  uint64_t v39 = *v37;
  uint64_t v38 = v37[1];
  *uint64_t v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  uint64_t v40 = a3[13];
  uint64_t v41 = (void *)(a1 + v40);
  uint64_t v42 = (uint64_t *)(a2 + v40);
  uint64_t v44 = *v42;
  uint64_t v43 = v42[1];
  *uint64_t v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  uint64_t v45 = a3[14];
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  *(unsigned char *)uint64_t v46 = *(unsigned char *)(a2 + v45);
  uint64_t v48 = *(void *)(a2 + v45 + 16);
  *(void *)(v46 + 8) = *(void *)(a2 + v45 + 8);
  *(void *)(v46 + 16) = v48;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v46 + 24) = *(unsigned char *)(v47 + 24);
  *(unsigned char *)(v46 + 25) = *(unsigned char *)(v47 + 25);
  uint64_t v49 = *(void *)(v47 + 40);
  *(void *)(v46 + 32) = *(void *)(v47 + 32);
  *(void *)(v46 + 40) = v49;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v46 + 48) = *(unsigned char *)(v47 + 48);
  uint64_t v50 = a3[15];
  uint64_t v51 = a1 + v50;
  uint64_t v52 = a2 + v50;
  uint64_t v53 = *(void *)(a2 + v50 + 8);
  *(void *)uint64_t v51 = *(void *)(a2 + v50);
  *(void *)(v51 + 8) = v53;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v51 + 16) = *(unsigned char *)(v52 + 16);
  *(unsigned char *)(v51 + 17) = *(unsigned char *)(v52 + 17);
  uint64_t v54 = *(void *)(v52 + 32);
  *(void *)(v51 + 24) = *(void *)(v52 + 24);
  *(void *)(v51 + 32) = v54;
  swift_bridgeObjectRelease();
  uint64_t v55 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  if (*(void *)(a1 + v55 + 16) != 1)
  {
    uint64_t v58 = *(void *)(v57 + 16);
    if (v58 != 1)
    {
      *(unsigned char *)uint64_t v56 = *(unsigned char *)v57;
      *(void *)(v56 + 8) = *(void *)(v57 + 8);
      *(void *)(v56 + 16) = v58;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1DE05D370(a1 + v55);
  }
  *(_OWORD *)uint64_t v56 = *(_OWORD *)v57;
  *(void *)(v56 + 16) = *(void *)(v57 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReplicaAdvertisementViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE05D9B4);
}

uint64_t sub_1DE05D9B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DE47F330();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1DE47F350();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 24);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for ReplicaAdvertisementViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE05DAE0);
}

uint64_t sub_1DE05DAE0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1DE47F330();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_1DE47F350();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_1DE05DBF4()
{
  uint64_t result = sub_1DE47F330();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1DE47F350();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ReplicaAdvertisementViewEvent.Model.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF3) {
    goto LABEL_17;
  }
  if (a2 + 13 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 13) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 13;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xE;
  int v8 = v6 - 14;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ReplicaAdvertisementViewEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *uint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE05DE88);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReplicaAdvertisementViewEvent.Model.CodingKeys()
{
  return &type metadata for ReplicaAdvertisementViewEvent.Model.CodingKeys;
}

unint64_t sub_1DE05DEC4()
{
  unint64_t result = qword_1EABA1B18;
  if (!qword_1EABA1B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1B18);
  }
  return result;
}

unint64_t sub_1DE05DF1C()
{
  unint64_t result = qword_1EABA1B20;
  if (!qword_1EABA1B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1B20);
  }
  return result;
}

unint64_t sub_1DE05DF74()
{
  unint64_t result = qword_1EABA1B28;
  if (!qword_1EABA1B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1B28);
  }
  return result;
}

uint64_t sub_1DE05DFC8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DE4BDE90 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DE4BDEB0 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEF617461446E6F69 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6569566575737369 && a2 == 0xED00006174614477 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001DE4BDED0 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001DE4BDDA0 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DE4BDEF0 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    char v6 = sub_1DE480660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 13;
    }
    else {
      return 14;
    }
  }
}

uint64_t sub_1DE05E5C4(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4A9C8], qword_1EBECA448, MEMORY[0x1E4F4A9C0]);
}

uint64_t static ArticleLoadEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EBECA460, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EBECA448, a1);
}

uint64_t static ArticleLoadEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_1DE05E62C(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4AAB0], qword_1EBECA468, MEMORY[0x1E4F4AAA0]);
}

uint64_t static ArticleLoadEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(qword_1EBEC91A8, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EBECA468, a1);
}

uint64_t sub_1DE05E68C()
{
  uint64_t v0 = sub_1DE47F020();
  __swift_allocate_value_buffer(v0, qword_1EABA1B30);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EABA1B30);
  return sub_1DE47F010();
}

uint64_t static ArticleLoadEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0950, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA1B30, a1);
}

uint64_t ArticleLoadEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084((uint64_t (*)(void))sub_1DE04D618, a1);
}

uint64_t ArticleLoadEvent.eventData.setter(uint64_t a1)
{
  sub_1DE04D618();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*ArticleLoadEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleLoadEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE05EF4C(type metadata accessor for ArticleLoadEvent, (uint64_t (*)(void))sub_1DE04D7B8, a1);
}

uint64_t type metadata accessor for ArticleLoadEvent(uint64_t a1)
{
  return sub_1DE04E1D0(a1, qword_1EBECA480);
}

uint64_t ArticleLoadEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleLoadEvent(0) + 20);
  sub_1DE04D7B8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ArticleLoadEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleLoadEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleLoadEvent(0) + 24);
  sub_1DE05EB14(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ArticleLoadEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleLoadEvent(0) + 24);
  sub_1DE05EB14(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ArticleLoadEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleLoadEvent.articleLoadData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleLoadEvent(0) + 28);
  sub_1DE05EB14(0, &qword_1EBEC9D60, (void (*)(void))sub_1DE05EB90, (void (*)(void))sub_1DE05EBE4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_1DE05EB14(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_1DE47ECA0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1DE05EB90()
{
  unint64_t result = qword_1EBEC9188;
  if (!qword_1EBEC9188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC9188);
  }
  return result;
}

unint64_t sub_1DE05EBE4()
{
  unint64_t result = qword_1EBECA140;
  if (!qword_1EBECA140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBECA140);
  }
  return result;
}

uint64_t ArticleLoadEvent.articleLoadData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleLoadEvent(0) + 28);
  sub_1DE05EB14(0, &qword_1EBEC9D60, (void (*)(void))sub_1DE05EB90, (void (*)(void))sub_1DE05EBE4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ArticleLoadEvent.articleLoadData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleLoadEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  Event = (int *)type metadata accessor for ArticleLoadEvent(0);
  uint64_t v5 = a1 + Event[5];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + Event[6];
  uint64_t v8 = *MEMORY[0x1E4F4A9F8];
  sub_1DE05EB14(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  uint64_t v10 = a1 + Event[7];
  sub_1DE05EB14(0, &qword_1EBEC9D60, (void (*)(void))sub_1DE05EB90, (void (*)(void))sub_1DE05EBE4);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);

  return v12(v10, v2, v11);
}

uint64_t ArticleLoadEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084(MEMORY[0x1E4F4AB70], a1);
}

uint64_t ArticleLoadEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE05EF4C(type metadata accessor for ArticleLoadEvent.Model, MEMORY[0x1E4F4AB90], a1);
}

uint64_t sub_1DE05EF4C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for ArticleLoadEvent.Model(uint64_t a1)
{
  return sub_1DE04E1D0(a1, (uint64_t *)&unk_1EABA1B60);
}

uint64_t ArticleLoadEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleLoadEvent.Model(0) + 24));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;

  return sub_1DE056598(v4, v5, v6);
}

uint64_t ArticleLoadEvent.Model.articleLoadData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for ArticleLoadEvent.Model(0) + 28));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

__n128 ArticleLoadEvent.Model.init(eventData:timedData:feedData:articleLoadData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  __n128 v18 = *a3;
  unint64_t v8 = a3[1].n128_u64[0];
  uint64_t v9 = *a4;
  uint64_t v10 = a4[1];
  uint64_t v11 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(a5, a1, v11);
  uint64_t v12 = (int *)type metadata accessor for ArticleLoadEvent.Model(0);
  uint64_t v13 = a5 + v12[5];
  uint64_t v14 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13, a2, v14);
  uint64_t v15 = (__n128 *)(a5 + v12[6]);
  __n128 result = v18;
  *uint64_t v15 = v18;
  v15[1].n128_u64[0] = v8;
  uint64_t v17 = (void *)(a5 + v12[7]);
  *uint64_t v17 = v9;
  v17[1] = v10;
  return result;
}

uint64_t sub_1DE05F198()
{
  uint64_t result = 0x746144746E657665;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x74614464656D6974;
      break;
    case 2:
      uint64_t result = 0x6174614464656566;
      break;
    case 3:
      uint64_t result = 0x4C656C6369747261;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE05F234@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE061BFC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE05F25C(uint64_t a1)
{
  unint64_t v2 = sub_1DE05F584();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE05F298(uint64_t a1)
{
  unint64_t v2 = sub_1DE05F584();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ArticleLoadEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1DE05FB44(0, &qword_1EABA1B48, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v17 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE05F584();
  sub_1DE480790();
  LOBYTE(v19) = 0;
  sub_1DE47F330();
  sub_1DE04D884(&qword_1EBEC2030, MEMORY[0x1E4F4AB70]);
  sub_1DE4805C0();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for ArticleLoadEvent.Model(0);
    LOBYTE(v19) = 1;
    sub_1DE47F350();
    sub_1DE04D884(&qword_1EBEC2040, MEMORY[0x1E4F4AB90]);
    sub_1DE4805C0();
    uint64_t v11 = (long long *)(v3 + *(int *)(v10 + 24));
    uint64_t v12 = *((void *)v11 + 2);
    long long v19 = *v11;
    uint64_t v20 = v12;
    char v18 = 2;
    sub_1DE055800();
    sub_1DE480550();
    uint64_t v13 = (uint64_t *)(v3 + *(int *)(v10 + 28));
    uint64_t v15 = *v13;
    uint64_t v14 = v13[1];
    *(void *)&long long v19 = v15;
    *((void *)&v19 + 1) = v14;
    char v18 = 3;
    sub_1DE05EBE4();
    sub_1DE4805C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DE05F584()
{
  unint64_t result = qword_1EABA1B50;
  if (!qword_1EABA1B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1B50);
  }
  return result;
}

uint64_t ArticleLoadEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v28 = sub_1DE47F350();
  uint64_t v25 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DE47F330();
  uint64_t v27 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v30 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE05FB44(0, &qword_1EABA1B58, MEMORY[0x1E4FBBDC0]);
  uint64_t v29 = v7;
  uint64_t v26 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v23 - v8;
  uint64_t v10 = (int *)type metadata accessor for ArticleLoadEvent.Model(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE05F584();
  uint64_t v31 = v9;
  uint64_t v13 = (uint64_t)v32;
  sub_1DE480770();
  if (v13) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v32 = a1;
  uint64_t v14 = v27;
  uint64_t v15 = v28;
  LOBYTE(v33) = 0;
  sub_1DE04D884(&qword_1EBEC2038, MEMORY[0x1E4F4AB70]);
  sub_1DE4804E0();
  uint64_t v16 = *(void (**)(char *, char *))(v14 + 32);
  uint64_t v17 = v30;
  uint64_t v30 = (char *)v5;
  v16(v12, v17);
  LOBYTE(v33) = 1;
  sub_1DE04D884((unint64_t *)&unk_1EBEC2048, MEMORY[0x1E4F4AB90]);
  sub_1DE4804E0();
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(&v12[v10[5]], v4, v15);
  char v35 = 2;
  sub_1DE0557AC();
  sub_1DE480470();
  uint64_t v18 = v34;
  long long v19 = &v12[v10[6]];
  *(_OWORD *)long long v19 = v33;
  *((void *)v19 + 2) = v18;
  char v35 = 3;
  sub_1DE05EB90();
  sub_1DE4804E0();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v31, v29);
  uint64_t v20 = *((void *)&v33 + 1);
  uint64_t v21 = &v12[v10[7]];
  *(void *)uint64_t v21 = v33;
  *((void *)v21 + 1) = v20;
  sub_1DE05FBBC((uint64_t)v12, v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  return sub_1DE05FC20((uint64_t)v12);
}

void sub_1DE05FB44(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE05F584();
    unint64_t v7 = a3(a1, &type metadata for ArticleLoadEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DE05FBA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DE05FBBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ArticleLoadEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DE05FC20(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ArticleLoadEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DE05FC7C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ArticleLoadEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DE05FC94(void *a1)
{
  return ArticleLoadEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DE05FCAC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EBECA460, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EBECA448, a1);
}

uint64_t sub_1DE05FCE4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(qword_1EBEC91A8, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EBECA468, a1);
}

uint64_t sub_1DE05FD1C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0950, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA1B30, a1);
}

uint64_t sub_1DE05FD54@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = *MEMORY[0x1E4F4A9F8];
  sub_1DE05EB14(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v8, v9, v10);
  uint64_t v11 = a2 + a1[7];
  sub_1DE05EB14(0, &qword_1EBEC9D60, (void (*)(void))sub_1DE05EB90, (void (*)(void))sub_1DE05EBE4);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104);

  return v13(v11, v4, v12);
}

uint64_t *initializeBufferWithCopyOfBuffer for ArticleLoadEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DE04D618();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DE04D7B8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_1DE05EB14(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_1DE05EB14(0, &qword_1EBEC9D60, (void (*)(void))sub_1DE05EB90, (void (*)(void))sub_1DE05EBE4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for ArticleLoadEvent(uint64_t a1, int *a2)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_1DE05EB14(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_1DE05EB14(0, &qword_1EBEC9D60, (void (*)(void))sub_1DE05EB90, (void (*)(void))sub_1DE05EBE4);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t initializeWithCopy for ArticleLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE05EB14(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE05EB14(0, &qword_1EBEC9D60, (void (*)(void))sub_1DE05EB90, (void (*)(void))sub_1DE05EBE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for ArticleLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE05EB14(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE05EB14(0, &qword_1EBEC9D60, (void (*)(void))sub_1DE05EB90, (void (*)(void))sub_1DE05EBE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for ArticleLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE05EB14(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE05EB14(0, &qword_1EBEC9D60, (void (*)(void))sub_1DE05EB90, (void (*)(void))sub_1DE05EBE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for ArticleLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE05EB14(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE05EB14(0, &qword_1EBEC9D60, (void (*)(void))sub_1DE05EB90, (void (*)(void))sub_1DE05EBE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleLoadEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE0609E8);
}

uint64_t sub_1DE0609E8(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  sub_1DE04D7B8();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  sub_1DE05EB14(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  sub_1DE05EB14(0, &qword_1EBEC9D60, (void (*)(void))sub_1DE05EB90, (void (*)(void))sub_1DE05EBE4);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for ArticleLoadEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE060C04);
}

uint64_t sub_1DE060C04(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_1DE04D618();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  sub_1DE04D7B8();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  sub_1DE05EB14(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  sub_1DE05EB14(0, &qword_1EBEC9D60, (void (*)(void))sub_1DE05EB90, (void (*)(void))sub_1DE05EBE4);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

void sub_1DE060E18()
{
  sub_1DE04D618();
  if (v0 <= 0x3F)
  {
    sub_1DE04D7B8();
    if (v1 <= 0x3F)
    {
      sub_1DE05EB14(319, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
      if (v2 <= 0x3F)
      {
        sub_1DE05EB14(319, &qword_1EBEC9D60, (void (*)(void))sub_1DE05EB90, (void (*)(void))sub_1DE05EBE4);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ArticleLoadEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DE47F330();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DE47F350();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = *((void *)v14 + 2);
    if (v15 == 1)
    {
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      *((void *)v13 + 2) = *((void *)v14 + 2);
    }
    else
    {
      *uint64_t v13 = *v14;
      *((void *)v13 + 1) = *((void *)v14 + 1);
      *((void *)v13 + 2) = v15;
      swift_bridgeObjectRetain();
    }
    uint64_t v17 = a3[7];
    uint64_t v18 = (uint64_t *)((char *)a1 + v17);
    uint64_t v19 = (uint64_t *)((char *)a2 + v17);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ArticleLoadEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  if (*(void *)(a1 + *(int *)(a2 + 24) + 16) != 1) {
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ArticleLoadEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14 == 1)
  {
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    *(void *)(v12 + 16) = *(void *)(v13 + 16);
  }
  else
  {
    *(unsigned char *)uint64_t v12 = *(unsigned char *)v13;
    *(void *)(v12 + 8) = *(void *)(v13 + 8);
    *(void *)(v12 + 16) = v14;
    swift_bridgeObjectRetain();
  }
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ArticleLoadEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = (long long *)(a2 + v11);
  uint64_t v14 = *(void *)(a1 + v11 + 16);
  uint64_t v15 = *(void *)(a2 + v11 + 16);
  if (v14 == 1)
  {
    if (v15 == 1)
    {
      long long v16 = *v13;
      *(void *)(v12 + 16) = *((void *)v13 + 2);
      *(_OWORD *)uint64_t v12 = v16;
    }
    else
    {
      *(unsigned char *)uint64_t v12 = *(unsigned char *)v13;
      *(void *)(v12 + 8) = *((void *)v13 + 1);
      *(void *)(v12 + 16) = *((void *)v13 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v15 == 1)
  {
    sub_1DE05D370(v12);
    uint64_t v17 = *((void *)v13 + 2);
    *(_OWORD *)uint64_t v12 = *v13;
    *(void *)(v12 + 16) = v17;
  }
  else
  {
    *(unsigned char *)uint64_t v12 = *(unsigned char *)v13;
    *(void *)(v12 + 8) = *((void *)v13 + 1);
    *(void *)(v12 + 16) = *((void *)v13 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ArticleLoadEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(void *)(v13 + 16) = *(void *)(v14 + 16);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  return a1;
}

uint64_t assignWithTake for ArticleLoadEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  if (*(void *)(a1 + v11 + 16) != 1)
  {
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14 != 1)
    {
      *(unsigned char *)uint64_t v12 = *(unsigned char *)v13;
      *(void *)(v12 + 8) = *(void *)(v13 + 8);
      *(void *)(v12 + 16) = v14;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1DE05D370(v12);
  }
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
LABEL_6:
  uint64_t v15 = a3[7];
  long long v16 = (void *)(a1 + v15);
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *long long v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleLoadEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE0616D4);
}

uint64_t sub_1DE0616D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DE47F330();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1DE47F350();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 28) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleLoadEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE061800);
}

uint64_t sub_1DE061800(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1DE47F330();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_1DE47F350();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_1DE061914()
{
  uint64_t result = sub_1DE47F330();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1DE47F350();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ArticleLoadEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE061ABCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArticleLoadEvent.Model.CodingKeys()
{
  return &type metadata for ArticleLoadEvent.Model.CodingKeys;
}

unint64_t sub_1DE061AF8()
{
  unint64_t result = qword_1EABA1B70;
  if (!qword_1EABA1B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1B70);
  }
  return result;
}

unint64_t sub_1DE061B50()
{
  unint64_t result = qword_1EABA1B78;
  if (!qword_1EABA1B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1B78);
  }
  return result;
}

unint64_t sub_1DE061BA8()
{
  unint64_t result = qword_1EABA1B80;
  if (!qword_1EABA1B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1B80);
  }
  return result;
}

uint64_t sub_1DE061BFC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4C656C6369747261 && a2 == 0xEF6174614464616FLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1DE480660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1DE061DF4(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4A9C8], qword_1EABA1B88, MEMORY[0x1E4F4A9C0]);
}

uint64_t static PuzzleExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0958, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EABA1B88, a1);
}

uint64_t static PuzzleExposureEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_1DE061E5C(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4AAB0], qword_1EABA1BA0, MEMORY[0x1E4F4AAA0]);
}

uint64_t static PuzzleExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0960, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EABA1BA0, a1);
}

uint64_t sub_1DE061EBC()
{
  uint64_t v0 = sub_1DE47F020();
  __swift_allocate_value_buffer(v0, qword_1EABA1BB8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EABA1BB8);
  return sub_1DE47F010();
}

uint64_t static PuzzleExposureEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0968, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA1BB8, a1);
}

uint64_t PuzzleExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084((uint64_t (*)(void))sub_1DE04D618, a1);
}

uint64_t PuzzleExposureEvent.eventData.setter(uint64_t a1)
{
  sub_1DE04D618();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*PuzzleExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleExposureEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 20);
  sub_1DE06317C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for PuzzleExposureEvent(uint64_t a1)
{
  return sub_1DE04E1D0(a1, (uint64_t *)&unk_1EABA1C00);
}

uint64_t PuzzleExposureEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 20);
  sub_1DE06317C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PuzzleExposureEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleExposureEvent.puzzleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 24);
  sub_1DE06317C(0, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE062258()
{
  unint64_t result = qword_1EBEC9DF8;
  if (!qword_1EBEC9DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC9DF8);
  }
  return result;
}

unint64_t sub_1DE0622AC()
{
  unint64_t result = qword_1EBEC9DF0;
  if (!qword_1EBEC9DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC9DF0);
  }
  return result;
}

uint64_t PuzzleExposureEvent.puzzleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 24);
  sub_1DE06317C(0, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PuzzleExposureEvent.puzzleData.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleExposureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 28);
  sub_1DE06317C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PuzzleExposureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 28);
  sub_1DE06317C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PuzzleExposureEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleExposureEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 32);
  sub_1DE06317C(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PuzzleExposureEvent.channelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 32);
  sub_1DE06317C(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PuzzleExposureEvent.channelData.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleExposureEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 36);
  sub_1DE06317C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PuzzleExposureEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 36);
  sub_1DE06317C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PuzzleExposureEvent.userBundleSubscriptionContextData.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleExposureEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 40);
  sub_1DE06317C(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE0629A0()
{
  unint64_t result = qword_1EBEC7268;
  if (!qword_1EBEC7268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC7268);
  }
  return result;
}

unint64_t sub_1DE0629F4()
{
  unint64_t result = qword_1EBEC7260;
  if (!qword_1EBEC7260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC7260);
  }
  return result;
}

uint64_t PuzzleExposureEvent.groupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 40);
  sub_1DE06317C(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PuzzleExposureEvent.groupData.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE063CA0(type metadata accessor for PuzzleExposureEvent, (uint64_t (*)(void))sub_1DE04D7B8, a1);
}

uint64_t PuzzleExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 44);
  sub_1DE04D7B8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PuzzleExposureEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleExposureEvent.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 48);
  sub_1DE06317C(0, &qword_1EBEC1ED8, (void (*)(void))sub_1DE062CDC, (void (*)(void))sub_1DE062D30);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE062CDC()
{
  unint64_t result = qword_1EBEC38C0;
  if (!qword_1EBEC38C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC38C0);
  }
  return result;
}

unint64_t sub_1DE062D30()
{
  unint64_t result = qword_1EBEC38B8;
  if (!qword_1EBEC38B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC38B8);
  }
  return result;
}

uint64_t PuzzleExposureEvent.feedPositionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 48);
  sub_1DE06317C(0, &qword_1EBEC1ED8, (void (*)(void))sub_1DE062CDC, (void (*)(void))sub_1DE062D30);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PuzzleExposureEvent.feedPositionData.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleExposureEvent.puzzleLayoutData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 52);
  sub_1DE06317C(0, &qword_1EABA1BD0, (void (*)(void))sub_1DE062F2C, (void (*)(void))sub_1DE062F80);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE062F2C()
{
  unint64_t result = qword_1EABA1BD8;
  if (!qword_1EABA1BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1BD8);
  }
  return result;
}

unint64_t sub_1DE062F80()
{
  unint64_t result = qword_1EABA1BE0;
  if (!qword_1EABA1BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1BE0);
  }
  return result;
}

uint64_t PuzzleExposureEvent.puzzleLayoutData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 52);
  sub_1DE06317C(0, &qword_1EABA1BD0, (void (*)(void))sub_1DE062F2C, (void (*)(void))sub_1DE062F80);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PuzzleExposureEvent.puzzleLayoutData.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleExposureEvent.offlineModeData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 56);
  sub_1DE06317C(0, &qword_1EBEC96B8, (void (*)(void))sub_1DE04BB08, (void (*)(void))sub_1DE04BB60);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_1DE06317C(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_1DE47ECA0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t PuzzleExposureEvent.offlineModeData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleExposureEvent(0) + 56);
  sub_1DE06317C(0, &qword_1EBEC96B8, (void (*)(void))sub_1DE04BB08, (void (*)(void))sub_1DE04BB60);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PuzzleExposureEvent.offlineModeData.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for PuzzleExposureEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_1DE06317C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_1DE06317C(0, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = *MEMORY[0x1E4F4A9F8];
  sub_1DE06317C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v9, v10, v11);
  uint64_t v12 = a1 + v4[8];
  sub_1DE06317C(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v10, v13);
  uint64_t v14 = a1 + v4[9];
  sub_1DE06317C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v2, v15);
  uint64_t v16 = a1 + v4[10];
  sub_1DE06317C(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v10, v17);
  uint64_t v18 = a1 + v4[11];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v2, v19);
  uint64_t v20 = a1 + v4[12];
  sub_1DE06317C(0, &qword_1EBEC1ED8, (void (*)(void))sub_1DE062CDC, (void (*)(void))sub_1DE062D30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v10, v21);
  uint64_t v22 = a1 + v4[13];
  sub_1DE06317C(0, &qword_1EABA1BD0, (void (*)(void))sub_1DE062F2C, (void (*)(void))sub_1DE062F80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v22, v10, v23);
  uint64_t v24 = a1 + v4[14];
  sub_1DE06317C(0, &qword_1EBEC96B8, (void (*)(void))sub_1DE04BB08, (void (*)(void))sub_1DE04BB60);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104);

  return v26(v24, v2, v25);
}

uint64_t PuzzleExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084(MEMORY[0x1E4F4AB70], a1);
}

uint64_t PuzzleExposureEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PuzzleExposureEvent.Model(0) + 20));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for PuzzleExposureEvent.Model(uint64_t a1)
{
  return sub_1DE04E1D0(a1, (uint64_t *)&unk_1EABA1C10);
}

uint64_t PuzzleExposureEvent.Model.puzzleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PuzzleExposureEvent.Model(0) + 24));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  int v8 = *((_DWORD *)v3 + 8);
  uint64_t v9 = v3[5];
  char v10 = *((unsigned char *)v3 + 48);
  uint64_t v11 = v3[7];
  char v12 = *((unsigned char *)v3 + 64);
  char v13 = *((unsigned char *)v3 + 65);
  uint64_t v14 = v3[9];
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(_DWORD *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v12;
  *(unsigned char *)(a1 + 65) = v13;
  *(void *)(a1 + 72) = v14;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t PuzzleExposureEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PuzzleExposureEvent.Model(0) + 28));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;

  return sub_1DE056598(v4, v5, v6);
}

uint64_t PuzzleExposureEvent.Model.channelData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PuzzleExposureEvent.Model(0) + 32));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;

  return sub_1DE0639EC(v4, v5);
}

uint64_t sub_1DE0639EC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t PuzzleExposureEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (char *)(v1 + *(int *)(type metadata accessor for PuzzleExposureEvent.Model(0) + 36));
  char v4 = *v3;
  uint64_t v5 = *((void *)v3 + 1);
  uint64_t v6 = *((void *)v3 + 2);
  char v7 = v3[24];
  char v8 = v3[25];
  uint64_t v10 = *((void *)v3 + 4);
  uint64_t v9 = *((void *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(unsigned char *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 25) = v8;
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

void *PuzzleExposureEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PuzzleExposureEvent.Model(0);
  sub_1DE063B10(v1 + *(int *)(v3 + 40), (uint64_t)v5);
  sub_1DE063B10((uint64_t)v5, a1);
  return sub_1DE0652D8(v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DE063BCC);
}

uint64_t sub_1DE063B10(uint64_t a1, uint64_t a2)
{
  sub_1DE063B74();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DE063B74()
{
  if (!qword_1EBEC9B00)
  {
    unint64_t v0 = sub_1DE480220();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBEC9B00);
    }
  }
}

uint64_t sub_1DE063BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t PuzzleExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE063CA0(type metadata accessor for PuzzleExposureEvent.Model, MEMORY[0x1E4F4AB90], a1);
}

uint64_t sub_1DE063CA0@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 44);
  uint64_t v7 = a2(0);
  char v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t PuzzleExposureEvent.Model.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for PuzzleExposureEvent.Model(0);
  uint64_t v4 = (int *)(v1 + *(int *)(result + 48));
  int v5 = *v4;
  LOBYTE(v4) = *((unsigned char *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(unsigned char *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t PuzzleExposureEvent.Model.puzzleLayoutData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for PuzzleExposureEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 52));
  return result;
}

uint64_t PuzzleExposureEvent.Model.offlineModeData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for PuzzleExposureEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 56));
  return result;
}

uint64_t PuzzleExposureEvent.Model.init(eventData:viewData:puzzleData:feedData:channelData:userBundleSubscriptionContextData:groupData:timedData:feedPositionData:puzzleLayoutData:offlineModeData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, long long *a3@<X2>, long long *a4@<X3>, long long *a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, int *a10, char *a11, char *a12)
{
  uint64_t v14 = *a2;
  uint64_t v15 = a2[1];
  __int16 v16 = *((_WORD *)a2 + 8);
  long long v40 = *a3;
  uint64_t v38 = *((void *)a3 + 3);
  uint64_t v39 = *((void *)a3 + 2);
  int v37 = *((_DWORD *)a3 + 8);
  uint64_t v36 = *((void *)a3 + 5);
  char v17 = *((unsigned char *)a3 + 48);
  uint64_t v18 = *((void *)a3 + 7);
  char v34 = *((unsigned char *)a3 + 65);
  char v35 = *((unsigned char *)a3 + 64);
  uint64_t v33 = *((void *)a3 + 9);
  long long v42 = *a4;
  uint64_t v41 = *((void *)a4 + 2);
  long long v44 = a5[1];
  long long v45 = *a5;
  uint64_t v43 = *((void *)a5 + 4);
  char v53 = *a6;
  uint64_t v51 = *((void *)a6 + 2);
  uint64_t v52 = *((void *)a6 + 1);
  char v49 = a6[25];
  char v50 = a6[24];
  uint64_t v47 = *((void *)a6 + 5);
  uint64_t v48 = *((void *)a6 + 4);
  char v46 = a6[48];
  sub_1DE063B10(a7, (uint64_t)v56);
  int v54 = *a10;
  char v19 = *((unsigned char *)a10 + 4);
  char v20 = *a11;
  char v21 = *a12;
  uint64_t v22 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(a9, a1, v22);
  uint64_t v23 = (int *)type metadata accessor for PuzzleExposureEvent.Model(0);
  uint64_t v24 = a9 + v23[5];
  *(void *)uint64_t v24 = v14;
  *(void *)(v24 + 8) = v15;
  *(_WORD *)(v24 + 16) = v16;
  uint64_t v25 = a9 + v23[6];
  *(_OWORD *)uint64_t v25 = v40;
  *(void *)(v25 + 16) = v39;
  *(void *)(v25 + 24) = v38;
  *(_DWORD *)(v25 + 32) = v37;
  *(void *)(v25 + 40) = v36;
  *(unsigned char *)(v25 + 48) = v17;
  *(void *)(v25 + 56) = v18;
  *(unsigned char *)(v25 + 64) = v35;
  *(unsigned char *)(v25 + 65) = v34;
  *(void *)(v25 + 72) = v33;
  uint64_t v26 = a9 + v23[7];
  *(_OWORD *)uint64_t v26 = v42;
  *(void *)(v26 + 16) = v41;
  uint64_t v27 = a9 + v23[8];
  *(_OWORD *)uint64_t v27 = v45;
  *(_OWORD *)(v27 + 16) = v44;
  *(void *)(v27 + 32) = v43;
  uint64_t v28 = a9 + v23[9];
  *(unsigned char *)uint64_t v28 = v53;
  *(void *)(v28 + 8) = v52;
  *(void *)(v28 + 16) = v51;
  *(unsigned char *)(v28 + 24) = v50;
  *(unsigned char *)(v28 + 25) = v49;
  *(void *)(v28 + 32) = v48;
  *(void *)(v28 + 40) = v47;
  *(unsigned char *)(v28 + 48) = v46;
  sub_1DE063B10((uint64_t)v56, a9 + v23[10]);
  uint64_t v29 = a9 + v23[11];
  uint64_t v30 = sub_1DE47F350();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v29, a8, v30);
  uint64_t v32 = a9 + v23[12];
  *(_DWORD *)uint64_t v32 = v54;
  *(unsigned char *)(v32 + 4) = v19;
  *(unsigned char *)(a9 + v23[13]) = v20;
  *(unsigned char *)(a9 + v23[14]) = v21;
  return result;
}

uint64_t sub_1DE064080(char a1)
{
  uint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      unsigned int v3 = 2003134838;
      goto LABEL_5;
    case 2:
      uint64_t result = 0x6144656C7A7A7570;
      break;
    case 3:
      unsigned int v3 = 1684366694;
LABEL_5:
      uint64_t result = v3 | 0x6174614400000000;
      break;
    case 4:
      uint64_t result = 0x446C656E6E616863;
      break;
    case 5:
      uint64_t result = 0xD000000000000021;
      break;
    case 6:
      uint64_t result = 0x74614470756F7267;
      break;
    case 7:
      uint64_t result = 0x74614464656D6974;
      break;
    case 8:
    case 9:
      uint64_t result = 0xD000000000000010;
      break;
    case 10:
      uint64_t result = 0x4D656E696C66666FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE0641E4()
{
  return sub_1DE064080(*v0);
}

uint64_t sub_1DE0641EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE06A54C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DE064214(unsigned char *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_1DE064220(uint64_t a1)
{
  unint64_t v2 = sub_1DE0647D4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE06425C(uint64_t a1)
{
  unint64_t v2 = sub_1DE0647D4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PuzzleExposureEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1DE065274(0, &qword_1EABA1BE8, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v37 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0647D4();
  sub_1DE480790();
  LOBYTE(v40) = 0;
  sub_1DE47F330();
  sub_1DE04D884(&qword_1EBEC2030, MEMORY[0x1E4F4AB70]);
  sub_1DE4805C0();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for PuzzleExposureEvent.Model(0);
    uint64_t v11 = (uint64_t *)(v3 + v10[5]);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    LOWORD(v11) = *((_WORD *)v11 + 8);
    *(void *)&long long v40 = v12;
    *((void *)&v40 + 1) = v13;
    LOWORD(v41) = (_WORD)v11;
    LOBYTE(v38) = 1;
    sub_1DE05410C();
    sub_1DE4805C0();
    uint64_t v14 = (long long *)(v3 + v10[6]);
    long long v15 = *v14;
    uint64_t v16 = *((void *)v14 + 2);
    uint64_t v17 = *((void *)v14 + 3);
    int v18 = *((_DWORD *)v14 + 8);
    uint64_t v19 = *((void *)v14 + 5);
    char v20 = *((unsigned char *)v14 + 48);
    uint64_t v21 = *((void *)v14 + 7);
    char v22 = *((unsigned char *)v14 + 64);
    char v23 = *((unsigned char *)v14 + 65);
    uint64_t v24 = *((void *)v14 + 9);
    long long v40 = v15;
    *(void *)&long long v41 = v16;
    *((void *)&v41 + 1) = v17;
    LODWORD(v42) = v18;
    uint64_t v43 = v19;
    char v44 = v20;
    uint64_t v45 = v21;
    char v46 = v22;
    char v47 = v23;
    uint64_t v48 = v24;
    LOBYTE(v38) = 2;
    sub_1DE0622AC();
    sub_1DE4805C0();
    uint64_t v25 = (long long *)(v3 + v10[7]);
    uint64_t v26 = *((void *)v25 + 2);
    long long v40 = *v25;
    *(void *)&long long v41 = v26;
    LOBYTE(v38) = 3;
    sub_1DE055800();
    sub_1DE480550();
    uint64_t v27 = (long long *)(v3 + v10[8]);
    uint64_t v28 = *((void *)v27 + 4);
    long long v29 = v27[1];
    long long v40 = *v27;
    long long v41 = v29;
    uint64_t v42 = v28;
    LOBYTE(v38) = 4;
    sub_1DE0552E4();
    sub_1DE480550();
    uint64_t v30 = (char *)(v3 + v10[9]);
    char v31 = v30[24];
    char v32 = v30[25];
    char v33 = v30[48];
    char v50 = *v30;
    long long v51 = *(_OWORD *)(v30 + 8);
    char v52 = v31;
    char v53 = v32;
    long long v54 = *((_OWORD *)v30 + 2);
    char v55 = v33;
    char v49 = 5;
    sub_1DE04DD5C();
    sub_1DE4805C0();
    sub_1DE063B10(v3 + v10[10], (uint64_t)&v40);
    sub_1DE063B10((uint64_t)&v40, (uint64_t)&v38);
    HIBYTE(v37) = 6;
    sub_1DE0629F4();
    sub_1DE480550();
    LOBYTE(v38) = 7;
    sub_1DE47F350();
    sub_1DE04D884(&qword_1EBEC2040, MEMORY[0x1E4F4AB90]);
    sub_1DE4805C0();
    char v34 = (int *)(v3 + v10[12]);
    int v35 = *v34;
    LOBYTE(v34) = *((unsigned char *)v34 + 4);
    int v38 = v35;
    char v39 = (char)v34;
    HIBYTE(v37) = 8;
    sub_1DE062D30();
    sub_1DE480550();
    LOBYTE(v38) = *(unsigned char *)(v3 + v10[13]);
    HIBYTE(v37) = 9;
    sub_1DE062F80();
    sub_1DE480550();
    LOBYTE(v38) = *(unsigned char *)(v3 + v10[14]);
    HIBYTE(v37) = 10;
    sub_1DE04BB60();
    sub_1DE4805C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DE0647D4()
{
  unint64_t result = qword_1EABA1BF0;
  if (!qword_1EABA1BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1BF0);
  }
  return result;
}

uint64_t PuzzleExposureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v49 = sub_1DE47F350();
  uint64_t v47 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  uint64_t v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DE47F330();
  uint64_t v50 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE065274(0, &qword_1EABA1BF8, MEMORY[0x1E4FBBDC0]);
  uint64_t v46 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v44 - v10;
  uint64_t v65 = (int *)type metadata accessor for PuzzleExposureEvent.Model(0);
  MEMORY[0x1F4188790](v65);
  long long v51 = a1;
  char v52 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0647D4();
  uint64_t v45 = v11;
  uint64_t v13 = v53;
  sub_1DE480770();
  uint64_t v48 = v5;
  if (v13)
  {
    uint64_t v53 = v13;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  }
  else
  {
    LOBYTE(v58[0]) = 0;
    sub_1DE04D884(&qword_1EBEC2038, MEMORY[0x1E4F4AB70]);
    sub_1DE4804E0();
    uint64_t v16 = v52;
    (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v52, v7, v5);
    v57[0] = 1;
    sub_1DE0540B8();
    sub_1DE4804E0();
    uint64_t v17 = *((void *)&v58[0] + 1);
    __int16 v18 = v58[1];
    uint64_t v19 = &v16[v65[5]];
    *(void *)uint64_t v19 = *(void *)&v58[0];
    *((void *)v19 + 1) = v17;
    *((_WORD *)v19 + 8) = v18;
    v57[0] = 2;
    sub_1DE062258();
    sub_1DE4804E0();
    long long v20 = v58[1];
    int v21 = v59;
    uint64_t v22 = *((void *)&v59 + 1);
    char v23 = v60;
    uint64_t v24 = v61;
    char v25 = v62;
    char v26 = v63;
    uint64_t v27 = v64;
    uint64_t v28 = &v16[v65[6]];
    *(_OWORD *)uint64_t v28 = v58[0];
    *((_OWORD *)v28 + 1) = v20;
    *((_DWORD *)v28 + 8) = v21;
    *((void *)v28 + 5) = v22;
    v28[48] = v23;
    *((void *)v28 + 7) = v24;
    v28[64] = v25;
    v28[65] = v26;
    *((void *)v28 + 9) = v27;
    v57[0] = 3;
    sub_1DE0557AC();
    sub_1DE480470();
    uint64_t v29 = *(void *)&v58[1];
    uint64_t v30 = &v16[v65[7]];
    *(_OWORD *)uint64_t v30 = v58[0];
    *((void *)v30 + 2) = v29;
    v57[0] = 4;
    sub_1DE055290();
    sub_1DE480470();
    uint64_t v31 = v59;
    char v32 = &v16[v65[8]];
    long long v33 = v58[1];
    *(_OWORD *)char v32 = v58[0];
    *((_OWORD *)v32 + 1) = v33;
    *((void *)v32 + 4) = v31;
    v57[0] = 5;
    sub_1DE04DD08();
    sub_1DE4804E0();
    char v34 = BYTE8(v58[1]);
    char v35 = BYTE9(v58[1]);
    char v36 = v60;
    uint64_t v37 = &v16[v65[9]];
    *uint64_t v37 = v58[0];
    *(_OWORD *)(v37 + 8) = *(_OWORD *)((char *)v58 + 8);
    v37[24] = v34;
    v37[25] = v35;
    *((_OWORD *)v37 + 2) = v59;
    v37[48] = v36;
    v57[143] = 6;
    sub_1DE0629A0();
    sub_1DE480470();
    sub_1DE063B10((uint64_t)v58, (uint64_t)v57);
    sub_1DE063B10((uint64_t)v57, (uint64_t)&v16[v65[10]]);
    LOBYTE(v55) = 7;
    sub_1DE04D884((unint64_t *)&unk_1EBEC2048, MEMORY[0x1E4F4AB90]);
    sub_1DE4804E0();
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(&v16[v65[11]], v4, v49);
    char v54 = 8;
    sub_1DE062CDC();
    sub_1DE480470();
    uint64_t v53 = 0;
    char v38 = v56;
    char v39 = &v16[v65[12]];
    *(_DWORD *)char v39 = v55;
    v39[4] = v38;
    char v54 = 9;
    sub_1DE062F2C();
    uint64_t v40 = v53;
    sub_1DE480470();
    uint64_t v53 = v40;
    if (v40 || (v52[v65[13]] = v55, v54 = 10, sub_1DE04BB08(), uint64_t v41 = v53, sub_1DE4804E0(), (v53 = v41) != 0))
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v45, v46);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
      uint64_t v42 = v52;
      (*(void (**)(char *, uint64_t))(v50 + 8))(v52, v48);
      long long v15 = v65;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DE05FBA8(*(void *)&v42[v15[7]], *(void *)&v42[v15[7] + 8], *(void *)&v42[v15[7] + 16]);
      sub_1DE0653E4(*(void *)&v42[v15[8]], *(void *)&v42[v15[8] + 8]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DE063B10((uint64_t)&v42[v15[10]], (uint64_t)v58);
      sub_1DE0652D8(v58, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DE06533C);
      return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(&v42[v15[11]], v49);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v45, v46);
      uint64_t v43 = (uint64_t)v52;
      v52[v65[14]] = v55;
      sub_1DE065428(v43, v44);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
      return sub_1DE06548C(v43);
    }
  }
}

void sub_1DE065274(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE0647D4();
    unint64_t v7 = a3(a1, &type metadata for PuzzleExposureEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void *sub_1DE0652D8(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1DE06533C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DE0653E4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DE065428(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PuzzleExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DE06548C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PuzzleExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DE0654E8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PuzzleExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DE065500(void *a1)
{
  return PuzzleExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DE065518@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0958, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EABA1B88, a1);
}

uint64_t sub_1DE065550@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0960, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EABA1BA0, a1);
}

uint64_t sub_1DE065588@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0968, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA1BB8, a1);
}

uint64_t sub_1DE0655C0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_1DE06317C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_1DE06317C(0, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = *MEMORY[0x1E4F4A9F8];
  sub_1DE06317C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  uint64_t v13 = a2 + a1[8];
  sub_1DE06317C(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v11, v14);
  uint64_t v15 = a2 + a1[9];
  sub_1DE06317C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v4, v16);
  uint64_t v17 = a2 + a1[10];
  sub_1DE06317C(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v11, v18);
  uint64_t v19 = a2 + a1[11];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v4, v20);
  uint64_t v21 = a2 + a1[12];
  sub_1DE06317C(0, &qword_1EBEC1ED8, (void (*)(void))sub_1DE062CDC, (void (*)(void))sub_1DE062D30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v21, v11, v22);
  uint64_t v23 = a2 + a1[13];
  sub_1DE06317C(0, &qword_1EABA1BD0, (void (*)(void))sub_1DE062F2C, (void (*)(void))sub_1DE062F80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v23, v11, v24);
  uint64_t v25 = a2 + a1[14];
  sub_1DE06317C(0, &qword_1EBEC96B8, (void (*)(void))sub_1DE04BB08, (void (*)(void))sub_1DE04BB60);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104);

  return v27(v25, v4, v26);
}

uint64_t *initializeBufferWithCopyOfBuffer for PuzzleExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v48 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v48 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DE04D618();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DE06317C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_1DE06317C(0, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_1DE06317C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_1DE06317C(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_1DE06317C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    sub_1DE06317C(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    long long v33 = (char *)a1 + v32;
    char v34 = (char *)a2 + v32;
    sub_1DE04D7B8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    uint64_t v37 = (char *)a1 + v36;
    char v38 = (char *)a2 + v36;
    sub_1DE06317C(0, &qword_1EBEC1ED8, (void (*)(void))sub_1DE062CDC, (void (*)(void))sub_1DE062D30);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = a3[13];
    uint64_t v41 = (char *)a1 + v40;
    uint64_t v42 = (char *)a2 + v40;
    sub_1DE06317C(0, &qword_1EABA1BD0, (void (*)(void))sub_1DE062F2C, (void (*)(void))sub_1DE062F80);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    uint64_t v44 = a3[14];
    uint64_t v45 = (char *)a1 + v44;
    uint64_t v46 = (char *)a2 + v44;
    sub_1DE06317C(0, &qword_1EBEC96B8, (void (*)(void))sub_1DE04BB08, (void (*)(void))sub_1DE04BB60);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
  }
  return a1;
}

uint64_t destroy for PuzzleExposureEvent(uint64_t a1, int *a2)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_1DE06317C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_1DE06317C(0, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_1DE06317C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_1DE06317C(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_1DE06317C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_1DE06317C(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  sub_1DE06317C(0, &qword_1EBEC1ED8, (void (*)(void))sub_1DE062CDC, (void (*)(void))sub_1DE062D30);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[13];
  sub_1DE06317C(0, &qword_1EABA1BD0, (void (*)(void))sub_1DE062F2C, (void (*)(void))sub_1DE062F80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = a1 + a2[14];
  sub_1DE06317C(0, &qword_1EBEC96B8, (void (*)(void))sub_1DE04BB08, (void (*)(void))sub_1DE04BB60);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8);

  return v25(v23, v24);
}

uint64_t initializeWithCopy for PuzzleExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE06317C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE06317C(0, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE06317C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE06317C(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE06317C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE06317C(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE06317C(0, &qword_1EBEC1ED8, (void (*)(void))sub_1DE062CDC, (void (*)(void))sub_1DE062D30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_1DE06317C(0, &qword_1EABA1BD0, (void (*)(void))sub_1DE062F2C, (void (*)(void))sub_1DE062F80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_1DE06317C(0, &qword_1EBEC96B8, (void (*)(void))sub_1DE04BB08, (void (*)(void))sub_1DE04BB60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
  return a1;
}

uint64_t assignWithCopy for PuzzleExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE06317C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE06317C(0, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE06317C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE06317C(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE06317C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE06317C(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE06317C(0, &qword_1EBEC1ED8, (void (*)(void))sub_1DE062CDC, (void (*)(void))sub_1DE062D30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_1DE06317C(0, &qword_1EABA1BD0, (void (*)(void))sub_1DE062F2C, (void (*)(void))sub_1DE062F80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_1DE06317C(0, &qword_1EBEC96B8, (void (*)(void))sub_1DE04BB08, (void (*)(void))sub_1DE04BB60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
  return a1;
}

uint64_t initializeWithTake for PuzzleExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE06317C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE06317C(0, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE06317C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE06317C(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE06317C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE06317C(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE06317C(0, &qword_1EBEC1ED8, (void (*)(void))sub_1DE062CDC, (void (*)(void))sub_1DE062D30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_1DE06317C(0, &qword_1EABA1BD0, (void (*)(void))sub_1DE062F2C, (void (*)(void))sub_1DE062F80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_1DE06317C(0, &qword_1EBEC96B8, (void (*)(void))sub_1DE04BB08, (void (*)(void))sub_1DE04BB60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  return a1;
}

uint64_t assignWithTake for PuzzleExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE06317C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE06317C(0, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE06317C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE06317C(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE06317C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE06317C(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE06317C(0, &qword_1EBEC1ED8, (void (*)(void))sub_1DE062CDC, (void (*)(void))sub_1DE062D30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_1DE06317C(0, &qword_1EABA1BD0, (void (*)(void))sub_1DE062F2C, (void (*)(void))sub_1DE062F80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_1DE06317C(0, &qword_1EBEC96B8, (void (*)(void))sub_1DE04BB08, (void (*)(void))sub_1DE04BB60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE067A80);
}

uint64_t sub_1DE067A80(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_22:
    return v9(v10, a2, v8);
  }
  sub_1DE06317C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_21:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_22;
  }
  sub_1DE06317C(0, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_21;
  }
  sub_1DE06317C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_21;
  }
  sub_1DE06317C(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_21;
  }
  sub_1DE06317C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_21;
  }
  sub_1DE06317C(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_21;
  }
  sub_1DE04D7B8();
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_21;
  }
  sub_1DE06317C(0, &qword_1EBEC1ED8, (void (*)(void))sub_1DE062CDC, (void (*)(void))sub_1DE062D30);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_21;
  }
  sub_1DE06317C(0, &qword_1EABA1BD0, (void (*)(void))sub_1DE062F2C, (void (*)(void))sub_1DE062F80);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a2)
  {
    uint64_t v8 = v21;
    uint64_t v12 = *(void *)(v21 - 8);
    uint64_t v13 = a3[13];
    goto LABEL_21;
  }
  sub_1DE06317C(0, &qword_1EBEC96B8, (void (*)(void))sub_1DE04BB08, (void (*)(void))sub_1DE04BB60);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48);
  uint64_t v25 = v23;
  uint64_t v26 = a1 + a3[14];

  return v24(v26, a2, v25);
}

uint64_t storeEnumTagSinglePayload for PuzzleExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE068038);
}

uint64_t sub_1DE068038(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_1DE04D618();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_22:
    return v11(v12, a2, a2, v10);
  }
  sub_1DE06317C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_21:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_22;
  }
  sub_1DE06317C(0, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_21;
  }
  sub_1DE06317C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_21;
  }
  sub_1DE06317C(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_21;
  }
  sub_1DE06317C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_21;
  }
  sub_1DE06317C(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_21;
  }
  sub_1DE04D7B8();
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_21;
  }
  sub_1DE06317C(0, &qword_1EBEC1ED8, (void (*)(void))sub_1DE062CDC, (void (*)(void))sub_1DE062D30);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_21;
  }
  sub_1DE06317C(0, &qword_1EABA1BD0, (void (*)(void))sub_1DE062F2C, (void (*)(void))sub_1DE062F80);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a3)
  {
    uint64_t v10 = v23;
    uint64_t v14 = *(void *)(v23 - 8);
    uint64_t v15 = a4[13];
    goto LABEL_21;
  }
  sub_1DE06317C(0, &qword_1EBEC96B8, (void (*)(void))sub_1DE04BB08, (void (*)(void))sub_1DE04BB60);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
  uint64_t v27 = v25;
  uint64_t v28 = a1 + a4[14];

  return v26(v28, a2, a2, v27);
}

void sub_1DE0685E8()
{
  sub_1DE04D618();
  if (v0 <= 0x3F)
  {
    sub_1DE06317C(319, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
    if (v1 <= 0x3F)
    {
      sub_1DE06317C(319, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
      if (v2 <= 0x3F)
      {
        sub_1DE06317C(319, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
        if (v3 <= 0x3F)
        {
          sub_1DE06317C(319, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
          if (v4 <= 0x3F)
          {
            sub_1DE06317C(319, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
            if (v5 <= 0x3F)
            {
              sub_1DE06317C(319, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
              if (v6 <= 0x3F)
              {
                sub_1DE04D7B8();
                if (v7 <= 0x3F)
                {
                  sub_1DE06317C(319, &qword_1EBEC1ED8, (void (*)(void))sub_1DE062CDC, (void (*)(void))sub_1DE062D30);
                  if (v8 <= 0x3F)
                  {
                    sub_1DE06317C(319, &qword_1EABA1BD0, (void (*)(void))sub_1DE062F2C, (void (*)(void))sub_1DE062F80);
                    if (v9 <= 0x3F)
                    {
                      sub_1DE06317C(319, &qword_1EBEC96B8, (void (*)(void))sub_1DE04BB08, (void (*)(void))sub_1DE04BB60);
                      if (v10 <= 0x3F) {
                        swift_initStructMetadata();
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for PuzzleExposureEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (void *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DE47F330();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    unint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)unint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    *((_WORD *)v10 + 8) = *((_WORD *)v11 + 8);
    uint64_t v13 = (char *)a1 + v9;
    uint64_t v14 = (char *)a2 + v9;
    uint64_t v15 = *((void *)v14 + 1);
    *(void *)uint64_t v13 = *(void *)v14;
    *((void *)v13 + 1) = v15;
    uint64_t v16 = *((void *)v14 + 3);
    *((void *)v13 + 2) = *((void *)v14 + 2);
    *((void *)v13 + 3) = v16;
    long long v17 = *((_OWORD *)v14 + 3);
    *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
    *((_OWORD *)v13 + 3) = v17;
    v13[64] = v14[64];
    v13[65] = v14[65];
    *((void *)v13 + 9) = *((void *)v14 + 9);
    uint64_t v18 = a3[7];
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = *(void *)((char *)a2 + v18 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v21 == 1)
    {
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      *((void *)v19 + 2) = *((void *)v20 + 2);
    }
    else
    {
      *uint64_t v19 = *v20;
      *((void *)v19 + 1) = *((void *)v20 + 1);
      *((void *)v19 + 2) = v21;
      swift_bridgeObjectRetain();
    }
    uint64_t v23 = a3[8];
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = *((void *)v25 + 1);
    if (v26)
    {
      *(void *)uint64_t v24 = *(void *)v25;
      *((void *)v24 + 1) = v26;
      *((_WORD *)v24 + 8) = *((_WORD *)v25 + 8);
      uint64_t v27 = *((void *)v25 + 4);
      *((void *)v24 + 3) = *((void *)v25 + 3);
      *((void *)v24 + 4) = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v28 = *((_OWORD *)v25 + 1);
      *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
      *((_OWORD *)v24 + 1) = v28;
      *((void *)v24 + 4) = *((void *)v25 + 4);
    }
    uint64_t v29 = a3[9];
    uint64_t v30 = a3[10];
    uint64_t v31 = (char *)a1 + v29;
    uint64_t v32 = (char *)a2 + v29;
    char *v31 = *v32;
    uint64_t v33 = *((void *)v32 + 2);
    *((void *)v31 + 1) = *((void *)v32 + 1);
    *((void *)v31 + 2) = v33;
    *((_WORD *)v31 + 12) = *((_WORD *)v32 + 12);
    uint64_t v34 = *((void *)v32 + 5);
    *((void *)v31 + 4) = *((void *)v32 + 4);
    *((void *)v31 + 5) = v34;
    v31[48] = v32[48];
    uint64_t v35 = (char *)a1 + v30;
    uint64_t v36 = (char *)a2 + v30;
    uint64_t v37 = *(void *)((char *)a2 + v30 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v37)
    {
      *(_WORD *)uint64_t v35 = *(_WORD *)v36;
      *((void *)v35 + 1) = *((void *)v36 + 1);
      *((void *)v35 + 2) = v37;
      *((void *)v35 + 3) = *((void *)v36 + 3);
      uint64_t v38 = *((void *)v36 + 5);
      *((void *)v35 + 4) = *((void *)v36 + 4);
      *((void *)v35 + 5) = v38;
      uint64_t v39 = *((void *)v36 + 7);
      *((void *)v35 + 6) = *((void *)v36 + 6);
      *((void *)v35 + 7) = v39;
      uint64_t v56 = *((void *)v36 + 9);
      *((void *)v35 + 8) = *((void *)v36 + 8);
      *((void *)v35 + 9) = v56;
      v35[80] = v36[80];
      uint64_t v40 = *((void *)v36 + 12);
      *((void *)v35 + 11) = *((void *)v36 + 11);
      *((void *)v35 + 12) = v40;
      *((void *)v35 + 13) = *((void *)v36 + 13);
      v35[112] = v36[112];
      uint64_t v42 = *((void *)v36 + 15);
      uint64_t v41 = *((void *)v36 + 16);
      *((void *)v35 + 15) = v42;
      *((void *)v35 + 16) = v41;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v43 = *((_OWORD *)v36 + 7);
      *((_OWORD *)v35 + 6) = *((_OWORD *)v36 + 6);
      *((_OWORD *)v35 + 7) = v43;
      *((void *)v35 + 16) = *((void *)v36 + 16);
      long long v44 = *((_OWORD *)v36 + 3);
      *((_OWORD *)v35 + 2) = *((_OWORD *)v36 + 2);
      *((_OWORD *)v35 + 3) = v44;
      long long v45 = *((_OWORD *)v36 + 5);
      *((_OWORD *)v35 + 4) = *((_OWORD *)v36 + 4);
      *((_OWORD *)v35 + 5) = v45;
      long long v46 = *((_OWORD *)v36 + 1);
      *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
      *((_OWORD *)v35 + 1) = v46;
    }
    uint64_t v47 = a3[11];
    uint64_t v48 = (char *)a1 + v47;
    uint64_t v49 = (char *)a2 + v47;
    uint64_t v50 = sub_1DE47F350();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
    uint64_t v51 = a3[12];
    uint64_t v52 = a3[13];
    uint64_t v53 = (char *)a1 + v51;
    char v54 = (char *)a2 + v51;
    *(_DWORD *)uint64_t v53 = *(_DWORD *)v54;
    v53[4] = v54[4];
    *((unsigned char *)a1 + v52) = *((unsigned char *)a2 + v52);
    *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
  }
  return a1;
}

uint64_t destroy for PuzzleExposureEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[7] + 16) != 1) {
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + a2[8] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[10] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = a1 + a2[11];
  uint64_t v6 = sub_1DE47F350();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for PuzzleExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  uint64_t v11 = *(void *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = v11;
  *(_WORD *)(v9 + 16) = *(_WORD *)(v10 + 16);
  uint64_t v12 = a1 + v8;
  uint64_t v13 = a2 + v8;
  uint64_t v14 = *(void *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  *(void *)(v12 + 8) = v14;
  uint64_t v15 = *(void *)(v13 + 24);
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  *(void *)(v12 + 24) = v15;
  long long v16 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(v12 + 48) = v16;
  *(unsigned char *)(v12 + 64) = *(unsigned char *)(v13 + 64);
  *(unsigned char *)(v12 + 65) = *(unsigned char *)(v13 + 65);
  *(void *)(v12 + 72) = *(void *)(v13 + 72);
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = *(void *)(a2 + v17 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20 == 1)
  {
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    *(void *)(v18 + 16) = *(void *)(v19 + 16);
  }
  else
  {
    *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
    *(void *)(v18 + 8) = *(void *)(v19 + 8);
    *(void *)(v18 + 16) = v20;
    swift_bridgeObjectRetain();
  }
  uint64_t v21 = a3[8];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = *(void *)(v23 + 8);
  if (v24)
  {
    *(void *)uint64_t v22 = *(void *)v23;
    *(void *)(v22 + 8) = v24;
    *(_WORD *)(v22 + 16) = *(_WORD *)(v23 + 16);
    uint64_t v25 = *(void *)(v23 + 32);
    *(void *)(v22 + 24) = *(void *)(v23 + 24);
    *(void *)(v22 + 32) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v26 = *(_OWORD *)(v23 + 16);
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    *(_OWORD *)(v22 + 16) = v26;
    *(void *)(v22 + 32) = *(void *)(v23 + 32);
  }
  uint64_t v27 = a3[9];
  uint64_t v28 = a3[10];
  uint64_t v29 = a1 + v27;
  uint64_t v30 = a2 + v27;
  *(unsigned char *)uint64_t v29 = *(unsigned char *)v30;
  uint64_t v31 = *(void *)(v30 + 16);
  *(void *)(v29 + 8) = *(void *)(v30 + 8);
  *(void *)(v29 + 16) = v31;
  *(_WORD *)(v29 + 24) = *(_WORD *)(v30 + 24);
  uint64_t v32 = *(void *)(v30 + 40);
  *(void *)(v29 + 32) = *(void *)(v30 + 32);
  *(void *)(v29 + 40) = v32;
  *(unsigned char *)(v29 + 48) = *(unsigned char *)(v30 + 48);
  uint64_t v33 = a1 + v28;
  uint64_t v34 = a2 + v28;
  uint64_t v35 = *(void *)(a2 + v28 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v35)
  {
    *(_WORD *)uint64_t v33 = *(_WORD *)v34;
    *(void *)(v33 + 8) = *(void *)(v34 + 8);
    *(void *)(v33 + 16) = v35;
    *(void *)(v33 + 24) = *(void *)(v34 + 24);
    uint64_t v36 = *(void *)(v34 + 40);
    *(void *)(v33 + 32) = *(void *)(v34 + 32);
    *(void *)(v33 + 40) = v36;
    uint64_t v37 = *(void *)(v34 + 56);
    *(void *)(v33 + 48) = *(void *)(v34 + 48);
    *(void *)(v33 + 56) = v37;
    uint64_t v54 = *(void *)(v34 + 72);
    *(void *)(v33 + 64) = *(void *)(v34 + 64);
    *(void *)(v33 + 72) = v54;
    *(unsigned char *)(v33 + 80) = *(unsigned char *)(v34 + 80);
    uint64_t v38 = *(void *)(v34 + 96);
    *(void *)(v33 + 88) = *(void *)(v34 + 88);
    *(void *)(v33 + 96) = v38;
    *(void *)(v33 + 104) = *(void *)(v34 + 104);
    *(unsigned char *)(v33 + 112) = *(unsigned char *)(v34 + 112);
    uint64_t v40 = *(void *)(v34 + 120);
    uint64_t v39 = *(void *)(v34 + 128);
    *(void *)(v33 + 120) = v40;
    *(void *)(v33 + 128) = v39;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v41 = *(_OWORD *)(v34 + 112);
    *(_OWORD *)(v33 + 96) = *(_OWORD *)(v34 + 96);
    *(_OWORD *)(v33 + 112) = v41;
    *(void *)(v33 + 128) = *(void *)(v34 + 128);
    long long v42 = *(_OWORD *)(v34 + 48);
    *(_OWORD *)(v33 + 32) = *(_OWORD *)(v34 + 32);
    *(_OWORD *)(v33 + 48) = v42;
    long long v43 = *(_OWORD *)(v34 + 80);
    *(_OWORD *)(v33 + 64) = *(_OWORD *)(v34 + 64);
    *(_OWORD *)(v33 + 80) = v43;
    long long v44 = *(_OWORD *)(v34 + 16);
    *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
    *(_OWORD *)(v33 + 16) = v44;
  }
  uint64_t v45 = a3[11];
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  uint64_t v48 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
  uint64_t v49 = a3[12];
  uint64_t v50 = a3[13];
  uint64_t v51 = a1 + v49;
  uint64_t v52 = a2 + v49;
  *(_DWORD *)uint64_t v51 = *(_DWORD *)v52;
  *(unsigned char *)(v51 + 4) = *(unsigned char *)(v52 + 4);
  *(unsigned char *)(a1 + v50) = *(unsigned char *)(a2 + v50);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  return a1;
}

uint64_t assignWithCopy for PuzzleExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  *(unsigned char *)(v8 + 17) = *(unsigned char *)(v9 + 17);
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)uint64_t v11 = *(void *)(a2 + v10);
  *(void *)(v11 + 8) = *(void *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v11 + 16) = *(void *)(v12 + 16);
  *(void *)(v11 + 24) = *(void *)(v12 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v11 + 32) = *(_DWORD *)(v12 + 32);
  uint64_t v13 = *(void *)(v12 + 40);
  *(unsigned char *)(v11 + 48) = *(unsigned char *)(v12 + 48);
  *(void *)(v11 + 40) = v13;
  uint64_t v14 = *(void *)(v12 + 56);
  *(unsigned char *)(v11 + 64) = *(unsigned char *)(v12 + 64);
  *(void *)(v11 + 56) = v14;
  *(unsigned char *)(v11 + 65) = *(unsigned char *)(v12 + 65);
  *(void *)(v11 + 72) = *(void *)(v12 + 72);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = (long long *)(a2 + v15);
  uint64_t v18 = *(void *)(a1 + v15 + 16);
  uint64_t v19 = *(void *)(a2 + v15 + 16);
  if (v18 == 1)
  {
    if (v19 == 1)
    {
      long long v20 = *v17;
      *(void *)(v16 + 16) = *((void *)v17 + 2);
      *(_OWORD *)uint64_t v16 = v20;
    }
    else
    {
      *(unsigned char *)uint64_t v16 = *(unsigned char *)v17;
      *(void *)(v16 + 8) = *((void *)v17 + 1);
      *(void *)(v16 + 16) = *((void *)v17 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v19 == 1)
  {
    sub_1DE05D370(v16);
    uint64_t v21 = *((void *)v17 + 2);
    *(_OWORD *)uint64_t v16 = *v17;
    *(void *)(v16 + 16) = v21;
  }
  else
  {
    *(unsigned char *)uint64_t v16 = *(unsigned char *)v17;
    *(void *)(v16 + 8) = *((void *)v17 + 1);
    *(void *)(v16 + 16) = *((void *)v17 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v22 = a3[8];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = (long long *)(a2 + v22);
  uint64_t v25 = *(void *)(a1 + v22 + 8);
  uint64_t v26 = *(void *)(a2 + v22 + 8);
  if (v25)
  {
    if (v26)
    {
      *(void *)uint64_t v23 = *(void *)v24;
      *(void *)(v23 + 8) = *((void *)v24 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v23 + 16) = *((unsigned char *)v24 + 16);
      *(unsigned char *)(v23 + 17) = *((unsigned char *)v24 + 17);
      *(void *)(v23 + 24) = *((void *)v24 + 3);
      *(void *)(v23 + 32) = *((void *)v24 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DE06992C(v23);
      uint64_t v27 = *((void *)v24 + 4);
      long long v28 = v24[1];
      *(_OWORD *)uint64_t v23 = *v24;
      *(_OWORD *)(v23 + 16) = v28;
      *(void *)(v23 + 32) = v27;
    }
  }
  else if (v26)
  {
    *(void *)uint64_t v23 = *(void *)v24;
    *(void *)(v23 + 8) = *((void *)v24 + 1);
    *(unsigned char *)(v23 + 16) = *((unsigned char *)v24 + 16);
    *(unsigned char *)(v23 + 17) = *((unsigned char *)v24 + 17);
    *(void *)(v23 + 24) = *((void *)v24 + 3);
    *(void *)(v23 + 32) = *((void *)v24 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v29 = *v24;
    long long v30 = v24[1];
    *(void *)(v23 + 32) = *((void *)v24 + 4);
    *(_OWORD *)uint64_t v23 = v29;
    *(_OWORD *)(v23 + 16) = v30;
  }
  uint64_t v31 = a3[9];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  *(unsigned char *)uint64_t v32 = *(unsigned char *)(a2 + v31);
  *(void *)(v32 + 8) = *(void *)(a2 + v31 + 8);
  *(void *)(v32 + 16) = *(void *)(a2 + v31 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v32 + 24) = *(unsigned char *)(v33 + 24);
  *(unsigned char *)(v32 + 25) = *(unsigned char *)(v33 + 25);
  *(void *)(v32 + 32) = *(void *)(v33 + 32);
  *(void *)(v32 + 40) = *(void *)(v33 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v32 + 48) = *(unsigned char *)(v33 + 48);
  uint64_t v34 = a3[10];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  uint64_t v37 = *(void *)(a1 + v34 + 16);
  uint64_t v38 = *(void *)(a2 + v34 + 16);
  if (v37)
  {
    if (v38)
    {
      *(unsigned char *)uint64_t v35 = *(unsigned char *)v36;
      *(unsigned char *)(v35 + 1) = *(unsigned char *)(v36 + 1);
      *(void *)(v35 + 8) = *(void *)(v36 + 8);
      *(void *)(v35 + 16) = *(void *)(v36 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v35 + 24) = *(_DWORD *)(v36 + 24);
      *(_DWORD *)(v35 + 28) = *(_DWORD *)(v36 + 28);
      *(void *)(v35 + 32) = *(void *)(v36 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v35 + 40) = *(void *)(v36 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v35 + 48) = *(void *)(v36 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v35 + 56) = *(void *)(v36 + 56);
      *(void *)(v35 + 64) = *(void *)(v36 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v35 + 72) = *(void *)(v36 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v35 + 80) = *(unsigned char *)(v36 + 80);
      *(void *)(v35 + 88) = *(void *)(v36 + 88);
      *(void *)(v35 + 96) = *(void *)(v36 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v39 = *(void *)(v36 + 104);
      *(unsigned char *)(v35 + 112) = *(unsigned char *)(v36 + 112);
      *(void *)(v35 + 104) = v39;
      *(void *)(v35 + 120) = *(void *)(v36 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v35 + 128) = *(void *)(v36 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DE069980(v35);
      *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
      long long v41 = *(_OWORD *)(v36 + 64);
      long long v43 = *(_OWORD *)(v36 + 16);
      long long v42 = *(_OWORD *)(v36 + 32);
      *(_OWORD *)(v35 + 48) = *(_OWORD *)(v36 + 48);
      *(_OWORD *)(v35 + 64) = v41;
      *(_OWORD *)(v35 + 16) = v43;
      *(_OWORD *)(v35 + 32) = v42;
      long long v45 = *(_OWORD *)(v36 + 96);
      long long v44 = *(_OWORD *)(v36 + 112);
      long long v46 = *(_OWORD *)(v36 + 80);
      *(void *)(v35 + 128) = *(void *)(v36 + 128);
      *(_OWORD *)(v35 + 96) = v45;
      *(_OWORD *)(v35 + 112) = v44;
      *(_OWORD *)(v35 + 80) = v46;
    }
  }
  else if (v38)
  {
    *(unsigned char *)uint64_t v35 = *(unsigned char *)v36;
    *(unsigned char *)(v35 + 1) = *(unsigned char *)(v36 + 1);
    *(void *)(v35 + 8) = *(void *)(v36 + 8);
    *(void *)(v35 + 16) = *(void *)(v36 + 16);
    *(_DWORD *)(v35 + 24) = *(_DWORD *)(v36 + 24);
    *(_DWORD *)(v35 + 28) = *(_DWORD *)(v36 + 28);
    *(void *)(v35 + 32) = *(void *)(v36 + 32);
    *(void *)(v35 + 40) = *(void *)(v36 + 40);
    *(void *)(v35 + 48) = *(void *)(v36 + 48);
    *(void *)(v35 + 56) = *(void *)(v36 + 56);
    *(void *)(v35 + 64) = *(void *)(v36 + 64);
    *(void *)(v35 + 72) = *(void *)(v36 + 72);
    *(unsigned char *)(v35 + 80) = *(unsigned char *)(v36 + 80);
    *(void *)(v35 + 88) = *(void *)(v36 + 88);
    *(void *)(v35 + 96) = *(void *)(v36 + 96);
    uint64_t v40 = *(void *)(v36 + 104);
    *(unsigned char *)(v35 + 112) = *(unsigned char *)(v36 + 112);
    *(void *)(v35 + 104) = v40;
    *(void *)(v35 + 120) = *(void *)(v36 + 120);
    *(void *)(v35 + 128) = *(void *)(v36 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
    long long v47 = *(_OWORD *)(v36 + 16);
    long long v48 = *(_OWORD *)(v36 + 32);
    long long v49 = *(_OWORD *)(v36 + 64);
    *(_OWORD *)(v35 + 48) = *(_OWORD *)(v36 + 48);
    *(_OWORD *)(v35 + 64) = v49;
    *(_OWORD *)(v35 + 16) = v47;
    *(_OWORD *)(v35 + 32) = v48;
    long long v50 = *(_OWORD *)(v36 + 80);
    long long v51 = *(_OWORD *)(v36 + 96);
    long long v52 = *(_OWORD *)(v36 + 112);
    *(void *)(v35 + 128) = *(void *)(v36 + 128);
    *(_OWORD *)(v35 + 96) = v51;
    *(_OWORD *)(v35 + 112) = v52;
    *(_OWORD *)(v35 + 80) = v50;
  }
  uint64_t v53 = a3[11];
  uint64_t v54 = a1 + v53;
  uint64_t v55 = a2 + v53;
  uint64_t v56 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 24))(v54, v55, v56);
  uint64_t v57 = a3[12];
  uint64_t v58 = a1 + v57;
  long long v59 = (int *)(a2 + v57);
  int v60 = *v59;
  *(unsigned char *)(v58 + 4) = *((unsigned char *)v59 + 4);
  *(_DWORD *)uint64_t v58 = v60;
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  return a1;
}

uint64_t sub_1DE06992C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DE069980(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for PuzzleExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_WORD *)(v9 + 16) = *(_WORD *)(v10 + 16);
  uint64_t v11 = (_OWORD *)(a1 + v8);
  uint64_t v12 = (_OWORD *)(a2 + v8);
  long long v13 = v12[4];
  long long v14 = v12[2];
  v11[3] = v12[3];
  v11[4] = v13;
  long long v15 = v12[1];
  _OWORD *v11 = *v12;
  v11[1] = v15;
  v11[2] = v14;
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *(void *)(v18 + 16) = *(void *)(v19 + 16);
  uint64_t v20 = a1 + v17;
  uint64_t v21 = a2 + v17;
  long long v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  *(void *)(v20 + 32) = *(void *)(v21 + 32);
  uint64_t v23 = a3[9];
  uint64_t v24 = a3[10];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = a2 + v23;
  long long v27 = *(_OWORD *)(v26 + 16);
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  *(_OWORD *)(v25 + 16) = v27;
  *(_OWORD *)(v25 + 32) = *(_OWORD *)(v26 + 32);
  *(unsigned char *)(v25 + 48) = *(unsigned char *)(v26 + 48);
  uint64_t v28 = a1 + v24;
  long long v29 = (long long *)(a2 + v24);
  *(void *)(v28 + 128) = *((void *)v29 + 16);
  long long v30 = v29[7];
  *(_OWORD *)(v28 + 96) = v29[6];
  *(_OWORD *)(v28 + 112) = v30;
  long long v31 = v29[5];
  *(_OWORD *)(v28 + 64) = v29[4];
  *(_OWORD *)(v28 + 80) = v31;
  long long v32 = v29[3];
  *(_OWORD *)(v28 + 32) = v29[2];
  *(_OWORD *)(v28 + 48) = v32;
  long long v33 = *v29;
  long long v34 = v29[1];
  uint64_t v35 = a3[11];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  *(_OWORD *)uint64_t v28 = v33;
  *(_OWORD *)(v28 + 16) = v34;
  uint64_t v38 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[12];
  uint64_t v40 = a3[13];
  uint64_t v41 = a1 + v39;
  uint64_t v42 = a2 + v39;
  *(_DWORD *)uint64_t v41 = *(_DWORD *)v42;
  *(unsigned char *)(v41 + 4) = *(unsigned char *)(v42 + 4);
  *(unsigned char *)(a1 + v40) = *(unsigned char *)(a2 + v40);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  return a1;
}

uint64_t assignWithTake for PuzzleExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_WORD *)(v8 + 16) = *(_WORD *)(v9 + 16);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)(a2 + v11 + 8);
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(void *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v13 + 24);
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  *(void *)(v12 + 24) = v15;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v12 + 32) = *(_DWORD *)(v13 + 32);
  *(void *)(v12 + 40) = *(void *)(v13 + 40);
  *(unsigned char *)(v12 + 48) = *(unsigned char *)(v13 + 48);
  *(void *)(v12 + 56) = *(void *)(v13 + 56);
  *(unsigned char *)(v12 + 64) = *(unsigned char *)(v13 + 64);
  *(unsigned char *)(v12 + 65) = *(unsigned char *)(v13 + 65);
  *(void *)(v12 + 72) = *(void *)(v13 + 72);
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  if (*(void *)(a1 + v16 + 16) == 1) {
    goto LABEL_4;
  }
  uint64_t v19 = *(void *)(v18 + 16);
  if (v19 == 1)
  {
    sub_1DE05D370(v17);
LABEL_4:
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    *(void *)(v17 + 16) = *(void *)(v18 + 16);
    goto LABEL_6;
  }
  *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  *(void *)(v17 + 16) = v19;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v20 = a3[8];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  if (*(void *)(a1 + v20 + 8))
  {
    uint64_t v23 = *(void *)(v22 + 8);
    if (v23)
    {
      *(void *)uint64_t v21 = *(void *)v22;
      *(void *)(v21 + 8) = v23;
      swift_bridgeObjectRelease();
      *(unsigned char *)(v21 + 16) = *(unsigned char *)(v22 + 16);
      *(unsigned char *)(v21 + 17) = *(unsigned char *)(v22 + 17);
      uint64_t v24 = *(void *)(v22 + 32);
      *(void *)(v21 + 24) = *(void *)(v22 + 24);
      *(void *)(v21 + 32) = v24;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1DE06992C(v21);
  }
  long long v25 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v25;
  *(void *)(v21 + 32) = *(void *)(v22 + 32);
LABEL_11:
  uint64_t v26 = a3[9];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  *(unsigned char *)uint64_t v27 = *(unsigned char *)(a2 + v26);
  uint64_t v29 = *(void *)(a2 + v26 + 16);
  *(void *)(v27 + 8) = *(void *)(a2 + v26 + 8);
  *(void *)(v27 + 16) = v29;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v27 + 24) = *(unsigned char *)(v28 + 24);
  *(unsigned char *)(v27 + 25) = *(unsigned char *)(v28 + 25);
  uint64_t v30 = *(void *)(v28 + 40);
  *(void *)(v27 + 32) = *(void *)(v28 + 32);
  *(void *)(v27 + 40) = v30;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v27 + 48) = *(unsigned char *)(v28 + 48);
  uint64_t v31 = a3[10];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  if (!*(void *)(a1 + v31 + 16))
  {
LABEL_15:
    long long v37 = *(_OWORD *)(v33 + 112);
    *(_OWORD *)(v32 + 96) = *(_OWORD *)(v33 + 96);
    *(_OWORD *)(v32 + 112) = v37;
    *(void *)(v32 + 128) = *(void *)(v33 + 128);
    long long v38 = *(_OWORD *)(v33 + 48);
    *(_OWORD *)(v32 + 32) = *(_OWORD *)(v33 + 32);
    *(_OWORD *)(v32 + 48) = v38;
    long long v39 = *(_OWORD *)(v33 + 80);
    *(_OWORD *)(v32 + 64) = *(_OWORD *)(v33 + 64);
    *(_OWORD *)(v32 + 80) = v39;
    long long v40 = *(_OWORD *)(v33 + 16);
    *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
    *(_OWORD *)(v32 + 16) = v40;
    goto LABEL_16;
  }
  uint64_t v34 = *(void *)(v33 + 16);
  if (!v34)
  {
    sub_1DE069980(v32);
    goto LABEL_15;
  }
  *(_WORD *)uint64_t v32 = *(_WORD *)v33;
  *(void *)(v32 + 8) = *(void *)(v33 + 8);
  *(void *)(v32 + 16) = v34;
  swift_bridgeObjectRelease();
  *(void *)(v32 + 24) = *(void *)(v33 + 24);
  *(void *)(v32 + 32) = *(void *)(v33 + 32);
  swift_bridgeObjectRelease();
  *(void *)(v32 + 40) = *(void *)(v33 + 40);
  swift_bridgeObjectRelease();
  *(void *)(v32 + 48) = *(void *)(v33 + 48);
  swift_bridgeObjectRelease();
  uint64_t v35 = *(void *)(v33 + 64);
  *(void *)(v32 + 56) = *(void *)(v33 + 56);
  *(void *)(v32 + 64) = v35;
  swift_bridgeObjectRelease();
  *(void *)(v32 + 72) = *(void *)(v33 + 72);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v32 + 80) = *(unsigned char *)(v33 + 80);
  uint64_t v36 = *(void *)(v33 + 96);
  *(void *)(v32 + 88) = *(void *)(v33 + 88);
  *(void *)(v32 + 96) = v36;
  swift_bridgeObjectRelease();
  *(void *)(v32 + 104) = *(void *)(v33 + 104);
  *(unsigned char *)(v32 + 112) = *(unsigned char *)(v33 + 112);
  *(void *)(v32 + 120) = *(void *)(v33 + 120);
  swift_bridgeObjectRelease();
  *(void *)(v32 + 128) = *(void *)(v33 + 128);
  swift_bridgeObjectRelease();
LABEL_16:
  uint64_t v41 = a3[11];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = a2 + v41;
  uint64_t v44 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 40))(v42, v43, v44);
  uint64_t v45 = a3[12];
  uint64_t v46 = a3[13];
  uint64_t v47 = a1 + v45;
  uint64_t v48 = a2 + v45;
  *(_DWORD *)uint64_t v47 = *(_DWORD *)v48;
  *(unsigned char *)(v47 + 4) = *(unsigned char *)(v48 + 4);
  *(unsigned char *)(a1 + v46) = *(unsigned char *)(a2 + v46);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE069F1C);
}

uint64_t sub_1DE069F1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DE47F330();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_1DE47F350();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 44);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for PuzzleExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE06A060);
}

uint64_t sub_1DE06A060(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1DE47F330();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_1DE47F350();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 44);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_1DE06A190()
{
  uint64_t result = sub_1DE47F330();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1DE47F350();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PuzzleExposureEvent.Model.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PuzzleExposureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE06A40CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleExposureEvent.Model.CodingKeys()
{
  return &type metadata for PuzzleExposureEvent.Model.CodingKeys;
}

unint64_t sub_1DE06A448()
{
  unint64_t result = qword_1EABA1C20;
  if (!qword_1EABA1C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1C20);
  }
  return result;
}

unint64_t sub_1DE06A4A0()
{
  unint64_t result = qword_1EABA1C28;
  if (!qword_1EABA1C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1C28);
  }
  return result;
}

unint64_t sub_1DE06A4F8()
{
  unint64_t result = qword_1EABA1C30;
  if (!qword_1EABA1C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1C30);
  }
  return result;
}

uint64_t sub_1DE06A54C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6144656C7A7A7570 && a2 == 0xEA00000000006174 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001DE4BDDA0 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DE4BDF10 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DE4BDF30 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x4D656E696C66666FLL && a2 == 0xEF6174614465646FLL)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v6 = sub_1DE480660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

uint64_t static ReferringArticleData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t ReferringArticleData.articleID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ReferringArticleData.articleID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *BOOL v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ReferringArticleData.articleID.modify())()
{
  return nullsub_1;
}

uint64_t ReferringArticleData.publisherArticleVersion.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t ReferringArticleData.publisherArticleVersion.setter(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t (*ReferringArticleData.publisherArticleVersion.modify())()
{
  return nullsub_1;
}

void ReferringArticleData.role.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 24);
}

unsigned char *ReferringArticleData.role.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 24) = *result;
  return result;
}

uint64_t (*ReferringArticleData.role.modify())()
{
  return nullsub_1;
}

uint64_t ReferringArticleData.init(articleID:publisherArticleVersion:role:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  char v5 = *a4;
  *(void *)a5 = result;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(unsigned char *)(a5 + 24) = v5;
  return result;
}

uint64_t sub_1DE06AB10()
{
  unint64_t v1 = 0xD000000000000017;
  if (*v0 != 1) {
    unint64_t v1 = 1701605234;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x49656C6369747261;
  }
}

uint64_t sub_1DE06AB6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE06B604(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE06AB94(uint64_t a1)
{
  unint64_t v2 = sub_1DE06ADE0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE06ABD0(uint64_t a1)
{
  unint64_t v2 = sub_1DE06ADE0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ReferringArticleData.encode(to:)(void *a1)
{
  sub_1DE06B0C8(0, &qword_1EBECB8D8, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  BOOL v7 = (char *)v11 - v6;
  v11[0] = *(void *)(v1 + 16);
  int v12 = *(unsigned __int8 *)(v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE06ADE0();
  sub_1DE480790();
  char v16 = 0;
  uint64_t v8 = v11[1];
  sub_1DE480580();
  if (!v8)
  {
    char v9 = v12;
    char v15 = 1;
    sub_1DE4805E0();
    char v14 = v9;
    char v13 = 2;
    sub_1DE06AE34();
    sub_1DE4805C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DE06ADE0()
{
  unint64_t result = qword_1EBECAD38;
  if (!qword_1EBECAD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBECAD38);
  }
  return result;
}

unint64_t sub_1DE06AE34()
{
  unint64_t result = qword_1EBEC70B8;
  if (!qword_1EBEC70B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC70B8);
  }
  return result;
}

uint64_t ReferringArticleData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1DE06B0C8(0, &qword_1EBECB850, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE06ADE0();
  sub_1DE480770();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v20 = 0;
  uint64_t v10 = sub_1DE4804A0();
  uint64_t v12 = v11;
  char v19 = 1;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1DE480500();
  char v17 = 2;
  sub_1DE06B12C();
  sub_1DE4804E0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  char v14 = v18;
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v12;
  *(void *)(a2 + 16) = v16;
  *(unsigned char *)(a2 + 24) = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1DE06B0C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE06ADE0();
    unint64_t v7 = a3(a1, &type metadata for ReferringArticleData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1DE06B12C()
{
  unint64_t result = qword_1EBEC70C8;
  if (!qword_1EBEC70C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC70C8);
  }
  return result;
}

unint64_t sub_1DE06B184()
{
  unint64_t result = qword_1EBEC5390;
  if (!qword_1EBEC5390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC5390);
  }
  return result;
}

unint64_t sub_1DE06B1DC()
{
  unint64_t result = qword_1EBEC5388;
  if (!qword_1EBEC5388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC5388);
  }
  return result;
}

uint64_t sub_1DE06B230@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ReferringArticleData.init(from:)(a1, a2);
}

uint64_t sub_1DE06B248(void *a1)
{
  return ReferringArticleData.encode(to:)(a1);
}

uint64_t initializeWithCopy for ReferringArticleData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ReferringArticleData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ReferringArticleData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReferringArticleData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReferringArticleData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReferringArticleData()
{
  return &type metadata for ReferringArticleData;
}

unsigned char *storeEnumTagSinglePayload for ReferringArticleData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE06B4C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReferringArticleData.CodingKeys()
{
  return &type metadata for ReferringArticleData.CodingKeys;
}

unint64_t sub_1DE06B500()
{
  unint64_t result = qword_1EABA1C38;
  if (!qword_1EABA1C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1C38);
  }
  return result;
}

unint64_t sub_1DE06B558()
{
  unint64_t result = qword_1EBECAD48;
  if (!qword_1EBECAD48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBECAD48);
  }
  return result;
}

unint64_t sub_1DE06B5B0()
{
  unint64_t result = qword_1EBECAD40;
  if (!qword_1EBECAD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBECAD40);
  }
  return result;
}

uint64_t sub_1DE06B604(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x49656C6369747261 && a2 == 0xE900000000000044;
  if (v2 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001DE4BDF50 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701605234 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1DE480660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t static ProgressInfo.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t ProgressInfo.progressLevel.getter()
{
  return *v0;
}

uint64_t ProgressInfo.progressLevel.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*ProgressInfo.progressLevel.modify())()
{
  return nullsub_1;
}

uint64_t ProgressInfo.lastPlayedDate.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t ProgressInfo.lastPlayedDate.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 8) = result;
  *(unsigned char *)(v2 + 16) = a2 & 1;
  return result;
}

uint64_t (*ProgressInfo.lastPlayedDate.modify())()
{
  return nullsub_1;
}

uint64_t ProgressInfo.completedDate.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t ProgressInfo.completedDate.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 24) = result;
  *(unsigned char *)(v2 + 32) = a2 & 1;
  return result;
}

uint64_t (*ProgressInfo.completedDate.modify())()
{
  return nullsub_1;
}

uint64_t ProgressInfo.init(progressLevel:lastPlayedDate:completedDate:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  *(_DWORD *)a6 = result;
  *(void *)(a6 + 8) = a2;
  *(unsigned char *)(a6 + 16) = a3 & 1;
  *(void *)(a6 + 24) = a4;
  *(unsigned char *)(a6 + 32) = a5 & 1;
  return result;
}

uint64_t sub_1DE06B820()
{
  uint64_t v1 = 0x79616C507473616CLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x6574656C706D6F63;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x73736572676F7270;
  }
}

uint64_t sub_1DE06B8A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE06C120(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE06B8C8(uint64_t a1)
{
  unint64_t v2 = sub_1DE06BB0C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE06B904(uint64_t a1)
{
  unint64_t v2 = sub_1DE06BB0C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ProgressInfo.encode(to:)(void *a1)
{
  sub_1DE06BD5C(0, &qword_1EABA1C40, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v11 - v7;
  uint64_t v9 = *(void *)(v1 + 8);
  int v14 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v12 = *(void *)(v1 + 24);
  uint64_t v13 = v9;
  v11[3] = *(unsigned __int8 *)(v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE06BB0C();
  sub_1DE480790();
  char v17 = 0;
  sub_1DE4805D0();
  if (!v2)
  {
    char v16 = 1;
    sub_1DE480570();
    char v15 = 2;
    sub_1DE480570();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1DE06BB0C()
{
  unint64_t result = qword_1EABA1C48;
  if (!qword_1EABA1C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1C48);
  }
  return result;
}

uint64_t ProgressInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1DE06BD5C(0, &qword_1EABA1C50, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE06BB0C();
  sub_1DE480770();
  if (!v2)
  {
    char v22 = 0;
    int v10 = sub_1DE4804F0();
    char v21 = 1;
    uint64_t v11 = sub_1DE480490();
    int v19 = v12;
    char v20 = 2;
    uint64_t v14 = sub_1DE480490();
    char v15 = v9;
    char v17 = v16;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
    *(_DWORD *)a2 = v10;
    *(void *)(a2 + 8) = v11;
    *(unsigned char *)(a2 + 16) = v19 & 1;
    *(void *)(a2 + 24) = v14;
    *(unsigned char *)(a2 + 32) = v17 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DE06BD5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE06BB0C();
    unint64_t v7 = a3(a1, &type metadata for ProgressInfo.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1DE06BDC4()
{
  unint64_t result = qword_1EABA1C58;
  if (!qword_1EABA1C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1C58);
  }
  return result;
}

unint64_t sub_1DE06BE1C()
{
  unint64_t result = qword_1EABA1C60;
  if (!qword_1EABA1C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1C60);
  }
  return result;
}

uint64_t sub_1DE06BE70@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ProgressInfo.init(from:)(a1, a2);
}

uint64_t sub_1DE06BE88(void *a1)
{
  return ProgressInfo.encode(to:)(a1);
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for ProgressInfo(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ProgressInfo(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 33) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ProgressInfo()
{
  return &type metadata for ProgressInfo;
}

unsigned char *storeEnumTagSinglePayload for ProgressInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE06BFE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProgressInfo.CodingKeys()
{
  return &type metadata for ProgressInfo.CodingKeys;
}

unint64_t sub_1DE06C01C()
{
  unint64_t result = qword_1EABA1C68;
  if (!qword_1EABA1C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1C68);
  }
  return result;
}

unint64_t sub_1DE06C074()
{
  unint64_t result = qword_1EABA1C70;
  if (!qword_1EABA1C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1C70);
  }
  return result;
}

unint64_t sub_1DE06C0CC()
{
  unint64_t result = qword_1EABA1C78;
  if (!qword_1EABA1C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1C78);
  }
  return result;
}

uint64_t sub_1DE06C120(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73736572676F7270 && a2 == 0xED00006C6576654CLL;
  if (v2 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x79616C507473616CLL && a2 == 0xEE00657461446465 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574656C706D6F63 && a2 == 0xED00006574614464)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1DE480660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

NewsAnalytics::ResultAction_optional __swiftcall ResultAction.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_1DE480420();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *BOOL v2 = v5;
  return result;
}

uint64_t ResultAction.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656E6F646E616261;
      break;
    case 2:
      uint64_t result = 0x646564616F6CLL;
      break;
    case 3:
      uint64_t result = 0x676B636142707061;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE06C3DC(unsigned __int8 *a1, char *a2)
{
  return sub_1DE3DAB0C(*a1, *a2);
}

unint64_t sub_1DE06C3EC()
{
  unint64_t result = qword_1EABA1C80;
  if (!qword_1EABA1C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1C80);
  }
  return result;
}

uint64_t sub_1DE06C440()
{
  return sub_1DE480750();
}

uint64_t sub_1DE06C528()
{
  sub_1DE47FF00();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE06C5F8()
{
  return sub_1DE480750();
}

NewsAnalytics::ResultAction_optional sub_1DE06C6DC(Swift::String *a1)
{
  return ResultAction.init(rawValue:)(*a1);
}

void sub_1DE06C6E8(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE900000000000064;
      uint64_t v3 = 0x656E6F646E616261;
      goto LABEL_3;
    case 2:
      *a1 = 0x646564616F6CLL;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0x676B636142707061;
      a1[1] = 0xEF6465646E756F72;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1DE06C790()
{
  return sub_1DE47FFF0();
}

uint64_t sub_1DE06C7F0()
{
  return sub_1DE47FFE0();
}

unsigned char *storeEnumTagSinglePayload for ResultAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE06C90CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResultAction()
{
  return &type metadata for ResultAction;
}

unint64_t sub_1DE06C944()
{
  unint64_t result = qword_1EABA1C88;
  if (!qword_1EABA1C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1C88);
  }
  return result;
}

uint64_t NotificationReceiptReporter.__allocating_init(log:contentType:)(void *a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  NotificationReceiptReporter.init(log:contentType:)(a1, a2);
  return v4;
}

void *NotificationReceiptReporter.init(log:contentType:)(void *a1, uint64_t a2)
{
  int v3 = v2;
  uint64_t v26 = a2;
  uint64_t v5 = sub_1DE47F0E0();
  uint64_t v28 = *(void *)(v5 - 8);
  uint64_t v29 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v27 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DE47EDC0();
  uint64_t v37 = *(void *)(v7 - 8);
  uint64_t v38 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v36 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1DE47EB20();
  uint64_t v31 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v34 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DE47ED70();
  MEMORY[0x1F4188790](v10);
  uint64_t v11 = sub_1DE47F360();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2[5] = (id)NewsCoreUserDefaults();
  v2[3] = a1;
  sub_1DE47F3C0();
  swift_allocObject();
  id v39 = a1;
  v2[4] = sub_1DE47F3B0();
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E4FAA7E8], v11);
  sub_1DE47F370();
  uint64_t v33 = sub_1DE47ED90();
  sub_1DE47EAD0();
  uint64_t v32 = sub_1DE47EAC0();
  sub_1DE47EAC0();
  sub_1DE47EF00();
  swift_allocObject();
  uint64_t v30 = sub_1DE47EEF0();
  uint64_t v40 = MEMORY[0x1E4FBC860];
  sub_1DE071784(&qword_1EBEC2028, MEMORY[0x1E4F4AA38]);
  char v15 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F4AA38];
  char v16 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB320];
  sub_1DE06D0FC(0, &qword_1EBEC73A0, MEMORY[0x1E4F4AA38], MEMORY[0x1E4FBB320]);
  sub_1DE06D160(&qword_1EBEC73A8, &qword_1EBEC73A0, v15);
  sub_1DE4802A0();
  char v17 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F4A9A0];
  sub_1DE06D0FC(0, (unint64_t *)&unk_1EBEC7710, MEMORY[0x1E4F4A9A0], MEMORY[0x1E4FBBE00]);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1DE4833F0;
  sub_1DE47EB10();
  sub_1DE47EAF0();
  sub_1DE47EB00();
  uint64_t v40 = v18;
  sub_1DE071784(&qword_1EBEC1CC0, MEMORY[0x1E4F4A9A0]);
  sub_1DE06D0FC(0, &qword_1EBEC7390, v17, v16);
  sub_1DE06D160(&qword_1EBEC7398, &qword_1EBEC7390, v17);
  sub_1DE4802A0();
  sub_1DE47ECE0();
  swift_allocObject();
  sub_1DE47ECD0();
  (*(void (**)(char *, void, uint64_t))(v37 + 104))(v36, *MEMORY[0x1E4F4AA50], v38);
  sub_1DE47F150();
  swift_allocObject();
  sub_1DE47F140();
  v3[2] = sub_1DE47ED00();
  swift_retain();
  uint64_t v19 = sub_1DE06D1C4();
  if (v19)
  {
    uint64_t v20 = v19;
    sub_1DE47F060();
    sub_1DE47F230();
    id v21 = objc_msgSend(self, sel_mainBundle);
    uint64_t v22 = sub_1DE47F210();
    sub_1DE47F000();
    swift_retain();
    uint64_t v23 = sub_1DE47EFF0();
    MEMORY[0x1E01CD0F0](v22, v20, v26, v23);
    sub_1DE47ECF0();
    swift_retain();
    sub_1DE47EDF0();
    swift_release();
    swift_release();
    sub_1DE47ECF0();
    sub_1DE47EFB0();
    (*(void (**)(char *, void, uint64_t))(v28 + 104))(v27, *MEMORY[0x1E4F4AAE0], v29);
    sub_1DE47EFA0();
    sub_1DE47EDF0();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release();

  return v3;
}

void sub_1DE06D0FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1DE06D160(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DE06D0FC(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DE06D1C4()
{
  sub_1DE06D0FC(0, (unint64_t *)&qword_1EBEC1C70, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  uint64_t v1 = MEMORY[0x1F4188790](v0 - 8);
  id v39 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v32 - v3;
  uint64_t v5 = sub_1DE47E5E0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v37 = (char *)&v32 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v36 = (char *)&v32 - v13;
  MEMORY[0x1F4188790](v12);
  char v15 = (char *)&v32 - v14;
  id v16 = (id)NewsCoreUserDefaults();
  char v17 = (void *)sub_1DE47FE60();
  id v18 = objc_msgSend(v16, sel_stringForKey_, v17);

  if (!v18)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_7;
  }
  uint64_t v38 = v15;
  uint64_t v35 = v9;
  sub_1DE47FE90();

  sub_1DE47E5D0();
  swift_bridgeObjectRelease();
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v19(v4, 1, v5) == 1)
  {
LABEL_7:
    sub_1DE0717CC((uint64_t)v4, (uint64_t)&qword_1EBEC1C70, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1DE06D0FC);
    sub_1DE480140();
    sub_1DE47F7C0();

    return 0;
  }
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t v34 = v6 + 32;
  v33(v38, v4, v5);
  uint64_t v20 = (void *)sub_1DE47FE60();
  id v21 = objc_msgSend(v16, sel_stringForKey_, v20);

  if (!v21)
  {
    uint64_t v22 = (uint64_t)v39;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v39, 1, 1, v5);
    goto LABEL_9;
  }
  sub_1DE47FE90();

  uint64_t v22 = (uint64_t)v39;
  sub_1DE47E5D0();
  swift_bridgeObjectRelease();
  if (v19((char *)v22, 1, v5) == 1)
  {
LABEL_9:
    sub_1DE0717CC(v22, (uint64_t)&qword_1EBEC1C70, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1DE06D0FC);
    sub_1DE480140();
    sub_1DE47F7C0();

    (*(void (**)(char *, uint64_t))(v6 + 8))(v38, v5);
    return 0;
  }
  uint64_t v23 = v36;
  uint64_t v24 = v33;
  v33(v36, (char *)v22, v5);
  FCDefaultsReadEndpointEnvironment();
  uint64_t v25 = FCEndpointEnvironment.name.getter();
  uint64_t v27 = v26;

  uint64_t v28 = v37;
  v24(v37, v38, v5);
  uint64_t v29 = v35;
  v24(v35, v23, v5);
  type metadata accessor for NotificationReceiptReporterEndpoint();
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = v25;
  *(void *)(v30 + 24) = v27;
  v24((char *)(v30+ OBJC_IVAR____TtC13NewsAnalyticsP33_73410A717757B42F2A6F1BC37191285735NotificationReceiptReporterEndpoint_defaultURL), v28, v5);
  v24((char *)(v30+ OBJC_IVAR____TtC13NewsAnalyticsP33_73410A717757B42F2A6F1BC37191285735NotificationReceiptReporterEndpoint_notificationReceiptURL), v29, v5);
  return v30;
}

Swift::Void __swiftcall NotificationReceiptReporter.startSession()()
{
  uint64_t v34 = sub_1DE47E6C0();
  uint64_t v33 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v32 = (char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1DE47E6F0();
  uint64_t v28 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v27 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1DE47F250();
  uint64_t v25 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for SessionData;
  uint64_t v29 = MEMORY[0x1E4FBB718];
  sub_1DE06D0FC(0, (unint64_t *)&qword_1EABA1C90, (uint64_t (*)(uint64_t))type metadata accessor for SessionData, MEMORY[0x1E4FBB718]);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v9 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v23 - v10;
  sub_1DE480140();
  sub_1DE47F7C0();
  uint64_t v24 = v11;
  sub_1DE06DCB0(v0, (uint64_t)v11);
  sub_1DE06DFD8(v0, (uint64_t)&v36);
  sub_1DE06E63C((uint64_t)&v36, (uint64_t)v39, &qword_1EABA1C98, (uint64_t)&type metadata for UserData);
  sub_1DE06E204(v0, (uint64_t)&v36);
  long long v23 = v36;
  uint64_t v12 = v37;
  uint64_t v13 = v38;
  sub_1DE06E414(v0, (uint64_t)v35);
  sub_1DE06E63C((uint64_t)v35, (uint64_t)&v36, &qword_1EABA1CA0, (uint64_t)&type metadata for DeviceData);
  sub_1DE06F204((uint64_t)v11, (uint64_t)v9);
  unint64_t v14 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v15 = (v7 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v15 + 71) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_allocObject();
  sub_1DE06F4AC((uint64_t)v9, v17 + v14);
  sub_1DE06E63C((uint64_t)v39, v17 + v15, &qword_1EABA1C98, (uint64_t)&type metadata for UserData);
  unint64_t v18 = v17 + v16;
  *(_OWORD *)unint64_t v18 = v23;
  *(void *)(v18 + 16) = v12;
  *(void *)(v18 + 24) = v13;
  sub_1DE06E63C((uint64_t)&v36, v17 + ((v16 + 39) & 0xFFFFFFFFFFFFFFF8), &qword_1EABA1CA0, (uint64_t)&type metadata for DeviceData);
  sub_1DE47ED10();
  swift_release();
  strcpy(v4, "notification");
  v4[13] = 0;
  *((_WORD *)v4 + 7) = -5120;
  uint64_t v19 = v25;
  uint64_t v20 = v26;
  (*(void (**)(char *, void, uint64_t))(v25 + 104))(v4, *MEMORY[0x1E4F4AB40], v26);
  id v21 = v27;
  sub_1DE47E6E0();
  sub_1DE47E6D0();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v21, v31);
  uint64_t v22 = v32;
  sub_1DE47E6B0();
  sub_1DE47ED40();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v22, v34);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v20);
  sub_1DE0717CC((uint64_t)v24, (uint64_t)&qword_1EABA1C90, (uint64_t)v30, v29, (uint64_t (*)(void))sub_1DE06D0FC);
}

uint64_t sub_1DE06DCB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SessionData();
  uint64_t v16 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void **)(a1 + 40);
  uint64_t v8 = (void *)sub_1DE47FE60();
  id v9 = objc_msgSend(v7, sel_dataForKey_, v8);

  if (v9)
  {
    uint64_t v10 = sub_1DE47E620();
    unint64_t v12 = v11;

    sub_1DE071784(&qword_1EBEC24C0, (void (*)(uint64_t))type metadata accessor for SessionData);
    sub_1DE47F3A0();
    sub_1DE07110C(v10, v12);
    sub_1DE0715B8((uint64_t)v6, a2);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(a2, 0, 1, v4);
  }
  else
  {
    sub_1DE480120();
    sub_1DE47F7C0();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
    return v13(a2, 1, 1, v4);
  }
}

__n128 sub_1DE06DFD8@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void **)(a1 + 40);
  uint64_t v4 = (void *)sub_1DE47FE60();
  id v5 = objc_msgSend(v3, sel_dataForKey_, v4);

  if (v5)
  {
    uint64_t v6 = sub_1DE47E620();
    unint64_t v8 = v7;

    sub_1DE052BC8();
    sub_1DE47F3A0();
    sub_1DE07110C(v6, v8);
    __n128 result = v13;
    *(void *)a2 = v10;
    *(void *)(a2 + 8) = v11;
    *(void *)(a2 + 16) = v12;
    *(__n128 *)(a2 + 24) = v13;
    *(_OWORD *)(a2 + 40) = v14;
    *(void *)(a2 + 56) = v15;
  }
  else
  {
    sub_1DE480120();
    sub_1DE47F7C0();
    result.n128_u64[0] = 0;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

double sub_1DE06E204@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void **)(a1 + 40);
  uint64_t v4 = (void *)sub_1DE47FE60();
  id v5 = objc_msgSend(v3, sel_dataForKey_, v4);

  if (v5)
  {
    uint64_t v6 = sub_1DE47E620();
    unint64_t v8 = v7;

    sub_1DE071730();
    sub_1DE47F3A0();
    sub_1DE07110C(v6, v8);
    double result = *(double *)&v10;
    *(_OWORD *)a2 = v10;
    *(void *)(a2 + 16) = v11;
    *(void *)(a2 + 24) = v12;
  }
  else
  {
    sub_1DE480120();
    sub_1DE47F7C0();
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

__n128 sub_1DE06E414@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void **)(a1 + 40);
  uint64_t v4 = (void *)sub_1DE47FE60();
  id v5 = objc_msgSend(v3, sel_dataForKey_, v4);

  if (v5)
  {
    uint64_t v6 = sub_1DE47E620();
    unint64_t v8 = v7;

    sub_1DE0716DC();
    sub_1DE47F3A0();
    sub_1DE07110C(v6, v8);
    __n128 result = v13;
    *(void *)a2 = v10;
    *(void *)(a2 + 8) = v11;
    *(void *)(a2 + 16) = v12;
    *(__n128 *)(a2 + 24) = v13;
    *(void *)(a2 + 40) = v14;
    *(void *)(a2 + 48) = v15;
  }
  else
  {
    sub_1DE480120();
    sub_1DE47F7C0();
    *(void *)(a2 + 48) = 0;
    result.n128_u64[0] = 0;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
  return result;
}

uint64_t sub_1DE06E63C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1DE0710C0(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1DE06E6BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)&long long v58 = a6;
  *((void *)&v58 + 1) = a7;
  uint64_t v69 = a5;
  uint64_t v57 = a4;
  uint64_t v70 = a8;
  sub_1DE06E63C(a8, (uint64_t)v80, &qword_1EABA1CA0, (uint64_t)&type metadata for DeviceData);
  uint64_t v62 = v81;
  uint64_t v63 = v82;
  uint64_t v64 = v83;
  uint64_t v68 = a3;
  sub_1DE06E63C(a3, (uint64_t)v79, &qword_1EABA1C98, (uint64_t)&type metadata for UserData);
  uint64_t v52 = v79[1];
  uint64_t v54 = v79[7];
  sub_1DE071470(0, (unint64_t *)&qword_1EBEC1D18, (void (*)(void))sub_1DE07141C);
  uint64_t v66 = *(void *)(v10 - 8);
  uint64_t v67 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v65 = (char *)v49 - v11;
  sub_1DE071470(0, (unint64_t *)&qword_1EBEC1D38, (void (*)(void))sub_1DE04C8A4);
  uint64_t v60 = *(void *)(v12 - 8);
  uint64_t v61 = v12;
  MEMORY[0x1F4188790](v12);
  long long v59 = (char *)v49 - v13;
  sub_1DE071470(0, (unint64_t *)&qword_1EBEC1D10, (void (*)(void))sub_1DE0714D0);
  uint64_t v53 = v14;
  uint64_t v56 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v55 = (char *)v49 - v15;
  sub_1DE071524();
  uint64_t v50 = *(void *)(v16 - 8);
  uint64_t v51 = v16;
  MEMORY[0x1F4188790](v16);
  unint64_t v18 = (char *)v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE06D0FC(0, (unint64_t *)&qword_1EABA1C90, (uint64_t (*)(uint64_t))type metadata accessor for SessionData, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v19 - 8);
  id v21 = (char *)v49 - v20;
  uint64_t v22 = type metadata accessor for SessionData();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v26 = (char *)v49 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v28 = (char *)v49 - v27;
  sub_1DE06F204(a2, (uint64_t)v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    sub_1DE0717CC((uint64_t)v21, (uint64_t)&qword_1EABA1C90, (uint64_t)type metadata accessor for SessionData, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1DE06D0FC);
  }
  else
  {
    sub_1DE0715B8((uint64_t)v21, (uint64_t)v28);
    sub_1DE07161C((uint64_t)v28, (uint64_t)v26);
    v49[1] = sub_1DE071784((unint64_t *)&qword_1EBEC24B0, (void (*)(uint64_t))type metadata accessor for SessionData);
    sub_1DE47EB30();
    sub_1DE06D0FC(0, (unint64_t *)&qword_1EBEC7720, MEMORY[0x1E4F4AA20], MEMORY[0x1E4FBBE00]);
    uint64_t v29 = sub_1DE47ECB0();
    uint64_t v30 = *(void *)(v29 - 8);
    unint64_t v31 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_1DE481D50;
    (*(void (**)(unint64_t, void, uint64_t))(v30 + 104))(v32 + v31, *MEMORY[0x1E4F4AA10], v29);
    sub_1DE47EF20();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v18, v51);
    sub_1DE071680((uint64_t)v28);
  }
  sub_1DE06E63C(v68, (uint64_t)v84, &qword_1EABA1C98, (uint64_t)&type metadata for UserData);
  if (*((void *)&v84[0] + 1))
  {
    long long v71 = v84[0];
    long long v72 = v84[1];
    long long v73 = v84[2];
    long long v74 = v84[3];
    sub_1DE0714D0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v33 = v55;
    sub_1DE47EB30();
    sub_1DE06D0FC(0, (unint64_t *)&qword_1EBEC7720, MEMORY[0x1E4F4AA20], MEMORY[0x1E4FBBE00]);
    uint64_t v34 = sub_1DE47ECB0();
    uint64_t v35 = *(void *)(v34 - 8);
    unint64_t v36 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_1DE481D50;
    (*(void (**)(unint64_t, void, uint64_t))(v35 + 104))(v37 + v36, *MEMORY[0x1E4F4AA10], v34);
    sub_1DE47EF20();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v33, v53);
  }
  if (v69)
  {
    *(void *)&long long v71 = v57;
    *((void *)&v71 + 1) = v69;
    long long v72 = v58;
    sub_1DE04C8A4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v38 = v59;
    sub_1DE47EB30();
    sub_1DE06D0FC(0, (unint64_t *)&qword_1EBEC7720, MEMORY[0x1E4F4AA20], MEMORY[0x1E4FBBE00]);
    uint64_t v39 = sub_1DE47ECB0();
    uint64_t v40 = *(void *)(v39 - 8);
    unint64_t v41 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_1DE481D50;
    (*(void (**)(unint64_t, void, uint64_t))(v40 + 104))(v42 + v41, *MEMORY[0x1E4F4AA10], v39);
    sub_1DE47EF20();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v38, v61);
  }
  uint64_t result = sub_1DE06E63C(v70, (uint64_t)&v71, &qword_1EABA1CA0, (uint64_t)&type metadata for DeviceData);
  if (*((void *)&v71 + 1))
  {
    long long v75 = v71;
    long long v76 = v72;
    long long v77 = v73;
    uint64_t v78 = v74;
    sub_1DE07141C();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v44 = v65;
    sub_1DE47EB30();
    sub_1DE06D0FC(0, (unint64_t *)&qword_1EBEC7720, MEMORY[0x1E4F4AA20], MEMORY[0x1E4FBBE00]);
    uint64_t v45 = sub_1DE47ECB0();
    uint64_t v46 = *(void *)(v45 - 8);
    unint64_t v47 = (*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_1DE481D50;
    (*(void (**)(unint64_t, void, uint64_t))(v46 + 104))(v48 + v47, *MEMORY[0x1E4F4AA10], v45);
    sub_1DE47EF20();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v44, v67);
  }
  return result;
}

uint64_t sub_1DE06F204(uint64_t a1, uint64_t a2)
{
  sub_1DE06D0FC(0, (unint64_t *)&qword_1EABA1C90, (uint64_t (*)(uint64_t))type metadata accessor for SessionData, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DE06F298()
{
  sub_1DE06D0FC(0, (unint64_t *)&qword_1EABA1C90, (uint64_t (*)(uint64_t))type metadata accessor for SessionData, MEMORY[0x1E4FBB718]);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  unint64_t v4 = (*(void *)(*(void *)(v1 - 8) + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 71) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for SessionData();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = v6 + *(int *)(v7 + 64);
    sub_1DE0710C0(0, (unint64_t *)&qword_1EABA1CA8, MEMORY[0x1E4FBB390], MEMORY[0x1E4F4AAD0]);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  if (*(void *)(v0 + v4 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unint64_t v10 = (v5 + 39) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v0 + v5 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + v10 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return MEMORY[0x1F4186498](v0, v10 + 56, v2 | 7);
}

uint64_t sub_1DE06F4AC(uint64_t a1, uint64_t a2)
{
  sub_1DE06D0FC(0, (unint64_t *)&qword_1EABA1C90, (uint64_t (*)(uint64_t))type metadata accessor for SessionData, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DE06F540(uint64_t a1)
{
  sub_1DE06D0FC(0, (unint64_t *)&qword_1EABA1C90, (uint64_t (*)(uint64_t))type metadata accessor for SessionData, MEMORY[0x1E4FBB718]);
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 71) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v1 + v7);
  uint64_t v9 = *(void *)(v1 + v7 + 8);
  uint64_t v10 = *(void *)(v1 + v7 + 16);
  uint64_t v11 = *(void *)(v1 + v7 + 24);

  return sub_1DE06E6BC(a1, v1 + v5, v1 + v6, v8, v9, v10, v11, v1 + ((v7 + 39) & 0xFFFFFFFFFFFFFFF8));
}

Swift::Void __swiftcall NotificationReceiptReporter.report(status:notificationData:)(NewsAnalytics::NotificationStatus status, NewsAnalytics::NotificationData *notificationData)
{
  char v3 = *(unsigned char *)status;
  long long v4 = *(_OWORD *)&notificationData->sourceChannelID.value._object;
  long long v16 = *(_OWORD *)&notificationData->senderChannelID.value._object;
  long long v17 = v4;
  Swift::String_optional algoId = notificationData->algoId;
  long long v18 = *(_OWORD *)&notificationData->notificationArticleID.value._object;
  Swift::String_optional v19 = algoId;
  long long v6 = *(_OWORD *)&notificationData->viewFromNotification;
  Swift::String_optional notificationID = notificationData->notificationID;
  long long v15 = v6;
  sub_1DE06F7A0(v2, &notificationID, (uint64_t)v13);
  sub_1DE06E63C((uint64_t)v13, (uint64_t)v20, &qword_1EABA1CB0, (uint64_t)&type metadata for ChannelData);
  sub_1DE06FB48(v2, &notificationID, v13);
  int v7 = v13[0];
  sub_1DE47ED80();
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  uint64_t v9 = swift_allocObject();
  long long v10 = v17;
  *(_OWORD *)(v9 + 56) = v16;
  *(_OWORD *)(v9 + 72) = v10;
  Swift::String_optional v11 = v19;
  *(_OWORD *)(v9 + 88) = v18;
  *(Swift::String_optional *)(v9 + 104) = v11;
  long long v12 = v15;
  *(Swift::String_optional *)(v9 + 24) = notificationID;
  *(void *)(v9 + 16) = v8;
  *(unsigned char *)(v9 + 120) = v3;
  *(_OWORD *)(v9 + 40) = v12;
  sub_1DE06E63C((uint64_t)v20, v9 + 128, &qword_1EABA1CB0, (uint64_t)&type metadata for ChannelData);
  *(_DWORD *)(v9 + 168) = v7;
  swift_retain();
  sub_1DE0702C4((uint64_t)&notificationID);
  sub_1DE47F280();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1DE06F7A0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v5 = *(void **)(a1 + 40);
  long long v6 = (void *)sub_1DE47FE60();
  id v7 = objc_msgSend(v5, sel_dictionaryForKey_, v6);

  if (!v7)
  {
    sub_1DE480120();
LABEL_16:
    uint64_t result = sub_1DE47F7C0();
    *(void *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    return result;
  }
  uint64_t v8 = MEMORY[0x1E4FBC840];
  uint64_t v9 = sub_1DE47FDD0();

  uint64_t v10 = a2[4];
  if (v10)
  {
    uint64_t v11 = a2[3];
    uint64_t v12 = v10;
    if (*(void *)(v9 + 16)) {
      goto LABEL_4;
    }
LABEL_11:
    long long v23 = 0u;
    long long v24 = 0u;
    swift_bridgeObjectRetain();
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v12 = a2[6];
  if (!v12)
  {
    swift_bridgeObjectRelease();
    sub_1DE480120();
    goto LABEL_16;
  }
  uint64_t v11 = a2[5];
  swift_bridgeObjectRetain();
  if (!*(void *)(v9 + 16)) {
    goto LABEL_11;
  }
LABEL_4:
  swift_bridgeObjectRetain();
  unint64_t v13 = sub_1DE279AE0(v11, v12);
  if ((v14 & 1) == 0)
  {
    long long v23 = 0u;
    long long v24 = 0u;
    goto LABEL_13;
  }
  sub_1DE0713C0(*(void *)(v9 + 56) + 32 * v13, (uint64_t)&v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v24 + 1))
  {
LABEL_14:
    sub_1DE0717CC((uint64_t)&v23, (uint64_t)&qword_1EBEC7780, v8 + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1DE0710C0);
    goto LABEL_15;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_15:
    sub_1DE480120();
    goto LABEL_16;
  }
  uint64_t v15 = v26;
  unint64_t v16 = v27;
  sub_1DE055290();
  sub_1DE47F3A0();
  uint64_t result = sub_1DE07110C(v15, v16);
  uint64_t v18 = *((void *)&v23 + 1);
  uint64_t v19 = *((void *)&v24 + 1);
  uint64_t v20 = v25;
  uint64_t v21 = 256;
  if (!BYTE1(v24)) {
    uint64_t v21 = 0;
  }
  uint64_t v22 = v21 | v24;
  *(void *)a3 = v23;
  *(void *)(a3 + 8) = v18;
  *(void *)(a3 + 16) = v22;
  *(void *)(a3 + 24) = v19;
  *(void *)(a3 + 32) = v20;
  return result;
}

uint64_t sub_1DE06FB48@<X0>(uint64_t a1@<X0>, void *a2@<X1>, int *a3@<X8>)
{
  unint64_t v5 = *(void **)(a1 + 40);
  long long v6 = (void *)sub_1DE47FE60();
  id v7 = objc_msgSend(v5, sel_dictionaryForKey_, v6);

  if (!v7)
  {
    sub_1DE480120();
    int v15 = 2;
LABEL_16:
    uint64_t result = sub_1DE47F7C0();
    goto LABEL_17;
  }
  uint64_t v8 = MEMORY[0x1E4FBC840];
  uint64_t v9 = sub_1DE47FDD0();

  uint64_t v10 = a2[4];
  if (v10)
  {
    uint64_t v11 = a2[3];
    uint64_t v12 = v10;
    if (*(void *)(v9 + 16)) {
      goto LABEL_4;
    }
LABEL_11:
    long long v20 = 0u;
    long long v21 = 0u;
    swift_bridgeObjectRetain();
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v12 = a2[6];
  if (!v12)
  {
    swift_bridgeObjectRelease();
    sub_1DE480120();
    int v15 = 2;
    goto LABEL_16;
  }
  uint64_t v11 = a2[5];
  swift_bridgeObjectRetain();
  if (!*(void *)(v9 + 16)) {
    goto LABEL_11;
  }
LABEL_4:
  swift_bridgeObjectRetain();
  unint64_t v13 = sub_1DE279AE0(v11, v12);
  if ((v14 & 1) == 0)
  {
    long long v20 = 0u;
    long long v21 = 0u;
    goto LABEL_13;
  }
  sub_1DE0713C0(*(void *)(v9 + 56) + 32 * v13, (uint64_t)&v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v21 + 1))
  {
LABEL_14:
    sub_1DE0717CC((uint64_t)&v20, (uint64_t)&qword_1EBEC7780, v8 + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1DE0710C0);
    goto LABEL_15;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_15:
    sub_1DE480120();
    int v15 = 2;
    goto LABEL_16;
  }
  sub_1DE054558();
  sub_1DE47F3A0();
  uint64_t result = sub_1DE07110C(v18, v19);
  if (BYTE1(v20)) {
    int v17 = 256;
  }
  else {
    int v17 = 0;
  }
  int v15 = v17 | v20 | (BYTE2(v20) << 16) | (BYTE3(v20) << 24);
LABEL_17:
  *a3 = v15;
  return result;
}

uint64_t sub_1DE06FEF4()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DE06FF2C(uint64_t a1, uint64_t a2, long long *a3, char a4, uint64_t a5, int a6)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    long long v11 = a3[3];
    long long v20 = a3[2];
    long long v21 = v11;
    long long v12 = a3[5];
    long long v22 = a3[4];
    long long v23 = v12;
    long long v13 = a3[1];
    long long v18 = *a3;
    long long v19 = v13;
    sub_1DE071164();
    sub_1DE47EC20();
    LOBYTE(v18) = a4;
    sub_1DE0711B8();
    sub_1DE47EC20();
    sub_1DE070330((uint64_t)&v18);
    LOBYTE(v14) = v18;
    *((void *)&v14 + 1) = *((void *)&v18 + 1);
    *(void *)&long long v15 = v19;
    WORD4(v15) = WORD4(v19);
    long long v16 = v20;
    char v17 = v21;
    sub_1DE07106C();
    sub_1DE47EC20();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DE06E63C(a5, (uint64_t)&v18, &qword_1EABA1CB0, (uint64_t)&type metadata for ChannelData);
    if (*((void *)&v18 + 1))
    {
      long long v14 = v18;
      long long v15 = v19;
      *(void *)&long long v16 = v20;
      sub_1DE071260();
      sub_1DE47EC20();
    }
    if (a6 != 2)
    {
      LOWORD(v14) = a6 & 0x101;
      BYTE2(v14) = BYTE2(a6);
      BYTE3(v14) = HIBYTE(a6);
      sub_1DE07120C();
      sub_1DE47EC20();
    }
    type metadata accessor for NotificationReceivedEvent(0);
    sub_1DE071784(&qword_1EABA1CD0, (void (*)(uint64_t))type metadata accessor for NotificationReceivedEvent);
    long long v14 = 0u;
    long long v15 = 0u;
    sub_1DE47EC40();
    swift_release();
    return sub_1DE0717CC((uint64_t)&v14, (uint64_t)&qword_1EBEC7780, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1DE0710C0);
  }
  return result;
}

uint64_t sub_1DE070238()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 136))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return MEMORY[0x1F4186498](v0, 172, 7);
}

uint64_t sub_1DE0702AC(uint64_t a1)
{
  return sub_1DE06FF2C(a1, *(void *)(v1 + 16), (long long *)(v1 + 24), *(unsigned char *)(v1 + 120), v1 + 128, *(_DWORD *)(v1 + 168));
}

uint64_t sub_1DE0702C4(uint64_t a1)
{
  return a1;
}

__n128 sub_1DE070330@<Q0>(uint64_t a1@<X8>)
{
  id v2 = (id)NewsCoreUserDefaults();
  char v3 = (void *)sub_1DE47FE60();
  id v4 = objc_msgSend(v2, sel_valueForKey_, v3);

  if (v4)
  {
    sub_1DE480290();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v20, 0, sizeof(v20));
  }
  uint64_t v5 = MEMORY[0x1E4FBC840] + 8;
  sub_1DE06E63C((uint64_t)v20, (uint64_t)v13, (unint64_t *)&qword_1EBEC7780, MEMORY[0x1E4FBC840] + 8);
  if (v15)
  {
    if (swift_dynamicCast())
    {
      uint64_t v6 = v18;
      unint64_t v7 = v19;
      sub_1DE47E3A0();
      swift_allocObject();
      sub_1DE47E390();
      sub_1DE04DD08();
      sub_1DE47E380();

      sub_1DE07110C(v6, v7);
      swift_release();
      char v8 = v15;
      char v9 = BYTE1(v15);
      char v10 = v17;
      __n128 result = v14;
      long long v12 = v16;
      *(unsigned char *)a1 = v13[0];
      *(__n128 *)(a1 + 8) = result;
      *(unsigned char *)(a1 + 24) = v8;
      *(unsigned char *)(a1 + 25) = v9;
      *(_OWORD *)(a1 + 32) = v12;
      *(unsigned char *)(a1 + 48) = v10;
      return result;
    }
  }
  else
  {
    sub_1DE0717CC((uint64_t)v13, (uint64_t)&qword_1EBEC7780, v5, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1DE0710C0);
  }

  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(_WORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 48) = 0;
  return result;
}

Swift::Void __swiftcall NotificationReceiptReporter.reportBadge(origin:)(NewsAnalytics::BadgeOriginationData origin)
{
  char v1 = *(unsigned char *)origin.badgeOriginationType;
  sub_1DE47ED80();
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(unsigned char *)(v3 + 24) = v1;
  swift_retain();
  sub_1DE47F280();
  swift_release();
  swift_release();

  swift_release();
}

uint64_t sub_1DE070604(uint64_t a1, uint64_t a2, char a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    LOBYTE(v5[0]) = a3;
    sub_1DE071018();
    sub_1DE47EC20();
    sub_1DE070330((uint64_t)v5);
    sub_1DE07106C();
    sub_1DE47EC20();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for AppBadgeEvent(0);
    sub_1DE071784(&qword_1EABA1CC0, (void (*)(uint64_t))type metadata accessor for AppBadgeEvent);
    memset(v5, 0, sizeof(v5));
    sub_1DE47EC40();
    swift_release();
    return sub_1DE0717CC((uint64_t)v5, (uint64_t)&qword_1EBEC7780, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1DE0710C0);
  }
  return result;
}

uint64_t sub_1DE0707F0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 25, 7);
}

uint64_t sub_1DE070828(uint64_t a1)
{
  return sub_1DE070604(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t NotificationReceiptReporter.endSession(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DE47E6C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE480140();
  sub_1DE47F7C0();
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  char v9 = (void *)swift_allocObject();
  v9[2] = v8;
  v9[3] = a1;
  v9[4] = a2;
  swift_retain();
  swift_retain();
  sub_1DE47E6B0();
  sub_1DE47ED20();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return swift_release();
}

uint64_t sub_1DE0709CC(uint64_t a1, void (*a2)(void))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    id v4 = *(id *)(result + 24);
    sub_1DE480140();
    sub_1DE47F7C0();

    a2();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DE070A78()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1DE070AB8()
{
  return sub_1DE0709CC(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

uint64_t NotificationReceiptReporter.deinit()
{
  swift_release();

  swift_release();
  return v0;
}

uint64_t NotificationReceiptReporter.__deallocating_deinit()
{
  swift_release();

  swift_release();

  return MEMORY[0x1F4186488](v0, 48, 7);
}

uint64_t type metadata accessor for NotificationReceiptReporter()
{
  return self;
}

uint64_t method lookup function for NotificationReceiptReporter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NotificationReceiptReporter);
}

uint64_t dispatch thunk of NotificationReceiptReporter.__allocating_init(log:contentType:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1DE070E50()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0
     + OBJC_IVAR____TtC13NewsAnalyticsP33_73410A717757B42F2A6F1BC37191285735NotificationReceiptReporterEndpoint_defaultURL;
  uint64_t v2 = sub_1DE47E5E0();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0+ OBJC_IVAR____TtC13NewsAnalyticsP33_73410A717757B42F2A6F1BC37191285735NotificationReceiptReporterEndpoint_notificationReceiptURL, v2);
  uint64_t v4 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v5 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x1F4186488](v0, v4, v5);
}

uint64_t sub_1DE070F28()
{
  return type metadata accessor for NotificationReceiptReporterEndpoint();
}

uint64_t type metadata accessor for NotificationReceiptReporterEndpoint()
{
  uint64_t result = qword_1EBECB690;
  if (!qword_1EBECB690) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DE070F7C()
{
  uint64_t result = sub_1DE47E5E0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_1DE071018()
{
  unint64_t result = qword_1EABA1CB8;
  if (!qword_1EABA1CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1CB8);
  }
  return result;
}

unint64_t sub_1DE07106C()
{
  unint64_t result = qword_1EBEC6B48;
  if (!qword_1EBEC6B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC6B48);
  }
  return result;
}

void sub_1DE0710C0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1DE07110C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

unint64_t sub_1DE071164()
{
  unint64_t result = qword_1EABA55A0;
  if (!qword_1EABA55A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA55A0);
  }
  return result;
}

unint64_t sub_1DE0711B8()
{
  unint64_t result = qword_1EABA1CC8;
  if (!qword_1EABA1CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1CC8);
  }
  return result;
}

unint64_t sub_1DE07120C()
{
  unint64_t result = qword_1EABA1CD8;
  if (!qword_1EABA1CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1CD8);
  }
  return result;
}

unint64_t sub_1DE071260()
{
  unint64_t result = qword_1EABA1CE0;
  if (!qword_1EABA1CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1CE0);
  }
  return result;
}

void sub_1DE0712B4()
{
  if (!qword_1EBEC7760)
  {
    sub_1DE07131C(255, (unint64_t *)&qword_1EBEC7770);
    unint64_t v0 = sub_1DE480620();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBEC7760);
    }
  }
}

uint64_t sub_1DE07131C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_1DE07136C()
{
  unint64_t result = qword_1EBEC7380;
  if (!qword_1EBEC7380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC7380);
  }
  return result;
}

uint64_t sub_1DE0713C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_1DE07141C()
{
  unint64_t result = qword_1EBEC2308;
  if (!qword_1EBEC2308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC2308);
  }
  return result;
}

void sub_1DE071470(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = sub_1DE47EB40();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1DE0714D0()
{
  unint64_t result = qword_1EBEC71B0;
  if (!qword_1EBEC71B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC71B0);
  }
  return result;
}

void sub_1DE071524()
{
  if (!qword_1EBEC1D40)
  {
    type metadata accessor for SessionData();
    sub_1DE071784((unint64_t *)&qword_1EBEC24B0, (void (*)(uint64_t))type metadata accessor for SessionData);
    unint64_t v0 = sub_1DE47EB40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBEC1D40);
    }
  }
}

uint64_t sub_1DE0715B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SessionData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DE07161C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SessionData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DE071680(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SessionData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1DE0716DC()
{
  unint64_t result = qword_1EBEC2318;
  if (!qword_1EBEC2318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC2318);
  }
  return result;
}

unint64_t sub_1DE071730()
{
  unint64_t result = qword_1EBEC7108;
  if (!qword_1EBEC7108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC7108);
  }
  return result;
}

uint64_t sub_1DE071784(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DE0717CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t static RecirculationData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t RecirculationData.dataProviderID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RecirculationData.dataProviderID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*RecirculationData.dataProviderID.modify())()
{
  return nullsub_1;
}

NewsAnalytics::RecirculationData __swiftcall RecirculationData.init(dataProviderID:)(NewsAnalytics::RecirculationData dataProviderID)
{
  *uint64_t v1 = dataProviderID;
  return dataProviderID;
}

uint64_t sub_1DE0718C4()
{
  return 0x766F725061746164;
}

uint64_t sub_1DE0718E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x766F725061746164 && a2 == 0xEE00444972656469)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1DE480660();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DE0719A4(uint64_t a1)
{
  unint64_t v2 = sub_1DE071B68();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE0719E0(uint64_t a1)
{
  unint64_t v2 = sub_1DE071B68();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t RecirculationData.encode(to:)(void *a1)
{
  sub_1DE071D40(0, &qword_1EABA1CE8, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE071B68();
  sub_1DE480790();
  sub_1DE480580();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DE071B68()
{
  unint64_t result = qword_1EABA1CF0;
  if (!qword_1EABA1CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1CF0);
  }
  return result;
}

uint64_t RecirculationData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1DE071D40(0, &qword_1EABA1CF8, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE071B68();
  sub_1DE480770();
  if (!v2)
  {
    uint64_t v10 = sub_1DE4804A0();
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DE071D40(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE071B68();
    unint64_t v7 = a3(a1, &type metadata for RecirculationData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1DE071DA8()
{
  unint64_t result = qword_1EBECA7A8;
  if (!qword_1EBECA7A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBECA7A8);
  }
  return result;
}

unint64_t sub_1DE071E00()
{
  unint64_t result = qword_1EBECA7A0;
  if (!qword_1EBECA7A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBECA7A0);
  }
  return result;
}

uint64_t sub_1DE071E54@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return RecirculationData.init(from:)(a1, a2);
}

uint64_t sub_1DE071E6C(void *a1)
{
  sub_1DE071D40(0, &qword_1EABA1CE8, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE071B68();
  sub_1DE480790();
  sub_1DE480580();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for RecirculationData()
{
  return &type metadata for RecirculationData;
}

unsigned char *storeEnumTagSinglePayload for RecirculationData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DE072064);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RecirculationData.CodingKeys()
{
  return &type metadata for RecirculationData.CodingKeys;
}

unint64_t sub_1DE0720A0()
{
  unint64_t result = qword_1EABA1D00;
  if (!qword_1EABA1D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1D00);
  }
  return result;
}

unint64_t sub_1DE0720F8()
{
  unint64_t result = qword_1EABA1D08;
  if (!qword_1EABA1D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1D08);
  }
  return result;
}

unint64_t sub_1DE072150()
{
  unint64_t result = qword_1EABA1D10;
  if (!qword_1EABA1D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1D10);
  }
  return result;
}

NewsAnalytics::FeedbackType_optional __swiftcall FeedbackType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1DE480420();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t FeedbackType.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1702195828;
      break;
    case 2:
      uint64_t result = 0x65736C6166;
      break;
    case 3:
      uint64_t result = 0x656279616DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE072280(unsigned __int8 *a1, char *a2)
{
  return sub_1DE3DAFBC(*a1, *a2);
}

unint64_t sub_1DE072290()
{
  unint64_t result = qword_1EABA1D18;
  if (!qword_1EABA1D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1D18);
  }
  return result;
}

uint64_t sub_1DE0722E4()
{
  return sub_1DE480750();
}

uint64_t sub_1DE0723AC()
{
  sub_1DE47FF00();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE07245C()
{
  return sub_1DE480750();
}

NewsAnalytics::FeedbackType_optional sub_1DE072520(Swift::String *a1)
{
  return FeedbackType.init(rawValue:)(*a1);
}

void sub_1DE07252C(void *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1702195828;
      goto LABEL_3;
    case 2:
      uint64_t v4 = 1936482662;
      goto LABEL_6;
    case 3:
      uint64_t v4 = 1652121965;
LABEL_6:
      *a1 = v4 & 0xFFFF0000FFFFFFFFLL | 0x6500000000;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1DE0725B0()
{
  return sub_1DE47FFF0();
}

uint64_t sub_1DE072610()
{
  return sub_1DE47FFE0();
}

unsigned char *storeEnumTagSinglePayload for FeedbackType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE07272CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedbackType()
{
  return &type metadata for FeedbackType;
}

unint64_t sub_1DE072764()
{
  unint64_t result = qword_1EABA1D20;
  if (!qword_1EABA1D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1D20);
  }
  return result;
}

uint64_t sub_1DE0727B8(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4A9C8], qword_1EABA1D28, MEMORY[0x1E4F4A9C0]);
}

uint64_t static MediaEngageEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0970, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EABA1D28, a1);
}

uint64_t static MediaEngageEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_1DE072820(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4AAB0], qword_1EABA1D40, MEMORY[0x1E4F4AAA0]);
}

uint64_t static MediaEngageEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0978, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EABA1D40, a1);
}

uint64_t sub_1DE072880()
{
  uint64_t v0 = sub_1DE47F020();
  __swift_allocate_value_buffer(v0, qword_1EABA1D58);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EABA1D58);
  return sub_1DE47F010();
}

uint64_t static MediaEngageEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0980, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA1D58, a1);
}

uint64_t MediaEngageEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084((uint64_t (*)(void))sub_1DE04D618, a1);
}

uint64_t sub_1DE07291C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DE47F330();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t MediaEngageEvent.eventData.setter(uint64_t a1)
{
  sub_1DE04D618();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*MediaEngageEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 20);
  sub_1DE074090(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for MediaEngageEvent(uint64_t a1)
{
  return sub_1DE04E1D0(a1, qword_1EBEC39B8);
}

uint64_t MediaEngageEvent.articleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 20);
  sub_1DE074090(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.articleData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 24);
  sub_1DE074090(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaEngageEvent.channelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 24);
  sub_1DE074090(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.channelData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 28);
  sub_1DE074090(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaEngageEvent.groupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 28);
  sub_1DE074090(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.groupData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 32);
  sub_1DE074090(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaEngageEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 32);
  sub_1DE074090(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageEvent.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 36);
  sub_1DE074090(0, &qword_1EBEC1FF8, (void (*)(void))sub_1DE073158, (void (*)(void))sub_1DE0731AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE073158()
{
  unint64_t result = qword_1EBEC72E8;
  if (!qword_1EBEC72E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC72E8);
  }
  return result;
}

unint64_t sub_1DE0731AC()
{
  unint64_t result = qword_1EBEC72E0;
  if (!qword_1EBEC72E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC72E0);
  }
  return result;
}

uint64_t MediaEngageEvent.mediaData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 36);
  sub_1DE074090(0, &qword_1EBEC1FF8, (void (*)(void))sub_1DE073158, (void (*)(void))sub_1DE0731AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.mediaData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageEvent.mediaEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 40);
  sub_1DE074090(0, &qword_1EBEC1F30, (void (*)(void))sub_1DE0733A8, (void (*)(void))sub_1DE0733FC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE0733A8()
{
  unint64_t result = qword_1EBEC50C0;
  if (!qword_1EBEC50C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC50C0);
  }
  return result;
}

unint64_t sub_1DE0733FC()
{
  unint64_t result = qword_1EBEC50B8;
  if (!qword_1EBEC50B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC50B8);
  }
  return result;
}

uint64_t MediaEngageEvent.mediaEngagementData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 40);
  sub_1DE074090(0, &qword_1EBEC1F30, (void (*)(void))sub_1DE0733A8, (void (*)(void))sub_1DE0733FC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.mediaEngagementData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 44);
  sub_1DE074090(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaEngageEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 44);
  sub_1DE074090(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageEvent.anfComponentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 48);
  sub_1DE074090(0, &qword_1EBEC1ED0, (void (*)(void))sub_1DE0737A0, (void (*)(void))sub_1DE0737F4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE0737A0()
{
  unint64_t result = qword_1EBEC30B0;
  if (!qword_1EBEC30B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC30B0);
  }
  return result;
}

unint64_t sub_1DE0737F4()
{
  unint64_t result = qword_1EBEC30A8;
  if (!qword_1EBEC30A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC30A8);
  }
  return result;
}

uint64_t MediaEngageEvent.anfComponentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 48);
  sub_1DE074090(0, &qword_1EBEC1ED0, (void (*)(void))sub_1DE0737A0, (void (*)(void))sub_1DE0737F4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.anfComponentData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 52);
  sub_1DE074090(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaEngageEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 52);
  sub_1DE074090(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.userBundleSubscriptionContextData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 56);
  sub_1DE074090(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaEngageEvent.issueData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 56);
  sub_1DE074090(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.issueData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageEvent.issueViewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 60);
  sub_1DE074090(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaEngageEvent.issueViewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 60);
  sub_1DE074090(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.issueViewData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 64);
  sub_1DE074090(0, &qword_1EBEC1EC0, (void (*)(void))sub_1DE0547A8, (void (*)(void))sub_1DE0547FC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaEngageEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 64);
  sub_1DE074090(0, &qword_1EBEC1EC0, (void (*)(void))sub_1DE0547A8, (void (*)(void))sub_1DE0547FC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.orientationData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageEvent.articleExposureContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 68);
  sub_1DE074090(0, &qword_1EBEC1F88, (void (*)(void))sub_1DE07410C, (void (*)(void))sub_1DE074160);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_1DE074090(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_1DE47ECA0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1DE07410C()
{
  unint64_t result = qword_1EBEC6350;
  if (!qword_1EBEC6350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC6350);
  }
  return result;
}

unint64_t sub_1DE074160()
{
  unint64_t result = qword_1EBEC6348;
  if (!qword_1EBEC6348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC6348);
  }
  return result;
}

uint64_t MediaEngageEvent.articleExposureContextData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 68);
  sub_1DE074090(0, &qword_1EBEC1F88, (void (*)(void))sub_1DE07410C, (void (*)(void))sub_1DE074160);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.articleExposureContextData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for MediaEngageEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_1DE074090(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_1DE074090(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = *MEMORY[0x1E4F4A9F8];
  sub_1DE074090(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v9, v10, v11);
  uint64_t v12 = a1 + v4[8];
  sub_1DE074090(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v10, v13);
  uint64_t v14 = a1 + v4[9];
  sub_1DE074090(0, &qword_1EBEC1FF8, (void (*)(void))sub_1DE073158, (void (*)(void))sub_1DE0731AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v2, v15);
  uint64_t v16 = a1 + v4[10];
  sub_1DE074090(0, &qword_1EBEC1F30, (void (*)(void))sub_1DE0733A8, (void (*)(void))sub_1DE0733FC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v2, v17);
  uint64_t v18 = a1 + v4[11];
  sub_1DE074090(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v2, v19);
  uint64_t v20 = a1 + v4[12];
  sub_1DE074090(0, &qword_1EBEC1ED0, (void (*)(void))sub_1DE0737A0, (void (*)(void))sub_1DE0737F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v10, v21);
  uint64_t v22 = a1 + v4[13];
  sub_1DE074090(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v22, v2, v23);
  uint64_t v24 = a1 + v4[14];
  sub_1DE074090(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v24, v10, v25);
  uint64_t v26 = a1 + v4[15];
  sub_1DE074090(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(v26, v10, v27);
  uint64_t v28 = a1 + v4[16];
  sub_1DE074090(0, &qword_1EBEC1EC0, (void (*)(void))sub_1DE0547A8, (void (*)(void))sub_1DE0547FC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104))(v28, v10, v29);
  uint64_t v30 = a1 + v4[17];
  sub_1DE074090(0, &qword_1EBEC1F88, (void (*)(void))sub_1DE07410C, (void (*)(void))sub_1DE074160);
  uint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 104);

  return v32(v30, v10, v31);
}

uint64_t MediaEngageEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084(MEMORY[0x1E4F4AB70], a1);
}

uint64_t MediaEngageEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 20);
  long long v4 = *(_OWORD *)(v3 + 80);
  long long v5 = *(_OWORD *)(v3 + 112);
  long long v21 = *(_OWORD *)(v3 + 96);
  v22[0] = v5;
  long long v6 = *(_OWORD *)(v3 + 16);
  long long v7 = *(_OWORD *)(v3 + 48);
  long long v17 = *(_OWORD *)(v3 + 32);
  long long v8 = v17;
  long long v18 = v7;
  long long v9 = *(_OWORD *)(v3 + 48);
  long long v10 = *(_OWORD *)(v3 + 80);
  long long v19 = *(_OWORD *)(v3 + 64);
  long long v11 = v19;
  long long v20 = v10;
  long long v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  long long v13 = v16[0];
  v16[1] = v12;
  long long v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  *(void *)((char *)v22 + 15) = *(void *)(v3 + 127);
  *(void *)(a1 + 127) = *(void *)(v3 + 127);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1DE056184((uint64_t)v16);
}

uint64_t type metadata accessor for MediaEngageEvent.Model(uint64_t a1)
{
  return sub_1DE04E1D0(a1, qword_1EBEC38F0);
}

uint64_t MediaEngageEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 24);
  uint64_t v4 = *(void *)(v3 + 8);
  char v5 = *(unsigned char *)(v3 + 16);
  char v6 = *(unsigned char *)(v3 + 17);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 32);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 17) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

void *MediaEngageEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for MediaEngageEvent.Model(0);
  sub_1DE063B10(v1 + *(int *)(v3 + 28), (uint64_t)v5);
  sub_1DE063B10((uint64_t)v5, a1);
  return sub_1DE0652D8(v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DE063BCC);
}

uint64_t MediaEngageEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 32));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;

  return sub_1DE056598(v4, v5, v6);
}

uint64_t MediaEngageEvent.Model.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (char *)(v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 36));
  char v4 = *v3;
  uint64_t v6 = *((void *)v3 + 1);
  uint64_t v5 = *((void *)v3 + 2);
  int v7 = *((_DWORD *)v3 + 6);
  LOBYTE(v3) = v3[28];
  *(unsigned char *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 28) = (_BYTE)v3;

  return swift_bridgeObjectRetain();
}

uint64_t MediaEngageEvent.Model.mediaEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for MediaEngageEvent.Model(0);
  char v4 = (uint64_t *)(v1 + *(int *)(result + 40));
  uint64_t v5 = *v4;
  char v6 = *((unsigned char *)v4 + 8);
  int v7 = *((_DWORD *)v4 + 3);
  char v8 = *((unsigned char *)v4 + 16);
  LOBYTE(v4) = *((unsigned char *)v4 + 17);
  *(void *)a1 = v5;
  *(unsigned char *)(a1 + 8) = v6;
  *(_DWORD *)(a1 + 12) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 17) = (_BYTE)v4;
  return result;
}

uint64_t MediaEngageEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 44));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t MediaEngageEvent.Model.anfComponentData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 48));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  uint64_t v10 = v3[6];
  uint64_t v11 = v3[7];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;

  return sub_1DE074CE8(v4, v5);
}

uint64_t sub_1DE074CE8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t MediaEngageEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (char *)(v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 52));
  char v4 = *v3;
  uint64_t v5 = *((void *)v3 + 1);
  uint64_t v6 = *((void *)v3 + 2);
  char v7 = v3[24];
  char v8 = v3[25];
  uint64_t v10 = *((void *)v3 + 4);
  uint64_t v9 = *((void *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(unsigned char *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 25) = v8;
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t MediaEngageEvent.Model.issueData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 56));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;

  return sub_1DE074E14(v4, v5);
}

uint64_t sub_1DE074E14(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t MediaEngageEvent.Model.issueViewData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 60));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t MediaEngageEvent.Model.orientationData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for MediaEngageEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 64));
  return result;
}

uint64_t MediaEngageEvent.Model.articleExposureContextData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 68));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;

  return sub_1DE074F2C(v4, v5);
}

uint64_t sub_1DE074F2C(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

__n128 MediaEngageEvent.Model.init(eventData:articleData:channelData:groupData:feedData:mediaData:mediaEngagementData:viewData:anfComponentData:userBundleSubscriptionContextData:issueData:issueViewData:orientationData:articleExposureContextData:)@<Q0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, long long *a5@<X4>, char *a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, long long *a10, char *a11, long long *a12, uint64_t *a13, __int16 *a14, long long *a15)
{
  long long v84 = a2[6];
  *(_OWORD *)long long v85 = a2[7];
  *(void *)&v85[15] = *(void *)((char *)a2 + 127);
  long long v80 = a2[2];
  long long v81 = a2[3];
  long long v82 = a2[4];
  long long v83 = a2[5];
  long long v78 = *a2;
  long long v79 = a2[1];
  uint64_t v47 = a3[1];
  uint64_t v48 = *a3;
  char v45 = *((unsigned char *)a3 + 17);
  char v46 = *((unsigned char *)a3 + 16);
  uint64_t v43 = a3[4];
  uint64_t v44 = a3[3];
  sub_1DE063B10(a4, (uint64_t)v86);
  long long v49 = *a5;
  uint64_t v20 = *((void *)a5 + 2);
  char v21 = *a6;
  uint64_t v51 = *((void *)a6 + 2);
  uint64_t v52 = *((void *)a6 + 1);
  int v50 = *((_DWORD *)a6 + 6);
  LOBYTE(a6) = a6[28];
  uint64_t v22 = *a7;
  int v55 = *((_DWORD *)a7 + 3);
  char v56 = *((unsigned char *)a7 + 8);
  char v53 = v21;
  char v54 = *((unsigned char *)a7 + 16);
  LOBYTE(a7) = *((unsigned char *)a7 + 17);
  uint64_t v23 = *a8;
  uint64_t v57 = v22;
  uint64_t v58 = a8[1];
  LOWORD(a8) = *((_WORD *)a8 + 8);
  long long v63 = a10[1];
  long long v64 = *a10;
  long long v62 = a10[2];
  uint64_t v61 = *((void *)a10 + 6);
  uint64_t v59 = v23;
  uint64_t v60 = *((void *)a10 + 7);
  char v72 = *a11;
  uint64_t v70 = *((void *)a11 + 2);
  uint64_t v71 = *((void *)a11 + 1);
  char v68 = a11[25];
  char v69 = a11[24];
  uint64_t v66 = *((void *)a11 + 5);
  uint64_t v67 = *((void *)a11 + 4);
  char v65 = a11[48];
  uint64_t v73 = *((void *)a12 + 3);
  uint64_t v74 = *((void *)a12 + 2);
  uint64_t v25 = *a13;
  uint64_t v24 = a13[1];
  __int16 v26 = *a14;
  long long v77 = *a15;
  long long v75 = *a12;
  __n128 v76 = (__n128)a15[1];
  uint64_t v27 = *((void *)a15 + 4);
  uint64_t v28 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 32))(a9, a1, v28);
  uint64_t v29 = (int *)type metadata accessor for MediaEngageEvent.Model(0);
  uint64_t v30 = a9 + v29[5];
  *(_OWORD *)(v30 + 96) = v84;
  *(_OWORD *)(v30 + 112) = *(_OWORD *)v85;
  *(void *)(v30 + 127) = *(void *)&v85[15];
  *(_OWORD *)(v30 + 32) = v80;
  *(_OWORD *)(v30 + 48) = v81;
  *(_OWORD *)(v30 + 64) = v82;
  *(_OWORD *)(v30 + 80) = v83;
  *(_OWORD *)uint64_t v30 = v78;
  *(_OWORD *)(v30 + 16) = v79;
  uint64_t v31 = a9 + v29[6];
  *(void *)uint64_t v31 = v48;
  *(void *)(v31 + 8) = v47;
  *(unsigned char *)(v31 + 16) = v46;
  *(unsigned char *)(v31 + 17) = v45;
  *(void *)(v31 + 24) = v44;
  *(void *)(v31 + 32) = v43;
  sub_1DE063B10((uint64_t)v86, a9 + v29[7]);
  uint64_t v32 = a9 + v29[8];
  *(void *)(v32 + 16) = v20;
  *(_OWORD *)uint64_t v32 = v49;
  uint64_t v33 = a9 + v29[9];
  *(unsigned char *)uint64_t v33 = v53;
  *(void *)(v33 + 8) = v52;
  *(void *)(v33 + 16) = v51;
  *(_DWORD *)(v33 + 24) = v50;
  *(unsigned char *)(v33 + 28) = (_BYTE)a6;
  uint64_t v34 = a9 + v29[10];
  *(void *)uint64_t v34 = v57;
  *(unsigned char *)(v34 + 8) = v56;
  *(_DWORD *)(v34 + 12) = v55;
  *(unsigned char *)(v34 + 16) = v54;
  *(unsigned char *)(v34 + 17) = (_BYTE)a7;
  uint64_t v35 = a9 + v29[11];
  *(void *)uint64_t v35 = v59;
  *(void *)(v35 + 8) = v58;
  *(_WORD *)(v35 + 16) = (_WORD)a8;
  uint64_t v36 = a9 + v29[12];
  *(_OWORD *)uint64_t v36 = v64;
  *(_OWORD *)(v36 + 16) = v63;
  *(_OWORD *)(v36 + 32) = v62;
  *(void *)(v36 + 48) = v61;
  *(void *)(v36 + 56) = v60;
  uint64_t v37 = a9 + v29[13];
  *(unsigned char *)uint64_t v37 = v72;
  *(void *)(v37 + 8) = v71;
  *(void *)(v37 + 16) = v70;
  *(unsigned char *)(v37 + 24) = v69;
  *(unsigned char *)(v37 + 25) = v68;
  *(void *)(v37 + 32) = v67;
  *(void *)(v37 + 40) = v66;
  *(unsigned char *)(v37 + 48) = v65;
  uint64_t v38 = a9 + v29[14];
  *(_OWORD *)uint64_t v38 = v75;
  *(void *)(v38 + 16) = v74;
  *(void *)(v38 + 24) = v73;
  uint64_t v39 = (void *)(a9 + v29[15]);
  *uint64_t v39 = v25;
  v39[1] = v24;
  *(_WORD *)(a9 + v29[16]) = v26;
  uint64_t v40 = a9 + v29[17];
  __n128 result = v76;
  *(_OWORD *)uint64_t v40 = v77;
  *(__n128 *)(v40 + 16) = v76;
  *(void *)(v40 + 32) = v27;
  return result;
}

uint64_t sub_1DE075310(char a1)
{
  uint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x44656C6369747261;
      break;
    case 2:
      uint64_t result = 0x446C656E6E616863;
      break;
    case 3:
      uint64_t result = 0x74614470756F7267;
      break;
    case 4:
      unsigned int v3 = 1684366694;
      goto LABEL_10;
    case 5:
      uint64_t result = 0x746144616964656DLL;
      break;
    case 6:
      uint64_t result = 0xD000000000000013;
      break;
    case 7:
      unsigned int v3 = 2003134838;
LABEL_10:
      uint64_t result = v3 | 0x6174614400000000;
      break;
    case 8:
      uint64_t result = 0xD000000000000010;
      break;
    case 9:
      uint64_t result = 0xD000000000000021;
      break;
    case 10:
      uint64_t result = 0x7461446575737369;
      break;
    case 11:
      uint64_t result = 0x6569566575737369;
      break;
    case 12:
      uint64_t result = 0x7461746E6569726FLL;
      break;
    case 13:
      uint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE0754D8()
{
  return sub_1DE075310(*v0);
}

uint64_t sub_1DE0754E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE07D154(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE075508(uint64_t a1)
{
  unint64_t v2 = sub_1DE075B80();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE075544(uint64_t a1)
{
  unint64_t v2 = sub_1DE075B80();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t MediaEngageEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1DE07677C(0, &qword_1EABA1D70, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v51 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE075B80();
  sub_1DE480790();
  char v65 = 0;
  sub_1DE47F330();
  sub_1DE07291C(&qword_1EBEC2030);
  sub_1DE4805C0();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for MediaEngageEvent.Model(0);
    uint64_t v11 = v3 + v10[5];
    long long v12 = *(_OWORD *)(v11 + 112);
    v56[6] = *(_OWORD *)(v11 + 96);
    *(_OWORD *)uint64_t v57 = v12;
    *(void *)&v57[15] = *(void *)(v11 + 127);
    long long v13 = *(_OWORD *)(v11 + 48);
    v56[2] = *(_OWORD *)(v11 + 32);
    v56[3] = v13;
    long long v14 = *(_OWORD *)(v11 + 80);
    v56[4] = *(_OWORD *)(v11 + 64);
    v56[5] = v14;
    long long v15 = *(_OWORD *)(v11 + 16);
    v56[0] = *(_OWORD *)v11;
    v56[1] = v15;
    LOBYTE(v53[0]) = 1;
    sub_1DE053EBC();
    sub_1DE4805C0();
    uint64_t v16 = (uint64_t *)(v3 + v10[6]);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    char v19 = *((unsigned char *)v16 + 16);
    char v20 = *((unsigned char *)v16 + 17);
    uint64_t v22 = v16[3];
    uint64_t v21 = v16[4];
    uint64_t v59 = v17;
    uint64_t v60 = v18;
    char v61 = v19;
    char v62 = v20;
    uint64_t v63 = v22;
    uint64_t v64 = v21;
    char v58 = 2;
    sub_1DE0552E4();
    sub_1DE4805C0();
    sub_1DE063B10(v3 + v10[7], (uint64_t)v56);
    sub_1DE063B10((uint64_t)v56, (uint64_t)v53);
    char v52 = 3;
    sub_1DE0629F4();
    sub_1DE480550();
    uint64_t v23 = v3 + v10[8];
    uint64_t v24 = *(void *)(v23 + 16);
    v53[0] = *(_OWORD *)v23;
    *(void *)&v53[1] = v24;
    char v52 = 4;
    sub_1DE055800();
    sub_1DE480550();
    uint64_t v25 = (char *)(v3 + v10[9]);
    char v26 = *v25;
    uint64_t v27 = *((void *)v25 + 1);
    uint64_t v28 = *((void *)v25 + 2);
    int v29 = *((_DWORD *)v25 + 6);
    LOBYTE(v25) = v25[28];
    LOBYTE(v53[0]) = v26;
    *((void *)&v53[0] + 1) = v27;
    *(void *)&v53[1] = v28;
    DWORD2(v53[1]) = v29;
    BYTE12(v53[1]) = (_BYTE)v25;
    char v52 = 5;
    sub_1DE0731AC();
    sub_1DE4805C0();
    uint64_t v30 = (uint64_t *)(v3 + v10[10]);
    uint64_t v31 = *v30;
    char v32 = *((unsigned char *)v30 + 8);
    int v33 = *((_DWORD *)v30 + 3);
    char v34 = *((unsigned char *)v30 + 16);
    LOBYTE(v30) = *((unsigned char *)v30 + 17);
    *(void *)&v53[0] = v31;
    BYTE8(v53[0]) = v32;
    HIDWORD(v53[0]) = v33;
    LOBYTE(v53[1]) = v34;
    BYTE1(v53[1]) = (_BYTE)v30;
    char v52 = 6;
    sub_1DE0733FC();
    sub_1DE4805C0();
    uint64_t v35 = (uint64_t *)(v3 + v10[11]);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    LOWORD(v35) = *((_WORD *)v35 + 8);
    *(void *)&v53[0] = v36;
    *((void *)&v53[0] + 1) = v37;
    LOWORD(v53[1]) = (_WORD)v35;
    char v52 = 7;
    sub_1DE05410C();
    sub_1DE4805C0();
    uint64_t v38 = (_OWORD *)(v3 + v10[12]);
    long long v39 = v38[1];
    v53[0] = *v38;
    v53[1] = v39;
    long long v40 = v38[3];
    long long v54 = v38[2];
    long long v55 = v40;
    char v52 = 8;
    sub_1DE0737F4();
    sub_1DE480550();
    uint64_t v41 = v3 + v10[13];
    char v42 = *(unsigned char *)(v41 + 24);
    char v43 = *(unsigned char *)(v41 + 25);
    char v44 = *(unsigned char *)(v41 + 48);
    LOBYTE(v53[0]) = *(unsigned char *)v41;
    *(_OWORD *)((char *)v53 + 8) = *(_OWORD *)(v41 + 8);
    BYTE8(v53[1]) = v42;
    BYTE9(v53[1]) = v43;
    long long v54 = *(_OWORD *)(v41 + 32);
    LOBYTE(v55) = v44;
    char v52 = 9;
    sub_1DE04DD5C();
    sub_1DE4805C0();
    char v45 = (_OWORD *)(v3 + v10[14]);
    long long v46 = v45[1];
    v53[0] = *v45;
    v53[1] = v46;
    char v52 = 10;
    sub_1DE054A4C();
    sub_1DE480550();
    v53[0] = *(_OWORD *)(v3 + v10[15]);
    char v52 = 11;
    sub_1DE054C9C();
    sub_1DE480550();
    LOWORD(v53[0]) = *(_WORD *)(v3 + v10[16]);
    char v52 = 12;
    sub_1DE0547FC();
    sub_1DE480550();
    uint64_t v47 = v3 + v10[17];
    uint64_t v48 = *(void *)(v47 + 32);
    long long v49 = *(_OWORD *)(v47 + 16);
    v53[0] = *(_OWORD *)v47;
    v53[1] = v49;
    *(void *)&long long v54 = v48;
    char v52 = 13;
    sub_1DE074160();
    sub_1DE480550();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DE075B80()
{
  unint64_t result = qword_1EABA1D78;
  if (!qword_1EABA1D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1D78);
  }
  return result;
}

uint64_t MediaEngageEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v69 = a2;
  uint64_t v4 = sub_1DE47F330();
  uint64_t v71 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE07677C(0, &qword_1EABA1D80, MEMORY[0x1E4FBBDC0]);
  uint64_t v73 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v67 - v9;
  v98 = (int *)type metadata accessor for MediaEngageEvent.Model(0);
  MEMORY[0x1F4188790](v98);
  __n128 v76 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  uint64_t v74 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1DE075B80();
  char v72 = v10;
  sub_1DE480770();
  uint64_t v70 = v4;
  if (v2)
  {
    uint64_t v75 = v2;
    LODWORD(v72) = 0;
    long long v13 = v76;
    uint64_t result = __swift_destroy_boxed_opaque_existential_1(v74);
    LODWORD(v74) = 0;
    LODWORD(v73) = 0;
    int v15 = 0;
    uint64_t v16 = v98;
    if (v72) {
      goto LABEL_11;
    }
LABEL_5:
    if (!v15) {
      goto LABEL_12;
    }
LABEL_6:
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v73) {
      goto LABEL_13;
    }
    goto LABEL_7;
  }
  uint64_t v68 = v8;
  LOBYTE(v90) = 0;
  sub_1DE07291C(&qword_1EBEC2038);
  sub_1DE4804E0();
  uint64_t v22 = v76;
  (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v76, v6, v4);
  v81[143] = 1;
  sub_1DE053E68();
  sub_1DE4804E0();
  uint64_t v23 = v98;
  uint64_t v24 = &v22[v98[5]];
  long long v25 = *(_OWORD *)v89;
  *((_OWORD *)v24 + 6) = v88;
  *((_OWORD *)v24 + 7) = v25;
  *(void *)(v24 + 127) = *(void *)&v89[15];
  long long v26 = v85;
  *((_OWORD *)v24 + 2) = v84;
  *((_OWORD *)v24 + 3) = v26;
  long long v27 = v87;
  *((_OWORD *)v24 + 4) = v86;
  *((_OWORD *)v24 + 5) = v27;
  long long v28 = v83;
  *(_OWORD *)uint64_t v24 = v82;
  *((_OWORD *)v24 + 1) = v28;
  v81[0] = 2;
  sub_1DE055290();
  sub_1DE4804E0();
  uint64_t v29 = *((void *)&v90 + 1);
  char v30 = v91;
  char v31 = BYTE1(v91);
  uint64_t v32 = *((void *)&v91 + 1);
  uint64_t v33 = v92;
  char v34 = &v22[v23[6]];
  *(void *)char v34 = v90;
  *((void *)v34 + 1) = v29;
  v34[16] = v30;
  v34[17] = v31;
  *((void *)v34 + 3) = v32;
  *((void *)v34 + 4) = v33;
  v81[142] = 3;
  sub_1DE0629A0();
  sub_1DE480470();
  sub_1DE063B10((uint64_t)&v90, (uint64_t)v81);
  sub_1DE063B10((uint64_t)v81, (uint64_t)&v22[v23[7]]);
  char v80 = 4;
  sub_1DE0557AC();
  sub_1DE480470();
  uint64_t v35 = *(void *)&v77[1];
  uint64_t v36 = &v22[v23[8]];
  *(_OWORD *)uint64_t v36 = v77[0];
  *((void *)v36 + 2) = v35;
  char v80 = 5;
  sub_1DE073158();
  sub_1DE4804E0();
  uint64_t v37 = *((void *)&v77[0] + 1);
  uint64_t v38 = *(void *)&v77[1];
  int v39 = DWORD2(v77[1]);
  char v40 = BYTE12(v77[1]);
  uint64_t v41 = &v22[v23[9]];
  *uint64_t v41 = v77[0];
  *((void *)v41 + 1) = v37;
  *((void *)v41 + 2) = v38;
  *((_DWORD *)v41 + 6) = v39;
  v41[28] = v40;
  char v80 = 6;
  sub_1DE0733A8();
  sub_1DE4804E0();
  char v42 = BYTE8(v77[0]);
  int v43 = HIDWORD(v77[0]);
  char v44 = v77[1];
  char v45 = BYTE1(v77[1]);
  long long v46 = &v22[v23[10]];
  *(void *)long long v46 = *(void *)&v77[0];
  v46[8] = v42;
  *((_DWORD *)v46 + 3) = v43;
  v46[16] = v44;
  v46[17] = v45;
  char v80 = 7;
  sub_1DE0540B8();
  sub_1DE4804E0();
  uint64_t v47 = *((void *)&v77[0] + 1);
  __int16 v48 = v77[1];
  long long v49 = &v22[v23[11]];
  *(void *)long long v49 = *(void *)&v77[0];
  *((void *)v49 + 1) = v47;
  *((_WORD *)v49 + 8) = v48;
  char v80 = 8;
  sub_1DE0737A0();
  sub_1DE480470();
  int v50 = &v22[v98[12]];
  long long v51 = v77[1];
  *(_OWORD *)int v50 = v77[0];
  *((_OWORD *)v50 + 1) = v51;
  long long v52 = v79;
  *((_OWORD *)v50 + 2) = v78;
  *((_OWORD *)v50 + 3) = v52;
  char v80 = 9;
  sub_1DE04DD08();
  sub_1DE4804E0();
  uint64_t v75 = 0;
  char v53 = BYTE8(v77[1]);
  char v54 = BYTE9(v77[1]);
  char v55 = v79;
  char v56 = &v76[v98[13]];
  *char v56 = v77[0];
  *(_OWORD *)(v56 + 8) = *(_OWORD *)((char *)v77 + 8);
  v56[24] = v53;
  v56[25] = v54;
  *((_OWORD *)v56 + 2) = v78;
  v56[48] = v55;
  char v80 = 10;
  sub_1DE0549F8();
  uint64_t v57 = v75;
  sub_1DE480470();
  uint64_t v75 = v57;
  if (v57)
  {
    (*(void (**)(char *, uint64_t))(v68 + 8))(v72, v73);
    __swift_destroy_boxed_opaque_existential_1(v74);
    LODWORD(v73) = 0;
    LODWORD(v74) = 0;
    LODWORD(v72) = 1;
    int v15 = 1;
    long long v13 = v76;
  }
  else
  {
    char v58 = &v76[v98[14]];
    long long v59 = v77[1];
    *(_OWORD *)char v58 = v77[0];
    *((_OWORD *)v58 + 1) = v59;
    char v80 = 11;
    sub_1DE054C48();
    uint64_t v60 = v75;
    sub_1DE480470();
    uint64_t v75 = v60;
    if (v60)
    {
      (*(void (**)(char *, uint64_t))(v68 + 8))(v72, v73);
      __swift_destroy_boxed_opaque_existential_1(v74);
      LODWORD(v74) = 0;
      LODWORD(v72) = 1;
      int v15 = 1;
      LODWORD(v73) = 1;
      long long v13 = v76;
    }
    else
    {
      *(_OWORD *)&v76[v98[15]] = v77[0];
      char v80 = 12;
      sub_1DE0547A8();
      uint64_t v61 = v75;
      sub_1DE480470();
      uint64_t v75 = v61;
      if (!v61)
      {
        *(_WORD *)&v76[v98[16]] = v77[0];
        char v80 = 13;
        sub_1DE07410C();
        uint64_t v62 = v75;
        sub_1DE480470();
        uint64_t v75 = v62;
        if (!v62)
        {
          (*(void (**)(char *, uint64_t))(v68 + 8))(v72, v73);
          uint64_t v63 = v78;
          uint64_t v64 = (uint64_t)v76;
          char v65 = &v76[v98[17]];
          long long v66 = v77[1];
          *(_OWORD *)char v65 = v77[0];
          *((_OWORD *)v65 + 1) = v66;
          *((void *)v65 + 4) = v63;
          sub_1DE076888(v64, v69);
          __swift_destroy_boxed_opaque_existential_1(v74);
          return sub_1DE0768EC(v64);
        }
      }
      (*(void (**)(char *, uint64_t))(v68 + 8))(v72, v73);
      __swift_destroy_boxed_opaque_existential_1(v74);
      LODWORD(v72) = 1;
      int v15 = 1;
      LODWORD(v73) = 1;
      LODWORD(v74) = 1;
      long long v13 = v76;
    }
  }
  (*(void (**)(char *, uint64_t))(v71 + 8))(v13, v70);
  uint64_t v16 = v98;
  uint64_t v17 = &v13[v98[5]];
  long long v18 = *((_OWORD *)v17 + 7);
  long long v96 = *((_OWORD *)v17 + 6);
  v97[0] = v18;
  *(void *)((char *)v97 + 15) = *(void *)(v17 + 127);
  long long v19 = *((_OWORD *)v17 + 3);
  long long v92 = *((_OWORD *)v17 + 2);
  long long v93 = v19;
  long long v20 = *((_OWORD *)v17 + 5);
  long long v94 = *((_OWORD *)v17 + 4);
  long long v95 = v20;
  long long v21 = *((_OWORD *)v17 + 1);
  long long v90 = *(_OWORD *)v17;
  long long v91 = v21;
  sub_1DE057E78((uint64_t)&v90);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DE063B10((uint64_t)&v13[v16[7]], (uint64_t)&v90);
  sub_1DE0652D8(&v90, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DE06533C);
  sub_1DE05FBA8(*(void *)&v13[v16[8]], *(void *)&v13[v16[8] + 8], *(void *)&v13[v16[8] + 16]);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v72 & 1) == 0) {
    goto LABEL_5;
  }
LABEL_11:
  uint64_t result = sub_1DE076824(*(void *)&v13[v16[12]], *(void *)&v13[v16[12] + 8]);
  if (v15) {
    goto LABEL_6;
  }
LABEL_12:
  if (v73)
  {
LABEL_13:
    uint64_t result = sub_1DE0767E0(*(void *)&v13[v16[14]], *(void *)&v13[v16[14] + 8]);
    if ((v74 & 1) == 0) {
      return result;
    }
    return swift_bridgeObjectRelease();
  }
LABEL_7:
  if (!v74) {
    return result;
  }
  return swift_bridgeObjectRelease();
}

void sub_1DE07677C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE075B80();
    unint64_t v7 = a3(a1, &type metadata for MediaEngageEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DE0767E0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DE076824(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DE076888(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MediaEngageEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DE0768EC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MediaEngageEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DE076948@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return MediaEngageEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DE076960(void *a1)
{
  return MediaEngageEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DE076978@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0970, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EABA1D28, a1);
}

uint64_t sub_1DE0769B0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0978, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EABA1D40, a1);
}

uint64_t sub_1DE0769E8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0980, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA1D58, a1);
}

uint64_t sub_1DE076A20@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_1DE074090(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_1DE074090(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = *MEMORY[0x1E4F4A9F8];
  sub_1DE074090(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  uint64_t v13 = a2 + a1[8];
  sub_1DE074090(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v11, v14);
  uint64_t v15 = a2 + a1[9];
  sub_1DE074090(0, &qword_1EBEC1FF8, (void (*)(void))sub_1DE073158, (void (*)(void))sub_1DE0731AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v4, v16);
  uint64_t v17 = a2 + a1[10];
  sub_1DE074090(0, &qword_1EBEC1F30, (void (*)(void))sub_1DE0733A8, (void (*)(void))sub_1DE0733FC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v4, v18);
  uint64_t v19 = a2 + a1[11];
  sub_1DE074090(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v4, v20);
  uint64_t v21 = a2 + a1[12];
  sub_1DE074090(0, &qword_1EBEC1ED0, (void (*)(void))sub_1DE0737A0, (void (*)(void))sub_1DE0737F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v21, v11, v22);
  uint64_t v23 = a2 + a1[13];
  sub_1DE074090(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v23, v4, v24);
  uint64_t v25 = a2 + a1[14];
  sub_1DE074090(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104))(v25, v11, v26);
  uint64_t v27 = a2 + a1[15];
  sub_1DE074090(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104))(v27, v11, v28);
  uint64_t v29 = a2 + a1[16];
  sub_1DE074090(0, &qword_1EBEC1EC0, (void (*)(void))sub_1DE0547A8, (void (*)(void))sub_1DE0547FC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104))(v29, v11, v30);
  uint64_t v31 = a2 + a1[17];
  sub_1DE074090(0, &qword_1EBEC1F88, (void (*)(void))sub_1DE07410C, (void (*)(void))sub_1DE074160);
  uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104);

  return v33(v31, v11, v32);
}

uint64_t *initializeBufferWithCopyOfBuffer for MediaEngageEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v60 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v60 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DE04D618();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DE074090(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_1DE074090(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_1DE074090(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_1DE074090(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_1DE074090(0, &qword_1EBEC1FF8, (void (*)(void))sub_1DE073158, (void (*)(void))sub_1DE0731AC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    sub_1DE074090(0, &qword_1EBEC1F30, (void (*)(void))sub_1DE0733A8, (void (*)(void))sub_1DE0733FC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    uint64_t v33 = (char *)a1 + v32;
    char v34 = (char *)a2 + v32;
    sub_1DE074090(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    uint64_t v37 = (char *)a1 + v36;
    uint64_t v38 = (char *)a2 + v36;
    sub_1DE074090(0, &qword_1EBEC1ED0, (void (*)(void))sub_1DE0737A0, (void (*)(void))sub_1DE0737F4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = a3[13];
    uint64_t v41 = (char *)a1 + v40;
    char v42 = (char *)a2 + v40;
    sub_1DE074090(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    uint64_t v44 = a3[14];
    char v45 = (char *)a1 + v44;
    long long v46 = (char *)a2 + v44;
    sub_1DE074090(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
    uint64_t v48 = a3[15];
    long long v49 = (char *)a1 + v48;
    int v50 = (char *)a2 + v48;
    sub_1DE074090(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
    uint64_t v52 = a3[16];
    char v53 = (char *)a1 + v52;
    char v54 = (char *)a2 + v52;
    sub_1DE074090(0, &qword_1EBEC1EC0, (void (*)(void))sub_1DE0547A8, (void (*)(void))sub_1DE0547FC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
    uint64_t v56 = a3[17];
    uint64_t v57 = (char *)a1 + v56;
    char v58 = (char *)a2 + v56;
    sub_1DE074090(0, &qword_1EBEC1F88, (void (*)(void))sub_1DE07410C, (void (*)(void))sub_1DE074160);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
  }
  return a1;
}

uint64_t destroy for MediaEngageEvent(uint64_t a1, int *a2)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_1DE074090(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_1DE074090(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_1DE074090(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_1DE074090(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_1DE074090(0, &qword_1EBEC1FF8, (void (*)(void))sub_1DE073158, (void (*)(void))sub_1DE0731AC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_1DE074090(0, &qword_1EBEC1F30, (void (*)(void))sub_1DE0733A8, (void (*)(void))sub_1DE0733FC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_1DE074090(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  sub_1DE074090(0, &qword_1EBEC1ED0, (void (*)(void))sub_1DE0737A0, (void (*)(void))sub_1DE0737F4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[13];
  sub_1DE074090(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = a1 + a2[14];
  sub_1DE074090(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
  uint64_t v25 = a1 + a2[15];
  sub_1DE074090(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
  uint64_t v27 = a1 + a2[16];
  sub_1DE074090(0, &qword_1EBEC1EC0, (void (*)(void))sub_1DE0547A8, (void (*)(void))sub_1DE0547FC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
  uint64_t v29 = a1 + a2[17];
  sub_1DE074090(0, &qword_1EBEC1F88, (void (*)(void))sub_1DE07410C, (void (*)(void))sub_1DE074160);
  uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8);

  return v31(v29, v30);
}

uint64_t initializeWithCopy for MediaEngageEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE074090(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE074090(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE074090(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE074090(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE074090(0, &qword_1EBEC1FF8, (void (*)(void))sub_1DE073158, (void (*)(void))sub_1DE0731AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE074090(0, &qword_1EBEC1F30, (void (*)(void))sub_1DE0733A8, (void (*)(void))sub_1DE0733FC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE074090(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE074090(0, &qword_1EBEC1ED0, (void (*)(void))sub_1DE0737A0, (void (*)(void))sub_1DE0737F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_1DE074090(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_1DE074090(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_1DE074090(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  sub_1DE074090(0, &qword_1EBEC1EC0, (void (*)(void))sub_1DE0547A8, (void (*)(void))sub_1DE0547FC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
  uint64_t v55 = a3[17];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  sub_1DE074090(0, &qword_1EBEC1F88, (void (*)(void))sub_1DE07410C, (void (*)(void))sub_1DE074160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
  return a1;
}

uint64_t assignWithCopy for MediaEngageEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE074090(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE074090(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE074090(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE074090(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE074090(0, &qword_1EBEC1FF8, (void (*)(void))sub_1DE073158, (void (*)(void))sub_1DE0731AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE074090(0, &qword_1EBEC1F30, (void (*)(void))sub_1DE0733A8, (void (*)(void))sub_1DE0733FC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE074090(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE074090(0, &qword_1EBEC1ED0, (void (*)(void))sub_1DE0737A0, (void (*)(void))sub_1DE0737F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_1DE074090(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_1DE074090(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_1DE074090(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 24))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  sub_1DE074090(0, &qword_1EBEC1EC0, (void (*)(void))sub_1DE0547A8, (void (*)(void))sub_1DE0547FC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 24))(v52, v53, v54);
  uint64_t v55 = a3[17];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  sub_1DE074090(0, &qword_1EBEC1F88, (void (*)(void))sub_1DE07410C, (void (*)(void))sub_1DE074160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 24))(v56, v57, v58);
  return a1;
}

uint64_t initializeWithTake for MediaEngageEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE074090(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE074090(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE074090(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE074090(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE074090(0, &qword_1EBEC1FF8, (void (*)(void))sub_1DE073158, (void (*)(void))sub_1DE0731AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE074090(0, &qword_1EBEC1F30, (void (*)(void))sub_1DE0733A8, (void (*)(void))sub_1DE0733FC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE074090(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE074090(0, &qword_1EBEC1ED0, (void (*)(void))sub_1DE0737A0, (void (*)(void))sub_1DE0737F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_1DE074090(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_1DE074090(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_1DE074090(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  sub_1DE074090(0, &qword_1EBEC1EC0, (void (*)(void))sub_1DE0547A8, (void (*)(void))sub_1DE0547FC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
  uint64_t v55 = a3[17];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  sub_1DE074090(0, &qword_1EBEC1F88, (void (*)(void))sub_1DE07410C, (void (*)(void))sub_1DE074160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
  return a1;
}

uint64_t assignWithTake for MediaEngageEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE074090(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE074090(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE074090(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE074090(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE074090(0, &qword_1EBEC1FF8, (void (*)(void))sub_1DE073158, (void (*)(void))sub_1DE0731AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE074090(0, &qword_1EBEC1F30, (void (*)(void))sub_1DE0733A8, (void (*)(void))sub_1DE0733FC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE074090(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE074090(0, &qword_1EBEC1ED0, (void (*)(void))sub_1DE0737A0, (void (*)(void))sub_1DE0737F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_1DE074090(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_1DE074090(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_1DE074090(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 40))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  sub_1DE074090(0, &qword_1EBEC1EC0, (void (*)(void))sub_1DE0547A8, (void (*)(void))sub_1DE0547FC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 40))(v52, v53, v54);
  uint64_t v55 = a3[17];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  sub_1DE074090(0, &qword_1EBEC1F88, (void (*)(void))sub_1DE07410C, (void (*)(void))sub_1DE074160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 40))(v56, v57, v58);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaEngageEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE079AC4);
}

uint64_t sub_1DE079AC4(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_28:
    return v9(v10, a2, v8);
  }
  sub_1DE074090(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_27:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_28;
  }
  sub_1DE074090(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_27;
  }
  sub_1DE074090(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_27;
  }
  sub_1DE074090(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_27;
  }
  sub_1DE074090(0, &qword_1EBEC1FF8, (void (*)(void))sub_1DE073158, (void (*)(void))sub_1DE0731AC);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_27;
  }
  sub_1DE074090(0, &qword_1EBEC1F30, (void (*)(void))sub_1DE0733A8, (void (*)(void))sub_1DE0733FC);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_27;
  }
  sub_1DE074090(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_27;
  }
  sub_1DE074090(0, &qword_1EBEC1ED0, (void (*)(void))sub_1DE0737A0, (void (*)(void))sub_1DE0737F4);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_27;
  }
  sub_1DE074090(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a2)
  {
    uint64_t v8 = v21;
    uint64_t v12 = *(void *)(v21 - 8);
    uint64_t v13 = a3[13];
    goto LABEL_27;
  }
  sub_1DE074090(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a2)
  {
    uint64_t v8 = v22;
    uint64_t v12 = *(void *)(v22 - 8);
    uint64_t v13 = a3[14];
    goto LABEL_27;
  }
  sub_1DE074090(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a2)
  {
    uint64_t v8 = v23;
    uint64_t v12 = *(void *)(v23 - 8);
    uint64_t v13 = a3[15];
    goto LABEL_27;
  }
  sub_1DE074090(0, &qword_1EBEC1EC0, (void (*)(void))sub_1DE0547A8, (void (*)(void))sub_1DE0547FC);
  if (*(_DWORD *)(*(void *)(v24 - 8) + 84) == a2)
  {
    uint64_t v8 = v24;
    uint64_t v12 = *(void *)(v24 - 8);
    uint64_t v13 = a3[16];
    goto LABEL_27;
  }
  sub_1DE074090(0, &qword_1EBEC1F88, (void (*)(void))sub_1DE07410C, (void (*)(void))sub_1DE074160);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48);
  uint64_t v28 = v26;
  uint64_t v29 = a1 + a3[17];

  return v27(v29, a2, v28);
}

uint64_t storeEnumTagSinglePayload for MediaEngageEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE07A240);
}

uint64_t sub_1DE07A240(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_1DE04D618();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_28:
    return v11(v12, a2, a2, v10);
  }
  sub_1DE074090(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_27:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_28;
  }
  sub_1DE074090(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_27;
  }
  sub_1DE074090(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_27;
  }
  sub_1DE074090(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_27;
  }
  sub_1DE074090(0, &qword_1EBEC1FF8, (void (*)(void))sub_1DE073158, (void (*)(void))sub_1DE0731AC);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_27;
  }
  sub_1DE074090(0, &qword_1EBEC1F30, (void (*)(void))sub_1DE0733A8, (void (*)(void))sub_1DE0733FC);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_27;
  }
  sub_1DE074090(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_27;
  }
  sub_1DE074090(0, &qword_1EBEC1ED0, (void (*)(void))sub_1DE0737A0, (void (*)(void))sub_1DE0737F4);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_27;
  }
  sub_1DE074090(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a3)
  {
    uint64_t v10 = v23;
    uint64_t v14 = *(void *)(v23 - 8);
    uint64_t v15 = a4[13];
    goto LABEL_27;
  }
  sub_1DE074090(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  if (*(_DWORD *)(*(void *)(v24 - 8) + 84) == a3)
  {
    uint64_t v10 = v24;
    uint64_t v14 = *(void *)(v24 - 8);
    uint64_t v15 = a4[14];
    goto LABEL_27;
  }
  sub_1DE074090(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  if (*(_DWORD *)(*(void *)(v25 - 8) + 84) == a3)
  {
    uint64_t v10 = v25;
    uint64_t v14 = *(void *)(v25 - 8);
    uint64_t v15 = a4[15];
    goto LABEL_27;
  }
  sub_1DE074090(0, &qword_1EBEC1EC0, (void (*)(void))sub_1DE0547A8, (void (*)(void))sub_1DE0547FC);
  if (*(_DWORD *)(*(void *)(v26 - 8) + 84) == a3)
  {
    uint64_t v10 = v26;
    uint64_t v14 = *(void *)(v26 - 8);
    uint64_t v15 = a4[16];
    goto LABEL_27;
  }
  sub_1DE074090(0, &qword_1EBEC1F88, (void (*)(void))sub_1DE07410C, (void (*)(void))sub_1DE074160);
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56);
  uint64_t v30 = v28;
  uint64_t v31 = a1 + a4[17];

  return v29(v31, a2, a2, v30);
}

void sub_1DE07A9B4()
{
  sub_1DE04D618();
  if (v0 <= 0x3F)
  {
    sub_1DE074090(319, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
    if (v1 <= 0x3F)
    {
      sub_1DE074090(319, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
      if (v2 <= 0x3F)
      {
        sub_1DE074090(319, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
        if (v3 <= 0x3F)
        {
          sub_1DE074090(319, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
          if (v4 <= 0x3F)
          {
            sub_1DE074090(319, &qword_1EBEC1FF8, (void (*)(void))sub_1DE073158, (void (*)(void))sub_1DE0731AC);
            if (v5 <= 0x3F)
            {
              sub_1DE074090(319, &qword_1EBEC1F30, (void (*)(void))sub_1DE0733A8, (void (*)(void))sub_1DE0733FC);
              if (v6 <= 0x3F)
              {
                sub_1DE074090(319, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
                if (v7 <= 0x3F)
                {
                  sub_1DE074090(319, &qword_1EBEC1ED0, (void (*)(void))sub_1DE0737A0, (void (*)(void))sub_1DE0737F4);
                  if (v8 <= 0x3F)
                  {
                    sub_1DE074090(319, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
                    if (v9 <= 0x3F)
                    {
                      sub_1DE074090(319, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
                      if (v10 <= 0x3F)
                      {
                        sub_1DE074090(319, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
                        if (v11 <= 0x3F)
                        {
                          sub_1DE074090(319, &qword_1EBEC1EC0, (void (*)(void))sub_1DE0547A8, (void (*)(void))sub_1DE0547FC);
                          if (v12 <= 0x3F)
                          {
                            sub_1DE074090(319, &qword_1EBEC1F88, (void (*)(void))sub_1DE07410C, (void (*)(void))sub_1DE074160);
                            if (v13 <= 0x3F) {
                              swift_initStructMetadata();
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for MediaEngageEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *a1 = *a2;
    a1 = (void *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DE47F330();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    unint64_t v10 = (char *)a1 + v8;
    unint64_t v11 = (char *)a2 + v8;
    *(void *)unint64_t v10 = *(void *)v11;
    v10[8] = v11[8];
    uint64_t v12 = *((void *)v11 + 3);
    *((void *)v10 + 2) = *((void *)v11 + 2);
    *((void *)v10 + 3) = v12;
    v10[32] = v11[32];
    uint64_t v13 = *((void *)v11 + 6);
    *((void *)v10 + 5) = *((void *)v11 + 5);
    *((void *)v10 + 6) = v13;
    v10[56] = v11[56];
    v10[57] = v11[57];
    uint64_t v14 = *((void *)v11 + 9);
    *((void *)v10 + 8) = *((void *)v11 + 8);
    *((void *)v10 + 9) = v14;
    v10[80] = v11[80];
    *(_OWORD *)(v10 + 88) = *(_OWORD *)(v11 + 88);
    *((void *)v10 + 13) = *((void *)v11 + 13);
    v10[112] = v11[112];
    *((void *)v10 + 15) = *((void *)v11 + 15);
    *((_DWORD *)v10 + 32) = *((_DWORD *)v11 + 32);
    v10[132] = v11[132];
    *(_WORD *)(v10 + 133) = *(_WORD *)(v11 + 133);
    uint64_t v15 = (char *)a1 + v9;
    uint64_t v16 = (char *)a2 + v9;
    uint64_t v17 = *((void *)v16 + 1);
    *(void *)uint64_t v15 = *(void *)v16;
    *((void *)v15 + 1) = v17;
    *((_WORD *)v15 + 8) = *((_WORD *)v16 + 8);
    uint64_t v18 = *((void *)v16 + 4);
    *((void *)v15 + 3) = *((void *)v16 + 3);
    *((void *)v15 + 4) = v18;
    uint64_t v19 = a3[7];
    uint64_t v20 = (char *)a1 + v19;
    long long v81 = a2;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = *((void *)v21 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v22)
    {
      *(_WORD *)uint64_t v20 = *(_WORD *)v21;
      *((void *)v20 + 1) = *((void *)v21 + 1);
      *((void *)v20 + 2) = v22;
      *((void *)v20 + 3) = *((void *)v21 + 3);
      uint64_t v23 = *((void *)v21 + 5);
      *((void *)v20 + 4) = *((void *)v21 + 4);
      *((void *)v20 + 5) = v23;
      uint64_t v24 = *((void *)v21 + 7);
      *((void *)v20 + 6) = *((void *)v21 + 6);
      *((void *)v20 + 7) = v24;
      uint64_t v25 = *((void *)v21 + 9);
      *((void *)v20 + 8) = *((void *)v21 + 8);
      *((void *)v20 + 9) = v25;
      v20[80] = v21[80];
      uint64_t v26 = *((void *)v21 + 12);
      *((void *)v20 + 11) = *((void *)v21 + 11);
      *((void *)v20 + 12) = v26;
      *((void *)v20 + 13) = *((void *)v21 + 13);
      v20[112] = v21[112];
      uint64_t v28 = *((void *)v21 + 15);
      uint64_t v27 = *((void *)v21 + 16);
      *((void *)v20 + 15) = v28;
      *((void *)v20 + 16) = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v30 = *((_OWORD *)v21 + 7);
      *((_OWORD *)v20 + 6) = *((_OWORD *)v21 + 6);
      *((_OWORD *)v20 + 7) = v30;
      *((void *)v20 + 16) = *((void *)v21 + 16);
      long long v31 = *((_OWORD *)v21 + 3);
      *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
      *((_OWORD *)v20 + 3) = v31;
      long long v32 = *((_OWORD *)v21 + 5);
      *((_OWORD *)v20 + 4) = *((_OWORD *)v21 + 4);
      *((_OWORD *)v20 + 5) = v32;
      long long v33 = *((_OWORD *)v21 + 1);
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
      *((_OWORD *)v20 + 1) = v33;
    }
    uint64_t v34 = a3[8];
    uint64_t v35 = (char *)a1 + v34;
    uint64_t v36 = (char *)v81 + v34;
    uint64_t v37 = *((void *)v36 + 2);
    if (v37 == 1)
    {
      *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
      *((void *)v35 + 2) = *((void *)v36 + 2);
    }
    else
    {
      *uint64_t v35 = *v36;
      *((void *)v35 + 1) = *((void *)v36 + 1);
      *((void *)v35 + 2) = v37;
      swift_bridgeObjectRetain();
    }
    uint64_t v38 = a3[9];
    uint64_t v39 = a3[10];
    uint64_t v40 = (char *)a1 + v38;
    uint64_t v41 = (char *)v81 + v38;
    *uint64_t v40 = *v41;
    uint64_t v42 = *((void *)v41 + 2);
    *((void *)v40 + 1) = *((void *)v41 + 1);
    *((void *)v40 + 2) = v42;
    *((_DWORD *)v40 + 6) = *((_DWORD *)v41 + 6);
    v40[28] = v41[28];
    uint64_t v43 = (char *)a1 + v39;
    uint64_t v44 = (char *)v81 + v39;
    *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
    *((_WORD *)v43 + 8) = *((_WORD *)v44 + 8);
    uint64_t v45 = a3[11];
    uint64_t v46 = a3[12];
    uint64_t v47 = (char *)a1 + v45;
    uint64_t v48 = (char *)v81 + v45;
    v47[16] = v48[16];
    uint64_t v49 = *((void *)v48 + 1);
    *(void *)uint64_t v47 = *(void *)v48;
    *((void *)v47 + 1) = v49;
    v47[17] = v48[17];
    uint64_t v50 = (void *)((char *)a1 + v46);
    uint64_t v51 = (void *)((char *)v81 + v46);
    uint64_t v52 = *(void *)((char *)v81 + v46 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v52)
    {
      *uint64_t v50 = *v51;
      v50[1] = v52;
      uint64_t v53 = v51[3];
      v50[2] = v51[2];
      v50[3] = v53;
      uint64_t v54 = v51[5];
      v50[4] = v51[4];
      v50[5] = v54;
      uint64_t v55 = v51[6];
      uint64_t v56 = v51[7];
      v50[6] = v55;
      v50[7] = v56;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v57 = *((_OWORD *)v51 + 1);
      *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
      *((_OWORD *)v50 + 1) = v57;
      long long v58 = *((_OWORD *)v51 + 3);
      *((_OWORD *)v50 + 2) = *((_OWORD *)v51 + 2);
      *((_OWORD *)v50 + 3) = v58;
    }
    uint64_t v59 = a3[13];
    uint64_t v60 = a3[14];
    uint64_t v61 = (char *)a1 + v59;
    uint64_t v62 = (char *)v81 + v59;
    *uint64_t v61 = *v62;
    uint64_t v63 = *((void *)v62 + 2);
    *((void *)v61 + 1) = *((void *)v62 + 1);
    *((void *)v61 + 2) = v63;
    *((_WORD *)v61 + 12) = *((_WORD *)v62 + 12);
    uint64_t v64 = *((void *)v62 + 5);
    *((void *)v61 + 4) = *((void *)v62 + 4);
    *((void *)v61 + 5) = v64;
    v61[48] = v62[48];
    char v65 = (char *)a1 + v60;
    long long v66 = (char *)v81 + v60;
    uint64_t v67 = *(void *)((char *)v81 + v60 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v67)
    {
      *(void *)char v65 = *(void *)v66;
      *((void *)v65 + 1) = v67;
      *((_WORD *)v65 + 8) = *((_WORD *)v66 + 8);
      *((void *)v65 + 3) = *((void *)v66 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v68 = *((_OWORD *)v66 + 1);
      *(_OWORD *)char v65 = *(_OWORD *)v66;
      *((_OWORD *)v65 + 1) = v68;
    }
    uint64_t v69 = a3[15];
    uint64_t v70 = a3[16];
    uint64_t v71 = (void *)((char *)a1 + v69);
    char v72 = (void *)((char *)v81 + v69);
    uint64_t v73 = v72[1];
    *uint64_t v71 = *v72;
    v71[1] = v73;
    *(_WORD *)((char *)a1 + v70) = *(_WORD *)((char *)v81 + v70);
    uint64_t v74 = a3[17];
    uint64_t v75 = (char *)a1 + v74;
    __n128 v76 = (char *)v81 + v74;
    uint64_t v77 = *(void *)((char *)v81 + v74 + 8);
    swift_bridgeObjectRetain();
    if (v77 == 1)
    {
      long long v78 = *((_OWORD *)v76 + 1);
      *(_OWORD *)uint64_t v75 = *(_OWORD *)v76;
      *((_OWORD *)v75 + 1) = v78;
      *((void *)v75 + 4) = *((void *)v76 + 4);
    }
    else
    {
      *(void *)uint64_t v75 = *(void *)v76;
      *((void *)v75 + 1) = v77;
      uint64_t v79 = *((void *)v76 + 3);
      *((void *)v75 + 2) = *((void *)v76 + 2);
      *((void *)v75 + 3) = v79;
      *((void *)v75 + 4) = *((void *)v76 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t destroy for MediaEngageEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[7] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + a2[8] + 16) != 1) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[12] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[14] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + a2[17] + 8);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for MediaEngageEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = *(void *)(v10 + 24);
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  *(void *)(v9 + 24) = v11;
  *(unsigned char *)(v9 + 32) = *(unsigned char *)(v10 + 32);
  uint64_t v12 = *(void *)(v10 + 48);
  *(void *)(v9 + 40) = *(void *)(v10 + 40);
  *(void *)(v9 + 48) = v12;
  *(unsigned char *)(v9 + 56) = *(unsigned char *)(v10 + 56);
  *(unsigned char *)(v9 + 57) = *(unsigned char *)(v10 + 57);
  uint64_t v13 = *(void *)(v10 + 72);
  *(void *)(v9 + 64) = *(void *)(v10 + 64);
  *(void *)(v9 + 72) = v13;
  *(unsigned char *)(v9 + 80) = *(unsigned char *)(v10 + 80);
  *(_OWORD *)(v9 + 88) = *(_OWORD *)(v10 + 88);
  *(void *)(v9 + 104) = *(void *)(v10 + 104);
  *(unsigned char *)(v9 + 112) = *(unsigned char *)(v10 + 112);
  *(void *)(v9 + 120) = *(void *)(v10 + 120);
  *(_DWORD *)(v9 + 128) = *(_DWORD *)(v10 + 128);
  *(unsigned char *)(v9 + 132) = *(unsigned char *)(v10 + 132);
  *(_WORD *)(v9 + 133) = *(_WORD *)(v10 + 133);
  uint64_t v14 = a1 + v8;
  uint64_t v15 = a2 + v8;
  uint64_t v16 = *(void *)(v15 + 8);
  *(void *)uint64_t v14 = *(void *)v15;
  *(void *)(v14 + 8) = v16;
  *(_WORD *)(v14 + 16) = *(_WORD *)(v15 + 16);
  uint64_t v17 = *(void *)(v15 + 32);
  *(void *)(v14 + 24) = *(void *)(v15 + 24);
  *(void *)(v14 + 32) = v17;
  uint64_t v79 = a3;
  uint64_t v18 = a3[7];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = *(void *)(a2 + v18 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v21)
  {
    *(_WORD *)uint64_t v19 = *(_WORD *)v20;
    *(void *)(v19 + 8) = *(void *)(v20 + 8);
    *(void *)(v19 + 16) = v21;
    *(void *)(v19 + 24) = *(void *)(v20 + 24);
    uint64_t v22 = *(void *)(v20 + 40);
    *(void *)(v19 + 32) = *(void *)(v20 + 32);
    *(void *)(v19 + 40) = v22;
    uint64_t v23 = *(void *)(v20 + 56);
    *(void *)(v19 + 48) = *(void *)(v20 + 48);
    *(void *)(v19 + 56) = v23;
    uint64_t v24 = *(void *)(v20 + 72);
    *(void *)(v19 + 64) = *(void *)(v20 + 64);
    *(void *)(v19 + 72) = v24;
    *(unsigned char *)(v19 + 80) = *(unsigned char *)(v20 + 80);
    uint64_t v25 = *(void *)(v20 + 96);
    *(void *)(v19 + 88) = *(void *)(v20 + 88);
    *(void *)(v19 + 96) = v25;
    *(void *)(v19 + 104) = *(void *)(v20 + 104);
    *(unsigned char *)(v19 + 112) = *(unsigned char *)(v20 + 112);
    uint64_t v27 = *(void *)(v20 + 120);
    uint64_t v26 = *(void *)(v20 + 128);
    *(void *)(v19 + 120) = v27;
    *(void *)(v19 + 128) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v28 = *(_OWORD *)(v20 + 112);
    *(_OWORD *)(v19 + 96) = *(_OWORD *)(v20 + 96);
    *(_OWORD *)(v19 + 112) = v28;
    *(void *)(v19 + 128) = *(void *)(v20 + 128);
    long long v29 = *(_OWORD *)(v20 + 48);
    *(_OWORD *)(v19 + 32) = *(_OWORD *)(v20 + 32);
    *(_OWORD *)(v19 + 48) = v29;
    long long v30 = *(_OWORD *)(v20 + 80);
    *(_OWORD *)(v19 + 64) = *(_OWORD *)(v20 + 64);
    *(_OWORD *)(v19 + 80) = v30;
    long long v31 = *(_OWORD *)(v20 + 16);
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    *(_OWORD *)(v19 + 16) = v31;
  }
  uint64_t v32 = v79[8];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  uint64_t v35 = *(void *)(v34 + 16);
  if (v35 == 1)
  {
    *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
    *(void *)(v33 + 16) = *(void *)(v34 + 16);
  }
  else
  {
    *(unsigned char *)uint64_t v33 = *(unsigned char *)v34;
    *(void *)(v33 + 8) = *(void *)(v34 + 8);
    *(void *)(v33 + 16) = v35;
    swift_bridgeObjectRetain();
  }
  uint64_t v36 = v79[9];
  uint64_t v37 = v79[10];
  uint64_t v38 = a1 + v36;
  uint64_t v39 = a2 + v36;
  *(unsigned char *)uint64_t v38 = *(unsigned char *)v39;
  uint64_t v40 = *(void *)(v39 + 16);
  *(void *)(v38 + 8) = *(void *)(v39 + 8);
  *(void *)(v38 + 16) = v40;
  *(_DWORD *)(v38 + 24) = *(_DWORD *)(v39 + 24);
  *(unsigned char *)(v38 + 28) = *(unsigned char *)(v39 + 28);
  uint64_t v41 = a1 + v37;
  uint64_t v42 = a2 + v37;
  *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
  *(_WORD *)(v41 + 16) = *(_WORD *)(v42 + 16);
  uint64_t v43 = v79[11];
  uint64_t v44 = v79[12];
  uint64_t v45 = a1 + v43;
  uint64_t v46 = a2 + v43;
  *(unsigned char *)(v45 + 16) = *(unsigned char *)(v46 + 16);
  uint64_t v47 = *(void *)(v46 + 8);
  *(void *)uint64_t v45 = *(void *)v46;
  *(void *)(v45 + 8) = v47;
  *(unsigned char *)(v45 + 17) = *(unsigned char *)(v46 + 17);
  uint64_t v48 = (void *)(a1 + v44);
  uint64_t v49 = (void *)(a2 + v44);
  uint64_t v50 = *(void *)(a2 + v44 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v50)
  {
    *uint64_t v48 = *v49;
    v48[1] = v50;
    uint64_t v51 = v49[3];
    v48[2] = v49[2];
    v48[3] = v51;
    uint64_t v52 = v49[5];
    v48[4] = v49[4];
    v48[5] = v52;
    uint64_t v53 = v49[6];
    uint64_t v54 = v49[7];
    v48[6] = v53;
    v48[7] = v54;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v55 = *((_OWORD *)v49 + 1);
    *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
    *((_OWORD *)v48 + 1) = v55;
    long long v56 = *((_OWORD *)v49 + 3);
    *((_OWORD *)v48 + 2) = *((_OWORD *)v49 + 2);
    *((_OWORD *)v48 + 3) = v56;
  }
  uint64_t v57 = v79[13];
  uint64_t v58 = v79[14];
  uint64_t v59 = a1 + v57;
  uint64_t v60 = a2 + v57;
  *(unsigned char *)uint64_t v59 = *(unsigned char *)v60;
  uint64_t v61 = *(void *)(v60 + 16);
  *(void *)(v59 + 8) = *(void *)(v60 + 8);
  *(void *)(v59 + 16) = v61;
  *(_WORD *)(v59 + 24) = *(_WORD *)(v60 + 24);
  uint64_t v62 = *(void *)(v60 + 40);
  *(void *)(v59 + 32) = *(void *)(v60 + 32);
  *(void *)(v59 + 40) = v62;
  *(unsigned char *)(v59 + 48) = *(unsigned char *)(v60 + 48);
  uint64_t v63 = a1 + v58;
  uint64_t v64 = a2 + v58;
  uint64_t v65 = *(void *)(a2 + v58 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v65)
  {
    *(void *)uint64_t v63 = *(void *)v64;
    *(void *)(v63 + 8) = v65;
    *(_WORD *)(v63 + 16) = *(_WORD *)(v64 + 16);
    *(void *)(v63 + 24) = *(void *)(v64 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v66 = *(_OWORD *)(v64 + 16);
    *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
    *(_OWORD *)(v63 + 16) = v66;
  }
  uint64_t v67 = v79[15];
  uint64_t v68 = v79[16];
  uint64_t v69 = (void *)(a1 + v67);
  uint64_t v70 = (void *)(a2 + v67);
  uint64_t v71 = v70[1];
  *uint64_t v69 = *v70;
  v69[1] = v71;
  *(_WORD *)(a1 + v68) = *(_WORD *)(a2 + v68);
  uint64_t v72 = v79[17];
  uint64_t v73 = a1 + v72;
  uint64_t v74 = a2 + v72;
  uint64_t v75 = *(void *)(a2 + v72 + 8);
  swift_bridgeObjectRetain();
  if (v75 == 1)
  {
    long long v76 = *(_OWORD *)(v74 + 16);
    *(_OWORD *)uint64_t v73 = *(_OWORD *)v74;
    *(_OWORD *)(v73 + 16) = v76;
    *(void *)(v73 + 32) = *(void *)(v74 + 32);
  }
  else
  {
    *(void *)uint64_t v73 = *(void *)v74;
    *(void *)(v73 + 8) = v75;
    uint64_t v77 = *(void *)(v74 + 24);
    *(void *)(v73 + 16) = *(void *)(v74 + 16);
    *(void *)(v73 + 24) = v77;
    *(void *)(v73 + 32) = *(void *)(v74 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for MediaEngageEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)(a2 + v7);
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(a2 + v7 + 4);
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(a2 + v7 + 8);
  *(void *)(v8 + 16) = *(void *)(a2 + v7 + 16);
  *(void *)(v8 + 24) = *(void *)(a2 + v7 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  uint64_t v10 = *(void *)(v9 + 48);
  *(unsigned char *)(v8 + 56) = *(unsigned char *)(v9 + 56);
  *(void *)(v8 + 48) = v10;
  *(unsigned char *)(v8 + 57) = *(unsigned char *)(v9 + 57);
  *(void *)(v8 + 64) = *(void *)(v9 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v9 + 72);
  *(unsigned char *)(v8 + 80) = *(unsigned char *)(v9 + 80);
  *(void *)(v8 + 72) = v11;
  *(void *)(v8 + 88) = *(void *)(v9 + 88);
  *(void *)(v8 + 96) = *(void *)(v9 + 96);
  *(void *)(v8 + 104) = *(void *)(v9 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 112) = *(unsigned char *)(v9 + 112);
  *(void *)(v8 + 120) = *(void *)(v9 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 128) = *(unsigned char *)(v9 + 128);
  *(unsigned char *)(v8 + 129) = *(unsigned char *)(v9 + 129);
  *(unsigned char *)(v8 + 130) = *(unsigned char *)(v9 + 130);
  *(unsigned char *)(v8 + 131) = *(unsigned char *)(v9 + 131);
  *(unsigned char *)(v8 + 132) = *(unsigned char *)(v9 + 132);
  *(unsigned char *)(v8 + 133) = *(unsigned char *)(v9 + 133);
  *(unsigned char *)(v8 + 134) = *(unsigned char *)(v9 + 134);
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(void *)uint64_t v13 = *(void *)(a2 + v12);
  *(void *)(v13 + 8) = *(void *)(a2 + v12 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v13 + 16) = *(unsigned char *)(v14 + 16);
  *(unsigned char *)(v13 + 17) = *(unsigned char *)(v14 + 17);
  *(void *)(v13 + 24) = *(void *)(v14 + 24);
  *(void *)(v13 + 32) = *(void *)(v14 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = *(void *)(a1 + v15 + 16);
  uint64_t v19 = *(void *)(a2 + v15 + 16);
  if (v18)
  {
    if (v19)
    {
      *(unsigned char *)uint64_t v16 = *(unsigned char *)v17;
      *(unsigned char *)(v16 + 1) = *(unsigned char *)(v17 + 1);
      *(void *)(v16 + 8) = *(void *)(v17 + 8);
      *(void *)(v16 + 16) = *(void *)(v17 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v16 + 24) = *(_DWORD *)(v17 + 24);
      *(_DWORD *)(v16 + 28) = *(_DWORD *)(v17 + 28);
      *(void *)(v16 + 32) = *(void *)(v17 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v16 + 40) = *(void *)(v17 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v16 + 48) = *(void *)(v17 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v16 + 56) = *(void *)(v17 + 56);
      *(void *)(v16 + 64) = *(void *)(v17 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v16 + 72) = *(void *)(v17 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v16 + 80) = *(unsigned char *)(v17 + 80);
      *(void *)(v16 + 88) = *(void *)(v17 + 88);
      *(void *)(v16 + 96) = *(void *)(v17 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v20 = *(void *)(v17 + 104);
      *(unsigned char *)(v16 + 112) = *(unsigned char *)(v17 + 112);
      *(void *)(v16 + 104) = v20;
      *(void *)(v16 + 120) = *(void *)(v17 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v16 + 128) = *(void *)(v17 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DE069980(v16);
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      long long v22 = *(_OWORD *)(v17 + 64);
      long long v24 = *(_OWORD *)(v17 + 16);
      long long v23 = *(_OWORD *)(v17 + 32);
      *(_OWORD *)(v16 + 48) = *(_OWORD *)(v17 + 48);
      *(_OWORD *)(v16 + 64) = v22;
      *(_OWORD *)(v16 + 16) = v24;
      *(_OWORD *)(v16 + 32) = v23;
      long long v26 = *(_OWORD *)(v17 + 96);
      long long v25 = *(_OWORD *)(v17 + 112);
      long long v27 = *(_OWORD *)(v17 + 80);
      *(void *)(v16 + 128) = *(void *)(v17 + 128);
      *(_OWORD *)(v16 + 96) = v26;
      *(_OWORD *)(v16 + 112) = v25;
      *(_OWORD *)(v16 + 80) = v27;
    }
  }
  else if (v19)
  {
    *(unsigned char *)uint64_t v16 = *(unsigned char *)v17;
    *(unsigned char *)(v16 + 1) = *(unsigned char *)(v17 + 1);
    *(void *)(v16 + 8) = *(void *)(v17 + 8);
    *(void *)(v16 + 16) = *(void *)(v17 + 16);
    *(_DWORD *)(v16 + 24) = *(_DWORD *)(v17 + 24);
    *(_DWORD *)(v16 + 28) = *(_DWORD *)(v17 + 28);
    *(void *)(v16 + 32) = *(void *)(v17 + 32);
    *(void *)(v16 + 40) = *(void *)(v17 + 40);
    *(void *)(v16 + 48) = *(void *)(v17 + 48);
    *(void *)(v16 + 56) = *(void *)(v17 + 56);
    *(void *)(v16 + 64) = *(void *)(v17 + 64);
    *(void *)(v16 + 72) = *(void *)(v17 + 72);
    *(unsigned char *)(v16 + 80) = *(unsigned char *)(v17 + 80);
    *(void *)(v16 + 88) = *(void *)(v17 + 88);
    *(void *)(v16 + 96) = *(void *)(v17 + 96);
    uint64_t v21 = *(void *)(v17 + 104);
    *(unsigned char *)(v16 + 112) = *(unsigned char *)(v17 + 112);
    *(void *)(v16 + 104) = v21;
    *(void *)(v16 + 120) = *(void *)(v17 + 120);
    *(void *)(v16 + 128) = *(void *)(v17 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    long long v28 = *(_OWORD *)(v17 + 16);
    long long v29 = *(_OWORD *)(v17 + 32);
    long long v30 = *(_OWORD *)(v17 + 64);
    *(_OWORD *)(v16 + 48) = *(_OWORD *)(v17 + 48);
    *(_OWORD *)(v16 + 64) = v30;
    *(_OWORD *)(v16 + 16) = v28;
    *(_OWORD *)(v16 + 32) = v29;
    long long v31 = *(_OWORD *)(v17 + 80);
    long long v32 = *(_OWORD *)(v17 + 96);
    long long v33 = *(_OWORD *)(v17 + 112);
    *(void *)(v16 + 128) = *(void *)(v17 + 128);
    *(_OWORD *)(v16 + 96) = v32;
    *(_OWORD *)(v16 + 112) = v33;
    *(_OWORD *)(v16 + 80) = v31;
  }
  uint64_t v34 = a3[8];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = (long long *)(a2 + v34);
  uint64_t v37 = *(void *)(a1 + v34 + 16);
  uint64_t v38 = *(void *)(a2 + v34 + 16);
  if (v37 == 1)
  {
    if (v38 == 1)
    {
      long long v39 = *v36;
      *(void *)(v35 + 16) = *((void *)v36 + 2);
      *(_OWORD *)uint64_t v35 = v39;
    }
    else
    {
      *(unsigned char *)uint64_t v35 = *(unsigned char *)v36;
      *(void *)(v35 + 8) = *((void *)v36 + 1);
      *(void *)(v35 + 16) = *((void *)v36 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v38 == 1)
  {
    sub_1DE05D370(v35);
    uint64_t v40 = *((void *)v36 + 2);
    *(_OWORD *)uint64_t v35 = *v36;
    *(void *)(v35 + 16) = v40;
  }
  else
  {
    *(unsigned char *)uint64_t v35 = *(unsigned char *)v36;
    *(void *)(v35 + 8) = *((void *)v36 + 1);
    *(void *)(v35 + 16) = *((void *)v36 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v41 = a3[9];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = a2 + v41;
  *(unsigned char *)uint64_t v42 = *(unsigned char *)(a2 + v41);
  *(void *)(v42 + 8) = *(void *)(a2 + v41 + 8);
  *(void *)(v42 + 16) = *(void *)(a2 + v41 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v44 = *(_DWORD *)(v43 + 24);
  *(unsigned char *)(v42 + 28) = *(unsigned char *)(v43 + 28);
  *(_DWORD *)(v42 + 24) = v44;
  uint64_t v45 = a3[10];
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  *(void *)uint64_t v46 = *(void *)v47;
  *(unsigned char *)(v46 + 8) = *(unsigned char *)(v47 + 8);
  *(_DWORD *)(v46 + 12) = *(_DWORD *)(v47 + 12);
  *(unsigned char *)(v46 + 16) = *(unsigned char *)(v47 + 16);
  *(unsigned char *)(v46 + 17) = *(unsigned char *)(v47 + 17);
  uint64_t v48 = a3[11];
  uint64_t v49 = a1 + v48;
  uint64_t v50 = a2 + v48;
  *(void *)uint64_t v49 = *(void *)(a2 + v48);
  *(void *)(v49 + 8) = *(void *)(a2 + v48 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v49 + 16) = *(unsigned char *)(v50 + 16);
  *(unsigned char *)(v49 + 17) = *(unsigned char *)(v50 + 17);
  uint64_t v51 = a3[12];
  uint64_t v52 = (void *)(a1 + v51);
  uint64_t v53 = (void *)(a2 + v51);
  uint64_t v54 = *(void *)(a1 + v51 + 8);
  uint64_t v55 = *(void *)(a2 + v51 + 8);
  if (v54)
  {
    if (v55)
    {
      *uint64_t v52 = *v53;
      v52[1] = v53[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v52[2] = v53[2];
      v52[3] = v53[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v52[4] = v53[4];
      v52[5] = v53[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v52[6] = v53[6];
      v52[7] = v53[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DE07C4A4((uint64_t)v52);
      long long v56 = *((_OWORD *)v53 + 3);
      long long v58 = *(_OWORD *)v53;
      long long v57 = *((_OWORD *)v53 + 1);
      *((_OWORD *)v52 + 2) = *((_OWORD *)v53 + 2);
      *((_OWORD *)v52 + 3) = v56;
      *(_OWORD *)uint64_t v52 = v58;
      *((_OWORD *)v52 + 1) = v57;
    }
  }
  else if (v55)
  {
    *uint64_t v52 = *v53;
    v52[1] = v53[1];
    v52[2] = v53[2];
    v52[3] = v53[3];
    v52[4] = v53[4];
    v52[5] = v53[5];
    v52[6] = v53[6];
    v52[7] = v53[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v59 = *(_OWORD *)v53;
    long long v60 = *((_OWORD *)v53 + 1);
    long long v61 = *((_OWORD *)v53 + 3);
    *((_OWORD *)v52 + 2) = *((_OWORD *)v53 + 2);
    *((_OWORD *)v52 + 3) = v61;
    *(_OWORD *)uint64_t v52 = v59;
    *((_OWORD *)v52 + 1) = v60;
  }
  uint64_t v62 = a3[13];
  uint64_t v63 = a1 + v62;
  uint64_t v64 = a2 + v62;
  *(unsigned char *)uint64_t v63 = *(unsigned char *)(a2 + v62);
  *(void *)(v63 + 8) = *(void *)(a2 + v62 + 8);
  *(void *)(v63 + 16) = *(void *)(a2 + v62 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v63 + 24) = *(unsigned char *)(v64 + 24);
  *(unsigned char *)(v63 + 25) = *(unsigned char *)(v64 + 25);
  *(void *)(v63 + 32) = *(void *)(v64 + 32);
  *(void *)(v63 + 40) = *(void *)(v64 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v63 + 48) = *(unsigned char *)(v64 + 48);
  uint64_t v65 = a3[14];
  uint64_t v66 = a1 + v65;
  uint64_t v67 = a2 + v65;
  uint64_t v68 = *(void *)(a1 + v65 + 8);
  uint64_t v69 = *(void *)(a2 + v65 + 8);
  if (v68)
  {
    if (v69)
    {
      *(void *)uint64_t v66 = *(void *)v67;
      *(void *)(v66 + 8) = *(void *)(v67 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v66 + 16) = *(unsigned char *)(v67 + 16);
      *(unsigned char *)(v66 + 17) = *(unsigned char *)(v67 + 17);
      *(void *)(v66 + 24) = *(void *)(v67 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DE07C4F8(v66);
      long long v70 = *(_OWORD *)(v67 + 16);
      *(_OWORD *)uint64_t v66 = *(_OWORD *)v67;
      *(_OWORD *)(v66 + 16) = v70;
    }
  }
  else if (v69)
  {
    *(void *)uint64_t v66 = *(void *)v67;
    *(void *)(v66 + 8) = *(void *)(v67 + 8);
    *(unsigned char *)(v66 + 16) = *(unsigned char *)(v67 + 16);
    *(unsigned char *)(v66 + 17) = *(unsigned char *)(v67 + 17);
    *(void *)(v66 + 24) = *(void *)(v67 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v71 = *(_OWORD *)(v67 + 16);
    *(_OWORD *)uint64_t v66 = *(_OWORD *)v67;
    *(_OWORD *)(v66 + 16) = v71;
  }
  uint64_t v72 = a3[15];
  uint64_t v73 = (void *)(a1 + v72);
  uint64_t v74 = (void *)(a2 + v72);
  *uint64_t v73 = *v74;
  v73[1] = v74[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + a3[16]) = *(_WORD *)(a2 + a3[16]);
  uint64_t v75 = a3[17];
  uint64_t v76 = a1 + v75;
  uint64_t v77 = (long long *)(a2 + v75);
  uint64_t v78 = *(void *)(a1 + v75 + 8);
  uint64_t v79 = *((void *)v77 + 1);
  if (v78 == 1)
  {
    if (v79 == 1)
    {
      long long v80 = *v77;
      long long v81 = v77[1];
      *(void *)(v76 + 32) = *((void *)v77 + 4);
      *(_OWORD *)uint64_t v76 = v80;
      *(_OWORD *)(v76 + 16) = v81;
    }
    else
    {
      *(void *)uint64_t v76 = *(void *)v77;
      *(void *)(v76 + 8) = *((void *)v77 + 1);
      *(void *)(v76 + 16) = *((void *)v77 + 2);
      *(void *)(v76 + 24) = *((void *)v77 + 3);
      *(void *)(v76 + 32) = *((void *)v77 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v79 == 1)
  {
    sub_1DE07C54C(v76);
    uint64_t v82 = *((void *)v77 + 4);
    long long v83 = v77[1];
    *(_OWORD *)uint64_t v76 = *v77;
    *(_OWORD *)(v76 + 16) = v83;
    *(void *)(v76 + 32) = v82;
  }
  else
  {
    *(void *)uint64_t v76 = *(void *)v77;
    *(void *)(v76 + 8) = *((void *)v77 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v76 + 16) = *((void *)v77 + 2);
    *(void *)(v76 + 24) = *((void *)v77 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v76 + 32) = *((void *)v77 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t sub_1DE07C4A4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DE07C4F8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DE07C54C(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for MediaEngageEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  long long v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  *(void *)(v9 + 127) = *(void *)(v10 + 127);
  long long v12 = *(_OWORD *)(v10 + 112);
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(v10 + 96);
  *(_OWORD *)(v9 + 112) = v12;
  long long v13 = *(_OWORD *)(v10 + 80);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)(v10 + 64);
  *(_OWORD *)(v9 + 80) = v13;
  long long v14 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v14;
  uint64_t v15 = a1 + v8;
  uint64_t v16 = a2 + v8;
  *(void *)(v15 + 32) = *(void *)(v16 + 32);
  long long v17 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v17;
  uint64_t v18 = a3[7];
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  *(void *)(v20 + 128) = *(void *)(v21 + 128);
  long long v22 = *(_OWORD *)(v21 + 48);
  *(_OWORD *)(v20 + 32) = *(_OWORD *)(v21 + 32);
  *(_OWORD *)(v20 + 48) = v22;
  long long v23 = *(_OWORD *)(v21 + 112);
  *(_OWORD *)(v20 + 96) = *(_OWORD *)(v21 + 96);
  *(_OWORD *)(v20 + 112) = v23;
  long long v24 = *(_OWORD *)(v21 + 80);
  *(_OWORD *)(v20 + 64) = *(_OWORD *)(v21 + 64);
  *(_OWORD *)(v20 + 80) = v24;
  long long v25 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v25;
  uint64_t v26 = a1 + v19;
  uint64_t v27 = a2 + v19;
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  *(void *)(v26 + 16) = *(void *)(v27 + 16);
  uint64_t v28 = a3[9];
  uint64_t v29 = a3[10];
  long long v30 = (_OWORD *)(a1 + v28);
  long long v31 = (_OWORD *)(a2 + v28);
  _OWORD *v30 = *v31;
  *(_OWORD *)((char *)v30 + 13) = *(_OWORD *)((char *)v31 + 13);
  uint64_t v32 = a1 + v29;
  uint64_t v33 = a2 + v29;
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  *(_WORD *)(v32 + 16) = *(_WORD *)(v33 + 16);
  uint64_t v34 = a3[11];
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v34;
  uint64_t v37 = a2 + v34;
  *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
  *(_WORD *)(v36 + 16) = *(_WORD *)(v37 + 16);
  uint64_t v38 = (_OWORD *)(a1 + v35);
  long long v39 = (long long *)(a2 + v35);
  long long v40 = *v39;
  long long v41 = v39[1];
  long long v42 = v39[3];
  v38[2] = v39[2];
  v38[3] = v42;
  *uint64_t v38 = v40;
  v38[1] = v41;
  uint64_t v43 = a3[13];
  uint64_t v44 = a3[14];
  uint64_t v45 = a1 + v43;
  uint64_t v46 = a2 + v43;
  long long v47 = *(_OWORD *)(v46 + 16);
  *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
  *(_OWORD *)(v45 + 16) = v47;
  *(_OWORD *)(v45 + 32) = *(_OWORD *)(v46 + 32);
  *(unsigned char *)(v45 + 48) = *(unsigned char *)(v46 + 48);
  uint64_t v48 = (_OWORD *)(a1 + v44);
  uint64_t v49 = (_OWORD *)(a2 + v44);
  long long v50 = v49[1];
  *uint64_t v48 = *v49;
  v48[1] = v50;
  uint64_t v51 = a3[16];
  *(_OWORD *)(a1 + a3[15]) = *(_OWORD *)(a2 + a3[15]);
  *(_WORD *)(a1 + v51) = *(_WORD *)(a2 + v51);
  uint64_t v52 = a3[17];
  uint64_t v53 = a1 + v52;
  uint64_t v54 = a2 + v52;
  *(void *)(v53 + 32) = *(void *)(v54 + 32);
  long long v55 = *(_OWORD *)(v54 + 16);
  *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
  *(_OWORD *)(v53 + 16) = v55;
  return a1;
}

uint64_t assignWithTake for MediaEngageEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)(a2 + v7);
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(a2 + v7 + 4);
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(a2 + v7 + 8);
  uint64_t v10 = *(void *)(a2 + v7 + 24);
  *(void *)(v8 + 16) = *(void *)(a2 + v7 + 16);
  *(void *)(v8 + 24) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
  uint64_t v11 = *(void *)(v9 + 48);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  *(void *)(v8 + 48) = v11;
  *(unsigned char *)(v8 + 56) = *(unsigned char *)(v9 + 56);
  *(unsigned char *)(v8 + 57) = *(unsigned char *)(v9 + 57);
  *(void *)(v8 + 64) = *(void *)(v9 + 64);
  swift_bridgeObjectRelease();
  *(void *)(v8 + 72) = *(void *)(v9 + 72);
  *(unsigned char *)(v8 + 80) = *(unsigned char *)(v9 + 80);
  *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
  *(void *)(v8 + 104) = *(void *)(v9 + 104);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 112) = *(unsigned char *)(v9 + 112);
  *(void *)(v8 + 120) = *(void *)(v9 + 120);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 128) = *(unsigned char *)(v9 + 128);
  *(unsigned char *)(v8 + 129) = *(unsigned char *)(v9 + 129);
  *(unsigned char *)(v8 + 130) = *(unsigned char *)(v9 + 130);
  *(unsigned char *)(v8 + 131) = *(unsigned char *)(v9 + 131);
  *(unsigned char *)(v8 + 132) = *(unsigned char *)(v9 + 132);
  *(unsigned char *)(v8 + 133) = *(unsigned char *)(v9 + 133);
  *(unsigned char *)(v8 + 134) = *(unsigned char *)(v9 + 134);
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)(a2 + v12 + 8);
  *(void *)uint64_t v13 = *(void *)(a2 + v12);
  *(void *)(v13 + 8) = v15;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v13 + 16) = *(unsigned char *)(v14 + 16);
  *(unsigned char *)(v13 + 17) = *(unsigned char *)(v14 + 17);
  uint64_t v16 = *(void *)(v14 + 32);
  *(void *)(v13 + 24) = *(void *)(v14 + 24);
  *(void *)(v13 + 32) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  if (*(void *)(a1 + v17 + 16))
  {
    uint64_t v20 = *(void *)(v19 + 16);
    if (v20)
    {
      *(_WORD *)uint64_t v18 = *(_WORD *)v19;
      *(void *)(v18 + 8) = *(void *)(v19 + 8);
      *(void *)(v18 + 16) = v20;
      swift_bridgeObjectRelease();
      *(void *)(v18 + 24) = *(void *)(v19 + 24);
      *(void *)(v18 + 32) = *(void *)(v19 + 32);
      swift_bridgeObjectRelease();
      *(void *)(v18 + 40) = *(void *)(v19 + 40);
      swift_bridgeObjectRelease();
      *(void *)(v18 + 48) = *(void *)(v19 + 48);
      swift_bridgeObjectRelease();
      uint64_t v21 = *(void *)(v19 + 64);
      *(void *)(v18 + 56) = *(void *)(v19 + 56);
      *(void *)(v18 + 64) = v21;
      swift_bridgeObjectRelease();
      *(void *)(v18 + 72) = *(void *)(v19 + 72);
      swift_bridgeObjectRelease();
      *(unsigned char *)(v18 + 80) = *(unsigned char *)(v19 + 80);
      uint64_t v22 = *(void *)(v19 + 96);
      *(void *)(v18 + 88) = *(void *)(v19 + 88);
      *(void *)(v18 + 96) = v22;
      swift_bridgeObjectRelease();
      *(void *)(v18 + 104) = *(void *)(v19 + 104);
      *(unsigned char *)(v18 + 112) = *(unsigned char *)(v19 + 112);
      *(void *)(v18 + 120) = *(void *)(v19 + 120);
      swift_bridgeObjectRelease();
      *(void *)(v18 + 128) = *(void *)(v19 + 128);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1DE069980(v18);
  }
  long long v23 = *(_OWORD *)(v19 + 112);
  *(_OWORD *)(v18 + 96) = *(_OWORD *)(v19 + 96);
  *(_OWORD *)(v18 + 112) = v23;
  *(void *)(v18 + 128) = *(void *)(v19 + 128);
  long long v24 = *(_OWORD *)(v19 + 48);
  *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
  *(_OWORD *)(v18 + 48) = v24;
  long long v25 = *(_OWORD *)(v19 + 80);
  *(_OWORD *)(v18 + 64) = *(_OWORD *)(v19 + 64);
  *(_OWORD *)(v18 + 80) = v25;
  long long v26 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v26;
LABEL_6:
  uint64_t v27 = a3[8];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  if (*(void *)(a1 + v27 + 16) == 1)
  {
LABEL_9:
    *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
    *(void *)(v28 + 16) = *(void *)(v29 + 16);
    goto LABEL_11;
  }
  uint64_t v30 = *(void *)(v29 + 16);
  if (v30 == 1)
  {
    sub_1DE05D370(v28);
    goto LABEL_9;
  }
  *(unsigned char *)uint64_t v28 = *(unsigned char *)v29;
  *(void *)(v28 + 8) = *(void *)(v29 + 8);
  *(void *)(v28 + 16) = v30;
  swift_bridgeObjectRelease();
LABEL_11:
  uint64_t v31 = a3[9];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  *(unsigned char *)uint64_t v32 = *(unsigned char *)(a2 + v31);
  uint64_t v34 = *(void *)(a2 + v31 + 16);
  *(void *)(v32 + 8) = *(void *)(a2 + v31 + 8);
  *(void *)(v32 + 16) = v34;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v32 + 28) = *(unsigned char *)(v33 + 28);
  *(_DWORD *)(v32 + 24) = *(_DWORD *)(v33 + 24);
  uint64_t v35 = a3[10];
  uint64_t v36 = a3[11];
  uint64_t v37 = a1 + v35;
  uint64_t v38 = a2 + v35;
  *(void *)uint64_t v37 = *(void *)v38;
  *(unsigned char *)(v37 + 8) = *(unsigned char *)(v38 + 8);
  *(_DWORD *)(v37 + 12) = *(_DWORD *)(v38 + 12);
  *(unsigned char *)(v37 + 16) = *(unsigned char *)(v38 + 16);
  *(unsigned char *)(v37 + 17) = *(unsigned char *)(v38 + 17);
  uint64_t v39 = a1 + v36;
  uint64_t v40 = a2 + v36;
  uint64_t v41 = *(void *)(a2 + v36);
  uint64_t v42 = *(void *)(a2 + v36 + 8);
  *(void *)uint64_t v39 = v41;
  *(void *)(v39 + 8) = v42;
  swift_bridgeObjectRelease();
  *(_WORD *)(v39 + 16) = *(_WORD *)(v40 + 16);
  uint64_t v43 = a3[12];
  uint64_t v44 = (void *)(a1 + v43);
  uint64_t v45 = (void *)(a2 + v43);
  if (*(void *)(a1 + v43 + 8))
  {
    uint64_t v46 = v45[1];
    if (v46)
    {
      *uint64_t v44 = *v45;
      v44[1] = v46;
      swift_bridgeObjectRelease();
      uint64_t v47 = v45[3];
      v44[2] = v45[2];
      v44[3] = v47;
      swift_bridgeObjectRelease();
      uint64_t v48 = v45[5];
      v44[4] = v45[4];
      v44[5] = v48;
      swift_bridgeObjectRelease();
      uint64_t v49 = v45[7];
      v44[6] = v45[6];
      v44[7] = v49;
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_1DE07C4A4((uint64_t)v44);
  }
  long long v50 = *((_OWORD *)v45 + 1);
  *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
  *((_OWORD *)v44 + 1) = v50;
  long long v51 = *((_OWORD *)v45 + 3);
  *((_OWORD *)v44 + 2) = *((_OWORD *)v45 + 2);
  *((_OWORD *)v44 + 3) = v51;
LABEL_16:
  uint64_t v52 = a3[13];
  uint64_t v53 = a1 + v52;
  uint64_t v54 = a2 + v52;
  *(unsigned char *)uint64_t v53 = *(unsigned char *)(a2 + v52);
  uint64_t v55 = *(void *)(a2 + v52 + 16);
  *(void *)(v53 + 8) = *(void *)(a2 + v52 + 8);
  *(void *)(v53 + 16) = v55;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v53 + 24) = *(unsigned char *)(v54 + 24);
  *(unsigned char *)(v53 + 25) = *(unsigned char *)(v54 + 25);
  uint64_t v56 = *(void *)(v54 + 40);
  *(void *)(v53 + 32) = *(void *)(v54 + 32);
  *(void *)(v53 + 40) = v56;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v53 + 48) = *(unsigned char *)(v54 + 48);
  uint64_t v57 = a3[14];
  uint64_t v58 = a1 + v57;
  uint64_t v59 = a2 + v57;
  if (*(void *)(a1 + v57 + 8))
  {
    uint64_t v60 = *(void *)(v59 + 8);
    if (v60)
    {
      *(void *)uint64_t v58 = *(void *)v59;
      *(void *)(v58 + 8) = v60;
      swift_bridgeObjectRelease();
      *(unsigned char *)(v58 + 16) = *(unsigned char *)(v59 + 16);
      *(unsigned char *)(v58 + 17) = *(unsigned char *)(v59 + 17);
      *(void *)(v58 + 24) = *(void *)(v59 + 24);
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_1DE07C4F8(v58);
  }
  long long v61 = *(_OWORD *)(v59 + 16);
  *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
  *(_OWORD *)(v58 + 16) = v61;
LABEL_21:
  uint64_t v62 = a3[15];
  uint64_t v63 = (void *)(a1 + v62);
  uint64_t v64 = (uint64_t *)(a2 + v62);
  uint64_t v66 = *v64;
  uint64_t v65 = v64[1];
  *uint64_t v63 = v66;
  v63[1] = v65;
  swift_bridgeObjectRelease();
  uint64_t v67 = a3[17];
  *(_WORD *)(a1 + a3[16]) = *(_WORD *)(a2 + a3[16]);
  uint64_t v68 = (void *)(a1 + v67);
  uint64_t v69 = (void *)(a2 + v67);
  if (*(void *)(a1 + v67 + 8) != 1)
  {
    uint64_t v70 = v69[1];
    if (v70 != 1)
    {
      *uint64_t v68 = *v69;
      v68[1] = v70;
      swift_bridgeObjectRelease();
      uint64_t v72 = v69[3];
      v68[2] = v69[2];
      v68[3] = v72;
      swift_bridgeObjectRelease();
      v68[4] = v69[4];
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1DE07C54C(a1 + v67);
  }
  long long v71 = *((_OWORD *)v69 + 1);
  *(_OWORD *)uint64_t v68 = *(_OWORD *)v69;
  *((_OWORD *)v68 + 1) = v71;
  v68[4] = v69[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaEngageEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE07CCA4);
}

uint64_t sub_1DE07CCA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DE47F330();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for MediaEngageEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE07CD7C);
}

uint64_t sub_1DE07CD7C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1DE47F330();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1DE07CE3C()
{
  uint64_t result = sub_1DE47F330();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MediaEngageEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *uint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE07D014);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaEngageEvent.Model.CodingKeys()
{
  return &type metadata for MediaEngageEvent.Model.CodingKeys;
}

unint64_t sub_1DE07D050()
{
  unint64_t result = qword_1EABA1D88;
  if (!qword_1EABA1D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1D88);
  }
  return result;
}

unint64_t sub_1DE07D0A8()
{
  unint64_t result = qword_1EABA1D90;
  if (!qword_1EABA1D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1D90);
  }
  return result;
}

unint64_t sub_1DE07D100()
{
  unint64_t result = qword_1EABA1D98;
  if (!qword_1EABA1D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1D98);
  }
  return result;
}

uint64_t sub_1DE07D154(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x746144616964656DLL && a2 == 0xE900000000000061 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DE4BE7A0 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DE4BE7C0 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001DE4BDDA0 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6569566575737369 && a2 == 0xED00006174614477 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEF617461446E6F69 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001DE4BE7E0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    char v6 = sub_1DE480660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 13;
    }
    else {
      return 14;
    }
  }
}

uint64_t sub_1DE07D76C(uint64_t a1, uint64_t a2)
{
  uint64_t v44 = a2;
  uint64_t v45 = a1;
  uint64_t v2 = sub_1DE47E480();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE07DCCC(0, &qword_1EBEC14D0, MEMORY[0x1E4F26EA0]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v37 - v7;
  uint64_t v9 = sub_1DE47E4E0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE07DCCC(0, (unint64_t *)&unk_1EBEC1C60, MEMORY[0x1E4F26ED8]);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v16 = (char *)v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)v37 - v17;
  sub_1DE47E4B0();
  sub_1DE07DD20((uint64_t)v18, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v16, 1, v9) == 1)
  {
    uint64_t v19 = (void (*)(uint64_t))MEMORY[0x1E4F26ED8];
    sub_1DE07DDA0((uint64_t)v18, (unint64_t *)&unk_1EBEC1C60, MEMORY[0x1E4F26ED8]);
    uint64_t v20 = (uint64_t)v16;
    uint64_t v21 = (unint64_t *)&unk_1EBEC1C60;
    uint64_t v22 = v19;
LABEL_18:
    sub_1DE07DDA0(v20, v21, v22);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v16, v9);
  uint64_t v23 = sub_1DE47E490();
  uint64_t v24 = v23;
  if (v23)
  {
    uint64_t v42 = v18;
    uint64_t v43 = v12;
    uint64_t v25 = *(void *)(v23 + 16);
    if (v25)
    {
      uint64_t v38 = v10;
      uint64_t v39 = v9;
      uint64_t v40 = v8;
      uint64_t v41 = v3;
      uint64_t v28 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
      uint64_t v26 = v3 + 16;
      uint64_t v27 = v28;
      unint64_t v29 = v23 + ((*(unsigned __int8 *)(v26 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 64));
      uint64_t v30 = *(void *)(v26 + 56);
      v37[1] = v23;
      swift_bridgeObjectRetain();
      while (1)
      {
        v27(v5, v29, v2);
        if (sub_1DE47E460() == v45 && v31 == v44) {
          break;
        }
        char v32 = sub_1DE480660();
        swift_bridgeObjectRelease();
        if (v32) {
          goto LABEL_15;
        }
        (*(void (**)(char *, uint64_t))(v26 - 8))(v5, v2);
        v29 += v30;
        if (!--v25)
        {
          swift_bridgeObjectRelease();
          uint64_t v33 = 1;
          uint64_t v8 = v40;
          uint64_t v3 = v41;
          uint64_t v10 = v38;
          uint64_t v9 = v39;
          goto LABEL_13;
        }
      }
      swift_bridgeObjectRelease();
LABEL_15:
      swift_bridgeObjectRelease();
      uint64_t v35 = (uint64_t)v42;
      uint64_t v34 = v43;
      uint64_t v8 = v40;
      uint64_t v3 = v41;
      (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v40, v5, v2);
      uint64_t v33 = 0;
      uint64_t v10 = v38;
      uint64_t v9 = v39;
    }
    else
    {
      uint64_t v33 = 1;
LABEL_13:
      uint64_t v35 = (uint64_t)v42;
      uint64_t v34 = v43;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, v33, 1, v2);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) != 1)
    {
      uint64_t v24 = sub_1DE47E470();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v34, v9);
      sub_1DE07DDA0(v35, (unint64_t *)&unk_1EBEC1C60, MEMORY[0x1E4F26ED8]);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      return v24;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v34, v9);
    sub_1DE07DDA0(v35, (unint64_t *)&unk_1EBEC1C60, MEMORY[0x1E4F26ED8]);
    uint64_t v21 = &qword_1EBEC14D0;
    uint64_t v22 = (void (*)(uint64_t))MEMORY[0x1E4F26EA0];
    uint64_t v20 = (uint64_t)v8;
    goto LABEL_18;
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_1DE07DDA0((uint64_t)v18, (unint64_t *)&unk_1EBEC1C60, MEMORY[0x1E4F26ED8]);
  return v24;
}

void sub_1DE07DCCC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1DE480220();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1DE07DD20(uint64_t a1, uint64_t a2)
{
  sub_1DE07DCCC(0, (unint64_t *)&unk_1EBEC1C60, MEMORY[0x1E4F26ED8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DE07DDA0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1DE07DCCC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

id sub_1DE07DDFC()
{
  unint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_cloudContext);
  id result = objc_msgSend(v1, sel_bundleSubscriptionManager);
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  id v3 = objc_msgSend(result, sel_cachedSubscription);
  swift_unknownObjectRelease();
  _s13NewsAnalytics15SessionObserverC27bundleSubscriptionDidExpireyySo08FCBundleF0CF_0(v3);

  id result = objc_msgSend(v1, sel_bundleSubscriptionManager);
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  objc_msgSend(result, sel_addObserver_, v0);

  return (id)swift_unknownObjectRelease();
}

uint64_t _s13NewsAnalytics15SessionObserverC27bundleSubscriptionDidExpireyySo08FCBundleF0CF_0(void *a1)
{
  sub_1DE07E2DC();
  uint64_t v35 = *(void *)(v3 - 8);
  uint64_t v36 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v33 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  UserBundleSubscriptionContextData.init(bundleSubscription:)(a1, (uint64_t)v37);
  unsigned __int8 v5 = v37[0];
  uint64_t v6 = v38;
  uint64_t v7 = v39;
  uint64_t v29 = v39;
  uint64_t v30 = v38;
  unsigned __int8 v8 = v40;
  unsigned __int8 v9 = v41;
  int v27 = v41;
  int v28 = v40;
  uint64_t v10 = v42;
  uint64_t v11 = v43;
  uint64_t v25 = v43;
  uint64_t v26 = v42;
  LOBYTE(a1) = v44;
  int v31 = v37[0];
  int v32 = v44;
  uint64_t v34 = *(void *)(v1 + OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_sessionManager);
  sub_1DE47ED80();
  v37[0] = v5;
  uint64_t v38 = v6;
  uint64_t v39 = v7;
  unsigned __int8 v40 = v8;
  unsigned __int8 v41 = v9;
  uint64_t v42 = v10;
  uint64_t v43 = v11;
  unsigned __int8 v44 = a1;
  sub_1DE07E338();
  uint64_t v24 = v12;
  uint64_t v13 = sub_1DE47ECB0();
  uint64_t v14 = *(void *)(v13 - 8);
  unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v23 = v15 + *(void *)(v14 + 72);
  uint64_t v16 = swift_allocObject();
  long long v22 = xmmword_1DE481D50;
  *(_OWORD *)(v16 + 16) = xmmword_1DE481D50;
  uint64_t v17 = *MEMORY[0x1E4F4AA10];
  uint64_t v18 = *(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 104);
  v18(v16 + v15, v17, v13);
  sub_1DE07106C();
  sub_1DE47F2A0();
  swift_bridgeObjectRelease();
  swift_release();
  v37[0] = v31;
  uint64_t v38 = v30;
  uint64_t v39 = v29;
  unsigned __int8 v40 = v28;
  unsigned __int8 v41 = v27;
  uint64_t v42 = v26;
  uint64_t v43 = v25;
  unsigned __int8 v44 = v32;
  uint64_t v19 = v33;
  sub_1DE47EB30();
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = v22;
  v18(v20 + v15, v17, v13);
  sub_1DE47ED30();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v19, v36);
}

void sub_1DE07E2DC()
{
  if (!qword_1EBEC1D00)
  {
    sub_1DE07106C();
    unint64_t v0 = sub_1DE47EB40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBEC1D00);
    }
  }
}

void sub_1DE07E338()
{
  if (!qword_1EBEC7720)
  {
    sub_1DE47ECB0();
    unint64_t v0 = sub_1DE480620();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBEC7720);
    }
  }
}

uint64_t sub_1DE07E398()
{
  uint64_t v0 = sub_1DE47EBD0();
  __swift_allocate_value_buffer(v0, qword_1EBEC9218);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBEC9218);
  *(void *)uint64_t v1 = 0x726F70732E6D6F63;
  *(void *)(v1 + 8) = 0xEA00000000007374;
  *(void *)(v1 + 16) = 6;
  *(unsigned char *)(v1 + 24) = 0;
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)(v0 - 8) + 104);

  return v2();
}

uint64_t static SportsSessionStartEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EBECB2B8, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EBEC9218, a1);
}

uint64_t static SportsSessionStartEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_1DE07E488()
{
  uint64_t v0 = sub_1DE47EF40();
  __swift_allocate_value_buffer(v0, qword_1EBECB2C0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBECB2C0);
  uint64_t v2 = *MEMORY[0x1E4F4AAA0];
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t static SportsSessionStartEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(qword_1EBECB2E0, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EBECB2C0, a1);
}

uint64_t sub_1DE07E548()
{
  uint64_t v0 = sub_1DE47F020();
  __swift_allocate_value_buffer(v0, qword_1EABA1E00);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EABA1E00);
  return sub_1DE47F010();
}

uint64_t static SportsSessionStartEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0988, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA1E00, a1);
}

uint64_t SportsSessionStartEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084((uint64_t (*)(void))sub_1DE04D618, a1);
}

uint64_t SportsSessionStartEvent.eventData.setter(uint64_t a1)
{
  sub_1DE04D618();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*SportsSessionStartEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SportsSessionStartEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SportsSessionStartEvent(0) + 20);
  sub_1DE07E8E4(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  unsigned __int8 v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SportsSessionStartEvent(uint64_t a1)
{
  return sub_1DE04E1D0(a1, qword_1EBEC9230);
}

uint64_t SportsSessionStartEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SportsSessionStartEvent(0) + 20);
  sub_1DE07E8E4(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  unsigned __int8 v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SportsSessionStartEvent.userBundleSubscriptionContextData.modify())()
{
  return nullsub_1;
}

uint64_t SportsSessionStartEvent.sportsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SportsSessionStartEvent(0) + 24);
  sub_1DE07E8E4(0, &qword_1EBEC9D40, (void (*)(void))sub_1DE07E960, (void (*)(void))sub_1DE07E9B4);
  unsigned __int8 v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_1DE07E8E4(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_1DE47ECA0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1DE07E960()
{
  unint64_t result = qword_1EBEC9E18;
  if (!qword_1EBEC9E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC9E18);
  }
  return result;
}

unint64_t sub_1DE07E9B4()
{
  unint64_t result = qword_1EBEC9E10;
  if (!qword_1EBEC9E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC9E10);
  }
  return result;
}

uint64_t SportsSessionStartEvent.sportsData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SportsSessionStartEvent(0) + 24);
  sub_1DE07E8E4(0, &qword_1EBEC9D40, (void (*)(void))sub_1DE07E960, (void (*)(void))sub_1DE07E9B4);
  unsigned __int8 v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SportsSessionStartEvent.sportsData.modify())()
{
  return nullsub_1;
}

uint64_t SportsSessionStartEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t started = type metadata accessor for SportsSessionStartEvent(0);
  uint64_t v5 = a1 + *(int *)(started + 20);
  sub_1DE07E8E4(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + *(int *)(started + 24);
  sub_1DE07E8E4(0, &qword_1EBEC9D40, (void (*)(void))sub_1DE07E960, (void (*)(void))sub_1DE07E9B4);
  unsigned __int8 v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(v7, v2, v8);
}

uint64_t SportsSessionStartEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084(MEMORY[0x1E4F4AB70], a1);
}

uint64_t SportsSessionStartEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (char *)(v1 + *(int *)(type metadata accessor for SportsSessionStartEvent.Model(0) + 20));
  char v4 = *v3;
  uint64_t v5 = *((void *)v3 + 1);
  uint64_t v6 = *((void *)v3 + 2);
  char v7 = v3[24];
  char v8 = v3[25];
  uint64_t v10 = *((void *)v3 + 4);
  uint64_t v9 = *((void *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(unsigned char *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 25) = v8;
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for SportsSessionStartEvent.Model(uint64_t a1)
{
  return sub_1DE04E1D0(a1, (uint64_t *)&unk_1EABA1E30);
}

uint64_t SportsSessionStartEvent.Model.sportsData.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for SportsSessionStartEvent.Model(0) + 24));

  return swift_bridgeObjectRetain();
}

uint64_t SportsSessionStartEvent.Model.init(eventData:userBundleSubscriptionContextData:sportsData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  char v6 = *a2;
  uint64_t v7 = *((void *)a2 + 1);
  uint64_t v8 = *((void *)a2 + 2);
  char v9 = a2[24];
  char v10 = a2[25];
  uint64_t v11 = *((void *)a2 + 4);
  uint64_t v12 = *((void *)a2 + 5);
  char v13 = a2[48];
  uint64_t v17 = *a3;
  uint64_t v14 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(a4, a1, v14);
  uint64_t result = type metadata accessor for SportsSessionStartEvent.Model(0);
  uint64_t v16 = a4 + *(int *)(result + 20);
  *(unsigned char *)uint64_t v16 = v6;
  *(void *)(v16 + 8) = v7;
  *(void *)(v16 + 16) = v8;
  *(unsigned char *)(v16 + 24) = v9;
  *(unsigned char *)(v16 + 25) = v10;
  *(void *)(v16 + 32) = v11;
  *(void *)(v16 + 40) = v12;
  *(unsigned char *)(v16 + 48) = v13;
  *(void *)(a4 + *(int *)(result + 24)) = v17;
  return result;
}

uint64_t sub_1DE07EE50()
{
  unint64_t v1 = 0xD000000000000021;
  if (*v0 != 1) {
    unint64_t v1 = 0x61447374726F7073;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746144746E657665;
  }
}

uint64_t sub_1DE07EEB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE0810C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE07EEE0(uint64_t a1)
{
  unint64_t v2 = sub_1DE07F198();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE07EF1C(uint64_t a1)
{
  unint64_t v2 = sub_1DE07F198();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SportsSessionStartEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1DE07F600(0, &qword_1EABA1E18, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE07F198();
  sub_1DE480790();
  LOBYTE(v17) = 0;
  sub_1DE47F330();
  sub_1DE07291C(&qword_1EBEC2030);
  sub_1DE4805C0();
  if (!v2)
  {
    uint64_t started = type metadata accessor for SportsSessionStartEvent.Model(0);
    uint64_t v11 = v3 + *(int *)(started + 20);
    char v12 = *(unsigned char *)(v11 + 24);
    char v13 = *(unsigned char *)(v11 + 25);
    char v14 = *(unsigned char *)(v11 + 48);
    LOBYTE(v17) = *(unsigned char *)v11;
    long long v18 = *(_OWORD *)(v11 + 8);
    char v19 = v12;
    char v20 = v13;
    long long v21 = *(_OWORD *)(v11 + 32);
    char v22 = v14;
    HIBYTE(v16) = 1;
    sub_1DE04DD5C();
    sub_1DE4805C0();
    uint64_t v17 = *(void *)(v3 + *(int *)(started + 24));
    HIBYTE(v16) = 2;
    sub_1DE07E9B4();
    sub_1DE4805C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DE07F198()
{
  unint64_t result = qword_1EABA1E20;
  if (!qword_1EABA1E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1E20);
  }
  return result;
}

uint64_t SportsSessionStartEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v4 = sub_1DE47F330();
  uint64_t v26 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  int v27 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE07F600(0, &qword_1EABA1E28, MEMORY[0x1E4FBBDC0]);
  uint64_t v28 = v6;
  uint64_t v25 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t started = type metadata accessor for SportsSessionStartEvent.Model(0);
  MEMORY[0x1F4188790](started);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE07F198();
  sub_1DE480770();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v13 = v25;
  uint64_t v12 = v26;
  unint64_t v23 = a1;
  LOBYTE(v29) = 0;
  sub_1DE07291C(&qword_1EBEC2038);
  sub_1DE4804E0();
  char v14 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  char v22 = v11;
  v14(v11, v27, v4);
  char v35 = 1;
  sub_1DE04DD08();
  sub_1DE4804E0();
  char v15 = v31;
  char v16 = v32;
  char v17 = v34;
  int v27 = (char *)started;
  uint64_t v18 = *(int *)(started + 20);
  uint64_t v19 = (uint64_t)v22;
  char v20 = &v22[v18];
  *char v20 = v29;
  *(_OWORD *)(v20 + 8) = v30;
  v20[24] = v15;
  v20[25] = v16;
  *((_OWORD *)v20 + 2) = v33;
  v20[48] = v17;
  char v35 = 2;
  sub_1DE07E960();
  sub_1DE4804E0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v28);
  *(void *)(v19 + *((int *)v27 + 6)) = v29;
  sub_1DE07F664(v19, v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return sub_1DE07F6C8(v19);
}

void sub_1DE07F600(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE07F198();
    unint64_t v7 = a3(a1, &type metadata for SportsSessionStartEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DE07F664(uint64_t a1, uint64_t a2)
{
  uint64_t started = type metadata accessor for SportsSessionStartEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(started - 8) + 16))(a2, a1, started);
  return a2;
}

uint64_t sub_1DE07F6C8(uint64_t a1)
{
  uint64_t started = type metadata accessor for SportsSessionStartEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(started - 8) + 8))(a1, started);
  return a1;
}

uint64_t sub_1DE07F724@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SportsSessionStartEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DE07F73C(void *a1)
{
  return SportsSessionStartEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DE07F754@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EBECB2B8, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EBEC9218, a1);
}

uint64_t sub_1DE07F78C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(qword_1EBECB2E0, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EBECB2C0, a1);
}

uint64_t sub_1DE07F7C4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0988, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA1E00, a1);
}

uint64_t sub_1DE07F7FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  sub_1DE07E8E4(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + *(int *)(a1 + 24);
  sub_1DE07E8E4(0, &qword_1EBEC9D40, (void (*)(void))sub_1DE07E960, (void (*)(void))sub_1DE07E9B4);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for SportsSessionStartEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DE04D618();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DE07E8E4(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    char v14 = (char *)a2 + v12;
    sub_1DE07E8E4(0, &qword_1EBEC9D40, (void (*)(void))sub_1DE07E960, (void (*)(void))sub_1DE07E9B4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for SportsSessionStartEvent(uint64_t a1, uint64_t a2)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_1DE07E8E4(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  sub_1DE07E8E4(0, &qword_1EBEC9D40, (void (*)(void))sub_1DE07E960, (void (*)(void))sub_1DE07E9B4);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for SportsSessionStartEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE07E8E4(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE07E8E4(0, &qword_1EBEC9D40, (void (*)(void))sub_1DE07E960, (void (*)(void))sub_1DE07E9B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for SportsSessionStartEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE07E8E4(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE07E8E4(0, &qword_1EBEC9D40, (void (*)(void))sub_1DE07E960, (void (*)(void))sub_1DE07E9B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for SportsSessionStartEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE07E8E4(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE07E8E4(0, &qword_1EBEC9D40, (void (*)(void))sub_1DE07E960, (void (*)(void))sub_1DE07E9B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for SportsSessionStartEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE07E8E4(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE07E8E4(0, &qword_1EBEC9D40, (void (*)(void))sub_1DE07E960, (void (*)(void))sub_1DE07E9B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsSessionStartEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE080290);
}

uint64_t sub_1DE080290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DE04D618();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  sub_1DE07E8E4(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  sub_1DE07E8E4(0, &qword_1EBEC9D40, (void (*)(void))sub_1DE07E960, (void (*)(void))sub_1DE07E9B4);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for SportsSessionStartEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE080460);
}

uint64_t sub_1DE080460(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1DE04D618();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  sub_1DE07E8E4(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  sub_1DE07E8E4(0, &qword_1EBEC9D40, (void (*)(void))sub_1DE07E960, (void (*)(void))sub_1DE07E9B4);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_1DE080628()
{
  sub_1DE04D618();
  if (v0 <= 0x3F)
  {
    sub_1DE07E8E4(319, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
    if (v1 <= 0x3F)
    {
      sub_1DE07E8E4(319, &qword_1EBEC9D40, (void (*)(void))sub_1DE07E960, (void (*)(void))sub_1DE07E9B4);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for SportsSessionStartEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DE47F330();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *uint64_t v10 = *v11;
    uint64_t v12 = *((void *)v11 + 2);
    *((void *)v10 + 1) = *((void *)v11 + 1);
    *((void *)v10 + 2) = v12;
    *((_WORD *)v10 + 12) = *((_WORD *)v11 + 12);
    uint64_t v13 = *((void *)v11 + 5);
    *((void *)v10 + 4) = *((void *)v11 + 4);
    *((void *)v10 + 5) = v13;
    v10[48] = v11[48];
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SportsSessionStartEvent.Model(uint64_t a1)
{
  uint64_t v2 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SportsSessionStartEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
  uint64_t v11 = *(void *)(v10 + 16);
  *(void *)(v9 + 8) = *(void *)(v10 + 8);
  *(void *)(v9 + 16) = v11;
  *(_WORD *)(v9 + 24) = *(_WORD *)(v10 + 24);
  uint64_t v12 = *(void *)(v10 + 40);
  *(void *)(v9 + 32) = *(void *)(v10 + 32);
  *(void *)(v9 + 40) = v12;
  *(unsigned char *)(v9 + 48) = *(unsigned char *)(v10 + 48);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SportsSessionStartEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  *(void *)(v8 + 16) = *(void *)(a2 + v7 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 24) = *(unsigned char *)(v9 + 24);
  *(unsigned char *)(v8 + 25) = *(unsigned char *)(v9 + 25);
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SportsSessionStartEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  long long v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(unsigned char *)(v9 + 48) = *(unsigned char *)(v10 + 48);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  return a1;
}

uint64_t assignWithTake for SportsSessionStartEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)(a2 + v7);
  uint64_t v10 = *(void *)(a2 + v7 + 16);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  *(void *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 24) = *(unsigned char *)(v9 + 24);
  *(unsigned char *)(v8 + 25) = *(unsigned char *)(v9 + 25);
  uint64_t v11 = *(void *)(v9 + 40);
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  *(void *)(v8 + 40) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsSessionStartEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE080C88);
}

uint64_t sub_1DE080C88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DE47F330();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SportsSessionStartEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE080D5C);
}

uint64_t sub_1DE080D5C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1DE47F330();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1DE080E18()
{
  uint64_t result = sub_1DE47F330();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SportsSessionStartEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE080F88);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsSessionStartEvent.Model.CodingKeys()
{
  return &type metadata for SportsSessionStartEvent.Model.CodingKeys;
}

unint64_t sub_1DE080FC4()
{
  unint64_t result = qword_1EABA1E40;
  if (!qword_1EABA1E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1E40);
  }
  return result;
}

unint64_t sub_1DE08101C()
{
  unint64_t result = qword_1EABA1E48;
  if (!qword_1EABA1E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1E48);
  }
  return result;
}

unint64_t sub_1DE081074()
{
  unint64_t result = qword_1EABA1E50;
  if (!qword_1EABA1E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1E50);
  }
  return result;
}

uint64_t sub_1DE0810C8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001DE4BDDA0 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61447374726F7073 && a2 == 0xEA00000000006174)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1DE480660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1DE081230(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4A9C8], qword_1EABA1E58, MEMORY[0x1E4F4A9C0]);
}

uint64_t static WebEmbedViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0990, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EABA1E58, a1);
}

uint64_t static WebEmbedViewEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_1DE081298(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4AAB0], qword_1EABA1E70, MEMORY[0x1E4F4AAA0]);
}

uint64_t static WebEmbedViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0998, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EABA1E70, a1);
}

uint64_t sub_1DE0812F8()
{
  uint64_t v0 = sub_1DE47F020();
  __swift_allocate_value_buffer(v0, qword_1EABA1E88);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EABA1E88);
  return sub_1DE47F010();
}

uint64_t static WebEmbedViewEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA09A0, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA1E88, a1);
}

uint64_t WebEmbedViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084((uint64_t (*)(void))sub_1DE04D618, a1);
}

uint64_t WebEmbedViewEvent.eventData.setter(uint64_t a1)
{
  sub_1DE04D618();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*WebEmbedViewEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t WebEmbedViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE081BA4(type metadata accessor for WebEmbedViewEvent, (uint64_t (*)(void))sub_1DE04D7B8, a1);
}

uint64_t type metadata accessor for WebEmbedViewEvent(uint64_t a1)
{
  return sub_1DE04E1D0(a1, qword_1EBEC4348);
}

uint64_t WebEmbedViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WebEmbedViewEvent(0) + 20);
  sub_1DE04D7B8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WebEmbedViewEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t WebEmbedViewEvent.webEmbedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WebEmbedViewEvent(0) + 24);
  sub_1DE081828(0, &qword_1EBEC1E80, (void (*)(void))sub_1DE0815D8, (void (*)(void))sub_1DE08162C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE0815D8()
{
  unint64_t result = qword_1EBEC25C8;
  if (!qword_1EBEC25C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC25C8);
  }
  return result;
}

unint64_t sub_1DE08162C()
{
  unint64_t result = qword_1EBEC25C0;
  if (!qword_1EBEC25C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC25C0);
  }
  return result;
}

uint64_t WebEmbedViewEvent.webEmbedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WebEmbedViewEvent(0) + 24);
  sub_1DE081828(0, &qword_1EBEC1E80, (void (*)(void))sub_1DE0815D8, (void (*)(void))sub_1DE08162C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WebEmbedViewEvent.webEmbedData.modify())()
{
  return nullsub_1;
}

uint64_t WebEmbedViewEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WebEmbedViewEvent(0) + 28);
  sub_1DE081828(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_1DE081828(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_1DE47ECA0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t WebEmbedViewEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WebEmbedViewEvent(0) + 28);
  sub_1DE081828(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WebEmbedViewEvent.userBundleSubscriptionContextData.modify())()
{
  return nullsub_1;
}

uint64_t WebEmbedViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for WebEmbedViewEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_1DE081828(0, &qword_1EBEC1E80, (void (*)(void))sub_1DE0815D8, (void (*)(void))sub_1DE08162C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_1DE081828(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);

  return v11(v9, v2, v10);
}

uint64_t WebEmbedViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084(MEMORY[0x1E4F4AB70], a1);
}

uint64_t WebEmbedViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE081BA4(type metadata accessor for WebEmbedViewEvent.Model, MEMORY[0x1E4F4AB90], a1);
}

uint64_t sub_1DE081BA4@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for WebEmbedViewEvent.Model(uint64_t a1)
{
  return sub_1DE04E1D0(a1, qword_1EBEC42B0);
}

uint64_t WebEmbedViewEvent.Model.webEmbedData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for WebEmbedViewEvent.Model(0) + 24));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t WebEmbedViewEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (char *)(v1 + *(int *)(type metadata accessor for WebEmbedViewEvent.Model(0) + 28));
  char v4 = *v3;
  uint64_t v5 = *((void *)v3 + 1);
  uint64_t v6 = *((void *)v3 + 2);
  char v7 = v3[24];
  char v8 = v3[25];
  uint64_t v10 = *((void *)v3 + 4);
  uint64_t v9 = *((void *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(unsigned char *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 25) = v8;
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t WebEmbedViewEvent.Model.init(eventData:timedData:webEmbedData:userBundleSubscriptionContextData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8 = *a3;
  uint64_t v9 = a3[1];
  char v10 = *a4;
  uint64_t v11 = *((void *)a4 + 1);
  uint64_t v12 = *((void *)a4 + 2);
  char v13 = a4[24];
  char v24 = a4[25];
  uint64_t v22 = *((void *)a4 + 5);
  uint64_t v23 = *((void *)a4 + 4);
  char v21 = a4[48];
  uint64_t v14 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(a5, a1, v14);
  uint64_t v15 = (int *)type metadata accessor for WebEmbedViewEvent.Model(0);
  uint64_t v16 = a5 + v15[5];
  uint64_t v17 = sub_1DE47F350();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v16, a2, v17);
  uint64_t v19 = (void *)(a5 + v15[6]);
  *uint64_t v19 = v8;
  v19[1] = v9;
  uint64_t v20 = a5 + v15[7];
  *(unsigned char *)uint64_t v20 = v10;
  *(void *)(v20 + 8) = v11;
  *(void *)(v20 + 16) = v12;
  *(unsigned char *)(v20 + 24) = v13;
  *(unsigned char *)(v20 + 25) = v24;
  *(void *)(v20 + 32) = v23;
  *(void *)(v20 + 40) = v22;
  *(unsigned char *)(v20 + 48) = v21;
  return result;
}

unint64_t sub_1DE081E58()
{
  unint64_t result = 0x746144746E657665;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x74614464656D6974;
      break;
    case 2:
      unint64_t result = 0x6465626D45626577;
      break;
    case 3:
      unint64_t result = 0xD000000000000021;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE081EF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE08489C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE081F1C(uint64_t a1)
{
  unint64_t v2 = sub_1DE082264();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE081F58(uint64_t a1)
{
  unint64_t v2 = sub_1DE082264();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t WebEmbedViewEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1DE082840(0, &qword_1EABA1EA0, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE082264();
  sub_1DE480790();
  LOBYTE(v20) = 0;
  sub_1DE47F330();
  sub_1DE04D884(&qword_1EBEC2030, MEMORY[0x1E4F4AB70]);
  sub_1DE4805C0();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for WebEmbedViewEvent.Model(0);
    LOBYTE(v20) = 1;
    sub_1DE47F350();
    sub_1DE04D884(&qword_1EBEC2040, MEMORY[0x1E4F4AB90]);
    sub_1DE4805C0();
    uint64_t v11 = (uint64_t *)(v3 + *(int *)(v10 + 24));
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    uint64_t v20 = v13;
    *(void *)&long long v21 = v12;
    char v26 = 2;
    sub_1DE08162C();
    sub_1DE4805C0();
    uint64_t v14 = v3 + *(int *)(v10 + 28);
    char v15 = *(unsigned char *)(v14 + 24);
    char v16 = *(unsigned char *)(v14 + 25);
    char v17 = *(unsigned char *)(v14 + 48);
    LOBYTE(v20) = *(unsigned char *)v14;
    long long v21 = *(_OWORD *)(v14 + 8);
    char v22 = v15;
    char v23 = v16;
    long long v24 = *(_OWORD *)(v14 + 32);
    char v25 = v17;
    char v26 = 3;
    sub_1DE04DD5C();
    sub_1DE4805C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DE082264()
{
  unint64_t result = qword_1EABA1EA8;
  if (!qword_1EABA1EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1EA8);
  }
  return result;
}

uint64_t WebEmbedViewEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v29 = sub_1DE47F350();
  uint64_t v26 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  char v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DE47F330();
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v31 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE082840(0, &qword_1EABA1EB0, MEMORY[0x1E4FBBDC0]);
  uint64_t v30 = v7;
  uint64_t v27 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v25 - v8;
  uint64_t v10 = (int *)type metadata accessor for WebEmbedViewEvent.Model(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE082264();
  char v32 = v9;
  uint64_t v13 = (uint64_t)v33;
  sub_1DE480770();
  if (v13) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  long long v33 = a1;
  uint64_t v14 = v28;
  uint64_t v15 = v29;
  LOBYTE(v34) = 0;
  sub_1DE04D884(&qword_1EBEC2038, MEMORY[0x1E4F4AB70]);
  sub_1DE4804E0();
  char v16 = *(void (**)(char *, char *))(v14 + 32);
  char v17 = v31;
  char v31 = (char *)v5;
  v16(v12, v17);
  LOBYTE(v34) = 1;
  sub_1DE04D884((unint64_t *)&unk_1EBEC2048, MEMORY[0x1E4F4AB90]);
  sub_1DE4804E0();
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v12[v10[5]], v4, v15);
  char v40 = 2;
  sub_1DE0815D8();
  sub_1DE4804E0();
  uint64_t v18 = v35;
  uint64_t v19 = &v12[v10[6]];
  *(void *)uint64_t v19 = v34;
  *((void *)v19 + 1) = v18;
  char v40 = 3;
  sub_1DE04DD08();
  sub_1DE4804E0();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v32, v30);
  char v20 = v36;
  char v21 = v37;
  char v22 = v39;
  char v23 = &v12[v10[7]];
  *char v23 = v34;
  *(_OWORD *)(v23 + 8) = v35;
  v23[24] = v20;
  v23[25] = v21;
  *((_OWORD *)v23 + 2) = v38;
  v23[48] = v22;
  sub_1DE0828A4((uint64_t)v12, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  return sub_1DE082908((uint64_t)v12);
}

void sub_1DE082840(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE082264();
    unint64_t v7 = a3(a1, &type metadata for WebEmbedViewEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DE0828A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WebEmbedViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DE082908(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WebEmbedViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DE082964@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return WebEmbedViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DE08297C(void *a1)
{
  return WebEmbedViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DE082994@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0990, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EABA1E58, a1);
}

uint64_t sub_1DE0829CC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0998, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EABA1E70, a1);
}

uint64_t sub_1DE082A04@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA09A0, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA1E88, a1);
}

uint64_t sub_1DE082A3C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_1DE081828(0, &qword_1EBEC1E80, (void (*)(void))sub_1DE0815D8, (void (*)(void))sub_1DE08162C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_1DE081828(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);

  return v12(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for WebEmbedViewEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DE04D618();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DE04D7B8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_1DE081828(0, &qword_1EBEC1E80, (void (*)(void))sub_1DE0815D8, (void (*)(void))sub_1DE08162C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    char v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_1DE081828(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for WebEmbedViewEvent(uint64_t a1, int *a2)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_1DE081828(0, &qword_1EBEC1E80, (void (*)(void))sub_1DE0815D8, (void (*)(void))sub_1DE08162C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_1DE081828(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t initializeWithCopy for WebEmbedViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE081828(0, &qword_1EBEC1E80, (void (*)(void))sub_1DE0815D8, (void (*)(void))sub_1DE08162C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE081828(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for WebEmbedViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE081828(0, &qword_1EBEC1E80, (void (*)(void))sub_1DE0815D8, (void (*)(void))sub_1DE08162C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE081828(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for WebEmbedViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE081828(0, &qword_1EBEC1E80, (void (*)(void))sub_1DE0815D8, (void (*)(void))sub_1DE08162C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE081828(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for WebEmbedViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE081828(0, &qword_1EBEC1E80, (void (*)(void))sub_1DE0815D8, (void (*)(void))sub_1DE08162C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE081828(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for WebEmbedViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE0836BC);
}

uint64_t sub_1DE0836BC(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  sub_1DE04D7B8();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  sub_1DE081828(0, &qword_1EBEC1E80, (void (*)(void))sub_1DE0815D8, (void (*)(void))sub_1DE08162C);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  sub_1DE081828(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for WebEmbedViewEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE0838D8);
}

uint64_t sub_1DE0838D8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_1DE04D618();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  sub_1DE04D7B8();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  sub_1DE081828(0, &qword_1EBEC1E80, (void (*)(void))sub_1DE0815D8, (void (*)(void))sub_1DE08162C);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  sub_1DE081828(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

void sub_1DE083AEC()
{
  sub_1DE04D618();
  if (v0 <= 0x3F)
  {
    sub_1DE04D7B8();
    if (v1 <= 0x3F)
    {
      sub_1DE081828(319, &qword_1EBEC1E80, (void (*)(void))sub_1DE0815D8, (void (*)(void))sub_1DE08162C);
      if (v2 <= 0x3F)
      {
        sub_1DE081828(319, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for WebEmbedViewEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DE47F330();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DE47F350();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (uint64_t *)((char *)a1 + v12);
    uint64_t v15 = (uint64_t *)((char *)a2 + v12);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = (char *)a1 + v13;
    uint64_t v18 = (char *)a2 + v13;
    *uint64_t v17 = *v18;
    uint64_t v19 = *((void *)v18 + 2);
    *((void *)v17 + 1) = *((void *)v18 + 1);
    *((void *)v17 + 2) = v19;
    *((_WORD *)v17 + 12) = *((_WORD *)v18 + 12);
    uint64_t v20 = *((void *)v18 + 5);
    *((void *)v17 + 4) = *((void *)v18 + 4);
    *((void *)v17 + 5) = v20;
    v17[48] = v18[48];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for WebEmbedViewEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for WebEmbedViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v11);
  uint64_t v14 = (void *)(a2 + v11);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = a1 + v12;
  uint64_t v17 = a2 + v12;
  *(unsigned char *)uint64_t v16 = *(unsigned char *)v17;
  uint64_t v18 = *(void *)(v17 + 16);
  *(void *)(v16 + 8) = *(void *)(v17 + 8);
  *(void *)(v16 + 16) = v18;
  *(_WORD *)(v16 + 24) = *(_WORD *)(v17 + 24);
  uint64_t v19 = *(void *)(v17 + 40);
  *(void *)(v16 + 32) = *(void *)(v17 + 32);
  *(void *)(v16 + 40) = v19;
  *(unsigned char *)(v16 + 48) = *(unsigned char *)(v17 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WebEmbedViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
  *(void *)(v15 + 8) = *(void *)(v16 + 8);
  *(void *)(v15 + 16) = *(void *)(v16 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v15 + 24) = *(unsigned char *)(v16 + 24);
  *(unsigned char *)(v15 + 25) = *(unsigned char *)(v16 + 25);
  *(void *)(v15 + 32) = *(void *)(v16 + 32);
  *(void *)(v15 + 40) = *(void *)(v16 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v15 + 48) = *(unsigned char *)(v16 + 48);
  return a1;
}

uint64_t initializeWithTake for WebEmbedViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = (long long *)(a2 + v11);
  *(unsigned char *)(v12 + 48) = *((unsigned char *)v13 + 48);
  long long v14 = v13[2];
  long long v15 = *v13;
  *(_OWORD *)(v12 + 16) = v13[1];
  *(_OWORD *)(v12 + 32) = v14;
  *(_OWORD *)uint64_t v12 = v15;
  return a1;
}

uint64_t assignWithTake for WebEmbedViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
  uint64_t v19 = *(void *)(v18 + 16);
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  *(void *)(v17 + 16) = v19;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v17 + 24) = *(unsigned char *)(v18 + 24);
  *(unsigned char *)(v17 + 25) = *(unsigned char *)(v18 + 25);
  uint64_t v20 = *(void *)(v18 + 40);
  *(void *)(v17 + 32) = *(void *)(v18 + 32);
  *(void *)(v17 + 40) = v20;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v17 + 48) = *(unsigned char *)(v18 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for WebEmbedViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE084374);
}

uint64_t sub_1DE084374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DE47F330();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1DE47F350();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for WebEmbedViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE0844A0);
}

uint64_t sub_1DE0844A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1DE47F330();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_1DE47F350();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_1DE0845B4()
{
  uint64_t result = sub_1DE47F330();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1DE47F350();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WebEmbedViewEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE08475CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WebEmbedViewEvent.Model.CodingKeys()
{
  return &type metadata for WebEmbedViewEvent.Model.CodingKeys;
}

unint64_t sub_1DE084798()
{
  unint64_t result = qword_1EABA1EB8;
  if (!qword_1EABA1EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1EB8);
  }
  return result;
}

unint64_t sub_1DE0847F0()
{
  unint64_t result = qword_1EABA1EC0;
  if (!qword_1EABA1EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1EC0);
  }
  return result;
}

unint64_t sub_1DE084848()
{
  unint64_t result = qword_1EABA1EC8;
  if (!qword_1EABA1EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1EC8);
  }
  return result;
}

uint64_t sub_1DE08489C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6465626D45626577 && a2 == 0xEC00000061746144 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001DE4BDDA0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1DE480660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t static MutedTagListData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t MutedTagListData.tagIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MutedTagListData.tagIDs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v1 = a1;
  return result;
}

uint64_t (*MutedTagListData.tagIDs.modify())()
{
  return nullsub_1;
}

NewsAnalytics::MutedTagListData __swiftcall MutedTagListData.init(tagIDs:)(NewsAnalytics::MutedTagListData tagIDs)
{
  v1->tagIDs._rawValue = tagIDs.tagIDs._rawValue;
  return tagIDs;
}

uint64_t sub_1DE084AE8()
{
  return 0x734449676174;
}

uint64_t sub_1DE084AFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x734449676174 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1DE480660();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DE084B8C(uint64_t a1)
{
  unint64_t v2 = sub_1DE084D8C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE084BC8(uint64_t a1)
{
  unint64_t v2 = sub_1DE084D8C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t MutedTagListData.encode(to:)(void *a1)
{
  sub_1DE084FFC(0, &qword_1EBEC8DA0, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v7 = (char *)v10 - v6;
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE084D8C();
  sub_1DE480790();
  v10[1] = v8;
  sub_1DE084DE0();
  sub_1DE085060((unint64_t *)&qword_1EBEC73E8);
  sub_1DE4805C0();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DE084D8C()
{
  unint64_t result = qword_1EBEC8780;
  if (!qword_1EBEC8780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC8780);
  }
  return result;
}

void sub_1DE084DE0()
{
  if (!qword_1EBEC73E0)
  {
    unint64_t v0 = sub_1DE480060();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBEC73E0);
    }
  }
}

uint64_t MutedTagListData.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1DE084FFC(0, &qword_1EBEC8598, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE084D8C();
  sub_1DE480770();
  if (!v2)
  {
    sub_1DE084DE0();
    sub_1DE085060((unint64_t *)&qword_1EBEC73F0);
    sub_1DE4804E0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DE084FFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE084D8C();
    unint64_t v7 = a3(a1, &type metadata for MutedTagListData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DE085060(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DE084DE0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DE0850C4()
{
  unint64_t result = qword_1EBEC8468;
  if (!qword_1EBEC8468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC8468);
  }
  return result;
}

unint64_t sub_1DE08511C()
{
  unint64_t result = qword_1EBEC8798;
  if (!qword_1EBEC8798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC8798);
  }
  return result;
}

uint64_t sub_1DE085170@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return MutedTagListData.init(from:)(a1, a2);
}

uint64_t sub_1DE085188(void *a1)
{
  return MutedTagListData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for MutedTagListData()
{
  return &type metadata for MutedTagListData;
}

unsigned char *storeEnumTagSinglePayload for MutedTagListData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DE08524CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MutedTagListData.CodingKeys()
{
  return &type metadata for MutedTagListData.CodingKeys;
}

unint64_t sub_1DE085288()
{
  unint64_t result = qword_1EABA1ED0;
  if (!qword_1EABA1ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1ED0);
  }
  return result;
}

unint64_t sub_1DE0852E0()
{
  unint64_t result = qword_1EBEC8790;
  if (!qword_1EBEC8790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC8790);
  }
  return result;
}

unint64_t sub_1DE085338()
{
  unint64_t result = qword_1EBEC8788;
  if (!qword_1EBEC8788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC8788);
  }
  return result;
}

NewsAnalytics::ActionMethod_optional __swiftcall ActionMethod.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1DE480420();
  result.value = swift_bridgeObjectRelease();
  char v5 = 9;
  if (v3 < 9) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t ActionMethod.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x776F7272616873;
      break;
    case 2:
      uint64_t result = 0x4D747865746E6F63;
      break;
    case 3:
      uint64_t result = 0x7463416570697773;
      break;
    case 4:
      unsigned int v2 = 1819242356;
      goto LABEL_7;
    case 5:
      unsigned int v2 = 1970169197;
LABEL_7:
      uint64_t result = v2 | 0x72616200000000;
      break;
    case 6:
      uint64_t result = 2003134838;
      break;
    case 7:
      uint64_t result = 0x616D6D6F4379656BLL;
      break;
    case 8:
      uint64_t result = 0x6E65746E49707061;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE085500(unsigned __int8 *a1, char *a2)
{
  return sub_1DE3DB22C(*a1, *a2);
}

unint64_t sub_1DE085510()
{
  unint64_t result = qword_1EABA1ED8;
  if (!qword_1EABA1ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1ED8);
  }
  return result;
}

uint64_t sub_1DE085564()
{
  return sub_1DE480750();
}

uint64_t sub_1DE0855AC()
{
  return sub_1DE478AB8();
}

uint64_t sub_1DE0855B4()
{
  return sub_1DE480750();
}

NewsAnalytics::ActionMethod_optional sub_1DE0855F8(Swift::String *a1)
{
  return ActionMethod.init(rawValue:)(*a1);
}

uint64_t sub_1DE085604@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ActionMethod.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DE08562C()
{
  return sub_1DE47FFF0();
}

uint64_t sub_1DE08568C()
{
  return sub_1DE47FFE0();
}

unsigned char *storeEnumTagSinglePayload for ActionMethod(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE0857A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionMethod()
{
  return &type metadata for ActionMethod;
}

unint64_t sub_1DE0857E0()
{
  unint64_t result = qword_1EABA1EE0;
  if (!qword_1EABA1EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1EE0);
  }
  return result;
}

uint64_t static SubscriptionResultData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void SubscriptionResultData.resultType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *SubscriptionResultData.resultType.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*SubscriptionResultData.resultType.modify())()
{
  return nullsub_1;
}

NewsAnalytics::SubscriptionResultData __swiftcall SubscriptionResultData.init(resultType:)(NewsAnalytics::SubscriptionResultData resultType)
{
  *uint64_t v1 = *(unsigned char *)resultType.resultType;
  return resultType;
}

uint64_t sub_1DE085880()
{
  return 0x7954746C75736572;
}

uint64_t sub_1DE08589C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7954746C75736572 && a2 == 0xEA00000000006570)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1DE480660();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DE085940(uint64_t a1)
{
  unint64_t v2 = sub_1DE085B14();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE08597C(uint64_t a1)
{
  unint64_t v2 = sub_1DE085B14();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SubscriptionResultData.encode(to:)(void *a1)
{
  sub_1DE085D54(0, &qword_1EABA1EE8, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v7 = (char *)&v10 - v6;
  char v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE085B14();
  sub_1DE480790();
  char v11 = v8;
  sub_1DE085B68();
  sub_1DE4805C0();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DE085B14()
{
  unint64_t result = qword_1EABA1EF0;
  if (!qword_1EABA1EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1EF0);
  }
  return result;
}

unint64_t sub_1DE085B68()
{
  unint64_t result = qword_1EABA1EF8;
  if (!qword_1EABA1EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1EF8);
  }
  return result;
}

uint64_t SubscriptionResultData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_1DE085D54(0, &qword_1EABA1F00, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE085B14();
  sub_1DE480770();
  if (!v2)
  {
    sub_1DE085DB8();
    sub_1DE4804E0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DE085D54(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE085B14();
    unint64_t v7 = a3(a1, &type metadata for SubscriptionResultData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1DE085DB8()
{
  unint64_t result = qword_1EABA1F08;
  if (!qword_1EABA1F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1F08);
  }
  return result;
}

unint64_t sub_1DE085E10()
{
  unint64_t result = qword_1EBEC5C20;
  if (!qword_1EBEC5C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC5C20);
  }
  return result;
}

unint64_t sub_1DE085E68()
{
  unint64_t result = qword_1EBEC5C18;
  if (!qword_1EBEC5C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC5C18);
  }
  return result;
}

uint64_t sub_1DE085EBC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return SubscriptionResultData.init(from:)(a1, a2);
}

uint64_t sub_1DE085ED4(void *a1)
{
  return SubscriptionResultData.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for InterfaceOrientation(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SubscriptionResultData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE086048);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionResultData()
{
  return &type metadata for SubscriptionResultData;
}

unsigned char *storeEnumTagSinglePayload for SubscriptionResultData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DE08611CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionResultData.CodingKeys()
{
  return &type metadata for SubscriptionResultData.CodingKeys;
}

unint64_t sub_1DE086158()
{
  unint64_t result = qword_1EABA1F10;
  if (!qword_1EABA1F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1F10);
  }
  return result;
}

unint64_t sub_1DE0861B0()
{
  unint64_t result = qword_1EABA1F18;
  if (!qword_1EABA1F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1F18);
  }
  return result;
}

unint64_t sub_1DE086208()
{
  unint64_t result = qword_1EABA1F20;
  if (!qword_1EABA1F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1F20);
  }
  return result;
}

NewsAnalytics::JourneyTriggerInactiveErrorReason_optional __swiftcall JourneyTriggerInactiveErrorReason.init(rawValue:)(Swift::String rawValue)
{
  int v2 = v1;
  unint64_t v3 = sub_1DE480420();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *int v2 = v5;
  return result;
}

unint64_t JourneyTriggerInactiveErrorReason.rawValue.getter()
{
  unint64_t result = 0xD000000000000016;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x64657269707865;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE086354(char *a1, char *a2)
{
  return sub_1DE3D2E90(*a1, *a2);
}

unint64_t sub_1DE086364()
{
  unint64_t result = qword_1EABA1F28;
  if (!qword_1EABA1F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1F28);
  }
  return result;
}

uint64_t sub_1DE0863B8()
{
  return sub_1DE43D8CC();
}

uint64_t sub_1DE0863C0()
{
  return sub_1DE477A08();
}

uint64_t sub_1DE0863C8()
{
  return sub_1DE47A464();
}

NewsAnalytics::JourneyTriggerInactiveErrorReason_optional sub_1DE0863D0(Swift::String *a1)
{
  return JourneyTriggerInactiveErrorReason.init(rawValue:)(*a1);
}

unint64_t sub_1DE0863DC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = JourneyTriggerInactiveErrorReason.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DE086404()
{
  return sub_1DE47FFF0();
}

uint64_t sub_1DE086464()
{
  return sub_1DE47FFE0();
}

unsigned char *storeEnumTagSinglePayload for JourneyTriggerInactiveErrorReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE086580);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JourneyTriggerInactiveErrorReason()
{
  return &type metadata for JourneyTriggerInactiveErrorReason;
}

unint64_t sub_1DE0865B8()
{
  unint64_t result = qword_1EABA1F30;
  if (!qword_1EABA1F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1F30);
  }
  return result;
}

uint64_t static AudioEngagementData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t AudioEngagementData.timePlayed.getter()
{
  return *(void *)v0;
}

uint64_t AudioEngagementData.timePlayed.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*AudioEngagementData.timePlayed.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementData.deltaTimePlayed.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t AudioEngagementData.deltaTimePlayed.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*AudioEngagementData.deltaTimePlayed.modify())()
{
  return nullsub_1;
}

void AudioEngagementData.userAction.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

unsigned char *AudioEngagementData.userAction.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 16) = *result;
  return result;
}

uint64_t (*AudioEngagementData.userAction.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementData.position.getter()
{
  return *(unsigned int *)(v0 + 20);
}

uint64_t AudioEngagementData.position.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 20) = result;
  return result;
}

uint64_t (*AudioEngagementData.position.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementData.engagementID.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AudioEngagementData.engagementID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*AudioEngagementData.engagementID.modify())()
{
  return nullsub_1;
}

void AudioEngagementData.playMethod.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 40);
}

unsigned char *AudioEngagementData.playMethod.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 40) = *result;
  return result;
}

uint64_t (*AudioEngagementData.playMethod.modify())()
{
  return nullsub_1;
}

void AudioEngagementData.listeningSource.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 41);
}

unsigned char *AudioEngagementData.listeningSource.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 41) = *result;
  return result;
}

uint64_t (*AudioEngagementData.listeningSource.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementData.init(timePlayed:deltaTimePlayed:userAction:position:engagementID:playMethod:listeningSource:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>)
{
  char v9 = *a3;
  char v10 = *a7;
  char v11 = *a8;
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(unsigned char *)(a9 + 16) = v9;
  *(_DWORD *)(a9 + 20) = a4;
  *(void *)(a9 + 24) = a5;
  *(void *)(a9 + 32) = a6;
  *(unsigned char *)(a9 + 40) = v10;
  *(unsigned char *)(a9 + 41) = v11;
  return result;
}

uint64_t sub_1DE0867FC()
{
  uint64_t result = 0x79616C50656D6974;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6D695461746C6564;
      break;
    case 2:
      uint64_t result = 0x6974634172657375;
      break;
    case 3:
      uint64_t result = 0x6E6F697469736F70;
      break;
    case 4:
      uint64_t result = 0x656D656761676E65;
      break;
    case 5:
      uint64_t result = 0x6874654D79616C70;
      break;
    case 6:
      uint64_t result = 0x6E696E657473696CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE086904@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE0877BC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DE08692C(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_1DE086938(uint64_t a1)
{
  unint64_t v2 = sub_1DE086C6C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE086974(uint64_t a1)
{
  unint64_t v2 = sub_1DE086C6C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AudioEngagementData.encode(to:)(void *a1)
{
  sub_1DE0870F8(0, &qword_1EABA1F38, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  BOOL v7 = (char *)&v14 - v6;
  uint64_t v20 = *(void *)(v1 + 8);
  int v8 = *(unsigned __int8 *)(v1 + 16);
  int v18 = *(_DWORD *)(v1 + 20);
  int v19 = v8;
  uint64_t v9 = *(void *)(v1 + 32);
  uint64_t v16 = *(void *)(v1 + 24);
  uint64_t v17 = v9;
  int v15 = *(unsigned __int8 *)(v1 + 40);
  char v10 = *(unsigned char *)(v1 + 41);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE086C6C();
  sub_1DE480790();
  char v31 = 0;
  uint64_t v11 = v21;
  sub_1DE4805E0();
  if (!v11)
  {
    char v12 = v19;
    char v30 = 1;
    sub_1DE4805E0();
    char v29 = v12;
    char v28 = 2;
    sub_1DE086CC0();
    sub_1DE4805C0();
    char v27 = 3;
    sub_1DE4805D0();
    char v26 = 4;
    sub_1DE480580();
    char v25 = v15;
    char v24 = 5;
    sub_1DE086D14();
    sub_1DE480550();
    char v23 = v10;
    char v22 = 6;
    sub_1DE086D68();
    sub_1DE4805C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DE086C6C()
{
  unint64_t result = qword_1EABA1F40;
  if (!qword_1EABA1F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1F40);
  }
  return result;
}

unint64_t sub_1DE086CC0()
{
  unint64_t result = qword_1EABA1F48;
  if (!qword_1EABA1F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1F48);
  }
  return result;
}

unint64_t sub_1DE086D14()
{
  unint64_t result = qword_1EABA1F50;
  if (!qword_1EABA1F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1F50);
  }
  return result;
}

unint64_t sub_1DE086D68()
{
  unint64_t result = qword_1EABA1F58;
  if (!qword_1EABA1F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1F58);
  }
  return result;
}

uint64_t AudioEngagementData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1DE0870F8(0, &qword_1EABA1F60, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE086C6C();
  sub_1DE480770();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v33 = 0;
  uint64_t v10 = sub_1DE480500();
  char v32 = 1;
  uint64_t v11 = sub_1DE480500();
  char v30 = 2;
  sub_1DE08715C();
  sub_1DE4804E0();
  int v23 = v31;
  char v29 = 3;
  int v22 = sub_1DE4804F0();
  char v28 = 4;
  uint64_t v12 = sub_1DE4804A0();
  uint64_t v14 = v13;
  uint64_t v20 = v12;
  char v26 = 5;
  sub_1DE0871B0();
  swift_bridgeObjectRetain();
  uint64_t v21 = v14;
  sub_1DE480470();
  int v19 = v27;
  char v24 = 6;
  sub_1DE087204();
  sub_1DE4804E0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  char v16 = v25;
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v11;
  *(unsigned char *)(a2 + 16) = v23;
  *(_DWORD *)(a2 + 20) = v22;
  uint64_t v17 = v21;
  *(void *)(a2 + 24) = v20;
  *(void *)(a2 + 32) = v17;
  *(unsigned char *)(a2 + 40) = v19;
  *(unsigned char *)(a2 + 41) = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1DE0870F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE086C6C();
    unint64_t v7 = a3(a1, &type metadata for AudioEngagementData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1DE08715C()
{
  unint64_t result = qword_1EABA1F68;
  if (!qword_1EABA1F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1F68);
  }
  return result;
}

unint64_t sub_1DE0871B0()
{
  unint64_t result = qword_1EABA1F70;
  if (!qword_1EABA1F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1F70);
  }
  return result;
}

unint64_t sub_1DE087204()
{
  unint64_t result = qword_1EABA1F78;
  if (!qword_1EABA1F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1F78);
  }
  return result;
}

unint64_t sub_1DE08725C()
{
  unint64_t result = qword_1EBEC5088;
  if (!qword_1EBEC5088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC5088);
  }
  return result;
}

unint64_t sub_1DE0872B4()
{
  unint64_t result = qword_1EBEC5080;
  if (!qword_1EBEC5080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC5080);
  }
  return result;
}

uint64_t sub_1DE087308@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AudioEngagementData.init(from:)(a1, a2);
}

uint64_t sub_1DE087320(void *a1)
{
  return AudioEngagementData.encode(to:)(a1);
}

uint64_t destroy for AudioEngagementData()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AudioEngagementData(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AudioEngagementData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  return a1;
}

__n128 __swift_memcpy42_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AudioEngagementData(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioEngagementData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 42)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioEngagementData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 42) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 42) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioEngagementData()
{
  return &type metadata for AudioEngagementData;
}

uint64_t getEnumTagSinglePayload for AlternateHeadlineTreatmentStateData(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AudioEngagementData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE08767CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioEngagementData.CodingKeys()
{
  return &type metadata for AudioEngagementData.CodingKeys;
}

unint64_t sub_1DE0876B8()
{
  unint64_t result = qword_1EABA1F80;
  if (!qword_1EABA1F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1F80);
  }
  return result;
}

unint64_t sub_1DE087710()
{
  unint64_t result = qword_1EABA1F88;
  if (!qword_1EABA1F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1F88);
  }
  return result;
}

unint64_t sub_1DE087768()
{
  unint64_t result = qword_1EABA1F90;
  if (!qword_1EABA1F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1F90);
  }
  return result;
}

uint64_t sub_1DE0877BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x79616C50656D6974 && a2 == 0xEA00000000006465;
  if (v2 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D695461746C6564 && a2 == 0xEF646579616C5065 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6974634172657375 && a2 == 0xEA00000000006E6FLL || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F697469736F70 && a2 == 0xE800000000000000 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656D656761676E65 && a2 == 0xEC0000004449746ELL || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6874654D79616C70 && a2 == 0xEA0000000000646FLL || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6E696E657473696CLL && a2 == 0xEF656372756F5367)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_1DE480660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_1DE087B10(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4A9C8], qword_1EABA1F98, MEMORY[0x1E4F4A9C0]);
}

uint64_t static ArticleLikeEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA09A8, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EABA1F98, a1);
}

uint64_t static ArticleLikeEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_1DE087B78(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4AAB0], qword_1EABA1FB0, MEMORY[0x1E4F4AAA0]);
}

uint64_t static ArticleLikeEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA09B0, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EABA1FB0, a1);
}

uint64_t sub_1DE087BD8()
{
  uint64_t v0 = sub_1DE47F020();
  __swift_allocate_value_buffer(v0, qword_1EABA1FC8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EABA1FC8);
  return sub_1DE47F010();
}

uint64_t static ArticleLikeEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA09B8, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA1FC8, a1);
}

uint64_t ArticleLikeEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084((uint64_t (*)(void))sub_1DE04D618, a1);
}

uint64_t ArticleLikeEvent.eventData.setter(uint64_t a1)
{
  sub_1DE04D618();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*ArticleLikeEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleLikeEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 20);
  sub_1DE088D5C(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ArticleLikeEvent(uint64_t a1)
{
  return sub_1DE04E1D0(a1, qword_1EBEC3178);
}

uint64_t ArticleLikeEvent.articleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 20);
  sub_1DE088D5C(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ArticleLikeEvent.articleData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleLikeEvent.actionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 24);
  sub_1DE088D5C(0, &qword_1EBEC1E00, (void (*)(void))sub_1DE087F74, (void (*)(void))sub_1DE087FC8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE087F74()
{
  unint64_t result = qword_1EBEC22D8;
  if (!qword_1EBEC22D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC22D8);
  }
  return result;
}

unint64_t sub_1DE087FC8()
{
  unint64_t result = qword_1EBEC22D0;
  if (!qword_1EBEC22D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC22D0);
  }
  return result;
}

uint64_t ArticleLikeEvent.actionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 24);
  sub_1DE088D5C(0, &qword_1EBEC1E00, (void (*)(void))sub_1DE087F74, (void (*)(void))sub_1DE087FC8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ArticleLikeEvent.actionData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleLikeEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 28);
  sub_1DE088D5C(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ArticleLikeEvent.channelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 28);
  sub_1DE088D5C(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ArticleLikeEvent.channelData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleLikeEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 32);
  sub_1DE088D5C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ArticleLikeEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 32);
  sub_1DE088D5C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ArticleLikeEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleLikeEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 36);
  sub_1DE088D5C(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ArticleLikeEvent.groupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 36);
  sub_1DE088D5C(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ArticleLikeEvent.groupData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleLikeEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 40);
  sub_1DE088D5C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ArticleLikeEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 40);
  sub_1DE088D5C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ArticleLikeEvent.userBundleSubscriptionContextData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleLikeEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 44);
  sub_1DE088D5C(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ArticleLikeEvent.issueData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 44);
  sub_1DE088D5C(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ArticleLikeEvent.issueData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleLikeEvent.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 48);
  sub_1DE088D5C(0, &qword_1EBEC1F68, (void (*)(void))sub_1DE054558, (void (*)(void))sub_1DE0545AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ArticleLikeEvent.userChannelContextData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 48);
  sub_1DE088D5C(0, &qword_1EBEC1F68, (void (*)(void))sub_1DE054558, (void (*)(void))sub_1DE0545AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ArticleLikeEvent.userChannelContextData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleLikeEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 52);
  sub_1DE088D5C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ArticleLikeEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 52);
  sub_1DE088D5C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ArticleLikeEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleLikeEvent.articleExposureContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 56);
  sub_1DE088D5C(0, &qword_1EBEC1F88, (void (*)(void))sub_1DE07410C, (void (*)(void))sub_1DE074160);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_1DE088D5C(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_1DE47ECA0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t ArticleLikeEvent.articleExposureContextData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent(0) + 56);
  sub_1DE088D5C(0, &qword_1EBEC1F88, (void (*)(void))sub_1DE07410C, (void (*)(void))sub_1DE074160);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ArticleLikeEvent.articleExposureContextData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleLikeEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for ArticleLikeEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_1DE088D5C(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_1DE088D5C(0, &qword_1EBEC1E00, (void (*)(void))sub_1DE087F74, (void (*)(void))sub_1DE087FC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_1DE088D5C(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + v4[8];
  uint64_t v12 = *MEMORY[0x1E4F4A9F8];
  sub_1DE088D5C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v11, v12, v13);
  uint64_t v14 = a1 + v4[9];
  sub_1DE088D5C(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v12, v15);
  uint64_t v16 = a1 + v4[10];
  sub_1DE088D5C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v2, v17);
  uint64_t v18 = a1 + v4[11];
  sub_1DE088D5C(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v12, v19);
  uint64_t v20 = a1 + v4[12];
  sub_1DE088D5C(0, &qword_1EBEC1F68, (void (*)(void))sub_1DE054558, (void (*)(void))sub_1DE0545AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v2, v21);
  uint64_t v22 = a1 + v4[13];
  sub_1DE088D5C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v22, v12, v23);
  uint64_t v24 = a1 + v4[14];
  sub_1DE088D5C(0, &qword_1EBEC1F88, (void (*)(void))sub_1DE07410C, (void (*)(void))sub_1DE074160);
  char v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104);

  return v26(v24, v12, v25);
}

uint64_t ArticleLikeEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084(MEMORY[0x1E4F4AB70], a1);
}

uint64_t ArticleLikeEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent.Model(0) + 20);
  long long v4 = *(_OWORD *)(v3 + 80);
  long long v5 = *(_OWORD *)(v3 + 112);
  long long v21 = *(_OWORD *)(v3 + 96);
  v22[0] = v5;
  long long v6 = *(_OWORD *)(v3 + 16);
  long long v7 = *(_OWORD *)(v3 + 48);
  long long v17 = *(_OWORD *)(v3 + 32);
  long long v8 = v17;
  long long v18 = v7;
  long long v9 = *(_OWORD *)(v3 + 48);
  long long v10 = *(_OWORD *)(v3 + 80);
  long long v19 = *(_OWORD *)(v3 + 64);
  long long v11 = v19;
  long long v20 = v10;
  long long v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  long long v13 = v16[0];
  v16[1] = v12;
  long long v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  *(void *)((char *)v22 + 15) = *(void *)(v3 + 127);
  *(void *)(a1 + 127) = *(void *)(v3 + 127);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1DE056184((uint64_t)v16);
}

uint64_t type metadata accessor for ArticleLikeEvent.Model(uint64_t a1)
{
  return sub_1DE04E1D0(a1, qword_1EBEC30B8);
}

uint64_t ArticleLikeEvent.Model.actionData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for ArticleLikeEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t ArticleLikeEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleLikeEvent.Model(0) + 28);
  uint64_t v4 = *(void *)(v3 + 8);
  char v5 = *(unsigned char *)(v3 + 16);
  char v6 = *(unsigned char *)(v3 + 17);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 32);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 17) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t ArticleLikeEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleLikeEvent.Model(0) + 32));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;

  return sub_1DE056598(v4, v5, v6);
}

void *ArticleLikeEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ArticleLikeEvent.Model(0);
  sub_1DE063B10(v1 + *(int *)(v3 + 36), (uint64_t)v5);
  sub_1DE063B10((uint64_t)v5, a1);
  return sub_1DE0652D8(v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DE063BCC);
}

uint64_t ArticleLikeEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (char *)(v1 + *(int *)(type metadata accessor for ArticleLikeEvent.Model(0) + 40));
  char v4 = *v3;
  uint64_t v5 = *((void *)v3 + 1);
  uint64_t v6 = *((void *)v3 + 2);
  char v7 = v3[24];
  char v8 = v3[25];
  uint64_t v10 = *((void *)v3 + 4);
  uint64_t v9 = *((void *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(unsigned char *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 25) = v8;
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t ArticleLikeEvent.Model.issueData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleLikeEvent.Model(0) + 44));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;

  return sub_1DE074E14(v4, v5);
}

uint64_t ArticleLikeEvent.Model.userChannelContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for ArticleLikeEvent.Model(0);
  uint64_t v4 = (char *)(v1 + *(int *)(result + 48));
  char v5 = *v4;
  char v6 = v4[1];
  LOWORD(v4) = *((_WORD *)v4 + 1);
  *(unsigned char *)a1 = v5;
  *(unsigned char *)(a1 + 1) = v6;
  *(_WORD *)(a1 + 2) = (_WORD)v4;
  return result;
}

uint64_t ArticleLikeEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleLikeEvent.Model(0) + 52));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t ArticleLikeEvent.Model.articleExposureContextData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleLikeEvent.Model(0) + 56));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;

  return sub_1DE074F2C(v4, v5);
}

__n128 ArticleLikeEvent.Model.init(eventData:articleData:actionData:channelData:feedData:groupData:userBundleSubscriptionContextData:issueData:userChannelContextData:viewData:articleExposureContextData:)@<Q0>(uint64_t a1@<X0>, long long *a2@<X1>, char *a3@<X2>, uint64_t *a4@<X3>, long long *a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, long long *a8@<X7>, uint64_t a9@<X8>, char *a10, uint64_t *a11, long long *a12)
{
  long long v62 = a2[6];
  *(_OWORD *)uint64_t v63 = a2[7];
  *(void *)&v63[15] = *(void *)((char *)a2 + 127);
  long long v58 = a2[2];
  long long v59 = a2[3];
  long long v60 = a2[4];
  long long v61 = a2[5];
  long long v56 = *a2;
  long long v57 = a2[1];
  char v16 = *a3;
  uint64_t v37 = a4[1];
  uint64_t v38 = *a4;
  char v36 = *((unsigned char *)a4 + 16);
  char v17 = *((unsigned char *)a4 + 17);
  uint64_t v18 = a4[3];
  uint64_t v35 = a4[4];
  long long v40 = *a5;
  uint64_t v39 = *((void *)a5 + 2);
  sub_1DE063B10(a6, (uint64_t)v64);
  char v47 = *a7;
  uint64_t v45 = *((void *)a7 + 2);
  uint64_t v46 = *((void *)a7 + 1);
  char v43 = a7[25];
  char v44 = a7[24];
  uint64_t v41 = *((void *)a7 + 5);
  uint64_t v42 = *((void *)a7 + 4);
  LOBYTE(a7) = a7[48];
  long long v49 = *a8;
  uint64_t v19 = *((void *)a8 + 2);
  uint64_t v20 = *((void *)a8 + 3);
  uint64_t v48 = v19;
  char v51 = a10[1];
  char v52 = *a10;
  __int16 v50 = *((_WORD *)a10 + 1);
  uint64_t v21 = *a11;
  uint64_t v53 = a11[1];
  __int16 v22 = *((_WORD *)a11 + 8);
  __n128 v54 = (__n128)a12[1];
  long long v55 = *a12;
  uint64_t v23 = *((void *)a12 + 4);
  uint64_t v24 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(a9, a1, v24);
  uint64_t v25 = (int *)type metadata accessor for ArticleLikeEvent.Model(0);
  uint64_t v26 = a9 + v25[5];
  *(_OWORD *)(v26 + 96) = v62;
  *(_OWORD *)(v26 + 112) = *(_OWORD *)v63;
  *(void *)(v26 + 127) = *(void *)&v63[15];
  *(_OWORD *)(v26 + 32) = v58;
  *(_OWORD *)(v26 + 48) = v59;
  *(_OWORD *)(v26 + 64) = v60;
  *(_OWORD *)(v26 + 80) = v61;
  *(_OWORD *)uint64_t v26 = v56;
  *(_OWORD *)(v26 + 16) = v57;
  *(unsigned char *)(a9 + v25[6]) = v16;
  uint64_t v27 = a9 + v25[7];
  *(void *)uint64_t v27 = v38;
  *(void *)(v27 + 8) = v37;
  *(unsigned char *)(v27 + 16) = v36;
  *(unsigned char *)(v27 + 17) = v17;
  *(void *)(v27 + 24) = v18;
  *(void *)(v27 + 32) = v35;
  uint64_t v28 = a9 + v25[8];
  *(_OWORD *)uint64_t v28 = v40;
  *(void *)(v28 + 16) = v39;
  sub_1DE063B10((uint64_t)v64, a9 + v25[9]);
  uint64_t v29 = a9 + v25[10];
  *(unsigned char *)uint64_t v29 = v47;
  *(void *)(v29 + 8) = v46;
  *(void *)(v29 + 16) = v45;
  *(unsigned char *)(v29 + 24) = v44;
  *(unsigned char *)(v29 + 25) = v43;
  *(void *)(v29 + 32) = v42;
  *(void *)(v29 + 40) = v41;
  *(unsigned char *)(v29 + 48) = (_BYTE)a7;
  uint64_t v30 = a9 + v25[11];
  *(_OWORD *)uint64_t v30 = v49;
  *(void *)(v30 + 16) = v48;
  *(void *)(v30 + 24) = v20;
  uint64_t v31 = a9 + v25[12];
  *(unsigned char *)uint64_t v31 = v52;
  *(unsigned char *)(v31 + 1) = v51;
  *(_WORD *)(v31 + 2) = v50;
  uint64_t v32 = a9 + v25[13];
  *(void *)uint64_t v32 = v21;
  *(void *)(v32 + 8) = v53;
  *(_WORD *)(v32 + 16) = v22;
  uint64_t v33 = a9 + v25[14];
  __n128 result = v54;
  *(_OWORD *)uint64_t v33 = v55;
  *(__n128 *)(v33 + 16) = v54;
  *(void *)(v33 + 32) = v23;
  return result;
}

uint64_t sub_1DE089AC8(char a1)
{
  uint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x44656C6369747261;
      break;
    case 2:
      uint64_t result = 0x61446E6F69746361;
      break;
    case 3:
      uint64_t result = 0x446C656E6E616863;
      break;
    case 4:
      unsigned int v3 = 1684366694;
      goto LABEL_11;
    case 5:
      uint64_t result = 0x74614470756F7267;
      break;
    case 6:
      uint64_t result = 0xD000000000000021;
      break;
    case 7:
      uint64_t result = 0x7461446575737369;
      break;
    case 8:
      uint64_t result = 0xD000000000000016;
      break;
    case 9:
      unsigned int v3 = 2003134838;
LABEL_11:
      uint64_t result = v3 | 0x6174614400000000;
      break;
    case 10:
      uint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE089C28()
{
  return sub_1DE089AC8(*v0);
}

uint64_t sub_1DE089C30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE090050(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE089C58(uint64_t a1)
{
  unint64_t v2 = sub_1DE08A1CC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE089C94(uint64_t a1)
{
  unint64_t v2 = sub_1DE08A1CC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ArticleLikeEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1DE08ABB4(0, &qword_1EABA1FE0, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v40 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE08A1CC();
  sub_1DE480790();
  char v56 = 0;
  sub_1DE47F330();
  sub_1DE07291C(&qword_1EBEC2030);
  sub_1DE4805C0();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for ArticleLikeEvent.Model(0);
    long long v11 = (long long *)(v3 + v10[5]);
    long long v12 = v11[7];
    long long v51 = v11[6];
    *(_OWORD *)char v52 = v12;
    *(void *)&v52[15] = *(void *)((char *)v11 + 127);
    long long v13 = v11[3];
    long long v47 = v11[2];
    long long v48 = v13;
    long long v14 = v11[5];
    long long v49 = v11[4];
    long long v50 = v14;
    long long v15 = v11[1];
    long long v45 = *v11;
    long long v46 = v15;
    LOBYTE(v42[0]) = 1;
    sub_1DE053EBC();
    sub_1DE4805C0();
    LOBYTE(v45) = *(unsigned char *)(v3 + v10[6]);
    LOBYTE(v42[0]) = 2;
    sub_1DE087FC8();
    sub_1DE4805C0();
    char v16 = (uint64_t *)(v3 + v10[7]);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    char v19 = *((unsigned char *)v16 + 16);
    char v20 = *((unsigned char *)v16 + 17);
    uint64_t v22 = v16[3];
    uint64_t v21 = v16[4];
    *(void *)&long long v45 = v17;
    *((void *)&v45 + 1) = v18;
    LOBYTE(v46) = v19;
    BYTE1(v46) = v20;
    *((void *)&v46 + 1) = v22;
    *(void *)&long long v47 = v21;
    LOBYTE(v42[0]) = 3;
    sub_1DE0552E4();
    sub_1DE4805C0();
    uint64_t v23 = (long long *)(v3 + v10[8]);
    uint64_t v24 = *((void *)v23 + 2);
    long long v54 = *v23;
    uint64_t v55 = v24;
    char v53 = 4;
    sub_1DE055800();
    sub_1DE480550();
    sub_1DE063B10(v3 + v10[9], (uint64_t)&v45);
    sub_1DE063B10((uint64_t)&v45, (uint64_t)v42);
    char v41 = 5;
    sub_1DE0629F4();
    sub_1DE480550();
    uint64_t v25 = v3 + v10[10];
    char v26 = *(unsigned char *)(v25 + 24);
    char v27 = *(unsigned char *)(v25 + 25);
    char v28 = *(unsigned char *)(v25 + 48);
    LOBYTE(v42[0]) = *(unsigned char *)v25;
    *(_OWORD *)((char *)v42 + 8) = *(_OWORD *)(v25 + 8);
    BYTE8(v42[1]) = v26;
    BYTE9(v42[1]) = v27;
    long long v43 = *(_OWORD *)(v25 + 32);
    char v44 = v28;
    char v41 = 6;
    sub_1DE04DD5C();
    sub_1DE4805C0();
    uint64_t v29 = (_OWORD *)(v3 + v10[11]);
    long long v30 = v29[1];
    v42[0] = *v29;
    v42[1] = v30;
    char v41 = 7;
    sub_1DE054A4C();
    sub_1DE480550();
    uint64_t v31 = (char *)(v3 + v10[12]);
    char v32 = *v31;
    char v33 = v31[1];
    LOWORD(v31) = *((_WORD *)v31 + 1);
    LOBYTE(v42[0]) = v32;
    BYTE1(v42[0]) = v33;
    WORD1(v42[0]) = (_WORD)v31;
    char v41 = 8;
    sub_1DE0545AC();
    sub_1DE4805C0();
    uint64_t v34 = v3 + v10[13];
    __int16 v35 = *(_WORD *)(v34 + 16);
    v42[0] = *(_OWORD *)v34;
    LOWORD(v42[1]) = v35;
    char v41 = 9;
    sub_1DE05410C();
    sub_1DE480550();
    uint64_t v36 = v3 + v10[14];
    uint64_t v37 = *(void *)(v36 + 32);
    long long v38 = *(_OWORD *)(v36 + 16);
    v42[0] = *(_OWORD *)v36;
    v42[1] = v38;
    *(void *)&long long v43 = v37;
    char v41 = 10;
    sub_1DE074160();
    sub_1DE480550();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DE08A1CC()
{
  unint64_t result = qword_1EABA1FE8;
  if (!qword_1EABA1FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1FE8);
  }
  return result;
}

uint64_t ArticleLikeEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v4 = sub_1DE47F330();
  uint64_t v59 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE08ABB4(0, &qword_1EABA1FF0, MEMORY[0x1E4FBBDC0]);
  uint64_t v57 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v54 - v9;
  long long v84 = (int *)type metadata accessor for ArticleLikeEvent.Model(0);
  MEMORY[0x1F4188790](v84);
  long long v60 = a1;
  long long v61 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE08A1CC();
  char v56 = v10;
  sub_1DE480770();
  uint64_t v58 = v4;
  if (v2)
  {
    uint64_t v62 = v2;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
  }
  LOBYTE(v76) = 0;
  sub_1DE07291C(&qword_1EBEC2038);
  sub_1DE4804E0();
  uint64_t v19 = v4;
  char v20 = v61;
  (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v61, v6, v19);
  v67[143] = 1;
  sub_1DE053E68();
  sub_1DE4804E0();
  uint64_t v21 = v84;
  uint64_t v22 = &v20[v84[5]];
  long long v23 = *(_OWORD *)v75;
  *((_OWORD *)v22 + 6) = v74;
  *((_OWORD *)v22 + 7) = v23;
  *(void *)(v22 + 127) = *(void *)&v75[15];
  long long v24 = v71;
  *((_OWORD *)v22 + 2) = v70;
  *((_OWORD *)v22 + 3) = v24;
  long long v25 = v73;
  *((_OWORD *)v22 + 4) = v72;
  *((_OWORD *)v22 + 5) = v25;
  long long v26 = v69;
  *(_OWORD *)uint64_t v22 = v68;
  *((_OWORD *)v22 + 1) = v26;
  v67[0] = 2;
  sub_1DE087F74();
  sub_1DE4804E0();
  v20[v21[6]] = v76;
  v67[0] = 3;
  sub_1DE055290();
  sub_1DE4804E0();
  uint64_t v27 = *((void *)&v76 + 1);
  char v28 = v77;
  char v29 = BYTE1(v77);
  uint64_t v30 = *((void *)&v77 + 1);
  uint64_t v31 = v78;
  char v32 = &v20[v21[7]];
  *(void *)char v32 = v76;
  *((void *)v32 + 1) = v27;
  v32[16] = v28;
  v32[17] = v29;
  *((void *)v32 + 3) = v30;
  *((void *)v32 + 4) = v31;
  v67[0] = 4;
  sub_1DE0557AC();
  sub_1DE480470();
  uint64_t v33 = v77;
  uint64_t v34 = &v20[v21[8]];
  *(_OWORD *)uint64_t v34 = v76;
  *((void *)v34 + 2) = v33;
  v67[142] = 5;
  sub_1DE0629A0();
  sub_1DE480470();
  sub_1DE063B10((uint64_t)&v76, (uint64_t)v67);
  sub_1DE063B10((uint64_t)v67, (uint64_t)&v20[v21[9]]);
  char v63 = 6;
  sub_1DE04DD08();
  sub_1DE4804E0();
  char v35 = BYTE8(v64[1]);
  char v36 = BYTE9(v64[1]);
  char v37 = v66;
  long long v38 = &v20[v21[10]];
  *long long v38 = v64[0];
  *(_OWORD *)(v38 + 8) = *(_OWORD *)((char *)v64 + 8);
  v38[24] = v35;
  v38[25] = v36;
  *((_OWORD *)v38 + 2) = v65;
  v38[48] = v37;
  char v63 = 7;
  sub_1DE0549F8();
  sub_1DE480470();
  uint64_t v39 = &v20[v21[11]];
  long long v40 = v64[1];
  *(_OWORD *)uint64_t v39 = v64[0];
  *((_OWORD *)v39 + 1) = v40;
  char v63 = 8;
  sub_1DE054558();
  sub_1DE4804E0();
  uint64_t v62 = 0;
  char v41 = BYTE1(v64[0]);
  __int16 v42 = WORD1(v64[0]);
  long long v43 = &v20[v84[12]];
  *long long v43 = v64[0];
  v43[1] = v41;
  *((_WORD *)v43 + 1) = v42;
  char v63 = 9;
  sub_1DE0540B8();
  uint64_t v44 = v62;
  sub_1DE480470();
  uint64_t v62 = v44;
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v56, v57);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
    char v45 = 0;
    long long v46 = v61;
  }
  else
  {
    __int16 v47 = v64[1];
    long long v48 = &v61[v84[13]];
    *(_OWORD *)long long v48 = v64[0];
    *((_WORD *)v48 + 8) = v47;
    char v63 = 10;
    sub_1DE07410C();
    uint64_t v49 = v62;
    sub_1DE480470();
    uint64_t v62 = v49;
    if (!v49)
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v56, v57);
      uint64_t v50 = v65;
      uint64_t v51 = (uint64_t)v61;
      char v52 = &v61[v84[14]];
      long long v53 = v64[1];
      *(_OWORD *)char v52 = v64[0];
      *((_OWORD *)v52 + 1) = v53;
      *((void *)v52 + 4) = v50;
      sub_1DE08AC18(v51, v55);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
      return sub_1DE08AC7C(v51);
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v56, v57);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
    char v45 = 1;
    long long v46 = v61;
  }
  (*(void (**)(char *, uint64_t))(v59 + 8))(v46, v58);
  long long v13 = v84;
  long long v14 = &v46[v84[5]];
  long long v15 = *((_OWORD *)v14 + 4);
  long long v81 = *((_OWORD *)v14 + 5);
  long long v16 = *((_OWORD *)v14 + 7);
  long long v82 = *((_OWORD *)v14 + 6);
  v83[0] = v16;
  *(void *)((char *)v83 + 15) = *(void *)(v14 + 127);
  long long v17 = *((_OWORD *)v14 + 3);
  long long v78 = *((_OWORD *)v14 + 2);
  long long v79 = v17;
  long long v80 = v15;
  long long v18 = *((_OWORD *)v14 + 1);
  long long v76 = *(_OWORD *)v14;
  long long v77 = v18;
  sub_1DE057E78((uint64_t)&v76);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DE05FBA8(*(void *)&v46[v13[8]], *(void *)&v46[v13[8] + 8], *(void *)&v46[v13[8] + 16]);
  sub_1DE063B10((uint64_t)&v46[v13[9]], (uint64_t)&v76);
  sub_1DE0652D8(&v76, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DE06533C);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1DE0767E0(*(void *)&v46[v13[11]], *(void *)&v46[v13[11] + 8]);
  if (v45) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1DE08ABB4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE08A1CC();
    unint64_t v7 = a3(a1, &type metadata for ArticleLikeEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DE08AC18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ArticleLikeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DE08AC7C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ArticleLikeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DE08ACD8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ArticleLikeEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DE08ACF0(void *a1)
{
  return ArticleLikeEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DE08AD08@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA09A8, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EABA1F98, a1);
}

uint64_t sub_1DE08AD40@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA09B0, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EABA1FB0, a1);
}

uint64_t sub_1DE08AD78@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA09B8, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA1FC8, a1);
}

uint64_t sub_1DE08ADB0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_1DE088D5C(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_1DE088D5C(0, &qword_1EBEC1E00, (void (*)(void))sub_1DE087F74, (void (*)(void))sub_1DE087FC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_1DE088D5C(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  uint64_t v13 = *MEMORY[0x1E4F4A9F8];
  sub_1DE088D5C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v12, v13, v14);
  uint64_t v15 = a2 + a1[9];
  sub_1DE088D5C(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v13, v16);
  uint64_t v17 = a2 + a1[10];
  sub_1DE088D5C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v4, v18);
  uint64_t v19 = a2 + a1[11];
  sub_1DE088D5C(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v13, v20);
  uint64_t v21 = a2 + a1[12];
  sub_1DE088D5C(0, &qword_1EBEC1F68, (void (*)(void))sub_1DE054558, (void (*)(void))sub_1DE0545AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v21, v4, v22);
  uint64_t v23 = a2 + a1[13];
  sub_1DE088D5C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v23, v13, v24);
  uint64_t v25 = a2 + a1[14];
  sub_1DE088D5C(0, &qword_1EBEC1F88, (void (*)(void))sub_1DE07410C, (void (*)(void))sub_1DE074160);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104);

  return v27(v25, v13, v26);
}

uint64_t *initializeBufferWithCopyOfBuffer for ArticleLikeEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v48 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v48 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DE04D618();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DE088D5C(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_1DE088D5C(0, &qword_1EBEC1E00, (void (*)(void))sub_1DE087F74, (void (*)(void))sub_1DE087FC8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_1DE088D5C(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_1DE088D5C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_1DE088D5C(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    char v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    sub_1DE088D5C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    uint64_t v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    sub_1DE088D5C(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    char v37 = (char *)a1 + v36;
    long long v38 = (char *)a2 + v36;
    sub_1DE088D5C(0, &qword_1EBEC1F68, (void (*)(void))sub_1DE054558, (void (*)(void))sub_1DE0545AC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = a3[13];
    char v41 = (char *)a1 + v40;
    __int16 v42 = (char *)a2 + v40;
    sub_1DE088D5C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    uint64_t v44 = a3[14];
    char v45 = (char *)a1 + v44;
    long long v46 = (char *)a2 + v44;
    sub_1DE088D5C(0, &qword_1EBEC1F88, (void (*)(void))sub_1DE07410C, (void (*)(void))sub_1DE074160);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
  }
  return a1;
}

uint64_t destroy for ArticleLikeEvent(uint64_t a1, int *a2)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_1DE088D5C(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_1DE088D5C(0, &qword_1EBEC1E00, (void (*)(void))sub_1DE087F74, (void (*)(void))sub_1DE087FC8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_1DE088D5C(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_1DE088D5C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_1DE088D5C(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_1DE088D5C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_1DE088D5C(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  sub_1DE088D5C(0, &qword_1EBEC1F68, (void (*)(void))sub_1DE054558, (void (*)(void))sub_1DE0545AC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[13];
  sub_1DE088D5C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = a1 + a2[14];
  sub_1DE088D5C(0, &qword_1EBEC1F88, (void (*)(void))sub_1DE07410C, (void (*)(void))sub_1DE074160);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8);

  return v25(v23, v24);
}

uint64_t initializeWithCopy for ArticleLikeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE088D5C(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE088D5C(0, &qword_1EBEC1E00, (void (*)(void))sub_1DE087F74, (void (*)(void))sub_1DE087FC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE088D5C(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE088D5C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE088D5C(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE088D5C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE088D5C(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE088D5C(0, &qword_1EBEC1F68, (void (*)(void))sub_1DE054558, (void (*)(void))sub_1DE0545AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_1DE088D5C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_1DE088D5C(0, &qword_1EBEC1F88, (void (*)(void))sub_1DE07410C, (void (*)(void))sub_1DE074160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
  return a1;
}

uint64_t assignWithCopy for ArticleLikeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE088D5C(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE088D5C(0, &qword_1EBEC1E00, (void (*)(void))sub_1DE087F74, (void (*)(void))sub_1DE087FC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE088D5C(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE088D5C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE088D5C(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE088D5C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE088D5C(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE088D5C(0, &qword_1EBEC1F68, (void (*)(void))sub_1DE054558, (void (*)(void))sub_1DE0545AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_1DE088D5C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_1DE088D5C(0, &qword_1EBEC1F88, (void (*)(void))sub_1DE07410C, (void (*)(void))sub_1DE074160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
  return a1;
}

uint64_t initializeWithTake for ArticleLikeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE088D5C(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE088D5C(0, &qword_1EBEC1E00, (void (*)(void))sub_1DE087F74, (void (*)(void))sub_1DE087FC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE088D5C(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE088D5C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE088D5C(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE088D5C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE088D5C(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE088D5C(0, &qword_1EBEC1F68, (void (*)(void))sub_1DE054558, (void (*)(void))sub_1DE0545AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_1DE088D5C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_1DE088D5C(0, &qword_1EBEC1F88, (void (*)(void))sub_1DE07410C, (void (*)(void))sub_1DE074160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  return a1;
}

uint64_t assignWithTake for ArticleLikeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE088D5C(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE088D5C(0, &qword_1EBEC1E00, (void (*)(void))sub_1DE087F74, (void (*)(void))sub_1DE087FC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE088D5C(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE088D5C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE088D5C(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE088D5C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE088D5C(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE088D5C(0, &qword_1EBEC1F68, (void (*)(void))sub_1DE054558, (void (*)(void))sub_1DE0545AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_1DE088D5C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_1DE088D5C(0, &qword_1EBEC1F88, (void (*)(void))sub_1DE07410C, (void (*)(void))sub_1DE074160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleLikeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE08D3F8);
}

uint64_t sub_1DE08D3F8(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_22:
    return v9(v10, a2, v8);
  }
  sub_1DE088D5C(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_21:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_22;
  }
  sub_1DE088D5C(0, &qword_1EBEC1E00, (void (*)(void))sub_1DE087F74, (void (*)(void))sub_1DE087FC8);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_21;
  }
  sub_1DE088D5C(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_21;
  }
  sub_1DE088D5C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_21;
  }
  sub_1DE088D5C(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_21;
  }
  sub_1DE088D5C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_21;
  }
  sub_1DE088D5C(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_21;
  }
  sub_1DE088D5C(0, &qword_1EBEC1F68, (void (*)(void))sub_1DE054558, (void (*)(void))sub_1DE0545AC);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_21;
  }
  sub_1DE088D5C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a2)
  {
    uint64_t v8 = v21;
    uint64_t v12 = *(void *)(v21 - 8);
    uint64_t v13 = a3[13];
    goto LABEL_21;
  }
  sub_1DE088D5C(0, &qword_1EBEC1F88, (void (*)(void))sub_1DE07410C, (void (*)(void))sub_1DE074160);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48);
  uint64_t v25 = v23;
  uint64_t v26 = a1 + a3[14];

  return v24(v26, a2, v25);
}

uint64_t storeEnumTagSinglePayload for ArticleLikeEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE08D9E8);
}

uint64_t sub_1DE08D9E8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_1DE04D618();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_22:
    return v11(v12, a2, a2, v10);
  }
  sub_1DE088D5C(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_21:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_22;
  }
  sub_1DE088D5C(0, &qword_1EBEC1E00, (void (*)(void))sub_1DE087F74, (void (*)(void))sub_1DE087FC8);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_21;
  }
  sub_1DE088D5C(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_21;
  }
  sub_1DE088D5C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_21;
  }
  sub_1DE088D5C(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_21;
  }
  sub_1DE088D5C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_21;
  }
  sub_1DE088D5C(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_21;
  }
  sub_1DE088D5C(0, &qword_1EBEC1F68, (void (*)(void))sub_1DE054558, (void (*)(void))sub_1DE0545AC);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_21;
  }
  sub_1DE088D5C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a3)
  {
    uint64_t v10 = v23;
    uint64_t v14 = *(void *)(v23 - 8);
    uint64_t v15 = a4[13];
    goto LABEL_21;
  }
  sub_1DE088D5C(0, &qword_1EBEC1F88, (void (*)(void))sub_1DE07410C, (void (*)(void))sub_1DE074160);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
  uint64_t v27 = v25;
  uint64_t v28 = a1 + a4[14];

  return v26(v28, a2, a2, v27);
}

void sub_1DE08DFD0()
{
  sub_1DE04D618();
  if (v0 <= 0x3F)
  {
    sub_1DE088D5C(319, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
    if (v1 <= 0x3F)
    {
      sub_1DE088D5C(319, &qword_1EBEC1E00, (void (*)(void))sub_1DE087F74, (void (*)(void))sub_1DE087FC8);
      if (v2 <= 0x3F)
      {
        sub_1DE088D5C(319, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
        if (v3 <= 0x3F)
        {
          sub_1DE088D5C(319, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
          if (v4 <= 0x3F)
          {
            sub_1DE088D5C(319, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
            if (v5 <= 0x3F)
            {
              sub_1DE088D5C(319, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
              if (v6 <= 0x3F)
              {
                sub_1DE088D5C(319, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
                if (v7 <= 0x3F)
                {
                  sub_1DE088D5C(319, &qword_1EBEC1F68, (void (*)(void))sub_1DE054558, (void (*)(void))sub_1DE0545AC);
                  if (v8 <= 0x3F)
                  {
                    sub_1DE088D5C(319, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
                    if (v9 <= 0x3F)
                    {
                      sub_1DE088D5C(319, &qword_1EBEC1F88, (void (*)(void))sub_1DE07410C, (void (*)(void))sub_1DE074160);
                      if (v10 <= 0x3F) {
                        swift_initStructMetadata();
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ArticleLikeEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (void *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DE47F330();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    unint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(void *)unint64_t v10 = *(void *)v11;
    v10[8] = v11[8];
    uint64_t v12 = *((void *)v11 + 3);
    *((void *)v10 + 2) = *((void *)v11 + 2);
    *((void *)v10 + 3) = v12;
    v10[32] = v11[32];
    uint64_t v13 = *((void *)v11 + 6);
    *((void *)v10 + 5) = *((void *)v11 + 5);
    *((void *)v10 + 6) = v13;
    v10[56] = v11[56];
    v10[57] = v11[57];
    uint64_t v14 = *((void *)v11 + 9);
    *((void *)v10 + 8) = *((void *)v11 + 8);
    *((void *)v10 + 9) = v14;
    v10[80] = v11[80];
    *(_OWORD *)(v10 + 88) = *(_OWORD *)(v11 + 88);
    *((void *)v10 + 13) = *((void *)v11 + 13);
    v10[112] = v11[112];
    *((void *)v10 + 15) = *((void *)v11 + 15);
    *((_DWORD *)v10 + 32) = *((_DWORD *)v11 + 32);
    v10[132] = v11[132];
    *(_WORD *)(v10 + 133) = *(_WORD *)(v11 + 133);
    *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
    uint64_t v15 = a3[7];
    uint64_t v16 = a3[8];
    uint64_t v17 = (char *)a1 + v15;
    uint64_t v18 = (char *)a2 + v15;
    uint64_t v19 = *((void *)v18 + 1);
    *(void *)uint64_t v17 = *(void *)v18;
    *((void *)v17 + 1) = v19;
    *((_WORD *)v17 + 8) = *((_WORD *)v18 + 8);
    uint64_t v20 = *((void *)v18 + 4);
    *((void *)v17 + 3) = *((void *)v18 + 3);
    *((void *)v17 + 4) = v20;
    uint64_t v21 = (char *)a1 + v16;
    long long v60 = a2;
    uint64_t v22 = (char *)a2 + v16;
    uint64_t v23 = *((void *)v22 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v23 == 1)
    {
      *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
      *((void *)v21 + 2) = *((void *)v22 + 2);
    }
    else
    {
      *uint64_t v21 = *v22;
      *((void *)v21 + 1) = *((void *)v22 + 1);
      *((void *)v21 + 2) = v23;
      swift_bridgeObjectRetain();
    }
    uint64_t v25 = v60;
    uint64_t v26 = a3[9];
    uint64_t v27 = (char *)a1 + v26;
    uint64_t v28 = (char *)v60 + v26;
    uint64_t v29 = *((void *)v28 + 2);
    if (v29)
    {
      *(_WORD *)uint64_t v27 = *(_WORD *)v28;
      *((void *)v27 + 1) = *((void *)v28 + 1);
      *((void *)v27 + 2) = v29;
      *((void *)v27 + 3) = *((void *)v28 + 3);
      uint64_t v30 = *((void *)v28 + 5);
      *((void *)v27 + 4) = *((void *)v28 + 4);
      *((void *)v27 + 5) = v30;
      uint64_t v31 = *((void *)v28 + 7);
      *((void *)v27 + 6) = *((void *)v28 + 6);
      *((void *)v27 + 7) = v31;
      uint64_t v32 = *((void *)v28 + 9);
      *((void *)v27 + 8) = *((void *)v28 + 8);
      *((void *)v27 + 9) = v32;
      v27[80] = v28[80];
      uint64_t v33 = *((void *)v28 + 12);
      *((void *)v27 + 11) = *((void *)v28 + 11);
      *((void *)v27 + 12) = v33;
      *((void *)v27 + 13) = *((void *)v28 + 13);
      v27[112] = v28[112];
      uint64_t v34 = *((void *)v28 + 16);
      *((void *)v27 + 15) = *((void *)v28 + 15);
      *((void *)v27 + 16) = v34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v25 = v60;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v35 = *((_OWORD *)v28 + 7);
      *((_OWORD *)v27 + 6) = *((_OWORD *)v28 + 6);
      *((_OWORD *)v27 + 7) = v35;
      *((void *)v27 + 16) = *((void *)v28 + 16);
      long long v36 = *((_OWORD *)v28 + 3);
      *((_OWORD *)v27 + 2) = *((_OWORD *)v28 + 2);
      *((_OWORD *)v27 + 3) = v36;
      long long v37 = *((_OWORD *)v28 + 5);
      *((_OWORD *)v27 + 4) = *((_OWORD *)v28 + 4);
      *((_OWORD *)v27 + 5) = v37;
      long long v38 = *((_OWORD *)v28 + 1);
      *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
      *((_OWORD *)v27 + 1) = v38;
    }
    uint64_t v39 = a3[10];
    uint64_t v40 = a3[11];
    uint64_t v41 = (char *)a1 + v39;
    uint64_t v42 = (char *)v25 + v39;
    *uint64_t v41 = *v42;
    uint64_t v43 = *((void *)v42 + 2);
    *((void *)v41 + 1) = *((void *)v42 + 1);
    *((void *)v41 + 2) = v43;
    *((_WORD *)v41 + 12) = *((_WORD *)v42 + 12);
    uint64_t v44 = *((void *)v42 + 5);
    *((void *)v41 + 4) = *((void *)v42 + 4);
    *((void *)v41 + 5) = v44;
    v41[48] = v42[48];
    uint64_t v45 = (char *)a1 + v40;
    uint64_t v46 = (uint64_t)v25 + v40;
    uint64_t v47 = *(void *)((char *)v25 + v40 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v47)
    {
      *(void *)uint64_t v45 = *(void *)v46;
      *((void *)v45 + 1) = v47;
      *((_WORD *)v45 + 8) = *(_WORD *)(v46 + 16);
      *((void *)v45 + 3) = *(void *)(v46 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v48 = *(_OWORD *)(v46 + 16);
      *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
      *((_OWORD *)v45 + 1) = v48;
    }
    uint64_t v49 = a3[13];
    *(_DWORD *)((char *)a1 + a3[12]) = *(_DWORD *)((char *)v25 + a3[12]);
    uint64_t v50 = (char *)a1 + v49;
    uint64_t v51 = (uint64_t)v25 + v49;
    uint64_t v52 = *(void *)(v51 + 8);
    *(void *)uint64_t v50 = *(void *)v51;
    *((void *)v50 + 1) = v52;
    *((_WORD *)v50 + 8) = *(_WORD *)(v51 + 16);
    uint64_t v53 = a3[14];
    uint64_t v54 = (char *)a1 + v53;
    uint64_t v55 = (uint64_t)v25 + v53;
    uint64_t v56 = *(void *)((char *)v25 + v53 + 8);
    swift_bridgeObjectRetain();
    if (v56 == 1)
    {
      long long v57 = *(_OWORD *)(v55 + 16);
      *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
      *((_OWORD *)v54 + 1) = v57;
      *((void *)v54 + 4) = *(void *)(v55 + 32);
    }
    else
    {
      *(void *)uint64_t v54 = *(void *)v55;
      *((void *)v54 + 1) = v56;
      uint64_t v58 = *(void *)(v55 + 24);
      *((void *)v54 + 2) = *(void *)(v55 + 16);
      *((void *)v54 + 3) = v58;
      *((void *)v54 + 4) = *(void *)(v55 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t destroy for ArticleLikeEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[8] + 16) != 1) {
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + a2[9] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[11] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + a2[14] + 8);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ArticleLikeEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = *(void *)(v10 + 24);
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  *(void *)(v9 + 24) = v11;
  *(unsigned char *)(v9 + 32) = *(unsigned char *)(v10 + 32);
  uint64_t v12 = *(void *)(v10 + 48);
  *(void *)(v9 + 40) = *(void *)(v10 + 40);
  *(void *)(v9 + 48) = v12;
  *(unsigned char *)(v9 + 56) = *(unsigned char *)(v10 + 56);
  *(unsigned char *)(v9 + 57) = *(unsigned char *)(v10 + 57);
  uint64_t v13 = *(void *)(v10 + 72);
  *(void *)(v9 + 64) = *(void *)(v10 + 64);
  *(void *)(v9 + 72) = v13;
  *(unsigned char *)(v9 + 80) = *(unsigned char *)(v10 + 80);
  *(_OWORD *)(v9 + 88) = *(_OWORD *)(v10 + 88);
  *(void *)(v9 + 104) = *(void *)(v10 + 104);
  *(unsigned char *)(v9 + 112) = *(unsigned char *)(v10 + 112);
  *(void *)(v9 + 120) = *(void *)(v10 + 120);
  *(_DWORD *)(v9 + 128) = *(_DWORD *)(v10 + 128);
  *(unsigned char *)(v9 + 132) = *(unsigned char *)(v10 + 132);
  *(_WORD *)(v9 + 133) = *(_WORD *)(v10 + 133);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v58 = a3;
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  uint64_t v18 = *(void *)(v17 + 8);
  *(void *)uint64_t v16 = *(void *)v17;
  *(void *)(v16 + 8) = v18;
  *(_WORD *)(v16 + 16) = *(_WORD *)(v17 + 16);
  uint64_t v19 = *(void *)(v17 + 32);
  *(void *)(v16 + 24) = *(void *)(v17 + 24);
  *(void *)(v16 + 32) = v19;
  uint64_t v20 = a1 + v15;
  uint64_t v21 = a2 + v15;
  uint64_t v22 = *(void *)(a2 + v15 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v22 == 1)
  {
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    *(void *)(v20 + 16) = *(void *)(v21 + 16);
  }
  else
  {
    *(unsigned char *)uint64_t v20 = *(unsigned char *)v21;
    *(void *)(v20 + 8) = *(void *)(v21 + 8);
    *(void *)(v20 + 16) = v22;
    swift_bridgeObjectRetain();
  }
  uint64_t v23 = v58;
  uint64_t v24 = v58[9];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = *(void *)(v26 + 16);
  if (v27)
  {
    *(_WORD *)uint64_t v25 = *(_WORD *)v26;
    *(void *)(v25 + 8) = *(void *)(v26 + 8);
    *(void *)(v25 + 16) = v27;
    *(void *)(v25 + 24) = *(void *)(v26 + 24);
    uint64_t v28 = *(void *)(v26 + 40);
    *(void *)(v25 + 32) = *(void *)(v26 + 32);
    *(void *)(v25 + 40) = v28;
    uint64_t v29 = *(void *)(v26 + 56);
    *(void *)(v25 + 48) = *(void *)(v26 + 48);
    *(void *)(v25 + 56) = v29;
    uint64_t v30 = *(void *)(v26 + 72);
    *(void *)(v25 + 64) = *(void *)(v26 + 64);
    *(void *)(v25 + 72) = v30;
    *(unsigned char *)(v25 + 80) = *(unsigned char *)(v26 + 80);
    uint64_t v31 = *(void *)(v26 + 96);
    *(void *)(v25 + 88) = *(void *)(v26 + 88);
    *(void *)(v25 + 96) = v31;
    *(void *)(v25 + 104) = *(void *)(v26 + 104);
    *(unsigned char *)(v25 + 112) = *(unsigned char *)(v26 + 112);
    uint64_t v32 = *(void *)(v26 + 128);
    *(void *)(v25 + 120) = *(void *)(v26 + 120);
    *(void *)(v25 + 128) = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v23 = v58;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v33 = *(_OWORD *)(v26 + 112);
    *(_OWORD *)(v25 + 96) = *(_OWORD *)(v26 + 96);
    *(_OWORD *)(v25 + 112) = v33;
    *(void *)(v25 + 128) = *(void *)(v26 + 128);
    long long v34 = *(_OWORD *)(v26 + 48);
    *(_OWORD *)(v25 + 32) = *(_OWORD *)(v26 + 32);
    *(_OWORD *)(v25 + 48) = v34;
    long long v35 = *(_OWORD *)(v26 + 80);
    *(_OWORD *)(v25 + 64) = *(_OWORD *)(v26 + 64);
    *(_OWORD *)(v25 + 80) = v35;
    long long v36 = *(_OWORD *)(v26 + 16);
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
    *(_OWORD *)(v25 + 16) = v36;
  }
  uint64_t v37 = v23[10];
  uint64_t v38 = v23[11];
  uint64_t v39 = a1 + v37;
  uint64_t v40 = a2 + v37;
  *(unsigned char *)uint64_t v39 = *(unsigned char *)v40;
  uint64_t v41 = *(void *)(v40 + 16);
  *(void *)(v39 + 8) = *(void *)(v40 + 8);
  *(void *)(v39 + 16) = v41;
  *(_WORD *)(v39 + 24) = *(_WORD *)(v40 + 24);
  uint64_t v42 = *(void *)(v40 + 40);
  *(void *)(v39 + 32) = *(void *)(v40 + 32);
  *(void *)(v39 + 40) = v42;
  *(unsigned char *)(v39 + 48) = *(unsigned char *)(v40 + 48);
  uint64_t v43 = a1 + v38;
  uint64_t v44 = a2 + v38;
  uint64_t v45 = *(void *)(a2 + v38 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v45)
  {
    *(void *)uint64_t v43 = *(void *)v44;
    *(void *)(v43 + 8) = v45;
    *(_WORD *)(v43 + 16) = *(_WORD *)(v44 + 16);
    *(void *)(v43 + 24) = *(void *)(v44 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v46 = *(_OWORD *)(v44 + 16);
    *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
    *(_OWORD *)(v43 + 16) = v46;
  }
  uint64_t v47 = v23[13];
  *(_DWORD *)(a1 + v23[12]) = *(_DWORD *)(a2 + v23[12]);
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  uint64_t v50 = *(void *)(v49 + 8);
  *(void *)uint64_t v48 = *(void *)v49;
  *(void *)(v48 + 8) = v50;
  *(_WORD *)(v48 + 16) = *(_WORD *)(v49 + 16);
  uint64_t v51 = v23[14];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  uint64_t v54 = *(void *)(a2 + v51 + 8);
  swift_bridgeObjectRetain();
  if (v54 == 1)
  {
    long long v55 = *(_OWORD *)(v53 + 16);
    *(_OWORD *)uint64_t v52 = *(_OWORD *)v53;
    *(_OWORD *)(v52 + 16) = v55;
    *(void *)(v52 + 32) = *(void *)(v53 + 32);
  }
  else
  {
    *(void *)uint64_t v52 = *(void *)v53;
    *(void *)(v52 + 8) = v54;
    uint64_t v56 = *(void *)(v53 + 24);
    *(void *)(v52 + 16) = *(void *)(v53 + 16);
    *(void *)(v52 + 24) = v56;
    *(void *)(v52 + 32) = *(void *)(v53 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for ArticleLikeEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)(a2 + v7);
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(a2 + v7 + 4);
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(a2 + v7 + 8);
  *(void *)(v8 + 16) = *(void *)(a2 + v7 + 16);
  *(void *)(v8 + 24) = *(void *)(a2 + v7 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  uint64_t v10 = *(void *)(v9 + 48);
  *(unsigned char *)(v8 + 56) = *(unsigned char *)(v9 + 56);
  *(void *)(v8 + 48) = v10;
  *(unsigned char *)(v8 + 57) = *(unsigned char *)(v9 + 57);
  *(void *)(v8 + 64) = *(void *)(v9 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v9 + 72);
  *(unsigned char *)(v8 + 80) = *(unsigned char *)(v9 + 80);
  *(void *)(v8 + 72) = v11;
  *(void *)(v8 + 88) = *(void *)(v9 + 88);
  *(void *)(v8 + 96) = *(void *)(v9 + 96);
  *(void *)(v8 + 104) = *(void *)(v9 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 112) = *(unsigned char *)(v9 + 112);
  *(void *)(v8 + 120) = *(void *)(v9 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 128) = *(unsigned char *)(v9 + 128);
  *(unsigned char *)(v8 + 129) = *(unsigned char *)(v9 + 129);
  *(unsigned char *)(v8 + 130) = *(unsigned char *)(v9 + 130);
  *(unsigned char *)(v8 + 131) = *(unsigned char *)(v9 + 131);
  *(unsigned char *)(v8 + 132) = *(unsigned char *)(v9 + 132);
  *(unsigned char *)(v8 + 133) = *(unsigned char *)(v9 + 133);
  *(unsigned char *)(v8 + 134) = *(unsigned char *)(v9 + 134);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(void *)uint64_t v13 = *(void *)(a2 + v12);
  *(void *)(v13 + 8) = *(void *)(a2 + v12 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v13 + 16) = *(unsigned char *)(v14 + 16);
  *(unsigned char *)(v13 + 17) = *(unsigned char *)(v14 + 17);
  *(void *)(v13 + 24) = *(void *)(v14 + 24);
  *(void *)(v13 + 32) = *(void *)(v14 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = (long long *)(a2 + v15);
  uint64_t v18 = *(void *)(a1 + v15 + 16);
  uint64_t v19 = *(void *)(a2 + v15 + 16);
  if (v18 == 1)
  {
    if (v19 == 1)
    {
      long long v20 = *v17;
      *(void *)(v16 + 16) = *((void *)v17 + 2);
      *(_OWORD *)uint64_t v16 = v20;
    }
    else
    {
      *(unsigned char *)uint64_t v16 = *(unsigned char *)v17;
      *(void *)(v16 + 8) = *((void *)v17 + 1);
      *(void *)(v16 + 16) = *((void *)v17 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v19 == 1)
  {
    sub_1DE05D370(v16);
    uint64_t v21 = *((void *)v17 + 2);
    *(_OWORD *)uint64_t v16 = *v17;
    *(void *)(v16 + 16) = v21;
  }
  else
  {
    *(unsigned char *)uint64_t v16 = *(unsigned char *)v17;
    *(void *)(v16 + 8) = *((void *)v17 + 1);
    *(void *)(v16 + 16) = *((void *)v17 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v22 = a3[9];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = *(void *)(a1 + v22 + 16);
  uint64_t v26 = *(void *)(a2 + v22 + 16);
  if (v25)
  {
    if (v26)
    {
      *(unsigned char *)uint64_t v23 = *(unsigned char *)v24;
      *(unsigned char *)(v23 + 1) = *(unsigned char *)(v24 + 1);
      *(void *)(v23 + 8) = *(void *)(v24 + 8);
      *(void *)(v23 + 16) = *(void *)(v24 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v23 + 24) = *(_DWORD *)(v24 + 24);
      *(_DWORD *)(v23 + 28) = *(_DWORD *)(v24 + 28);
      *(void *)(v23 + 32) = *(void *)(v24 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v23 + 40) = *(void *)(v24 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v23 + 48) = *(void *)(v24 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v23 + 56) = *(void *)(v24 + 56);
      *(void *)(v23 + 64) = *(void *)(v24 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v23 + 72) = *(void *)(v24 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v23 + 80) = *(unsigned char *)(v24 + 80);
      *(void *)(v23 + 88) = *(void *)(v24 + 88);
      *(void *)(v23 + 96) = *(void *)(v24 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v27 = *(void *)(v24 + 104);
      *(unsigned char *)(v23 + 112) = *(unsigned char *)(v24 + 112);
      *(void *)(v23 + 104) = v27;
      *(void *)(v23 + 120) = *(void *)(v24 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v23 + 128) = *(void *)(v24 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DE069980(v23);
      *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
      long long v29 = *(_OWORD *)(v24 + 64);
      long long v31 = *(_OWORD *)(v24 + 16);
      long long v30 = *(_OWORD *)(v24 + 32);
      *(_OWORD *)(v23 + 48) = *(_OWORD *)(v24 + 48);
      *(_OWORD *)(v23 + 64) = v29;
      *(_OWORD *)(v23 + 16) = v31;
      *(_OWORD *)(v23 + 32) = v30;
      long long v33 = *(_OWORD *)(v24 + 96);
      long long v32 = *(_OWORD *)(v24 + 112);
      long long v34 = *(_OWORD *)(v24 + 80);
      *(void *)(v23 + 128) = *(void *)(v24 + 128);
      *(_OWORD *)(v23 + 96) = v33;
      *(_OWORD *)(v23 + 112) = v32;
      *(_OWORD *)(v23 + 80) = v34;
    }
  }
  else if (v26)
  {
    *(unsigned char *)uint64_t v23 = *(unsigned char *)v24;
    *(unsigned char *)(v23 + 1) = *(unsigned char *)(v24 + 1);
    *(void *)(v23 + 8) = *(void *)(v24 + 8);
    *(void *)(v23 + 16) = *(void *)(v24 + 16);
    *(_DWORD *)(v23 + 24) = *(_DWORD *)(v24 + 24);
    *(_DWORD *)(v23 + 28) = *(_DWORD *)(v24 + 28);
    *(void *)(v23 + 32) = *(void *)(v24 + 32);
    *(void *)(v23 + 40) = *(void *)(v24 + 40);
    *(void *)(v23 + 48) = *(void *)(v24 + 48);
    *(void *)(v23 + 56) = *(void *)(v24 + 56);
    *(void *)(v23 + 64) = *(void *)(v24 + 64);
    *(void *)(v23 + 72) = *(void *)(v24 + 72);
    *(unsigned char *)(v23 + 80) = *(unsigned char *)(v24 + 80);
    *(void *)(v23 + 88) = *(void *)(v24 + 88);
    *(void *)(v23 + 96) = *(void *)(v24 + 96);
    uint64_t v28 = *(void *)(v24 + 104);
    *(unsigned char *)(v23 + 112) = *(unsigned char *)(v24 + 112);
    *(void *)(v23 + 104) = v28;
    *(void *)(v23 + 120) = *(void *)(v24 + 120);
    *(void *)(v23 + 128) = *(void *)(v24 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    long long v35 = *(_OWORD *)(v24 + 16);
    long long v36 = *(_OWORD *)(v24 + 32);
    long long v37 = *(_OWORD *)(v24 + 64);
    *(_OWORD *)(v23 + 48) = *(_OWORD *)(v24 + 48);
    *(_OWORD *)(v23 + 64) = v37;
    *(_OWORD *)(v23 + 16) = v35;
    *(_OWORD *)(v23 + 32) = v36;
    long long v38 = *(_OWORD *)(v24 + 80);
    long long v39 = *(_OWORD *)(v24 + 96);
    long long v40 = *(_OWORD *)(v24 + 112);
    *(void *)(v23 + 128) = *(void *)(v24 + 128);
    *(_OWORD *)(v23 + 96) = v39;
    *(_OWORD *)(v23 + 112) = v40;
    *(_OWORD *)(v23 + 80) = v38;
  }
  uint64_t v41 = a3[10];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = a2 + v41;
  *(unsigned char *)uint64_t v42 = *(unsigned char *)(a2 + v41);
  *(void *)(v42 + 8) = *(void *)(a2 + v41 + 8);
  *(void *)(v42 + 16) = *(void *)(a2 + v41 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v42 + 24) = *(unsigned char *)(v43 + 24);
  *(unsigned char *)(v42 + 25) = *(unsigned char *)(v43 + 25);
  *(void *)(v42 + 32) = *(void *)(v43 + 32);
  *(void *)(v42 + 40) = *(void *)(v43 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v42 + 48) = *(unsigned char *)(v43 + 48);
  uint64_t v44 = a3[11];
  uint64_t v45 = a1 + v44;
  uint64_t v46 = a2 + v44;
  uint64_t v47 = *(void *)(a1 + v44 + 8);
  uint64_t v48 = *(void *)(a2 + v44 + 8);
  if (v47)
  {
    if (v48)
    {
      *(void *)uint64_t v45 = *(void *)v46;
      *(void *)(v45 + 8) = *(void *)(v46 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v45 + 16) = *(unsigned char *)(v46 + 16);
      *(unsigned char *)(v45 + 17) = *(unsigned char *)(v46 + 17);
      *(void *)(v45 + 24) = *(void *)(v46 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DE07C4F8(v45);
      long long v49 = *(_OWORD *)(v46 + 16);
      *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
      *(_OWORD *)(v45 + 16) = v49;
    }
  }
  else if (v48)
  {
    *(void *)uint64_t v45 = *(void *)v46;
    *(void *)(v45 + 8) = *(void *)(v46 + 8);
    *(unsigned char *)(v45 + 16) = *(unsigned char *)(v46 + 16);
    *(unsigned char *)(v45 + 17) = *(unsigned char *)(v46 + 17);
    *(void *)(v45 + 24) = *(void *)(v46 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v50 = *(_OWORD *)(v46 + 16);
    *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
    *(_OWORD *)(v45 + 16) = v50;
  }
  uint64_t v51 = a3[12];
  uint64_t v52 = (unsigned char *)(a1 + v51);
  uint64_t v53 = (unsigned char *)(a2 + v51);
  *uint64_t v52 = *v53;
  v52[1] = v53[1];
  v52[2] = v53[2];
  v52[3] = v53[3];
  uint64_t v54 = a3[13];
  uint64_t v55 = a1 + v54;
  uint64_t v56 = a2 + v54;
  *(void *)uint64_t v55 = *(void *)(a2 + v54);
  *(void *)(v55 + 8) = *(void *)(a2 + v54 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v55 + 16) = *(unsigned char *)(v56 + 16);
  *(unsigned char *)(v55 + 17) = *(unsigned char *)(v56 + 17);
  uint64_t v57 = a3[14];
  uint64_t v58 = a1 + v57;
  uint64_t v59 = (long long *)(a2 + v57);
  uint64_t v60 = *(void *)(a1 + v57 + 8);
  uint64_t v61 = *((void *)v59 + 1);
  if (v60 == 1)
  {
    if (v61 == 1)
    {
      long long v62 = *v59;
      long long v63 = v59[1];
      *(void *)(v58 + 32) = *((void *)v59 + 4);
      *(_OWORD *)uint64_t v58 = v62;
      *(_OWORD *)(v58 + 16) = v63;
    }
    else
    {
      *(void *)uint64_t v58 = *(void *)v59;
      *(void *)(v58 + 8) = *((void *)v59 + 1);
      *(void *)(v58 + 16) = *((void *)v59 + 2);
      *(void *)(v58 + 24) = *((void *)v59 + 3);
      *(void *)(v58 + 32) = *((void *)v59 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v61 == 1)
  {
    sub_1DE07C54C(v58);
    uint64_t v64 = *((void *)v59 + 4);
    long long v65 = v59[1];
    *(_OWORD *)uint64_t v58 = *v59;
    *(_OWORD *)(v58 + 16) = v65;
    *(void *)(v58 + 32) = v64;
  }
  else
  {
    *(void *)uint64_t v58 = *(void *)v59;
    *(void *)(v58 + 8) = *((void *)v59 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v58 + 16) = *((void *)v59 + 2);
    *(void *)(v58 + 24) = *((void *)v59 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v58 + 32) = *((void *)v59 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t initializeWithTake for ArticleLikeEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  long long v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  *(void *)(v9 + 127) = *(void *)(v10 + 127);
  long long v12 = *(_OWORD *)(v10 + 112);
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(v10 + 96);
  *(_OWORD *)(v9 + 112) = v12;
  long long v13 = *(_OWORD *)(v10 + 80);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)(v10 + 64);
  *(_OWORD *)(v9 + 80) = v13;
  long long v14 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v14;
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v15;
  uint64_t v18 = a2 + v15;
  long long v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(void *)(v17 + 32) = *(void *)(v18 + 32);
  uint64_t v20 = a1 + v16;
  uint64_t v21 = a2 + v16;
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(void *)(v20 + 16) = *(void *)(v21 + 16);
  uint64_t v22 = a3[9];
  uint64_t v23 = a3[10];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(void *)(v24 + 128) = *(void *)(v25 + 128);
  long long v26 = *(_OWORD *)(v25 + 48);
  *(_OWORD *)(v24 + 32) = *(_OWORD *)(v25 + 32);
  *(_OWORD *)(v24 + 48) = v26;
  long long v27 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v27;
  long long v28 = *(_OWORD *)(v25 + 112);
  *(_OWORD *)(v24 + 96) = *(_OWORD *)(v25 + 96);
  *(_OWORD *)(v24 + 112) = v28;
  long long v29 = *(_OWORD *)(v25 + 80);
  *(_OWORD *)(v24 + 64) = *(_OWORD *)(v25 + 64);
  *(_OWORD *)(v24 + 80) = v29;
  uint64_t v30 = a1 + v23;
  uint64_t v31 = a2 + v23;
  long long v32 = *(_OWORD *)(v31 + 16);
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  *(_OWORD *)(v30 + 16) = v32;
  *(_OWORD *)(v30 + 32) = *(_OWORD *)(v31 + 32);
  *(unsigned char *)(v30 + 48) = *(unsigned char *)(v31 + 48);
  uint64_t v33 = a3[11];
  uint64_t v34 = a3[12];
  long long v35 = (_OWORD *)(a1 + v33);
  long long v36 = (_OWORD *)(a2 + v33);
  long long v37 = v36[1];
  *long long v35 = *v36;
  v35[1] = v37;
  *(_DWORD *)(a1 + v34) = *(_DWORD *)(a2 + v34);
  uint64_t v38 = a3[13];
  uint64_t v39 = a3[14];
  uint64_t v40 = a1 + v38;
  uint64_t v41 = a2 + v38;
  *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
  *(_WORD *)(v40 + 16) = *(_WORD *)(v41 + 16);
  uint64_t v42 = a1 + v39;
  uint64_t v43 = a2 + v39;
  long long v44 = *(_OWORD *)(v43 + 16);
  *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
  *(_OWORD *)(v42 + 16) = v44;
  *(void *)(v42 + 32) = *(void *)(v43 + 32);
  return a1;
}

uint64_t assignWithTake for ArticleLikeEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)(a2 + v7);
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(a2 + v7 + 4);
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(a2 + v7 + 8);
  uint64_t v10 = *(void *)(a2 + v7 + 24);
  *(void *)(v8 + 16) = *(void *)(a2 + v7 + 16);
  *(void *)(v8 + 24) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
  uint64_t v11 = *(void *)(v9 + 48);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  *(void *)(v8 + 48) = v11;
  *(unsigned char *)(v8 + 56) = *(unsigned char *)(v9 + 56);
  *(unsigned char *)(v8 + 57) = *(unsigned char *)(v9 + 57);
  *(void *)(v8 + 64) = *(void *)(v9 + 64);
  swift_bridgeObjectRelease();
  *(void *)(v8 + 72) = *(void *)(v9 + 72);
  *(unsigned char *)(v8 + 80) = *(unsigned char *)(v9 + 80);
  *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
  *(void *)(v8 + 104) = *(void *)(v9 + 104);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 112) = *(unsigned char *)(v9 + 112);
  *(void *)(v8 + 120) = *(void *)(v9 + 120);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 128) = *(unsigned char *)(v9 + 128);
  *(unsigned char *)(v8 + 129) = *(unsigned char *)(v9 + 129);
  *(unsigned char *)(v8 + 130) = *(unsigned char *)(v9 + 130);
  *(unsigned char *)(v8 + 131) = *(unsigned char *)(v9 + 131);
  *(unsigned char *)(v8 + 132) = *(unsigned char *)(v9 + 132);
  *(unsigned char *)(v8 + 133) = *(unsigned char *)(v9 + 133);
  *(unsigned char *)(v8 + 134) = *(unsigned char *)(v9 + 134);
  uint64_t v12 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)(a2 + v12);
  uint64_t v16 = *(void *)(a2 + v12 + 8);
  *(void *)uint64_t v13 = v15;
  *(void *)(v13 + 8) = v16;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v13 + 16) = *(unsigned char *)(v14 + 16);
  *(unsigned char *)(v13 + 17) = *(unsigned char *)(v14 + 17);
  uint64_t v17 = *(void *)(v14 + 32);
  *(void *)(v13 + 24) = *(void *)(v14 + 24);
  *(void *)(v13 + 32) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[8];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  if (*(void *)(a1 + v18 + 16) == 1) {
    goto LABEL_4;
  }
  uint64_t v21 = *(void *)(v20 + 16);
  if (v21 == 1)
  {
    sub_1DE05D370(v19);
LABEL_4:
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    *(void *)(v19 + 16) = *(void *)(v20 + 16);
    goto LABEL_6;
  }
  *(unsigned char *)uint64_t v19 = *(unsigned char *)v20;
  *(void *)(v19 + 8) = *(void *)(v20 + 8);
  *(void *)(v19 + 16) = v21;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v22 = a3[9];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  if (*(void *)(a1 + v22 + 16))
  {
    uint64_t v25 = *(void *)(v24 + 16);
    if (v25)
    {
      *(_WORD *)uint64_t v23 = *(_WORD *)v24;
      *(void *)(v23 + 8) = *(void *)(v24 + 8);
      *(void *)(v23 + 16) = v25;
      swift_bridgeObjectRelease();
      *(void *)(v23 + 24) = *(void *)(v24 + 24);
      *(void *)(v23 + 32) = *(void *)(v24 + 32);
      swift_bridgeObjectRelease();
      *(void *)(v23 + 40) = *(void *)(v24 + 40);
      swift_bridgeObjectRelease();
      *(void *)(v23 + 48) = *(void *)(v24 + 48);
      swift_bridgeObjectRelease();
      uint64_t v26 = *(void *)(v24 + 64);
      *(void *)(v23 + 56) = *(void *)(v24 + 56);
      *(void *)(v23 + 64) = v26;
      swift_bridgeObjectRelease();
      *(void *)(v23 + 72) = *(void *)(v24 + 72);
      swift_bridgeObjectRelease();
      *(unsigned char *)(v23 + 80) = *(unsigned char *)(v24 + 80);
      uint64_t v27 = *(void *)(v24 + 96);
      *(void *)(v23 + 88) = *(void *)(v24 + 88);
      *(void *)(v23 + 96) = v27;
      swift_bridgeObjectRelease();
      *(void *)(v23 + 104) = *(void *)(v24 + 104);
      *(unsigned char *)(v23 + 112) = *(unsigned char *)(v24 + 112);
      *(void *)(v23 + 120) = *(void *)(v24 + 120);
      swift_bridgeObjectRelease();
      *(void *)(v23 + 128) = *(void *)(v24 + 128);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1DE069980(v23);
  }
  long long v28 = *(_OWORD *)(v24 + 112);
  *(_OWORD *)(v23 + 96) = *(_OWORD *)(v24 + 96);
  *(_OWORD *)(v23 + 112) = v28;
  *(void *)(v23 + 128) = *(void *)(v24 + 128);
  long long v29 = *(_OWORD *)(v24 + 48);
  *(_OWORD *)(v23 + 32) = *(_OWORD *)(v24 + 32);
  *(_OWORD *)(v23 + 48) = v29;
  long long v30 = *(_OWORD *)(v24 + 80);
  *(_OWORD *)(v23 + 64) = *(_OWORD *)(v24 + 64);
  *(_OWORD *)(v23 + 80) = v30;
  long long v31 = *(_OWORD *)(v24 + 16);
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  *(_OWORD *)(v23 + 16) = v31;
LABEL_11:
  uint64_t v32 = a3[10];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  *(unsigned char *)uint64_t v33 = *(unsigned char *)(a2 + v32);
  uint64_t v35 = *(void *)(a2 + v32 + 16);
  *(void *)(v33 + 8) = *(void *)(a2 + v32 + 8);
  *(void *)(v33 + 16) = v35;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v33 + 24) = *(unsigned char *)(v34 + 24);
  *(unsigned char *)(v33 + 25) = *(unsigned char *)(v34 + 25);
  uint64_t v36 = *(void *)(v34 + 40);
  *(void *)(v33 + 32) = *(void *)(v34 + 32);
  *(void *)(v33 + 40) = v36;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v33 + 48) = *(unsigned char *)(v34 + 48);
  uint64_t v37 = a3[11];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = a2 + v37;
  if (*(void *)(a1 + v37 + 8))
  {
    uint64_t v40 = *(void *)(v39 + 8);
    if (v40)
    {
      *(void *)uint64_t v38 = *(void *)v39;
      *(void *)(v38 + 8) = v40;
      swift_bridgeObjectRelease();
      *(unsigned char *)(v38 + 16) = *(unsigned char *)(v39 + 16);
      *(unsigned char *)(v38 + 17) = *(unsigned char *)(v39 + 17);
      *(void *)(v38 + 24) = *(void *)(v39 + 24);
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_1DE07C4F8(v38);
  }
  long long v41 = *(_OWORD *)(v39 + 16);
  *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
  *(_OWORD *)(v38 + 16) = v41;
LABEL_16:
  uint64_t v42 = a3[12];
  uint64_t v43 = a3[13];
  uint64_t v44 = a1 + v42;
  uint64_t v45 = a2 + v42;
  *(unsigned char *)uint64_t v44 = *(unsigned char *)v45;
  *(unsigned char *)(v44 + 1) = *(unsigned char *)(v45 + 1);
  *(_WORD *)(v44 + 2) = *(_WORD *)(v45 + 2);
  uint64_t v46 = a1 + v43;
  uint64_t v47 = a2 + v43;
  uint64_t v48 = *(void *)(a2 + v43);
  uint64_t v49 = *(void *)(a2 + v43 + 8);
  *(void *)uint64_t v46 = v48;
  *(void *)(v46 + 8) = v49;
  swift_bridgeObjectRelease();
  *(_WORD *)(v46 + 16) = *(_WORD *)(v47 + 16);
  uint64_t v50 = a3[14];
  uint64_t v51 = (void *)(a1 + v50);
  uint64_t v52 = (void *)(a2 + v50);
  if (*(void *)(a1 + v50 + 8) != 1)
  {
    uint64_t v53 = v52[1];
    if (v53 != 1)
    {
      *uint64_t v51 = *v52;
      v51[1] = v53;
      swift_bridgeObjectRelease();
      uint64_t v55 = v52[3];
      v51[2] = v52[2];
      v51[3] = v55;
      swift_bridgeObjectRelease();
      v51[4] = v52[4];
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1DE07C54C((uint64_t)v51);
  }
  long long v54 = *((_OWORD *)v52 + 1);
  *(_OWORD *)uint64_t v51 = *(_OWORD *)v52;
  *((_OWORD *)v51 + 1) = v54;
  v51[4] = v52[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleLikeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE08FBBC);
}

uint64_t sub_1DE08FBBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DE47F330();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ArticleLikeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE08FC94);
}

uint64_t sub_1DE08FC94(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1DE47F330();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1DE08FD54()
{
  uint64_t result = sub_1DE47F330();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ArticleLikeEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE08FF10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArticleLikeEvent.Model.CodingKeys()
{
  return &type metadata for ArticleLikeEvent.Model.CodingKeys;
}

unint64_t sub_1DE08FF4C()
{
  unint64_t result = qword_1EABA1FF8;
  if (!qword_1EABA1FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA1FF8);
  }
  return result;
}

unint64_t sub_1DE08FFA4()
{
  unint64_t result = qword_1EABA2000;
  if (!qword_1EABA2000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2000);
  }
  return result;
}

unint64_t sub_1DE08FFFC()
{
  unint64_t result = qword_1EABA2008;
  if (!qword_1EABA2008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2008);
  }
  return result;
}

uint64_t sub_1DE090050(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61446E6F69746361 && a2 == 0xEA00000000006174 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001DE4BDDA0 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DE4BDEB0 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001DE4BE7E0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v6 = sub_1DE480660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

uint64_t static WidgetData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t WidgetData.webEmbedData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t WidgetData.webEmbedData.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v1 = v2;
  v1[1] = v3;
  return result;
}

uint64_t (*WidgetData.webEmbedData.modify())()
{
  return nullsub_1;
}

NewsAnalytics::WidgetData __swiftcall WidgetData.init(webEmbedData:)(NewsAnalytics::WidgetData webEmbedData)
{
  uint64_t v2 = *(void *)(webEmbedData.webEmbedData.embedUrl._countAndFlagsBits + 8);
  *unint64_t v1 = *(void *)webEmbedData.webEmbedData.embedUrl._countAndFlagsBits;
  v1[1] = v2;
  return webEmbedData;
}

uint64_t sub_1DE090578()
{
  return 0x6465626D45626577;
}

uint64_t sub_1DE090598@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6465626D45626577 && a2 == 0xEC00000061746144)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1DE480660();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DE090648(uint64_t a1)
{
  unint64_t v2 = sub_1DE090820();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE090684(uint64_t a1)
{
  unint64_t v2 = sub_1DE090820();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t WidgetData.encode(to:)(void *a1)
{
  sub_1DE090A10(0, &qword_1EABA2010, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v7 = (char *)v11 - v6;
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE090820();
  sub_1DE480790();
  v11[0] = v9;
  v11[1] = v8;
  sub_1DE08162C();
  sub_1DE4805C0();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DE090820()
{
  unint64_t result = qword_1EABA2018;
  if (!qword_1EABA2018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2018);
  }
  return result;
}

uint64_t WidgetData.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1DE090A10(0, &qword_1EABA2020, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE090820();
  sub_1DE480770();
  if (!v2)
  {
    sub_1DE0815D8();
    sub_1DE4804E0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v10 = v12[1];
    *a2 = v12[0];
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DE090A10(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE090820();
    unint64_t v7 = a3(a1, &type metadata for WidgetData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1DE090A78()
{
  unint64_t result = qword_1EABA2028;
  if (!qword_1EABA2028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2028);
  }
  return result;
}

unint64_t sub_1DE090AD0()
{
  unint64_t result = qword_1EABA2030;
  if (!qword_1EABA2030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2030);
  }
  return result;
}

uint64_t sub_1DE090B24@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return WidgetData.init(from:)(a1, a2);
}

uint64_t sub_1DE090B3C(void *a1)
{
  return WidgetData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for WidgetData()
{
  return &type metadata for WidgetData;
}

unsigned char *storeEnumTagSinglePayload for WidgetData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DE090C00);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetData.CodingKeys()
{
  return &type metadata for WidgetData.CodingKeys;
}

unint64_t sub_1DE090C3C()
{
  unint64_t result = qword_1EABA2038;
  if (!qword_1EABA2038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2038);
  }
  return result;
}

unint64_t sub_1DE090C94()
{
  unint64_t result = qword_1EABA2040;
  if (!qword_1EABA2040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2040);
  }
  return result;
}

unint64_t sub_1DE090CEC()
{
  unint64_t result = qword_1EABA2048;
  if (!qword_1EABA2048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2048);
  }
  return result;
}

NewsAnalytics::PurchaseType_optional __swiftcall PurchaseType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1DE480420();
  result.value = swift_bridgeObjectRelease();
  char v5 = 7;
  if (v3 < 7) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t PurchaseType.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6574726143616C61;
      break;
    case 2:
      uint64_t result = 0x656C646E7562;
      break;
    case 3:
      uint64_t result = 0x656C646E754273;
      break;
    case 4:
      uint64_t result = 0x43656C646E754273;
      break;
    case 5:
      uint64_t result = 0x7748656C646E7562;
      break;
    case 6:
      uint64_t result = 0x6C616E7265747865;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE090E88(unsigned __int8 *a1, char *a2)
{
  return sub_1DE3DAD60(*a1, *a2);
}

unint64_t sub_1DE090E98()
{
  unint64_t result = qword_1EABA2050;
  if (!qword_1EABA2050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2050);
  }
  return result;
}

uint64_t sub_1DE090EEC()
{
  return sub_1DE478D20();
}

uint64_t sub_1DE090EF8()
{
  sub_1DE47FF00();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE091018()
{
  return sub_1DE478D20();
}

NewsAnalytics::PurchaseType_optional sub_1DE091020(Swift::String *a1)
{
  return PurchaseType.init(rawValue:)(*a1);
}

void sub_1DE09102C(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x6574726143616C61;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x656C646E7562;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    case 3:
      *(void *)a1 = 0x656C646E754273;
      *(void *)(a1 + 8) = 0xE700000000000000;
      break;
    case 4:
      strcpy((char *)a1, "sBundleCarrier");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 5:
      *(void *)a1 = 0x7748656C646E7562;
      *(void *)(a1 + 8) = 0xE900000000000064;
      break;
    case 6:
      *(void *)a1 = 0x6C616E7265747865;
      *(void *)(a1 + 8) = 0xE800000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1DE091130()
{
  return sub_1DE47FFF0();
}

uint64_t sub_1DE091190()
{
  return sub_1DE47FFE0();
}

unsigned char *storeEnumTagSinglePayload for PurchaseType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE0912ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PurchaseType()
{
  return &type metadata for PurchaseType;
}

unint64_t sub_1DE0912E4()
{
  unint64_t result = qword_1EBEC2590;
  if (!qword_1EBEC2590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC2590);
  }
  return result;
}

uint64_t dispatch thunk of ExternalAnalyticsQueryItemsGeneratorType.generateQueryItems<A>(from:sessionID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

unsigned char *storeEnumTagSinglePayload for QueryItemsGeneratorError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DE0913FCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for QueryItemsGeneratorError()
{
  return &type metadata for QueryItemsGeneratorError;
}

unint64_t sub_1DE091438()
{
  unint64_t result = qword_1EABA2058;
  if (!qword_1EABA2058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2058);
  }
  return result;
}

NewsAnalytics::UserSelectionType_optional __swiftcall UserSelectionType.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1DE480420();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t UserSelectionType.rawValue.getter()
{
  uint64_t v1 = 0x6E4F6E727574;
  if (*v0 != 1) {
    uint64_t v1 = 0x776F4E746F6ELL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_1DE09154C(char *a1, unsigned __int8 *a2)
{
  return sub_1DE3D7FF4(*a1, *a2);
}

unint64_t sub_1DE09155C()
{
  unint64_t result = qword_1EABA2060;
  if (!qword_1EABA2060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2060);
  }
  return result;
}

uint64_t sub_1DE0915B0()
{
  return sub_1DE480750();
}

uint64_t sub_1DE09164C()
{
  sub_1DE47FF00();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE0916D4()
{
  return sub_1DE480750();
}

NewsAnalytics::UserSelectionType_optional sub_1DE09176C(Swift::String *a1)
{
  return UserSelectionType.init(rawValue:)(*a1);
}

void sub_1DE091778(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = 0x6E4F6E727574;
  if (v2 != 1) {
    uint64_t v4 = 0x776F4E746F6ELL;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 0x6E776F6E6B6E75;
  }
  if (!v5) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_1DE0917D0()
{
  return sub_1DE47FFF0();
}

uint64_t sub_1DE091830()
{
  return sub_1DE47FFE0();
}

unsigned char *storeEnumTagSinglePayload for UserSelectionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE09194CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserSelectionType()
{
  return &type metadata for UserSelectionType;
}

unint64_t sub_1DE091984()
{
  unint64_t result = qword_1EABA2068;
  if (!qword_1EABA2068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2068);
  }
  return result;
}

uint64_t FeedLayoutResult.LayoutPath.analyticsLayoutPath.getter@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1DE47F9A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (result == *MEMORY[0x1E4F7F4E0])
  {
    char v9 = 0;
LABEL_7:
    *a1 = v9;
    return result;
  }
  if (result == *MEMORY[0x1E4F7F4D8])
  {
    char v9 = 1;
    goto LABEL_7;
  }
  if (result == *MEMORY[0x1E4F7F4E8])
  {
    char v9 = 2;
    goto LABEL_7;
  }
  uint64_t result = sub_1DE480650();
  __break(1u);
  return result;
}

uint64_t sub_1DE091B24(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4A9C8], qword_1EABA2070, MEMORY[0x1E4F4A9C0]);
}

uint64_t static PuzzleShareEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA09C0, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EABA2070, a1);
}

uint64_t static PuzzleShareEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_1DE091B8C(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4AAB0], qword_1EABA2088, MEMORY[0x1E4F4AAA0]);
}

uint64_t static PuzzleShareEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA09C8, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EABA2088, a1);
}

uint64_t sub_1DE091BEC()
{
  uint64_t v0 = sub_1DE47F020();
  __swift_allocate_value_buffer(v0, qword_1EABA20A0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EABA20A0);
  return sub_1DE47F010();
}

uint64_t static PuzzleShareEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA09D0, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA20A0, a1);
}

uint64_t PuzzleShareEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084((uint64_t (*)(void))sub_1DE04D618, a1);
}

uint64_t PuzzleShareEvent.eventData.setter(uint64_t a1)
{
  sub_1DE04D618();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*PuzzleShareEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleShareEvent.actionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleShareEvent(0) + 20);
  sub_1DE092A20(0, &qword_1EBEC1E00, (void (*)(void))sub_1DE087F74, (void (*)(void))sub_1DE087FC8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for PuzzleShareEvent(uint64_t a1)
{
  return sub_1DE04E1D0(a1, (uint64_t *)&unk_1EABA20D0);
}

uint64_t PuzzleShareEvent.actionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleShareEvent(0) + 20);
  sub_1DE092A20(0, &qword_1EBEC1E00, (void (*)(void))sub_1DE087F74, (void (*)(void))sub_1DE087FC8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PuzzleShareEvent.actionData.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleShareEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleShareEvent(0) + 24);
  sub_1DE092A20(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PuzzleShareEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleShareEvent(0) + 24);
  sub_1DE092A20(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PuzzleShareEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleShareEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleShareEvent(0) + 28);
  sub_1DE092A20(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PuzzleShareEvent.groupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleShareEvent(0) + 28);
  sub_1DE092A20(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PuzzleShareEvent.groupData.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleShareEvent.shareContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleShareEvent(0) + 32);
  sub_1DE092A20(0, &qword_1EBEC1EF0, (void (*)(void))sub_1DE0922D8, (void (*)(void))sub_1DE09232C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE0922D8()
{
  unint64_t result = qword_1EBEC3C78;
  if (!qword_1EBEC3C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC3C78);
  }
  return result;
}

unint64_t sub_1DE09232C()
{
  unint64_t result = qword_1EBEC3C70;
  if (!qword_1EBEC3C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC3C70);
  }
  return result;
}

uint64_t PuzzleShareEvent.shareContextData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleShareEvent(0) + 32);
  sub_1DE092A20(0, &qword_1EBEC1EF0, (void (*)(void))sub_1DE0922D8, (void (*)(void))sub_1DE09232C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PuzzleShareEvent.shareContextData.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleShareEvent.puzzleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleShareEvent(0) + 36);
  sub_1DE092A20(0, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PuzzleShareEvent.puzzleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleShareEvent(0) + 36);
  sub_1DE092A20(0, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PuzzleShareEvent.puzzleData.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleShareEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleShareEvent(0) + 40);
  sub_1DE092A20(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PuzzleShareEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleShareEvent(0) + 40);
  sub_1DE092A20(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PuzzleShareEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleShareEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleShareEvent(0) + 44);
  sub_1DE092A20(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PuzzleShareEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleShareEvent(0) + 44);
  sub_1DE092A20(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PuzzleShareEvent.userBundleSubscriptionContextData.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleShareEvent.adData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleShareEvent(0) + 48);
  sub_1DE092A20(0, &qword_1EBEC1FC0, (void (*)(void))sub_1DE092A9C, (void (*)(void))sub_1DE092AF0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_1DE092A20(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_1DE47ECA0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1DE092A9C()
{
  unint64_t result = qword_1EBEC70D8;
  if (!qword_1EBEC70D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC70D8);
  }
  return result;
}

unint64_t sub_1DE092AF0()
{
  unint64_t result = qword_1EBEC70D0;
  if (!qword_1EBEC70D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC70D0);
  }
  return result;
}

uint64_t PuzzleShareEvent.adData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleShareEvent(0) + 48);
  sub_1DE092A20(0, &qword_1EBEC1FC0, (void (*)(void))sub_1DE092A9C, (void (*)(void))sub_1DE092AF0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PuzzleShareEvent.adData.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleShareEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for PuzzleShareEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_1DE092A20(0, &qword_1EBEC1E00, (void (*)(void))sub_1DE087F74, (void (*)(void))sub_1DE087FC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = *MEMORY[0x1E4F4A9F8];
  sub_1DE092A20(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  uint64_t v10 = a1 + v4[7];
  sub_1DE092A20(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v8, v11);
  uint64_t v12 = a1 + v4[8];
  sub_1DE092A20(0, &qword_1EBEC1EF0, (void (*)(void))sub_1DE0922D8, (void (*)(void))sub_1DE09232C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v2, v13);
  uint64_t v14 = a1 + v4[9];
  sub_1DE092A20(0, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v2, v15);
  uint64_t v16 = a1 + v4[10];
  sub_1DE092A20(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v8, v17);
  uint64_t v18 = a1 + v4[11];
  sub_1DE092A20(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v2, v19);
  uint64_t v20 = a1 + v4[12];
  sub_1DE092A20(0, &qword_1EBEC1FC0, (void (*)(void))sub_1DE092A9C, (void (*)(void))sub_1DE092AF0);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104);

  return v22(v20, v8, v21);
}

uint64_t PuzzleShareEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084(MEMORY[0x1E4F4AB70], a1);
}

uint64_t PuzzleShareEvent.Model.actionData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for PuzzleShareEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for PuzzleShareEvent.Model(uint64_t a1)
{
  return sub_1DE04E1D0(a1, (uint64_t *)&unk_1EABA20E0);
}

uint64_t PuzzleShareEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PuzzleShareEvent.Model(0) + 24));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;

  return sub_1DE056598(v4, v5, v6);
}

void *PuzzleShareEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PuzzleShareEvent.Model(0);
  sub_1DE063B10(v1 + *(int *)(v3 + 28), (uint64_t)v5);
  sub_1DE063B10((uint64_t)v5, a1);
  return sub_1DE0652D8(v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DE063BCC);
}

uint64_t PuzzleShareEvent.Model.shareContextData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for PuzzleShareEvent.Model(0) + 32));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t PuzzleShareEvent.Model.puzzleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PuzzleShareEvent.Model(0) + 36));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  int v8 = *((_DWORD *)v3 + 8);
  uint64_t v9 = v3[5];
  char v10 = *((unsigned char *)v3 + 48);
  uint64_t v11 = v3[7];
  char v12 = *((unsigned char *)v3 + 64);
  char v13 = *((unsigned char *)v3 + 65);
  uint64_t v14 = v3[9];
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(_DWORD *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v12;
  *(unsigned char *)(a1 + 65) = v13;
  *(void *)(a1 + 72) = v14;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t PuzzleShareEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PuzzleShareEvent.Model(0) + 40));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t PuzzleShareEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (char *)(v1 + *(int *)(type metadata accessor for PuzzleShareEvent.Model(0) + 44));
  char v4 = *v3;
  uint64_t v5 = *((void *)v3 + 1);
  uint64_t v6 = *((void *)v3 + 2);
  char v7 = v3[24];
  char v8 = v3[25];
  uint64_t v10 = *((void *)v3 + 4);
  uint64_t v9 = *((void *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(unsigned char *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 25) = v8;
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t PuzzleShareEvent.Model.adData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PuzzleShareEvent.Model(0) + 48);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(v3 + 32);

  return sub_1DE074E14(v4, v5);
}

__n128 PuzzleShareEvent.Model.init(eventData:actionData:feedData:groupData:shareContextData:puzzleData:viewData:userBundleSubscriptionContextData:adData:)@<Q0>(uint64_t a1@<X0>, char *a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, long long *a6@<X5>, uint64_t *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, __n128 *a10)
{
  char v16 = *a2;
  long long v31 = *a3;
  uint64_t v17 = *((void *)a3 + 2);
  sub_1DE063B10(a4, (uint64_t)v54);
  uint64_t v19 = *a5;
  uint64_t v18 = a5[1];
  long long v40 = *a6;
  uint64_t v38 = *((void *)a6 + 3);
  uint64_t v39 = *((void *)a6 + 2);
  int v37 = *((_DWORD *)a6 + 8);
  uint64_t v36 = *((void *)a6 + 5);
  char v35 = *((unsigned char *)a6 + 48);
  uint64_t v34 = *((void *)a6 + 7);
  char v32 = *((unsigned char *)a6 + 65);
  char v33 = *((unsigned char *)a6 + 64);
  uint64_t v20 = *((void *)a6 + 9);
  uint64_t v41 = a7[1];
  uint64_t v42 = *a7;
  LOWORD(a7) = *((_WORD *)a7 + 8);
  char v50 = *a8;
  uint64_t v48 = *((void *)a8 + 2);
  uint64_t v49 = *((void *)a8 + 1);
  char v46 = a8[25];
  char v47 = a8[24];
  uint64_t v44 = *((void *)a8 + 5);
  uint64_t v45 = *((void *)a8 + 4);
  char v43 = a8[48];
  __n128 v53 = *a10;
  unint64_t v51 = a10[1].n128_u64[1];
  unint64_t v52 = a10[1].n128_u64[0];
  unsigned __int8 v21 = a10[2].n128_u8[0];
  uint64_t v22 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(a9, a1, v22);
  uint64_t v23 = (int *)type metadata accessor for PuzzleShareEvent.Model(0);
  *(unsigned char *)(a9 + v23[5]) = v16;
  uint64_t v24 = a9 + v23[6];
  *(_OWORD *)uint64_t v24 = v31;
  *(void *)(v24 + 16) = v17;
  sub_1DE063B10((uint64_t)v54, a9 + v23[7]);
  uint64_t v25 = (void *)(a9 + v23[8]);
  *uint64_t v25 = v19;
  v25[1] = v18;
  uint64_t v26 = a9 + v23[9];
  *(_OWORD *)uint64_t v26 = v40;
  *(void *)(v26 + 16) = v39;
  *(void *)(v26 + 24) = v38;
  *(_DWORD *)(v26 + 32) = v37;
  *(void *)(v26 + 40) = v36;
  *(unsigned char *)(v26 + 48) = v35;
  *(void *)(v26 + 56) = v34;
  *(unsigned char *)(v26 + 64) = v33;
  *(unsigned char *)(v26 + 65) = v32;
  *(void *)(v26 + 72) = v20;
  uint64_t v27 = a9 + v23[10];
  *(void *)uint64_t v27 = v42;
  *(void *)(v27 + 8) = v41;
  *(_WORD *)(v27 + 16) = (_WORD)a7;
  uint64_t v28 = a9 + v23[11];
  *(unsigned char *)uint64_t v28 = v50;
  *(void *)(v28 + 8) = v49;
  *(void *)(v28 + 16) = v48;
  *(unsigned char *)(v28 + 24) = v47;
  *(unsigned char *)(v28 + 25) = v46;
  *(void *)(v28 + 32) = v45;
  *(void *)(v28 + 40) = v44;
  *(unsigned char *)(v28 + 48) = v43;
  long long v29 = (__n128 *)(a9 + v23[12]);
  __n128 result = v53;
  __n128 *v29 = v53;
  v29[1].n128_u64[0] = v52;
  v29[1].n128_u64[1] = v51;
  v29[2].n128_u8[0] = v21;
  return result;
}

uint64_t sub_1DE09363C(char a1)
{
  uint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      uint64_t v3 = 0x6E6F69746361;
      return v3 & 0xFFFFFFFFFFFFLL | 0x6144000000000000;
    case 2:
      unsigned int v4 = 1684366694;
      goto LABEL_9;
    case 3:
      return 0x74614470756F7267;
    case 4:
      return 0xD000000000000010;
    case 5:
      uint64_t v3 = 0x656C7A7A7570;
      return v3 & 0xFFFFFFFFFFFFLL | 0x6144000000000000;
    case 6:
      unsigned int v4 = 2003134838;
LABEL_9:
      uint64_t result = v4 | 0x6174614400000000;
      break;
    case 7:
      uint64_t result = 0xD000000000000021;
      break;
    case 8:
      uint64_t result = 0x617461446461;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE093758()
{
  return sub_1DE09363C(*v0);
}

uint64_t sub_1DE093760@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE098AE4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE093788(uint64_t a1)
{
  unint64_t v2 = sub_1DE093C64();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE0937C4(uint64_t a1)
{
  unint64_t v2 = sub_1DE093C64();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PuzzleShareEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1DE0944FC(0, &qword_1EABA20B8, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v37 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE093C64();
  sub_1DE480790();
  v46[0] = 0;
  sub_1DE47F330();
  sub_1DE07291C(&qword_1EBEC2030);
  sub_1DE4805C0();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for PuzzleShareEvent.Model(0);
    v46[0] = *(unsigned char *)(v3 + v10[5]);
    LOBYTE(v39[0]) = 1;
    sub_1DE087FC8();
    sub_1DE4805C0();
    uint64_t v11 = (long long *)(v3 + v10[6]);
    uint64_t v12 = *((void *)v11 + 2);
    long long v47 = *v11;
    uint64_t v48 = v12;
    v46[143] = 2;
    sub_1DE055800();
    sub_1DE480550();
    sub_1DE063B10(v3 + v10[7], (uint64_t)v46);
    sub_1DE063B10((uint64_t)v46, (uint64_t)v39);
    char v38 = 3;
    sub_1DE0629F4();
    sub_1DE480550();
    char v13 = (uint64_t *)(v3 + v10[8]);
    uint64_t v15 = *v13;
    uint64_t v14 = v13[1];
    *(void *)&v39[0] = v15;
    *((void *)&v39[0] + 1) = v14;
    char v38 = 4;
    sub_1DE09232C();
    sub_1DE4805C0();
    char v16 = (long long *)(v3 + v10[9]);
    long long v17 = *v16;
    uint64_t v18 = *((void *)v16 + 2);
    uint64_t v19 = *((void *)v16 + 3);
    int v20 = *((_DWORD *)v16 + 8);
    uint64_t v21 = *((void *)v16 + 5);
    char v22 = *((unsigned char *)v16 + 48);
    uint64_t v23 = *((void *)v16 + 7);
    char v24 = *((unsigned char *)v16 + 64);
    char v25 = *((unsigned char *)v16 + 65);
    uint64_t v26 = *((void *)v16 + 9);
    v39[0] = v17;
    *(void *)&v39[1] = v18;
    *((void *)&v39[1] + 1) = v19;
    LODWORD(v40) = v20;
    *((void *)&v40 + 1) = v21;
    char v41 = v22;
    uint64_t v42 = v23;
    char v43 = v24;
    char v44 = v25;
    uint64_t v45 = v26;
    char v38 = 5;
    sub_1DE0622AC();
    sub_1DE4805C0();
    uint64_t v27 = v3 + v10[10];
    __int16 v28 = *(_WORD *)(v27 + 16);
    v39[0] = *(_OWORD *)v27;
    LOWORD(v39[1]) = v28;
    char v38 = 6;
    sub_1DE05410C();
    sub_1DE480550();
    uint64_t v29 = v3 + v10[11];
    char v30 = *(unsigned char *)(v29 + 24);
    char v31 = *(unsigned char *)(v29 + 25);
    char v32 = *(unsigned char *)(v29 + 48);
    LOBYTE(v39[0]) = *(unsigned char *)v29;
    *(_OWORD *)((char *)v39 + 8) = *(_OWORD *)(v29 + 8);
    BYTE8(v39[1]) = v30;
    BYTE9(v39[1]) = v31;
    long long v40 = *(_OWORD *)(v29 + 32);
    char v41 = v32;
    char v38 = 7;
    sub_1DE04DD5C();
    sub_1DE4805C0();
    uint64_t v33 = v3 + v10[12];
    char v34 = *(unsigned char *)(v33 + 32);
    long long v35 = *(_OWORD *)(v33 + 16);
    v39[0] = *(_OWORD *)v33;
    v39[1] = v35;
    LOBYTE(v40) = v34;
    char v38 = 8;
    sub_1DE092AF0();
    sub_1DE480550();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DE093C64()
{
  unint64_t result = qword_1EABA20C0;
  if (!qword_1EABA20C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA20C0);
  }
  return result;
}

uint64_t PuzzleShareEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v4 = sub_1DE47F330();
  uint64_t v45 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE0944FC(0, &qword_1EABA20C8, MEMORY[0x1E4FBBDC0]);
  uint64_t v42 = *(void *)(v7 - 8);
  uint64_t v43 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v41 - v8;
  uint64_t v48 = (int *)type metadata accessor for PuzzleShareEvent.Model(0);
  MEMORY[0x1F4188790](v48);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  long long v47 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1DE093C64();
  char v46 = v9;
  sub_1DE480770();
  uint64_t v44 = v4;
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  }
  uint64_t v13 = v42;
  LOBYTE(v57) = 0;
  sub_1DE07291C(&qword_1EBEC2038);
  uint64_t v14 = v43;
  sub_1DE4804E0();
  uint64_t v15 = v4;
  uint64_t v16 = (uint64_t)v11;
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v11, v6, v15);
  v56[0] = 1;
  sub_1DE087F74();
  sub_1DE4804E0();
  long long v17 = v48;
  *(unsigned char *)(v16 + v48[5]) = v57;
  v56[0] = 2;
  sub_1DE0557AC();
  sub_1DE480470();
  uint64_t v18 = v58;
  uint64_t v19 = v16 + v17[6];
  *(_OWORD *)uint64_t v19 = v57;
  *(void *)(v19 + 16) = v18;
  char v60 = 3;
  sub_1DE0629A0();
  sub_1DE480470();
  sub_1DE063B10((uint64_t)&v57, (uint64_t)v56);
  sub_1DE063B10((uint64_t)v56, v16 + v17[7]);
  char v59 = 4;
  sub_1DE0922D8();
  sub_1DE4804E0();
  uint64_t v20 = *((void *)&v49[0] + 1);
  uint64_t v21 = (void *)(v16 + v17[8]);
  *uint64_t v21 = *(void *)&v49[0];
  v21[1] = v20;
  char v59 = 5;
  sub_1DE062258();
  sub_1DE4804E0();
  long long v22 = v49[1];
  int v23 = v50;
  uint64_t v24 = *((void *)&v50 + 1);
  char v25 = v51;
  uint64_t v26 = v52;
  char v27 = v53;
  char v28 = v54;
  uint64_t v29 = v55;
  uint64_t v30 = v16 + v17[9];
  *(_OWORD *)uint64_t v30 = v49[0];
  *(_OWORD *)(v30 + 16) = v22;
  *(_DWORD *)(v30 + 32) = v23;
  *(void *)(v30 + 40) = v24;
  *(unsigned char *)(v30 + 48) = v25;
  *(void *)(v30 + 56) = v26;
  *(unsigned char *)(v30 + 64) = v27;
  *(unsigned char *)(v30 + 65) = v28;
  *(void *)(v30 + 72) = v29;
  char v59 = 6;
  sub_1DE0540B8();
  sub_1DE480470();
  __int16 v31 = v49[1];
  uint64_t v32 = v16 + v17[10];
  *(_OWORD *)uint64_t v32 = v49[0];
  *(_WORD *)(v32 + 16) = v31;
  char v59 = 7;
  sub_1DE04DD08();
  sub_1DE4804E0();
  char v33 = BYTE8(v49[1]);
  char v34 = BYTE9(v49[1]);
  char v35 = v51;
  uint64_t v36 = v16 + v48[11];
  *(unsigned char *)uint64_t v36 = v49[0];
  *(_OWORD *)(v36 + 8) = *(_OWORD *)((char *)v49 + 8);
  *(unsigned char *)(v36 + 24) = v33;
  *(unsigned char *)(v36 + 25) = v34;
  *(_OWORD *)(v36 + 32) = v50;
  *(unsigned char *)(v36 + 48) = v35;
  char v59 = 8;
  sub_1DE092A9C();
  sub_1DE480470();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v46, v14);
  char v37 = v50;
  uint64_t v38 = v16 + v48[12];
  long long v39 = v49[1];
  *(_OWORD *)uint64_t v38 = v49[0];
  *(_OWORD *)(v38 + 16) = v39;
  *(unsigned char *)(v38 + 32) = v37;
  sub_1DE094560(v16, v41);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  return sub_1DE0945C4(v16);
}

void sub_1DE0944FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE093C64();
    unint64_t v7 = a3(a1, &type metadata for PuzzleShareEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DE094560(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PuzzleShareEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DE0945C4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PuzzleShareEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DE094620@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PuzzleShareEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DE094638(void *a1)
{
  return PuzzleShareEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DE094650@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA09C0, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EABA2070, a1);
}

uint64_t sub_1DE094688@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA09C8, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EABA2088, a1);
}

uint64_t sub_1DE0946C0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA09D0, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA20A0, a1);
}

uint64_t sub_1DE0946F8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_1DE092A20(0, &qword_1EBEC1E00, (void (*)(void))sub_1DE087F74, (void (*)(void))sub_1DE087FC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = *MEMORY[0x1E4F4A9F8];
  sub_1DE092A20(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v8, v9, v10);
  uint64_t v11 = a2 + a1[7];
  sub_1DE092A20(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v9, v12);
  uint64_t v13 = a2 + a1[8];
  sub_1DE092A20(0, &qword_1EBEC1EF0, (void (*)(void))sub_1DE0922D8, (void (*)(void))sub_1DE09232C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v4, v14);
  uint64_t v15 = a2 + a1[9];
  sub_1DE092A20(0, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v4, v16);
  uint64_t v17 = a2 + a1[10];
  sub_1DE092A20(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v9, v18);
  uint64_t v19 = a2 + a1[11];
  sub_1DE092A20(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v4, v20);
  uint64_t v21 = a2 + a1[12];
  sub_1DE092A20(0, &qword_1EBEC1FC0, (void (*)(void))sub_1DE092A9C, (void (*)(void))sub_1DE092AF0);
  int v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104);

  return v23(v21, v9, v22);
}

uint64_t *initializeBufferWithCopyOfBuffer for PuzzleShareEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v40 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v40 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DE04D618();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DE092A20(0, &qword_1EBEC1E00, (void (*)(void))sub_1DE087F74, (void (*)(void))sub_1DE087FC8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_1DE092A20(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_1DE092A20(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_1DE092A20(0, &qword_1EBEC1EF0, (void (*)(void))sub_1DE0922D8, (void (*)(void))sub_1DE09232C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    char v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_1DE092A20(0, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    sub_1DE092A20(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    char v33 = (char *)a1 + v32;
    char v34 = (char *)a2 + v32;
    sub_1DE092A20(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    char v37 = (char *)a1 + v36;
    uint64_t v38 = (char *)a2 + v36;
    sub_1DE092A20(0, &qword_1EBEC1FC0, (void (*)(void))sub_1DE092A9C, (void (*)(void))sub_1DE092AF0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
  }
  return a1;
}

uint64_t destroy for PuzzleShareEvent(uint64_t a1, int *a2)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_1DE092A20(0, &qword_1EBEC1E00, (void (*)(void))sub_1DE087F74, (void (*)(void))sub_1DE087FC8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_1DE092A20(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_1DE092A20(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_1DE092A20(0, &qword_1EBEC1EF0, (void (*)(void))sub_1DE0922D8, (void (*)(void))sub_1DE09232C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_1DE092A20(0, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_1DE092A20(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_1DE092A20(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  sub_1DE092A20(0, &qword_1EBEC1FC0, (void (*)(void))sub_1DE092A9C, (void (*)(void))sub_1DE092AF0);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8);

  return v21(v19, v20);
}

uint64_t initializeWithCopy for PuzzleShareEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE092A20(0, &qword_1EBEC1E00, (void (*)(void))sub_1DE087F74, (void (*)(void))sub_1DE087FC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE092A20(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE092A20(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE092A20(0, &qword_1EBEC1EF0, (void (*)(void))sub_1DE0922D8, (void (*)(void))sub_1DE09232C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE092A20(0, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE092A20(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE092A20(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE092A20(0, &qword_1EBEC1FC0, (void (*)(void))sub_1DE092A9C, (void (*)(void))sub_1DE092AF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  return a1;
}

uint64_t assignWithCopy for PuzzleShareEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE092A20(0, &qword_1EBEC1E00, (void (*)(void))sub_1DE087F74, (void (*)(void))sub_1DE087FC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE092A20(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE092A20(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE092A20(0, &qword_1EBEC1EF0, (void (*)(void))sub_1DE0922D8, (void (*)(void))sub_1DE09232C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE092A20(0, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE092A20(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE092A20(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE092A20(0, &qword_1EBEC1FC0, (void (*)(void))sub_1DE092A9C, (void (*)(void))sub_1DE092AF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  return a1;
}

uint64_t initializeWithTake for PuzzleShareEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE092A20(0, &qword_1EBEC1E00, (void (*)(void))sub_1DE087F74, (void (*)(void))sub_1DE087FC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE092A20(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE092A20(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE092A20(0, &qword_1EBEC1EF0, (void (*)(void))sub_1DE0922D8, (void (*)(void))sub_1DE09232C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE092A20(0, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE092A20(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE092A20(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE092A20(0, &qword_1EBEC1FC0, (void (*)(void))sub_1DE092A9C, (void (*)(void))sub_1DE092AF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  return a1;
}

uint64_t assignWithTake for PuzzleShareEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE092A20(0, &qword_1EBEC1E00, (void (*)(void))sub_1DE087F74, (void (*)(void))sub_1DE087FC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE092A20(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE092A20(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE092A20(0, &qword_1EBEC1EF0, (void (*)(void))sub_1DE0922D8, (void (*)(void))sub_1DE09232C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE092A20(0, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE092A20(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE092A20(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE092A20(0, &qword_1EBEC1FC0, (void (*)(void))sub_1DE092A9C, (void (*)(void))sub_1DE092AF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleShareEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE096658);
}

uint64_t sub_1DE096658(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_18:
    return v9(v10, a2, v8);
  }
  sub_1DE092A20(0, &qword_1EBEC1E00, (void (*)(void))sub_1DE087F74, (void (*)(void))sub_1DE087FC8);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_17:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_18;
  }
  sub_1DE092A20(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_17;
  }
  sub_1DE092A20(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_17;
  }
  sub_1DE092A20(0, &qword_1EBEC1EF0, (void (*)(void))sub_1DE0922D8, (void (*)(void))sub_1DE09232C);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_17;
  }
  sub_1DE092A20(0, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_17;
  }
  sub_1DE092A20(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_17;
  }
  sub_1DE092A20(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_17;
  }
  sub_1DE092A20(0, &qword_1EBEC1FC0, (void (*)(void))sub_1DE092A9C, (void (*)(void))sub_1DE092AF0);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48);
  uint64_t v23 = v21;
  uint64_t v24 = a1 + a3[12];

  return v22(v24, a2, v23);
}

uint64_t storeEnumTagSinglePayload for PuzzleShareEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE096B40);
}

uint64_t sub_1DE096B40(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_1DE04D618();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_18:
    return v11(v12, a2, a2, v10);
  }
  sub_1DE092A20(0, &qword_1EBEC1E00, (void (*)(void))sub_1DE087F74, (void (*)(void))sub_1DE087FC8);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_17:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_18;
  }
  sub_1DE092A20(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_17;
  }
  sub_1DE092A20(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_17;
  }
  sub_1DE092A20(0, &qword_1EBEC1EF0, (void (*)(void))sub_1DE0922D8, (void (*)(void))sub_1DE09232C);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_17;
  }
  sub_1DE092A20(0, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_17;
  }
  sub_1DE092A20(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_17;
  }
  sub_1DE092A20(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_17;
  }
  sub_1DE092A20(0, &qword_1EBEC1FC0, (void (*)(void))sub_1DE092A9C, (void (*)(void))sub_1DE092AF0);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
  uint64_t v25 = v23;
  uint64_t v26 = a1 + a4[12];

  return v24(v26, a2, a2, v25);
}

void sub_1DE097020()
{
  sub_1DE04D618();
  if (v0 <= 0x3F)
  {
    sub_1DE092A20(319, &qword_1EBEC1E00, (void (*)(void))sub_1DE087F74, (void (*)(void))sub_1DE087FC8);
    if (v1 <= 0x3F)
    {
      sub_1DE092A20(319, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
      if (v2 <= 0x3F)
      {
        sub_1DE092A20(319, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
        if (v3 <= 0x3F)
        {
          sub_1DE092A20(319, &qword_1EBEC1EF0, (void (*)(void))sub_1DE0922D8, (void (*)(void))sub_1DE09232C);
          if (v4 <= 0x3F)
          {
            sub_1DE092A20(319, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
            if (v5 <= 0x3F)
            {
              sub_1DE092A20(319, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
              if (v6 <= 0x3F)
              {
                sub_1DE092A20(319, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
                if (v7 <= 0x3F)
                {
                  sub_1DE092A20(319, &qword_1EBEC1FC0, (void (*)(void))sub_1DE092A9C, (void (*)(void))sub_1DE092AF0);
                  if (v8 <= 0x3F) {
                    swift_initStructMetadata();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for PuzzleShareEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DE47F330();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *((void *)v10 + 2);
    if (v11 == 1)
    {
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *((void *)v9 + 2) = *((void *)v10 + 2);
    }
    else
    {
      char *v9 = *v10;
      *((void *)v9 + 1) = *((void *)v10 + 1);
      *((void *)v9 + 2) = v11;
      swift_bridgeObjectRetain();
    }
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = *((void *)v15 + 2);
    if (v16)
    {
      *(_WORD *)uint64_t v14 = *(_WORD *)v15;
      *((void *)v14 + 1) = *((void *)v15 + 1);
      *((void *)v14 + 2) = v16;
      *((void *)v14 + 3) = *((void *)v15 + 3);
      uint64_t v17 = *((void *)v15 + 5);
      *((void *)v14 + 4) = *((void *)v15 + 4);
      *((void *)v14 + 5) = v17;
      uint64_t v18 = *((void *)v15 + 7);
      *((void *)v14 + 6) = *((void *)v15 + 6);
      *((void *)v14 + 7) = v18;
      uint64_t v19 = *((void *)v15 + 9);
      *((void *)v14 + 8) = *((void *)v15 + 8);
      *((void *)v14 + 9) = v19;
      v14[80] = v15[80];
      uint64_t v20 = *((void *)v15 + 12);
      *((void *)v14 + 11) = *((void *)v15 + 11);
      *((void *)v14 + 12) = v20;
      *((void *)v14 + 13) = *((void *)v15 + 13);
      v14[112] = v15[112];
      uint64_t v21 = *((void *)v15 + 16);
      *((void *)v14 + 15) = *((void *)v15 + 15);
      *((void *)v14 + 16) = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v22 = *((_OWORD *)v15 + 7);
      *((_OWORD *)v14 + 6) = *((_OWORD *)v15 + 6);
      *((_OWORD *)v14 + 7) = v22;
      *((void *)v14 + 16) = *((void *)v15 + 16);
      long long v23 = *((_OWORD *)v15 + 3);
      *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
      *((_OWORD *)v14 + 3) = v23;
      long long v24 = *((_OWORD *)v15 + 5);
      *((_OWORD *)v14 + 4) = *((_OWORD *)v15 + 4);
      *((_OWORD *)v14 + 5) = v24;
      long long v25 = *((_OWORD *)v15 + 1);
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v25;
    }
    uint64_t v26 = a3[8];
    uint64_t v27 = a3[9];
    uint64_t v28 = (void *)((char *)a1 + v26);
    uint64_t v29 = (void *)((char *)a2 + v26);
    uint64_t v30 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v30;
    uint64_t v31 = (char *)a1 + v27;
    uint64_t v32 = (char *)a2 + v27;
    uint64_t v33 = *((void *)v32 + 1);
    *(void *)uint64_t v31 = *(void *)v32;
    *((void *)v31 + 1) = v33;
    uint64_t v34 = *((void *)v32 + 3);
    *((void *)v31 + 2) = *((void *)v32 + 2);
    *((void *)v31 + 3) = v34;
    v31[64] = v32[64];
    long long v35 = *((_OWORD *)v32 + 3);
    *((_OWORD *)v31 + 2) = *((_OWORD *)v32 + 2);
    *((_OWORD *)v31 + 3) = v35;
    v31[65] = v32[65];
    *((void *)v31 + 9) = *((void *)v32 + 9);
    uint64_t v36 = a3[10];
    uint64_t v37 = a3[11];
    uint64_t v38 = (char *)a1 + v36;
    uint64_t v39 = (char *)a2 + v36;
    uint64_t v40 = *((void *)v39 + 1);
    *(void *)uint64_t v38 = *(void *)v39;
    *((void *)v38 + 1) = v40;
    *((_WORD *)v38 + 8) = *((_WORD *)v39 + 8);
    uint64_t v41 = (char *)a1 + v37;
    uint64_t v42 = (char *)a2 + v37;
    *uint64_t v41 = *v42;
    uint64_t v43 = *((void *)v42 + 2);
    *((void *)v41 + 1) = *((void *)v42 + 1);
    *((void *)v41 + 2) = v43;
    v41[24] = v42[24];
    v41[25] = v42[25];
    uint64_t v44 = *((void *)v42 + 5);
    *((void *)v41 + 4) = *((void *)v42 + 4);
    *((void *)v41 + 5) = v44;
    v41[48] = v42[48];
    uint64_t v45 = a3[12];
    char v46 = (char *)a1 + v45;
    long long v47 = (char *)a2 + v45;
    uint64_t v48 = *(void *)((char *)a2 + v45 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v48)
    {
      *(void *)char v46 = *(void *)v47;
      *((void *)v46 + 1) = v48;
      uint64_t v49 = *((void *)v47 + 3);
      *((void *)v46 + 2) = *((void *)v47 + 2);
      *((void *)v46 + 3) = v49;
      v46[32] = v47[32];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v50 = *((_OWORD *)v47 + 1);
      *(_OWORD *)char v46 = *(_OWORD *)v47;
      *((_OWORD *)v46 + 1) = v50;
      v46[32] = v47[32];
    }
  }
  return a1;
}

uint64_t destroy for PuzzleShareEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  if (*(void *)(a1 + a2[6] + 16) != 1) {
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + a2[7] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + a2[12] + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for PuzzleShareEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 == 1)
  {
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *(void *)(v8 + 16) = *(void *)(v9 + 16);
  }
  else
  {
    *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
    *(void *)(v8 + 8) = *(void *)(v9 + 8);
    *(void *)(v8 + 16) = v10;
    swift_bridgeObjectRetain();
  }
  uint64_t v11 = a3[7];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    *(_WORD *)uint64_t v12 = *(_WORD *)v13;
    *(void *)(v12 + 8) = *(void *)(v13 + 8);
    *(void *)(v12 + 16) = v14;
    *(void *)(v12 + 24) = *(void *)(v13 + 24);
    uint64_t v15 = *(void *)(v13 + 40);
    *(void *)(v12 + 32) = *(void *)(v13 + 32);
    *(void *)(v12 + 40) = v15;
    uint64_t v16 = *(void *)(v13 + 56);
    *(void *)(v12 + 48) = *(void *)(v13 + 48);
    *(void *)(v12 + 56) = v16;
    uint64_t v17 = *(void *)(v13 + 72);
    *(void *)(v12 + 64) = *(void *)(v13 + 64);
    *(void *)(v12 + 72) = v17;
    *(unsigned char *)(v12 + 80) = *(unsigned char *)(v13 + 80);
    uint64_t v18 = *(void *)(v13 + 96);
    *(void *)(v12 + 88) = *(void *)(v13 + 88);
    *(void *)(v12 + 96) = v18;
    *(void *)(v12 + 104) = *(void *)(v13 + 104);
    *(unsigned char *)(v12 + 112) = *(unsigned char *)(v13 + 112);
    uint64_t v19 = *(void *)(v13 + 128);
    *(void *)(v12 + 120) = *(void *)(v13 + 120);
    *(void *)(v12 + 128) = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v20 = *(_OWORD *)(v13 + 112);
    *(_OWORD *)(v12 + 96) = *(_OWORD *)(v13 + 96);
    *(_OWORD *)(v12 + 112) = v20;
    *(void *)(v12 + 128) = *(void *)(v13 + 128);
    long long v21 = *(_OWORD *)(v13 + 48);
    *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
    *(_OWORD *)(v12 + 48) = v21;
    long long v22 = *(_OWORD *)(v13 + 80);
    *(_OWORD *)(v12 + 64) = *(_OWORD *)(v13 + 64);
    *(_OWORD *)(v12 + 80) = v22;
    long long v23 = *(_OWORD *)(v13 + 16);
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    *(_OWORD *)(v12 + 16) = v23;
  }
  uint64_t v24 = a3[8];
  uint64_t v25 = a3[9];
  uint64_t v26 = (void *)(a1 + v24);
  uint64_t v27 = (void *)(a2 + v24);
  uint64_t v28 = v27[1];
  *uint64_t v26 = *v27;
  v26[1] = v28;
  uint64_t v29 = a1 + v25;
  uint64_t v30 = a2 + v25;
  uint64_t v31 = *(void *)(v30 + 8);
  *(void *)uint64_t v29 = *(void *)v30;
  *(void *)(v29 + 8) = v31;
  uint64_t v32 = *(void *)(v30 + 24);
  *(void *)(v29 + 16) = *(void *)(v30 + 16);
  *(void *)(v29 + 24) = v32;
  *(unsigned char *)(v29 + 64) = *(unsigned char *)(v30 + 64);
  long long v33 = *(_OWORD *)(v30 + 48);
  *(_OWORD *)(v29 + 32) = *(_OWORD *)(v30 + 32);
  *(_OWORD *)(v29 + 48) = v33;
  *(unsigned char *)(v29 + 65) = *(unsigned char *)(v30 + 65);
  *(void *)(v29 + 72) = *(void *)(v30 + 72);
  uint64_t v34 = a3[10];
  uint64_t v35 = a3[11];
  uint64_t v36 = a1 + v34;
  uint64_t v37 = a2 + v34;
  uint64_t v38 = *(void *)(v37 + 8);
  *(void *)uint64_t v36 = *(void *)v37;
  *(void *)(v36 + 8) = v38;
  *(_WORD *)(v36 + 16) = *(_WORD *)(v37 + 16);
  uint64_t v39 = a1 + v35;
  uint64_t v40 = a2 + v35;
  *(unsigned char *)uint64_t v39 = *(unsigned char *)v40;
  uint64_t v41 = *(void *)(v40 + 16);
  *(void *)(v39 + 8) = *(void *)(v40 + 8);
  *(void *)(v39 + 16) = v41;
  *(unsigned char *)(v39 + 24) = *(unsigned char *)(v40 + 24);
  *(unsigned char *)(v39 + 25) = *(unsigned char *)(v40 + 25);
  uint64_t v42 = *(void *)(v40 + 40);
  *(void *)(v39 + 32) = *(void *)(v40 + 32);
  *(void *)(v39 + 40) = v42;
  *(unsigned char *)(v39 + 48) = *(unsigned char *)(v40 + 48);
  uint64_t v43 = a3[12];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = *(void *)(a2 + v43 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v46)
  {
    *(void *)uint64_t v44 = *(void *)v45;
    *(void *)(v44 + 8) = v46;
    uint64_t v47 = *(void *)(v45 + 24);
    *(void *)(v44 + 16) = *(void *)(v45 + 16);
    *(void *)(v44 + 24) = v47;
    *(unsigned char *)(v44 + 32) = *(unsigned char *)(v45 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v48 = *(_OWORD *)(v45 + 16);
    *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
    *(_OWORD *)(v44 + 16) = v48;
    *(unsigned char *)(v44 + 32) = *(unsigned char *)(v45 + 32);
  }
  return a1;
}

uint64_t assignWithCopy for PuzzleShareEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (long long *)(a2 + v7);
  uint64_t v10 = *(void *)(a1 + v7 + 16);
  uint64_t v11 = *(void *)(a2 + v7 + 16);
  if (v10 == 1)
  {
    if (v11 == 1)
    {
      long long v12 = *v9;
      *(void *)(v8 + 16) = *((void *)v9 + 2);
      *(_OWORD *)uint64_t v8 = v12;
    }
    else
    {
      *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
      *(void *)(v8 + 8) = *((void *)v9 + 1);
      *(void *)(v8 + 16) = *((void *)v9 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v11 == 1)
  {
    sub_1DE05D370(v8);
    uint64_t v13 = *((void *)v9 + 2);
    *(_OWORD *)uint64_t v8 = *v9;
    *(void *)(v8 + 16) = v13;
  }
  else
  {
    *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
    *(void *)(v8 + 8) = *((void *)v9 + 1);
    *(void *)(v8 + 16) = *((void *)v9 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void *)(a1 + v14 + 16);
  uint64_t v18 = *(void *)(a2 + v14 + 16);
  if (v17)
  {
    if (v18)
    {
      *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
      *(unsigned char *)(v15 + 1) = *(unsigned char *)(v16 + 1);
      *(void *)(v15 + 8) = *(void *)(v16 + 8);
      *(void *)(v15 + 16) = *(void *)(v16 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v15 + 24) = *(_DWORD *)(v16 + 24);
      *(_DWORD *)(v15 + 28) = *(_DWORD *)(v16 + 28);
      *(void *)(v15 + 32) = *(void *)(v16 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v15 + 40) = *(void *)(v16 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v15 + 48) = *(void *)(v16 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v15 + 56) = *(void *)(v16 + 56);
      *(void *)(v15 + 64) = *(void *)(v16 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v15 + 72) = *(void *)(v16 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v15 + 80) = *(unsigned char *)(v16 + 80);
      *(void *)(v15 + 88) = *(void *)(v16 + 88);
      *(void *)(v15 + 96) = *(void *)(v16 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v19 = *(void *)(v16 + 104);
      *(unsigned char *)(v15 + 112) = *(unsigned char *)(v16 + 112);
      *(void *)(v15 + 104) = v19;
      *(void *)(v15 + 120) = *(void *)(v16 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v15 + 128) = *(void *)(v16 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DE069980(v15);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      long long v21 = *(_OWORD *)(v16 + 64);
      long long v23 = *(_OWORD *)(v16 + 16);
      long long v22 = *(_OWORD *)(v16 + 32);
      *(_OWORD *)(v15 + 48) = *(_OWORD *)(v16 + 48);
      *(_OWORD *)(v15 + 64) = v21;
      *(_OWORD *)(v15 + 16) = v23;
      *(_OWORD *)(v15 + 32) = v22;
      long long v25 = *(_OWORD *)(v16 + 96);
      long long v24 = *(_OWORD *)(v16 + 112);
      long long v26 = *(_OWORD *)(v16 + 80);
      *(void *)(v15 + 128) = *(void *)(v16 + 128);
      *(_OWORD *)(v15 + 96) = v25;
      *(_OWORD *)(v15 + 112) = v24;
      *(_OWORD *)(v15 + 80) = v26;
    }
  }
  else if (v18)
  {
    *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
    *(unsigned char *)(v15 + 1) = *(unsigned char *)(v16 + 1);
    *(void *)(v15 + 8) = *(void *)(v16 + 8);
    *(void *)(v15 + 16) = *(void *)(v16 + 16);
    *(_DWORD *)(v15 + 24) = *(_DWORD *)(v16 + 24);
    *(_DWORD *)(v15 + 28) = *(_DWORD *)(v16 + 28);
    *(void *)(v15 + 32) = *(void *)(v16 + 32);
    *(void *)(v15 + 40) = *(void *)(v16 + 40);
    *(void *)(v15 + 48) = *(void *)(v16 + 48);
    *(void *)(v15 + 56) = *(void *)(v16 + 56);
    *(void *)(v15 + 64) = *(void *)(v16 + 64);
    *(void *)(v15 + 72) = *(void *)(v16 + 72);
    *(unsigned char *)(v15 + 80) = *(unsigned char *)(v16 + 80);
    *(void *)(v15 + 88) = *(void *)(v16 + 88);
    *(void *)(v15 + 96) = *(void *)(v16 + 96);
    uint64_t v20 = *(void *)(v16 + 104);
    *(unsigned char *)(v15 + 112) = *(unsigned char *)(v16 + 112);
    *(void *)(v15 + 104) = v20;
    *(void *)(v15 + 120) = *(void *)(v16 + 120);
    *(void *)(v15 + 128) = *(void *)(v16 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    long long v27 = *(_OWORD *)(v16 + 16);
    long long v28 = *(_OWORD *)(v16 + 32);
    long long v29 = *(_OWORD *)(v16 + 64);
    *(_OWORD *)(v15 + 48) = *(_OWORD *)(v16 + 48);
    *(_OWORD *)(v15 + 64) = v29;
    *(_OWORD *)(v15 + 16) = v27;
    *(_OWORD *)(v15 + 32) = v28;
    long long v30 = *(_OWORD *)(v16 + 80);
    long long v31 = *(_OWORD *)(v16 + 96);
    long long v32 = *(_OWORD *)(v16 + 112);
    *(void *)(v15 + 128) = *(void *)(v16 + 128);
    *(_OWORD *)(v15 + 96) = v31;
    *(_OWORD *)(v15 + 112) = v32;
    *(_OWORD *)(v15 + 80) = v30;
  }
  uint64_t v33 = a3[8];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  *uint64_t v34 = *v35;
  v34[1] = v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[9];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  *(void *)uint64_t v37 = *(void *)(a2 + v36);
  *(void *)(v37 + 8) = *(void *)(a2 + v36 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v37 + 16) = *(void *)(v38 + 16);
  *(void *)(v37 + 24) = *(void *)(v38 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v37 + 32) = *(_DWORD *)(v38 + 32);
  uint64_t v39 = *(void *)(v38 + 40);
  *(unsigned char *)(v37 + 48) = *(unsigned char *)(v38 + 48);
  *(void *)(v37 + 40) = v39;
  uint64_t v40 = *(void *)(v38 + 56);
  *(unsigned char *)(v37 + 64) = *(unsigned char *)(v38 + 64);
  *(void *)(v37 + 56) = v40;
  *(unsigned char *)(v37 + 65) = *(unsigned char *)(v38 + 65);
  *(void *)(v37 + 72) = *(void *)(v38 + 72);
  uint64_t v41 = a3[10];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = a2 + v41;
  *(void *)uint64_t v42 = *(void *)(a2 + v41);
  *(void *)(v42 + 8) = *(void *)(a2 + v41 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v42 + 16) = *(unsigned char *)(v43 + 16);
  *(unsigned char *)(v42 + 17) = *(unsigned char *)(v43 + 17);
  uint64_t v44 = a3[11];
  uint64_t v45 = a1 + v44;
  uint64_t v46 = a2 + v44;
  *(unsigned char *)uint64_t v45 = *(unsigned char *)(a2 + v44);
  *(void *)(v45 + 8) = *(void *)(a2 + v44 + 8);
  *(void *)(v45 + 16) = *(void *)(a2 + v44 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v45 + 24) = *(unsigned char *)(v46 + 24);
  *(unsigned char *)(v45 + 25) = *(unsigned char *)(v46 + 25);
  *(void *)(v45 + 32) = *(void *)(v46 + 32);
  *(void *)(v45 + 40) = *(void *)(v46 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v45 + 48) = *(unsigned char *)(v46 + 48);
  uint64_t v47 = a3[12];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = (long long *)(a2 + v47);
  uint64_t v50 = *(void *)(a1 + v47 + 8);
  uint64_t v51 = *((void *)v49 + 1);
  if (v50)
  {
    if (v51)
    {
      *(void *)uint64_t v48 = *(void *)v49;
      *(void *)(v48 + 8) = *((void *)v49 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v48 + 16) = *((void *)v49 + 2);
      *(void *)(v48 + 24) = *((void *)v49 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v48 + 32) = *((unsigned char *)v49 + 32);
    }
    else
    {
      sub_1DE098198(v48);
      char v52 = *((unsigned char *)v49 + 32);
      long long v53 = v49[1];
      *(_OWORD *)uint64_t v48 = *v49;
      *(_OWORD *)(v48 + 16) = v53;
      *(unsigned char *)(v48 + 32) = v52;
    }
  }
  else if (v51)
  {
    *(void *)uint64_t v48 = *(void *)v49;
    *(void *)(v48 + 8) = *((void *)v49 + 1);
    *(void *)(v48 + 16) = *((void *)v49 + 2);
    *(void *)(v48 + 24) = *((void *)v49 + 3);
    *(unsigned char *)(v48 + 32) = *((unsigned char *)v49 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v54 = *v49;
    long long v55 = v49[1];
    *(unsigned char *)(v48 + 32) = *((unsigned char *)v49 + 32);
    *(_OWORD *)uint64_t v48 = v54;
    *(_OWORD *)(v48 + 16) = v55;
  }
  return a1;
}

uint64_t sub_1DE098198(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for PuzzleShareEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  uint64_t v10 = a3[7];
  uint64_t v11 = a3[8];
  uint64_t v12 = a1 + v10;
  uint64_t v13 = a2 + v10;
  *(void *)(v12 + 128) = *(void *)(v13 + 128);
  long long v14 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(v12 + 48) = v14;
  long long v15 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v15;
  long long v16 = *(_OWORD *)(v13 + 112);
  *(_OWORD *)(v12 + 96) = *(_OWORD *)(v13 + 96);
  *(_OWORD *)(v12 + 112) = v16;
  long long v17 = *(_OWORD *)(v13 + 80);
  *(_OWORD *)(v12 + 64) = *(_OWORD *)(v13 + 64);
  *(_OWORD *)(v12 + 80) = v17;
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  uint64_t v18 = a3[9];
  uint64_t v19 = a3[10];
  uint64_t v20 = (_OWORD *)(a1 + v18);
  long long v21 = (_OWORD *)(a2 + v18);
  long long v22 = v21[3];
  _OWORD v20[2] = v21[2];
  v20[3] = v22;
  v20[4] = v21[4];
  long long v23 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v23;
  uint64_t v24 = a1 + v19;
  uint64_t v25 = a2 + v19;
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *(_WORD *)(v24 + 16) = *(_WORD *)(v25 + 16);
  uint64_t v26 = a3[11];
  uint64_t v27 = a3[12];
  uint64_t v28 = a1 + v26;
  long long v29 = (long long *)(a2 + v26);
  long long v30 = *v29;
  long long v31 = v29[1];
  long long v32 = v29[2];
  *(unsigned char *)(v28 + 48) = *((unsigned char *)v29 + 48);
  *(_OWORD *)(v28 + 16) = v31;
  *(_OWORD *)(v28 + 32) = v32;
  *(_OWORD *)uint64_t v28 = v30;
  uint64_t v33 = a1 + v27;
  uint64_t v34 = a2 + v27;
  long long v35 = *(_OWORD *)(v34 + 16);
  *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
  *(_OWORD *)(v33 + 16) = v35;
  *(unsigned char *)(v33 + 32) = *(unsigned char *)(v34 + 32);
  return a1;
}

uint64_t assignWithTake for PuzzleShareEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  if (*(void *)(a1 + v7 + 16) == 1) {
    goto LABEL_4;
  }
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 == 1)
  {
    sub_1DE05D370(a1 + v7);
LABEL_4:
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *(void *)(v8 + 16) = *(void *)(v9 + 16);
    goto LABEL_6;
  }
  *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  *(void *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v11 = a3[7];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  if (*(void *)(a1 + v11 + 16))
  {
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      *(_WORD *)uint64_t v12 = *(_WORD *)v13;
      *(void *)(v12 + 8) = *(void *)(v13 + 8);
      *(void *)(v12 + 16) = v14;
      swift_bridgeObjectRelease();
      *(void *)(v12 + 24) = *(void *)(v13 + 24);
      *(void *)(v12 + 32) = *(void *)(v13 + 32);
      swift_bridgeObjectRelease();
      *(void *)(v12 + 40) = *(void *)(v13 + 40);
      swift_bridgeObjectRelease();
      *(void *)(v12 + 48) = *(void *)(v13 + 48);
      swift_bridgeObjectRelease();
      uint64_t v15 = *(void *)(v13 + 64);
      *(void *)(v12 + 56) = *(void *)(v13 + 56);
      *(void *)(v12 + 64) = v15;
      swift_bridgeObjectRelease();
      *(void *)(v12 + 72) = *(void *)(v13 + 72);
      swift_bridgeObjectRelease();
      *(unsigned char *)(v12 + 80) = *(unsigned char *)(v13 + 80);
      uint64_t v16 = *(void *)(v13 + 96);
      *(void *)(v12 + 88) = *(void *)(v13 + 88);
      *(void *)(v12 + 96) = v16;
      swift_bridgeObjectRelease();
      *(void *)(v12 + 104) = *(void *)(v13 + 104);
      *(unsigned char *)(v12 + 112) = *(unsigned char *)(v13 + 112);
      *(void *)(v12 + 120) = *(void *)(v13 + 120);
      swift_bridgeObjectRelease();
      *(void *)(v12 + 128) = *(void *)(v13 + 128);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1DE069980(v12);
  }
  long long v17 = *(_OWORD *)(v13 + 112);
  *(_OWORD *)(v12 + 96) = *(_OWORD *)(v13 + 96);
  *(_OWORD *)(v12 + 112) = v17;
  *(void *)(v12 + 128) = *(void *)(v13 + 128);
  long long v18 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(v12 + 48) = v18;
  long long v19 = *(_OWORD *)(v13 + 80);
  *(_OWORD *)(v12 + 64) = *(_OWORD *)(v13 + 64);
  *(_OWORD *)(v12 + 80) = v19;
  long long v20 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v20;
LABEL_11:
  uint64_t v21 = a3[8];
  long long v22 = (void *)(a1 + v21);
  long long v23 = (uint64_t *)(a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *long long v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[9];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  uint64_t v29 = *(void *)(a2 + v26 + 8);
  *(void *)uint64_t v27 = *(void *)(a2 + v26);
  *(void *)(v27 + 8) = v29;
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)(v28 + 24);
  *(void *)(v27 + 16) = *(void *)(v28 + 16);
  *(void *)(v27 + 24) = v30;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v27 + 32) = *(_DWORD *)(v28 + 32);
  *(void *)(v27 + 40) = *(void *)(v28 + 40);
  *(unsigned char *)(v27 + 48) = *(unsigned char *)(v28 + 48);
  *(void *)(v27 + 56) = *(void *)(v28 + 56);
  *(unsigned char *)(v27 + 64) = *(unsigned char *)(v28 + 64);
  *(unsigned char *)(v27 + 65) = *(unsigned char *)(v28 + 65);
  *(void *)(v27 + 72) = *(void *)(v28 + 72);
  uint64_t v31 = a3[10];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = *(void *)(a2 + v31 + 8);
  *(void *)uint64_t v32 = *(void *)(a2 + v31);
  *(void *)(v32 + 8) = v34;
  swift_bridgeObjectRelease();
  *(_WORD *)(v32 + 16) = *(_WORD *)(v33 + 16);
  uint64_t v35 = a3[11];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  *(unsigned char *)uint64_t v36 = *(unsigned char *)(a2 + v35);
  uint64_t v38 = *(void *)(a2 + v35 + 16);
  *(void *)(v36 + 8) = *(void *)(a2 + v35 + 8);
  *(void *)(v36 + 16) = v38;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v36 + 24) = *(unsigned char *)(v37 + 24);
  *(unsigned char *)(v36 + 25) = *(unsigned char *)(v37 + 25);
  uint64_t v39 = *(void *)(v37 + 40);
  *(void *)(v36 + 32) = *(void *)(v37 + 32);
  *(void *)(v36 + 40) = v39;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v36 + 48) = *(unsigned char *)(v37 + 48);
  uint64_t v40 = a3[12];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  if (!*(void *)(a1 + v40 + 8))
  {
LABEL_15:
    long long v45 = *(_OWORD *)(v42 + 16);
    *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
    *(_OWORD *)(v41 + 16) = v45;
    goto LABEL_16;
  }
  uint64_t v43 = *(void *)(v42 + 8);
  if (!v43)
  {
    sub_1DE098198(v41);
    goto LABEL_15;
  }
  *(void *)uint64_t v41 = *(void *)v42;
  *(void *)(v41 + 8) = v43;
  swift_bridgeObjectRelease();
  uint64_t v44 = *(void *)(v42 + 24);
  *(void *)(v41 + 16) = *(void *)(v42 + 16);
  *(void *)(v41 + 24) = v44;
  swift_bridgeObjectRelease();
LABEL_16:
  *(unsigned char *)(v41 + 32) = *(unsigned char *)(v42 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleShareEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE098664);
}

uint64_t sub_1DE098664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DE47F330();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 32) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for PuzzleShareEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE09873C);
}

uint64_t sub_1DE09873C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1DE47F330();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1DE0987FC()
{
  uint64_t result = sub_1DE47F330();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PuzzleShareEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE0989A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleShareEvent.Model.CodingKeys()
{
  return &type metadata for PuzzleShareEvent.Model.CodingKeys;
}

unint64_t sub_1DE0989E0()
{
  unint64_t result = qword_1EABA20F0;
  if (!qword_1EABA20F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA20F0);
  }
  return result;
}

unint64_t sub_1DE098A38()
{
  unint64_t result = qword_1EABA20F8;
  if (!qword_1EABA20F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA20F8);
  }
  return result;
}

unint64_t sub_1DE098A90()
{
  unint64_t result = qword_1EABA2100;
  if (!qword_1EABA2100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2100);
  }
  return result;
}

uint64_t sub_1DE098AE4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61446E6F69746361 && a2 == 0xEA00000000006174 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DE4BE8D0 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6144656C7A7A7570 && a2 == 0xEA00000000006174 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001DE4BDDA0 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x617461446461 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_1DE480660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t static SportsData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t SportsData.sportsTagList.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t SportsData.sportsTagList.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v1 = v2;
  return result;
}

uint64_t (*SportsData.sportsTagList.modify())()
{
  return nullsub_1;
}

NewsAnalytics::SportsData __swiftcall SportsData.init(sportsTagList:)(NewsAnalytics::SportsData sportsTagList)
{
  *unint64_t v1 = *(void *)sportsTagList.sportsTagList.tagIDs._rawValue;
  return sportsTagList;
}

uint64_t sub_1DE098F0C()
{
  return 0x61547374726F7073;
}

uint64_t sub_1DE098F30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x61547374726F7073 && a2 == 0xED00007473694C67)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1DE480660();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DE098FEC(uint64_t a1)
{
  unint64_t v2 = sub_1DE0991C0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE099028(uint64_t a1)
{
  unint64_t v2 = sub_1DE0991C0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SportsData.encode(to:)(void *a1)
{
  sub_1DE099400(0, &qword_1EBECB878, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v7 = (char *)v10 - v6;
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0991C0();
  sub_1DE480790();
  v10[1] = v8;
  sub_1DE099214();
  sub_1DE4805C0();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DE0991C0()
{
  unint64_t result = qword_1EBEC9E00;
  if (!qword_1EBEC9E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC9E00);
  }
  return result;
}

unint64_t sub_1DE099214()
{
  unint64_t result = qword_1EBECA7D8;
  if (!qword_1EBECA7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBECA7D8);
  }
  return result;
}

uint64_t SportsData.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1DE099400(0, &qword_1EABA2108, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0991C0();
  sub_1DE480770();
  if (!v2)
  {
    sub_1DE099464();
    sub_1DE4804E0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DE099400(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE0991C0();
    unint64_t v7 = a3(a1, &type metadata for SportsData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1DE099464()
{
  unint64_t result = qword_1EABA2110;
  if (!qword_1EABA2110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2110);
  }
  return result;
}

uint64_t sub_1DE0994C0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return SportsData.init(from:)(a1, a2);
}

uint64_t sub_1DE0994D8(void *a1)
{
  return SportsData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for SportsData()
{
  return &type metadata for SportsData;
}

unsigned char *storeEnumTagSinglePayload for SportsData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DE09959CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsData.CodingKeys()
{
  return &type metadata for SportsData.CodingKeys;
}

unint64_t sub_1DE0995D8()
{
  unint64_t result = qword_1EABA2118;
  if (!qword_1EABA2118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2118);
  }
  return result;
}

unint64_t sub_1DE099630()
{
  unint64_t result = qword_1EBEC9160;
  if (!qword_1EBEC9160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC9160);
  }
  return result;
}

unint64_t sub_1DE099688()
{
  unint64_t result = qword_1EBEC9E08;
  if (!qword_1EBEC9E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC9E08);
  }
  return result;
}

uint64_t sub_1DE0996DC(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4A9C8], qword_1EBEC78B8, MEMORY[0x1E4F4A9C0]);
}

uint64_t static GroupExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EBEC7B78, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EBEC78B8, a1);
}

uint64_t static GroupExposureEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_1DE099744(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4AAB0], qword_1EBEC8470, MEMORY[0x1E4F4AAA0]);
}

uint64_t static GroupExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EBEC7B80, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EBEC8470, a1);
}

uint64_t sub_1DE0997A4()
{
  uint64_t v0 = sub_1DE47F020();
  __swift_allocate_value_buffer(v0, qword_1EABA2120);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EABA2120);
  return sub_1DE47F010();
}

uint64_t static GroupExposureEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA09D8, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA2120, a1);
}

uint64_t GroupExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084((uint64_t (*)(void))sub_1DE04D618, a1);
}

uint64_t GroupExposureEvent.eventData.setter(uint64_t a1)
{
  sub_1DE04D618();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*GroupExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t GroupExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE09A99C(type metadata accessor for GroupExposureEvent, (uint64_t (*)(void))sub_1DE04D7B8, a1);
}

uint64_t type metadata accessor for GroupExposureEvent(uint64_t a1)
{
  return sub_1DE04E1D0(a1, qword_1EBEC4A50);
}

uint64_t GroupExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 20);
  sub_1DE04D7B8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*GroupExposureEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t GroupExposureEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 24);
  sub_1DE09A41C(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t GroupExposureEvent.groupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 24);
  sub_1DE09A41C(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*GroupExposureEvent.groupData.modify())()
{
  return nullsub_1;
}

uint64_t GroupExposureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 28);
  sub_1DE09A41C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t GroupExposureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 28);
  sub_1DE09A41C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*GroupExposureEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t GroupExposureEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 32);
  sub_1DE09A41C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t GroupExposureEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 32);
  sub_1DE09A41C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*GroupExposureEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t GroupExposureEvent.tagData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 36);
  sub_1DE09A41C(0, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE099F7C()
{
  unint64_t result = qword_1EBEC7150;
  if (!qword_1EBEC7150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC7150);
  }
  return result;
}

unint64_t sub_1DE099FD0()
{
  unint64_t result = qword_1EBEC7148;
  if (!qword_1EBEC7148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC7148);
  }
  return result;
}

uint64_t GroupExposureEvent.tagData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 36);
  sub_1DE09A41C(0, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*GroupExposureEvent.tagData.modify())()
{
  return nullsub_1;
}

uint64_t GroupExposureEvent.sectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 40);
  sub_1DE09A41C(0, &qword_1EBEC1EE0, (void (*)(void))sub_1DE09A1CC, (void (*)(void))sub_1DE09A220);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE09A1CC()
{
  unint64_t result = qword_1EBEC38E8;
  if (!qword_1EBEC38E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC38E8);
  }
  return result;
}

unint64_t sub_1DE09A220()
{
  unint64_t result = qword_1EBEC38E0;
  if (!qword_1EBEC38E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC38E0);
  }
  return result;
}

uint64_t GroupExposureEvent.sectionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 40);
  sub_1DE09A41C(0, &qword_1EBEC1EE0, (void (*)(void))sub_1DE09A1CC, (void (*)(void))sub_1DE09A220);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*GroupExposureEvent.sectionData.modify())()
{
  return nullsub_1;
}

uint64_t GroupExposureEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 44);
  sub_1DE09A41C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_1DE09A41C(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_1DE47ECA0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t GroupExposureEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 44);
  sub_1DE09A41C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*GroupExposureEvent.userBundleSubscriptionContextData.modify())()
{
  return nullsub_1;
}

uint64_t GroupExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for GroupExposureEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_1DE09A41C(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_1DE09A41C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + v4[8];
  sub_1DE09A41C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v2, v12);
  uint64_t v13 = a1 + v4[9];
  uint64_t v14 = *MEMORY[0x1E4F4A9F8];
  sub_1DE09A41C(0, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v13, v14, v15);
  uint64_t v16 = a1 + v4[10];
  sub_1DE09A41C(0, &qword_1EBEC1EE0, (void (*)(void))sub_1DE09A1CC, (void (*)(void))sub_1DE09A220);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v14, v17);
  uint64_t v18 = a1 + v4[11];
  sub_1DE09A41C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  long long v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104);

  return v20(v18, v2, v19);
}

uint64_t GroupExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084(MEMORY[0x1E4F4AB70], a1);
}

uint64_t GroupExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE09A99C(type metadata accessor for GroupExposureEvent.Model, MEMORY[0x1E4F4AB90], a1);
}

uint64_t sub_1DE09A99C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for GroupExposureEvent.Model(uint64_t a1)
{
  return sub_1DE04E1D0(a1, qword_1EBEC49A8);
}

uint64_t GroupExposureEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent.Model(0) + 24);
  long long v4 = *(_OWORD *)(v3 + 80);
  long long v5 = *(_OWORD *)(v3 + 112);
  long long v21 = *(_OWORD *)(v3 + 96);
  long long v22 = v5;
  long long v6 = *(_OWORD *)(v3 + 16);
  long long v7 = *(_OWORD *)(v3 + 48);
  long long v17 = *(_OWORD *)(v3 + 32);
  long long v8 = v17;
  long long v18 = v7;
  long long v9 = *(_OWORD *)(v3 + 48);
  long long v10 = *(_OWORD *)(v3 + 80);
  long long v19 = *(_OWORD *)(v3 + 64);
  long long v11 = v19;
  long long v20 = v10;
  long long v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  long long v13 = v16[0];
  v16[1] = v12;
  long long v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  uint64_t v23 = *(void *)(v3 + 128);
  *(void *)(a1 + 128) = *(void *)(v3 + 128);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1DE09AAE0((uint64_t)v16);
}

uint64_t sub_1DE09AAE0(uint64_t a1)
{
  return a1;
}

uint64_t GroupExposureEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent.Model(0) + 28);
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v4 = *(void *)(v3 + 16);
  *(unsigned char *)a1 = *(unsigned char *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t GroupExposureEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for GroupExposureEvent.Model(0) + 32));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t GroupExposureEvent.Model.tagData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for GroupExposureEvent.Model(0) + 36));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t GroupExposureEvent.Model.sectionData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for GroupExposureEvent.Model(0) + 40));
  *a1 = v3;

  return sub_1DE09ACAC(v3);
}

uint64_t sub_1DE09ACAC(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t GroupExposureEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (char *)(v1 + *(int *)(type metadata accessor for GroupExposureEvent.Model(0) + 44));
  char v4 = *v3;
  uint64_t v5 = *((void *)v3 + 1);
  uint64_t v6 = *((void *)v3 + 2);
  char v7 = v3[24];
  char v8 = v3[25];
  uint64_t v10 = *((void *)v3 + 4);
  uint64_t v9 = *((void *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(unsigned char *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 25) = v8;
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 GroupExposureEvent.Model.init(eventData:timedData:groupData:feedData:viewData:tagData:sectionData:userBundleSubscriptionContextData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, char *a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X5>, uint64_t *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>)
{
  long long v45 = a3[6];
  long long v46 = a3[7];
  uint64_t v47 = *((void *)a3 + 16);
  long long v41 = a3[2];
  long long v42 = a3[3];
  long long v43 = a3[4];
  long long v44 = a3[5];
  long long v39 = *a3;
  __n128 v40 = (__n128)a3[1];
  char v12 = *a4;
  uint64_t v13 = *((void *)a4 + 1);
  uint64_t v14 = *((void *)a4 + 2);
  uint64_t v15 = *a5;
  uint64_t v16 = a5[1];
  __int16 v17 = *((_WORD *)a5 + 8);
  uint64_t v28 = a6[1];
  uint64_t v29 = *a6;
  uint64_t v30 = *a7;
  char v38 = *a8;
  uint64_t v36 = *((void *)a8 + 2);
  uint64_t v37 = *((void *)a8 + 1);
  char v34 = a8[25];
  char v35 = a8[24];
  uint64_t v32 = *((void *)a8 + 5);
  uint64_t v33 = *((void *)a8 + 4);
  char v31 = a8[48];
  uint64_t v18 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(a9, a1, v18);
  long long v19 = (int *)type metadata accessor for GroupExposureEvent.Model(0);
  uint64_t v20 = a9 + v19[5];
  uint64_t v21 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v20, a2, v21);
  uint64_t v22 = a9 + v19[6];
  *(_OWORD *)(v22 + 96) = v45;
  *(_OWORD *)(v22 + 112) = v46;
  *(void *)(v22 + 128) = v47;
  *(_OWORD *)(v22 + 32) = v41;
  *(_OWORD *)(v22 + 48) = v42;
  *(_OWORD *)(v22 + 64) = v43;
  *(_OWORD *)(v22 + 80) = v44;
  __n128 result = v40;
  *(_OWORD *)uint64_t v22 = v39;
  *(__n128 *)(v22 + 16) = v40;
  uint64_t v24 = a9 + v19[7];
  *(unsigned char *)uint64_t v24 = v12;
  *(void *)(v24 + 8) = v13;
  *(void *)(v24 + 16) = v14;
  uint64_t v25 = a9 + v19[8];
  *(void *)uint64_t v25 = v15;
  *(void *)(v25 + 8) = v16;
  *(_WORD *)(v25 + 16) = v17;
  uint64_t v26 = (void *)(a9 + v19[9]);
  *uint64_t v26 = v29;
  v26[1] = v28;
  *(void *)(a9 + v19[10]) = v30;
  uint64_t v27 = a9 + v19[11];
  *(unsigned char *)uint64_t v27 = v38;
  *(void *)(v27 + 8) = v37;
  *(void *)(v27 + 16) = v36;
  *(unsigned char *)(v27 + 24) = v35;
  *(unsigned char *)(v27 + 25) = v34;
  *(void *)(v27 + 32) = v33;
  *(void *)(v27 + 40) = v32;
  *(unsigned char *)(v27 + 48) = v31;
  return result;
}

uint64_t sub_1DE09AF40(char a1)
{
  uint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x74614464656D6974;
      break;
    case 2:
      uint64_t result = 0x74614470756F7267;
      break;
    case 3:
      unsigned int v3 = 1684366694;
      goto LABEL_6;
    case 4:
      unsigned int v3 = 2003134838;
LABEL_6:
      uint64_t result = v3 | 0x6174614400000000;
      break;
    case 5:
      uint64_t result = 0x61746144676174;
      break;
    case 6:
      uint64_t result = 0x446E6F6974636573;
      break;
    case 7:
      uint64_t result = 0xD000000000000021;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE09B044()
{
  return sub_1DE09AF40(*v0);
}

uint64_t sub_1DE09B04C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE09FBB8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DE09B074(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_1DE09B080(uint64_t a1)
{
  unint64_t v2 = sub_1DE09B510();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE09B0BC(uint64_t a1)
{
  unint64_t v2 = sub_1DE09B510();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t GroupExposureEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1DE09BF04(0, &qword_1EABA2138, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v25 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE09B510();
  sub_1DE480790();
  v27[0] = 0;
  sub_1DE47F330();
  sub_1DE04D884(&qword_1EBEC2030, MEMORY[0x1E4F4AB70]);
  sub_1DE4805C0();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for GroupExposureEvent.Model(0);
    char v35 = 1;
    sub_1DE47F350();
    sub_1DE04D884(&qword_1EBEC2040, MEMORY[0x1E4F4AB90]);
    sub_1DE4805C0();
    uint64_t v11 = v3 + v10[6];
    long long v12 = *(_OWORD *)(v11 + 112);
    long long v32 = *(_OWORD *)(v11 + 96);
    long long v33 = v12;
    uint64_t v34 = *(void *)(v11 + 128);
    long long v13 = *(_OWORD *)(v11 + 48);
    long long v28 = *(_OWORD *)(v11 + 32);
    long long v29 = v13;
    long long v14 = *(_OWORD *)(v11 + 80);
    long long v30 = *(_OWORD *)(v11 + 64);
    long long v31 = v14;
    long long v15 = *(_OWORD *)(v11 + 16);
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v11;
    *(_OWORD *)&v27[16] = v15;
    char v26 = 2;
    sub_1DE0629F4();
    sub_1DE4805C0();
    uint64_t v16 = v3 + v10[7];
    v27[0] = *(unsigned char *)v16;
    *(_OWORD *)&v27[8] = *(_OWORD *)(v16 + 8);
    char v26 = 3;
    sub_1DE055800();
    sub_1DE4805C0();
    __int16 v17 = (uint64_t *)(v3 + v10[8]);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    LOWORD(v17) = *((_WORD *)v17 + 8);
    *(void *)uint64_t v27 = v18;
    *(void *)&v27[8] = v19;
    *(_WORD *)&v27[16] = (_WORD)v17;
    char v26 = 4;
    sub_1DE05410C();
    sub_1DE4805C0();
    *(_OWORD *)uint64_t v27 = *(_OWORD *)(v3 + v10[9]);
    char v26 = 5;
    sub_1DE099FD0();
    sub_1DE480550();
    *(void *)uint64_t v27 = *(void *)(v3 + v10[10]);
    char v26 = 6;
    sub_1DE09A220();
    sub_1DE480550();
    uint64_t v20 = v3 + v10[11];
    char v21 = *(unsigned char *)(v20 + 24);
    char v22 = *(unsigned char *)(v20 + 25);
    char v23 = *(unsigned char *)(v20 + 48);
    v27[0] = *(unsigned char *)v20;
    *(_OWORD *)&v27[8] = *(_OWORD *)(v20 + 8);
    v27[24] = v21;
    v27[25] = v22;
    long long v28 = *(_OWORD *)(v20 + 32);
    LOBYTE(v29) = v23;
    char v26 = 7;
    sub_1DE04DD5C();
    sub_1DE4805C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DE09B510()
{
  unint64_t result = qword_1EBEC4990;
  if (!qword_1EBEC4990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC4990);
  }
  return result;
}

uint64_t GroupExposureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v37 = sub_1DE47F350();
  uint64_t v36 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DE47F330();
  uint64_t v38 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE09BF04(0, &qword_1EBEC7530, MEMORY[0x1E4FBBDC0]);
  uint64_t v39 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  long long v12 = (char *)&v35 - v11;
  long long v41 = (int *)type metadata accessor for GroupExposureEvent.Model(0);
  MEMORY[0x1F4188790](v41);
  long long v42 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  __n128 v40 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1DE09B510();
  sub_1DE480770();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  }
  uint64_t v15 = v10;
  uint64_t v16 = v35;
  LOBYTE(v48) = 0;
  sub_1DE04D884(&qword_1EBEC2038, MEMORY[0x1E4F4AB70]);
  sub_1DE4804E0();
  uint64_t v17 = v6;
  uint64_t v18 = (uint64_t)v42;
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v42, v8, v17);
  LOBYTE(v48) = 1;
  sub_1DE04D884((unint64_t *)&unk_1EBEC2048, MEMORY[0x1E4F4AB90]);
  uint64_t v19 = v37;
  sub_1DE4804E0();
  (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v18 + v41[5], v5, v19);
  char v58 = 2;
  sub_1DE0629A0();
  sub_1DE4804E0();
  uint64_t v20 = v18 + v41[6];
  long long v21 = v55;
  *(_OWORD *)(v20 + 96) = v54;
  *(_OWORD *)(v20 + 112) = v21;
  *(void *)(v20 + 128) = v56;
  long long v22 = v51;
  *(_OWORD *)(v20 + 32) = v50;
  *(_OWORD *)(v20 + 48) = v22;
  long long v23 = v53;
  *(_OWORD *)(v20 + 64) = v52;
  *(_OWORD *)(v20 + 80) = v23;
  long long v24 = v49;
  *(_OWORD *)uint64_t v20 = v48;
  *(_OWORD *)(v20 + 16) = v24;
  char v57 = 3;
  sub_1DE0557AC();
  sub_1DE4804E0();
  uint64_t v25 = (uint64_t)v40;
  uint64_t v26 = v18 + v41[7];
  *(unsigned char *)uint64_t v26 = v43[0];
  *(_OWORD *)(v26 + 8) = *(_OWORD *)&v43[8];
  char v57 = 4;
  sub_1DE0540B8();
  sub_1DE4804E0();
  uint64_t v27 = *(void *)&v43[8];
  __int16 v28 = *(_WORD *)&v43[16];
  uint64_t v29 = v18 + v41[8];
  *(void *)uint64_t v29 = *(void *)v43;
  *(void *)(v29 + 8) = v27;
  *(_WORD *)(v29 + 16) = v28;
  char v57 = 5;
  sub_1DE099F7C();
  sub_1DE480470();
  *(_OWORD *)(v18 + v41[9]) = *(_OWORD *)v43;
  char v57 = 6;
  sub_1DE09A1CC();
  sub_1DE480470();
  *(void *)(v18 + v41[10]) = *(void *)v43;
  char v57 = 7;
  sub_1DE04DD08();
  sub_1DE4804E0();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v39);
  char v30 = v44;
  char v31 = v45;
  char v32 = v47;
  uint64_t v33 = v18 + v41[11];
  *(unsigned char *)uint64_t v33 = v43[0];
  *(_OWORD *)(v33 + 8) = *(_OWORD *)&v43[8];
  *(unsigned char *)(v33 + 24) = v30;
  *(unsigned char *)(v33 + 25) = v31;
  *(_OWORD *)(v33 + 32) = v46;
  *(unsigned char *)(v33 + 48) = v32;
  sub_1DE09C018(v18, v16);
  __swift_destroy_boxed_opaque_existential_1(v25);
  return sub_1DE09C07C(v18);
}

void sub_1DE09BF04(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE09B510();
    unint64_t v7 = a3(a1, &type metadata for GroupExposureEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DE09BF68(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DE09BF78(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DE09C018(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GroupExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DE09C07C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GroupExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DE09C0D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return GroupExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DE09C0F0(void *a1)
{
  return GroupExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DE09C108@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EBEC7B78, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EBEC78B8, a1);
}

uint64_t sub_1DE09C140@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EBEC7B80, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EBEC8470, a1);
}

uint64_t sub_1DE09C178@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA09D8, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA2120, a1);
}

uint64_t sub_1DE09C1B0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_1DE09A41C(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_1DE09A41C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  sub_1DE09A41C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v4, v13);
  uint64_t v14 = a2 + a1[9];
  uint64_t v15 = *MEMORY[0x1E4F4A9F8];
  sub_1DE09A41C(0, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v14, v15, v16);
  uint64_t v17 = a2 + a1[10];
  sub_1DE09A41C(0, &qword_1EBEC1EE0, (void (*)(void))sub_1DE09A1CC, (void (*)(void))sub_1DE09A220);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v15, v18);
  uint64_t v19 = a2 + a1[11];
  sub_1DE09A41C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  long long v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104);

  return v21(v19, v4, v20);
}

uint64_t *initializeBufferWithCopyOfBuffer for GroupExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v36 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DE04D618();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DE04D7B8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_1DE09A41C(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_1DE09A41C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    long long v21 = (char *)a1 + v20;
    long long v22 = (char *)a2 + v20;
    sub_1DE09A41C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_1DE09A41C(0, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    uint64_t v29 = (char *)a1 + v28;
    char v30 = (char *)a2 + v28;
    sub_1DE09A41C(0, &qword_1EBEC1EE0, (void (*)(void))sub_1DE09A1CC, (void (*)(void))sub_1DE09A220);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    uint64_t v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    sub_1DE09A41C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
  }
  return a1;
}

uint64_t destroy for GroupExposureEvent(uint64_t a1, int *a2)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_1DE09A41C(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_1DE09A41C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_1DE09A41C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_1DE09A41C(0, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_1DE09A41C(0, &qword_1EBEC1EE0, (void (*)(void))sub_1DE09A1CC, (void (*)(void))sub_1DE09A220);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_1DE09A41C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8);

  return v19(v17, v18);
}

uint64_t initializeWithCopy for GroupExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE09A41C(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE09A41C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE09A41C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE09A41C(0, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE09A41C(0, &qword_1EBEC1EE0, (void (*)(void))sub_1DE09A1CC, (void (*)(void))sub_1DE09A220);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE09A41C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  return a1;
}

uint64_t assignWithCopy for GroupExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE09A41C(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE09A41C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE09A41C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE09A41C(0, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE09A41C(0, &qword_1EBEC1EE0, (void (*)(void))sub_1DE09A1CC, (void (*)(void))sub_1DE09A220);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE09A41C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

uint64_t initializeWithTake for GroupExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE09A41C(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE09A41C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE09A41C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE09A41C(0, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE09A41C(0, &qword_1EBEC1EE0, (void (*)(void))sub_1DE09A1CC, (void (*)(void))sub_1DE09A220);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE09A41C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

uint64_t assignWithTake for GroupExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE09A41C(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE09A41C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE09A41C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE09A41C(0, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE09A41C(0, &qword_1EBEC1EE0, (void (*)(void))sub_1DE09A1CC, (void (*)(void))sub_1DE09A220);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE09A41C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE09DC14);
}

uint64_t sub_1DE09DC14(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_16:
    return v9(v10, a2, v8);
  }
  sub_1DE04D7B8();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_15:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_16;
  }
  sub_1DE09A41C(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_15;
  }
  sub_1DE09A41C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_15;
  }
  sub_1DE09A41C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_15;
  }
  sub_1DE09A41C(0, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_15;
  }
  sub_1DE09A41C(0, &qword_1EBEC1EE0, (void (*)(void))sub_1DE09A1CC, (void (*)(void))sub_1DE09A220);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_15;
  }
  sub_1DE09A41C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48);
  uint64_t v22 = v20;
  uint64_t v23 = a1 + a3[11];

  return v21(v23, a2, v22);
}

uint64_t storeEnumTagSinglePayload for GroupExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE09E040);
}

uint64_t sub_1DE09E040(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_1DE04D618();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_16:
    return v11(v12, a2, a2, v10);
  }
  sub_1DE04D7B8();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_15:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_16;
  }
  sub_1DE09A41C(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_15;
  }
  sub_1DE09A41C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_15;
  }
  sub_1DE09A41C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_15;
  }
  sub_1DE09A41C(0, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_15;
  }
  sub_1DE09A41C(0, &qword_1EBEC1EE0, (void (*)(void))sub_1DE09A1CC, (void (*)(void))sub_1DE09A220);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_15;
  }
  sub_1DE09A41C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  uint64_t v24 = v22;
  uint64_t v25 = a1 + a4[11];

  return v23(v25, a2, a2, v24);
}

void sub_1DE09E464()
{
  sub_1DE04D618();
  if (v0 <= 0x3F)
  {
    sub_1DE04D7B8();
    if (v1 <= 0x3F)
    {
      sub_1DE09A41C(319, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
      if (v2 <= 0x3F)
      {
        sub_1DE09A41C(319, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
        if (v3 <= 0x3F)
        {
          sub_1DE09A41C(319, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
          if (v4 <= 0x3F)
          {
            sub_1DE09A41C(319, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
            if (v5 <= 0x3F)
            {
              sub_1DE09A41C(319, &qword_1EBEC1EE0, (void (*)(void))sub_1DE09A1CC, (void (*)(void))sub_1DE09A220);
              if (v6 <= 0x3F)
              {
                sub_1DE09A41C(319, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
                if (v7 <= 0x3F) {
                  swift_initStructMetadata();
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for GroupExposureEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v37 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v37 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DE47F330();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DE47F350();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)a1 + v12;
    uint64_t v15 = (char *)a2 + v12;
    *(_WORD *)uint64_t v14 = *(_WORD *)v15;
    uint64_t v16 = *((void *)v15 + 2);
    *((void *)v14 + 1) = *((void *)v15 + 1);
    *((void *)v14 + 2) = v16;
    *((void *)v14 + 3) = *((void *)v15 + 3);
    uint64_t v17 = *((void *)v15 + 5);
    *((void *)v14 + 4) = *((void *)v15 + 4);
    *((void *)v14 + 5) = v17;
    uint64_t v18 = *((void *)v15 + 7);
    *((void *)v14 + 6) = *((void *)v15 + 6);
    *((void *)v14 + 7) = v18;
    uint64_t v19 = *((void *)v15 + 9);
    *((void *)v14 + 8) = *((void *)v15 + 8);
    *((void *)v14 + 9) = v19;
    v14[80] = v15[80];
    uint64_t v20 = *((void *)v15 + 12);
    *((void *)v14 + 11) = *((void *)v15 + 11);
    *((void *)v14 + 12) = v20;
    *((void *)v14 + 13) = *((void *)v15 + 13);
    v14[112] = v15[112];
    uint64_t v40 = *((void *)v15 + 16);
    *((void *)v14 + 15) = *((void *)v15 + 15);
    *((void *)v14 + 16) = v40;
    uint64_t v21 = (char *)a1 + v13;
    uint64_t v22 = (char *)a2 + v13;
    *uint64_t v21 = *v22;
    uint64_t v39 = *((void *)v22 + 2);
    *((void *)v21 + 1) = *((void *)v22 + 1);
    *((void *)v21 + 2) = v39;
    uint64_t v23 = a3[8];
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v23;
    uint64_t v26 = (char *)a2 + v23;
    v25[16] = v26[16];
    uint64_t v27 = *((void *)v26 + 1);
    *(void *)uint64_t v25 = *(void *)v26;
    *((void *)v25 + 1) = v27;
    v25[17] = v26[17];
    uint64_t v28 = (uint64_t *)((char *)a1 + v24);
    uint64_t v29 = (uint64_t *)((char *)a2 + v24);
    uint64_t v30 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v30;
    uint64_t v41 = a3[10];
    uint64_t v31 = *(uint64_t *)((char *)a2 + v41);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v31 != 1) {
      swift_bridgeObjectRetain();
    }
    *(uint64_t *)((char *)a1 + v41) = v31;
    uint64_t v32 = a3[11];
    uint64_t v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    *uint64_t v33 = *v34;
    uint64_t v35 = *((void *)v34 + 2);
    *((void *)v33 + 1) = *((void *)v34 + 1);
    *((void *)v33 + 2) = v35;
    *((_WORD *)v33 + 12) = *((_WORD *)v34 + 12);
    uint64_t v36 = *((void *)v34 + 5);
    *((void *)v33 + 4) = *((void *)v34 + 4);
    *((void *)v33 + 5) = v36;
    v33[48] = v34[48];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for GroupExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + *(int *)(a2 + 40)) != 1) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GroupExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(_WORD *)uint64_t v13 = *(_WORD *)v14;
  uint64_t v15 = *(void *)(v14 + 16);
  *(void *)(v13 + 8) = *(void *)(v14 + 8);
  *(void *)(v13 + 16) = v15;
  *(void *)(v13 + 24) = *(void *)(v14 + 24);
  uint64_t v16 = *(void *)(v14 + 40);
  *(void *)(v13 + 32) = *(void *)(v14 + 32);
  *(void *)(v13 + 40) = v16;
  uint64_t v17 = *(void *)(v14 + 56);
  *(void *)(v13 + 48) = *(void *)(v14 + 48);
  *(void *)(v13 + 56) = v17;
  uint64_t v18 = *(void *)(v14 + 72);
  *(void *)(v13 + 64) = *(void *)(v14 + 64);
  *(void *)(v13 + 72) = v18;
  *(unsigned char *)(v13 + 80) = *(unsigned char *)(v14 + 80);
  uint64_t v19 = *(void *)(v14 + 96);
  *(void *)(v13 + 88) = *(void *)(v14 + 88);
  *(void *)(v13 + 96) = v19;
  *(void *)(v13 + 104) = *(void *)(v14 + 104);
  *(unsigned char *)(v13 + 112) = *(unsigned char *)(v14 + 112);
  uint64_t v39 = *(void *)(v14 + 128);
  *(void *)(v13 + 120) = *(void *)(v14 + 120);
  *(void *)(v13 + 128) = v39;
  uint64_t v20 = a1 + v12;
  uint64_t v21 = a2 + v12;
  *(unsigned char *)uint64_t v20 = *(unsigned char *)v21;
  uint64_t v38 = *(void *)(v21 + 16);
  *(void *)(v20 + 8) = *(void *)(v21 + 8);
  *(void *)(v20 + 16) = v38;
  uint64_t v22 = a3[8];
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(unsigned char *)(v24 + 16) = *(unsigned char *)(v25 + 16);
  uint64_t v26 = *(void *)(v25 + 8);
  *(void *)uint64_t v24 = *(void *)v25;
  *(void *)(v24 + 8) = v26;
  *(unsigned char *)(v24 + 17) = *(unsigned char *)(v25 + 17);
  uint64_t v27 = (void *)(a1 + v23);
  uint64_t v28 = (void *)(a2 + v23);
  uint64_t v29 = v28[1];
  *uint64_t v27 = *v28;
  v27[1] = v29;
  uint64_t v40 = a3;
  uint64_t v30 = a3[10];
  uint64_t v31 = *(void *)(a2 + v30);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v31 != 1) {
    swift_bridgeObjectRetain();
  }
  *(void *)(a1 + v30) = v31;
  uint64_t v32 = v40[11];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  *(unsigned char *)uint64_t v33 = *(unsigned char *)v34;
  uint64_t v35 = *(void *)(v34 + 16);
  *(void *)(v33 + 8) = *(void *)(v34 + 8);
  *(void *)(v33 + 16) = v35;
  *(_WORD *)(v33 + 24) = *(_WORD *)(v34 + 24);
  uint64_t v36 = *(void *)(v34 + 40);
  *(void *)(v33 + 32) = *(void *)(v34 + 32);
  *(void *)(v33 + 40) = v36;
  *(unsigned char *)(v33 + 48) = *(unsigned char *)(v34 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GroupExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)uint64_t v12 = *(unsigned char *)(a2 + v11);
  *(unsigned char *)(v12 + 1) = *(unsigned char *)(a2 + v11 + 1);
  *(void *)(v12 + 8) = *(void *)(a2 + v11 + 8);
  *(void *)(v12 + 16) = *(void *)(a2 + v11 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v12 + 24) = *(_DWORD *)(v13 + 24);
  *(_DWORD *)(v12 + 28) = *(_DWORD *)(v13 + 28);
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 40) = *(void *)(v13 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 48) = *(void *)(v13 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 56) = *(void *)(v13 + 56);
  *(void *)(v12 + 64) = *(void *)(v13 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 72) = *(void *)(v13 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 80) = *(unsigned char *)(v13 + 80);
  *(void *)(v12 + 88) = *(void *)(v13 + 88);
  *(void *)(v12 + 96) = *(void *)(v13 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(v13 + 104);
  *(unsigned char *)(v12 + 112) = *(unsigned char *)(v13 + 112);
  *(void *)(v12 + 104) = v14;
  *(void *)(v12 + 120) = *(void *)(v13 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 128) = *(void *)(v13 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(unsigned char *)uint64_t v16 = *(unsigned char *)v17;
  *(void *)(v16 + 8) = *(void *)(v17 + 8);
  *(void *)(v16 + 16) = *(void *)(v17 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[8];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(void *)uint64_t v19 = *(void *)(a2 + v18);
  *(void *)(v19 + 8) = *(void *)(a2 + v18 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v19 + 16) = *(unsigned char *)(v20 + 16);
  *(unsigned char *)(v19 + 17) = *(unsigned char *)(v20 + 17);
  uint64_t v21 = a3[9];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[10];
  uint64_t v25 = (uint64_t *)(a1 + v24);
  uint64_t v26 = *(void *)(a2 + v24);
  if (*(void *)(a1 + v24) == 1)
  {
    if (v26 != 1)
    {
      *uint64_t v25 = v26;
      swift_bridgeObjectRetain();
      goto LABEL_9;
    }
    uint64_t v27 = 1;
  }
  else
  {
    if (v26 != 1)
    {
      *uint64_t v25 = v26;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    sub_1DE09F19C(a1 + v24);
    uint64_t v27 = *(void *)(a2 + v24);
  }
  *uint64_t v25 = v27;
LABEL_9:
  uint64_t v28 = a3[11];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  *(unsigned char *)uint64_t v29 = *(unsigned char *)(a2 + v28);
  *(void *)(v29 + 8) = *(void *)(a2 + v28 + 8);
  *(void *)(v29 + 16) = *(void *)(a2 + v28 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v29 + 24) = *(unsigned char *)(v30 + 24);
  *(unsigned char *)(v29 + 25) = *(unsigned char *)(v30 + 25);
  *(void *)(v29 + 32) = *(void *)(v30 + 32);
  *(void *)(v29 + 40) = *(void *)(v30 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v29 + 48) = *(unsigned char *)(v30 + 48);
  return a1;
}

uint64_t sub_1DE09F19C(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for GroupExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(void *)(v13 + 128) = *(void *)(v14 + 128);
  long long v15 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 48) = v15;
  long long v16 = *(_OWORD *)(v14 + 112);
  *(_OWORD *)(v13 + 96) = *(_OWORD *)(v14 + 96);
  *(_OWORD *)(v13 + 112) = v16;
  long long v17 = *(_OWORD *)(v14 + 80);
  *(_OWORD *)(v13 + 64) = *(_OWORD *)(v14 + 64);
  *(_OWORD *)(v13 + 80) = v17;
  long long v18 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v18;
  uint64_t v19 = a1 + v12;
  uint64_t v20 = a2 + v12;
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *(void *)(v19 + 16) = *(void *)(v20 + 16);
  uint64_t v21 = a3[8];
  uint64_t v22 = a3[9];
  uint64_t v23 = a1 + v21;
  uint64_t v24 = a2 + v21;
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  *(_WORD *)(v23 + 16) = *(_WORD *)(v24 + 16);
  *(_OWORD *)(a1 + v22) = *(_OWORD *)(a2 + v22);
  uint64_t v25 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  long long v28 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v28;
  *(_OWORD *)(v26 + 32) = *(_OWORD *)(v27 + 32);
  *(unsigned char *)(v26 + 48) = *(unsigned char *)(v27 + 48);
  return a1;
}

uint64_t assignWithTake for GroupExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(_WORD *)uint64_t v12 = *(_WORD *)(a2 + v11);
  uint64_t v14 = *(void *)(a2 + v11 + 16);
  *(void *)(v12 + 8) = *(void *)(a2 + v11 + 8);
  *(void *)(v12 + 16) = v14;
  swift_bridgeObjectRelease();
  *(void *)(v12 + 24) = *(void *)(v13 + 24);
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  swift_bridgeObjectRelease();
  *(void *)(v12 + 40) = *(void *)(v13 + 40);
  swift_bridgeObjectRelease();
  *(void *)(v12 + 48) = *(void *)(v13 + 48);
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v13 + 64);
  *(void *)(v12 + 56) = *(void *)(v13 + 56);
  *(void *)(v12 + 64) = v15;
  swift_bridgeObjectRelease();
  *(void *)(v12 + 72) = *(void *)(v13 + 72);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 80) = *(unsigned char *)(v13 + 80);
  uint64_t v16 = *(void *)(v13 + 96);
  *(void *)(v12 + 88) = *(void *)(v13 + 88);
  *(void *)(v12 + 96) = v16;
  swift_bridgeObjectRelease();
  *(void *)(v12 + 104) = *(void *)(v13 + 104);
  *(unsigned char *)(v12 + 112) = *(unsigned char *)(v13 + 112);
  *(void *)(v12 + 120) = *(void *)(v13 + 120);
  swift_bridgeObjectRelease();
  *(void *)(v12 + 128) = *(void *)(v13 + 128);
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
  uint64_t v21 = *(void *)(v19 + 8);
  uint64_t v20 = *(void *)(v19 + 16);
  *(void *)(v18 + 8) = v21;
  *(void *)(v18 + 16) = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[8];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = *(void *)(a2 + v22 + 8);
  *(void *)uint64_t v23 = *(void *)(a2 + v22);
  *(void *)(v23 + 8) = v25;
  swift_bridgeObjectRelease();
  *(_WORD *)(v23 + 16) = *(_WORD *)(v24 + 16);
  uint64_t v26 = a3[9];
  uint64_t v27 = (void *)(a1 + v26);
  long long v28 = (uint64_t *)(a2 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *uint64_t v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[10];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = *(void *)(a2 + v31);
  if (*(void *)(a1 + v31) != 1)
  {
    if (v33 != 1)
    {
      *uint64_t v32 = v33;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1DE09F19C(a1 + v31);
    uint64_t v33 = *(void *)(a2 + v31);
  }
  *uint64_t v32 = v33;
LABEL_6:
  uint64_t v34 = a3[11];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  *(unsigned char *)uint64_t v35 = *(unsigned char *)v36;
  uint64_t v37 = *(void *)(v36 + 16);
  *(void *)(v35 + 8) = *(void *)(v36 + 8);
  *(void *)(v35 + 16) = v37;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v35 + 24) = *(unsigned char *)(v36 + 24);
  *(unsigned char *)(v35 + 25) = *(unsigned char *)(v36 + 25);
  uint64_t v38 = *(void *)(v36 + 40);
  *(void *)(v35 + 32) = *(void *)(v36 + 32);
  *(void *)(v35 + 40) = v38;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v35 + 48) = *(unsigned char *)(v36 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE09F5D8);
}

uint64_t sub_1DE09F5D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DE47F330();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1DE47F350();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 16);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for GroupExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE09F704);
}

uint64_t sub_1DE09F704(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1DE47F330();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_1DE47F350();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 16) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_1DE09F818()
{
  uint64_t result = sub_1DE47F330();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1DE47F350();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for GroupExposureEvent.Model.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for GroupExposureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE09FA78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GroupExposureEvent.Model.CodingKeys()
{
  return &type metadata for GroupExposureEvent.Model.CodingKeys;
}

unint64_t sub_1DE09FAB4()
{
  unint64_t result = qword_1EABA2140;
  if (!qword_1EABA2140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2140);
  }
  return result;
}

unint64_t sub_1DE09FB0C()
{
  unint64_t result = qword_1EBEC49A0;
  if (!qword_1EBEC49A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC49A0);
  }
  return result;
}

unint64_t sub_1DE09FB64()
{
  unint64_t result = qword_1EBEC4998;
  if (!qword_1EBEC4998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC4998);
  }
  return result;
}

uint64_t sub_1DE09FBB8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x61746144676174 && a2 == 0xE700000000000000 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x446E6F6974636573 && a2 == 0xEB00000000617461 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001DE4BDDA0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_1DE480660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t static PuzzleData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t PuzzleData.puzzleID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleData.puzzleID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *BOOL v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PuzzleData.puzzleID.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleData.puzzleTypeID.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleData.puzzleTypeID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*PuzzleData.puzzleTypeID.modify())()
{
  return nullsub_1;
}

void PuzzleData.progressInfo.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  char v3 = *(unsigned char *)(v1 + 48);
  uint64_t v4 = *(void *)(v1 + 56);
  char v5 = *(unsigned char *)(v1 + 64);
  *(_DWORD *)a1 = *(_DWORD *)(v1 + 32);
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
}

uint64_t PuzzleData.progressInfo.setter(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 8);
  char v3 = *(unsigned char *)(result + 16);
  uint64_t v4 = *(void *)(result + 24);
  char v5 = *(unsigned char *)(result + 32);
  *(_DWORD *)(v1 + 32) = *(_DWORD *)result;
  *(void *)(v1 + 40) = v2;
  *(unsigned char *)(v1 + 48) = v3;
  *(void *)(v1 + 56) = v4;
  *(unsigned char *)(v1 + 64) = v5;
  return result;
}

uint64_t (*PuzzleData.progressInfo.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleData.isPaid.getter()
{
  return *(unsigned __int8 *)(v0 + 65);
}

uint64_t PuzzleData.isPaid.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 65) = result;
  return result;
}

uint64_t (*PuzzleData.isPaid.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleData.difficulty.getter()
{
  return *(void *)(v0 + 72);
}

uint64_t PuzzleData.difficulty.setter(uint64_t result)
{
  *(void *)(v1 + 72) = result;
  return result;
}

uint64_t (*PuzzleData.difficulty.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleData.init(puzzleID:puzzleTypeID:progressInfo:isPaid:difficulty:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int *a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  int v8 = *a5;
  uint64_t v9 = *((void *)a5 + 1);
  char v10 = *((unsigned char *)a5 + 16);
  uint64_t v11 = *((void *)a5 + 3);
  char v12 = *((unsigned char *)a5 + 32);
  *(void *)a8 = result;
  *(void *)(a8 + 8) = a2;
  *(void *)(a8 + 16) = a3;
  *(void *)(a8 + 24) = a4;
  *(_DWORD *)(a8 + 32) = v8;
  *(void *)(a8 + 40) = v9;
  *(unsigned char *)(a8 + 48) = v10;
  *(void *)(a8 + 56) = v11;
  *(unsigned char *)(a8 + 64) = v12;
  *(unsigned char *)(a8 + 65) = a6;
  *(void *)(a8 + 72) = a7;
  return result;
}

uint64_t sub_1DE0A0160()
{
  uint64_t result = 0x4449656C7A7A7570;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7954656C7A7A7570;
      break;
    case 2:
      uint64_t result = 0x73736572676F7270;
      break;
    case 3:
      uint64_t result = 0x646961507369;
      break;
    case 4:
      uint64_t result = 0x6C75636966666964;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE0A021C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE0A0E2C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DE0A0244(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1DE0A0250(uint64_t a1)
{
  unint64_t v2 = sub_1DE0A0538();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE0A028C(uint64_t a1)
{
  unint64_t v2 = sub_1DE0A0538();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PuzzleData.encode(to:)(void *a1)
{
  sub_1DE0A0900(0, &qword_1EABA2148, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  BOOL v7 = (char *)v15 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v21 = *(void *)(v1 + 24);
  uint64_t v22 = v8;
  int v29 = *(_DWORD *)(v1 + 32);
  uint64_t v20 = *(void *)(v1 + 40);
  int v19 = *(unsigned __int8 *)(v1 + 48);
  uint64_t v18 = *(void *)(v1 + 56);
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 64);
  int v16 = *(unsigned __int8 *)(v1 + 65);
  int v17 = v8;
  v15[1] = *(void *)(v1 + 72);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0A0538();
  sub_1DE480790();
  LOBYTE(v24) = 0;
  uint64_t v9 = v23;
  sub_1DE480580();
  if (!v9)
  {
    uint64_t v10 = v18;
    char v11 = v19;
    uint64_t v12 = v20;
    int v13 = v29;
    LOBYTE(v24) = 1;
    sub_1DE480580();
    int v24 = v13;
    uint64_t v25 = v12;
    char v26 = v11;
    uint64_t v27 = v10;
    char v28 = v17;
    char v30 = 2;
    sub_1DE06BE1C();
    sub_1DE4805C0();
    LOBYTE(v24) = 3;
    sub_1DE480590();
    LOBYTE(v24) = 4;
    sub_1DE4805E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DE0A0538()
{
  unint64_t result = qword_1EABA2150;
  if (!qword_1EABA2150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2150);
  }
  return result;
}

uint64_t PuzzleData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1DE0A0900(0, &qword_1EABA2158, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0A0538();
  sub_1DE480770();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v28) = 0;
  uint64_t v10 = sub_1DE4804A0();
  uint64_t v12 = v11;
  uint64_t v27 = v10;
  LOBYTE(v28) = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1DE4804A0();
  uint64_t v15 = v14;
  uint64_t v25 = v13;
  char v34 = 2;
  sub_1DE06BDC4();
  swift_bridgeObjectRetain();
  uint64_t v26 = v15;
  sub_1DE4804E0();
  int v33 = v28;
  uint64_t v24 = v29;
  int v23 = v30;
  uint64_t v22 = v31;
  int v21 = v32;
  LOBYTE(v28) = 3;
  int v20 = sub_1DE4804B0();
  LOBYTE(v28) = 4;
  uint64_t v17 = sub_1DE480500();
  uint64_t v18 = v20 & 1;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v19 = v26;
  *(void *)a2 = v27;
  *(void *)(a2 + 8) = v12;
  *(void *)(a2 + 16) = v25;
  *(void *)(a2 + 24) = v19;
  *(_DWORD *)(a2 + 32) = v33;
  *(void *)(a2 + 40) = v24;
  *(unsigned char *)(a2 + 48) = v23;
  *(void *)(a2 + 56) = v22;
  *(unsigned char *)(a2 + 64) = v21;
  *(unsigned char *)(a2 + 65) = v18;
  *(void *)(a2 + 72) = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1DE0A0900(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE0A0538();
    unint64_t v7 = a3(a1, &type metadata for PuzzleData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DE0A096C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PuzzleData.init(from:)(a1, a2);
}

uint64_t sub_1DE0A0984(void *a1)
{
  return PuzzleData.encode(to:)(a1);
}

uint64_t destroy for IssueData()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PuzzleData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PuzzleData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for PuzzleData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PuzzleData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleData()
{
  return &type metadata for PuzzleData;
}

unsigned char *storeEnumTagSinglePayload for PuzzleData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE0A0CECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleData.CodingKeys()
{
  return &type metadata for PuzzleData.CodingKeys;
}

unint64_t sub_1DE0A0D28()
{
  unint64_t result = qword_1EABA2160;
  if (!qword_1EABA2160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2160);
  }
  return result;
}

unint64_t sub_1DE0A0D80()
{
  unint64_t result = qword_1EABA2168;
  if (!qword_1EABA2168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2168);
  }
  return result;
}

unint64_t sub_1DE0A0DD8()
{
  unint64_t result = qword_1EABA2170;
  if (!qword_1EABA2170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2170);
  }
  return result;
}

uint64_t sub_1DE0A0E2C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4449656C7A7A7570 && a2 == 0xE800000000000000;
  if (v2 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7954656C7A7A7570 && a2 == 0xEC00000044496570 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73736572676F7270 && a2 == 0xEC0000006F666E49 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x646961507369 && a2 == 0xE600000000000000 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6C75636966666964 && a2 == 0xEA00000000007974)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1DE480660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t Tracker.chain(path:identifier:dynamicDataIdentifier:)()
{
  EventPath.rawValue.getter();
  uint64_t v0 = sub_1DE47F2C0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1DE0A110C(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4A9C8], qword_1EBECB130, MEMORY[0x1E4F4A9C0]);
}

uint64_t static TodayFeedPoolLoadEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EBECB150, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EBECB130, a1);
}

uint64_t static TodayFeedPoolLoadEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_1DE0A1174(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4AAB0], qword_1EBECB158, MEMORY[0x1E4F4AAA0]);
}

uint64_t static TodayFeedPoolLoadEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EBECB178, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EBECB158, a1);
}

uint64_t sub_1DE0A11D4()
{
  uint64_t v0 = sub_1DE47F020();
  __swift_allocate_value_buffer(v0, qword_1EABA2178);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EABA2178);
  return sub_1DE47F010();
}

uint64_t static TodayFeedPoolLoadEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA09E0, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA2178, a1);
}

uint64_t TodayFeedPoolLoadEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084((uint64_t (*)(void))sub_1DE04D618, a1);
}

uint64_t TodayFeedPoolLoadEvent.eventData.setter(uint64_t a1)
{
  sub_1DE04D618();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*TodayFeedPoolLoadEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t TodayFeedPoolLoadEvent.feedConfigData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TodayFeedPoolLoadEvent(0) + 20);
  sub_1DE0A1D08(0, &qword_1EBEC9D58, (void (*)(void))sub_1DE0A13C8, (void (*)(void))sub_1DE0A141C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for TodayFeedPoolLoadEvent(uint64_t a1)
{
  return sub_1DE04E1D0(a1, qword_1EBECB180);
}

unint64_t sub_1DE0A13C8()
{
  unint64_t result = qword_1EBEC9180;
  if (!qword_1EBEC9180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC9180);
  }
  return result;
}

unint64_t sub_1DE0A141C()
{
  unint64_t result = qword_1EBEC9F50;
  if (!qword_1EBEC9F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC9F50);
  }
  return result;
}

uint64_t TodayFeedPoolLoadEvent.feedConfigData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TodayFeedPoolLoadEvent(0) + 20);
  sub_1DE0A1D08(0, &qword_1EBEC9D58, (void (*)(void))sub_1DE0A13C8, (void (*)(void))sub_1DE0A141C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*TodayFeedPoolLoadEvent.feedConfigData.modify())()
{
  return nullsub_1;
}

uint64_t TodayFeedPoolLoadEvent.poolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TodayFeedPoolLoadEvent(0) + 24);
  sub_1DE0A1D08(0, &qword_1EBEC9D80, (void (*)(void))sub_1DE0A1618, (void (*)(void))sub_1DE0A166C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE0A1618()
{
  unint64_t result = qword_1EBECA800;
  if (!qword_1EBECA800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBECA800);
  }
  return result;
}

unint64_t sub_1DE0A166C()
{
  unint64_t result = qword_1EBECA7F8;
  if (!qword_1EBECA7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBECA7F8);
  }
  return result;
}

uint64_t TodayFeedPoolLoadEvent.poolData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TodayFeedPoolLoadEvent(0) + 24);
  sub_1DE0A1D08(0, &qword_1EBEC9D80, (void (*)(void))sub_1DE0A1618, (void (*)(void))sub_1DE0A166C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*TodayFeedPoolLoadEvent.poolData.modify())()
{
  return nullsub_1;
}

uint64_t TodayFeedPoolLoadEvent.myArticlesData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TodayFeedPoolLoadEvent(0) + 28);
  sub_1DE0A1D08(0, &qword_1EBEC9DC0, (void (*)(void))sub_1DE0A1868, (void (*)(void))sub_1DE0A18BC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE0A1868()
{
  unint64_t result = qword_1EBEC92C0;
  if (!qword_1EBEC92C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC92C0);
  }
  return result;
}

unint64_t sub_1DE0A18BC()
{
  unint64_t result = qword_1EBECB548;
  if (!qword_1EBECB548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBECB548);
  }
  return result;
}

uint64_t TodayFeedPoolLoadEvent.myArticlesData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TodayFeedPoolLoadEvent(0) + 28);
  sub_1DE0A1D08(0, &qword_1EBEC9DC0, (void (*)(void))sub_1DE0A1868, (void (*)(void))sub_1DE0A18BC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*TodayFeedPoolLoadEvent.myArticlesData.modify())()
{
  return nullsub_1;
}

uint64_t TodayFeedPoolLoadEvent.groupingInventoryData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TodayFeedPoolLoadEvent(0) + 32);
  sub_1DE0A1D08(0, &qword_1EBEC9DA0, (void (*)(void))sub_1DE0A1AB8, (void (*)(void))sub_1DE0A1B0C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE0A1AB8()
{
  unint64_t result = qword_1EBECAFF8;
  if (!qword_1EBECAFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBECAFF8);
  }
  return result;
}

unint64_t sub_1DE0A1B0C()
{
  unint64_t result = qword_1EBECAFF0;
  if (!qword_1EBECAFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBECAFF0);
  }
  return result;
}

uint64_t TodayFeedPoolLoadEvent.groupingInventoryData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TodayFeedPoolLoadEvent(0) + 32);
  sub_1DE0A1D08(0, &qword_1EBEC9DA0, (void (*)(void))sub_1DE0A1AB8, (void (*)(void))sub_1DE0A1B0C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*TodayFeedPoolLoadEvent.groupingInventoryData.modify())()
{
  return nullsub_1;
}

uint64_t TodayFeedPoolLoadEvent.articleScoreSummaryDataList.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TodayFeedPoolLoadEvent(0) + 36);
  sub_1DE0A1D08(0, &qword_1EBEC9DB8, (void (*)(void))sub_1DE0A1D84, (void (*)(void))sub_1DE0A1DD8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_1DE0A1D08(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_1DE47ECA0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1DE0A1D84()
{
  unint64_t result = qword_1EBECB528;
  if (!qword_1EBECB528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBECB528);
  }
  return result;
}

unint64_t sub_1DE0A1DD8()
{
  unint64_t result = qword_1EBECB520;
  if (!qword_1EBECB520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBECB520);
  }
  return result;
}

uint64_t TodayFeedPoolLoadEvent.articleScoreSummaryDataList.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TodayFeedPoolLoadEvent(0) + 36);
  sub_1DE0A1D08(0, &qword_1EBEC9DB8, (void (*)(void))sub_1DE0A1D84, (void (*)(void))sub_1DE0A1DD8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*TodayFeedPoolLoadEvent.articleScoreSummaryDataList.modify())()
{
  return nullsub_1;
}

uint64_t TodayFeedPoolLoadEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  Event = (int *)type metadata accessor for TodayFeedPoolLoadEvent(0);
  uint64_t v5 = a1 + Event[5];
  sub_1DE0A1D08(0, &qword_1EBEC9D58, (void (*)(void))sub_1DE0A13C8, (void (*)(void))sub_1DE0A141C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + Event[6];
  sub_1DE0A1D08(0, &qword_1EBEC9D80, (void (*)(void))sub_1DE0A1618, (void (*)(void))sub_1DE0A166C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + Event[7];
  uint64_t v10 = *MEMORY[0x1E4F4A9F8];
  sub_1DE0A1D08(0, &qword_1EBEC9DC0, (void (*)(void))sub_1DE0A1868, (void (*)(void))sub_1DE0A18BC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v9, v10, v11);
  uint64_t v12 = a1 + Event[8];
  sub_1DE0A1D08(0, &qword_1EBEC9DA0, (void (*)(void))sub_1DE0A1AB8, (void (*)(void))sub_1DE0A1B0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v10, v13);
  uint64_t v14 = a1 + Event[9];
  sub_1DE0A1D08(0, &qword_1EBEC9DB8, (void (*)(void))sub_1DE0A1D84, (void (*)(void))sub_1DE0A1DD8);
  int v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104);

  return v16(v14, v10, v15);
}

uint64_t TodayFeedPoolLoadEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084(MEMORY[0x1E4F4AB70], a1);
}

uint64_t TodayFeedPoolLoadEvent.Model.feedConfigData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TodayFeedPoolLoadEvent.Model(0) + 20);
  uint64_t v4 = *(void *)(v3 + 8);
  char v5 = *(unsigned char *)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 40);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v3 + 24);
  *(void *)(a1 + 40) = v6;

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for TodayFeedPoolLoadEvent.Model(uint64_t a1)
{
  return sub_1DE04E1D0(a1, (uint64_t *)&unk_1EABA21A8);
}

uint64_t TodayFeedPoolLoadEvent.Model.poolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for TodayFeedPoolLoadEvent.Model(0);
  uint64_t v4 = (uint64_t *)(v1 + *(int *)(result + 24));
  uint64_t v5 = *v4;
  LOBYTE(v4) = *((unsigned char *)v4 + 8);
  *(void *)a1 = v5;
  *(unsigned char *)(a1 + 8) = (_BYTE)v4;
  return result;
}

__n128 TodayFeedPoolLoadEvent.Model.myArticlesData.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TodayFeedPoolLoadEvent.Model(0) + 28);
  uint64_t v4 = *(void *)(v3 + 48);
  char v5 = *(unsigned char *)(v3 + 56);
  char v6 = *(unsigned char *)(v3 + 57);
  long long v7 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v7;
  __n128 result = *(__n128 *)(v3 + 32);
  *(__n128 *)(a1 + 32) = result;
  *(void *)(a1 + 48) = v4;
  *(unsigned char *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 57) = v6;
  return result;
}

uint64_t TodayFeedPoolLoadEvent.Model.groupingInventoryData.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for TodayFeedPoolLoadEvent.Model(0) + 32));

  return swift_bridgeObjectRetain();
}

uint64_t TodayFeedPoolLoadEvent.Model.articleScoreSummaryDataList.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for TodayFeedPoolLoadEvent.Model(0) + 36));

  return swift_bridgeObjectRetain();
}

__n128 TodayFeedPoolLoadEvent.Model.init(eventData:feedConfigData:poolData:myArticlesData:groupingInventoryData:articleScoreSummaryDataList:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, long long *a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v9 = *a2;
  uint64_t v10 = a2[1];
  char v11 = *((unsigned char *)a2 + 16);
  long long v23 = *(_OWORD *)(a2 + 3);
  uint64_t v12 = a2[5];
  uint64_t v13 = *a3;
  char v14 = *((unsigned char *)a3 + 8);
  long long v26 = a4[1];
  long long v27 = *a4;
  __n128 v25 = (__n128)a4[2];
  uint64_t v15 = *((void *)a4 + 6);
  char v16 = *((unsigned char *)a4 + 56);
  char v24 = *((unsigned char *)a4 + 57);
  uint64_t v28 = *a5;
  uint64_t v29 = *a6;
  uint64_t v17 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(a7, a1, v17);
  uint64_t v18 = (int *)type metadata accessor for TodayFeedPoolLoadEvent.Model(0);
  uint64_t v19 = a7 + v18[5];
  *(void *)uint64_t v19 = v9;
  *(void *)(v19 + 8) = v10;
  *(unsigned char *)(v19 + 16) = v11;
  *(_OWORD *)(v19 + 24) = v23;
  *(void *)(v19 + 40) = v12;
  uint64_t v20 = a7 + v18[6];
  *(void *)uint64_t v20 = v13;
  *(unsigned char *)(v20 + 8) = v14;
  uint64_t v21 = a7 + v18[7];
  *(_OWORD *)uint64_t v21 = v27;
  *(_OWORD *)(v21 + 16) = v26;
  __n128 result = v25;
  *(__n128 *)(v21 + 32) = v25;
  *(void *)(v21 + 48) = v15;
  *(unsigned char *)(v21 + 56) = v16;
  *(unsigned char *)(v21 + 57) = v24;
  *(void *)(a7 + v18[8]) = v28;
  *(void *)(a7 + v18[9]) = v29;
  return result;
}

unint64_t sub_1DE0A2528(char a1)
{
  unint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x666E6F4364656566;
      break;
    case 2:
      unint64_t result = 0x617461446C6F6F70;
      break;
    case 3:
      unint64_t result = 0x6C6369747241796DLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
      unint64_t result = 0xD00000000000001BLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DE0A2620()
{
  return sub_1DE0A2528(*v0);
}

uint64_t sub_1DE0A2628@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE0A5B18(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DE0A2650(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1DE0A265C(uint64_t a1)
{
  unint64_t v2 = sub_1DE0A2A00();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE0A2698(uint64_t a1)
{
  unint64_t v2 = sub_1DE0A2A00();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t TodayFeedPoolLoadEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1DE0A2F90(0, &qword_1EABA2190, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v23[-v8 - 16];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0A2A00();
  sub_1DE480790();
  LOBYTE(v22) = 0;
  sub_1DE47F330();
  sub_1DE07291C(&qword_1EBEC2030);
  sub_1DE4805C0();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for TodayFeedPoolLoadEvent.Model(0);
    char v11 = (long long *)(v3 + v10[5]);
    char v12 = *((unsigned char *)v11 + 16);
    uint64_t v13 = *((void *)v11 + 5);
    long long v22 = *v11;
    v23[0] = v12;
    *(_OWORD *)&v23[8] = *(long long *)((char *)v11 + 24);
    *(void *)&v23[24] = v13;
    char v27 = 1;
    sub_1DE0A141C();
    sub_1DE4805C0();
    char v14 = (uint64_t *)(v3 + v10[6]);
    uint64_t v15 = *v14;
    LOBYTE(v14) = *((unsigned char *)v14 + 8);
    *(void *)&long long v22 = v15;
    BYTE8(v22) = (_BYTE)v14;
    char v27 = 2;
    sub_1DE0A166C();
    sub_1DE4805C0();
    char v16 = (long long *)(v3 + v10[7]);
    uint64_t v17 = *((void *)v16 + 6);
    char v18 = *((unsigned char *)v16 + 56);
    char v19 = *((unsigned char *)v16 + 57);
    long long v20 = v16[1];
    long long v22 = *v16;
    *(_OWORD *)long long v23 = v20;
    *(_OWORD *)&v23[16] = v16[2];
    uint64_t v24 = v17;
    char v25 = v18;
    char v26 = v19;
    char v27 = 3;
    sub_1DE0A18BC();
    sub_1DE480550();
    *(void *)&long long v22 = *(void *)(v3 + v10[8]);
    char v27 = 4;
    sub_1DE0A1B0C();
    sub_1DE480550();
    *(void *)&long long v22 = *(void *)(v3 + v10[9]);
    char v27 = 5;
    sub_1DE0A1DD8();
    sub_1DE480550();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DE0A2A00()
{
  unint64_t result = qword_1EABA2198;
  if (!qword_1EABA2198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2198);
  }
  return result;
}

uint64_t TodayFeedPoolLoadEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v4 = sub_1DE47F330();
  uint64_t v31 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unsigned __int8 v32 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE0A2F90(0, &qword_1EABA21A0, MEMORY[0x1E4FBBDC0]);
  uint64_t v33 = v6;
  uint64_t v30 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v27 - v7;
  uint64_t v9 = (int *)type metadata accessor for TodayFeedPoolLoadEvent.Model(0);
  MEMORY[0x1F4188790](v9);
  char v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0A2A00();
  char v34 = v8;
  sub_1DE480770();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v28 = a1;
  uint64_t v12 = (uint64_t)v11;
  uint64_t v13 = v31;
  LOBYTE(v35) = 0;
  sub_1DE07291C(&qword_1EBEC2038);
  char v14 = v32;
  uint64_t v15 = v33;
  sub_1DE4804E0();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v14, v4);
  char v40 = 1;
  sub_1DE0A13C8();
  sub_1DE4804E0();
  char v16 = v36[0];
  uint64_t v17 = *(void *)&v36[24];
  uint64_t v18 = v12 + v9[5];
  *(_OWORD *)uint64_t v18 = v35;
  *(unsigned char *)(v18 + 16) = v16;
  *(_OWORD *)(v18 + 24) = *(_OWORD *)&v36[8];
  *(void *)(v18 + 40) = v17;
  char v40 = 2;
  sub_1DE0A1618();
  sub_1DE4804E0();
  char v19 = BYTE8(v35);
  uint64_t v20 = v12 + v9[6];
  *(void *)uint64_t v20 = v35;
  *(unsigned char *)(v20 + 8) = v19;
  char v40 = 3;
  sub_1DE0A1868();
  sub_1DE480470();
  uint64_t v21 = v37;
  char v22 = v38;
  char v23 = v39;
  uint64_t v24 = v12 + v9[7];
  long long v25 = *(_OWORD *)v36;
  *(_OWORD *)uint64_t v24 = v35;
  *(_OWORD *)(v24 + 16) = v25;
  *(_OWORD *)(v24 + 32) = *(_OWORD *)&v36[16];
  *(void *)(v24 + 48) = v21;
  *(unsigned char *)(v24 + 56) = v22;
  *(unsigned char *)(v24 + 57) = v23;
  char v40 = 4;
  sub_1DE0A1AB8();
  sub_1DE480470();
  *(void *)(v12 + v9[8]) = v35;
  char v40 = 5;
  sub_1DE0A1D84();
  sub_1DE480470();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v34, v15);
  *(void *)(v12 + v9[9]) = v35;
  sub_1DE0A2FF4(v12, v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  return sub_1DE0A3058(v12);
}

void sub_1DE0A2F90(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE0A2A00();
    unint64_t v7 = a3(a1, &type metadata for TodayFeedPoolLoadEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DE0A2FF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TodayFeedPoolLoadEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DE0A3058(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TodayFeedPoolLoadEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DE0A30B4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TodayFeedPoolLoadEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DE0A30CC(void *a1)
{
  return TodayFeedPoolLoadEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DE0A30E4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EBECB150, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EBECB130, a1);
}

uint64_t sub_1DE0A311C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EBECB178, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EBECB158, a1);
}

uint64_t sub_1DE0A3154@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA09E0, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA2178, a1);
}

uint64_t sub_1DE0A318C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_1DE0A1D08(0, &qword_1EBEC9D58, (void (*)(void))sub_1DE0A13C8, (void (*)(void))sub_1DE0A141C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_1DE0A1D08(0, &qword_1EBEC9D80, (void (*)(void))sub_1DE0A1618, (void (*)(void))sub_1DE0A166C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = *MEMORY[0x1E4F4A9F8];
  sub_1DE0A1D08(0, &qword_1EBEC9DC0, (void (*)(void))sub_1DE0A1868, (void (*)(void))sub_1DE0A18BC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  uint64_t v13 = a2 + a1[8];
  sub_1DE0A1D08(0, &qword_1EBEC9DA0, (void (*)(void))sub_1DE0A1AB8, (void (*)(void))sub_1DE0A1B0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v11, v14);
  uint64_t v15 = a2 + a1[9];
  sub_1DE0A1D08(0, &qword_1EBEC9DB8, (void (*)(void))sub_1DE0A1D84, (void (*)(void))sub_1DE0A1DD8);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104);

  return v17(v15, v11, v16);
}

uint64_t *initializeBufferWithCopyOfBuffer for TodayFeedPoolLoadEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DE04D618();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DE0A1D08(0, &qword_1EBEC9D58, (void (*)(void))sub_1DE0A13C8, (void (*)(void))sub_1DE0A141C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_1DE0A1D08(0, &qword_1EBEC9D80, (void (*)(void))sub_1DE0A1618, (void (*)(void))sub_1DE0A166C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_1DE0A1D08(0, &qword_1EBEC9DC0, (void (*)(void))sub_1DE0A1868, (void (*)(void))sub_1DE0A18BC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    char v22 = (char *)a2 + v20;
    sub_1DE0A1D08(0, &qword_1EBEC9DA0, (void (*)(void))sub_1DE0A1AB8, (void (*)(void))sub_1DE0A1B0C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    long long v25 = (char *)a1 + v24;
    char v26 = (char *)a2 + v24;
    sub_1DE0A1D08(0, &qword_1EBEC9DB8, (void (*)(void))sub_1DE0A1D84, (void (*)(void))sub_1DE0A1DD8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for TodayFeedPoolLoadEvent(uint64_t a1, int *a2)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_1DE0A1D08(0, &qword_1EBEC9D58, (void (*)(void))sub_1DE0A13C8, (void (*)(void))sub_1DE0A141C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_1DE0A1D08(0, &qword_1EBEC9D80, (void (*)(void))sub_1DE0A1618, (void (*)(void))sub_1DE0A166C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_1DE0A1D08(0, &qword_1EBEC9DC0, (void (*)(void))sub_1DE0A1868, (void (*)(void))sub_1DE0A18BC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_1DE0A1D08(0, &qword_1EBEC9DA0, (void (*)(void))sub_1DE0A1AB8, (void (*)(void))sub_1DE0A1B0C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_1DE0A1D08(0, &qword_1EBEC9DB8, (void (*)(void))sub_1DE0A1D84, (void (*)(void))sub_1DE0A1DD8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);

  return v15(v13, v14);
}

uint64_t initializeWithCopy for TodayFeedPoolLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE0A1D08(0, &qword_1EBEC9D58, (void (*)(void))sub_1DE0A13C8, (void (*)(void))sub_1DE0A141C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0A1D08(0, &qword_1EBEC9D80, (void (*)(void))sub_1DE0A1618, (void (*)(void))sub_1DE0A166C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0A1D08(0, &qword_1EBEC9DC0, (void (*)(void))sub_1DE0A1868, (void (*)(void))sub_1DE0A18BC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0A1D08(0, &qword_1EBEC9DA0, (void (*)(void))sub_1DE0A1AB8, (void (*)(void))sub_1DE0A1B0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE0A1D08(0, &qword_1EBEC9DB8, (void (*)(void))sub_1DE0A1D84, (void (*)(void))sub_1DE0A1DD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for TodayFeedPoolLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE0A1D08(0, &qword_1EBEC9D58, (void (*)(void))sub_1DE0A13C8, (void (*)(void))sub_1DE0A141C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0A1D08(0, &qword_1EBEC9D80, (void (*)(void))sub_1DE0A1618, (void (*)(void))sub_1DE0A166C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0A1D08(0, &qword_1EBEC9DC0, (void (*)(void))sub_1DE0A1868, (void (*)(void))sub_1DE0A18BC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0A1D08(0, &qword_1EBEC9DA0, (void (*)(void))sub_1DE0A1AB8, (void (*)(void))sub_1DE0A1B0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE0A1D08(0, &qword_1EBEC9DB8, (void (*)(void))sub_1DE0A1D84, (void (*)(void))sub_1DE0A1DD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for TodayFeedPoolLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE0A1D08(0, &qword_1EBEC9D58, (void (*)(void))sub_1DE0A13C8, (void (*)(void))sub_1DE0A141C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0A1D08(0, &qword_1EBEC9D80, (void (*)(void))sub_1DE0A1618, (void (*)(void))sub_1DE0A166C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0A1D08(0, &qword_1EBEC9DC0, (void (*)(void))sub_1DE0A1868, (void (*)(void))sub_1DE0A18BC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0A1D08(0, &qword_1EBEC9DA0, (void (*)(void))sub_1DE0A1AB8, (void (*)(void))sub_1DE0A1B0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE0A1D08(0, &qword_1EBEC9DB8, (void (*)(void))sub_1DE0A1D84, (void (*)(void))sub_1DE0A1DD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for TodayFeedPoolLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE0A1D08(0, &qword_1EBEC9D58, (void (*)(void))sub_1DE0A13C8, (void (*)(void))sub_1DE0A141C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0A1D08(0, &qword_1EBEC9D80, (void (*)(void))sub_1DE0A1618, (void (*)(void))sub_1DE0A166C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0A1D08(0, &qword_1EBEC9DC0, (void (*)(void))sub_1DE0A1868, (void (*)(void))sub_1DE0A18BC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0A1D08(0, &qword_1EBEC9DA0, (void (*)(void))sub_1DE0A1AB8, (void (*)(void))sub_1DE0A1B0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE0A1D08(0, &qword_1EBEC9DB8, (void (*)(void))sub_1DE0A1D84, (void (*)(void))sub_1DE0A1DD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for TodayFeedPoolLoadEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE0A4688);
}

uint64_t sub_1DE0A4688(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  sub_1DE0A1D08(0, &qword_1EBEC9D58, (void (*)(void))sub_1DE0A13C8, (void (*)(void))sub_1DE0A141C);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_11:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_12;
  }
  sub_1DE0A1D08(0, &qword_1EBEC9D80, (void (*)(void))sub_1DE0A1618, (void (*)(void))sub_1DE0A166C);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_11;
  }
  sub_1DE0A1D08(0, &qword_1EBEC9DC0, (void (*)(void))sub_1DE0A1868, (void (*)(void))sub_1DE0A18BC);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_11;
  }
  sub_1DE0A1D08(0, &qword_1EBEC9DA0, (void (*)(void))sub_1DE0A1AB8, (void (*)(void))sub_1DE0A1B0C);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_11;
  }
  sub_1DE0A1D08(0, &qword_1EBEC9DB8, (void (*)(void))sub_1DE0A1D84, (void (*)(void))sub_1DE0A1DD8);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a3[9];

  return v19(v21, a2, v20);
}

uint64_t storeEnumTagSinglePayload for TodayFeedPoolLoadEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE0A49E4);
}

uint64_t sub_1DE0A49E4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_1DE04D618();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_12:
    return v11(v12, a2, a2, v10);
  }
  sub_1DE0A1D08(0, &qword_1EBEC9D58, (void (*)(void))sub_1DE0A13C8, (void (*)(void))sub_1DE0A141C);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_11:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_12;
  }
  sub_1DE0A1D08(0, &qword_1EBEC9D80, (void (*)(void))sub_1DE0A1618, (void (*)(void))sub_1DE0A166C);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_11;
  }
  sub_1DE0A1D08(0, &qword_1EBEC9DC0, (void (*)(void))sub_1DE0A1868, (void (*)(void))sub_1DE0A18BC);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_11;
  }
  sub_1DE0A1D08(0, &qword_1EBEC9DA0, (void (*)(void))sub_1DE0A1AB8, (void (*)(void))sub_1DE0A1B0C);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_11;
  }
  sub_1DE0A1D08(0, &qword_1EBEC9DB8, (void (*)(void))sub_1DE0A1D84, (void (*)(void))sub_1DE0A1DD8);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  uint64_t v22 = v20;
  uint64_t v23 = a1 + a4[9];

  return v21(v23, a2, a2, v22);
}

void sub_1DE0A4D38()
{
  sub_1DE04D618();
  if (v0 <= 0x3F)
  {
    sub_1DE0A1D08(319, &qword_1EBEC9D58, (void (*)(void))sub_1DE0A13C8, (void (*)(void))sub_1DE0A141C);
    if (v1 <= 0x3F)
    {
      sub_1DE0A1D08(319, &qword_1EBEC9D80, (void (*)(void))sub_1DE0A1618, (void (*)(void))sub_1DE0A166C);
      if (v2 <= 0x3F)
      {
        sub_1DE0A1D08(319, &qword_1EBEC9DC0, (void (*)(void))sub_1DE0A1868, (void (*)(void))sub_1DE0A18BC);
        if (v3 <= 0x3F)
        {
          sub_1DE0A1D08(319, &qword_1EBEC9DA0, (void (*)(void))sub_1DE0A1AB8, (void (*)(void))sub_1DE0A1B0C);
          if (v4 <= 0x3F)
          {
            sub_1DE0A1D08(319, &qword_1EBEC9DB8, (void (*)(void))sub_1DE0A1D84, (void (*)(void))sub_1DE0A1DD8);
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TodayFeedPoolLoadEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DE47F330();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    v10[16] = v11[16];
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)uint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    *(_OWORD *)(v10 + 24) = *(_OWORD *)(v11 + 24);
    *((void *)v10 + 5) = *((void *)v11 + 5);
    uint64_t v13 = (char *)a1 + v9;
    uint64_t v14 = (char *)a2 + v9;
    *(void *)uint64_t v13 = *(void *)v14;
    unsigned char v13[8] = v14[8];
    uint64_t v15 = a3[7];
    uint64_t v16 = a3[8];
    uint64_t v17 = (_OWORD *)((char *)a1 + v15);
    uint64_t v18 = (_OWORD *)((char *)a2 + v15);
    long long v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    v17[2] = v18[2];
    *(_OWORD *)((char *)v17 + 42) = *(_OWORD *)((char *)v18 + 42);
    *(uint64_t *)((char *)a1 + v16) = *(uint64_t *)((char *)a2 + v16);
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for TodayFeedPoolLoadEvent.Model(uint64_t a1)
{
  uint64_t v2 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TodayFeedPoolLoadEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  uint64_t v11 = *(void *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = v11;
  *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
  *(void *)(v9 + 40) = *(void *)(v10 + 40);
  uint64_t v12 = a1 + v8;
  uint64_t v13 = a2 + v8;
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = (_OWORD *)(a1 + v14);
  uint64_t v17 = (_OWORD *)(a2 + v14);
  long long v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  _OWORD v16[2] = v17[2];
  *(_OWORD *)((char *)v16 + 42) = *(_OWORD *)((char *)v17 + 42);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TodayFeedPoolLoadEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  uint64_t v13 = a3[7];
  uint64_t v14 = (_OWORD *)(a1 + v13);
  uint64_t v15 = (long long *)(a2 + v13);
  long long v16 = *v15;
  long long v17 = v15[1];
  long long v18 = v15[2];
  *(_OWORD *)((char *)v14 + 42) = *(long long *)((char *)v15 + 42);
  v14[1] = v17;
  v14[2] = v18;
  *uint64_t v14 = v16;
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for TodayFeedPoolLoadEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (_OWORD *)(a1 + v7);
  uint64_t v10 = (_OWORD *)(a2 + v7);
  long long v11 = v10[1];
  _OWORD *v9 = *v10;
  v9[1] = v11;
  v9[2] = v10[2];
  uint64_t v12 = a1 + v8;
  uint64_t v13 = a2 + v8;
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  long long v16 = (_OWORD *)(a1 + v14);
  long long v17 = (_OWORD *)(a2 + v14);
  long long v18 = v17[1];
  *long long v16 = *v17;
  v16[1] = v18;
  _OWORD v16[2] = v17[2];
  *(_OWORD *)((char *)v16 + 42) = *(_OWORD *)((char *)v17 + 42);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for TodayFeedPoolLoadEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  uint64_t v15 = (_OWORD *)(a1 + v12);
  long long v16 = (_OWORD *)(a2 + v12);
  long long v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  void v15[2] = v16[2];
  *(_OWORD *)((char *)v15 + 42) = *(_OWORD *)((char *)v16 + 42);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TodayFeedPoolLoadEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE0A5624);
}

uint64_t sub_1DE0A5624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DE47F330();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for TodayFeedPoolLoadEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE0A5708);
}

uint64_t sub_1DE0A5708(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1DE47F330();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  return result;
}

uint64_t sub_1DE0A57C8()
{
  uint64_t result = sub_1DE47F330();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MediaType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TodayFeedPoolLoadEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE0A59D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TodayFeedPoolLoadEvent.Model.CodingKeys()
{
  return &type metadata for TodayFeedPoolLoadEvent.Model.CodingKeys;
}

unint64_t sub_1DE0A5A14()
{
  unint64_t result = qword_1EABA21B8;
  if (!qword_1EABA21B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA21B8);
  }
  return result;
}

unint64_t sub_1DE0A5A6C()
{
  unint64_t result = qword_1EABA21C0;
  if (!qword_1EABA21C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA21C0);
  }
  return result;
}

unint64_t sub_1DE0A5AC4()
{
  unint64_t result = qword_1EABA21C8;
  if (!qword_1EABA21C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA21C8);
  }
  return result;
}

uint64_t sub_1DE0A5B18(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x666E6F4364656566 && a2 == 0xEE00617461446769 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x617461446C6F6F70 && a2 == 0xE800000000000000 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C6369747241796DLL && a2 == 0xEE00617461447365 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DE4BE8F0 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001DE4BE910)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1DE480660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

NewsAnalytics::SubscribeButtonLocation_optional __swiftcall SubscribeButtonLocation.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_1DE480420();
  result.value = swift_bridgeObjectRelease();
  char v5 = 11;
  if (v3 < 0xB) {
    char v5 = v3;
  }
  *BOOL v2 = v5;
  return result;
}

unint64_t SubscribeButtonLocation.rawValue.getter()
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x656C6369747261;
      break;
    case 2:
      unint64_t result = 0x466C656E6E616863;
      break;
    case 3:
      unint64_t result = 0x50676E69646E616CLL;
      break;
    case 4:
      unint64_t result = 0x656E697A6167616DLL;
      break;
    case 5:
      unint64_t result = 0x434F546575737369;
      break;
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    case 7:
      unint64_t result = 0x6565466F69647561;
      break;
    case 8:
      unint64_t result = 0x6575737349666470;
      break;
    case 9:
      unint64_t result = 0x656C7A7A7570;
      break;
    case 0xA:
      unint64_t result = 0x73614D7961646F74;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE0A5F90(unsigned __int8 *a1, char *a2)
{
  return sub_1DE3D4854(*a1, *a2);
}

unint64_t sub_1DE0A5FA0()
{
  unint64_t result = qword_1EABA21D0;
  if (!qword_1EABA21D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA21D0);
  }
  return result;
}

uint64_t sub_1DE0A5FF4()
{
  return sub_1DE480750();
}

uint64_t sub_1DE0A603C()
{
  return sub_1DE477DE4();
}

uint64_t sub_1DE0A6044()
{
  return sub_1DE480750();
}

NewsAnalytics::SubscribeButtonLocation_optional sub_1DE0A6088(Swift::String *a1)
{
  return SubscribeButtonLocation.init(rawValue:)(*a1);
}

unint64_t sub_1DE0A6094@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = SubscribeButtonLocation.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DE0A60BC()
{
  return sub_1DE47FFF0();
}

uint64_t sub_1DE0A611C()
{
  return sub_1DE47FFE0();
}

unsigned char *storeEnumTagSinglePayload for SubscribeButtonLocation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE0A6238);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscribeButtonLocation()
{
  return &type metadata for SubscribeButtonLocation;
}

unint64_t sub_1DE0A6270()
{
  unint64_t result = qword_1EABA21D8;
  if (!qword_1EABA21D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA21D8);
  }
  return result;
}

uint64_t static FollowingData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void FollowingData.followingType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *FollowingData.followingType.setter(unsigned char *result)
{
  *unint64_t v1 = *result;
  return result;
}

uint64_t (*FollowingData.followingType.modify())()
{
  return nullsub_1;
}

NewsAnalytics::FollowingData __swiftcall FollowingData.init(followingType:)(NewsAnalytics::FollowingData followingType)
{
  *unint64_t v1 = *(unsigned char *)followingType.followingType;
  return followingType;
}

uint64_t sub_1DE0A6310()
{
  return 0x6E69776F6C6C6F66;
}

uint64_t sub_1DE0A6334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6E69776F6C6C6F66 && a2 == 0xED00006570795467)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1DE480660();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DE0A63F0(uint64_t a1)
{
  unint64_t v2 = sub_1DE0A65C4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE0A642C(uint64_t a1)
{
  unint64_t v2 = sub_1DE0A65C4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FollowingData.encode(to:)(void *a1)
{
  sub_1DE0A6804(0, &qword_1EBECBA00, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v7 = (char *)&v10 - v6;
  char v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0A65C4();
  sub_1DE480790();
  char v11 = v8;
  sub_1DE0A6618();
  sub_1DE4805C0();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DE0A65C4()
{
  unint64_t result = qword_1EBECB958;
  if (!qword_1EBECB958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBECB958);
  }
  return result;
}

unint64_t sub_1DE0A6618()
{
  unint64_t result = qword_1EBECB970;
  if (!qword_1EBECB970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBECB970);
  }
  return result;
}

uint64_t FollowingData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_1DE0A6804(0, &qword_1EBECB9F0, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0A65C4();
  sub_1DE480770();
  if (!v2)
  {
    sub_1DE0A6868();
    sub_1DE4804E0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DE0A6804(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE0A65C4();
    unint64_t v7 = a3(a1, &type metadata for FollowingData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1DE0A6868()
{
  unint64_t result = qword_1EBECB980;
  if (!qword_1EBECB980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBECB980);
  }
  return result;
}

unint64_t sub_1DE0A68C0()
{
  unint64_t result = qword_1EBEC28D8;
  if (!qword_1EBEC28D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC28D8);
  }
  return result;
}

unint64_t sub_1DE0A6918()
{
  unint64_t result = qword_1EBEC28D0;
  if (!qword_1EBEC28D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC28D0);
  }
  return result;
}

uint64_t sub_1DE0A696C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FollowingData.init(from:)(a1, a2);
}

uint64_t sub_1DE0A6984(void *a1)
{
  return FollowingData.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for FollowingData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE0A6A68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FollowingData()
{
  return &type metadata for FollowingData;
}

unsigned char *storeEnumTagSinglePayload for FollowingData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DE0A6B3CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FollowingData.CodingKeys()
{
  return &type metadata for FollowingData.CodingKeys;
}

unint64_t sub_1DE0A6B78()
{
  unint64_t result = qword_1EABA21E0;
  if (!qword_1EABA21E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA21E0);
  }
  return result;
}

unint64_t sub_1DE0A6BD0()
{
  unint64_t result = qword_1EBECB968;
  if (!qword_1EBECB968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBECB968);
  }
  return result;
}

unint64_t sub_1DE0A6C28()
{
  unint64_t result = qword_1EBECB960;
  if (!qword_1EBECB960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBECB960);
  }
  return result;
}

uint64_t sub_1DE0A6C7C(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4A9C8], qword_1EBEC8A70, MEMORY[0x1E4F4A9C0]);
}

uint64_t static JourneyMessageExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(qword_1EBEC8568, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EBEC8A70, a1);
}

uint64_t static JourneyMessageExposureEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_1DE0A6CE4(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4AAB0], qword_1EBEC8A88, MEMORY[0x1E4F4AAA0]);
}

uint64_t static JourneyMessageExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EBEC8AA0, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EBEC8A88, a1);
}

uint64_t sub_1DE0A6D44()
{
  uint64_t v0 = sub_1DE47F020();
  __swift_allocate_value_buffer(v0, qword_1EABA21E8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EABA21E8);
  return sub_1DE47F010();
}

uint64_t static JourneyMessageExposureEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA09E8, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA21E8, a1);
}

uint64_t JourneyMessageExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084((uint64_t (*)(void))sub_1DE04D618, a1);
}

uint64_t JourneyMessageExposureEvent.eventData.setter(uint64_t a1)
{
  sub_1DE04D618();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*JourneyMessageExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t JourneyMessageExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE0A86F8(type metadata accessor for JourneyMessageExposureEvent, (uint64_t (*)(void))sub_1DE04D7B8, a1);
}

uint64_t type metadata accessor for JourneyMessageExposureEvent(uint64_t a1)
{
  return sub_1DE04E1D0(a1, qword_1EBEC8AA8);
}

uint64_t JourneyMessageExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 20);
  sub_1DE04D7B8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*JourneyMessageExposureEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t JourneyMessageExposureEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 24);
  sub_1DE0A7F5C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t JourneyMessageExposureEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 24);
  sub_1DE0A7F5C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*JourneyMessageExposureEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t JourneyMessageExposureEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 28);
  sub_1DE0A7F5C(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t JourneyMessageExposureEvent.articleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 28);
  sub_1DE0A7F5C(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*JourneyMessageExposureEvent.articleData.modify())()
{
  return nullsub_1;
}

uint64_t JourneyMessageExposureEvent.tagData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 32);
  sub_1DE0A7F5C(0, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t JourneyMessageExposureEvent.tagData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 32);
  sub_1DE0A7F5C(0, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*JourneyMessageExposureEvent.tagData.modify())()
{
  return nullsub_1;
}

uint64_t JourneyMessageExposureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 36);
  sub_1DE0A7F5C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t JourneyMessageExposureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 36);
  sub_1DE0A7F5C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*JourneyMessageExposureEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t JourneyMessageExposureEvent.dialogStyleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 40);
  sub_1DE0A7F5C(0, &qword_1EBEC8640, (void (*)(void))sub_1DE0A76C4, (void (*)(void))sub_1DE0A7718);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE0A76C4()
{
  unint64_t result = qword_1EBEC8448;
  if (!qword_1EBEC8448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC8448);
  }
  return result;
}

unint64_t sub_1DE0A7718()
{
  unint64_t result = qword_1EBEC8738;
  if (!qword_1EBEC8738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC8738);
  }
  return result;
}

uint64_t JourneyMessageExposureEvent.dialogStyleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 40);
  sub_1DE0A7F5C(0, &qword_1EBEC8640, (void (*)(void))sub_1DE0A76C4, (void (*)(void))sub_1DE0A7718);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*JourneyMessageExposureEvent.dialogStyleData.modify())()
{
  return nullsub_1;
}

uint64_t JourneyMessageExposureEvent.placementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 44);
  sub_1DE0A7F5C(0, &qword_1EBEC8648, (void (*)(void))sub_1DE0A7914, (void (*)(void))sub_1DE0A7968);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE0A7914()
{
  unint64_t result = qword_1EBEC85B0;
  if (!qword_1EBEC85B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC85B0);
  }
  return result;
}

unint64_t sub_1DE0A7968()
{
  unint64_t result = qword_1EBEC88A0;
  if (!qword_1EBEC88A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC88A0);
  }
  return result;
}

uint64_t JourneyMessageExposureEvent.placementData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 44);
  sub_1DE0A7F5C(0, &qword_1EBEC8648, (void (*)(void))sub_1DE0A7914, (void (*)(void))sub_1DE0A7968);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*JourneyMessageExposureEvent.placementData.modify())()
{
  return nullsub_1;
}

uint64_t JourneyMessageExposureEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 48);
  sub_1DE0A7F5C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t JourneyMessageExposureEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 48);
  sub_1DE0A7F5C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*JourneyMessageExposureEvent.userBundleSubscriptionContextData.modify())()
{
  return nullsub_1;
}

uint64_t JourneyMessageExposureEvent.engagementPlacementOriginationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 52);
  sub_1DE0A7F5C(0, &qword_1EBEC9DC8, (void (*)(void))sub_1DE0A7D0C, (void (*)(void))sub_1DE0A7D60);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE0A7D0C()
{
  unint64_t result = qword_1EBECB658;
  if (!qword_1EBECB658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBECB658);
  }
  return result;
}

unint64_t sub_1DE0A7D60()
{
  unint64_t result = qword_1EBECB650;
  if (!qword_1EBECB650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBECB650);
  }
  return result;
}

uint64_t JourneyMessageExposureEvent.engagementPlacementOriginationData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 52);
  sub_1DE0A7F5C(0, &qword_1EBEC9DC8, (void (*)(void))sub_1DE0A7D0C, (void (*)(void))sub_1DE0A7D60);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*JourneyMessageExposureEvent.engagementPlacementOriginationData.modify())()
{
  return nullsub_1;
}

uint64_t JourneyMessageExposureEvent.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 56);
  sub_1DE0A7F5C(0, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_1DE0A7F5C(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_1DE47ECA0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1DE0A7FD8()
{
  unint64_t result = qword_1EBEC2580;
  if (!qword_1EBEC2580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC2580);
  }
  return result;
}

unint64_t sub_1DE0A802C()
{
  unint64_t result = qword_1EBEC2578;
  if (!qword_1EBEC2578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC2578);
  }
  return result;
}

uint64_t JourneyMessageExposureEvent.purchaseData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent(0) + 56);
  sub_1DE0A7F5C(0, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*JourneyMessageExposureEvent.purchaseData.modify())()
{
  return nullsub_1;
}

uint64_t JourneyMessageExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for JourneyMessageExposureEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_1DE0A7F5C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = *MEMORY[0x1E4F4A9F8];
  sub_1DE0A7F5C(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v9, v10, v11);
  uint64_t v12 = a1 + v4[8];
  sub_1DE0A7F5C(0, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v10, v13);
  uint64_t v14 = a1 + v4[9];
  sub_1DE0A7F5C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v10, v15);
  uint64_t v16 = a1 + v4[10];
  sub_1DE0A7F5C(0, &qword_1EBEC8640, (void (*)(void))sub_1DE0A76C4, (void (*)(void))sub_1DE0A7718);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v2, v17);
  uint64_t v18 = a1 + v4[11];
  sub_1DE0A7F5C(0, &qword_1EBEC8648, (void (*)(void))sub_1DE0A7914, (void (*)(void))sub_1DE0A7968);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v2, v19);
  uint64_t v20 = a1 + v4[12];
  sub_1DE0A7F5C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v2, v21);
  uint64_t v22 = a1 + v4[13];
  sub_1DE0A7F5C(0, &qword_1EBEC9DC8, (void (*)(void))sub_1DE0A7D0C, (void (*)(void))sub_1DE0A7D60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v22, v10, v23);
  uint64_t v24 = a1 + v4[14];
  sub_1DE0A7F5C(0, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104);

  return v26(v24, v10, v25);
}

uint64_t JourneyMessageExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084(MEMORY[0x1E4F4AB70], a1);
}

uint64_t JourneyMessageExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE0A86F8(type metadata accessor for JourneyMessageExposureEvent.Model, MEMORY[0x1E4F4AB90], a1);
}

uint64_t sub_1DE0A86F8@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for JourneyMessageExposureEvent.Model(uint64_t a1)
{
  return sub_1DE04E1D0(a1, (uint64_t *)&unk_1EABA2218);
}

uint64_t JourneyMessageExposureEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent.Model(0) + 24));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t JourneyMessageExposureEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for JourneyMessageExposureEvent.Model(0);
  sub_1DE0A8860(v1 + *(int *)(v3 + 28), (uint64_t)v5);
  sub_1DE0A8860((uint64_t)v5, a1);
  return sub_1DE0A9FFC((uint64_t)v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DE0A891C);
}

uint64_t sub_1DE0A8860(uint64_t a1, uint64_t a2)
{
  sub_1DE0A88C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DE0A88C4()
{
  if (!qword_1EBEC9030)
  {
    unint64_t v0 = sub_1DE480220();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBEC9030);
    }
  }
}

uint64_t sub_1DE0A891C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t JourneyMessageExposureEvent.Model.tagData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent.Model(0) + 32));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t JourneyMessageExposureEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent.Model(0) + 36));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;

  return sub_1DE056598(v4, v5, v6);
}

uint64_t JourneyMessageExposureEvent.Model.dialogStyleData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for JourneyMessageExposureEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t JourneyMessageExposureEvent.Model.placementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent.Model(0) + 44);
  uint64_t v4 = *(void *)(v3 + 8);
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 40);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v3 + 24);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t JourneyMessageExposureEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (char *)(v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent.Model(0) + 48));
  char v4 = *v3;
  uint64_t v5 = *((void *)v3 + 1);
  uint64_t v6 = *((void *)v3 + 2);
  char v7 = v3[24];
  char v8 = v3[25];
  uint64_t v10 = *((void *)v3 + 4);
  uint64_t v9 = *((void *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(unsigned char *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 25) = v8;
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t JourneyMessageExposureEvent.Model.engagementPlacementOriginationData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for JourneyMessageExposureEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 52));
  return result;
}

uint64_t JourneyMessageExposureEvent.Model.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for JourneyMessageExposureEvent.Model(0) + 56));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOBYTE(v3) = *((unsigned char *)v3 + 16);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = (_BYTE)v3;

  return swift_bridgeObjectRetain();
}

__n128 JourneyMessageExposureEvent.Model.init(eventData:timedData:viewData:articleData:tagData:feedData:dialogStyleData:placementData:userBundleSubscriptionContextData:engagementPlacementOriginationData:purchaseData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, long long *a6@<X5>, char *a7@<X6>, long long *a8@<X7>, uint64_t a9@<X8>, char *a10, char *a11, uint64_t *a12)
{
  uint64_t v37 = a3[1];
  uint64_t v38 = *a3;
  __int16 v36 = *((_WORD *)a3 + 8);
  sub_1DE0A8860(a4, (uint64_t)v55);
  uint64_t v19 = *a5;
  uint64_t v20 = a5[1];
  uint64_t v39 = v19;
  long long v40 = *a6;
  uint64_t v21 = *((void *)a6 + 2);
  char v41 = *a7;
  __n128 v44 = (__n128)a8[1];
  long long v45 = *a8;
  uint64_t v42 = *((void *)a8 + 5);
  uint64_t v43 = *((void *)a8 + 4);
  uint64_t v51 = *((void *)a10 + 2);
  uint64_t v52 = *((void *)a10 + 1);
  char v49 = a10[25];
  char v50 = a10[24];
  uint64_t v47 = *((void *)a10 + 5);
  uint64_t v48 = *((void *)a10 + 4);
  char v46 = a10[48];
  char v53 = *a10;
  char v54 = *a11;
  uint64_t v22 = *a12;
  uint64_t v23 = a12[1];
  char v24 = *((unsigned char *)a12 + 16);
  uint64_t v25 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32))(a9, a1, v25);
  uint64_t v26 = (int *)type metadata accessor for JourneyMessageExposureEvent.Model(0);
  uint64_t v27 = a9 + v26[5];
  uint64_t v28 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 32))(v27, a2, v28);
  uint64_t v29 = a9 + v26[6];
  *(void *)uint64_t v29 = v38;
  *(void *)(v29 + 8) = v37;
  *(_WORD *)(v29 + 16) = v36;
  sub_1DE0A8860((uint64_t)v55, a9 + v26[7]);
  uint64_t v30 = (void *)(a9 + v26[8]);
  void *v30 = v39;
  v30[1] = v20;
  uint64_t v31 = a9 + v26[9];
  *(_OWORD *)uint64_t v31 = v40;
  *(void *)(v31 + 16) = v21;
  *(unsigned char *)(a9 + v26[10]) = v41;
  uint64_t v32 = a9 + v26[11];
  __n128 result = v44;
  *(_OWORD *)uint64_t v32 = v45;
  *(__n128 *)(v32 + 16) = v44;
  *(void *)(v32 + 32) = v43;
  *(void *)(v32 + 40) = v42;
  uint64_t v34 = a9 + v26[12];
  *(unsigned char *)uint64_t v34 = v53;
  *(void *)(v34 + 8) = v52;
  *(void *)(v34 + 16) = v51;
  *(unsigned char *)(v34 + 24) = v50;
  *(unsigned char *)(v34 + 25) = v49;
  *(void *)(v34 + 32) = v48;
  *(void *)(v34 + 40) = v47;
  *(unsigned char *)(v34 + 48) = v46;
  *(unsigned char *)(a9 + v26[13]) = v54;
  uint64_t v35 = a9 + v26[14];
  *(void *)uint64_t v35 = v22;
  *(void *)(v35 + 8) = v23;
  *(unsigned char *)(v35 + 16) = v24;
  return result;
}

uint64_t sub_1DE0A8E1C(char a1)
{
  uint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x74614464656D6974;
      break;
    case 2:
      unsigned int v3 = 2003134838;
      goto LABEL_7;
    case 3:
      uint64_t result = 0x44656C6369747261;
      break;
    case 4:
      uint64_t result = 0x61746144676174;
      break;
    case 5:
      unsigned int v3 = 1684366694;
LABEL_7:
      uint64_t result = v3 | 0x6174614400000000;
      break;
    case 6:
      uint64_t result = 0x7453676F6C616964;
      break;
    case 7:
      uint64_t result = 0x6E656D6563616C70;
      break;
    case 8:
      uint64_t result = 0xD000000000000021;
      break;
    case 9:
      uint64_t result = 0xD000000000000022;
      break;
    case 10:
      uint64_t result = 0x6573616863727570;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE0A8FA0()
{
  return sub_1DE0A8E1C(*v0);
}

uint64_t sub_1DE0A8FA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE0AEED0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE0A8FD0(uint64_t a1)
{
  unint64_t v2 = sub_1DE0A9540();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE0A900C(uint64_t a1)
{
  unint64_t v2 = sub_1DE0A9540();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t JourneyMessageExposureEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1DE0A9F98(0, &qword_1EABA2200, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v26 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0A9540();
  sub_1DE480790();
  v31[0] = 0;
  sub_1DE47F330();
  sub_1DE04D884(&qword_1EBEC2030, MEMORY[0x1E4F4AB70]);
  sub_1DE4805C0();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for JourneyMessageExposureEvent.Model(0);
    v31[0] = 1;
    sub_1DE47F350();
    sub_1DE04D884(&qword_1EBEC2040, MEMORY[0x1E4F4AB90]);
    sub_1DE4805C0();
    uint64_t v11 = (uint64_t *)(v3 + v10[6]);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    LOWORD(v11) = *((_WORD *)v11 + 8);
    uint64_t v32 = v12;
    uint64_t v33 = v13;
    __int16 v34 = (__int16)v11;
    v31[135] = 2;
    sub_1DE05410C();
    sub_1DE4805C0();
    sub_1DE0A8860(v3 + v10[7], (uint64_t)v31);
    sub_1DE0A8860((uint64_t)v31, (uint64_t)v28);
    char v27 = 3;
    sub_1DE053EBC();
    sub_1DE480550();
    v28[0] = *(_OWORD *)(v3 + v10[8]);
    char v27 = 4;
    sub_1DE099FD0();
    sub_1DE480550();
    uint64_t v14 = v3 + v10[9];
    uint64_t v15 = *(void *)(v14 + 16);
    v28[0] = *(_OWORD *)v14;
    *(void *)&v28[1] = v15;
    char v27 = 5;
    sub_1DE055800();
    sub_1DE480550();
    LOBYTE(v28[0]) = *(unsigned char *)(v3 + v10[10]);
    char v27 = 6;
    sub_1DE0A7718();
    sub_1DE4805C0();
    uint64_t v16 = v3 + v10[11];
    uint64_t v17 = *(void *)(v16 + 8);
    *(void *)&v28[0] = *(void *)v16;
    *((void *)&v28[0] + 1) = v17;
    long long v18 = *(_OWORD *)(v16 + 32);
    v28[1] = *(_OWORD *)(v16 + 16);
    long long v29 = v18;
    char v27 = 7;
    sub_1DE0A7968();
    sub_1DE4805C0();
    uint64_t v19 = v3 + v10[12];
    char v20 = *(unsigned char *)(v19 + 24);
    char v21 = *(unsigned char *)(v19 + 25);
    char v22 = *(unsigned char *)(v19 + 48);
    LOBYTE(v28[0]) = *(unsigned char *)v19;
    *(_OWORD *)((char *)v28 + 8) = *(_OWORD *)(v19 + 8);
    BYTE8(v28[1]) = v20;
    BYTE9(v28[1]) = v21;
    long long v29 = *(_OWORD *)(v19 + 32);
    char v30 = v22;
    char v27 = 8;
    sub_1DE04DD5C();
    sub_1DE4805C0();
    LOBYTE(v28[0]) = *(unsigned char *)(v3 + v10[13]);
    char v27 = 9;
    sub_1DE0A7D60();
    sub_1DE480550();
    uint64_t v23 = v3 + v10[14];
    char v24 = *(unsigned char *)(v23 + 16);
    v28[0] = *(_OWORD *)v23;
    LOBYTE(v28[1]) = v24;
    char v27 = 10;
    sub_1DE0A802C();
    sub_1DE480550();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DE0A9540()
{
  unint64_t result = qword_1EABA2208;
  if (!qword_1EABA2208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2208);
  }
  return result;
}

uint64_t JourneyMessageExposureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v3 = sub_1DE47F350();
  uint64_t v44 = *(void *)(v3 - 8);
  uint64_t v45 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DE47F330();
  uint64_t v46 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE0A9F98(0, &qword_1EABA2210, MEMORY[0x1E4FBBDC0]);
  uint64_t v43 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v40 - v11;
  char v50 = (int *)type metadata accessor for JourneyMessageExposureEvent.Model(0);
  MEMORY[0x1F4188790](v50);
  uint64_t v51 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  uint64_t v48 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1DE0A9540();
  uint64_t v47 = v12;
  uint64_t v15 = v49;
  sub_1DE480770();
  if (v15)
  {
    uint64_t v49 = v15;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  }
  else
  {
    uint64_t v16 = v5;
    LOBYTE(v56[0]) = 0;
    sub_1DE04D884(&qword_1EBEC2038, MEMORY[0x1E4F4AB70]);
    sub_1DE4804E0();
    char v20 = v51;
    (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v51, v8, v6);
    LOBYTE(v56[0]) = 1;
    sub_1DE04D884((unint64_t *)&unk_1EBEC2048, MEMORY[0x1E4F4AB90]);
    uint64_t v21 = v45;
    sub_1DE4804E0();
    uint64_t v42 = v6;
    char v22 = v50;
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(&v20[v50[5]], v16, v21);
    v55[0] = 2;
    sub_1DE0540B8();
    sub_1DE4804E0();
    uint64_t v23 = v56[1];
    __int16 v24 = v57;
    uint64_t v25 = &v20[v22[6]];
    *(void *)uint64_t v25 = v56[0];
    *((void *)v25 + 1) = v23;
    *((_WORD *)v25 + 8) = v24;
    char v59 = 3;
    sub_1DE053E68();
    sub_1DE480470();
    sub_1DE0A8860((uint64_t)v56, (uint64_t)v55);
    sub_1DE0A8860((uint64_t)v55, (uint64_t)&v20[v22[7]]);
    char v58 = 4;
    sub_1DE099F7C();
    sub_1DE480470();
    *(_OWORD *)&v20[v22[8]] = v52[0];
    char v58 = 5;
    sub_1DE0557AC();
    sub_1DE480470();
    uint64_t v26 = *(void *)&v52[1];
    char v27 = &v20[v22[9]];
    *(_OWORD *)char v27 = v52[0];
    *((void *)v27 + 2) = v26;
    char v58 = 6;
    sub_1DE0A76C4();
    sub_1DE4804E0();
    v20[v22[10]] = v52[0];
    char v58 = 7;
    sub_1DE0A7914();
    sub_1DE4804E0();
    uint64_t v28 = *((void *)&v52[0] + 1);
    long long v29 = &v20[v50[11]];
    *(void *)long long v29 = *(void *)&v52[0];
    *((void *)v29 + 1) = v28;
    long long v30 = v53;
    *((_OWORD *)v29 + 1) = v52[1];
    *((_OWORD *)v29 + 2) = v30;
    char v58 = 8;
    sub_1DE04DD08();
    sub_1DE4804E0();
    uint64_t v49 = 0;
    char v31 = BYTE8(v52[1]);
    char v32 = BYTE9(v52[1]);
    char v33 = v54;
    __int16 v34 = &v20[v50[12]];
    *__int16 v34 = v52[0];
    *(_OWORD *)(v34 + 8) = *(_OWORD *)((char *)v52 + 8);
    v34[24] = v31;
    v34[25] = v32;
    *((_OWORD *)v34 + 2) = v53;
    v34[48] = v33;
    char v58 = 9;
    sub_1DE0A7D0C();
    uint64_t v35 = v49;
    sub_1DE480470();
    uint64_t v49 = v35;
    if (v35 || (v51[v50[13]] = v52[0], v58 = 10, sub_1DE0A7FD8(), uint64_t v36 = v49, sub_1DE480470(), (v49 = v36) != 0))
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v47, v43);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v51, v42);
      uint64_t v19 = v50;
      long long v18 = v51;
      (*(void (**)(char *, uint64_t))(v44 + 8))(&v51[v50[5]], v45);
      swift_bridgeObjectRelease();
      sub_1DE0A8860((uint64_t)&v18[v19[7]], (uint64_t)v56);
      sub_1DE0A9FFC((uint64_t)v56, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DE0AA078);
      swift_bridgeObjectRelease();
      sub_1DE05FBA8(*(void *)&v18[v19[9]], *(void *)&v18[v19[9] + 8], *(void *)&v18[v19[9] + 16]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v47, v43);
      char v37 = v52[1];
      uint64_t v38 = (uint64_t)v51;
      uint64_t v39 = &v51[v50[14]];
      *(_OWORD *)uint64_t v39 = v52[0];
      v39[16] = v37;
      sub_1DE0AA0DC(v38, v41);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
      return sub_1DE0AA140(v38);
    }
  }
}

void sub_1DE0A9F98(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE0A9540();
    unint64_t v7 = a3(a1, &type metadata for JourneyMessageExposureEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DE0A9FFC(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))
{
  return a1;
}

uint64_t sub_1DE0AA078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DE0AA0DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for JourneyMessageExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DE0AA140(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for JourneyMessageExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DE0AA19C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return JourneyMessageExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DE0AA1B4(void *a1)
{
  return JourneyMessageExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DE0AA1CC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(qword_1EBEC8568, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EBEC8A70, a1);
}

uint64_t sub_1DE0AA204@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EBEC8AA0, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EBEC8A88, a1);
}

uint64_t sub_1DE0AA23C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA09E8, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA21E8, a1);
}

uint64_t sub_1DE0AA274@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_1DE0A7F5C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = *MEMORY[0x1E4F4A9F8];
  sub_1DE0A7F5C(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  uint64_t v13 = a2 + a1[8];
  sub_1DE0A7F5C(0, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v11, v14);
  uint64_t v15 = a2 + a1[9];
  sub_1DE0A7F5C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v11, v16);
  uint64_t v17 = a2 + a1[10];
  sub_1DE0A7F5C(0, &qword_1EBEC8640, (void (*)(void))sub_1DE0A76C4, (void (*)(void))sub_1DE0A7718);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v4, v18);
  uint64_t v19 = a2 + a1[11];
  sub_1DE0A7F5C(0, &qword_1EBEC8648, (void (*)(void))sub_1DE0A7914, (void (*)(void))sub_1DE0A7968);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v4, v20);
  uint64_t v21 = a2 + a1[12];
  sub_1DE0A7F5C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v21, v4, v22);
  uint64_t v23 = a2 + a1[13];
  sub_1DE0A7F5C(0, &qword_1EBEC9DC8, (void (*)(void))sub_1DE0A7D0C, (void (*)(void))sub_1DE0A7D60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v23, v11, v24);
  uint64_t v25 = a2 + a1[14];
  sub_1DE0A7F5C(0, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
  char v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104);

  return v27(v25, v11, v26);
}

uint64_t *initializeBufferWithCopyOfBuffer for JourneyMessageExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v48 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v48 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DE04D618();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DE04D7B8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_1DE0A7F5C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_1DE0A7F5C(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_1DE0A7F5C(0, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_1DE0A7F5C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    long long v29 = (char *)a1 + v28;
    long long v30 = (char *)a2 + v28;
    sub_1DE0A7F5C(0, &qword_1EBEC8640, (void (*)(void))sub_1DE0A76C4, (void (*)(void))sub_1DE0A7718);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    char v33 = (char *)a1 + v32;
    __int16 v34 = (char *)a2 + v32;
    sub_1DE0A7F5C(0, &qword_1EBEC8648, (void (*)(void))sub_1DE0A7914, (void (*)(void))sub_1DE0A7968);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    char v37 = (char *)a1 + v36;
    uint64_t v38 = (char *)a2 + v36;
    sub_1DE0A7F5C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = a3[13];
    uint64_t v41 = (char *)a1 + v40;
    uint64_t v42 = (char *)a2 + v40;
    sub_1DE0A7F5C(0, &qword_1EBEC9DC8, (void (*)(void))sub_1DE0A7D0C, (void (*)(void))sub_1DE0A7D60);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    uint64_t v44 = a3[14];
    uint64_t v45 = (char *)a1 + v44;
    uint64_t v46 = (char *)a2 + v44;
    sub_1DE0A7F5C(0, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
  }
  return a1;
}

uint64_t destroy for JourneyMessageExposureEvent(uint64_t a1, int *a2)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_1DE0A7F5C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_1DE0A7F5C(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_1DE0A7F5C(0, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_1DE0A7F5C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_1DE0A7F5C(0, &qword_1EBEC8640, (void (*)(void))sub_1DE0A76C4, (void (*)(void))sub_1DE0A7718);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_1DE0A7F5C(0, &qword_1EBEC8648, (void (*)(void))sub_1DE0A7914, (void (*)(void))sub_1DE0A7968);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  sub_1DE0A7F5C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[13];
  sub_1DE0A7F5C(0, &qword_1EBEC9DC8, (void (*)(void))sub_1DE0A7D0C, (void (*)(void))sub_1DE0A7D60);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = a1 + a2[14];
  sub_1DE0A7F5C(0, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8);

  return v25(v23, v24);
}

uint64_t initializeWithCopy for JourneyMessageExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0A7F5C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0A7F5C(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0A7F5C(0, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE0A7F5C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE0A7F5C(0, &qword_1EBEC8640, (void (*)(void))sub_1DE0A76C4, (void (*)(void))sub_1DE0A7718);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE0A7F5C(0, &qword_1EBEC8648, (void (*)(void))sub_1DE0A7914, (void (*)(void))sub_1DE0A7968);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE0A7F5C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_1DE0A7F5C(0, &qword_1EBEC9DC8, (void (*)(void))sub_1DE0A7D0C, (void (*)(void))sub_1DE0A7D60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_1DE0A7F5C(0, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
  return a1;
}

uint64_t assignWithCopy for JourneyMessageExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0A7F5C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0A7F5C(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0A7F5C(0, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE0A7F5C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE0A7F5C(0, &qword_1EBEC8640, (void (*)(void))sub_1DE0A76C4, (void (*)(void))sub_1DE0A7718);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE0A7F5C(0, &qword_1EBEC8648, (void (*)(void))sub_1DE0A7914, (void (*)(void))sub_1DE0A7968);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE0A7F5C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_1DE0A7F5C(0, &qword_1EBEC9DC8, (void (*)(void))sub_1DE0A7D0C, (void (*)(void))sub_1DE0A7D60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_1DE0A7F5C(0, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
  return a1;
}

uint64_t initializeWithTake for JourneyMessageExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0A7F5C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0A7F5C(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0A7F5C(0, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE0A7F5C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE0A7F5C(0, &qword_1EBEC8640, (void (*)(void))sub_1DE0A76C4, (void (*)(void))sub_1DE0A7718);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE0A7F5C(0, &qword_1EBEC8648, (void (*)(void))sub_1DE0A7914, (void (*)(void))sub_1DE0A7968);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE0A7F5C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_1DE0A7F5C(0, &qword_1EBEC9DC8, (void (*)(void))sub_1DE0A7D0C, (void (*)(void))sub_1DE0A7D60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_1DE0A7F5C(0, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  return a1;
}

uint64_t assignWithTake for JourneyMessageExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0A7F5C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0A7F5C(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0A7F5C(0, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE0A7F5C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE0A7F5C(0, &qword_1EBEC8640, (void (*)(void))sub_1DE0A76C4, (void (*)(void))sub_1DE0A7718);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE0A7F5C(0, &qword_1EBEC8648, (void (*)(void))sub_1DE0A7914, (void (*)(void))sub_1DE0A7968);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE0A7F5C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_1DE0A7F5C(0, &qword_1EBEC9DC8, (void (*)(void))sub_1DE0A7D0C, (void (*)(void))sub_1DE0A7D60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_1DE0A7F5C(0, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
  return a1;
}

uint64_t getEnumTagSinglePayload for JourneyMessageExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE0AC734);
}

uint64_t sub_1DE0AC734(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_22:
    return v9(v10, a2, v8);
  }
  sub_1DE04D7B8();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_21:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_22;
  }
  sub_1DE0A7F5C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_21;
  }
  sub_1DE0A7F5C(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_21;
  }
  sub_1DE0A7F5C(0, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_21;
  }
  sub_1DE0A7F5C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_21;
  }
  sub_1DE0A7F5C(0, &qword_1EBEC8640, (void (*)(void))sub_1DE0A76C4, (void (*)(void))sub_1DE0A7718);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_21;
  }
  sub_1DE0A7F5C(0, &qword_1EBEC8648, (void (*)(void))sub_1DE0A7914, (void (*)(void))sub_1DE0A7968);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_21;
  }
  sub_1DE0A7F5C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_21;
  }
  sub_1DE0A7F5C(0, &qword_1EBEC9DC8, (void (*)(void))sub_1DE0A7D0C, (void (*)(void))sub_1DE0A7D60);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a2)
  {
    uint64_t v8 = v21;
    uint64_t v12 = *(void *)(v21 - 8);
    uint64_t v13 = a3[13];
    goto LABEL_21;
  }
  sub_1DE0A7F5C(0, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48);
  uint64_t v25 = v23;
  uint64_t v26 = a1 + a3[14];

  return v24(v26, a2, v25);
}

uint64_t storeEnumTagSinglePayload for JourneyMessageExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE0ACCEC);
}

uint64_t sub_1DE0ACCEC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_1DE04D618();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_22:
    return v11(v12, a2, a2, v10);
  }
  sub_1DE04D7B8();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_21:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_22;
  }
  sub_1DE0A7F5C(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_21;
  }
  sub_1DE0A7F5C(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_21;
  }
  sub_1DE0A7F5C(0, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_21;
  }
  sub_1DE0A7F5C(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_21;
  }
  sub_1DE0A7F5C(0, &qword_1EBEC8640, (void (*)(void))sub_1DE0A76C4, (void (*)(void))sub_1DE0A7718);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_21;
  }
  sub_1DE0A7F5C(0, &qword_1EBEC8648, (void (*)(void))sub_1DE0A7914, (void (*)(void))sub_1DE0A7968);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_21;
  }
  sub_1DE0A7F5C(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_21;
  }
  sub_1DE0A7F5C(0, &qword_1EBEC9DC8, (void (*)(void))sub_1DE0A7D0C, (void (*)(void))sub_1DE0A7D60);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a3)
  {
    uint64_t v10 = v23;
    uint64_t v14 = *(void *)(v23 - 8);
    uint64_t v15 = a4[13];
    goto LABEL_21;
  }
  sub_1DE0A7F5C(0, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
  uint64_t v27 = v25;
  uint64_t v28 = a1 + a4[14];

  return v26(v28, a2, a2, v27);
}

void sub_1DE0AD29C()
{
  sub_1DE04D618();
  if (v0 <= 0x3F)
  {
    sub_1DE04D7B8();
    if (v1 <= 0x3F)
    {
      sub_1DE0A7F5C(319, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
      if (v2 <= 0x3F)
      {
        sub_1DE0A7F5C(319, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
        if (v3 <= 0x3F)
        {
          sub_1DE0A7F5C(319, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
          if (v4 <= 0x3F)
          {
            sub_1DE0A7F5C(319, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
            if (v5 <= 0x3F)
            {
              sub_1DE0A7F5C(319, &qword_1EBEC8640, (void (*)(void))sub_1DE0A76C4, (void (*)(void))sub_1DE0A7718);
              if (v6 <= 0x3F)
              {
                sub_1DE0A7F5C(319, &qword_1EBEC8648, (void (*)(void))sub_1DE0A7914, (void (*)(void))sub_1DE0A7968);
                if (v7 <= 0x3F)
                {
                  sub_1DE0A7F5C(319, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
                  if (v8 <= 0x3F)
                  {
                    sub_1DE0A7F5C(319, &qword_1EBEC9DC8, (void (*)(void))sub_1DE0A7D0C, (void (*)(void))sub_1DE0A7D60);
                    if (v9 <= 0x3F)
                    {
                      sub_1DE0A7F5C(319, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
                      if (v10 <= 0x3F) {
                        swift_initStructMetadata();
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for JourneyMessageExposureEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    a1 = (void *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DE47F330();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    unint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DE47F350();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)a1 + v12;
    uint64_t v15 = (char *)a2 + v12;
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    *((_WORD *)v14 + 8) = *((_WORD *)v15 + 8);
    uint64_t v17 = (char *)a1 + v13;
    uint64_t v18 = (char *)a2 + v13;
    uint64_t v19 = *(void *)((char *)a2 + v13 + 24);
    swift_bridgeObjectRetain();
    if (v19)
    {
      *(void *)uint64_t v17 = *(void *)v18;
      v17[8] = v18[8];
      *((void *)v17 + 2) = *((void *)v18 + 2);
      *((void *)v17 + 3) = v19;
      v17[32] = v18[32];
      uint64_t v20 = *((void *)v18 + 6);
      *((void *)v17 + 5) = *((void *)v18 + 5);
      *((void *)v17 + 6) = v20;
      *((_WORD *)v17 + 28) = *((_WORD *)v18 + 28);
      uint64_t v22 = *((void *)v18 + 8);
      uint64_t v21 = *((void *)v18 + 9);
      v17[80] = v18[80];
      *((void *)v17 + 8) = v22;
      *((void *)v17 + 9) = v21;
      *(_OWORD *)(v17 + 88) = *(_OWORD *)(v18 + 88);
      *((void *)v17 + 13) = *((void *)v18 + 13);
      v17[112] = v18[112];
      *((void *)v17 + 15) = *((void *)v18 + 15);
      *((_DWORD *)v17 + 32) = *((_DWORD *)v18 + 32);
      v17[132] = v18[132];
      *(_WORD *)(v17 + 133) = *(_WORD *)(v18 + 133);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v24 = *((_OWORD *)v18 + 7);
      *((_OWORD *)v17 + 6) = *((_OWORD *)v18 + 6);
      *((_OWORD *)v17 + 7) = v24;
      *(void *)(v17 + 127) = *(void *)(v18 + 127);
      long long v25 = *((_OWORD *)v18 + 3);
      *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
      *((_OWORD *)v17 + 3) = v25;
      long long v26 = *((_OWORD *)v18 + 5);
      *((_OWORD *)v17 + 4) = *((_OWORD *)v18 + 4);
      *((_OWORD *)v17 + 5) = v26;
      long long v27 = *((_OWORD *)v18 + 1);
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v27;
    }
    uint64_t v28 = a3[8];
    uint64_t v29 = a3[9];
    uint64_t v30 = (void *)((char *)a1 + v28);
    uint64_t v31 = (void *)((char *)a2 + v28);
    uint64_t v32 = v31[1];
    void *v30 = *v31;
    v30[1] = v32;
    uint64_t v33 = (char *)a1 + v29;
    uint64_t v34 = (char *)a2 + v29;
    uint64_t v35 = *(void *)((char *)a2 + v29 + 16);
    swift_bridgeObjectRetain();
    if (v35 == 1)
    {
      *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
      *((void *)v33 + 2) = *((void *)v34 + 2);
    }
    else
    {
      *uint64_t v33 = *v34;
      *((void *)v33 + 1) = *((void *)v34 + 1);
      *((void *)v33 + 2) = v35;
      swift_bridgeObjectRetain();
    }
    uint64_t v36 = a3[11];
    *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    uint64_t v37 = (void *)((char *)a1 + v36);
    uint64_t v38 = (void *)((char *)a2 + v36);
    uint64_t v39 = v38[1];
    *uint64_t v37 = *v38;
    v37[1] = v39;
    uint64_t v40 = v38[3];
    void v37[2] = v38[2];
    v37[3] = v40;
    uint64_t v41 = v38[5];
    v37[4] = v38[4];
    v37[5] = v41;
    uint64_t v42 = a3[12];
    uint64_t v43 = a3[13];
    uint64_t v44 = (char *)a1 + v42;
    uint64_t v45 = (char *)a2 + v42;
    *uint64_t v44 = *v45;
    uint64_t v46 = *((void *)v45 + 2);
    *((void *)v44 + 1) = *((void *)v45 + 1);
    *((void *)v44 + 2) = v46;
    v44[24] = v45[24];
    v44[25] = v45[25];
    uint64_t v47 = *((void *)v45 + 4);
    uint64_t v48 = *((void *)v45 + 5);
    v44[48] = v45[48];
    LOBYTE(v45) = *((unsigned char *)a2 + v43);
    *((void *)v44 + 4) = v47;
    *((void *)v44 + 5) = v48;
    *((unsigned char *)a1 + v43) = (_BYTE)v45;
    uint64_t v49 = a3[14];
    char v50 = (char *)a1 + v49;
    uint64_t v51 = (char *)a2 + v49;
    uint64_t v52 = *((void *)v51 + 1);
    *(void *)char v50 = *(void *)v51;
    *((void *)v50 + 1) = v52;
    v50[16] = v51[16];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for JourneyMessageExposureEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[7] + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[9] + 16) != 1) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for JourneyMessageExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  uint64_t v15 = *(void *)(v14 + 8);
  *(void *)uint64_t v13 = *(void *)v14;
  *(void *)(v13 + 8) = v15;
  *(_WORD *)(v13 + 16) = *(_WORD *)(v14 + 16);
  uint64_t v16 = a1 + v12;
  uint64_t v17 = a2 + v12;
  uint64_t v18 = *(void *)(a2 + v12 + 24);
  swift_bridgeObjectRetain();
  if (v18)
  {
    *(void *)uint64_t v16 = *(void *)v17;
    *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
    *(void *)(v16 + 16) = *(void *)(v17 + 16);
    *(void *)(v16 + 24) = v18;
    *(unsigned char *)(v16 + 32) = *(unsigned char *)(v17 + 32);
    uint64_t v19 = *(void *)(v17 + 48);
    *(void *)(v16 + 40) = *(void *)(v17 + 40);
    *(void *)(v16 + 48) = v19;
    *(_WORD *)(v16 + 56) = *(_WORD *)(v17 + 56);
    uint64_t v21 = *(void *)(v17 + 64);
    uint64_t v20 = *(void *)(v17 + 72);
    *(unsigned char *)(v16 + 80) = *(unsigned char *)(v17 + 80);
    *(void *)(v16 + 64) = v21;
    *(void *)(v16 + 72) = v20;
    *(_OWORD *)(v16 + 88) = *(_OWORD *)(v17 + 88);
    *(void *)(v16 + 104) = *(void *)(v17 + 104);
    *(unsigned char *)(v16 + 112) = *(unsigned char *)(v17 + 112);
    *(void *)(v16 + 120) = *(void *)(v17 + 120);
    *(_DWORD *)(v16 + 128) = *(_DWORD *)(v17 + 128);
    *(unsigned char *)(v16 + 132) = *(unsigned char *)(v17 + 132);
    *(_WORD *)(v16 + 133) = *(_WORD *)(v17 + 133);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v22 = *(_OWORD *)(v17 + 112);
    *(_OWORD *)(v16 + 96) = *(_OWORD *)(v17 + 96);
    *(_OWORD *)(v16 + 112) = v22;
    *(void *)(v16 + 127) = *(void *)(v17 + 127);
    long long v23 = *(_OWORD *)(v17 + 48);
    *(_OWORD *)(v16 + 32) = *(_OWORD *)(v17 + 32);
    *(_OWORD *)(v16 + 48) = v23;
    long long v24 = *(_OWORD *)(v17 + 80);
    *(_OWORD *)(v16 + 64) = *(_OWORD *)(v17 + 64);
    *(_OWORD *)(v16 + 80) = v24;
    long long v25 = *(_OWORD *)(v17 + 16);
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    *(_OWORD *)(v16 + 16) = v25;
  }
  uint64_t v26 = a3[8];
  uint64_t v27 = a3[9];
  uint64_t v28 = (void *)(a1 + v26);
  uint64_t v29 = (void *)(a2 + v26);
  uint64_t v30 = v29[1];
  *uint64_t v28 = *v29;
  v28[1] = v30;
  uint64_t v31 = a1 + v27;
  uint64_t v32 = a2 + v27;
  uint64_t v33 = *(void *)(a2 + v27 + 16);
  swift_bridgeObjectRetain();
  if (v33 == 1)
  {
    *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
    *(void *)(v31 + 16) = *(void *)(v32 + 16);
  }
  else
  {
    *(unsigned char *)uint64_t v31 = *(unsigned char *)v32;
    *(void *)(v31 + 8) = *(void *)(v32 + 8);
    *(void *)(v31 + 16) = v33;
    swift_bridgeObjectRetain();
  }
  uint64_t v34 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = (void *)(a2 + v34);
  uint64_t v37 = v36[1];
  *uint64_t v35 = *v36;
  v35[1] = v37;
  uint64_t v38 = v36[3];
  v35[2] = v36[2];
  v35[3] = v38;
  uint64_t v39 = v36[5];
  v35[4] = v36[4];
  v35[5] = v39;
  uint64_t v40 = a3[12];
  uint64_t v41 = a3[13];
  uint64_t v42 = a1 + v40;
  uint64_t v43 = a2 + v40;
  *(unsigned char *)uint64_t v42 = *(unsigned char *)v43;
  uint64_t v44 = *(void *)(v43 + 16);
  *(void *)(v42 + 8) = *(void *)(v43 + 8);
  *(void *)(v42 + 16) = v44;
  *(unsigned char *)(v42 + 24) = *(unsigned char *)(v43 + 24);
  *(unsigned char *)(v42 + 25) = *(unsigned char *)(v43 + 25);
  uint64_t v45 = *(void *)(v43 + 32);
  uint64_t v46 = *(void *)(v43 + 40);
  *(unsigned char *)(v42 + 48) = *(unsigned char *)(v43 + 48);
  LOBYTE(v43) = *(unsigned char *)(a2 + v41);
  *(void *)(v42 + 32) = v45;
  *(void *)(v42 + 40) = v46;
  *(unsigned char *)(a1 + v41) = v43;
  uint64_t v47 = a3[14];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  uint64_t v50 = *(void *)(v49 + 8);
  *(void *)uint64_t v48 = *(void *)v49;
  *(void *)(v48 + 8) = v50;
  *(unsigned char *)(v48 + 16) = *(unsigned char *)(v49 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for JourneyMessageExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(void *)(v12 + 8) = *(void *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 16) = *(unsigned char *)(v13 + 16);
  *(unsigned char *)(v12 + 17) = *(unsigned char *)(v13 + 17);
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void *)(a1 + v14 + 24);
  uint64_t v18 = *(void *)(a2 + v14 + 24);
  if (v17)
  {
    if (v18)
    {
      *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
      *(_DWORD *)(v15 + 4) = *(_DWORD *)(v16 + 4);
      *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
      *(void *)(v15 + 16) = *(void *)(v16 + 16);
      *(void *)(v15 + 24) = *(void *)(v16 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v15 + 32) = *(unsigned char *)(v16 + 32);
      *(void *)(v15 + 40) = *(void *)(v16 + 40);
      uint64_t v19 = *(void *)(v16 + 48);
      *(unsigned char *)(v15 + 56) = *(unsigned char *)(v16 + 56);
      *(void *)(v15 + 48) = v19;
      *(unsigned char *)(v15 + 57) = *(unsigned char *)(v16 + 57);
      *(void *)(v15 + 64) = *(void *)(v16 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v20 = *(void *)(v16 + 72);
      *(unsigned char *)(v15 + 80) = *(unsigned char *)(v16 + 80);
      *(void *)(v15 + 72) = v20;
      *(void *)(v15 + 88) = *(void *)(v16 + 88);
      *(void *)(v15 + 96) = *(void *)(v16 + 96);
      *(void *)(v15 + 104) = *(void *)(v16 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v15 + 112) = *(unsigned char *)(v16 + 112);
      *(void *)(v15 + 120) = *(void *)(v16 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v15 + 128) = *(unsigned char *)(v16 + 128);
      *(unsigned char *)(v15 + 129) = *(unsigned char *)(v16 + 129);
      *(unsigned char *)(v15 + 130) = *(unsigned char *)(v16 + 130);
      *(unsigned char *)(v15 + 131) = *(unsigned char *)(v16 + 131);
      *(unsigned char *)(v15 + 132) = *(unsigned char *)(v16 + 132);
      *(unsigned char *)(v15 + 133) = *(unsigned char *)(v16 + 133);
      *(unsigned char *)(v15 + 134) = *(unsigned char *)(v16 + 134);
    }
    else
    {
      sub_1DE0AE434(v15);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      long long v23 = *(_OWORD *)(v16 + 64);
      long long v25 = *(_OWORD *)(v16 + 16);
      long long v24 = *(_OWORD *)(v16 + 32);
      *(_OWORD *)(v15 + 48) = *(_OWORD *)(v16 + 48);
      *(_OWORD *)(v15 + 64) = v23;
      *(_OWORD *)(v15 + 16) = v25;
      *(_OWORD *)(v15 + 32) = v24;
      long long v27 = *(_OWORD *)(v16 + 96);
      long long v26 = *(_OWORD *)(v16 + 112);
      long long v28 = *(_OWORD *)(v16 + 80);
      *(void *)(v15 + 127) = *(void *)(v16 + 127);
      *(_OWORD *)(v15 + 96) = v27;
      *(_OWORD *)(v15 + 112) = v26;
      *(_OWORD *)(v15 + 80) = v28;
    }
  }
  else if (v18)
  {
    *(void *)uint64_t v15 = *(void *)v16;
    *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
    *(void *)(v15 + 16) = *(void *)(v16 + 16);
    *(void *)(v15 + 24) = *(void *)(v16 + 24);
    *(unsigned char *)(v15 + 32) = *(unsigned char *)(v16 + 32);
    *(void *)(v15 + 40) = *(void *)(v16 + 40);
    uint64_t v21 = *(void *)(v16 + 48);
    *(unsigned char *)(v15 + 56) = *(unsigned char *)(v16 + 56);
    *(void *)(v15 + 48) = v21;
    *(unsigned char *)(v15 + 57) = *(unsigned char *)(v16 + 57);
    *(void *)(v15 + 64) = *(void *)(v16 + 64);
    uint64_t v22 = *(void *)(v16 + 72);
    *(unsigned char *)(v15 + 80) = *(unsigned char *)(v16 + 80);
    *(void *)(v15 + 72) = v22;
    *(void *)(v15 + 88) = *(void *)(v16 + 88);
    *(void *)(v15 + 96) = *(void *)(v16 + 96);
    *(void *)(v15 + 104) = *(void *)(v16 + 104);
    *(unsigned char *)(v15 + 112) = *(unsigned char *)(v16 + 112);
    *(void *)(v15 + 120) = *(void *)(v16 + 120);
    *(unsigned char *)(v15 + 128) = *(unsigned char *)(v16 + 128);
    *(unsigned char *)(v15 + 129) = *(unsigned char *)(v16 + 129);
    *(unsigned char *)(v15 + 130) = *(unsigned char *)(v16 + 130);
    *(unsigned char *)(v15 + 131) = *(unsigned char *)(v16 + 131);
    *(unsigned char *)(v15 + 132) = *(unsigned char *)(v16 + 132);
    *(unsigned char *)(v15 + 133) = *(unsigned char *)(v16 + 133);
    *(unsigned char *)(v15 + 134) = *(unsigned char *)(v16 + 134);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    long long v29 = *(_OWORD *)(v16 + 16);
    long long v30 = *(_OWORD *)(v16 + 32);
    long long v31 = *(_OWORD *)(v16 + 64);
    *(_OWORD *)(v15 + 48) = *(_OWORD *)(v16 + 48);
    *(_OWORD *)(v15 + 64) = v31;
    *(_OWORD *)(v15 + 16) = v29;
    *(_OWORD *)(v15 + 32) = v30;
    long long v32 = *(_OWORD *)(v16 + 80);
    long long v33 = *(_OWORD *)(v16 + 96);
    long long v34 = *(_OWORD *)(v16 + 112);
    *(void *)(v15 + 127) = *(void *)(v16 + 127);
    *(_OWORD *)(v15 + 96) = v33;
    *(_OWORD *)(v15 + 112) = v34;
    *(_OWORD *)(v15 + 80) = v32;
  }
  uint64_t v35 = a3[8];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (void *)(a2 + v35);
  *uint64_t v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v38 = a3[9];
  uint64_t v39 = a1 + v38;
  uint64_t v40 = (long long *)(a2 + v38);
  uint64_t v41 = *(void *)(a1 + v38 + 16);
  uint64_t v42 = *(void *)(a2 + v38 + 16);
  if (v41 == 1)
  {
    if (v42 == 1)
    {
      long long v43 = *v40;
      *(void *)(v39 + 16) = *((void *)v40 + 2);
      *(_OWORD *)uint64_t v39 = v43;
    }
    else
    {
      *(unsigned char *)uint64_t v39 = *(unsigned char *)v40;
      *(void *)(v39 + 8) = *((void *)v40 + 1);
      *(void *)(v39 + 16) = *((void *)v40 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v42 == 1)
  {
    sub_1DE05D370(v39);
    uint64_t v44 = *((void *)v40 + 2);
    *(_OWORD *)uint64_t v39 = *v40;
    *(void *)(v39 + 16) = v44;
  }
  else
  {
    *(unsigned char *)uint64_t v39 = *(unsigned char *)v40;
    *(void *)(v39 + 8) = *((void *)v40 + 1);
    *(void *)(v39 + 16) = *((void *)v40 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v45 = a3[11];
  uint64_t v46 = (void *)(a1 + v45);
  uint64_t v47 = (void *)(a2 + v45);
  *uint64_t v46 = *(void *)(a2 + v45);
  v46[1] = *(void *)(a2 + v45 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v46[2] = v47[2];
  v46[3] = v47[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v46[4] = v47[4];
  v46[5] = v47[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v48 = a3[12];
  uint64_t v49 = a1 + v48;
  uint64_t v50 = a2 + v48;
  *(unsigned char *)uint64_t v49 = *(unsigned char *)(a2 + v48);
  *(void *)(v49 + 8) = *(void *)(a2 + v48 + 8);
  *(void *)(v49 + 16) = *(void *)(a2 + v48 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v49 + 24) = *(unsigned char *)(v50 + 24);
  *(unsigned char *)(v49 + 25) = *(unsigned char *)(v50 + 25);
  *(void *)(v49 + 32) = *(void *)(v50 + 32);
  *(void *)(v49 + 40) = *(void *)(v50 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v49 + 48) = *(unsigned char *)(v50 + 48);
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  uint64_t v51 = a3[14];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  *(void *)uint64_t v52 = *(void *)(a2 + v51);
  *(void *)(v52 + 8) = *(void *)(a2 + v51 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v52 + 16) = *(unsigned char *)(v53 + 16);
  return a1;
}

uint64_t sub_1DE0AE434(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for JourneyMessageExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(_WORD *)(v13 + 16) = *(_WORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  uint64_t v15 = a1 + v12;
  uint64_t v16 = a2 + v12;
  long long v17 = *(_OWORD *)(v16 + 48);
  *(_OWORD *)(v15 + 32) = *(_OWORD *)(v16 + 32);
  *(_OWORD *)(v15 + 48) = v17;
  long long v18 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v18;
  *(void *)(v15 + 127) = *(void *)(v16 + 127);
  long long v19 = *(_OWORD *)(v16 + 112);
  *(_OWORD *)(v15 + 96) = *(_OWORD *)(v16 + 96);
  *(_OWORD *)(v15 + 112) = v19;
  long long v20 = *(_OWORD *)(v16 + 80);
  *(_OWORD *)(v15 + 64) = *(_OWORD *)(v16 + 64);
  *(_OWORD *)(v15 + 80) = v20;
  uint64_t v21 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(void *)(v22 + 16) = *(void *)(v23 + 16);
  uint64_t v24 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  long long v25 = (_OWORD *)(a1 + v24);
  long long v26 = (_OWORD *)(a2 + v24);
  long long v27 = v26[1];
  *long long v25 = *v26;
  v25[1] = v27;
  v25[2] = v26[2];
  uint64_t v28 = a3[12];
  uint64_t v29 = a3[13];
  uint64_t v30 = a1 + v28;
  uint64_t v31 = a2 + v28;
  long long v32 = *(_OWORD *)(v31 + 16);
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  *(_OWORD *)(v30 + 16) = v32;
  *(_OWORD *)(v30 + 32) = *(_OWORD *)(v31 + 32);
  *(unsigned char *)(v30 + 48) = *(unsigned char *)(v31 + 48);
  *(unsigned char *)(a1 + v29) = *(unsigned char *)(a2 + v29);
  uint64_t v33 = a3[14];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
  *(unsigned char *)(v34 + 16) = *(unsigned char *)(v35 + 16);
  return a1;
}

uint64_t assignWithTake for JourneyMessageExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)(a2 + v11 + 8);
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(void *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  *(_WORD *)(v12 + 16) = *(_WORD *)(v13 + 16);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  if (*(void *)(a1 + v15 + 24))
  {
    uint64_t v18 = *(void *)(v17 + 24);
    if (v18)
    {
      *(unsigned char *)uint64_t v16 = *(unsigned char *)v17;
      *(_DWORD *)(v16 + 4) = *(_DWORD *)(v17 + 4);
      *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
      *(void *)(v16 + 16) = *(void *)(v17 + 16);
      *(void *)(v16 + 24) = v18;
      swift_bridgeObjectRelease();
      *(unsigned char *)(v16 + 32) = *(unsigned char *)(v17 + 32);
      uint64_t v19 = *(void *)(v17 + 48);
      *(void *)(v16 + 40) = *(void *)(v17 + 40);
      *(void *)(v16 + 48) = v19;
      *(unsigned char *)(v16 + 56) = *(unsigned char *)(v17 + 56);
      *(unsigned char *)(v16 + 57) = *(unsigned char *)(v17 + 57);
      *(void *)(v16 + 64) = *(void *)(v17 + 64);
      swift_bridgeObjectRelease();
      *(void *)(v16 + 72) = *(void *)(v17 + 72);
      *(unsigned char *)(v16 + 80) = *(unsigned char *)(v17 + 80);
      *(_OWORD *)(v16 + 88) = *(_OWORD *)(v17 + 88);
      *(void *)(v16 + 104) = *(void *)(v17 + 104);
      swift_bridgeObjectRelease();
      *(unsigned char *)(v16 + 112) = *(unsigned char *)(v17 + 112);
      *(void *)(v16 + 120) = *(void *)(v17 + 120);
      swift_bridgeObjectRelease();
      *(unsigned char *)(v16 + 128) = *(unsigned char *)(v17 + 128);
      *(unsigned char *)(v16 + 129) = *(unsigned char *)(v17 + 129);
      *(unsigned char *)(v16 + 130) = *(unsigned char *)(v17 + 130);
      *(unsigned char *)(v16 + 131) = *(unsigned char *)(v17 + 131);
      *(unsigned char *)(v16 + 132) = *(unsigned char *)(v17 + 132);
      *(unsigned char *)(v16 + 133) = *(unsigned char *)(v17 + 133);
      *(unsigned char *)(v16 + 134) = *(unsigned char *)(v17 + 134);
      goto LABEL_6;
    }
    sub_1DE0AE434(v16);
  }
  long long v20 = *(_OWORD *)(v17 + 112);
  *(_OWORD *)(v16 + 96) = *(_OWORD *)(v17 + 96);
  *(_OWORD *)(v16 + 112) = v20;
  *(void *)(v16 + 127) = *(void *)(v17 + 127);
  long long v21 = *(_OWORD *)(v17 + 48);
  *(_OWORD *)(v16 + 32) = *(_OWORD *)(v17 + 32);
  *(_OWORD *)(v16 + 48) = v21;
  long long v22 = *(_OWORD *)(v17 + 80);
  *(_OWORD *)(v16 + 64) = *(_OWORD *)(v17 + 64);
  *(_OWORD *)(v16 + 80) = v22;
  long long v23 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v23;
LABEL_6:
  uint64_t v24 = a3[8];
  long long v25 = (void *)(a1 + v24);
  long long v26 = (uint64_t *)(a2 + v24);
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  *long long v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = a3[9];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  if (*(void *)(a1 + v29 + 16) != 1)
  {
    uint64_t v32 = *(void *)(v31 + 16);
    if (v32 != 1)
    {
      *(unsigned char *)uint64_t v30 = *(unsigned char *)v31;
      *(void *)(v30 + 8) = *(void *)(v31 + 8);
      *(void *)(v30 + 16) = v32;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1DE05D370(v30);
  }
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  *(void *)(v30 + 16) = *(void *)(v31 + 16);
LABEL_11:
  uint64_t v33 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  uint64_t v36 = *(void *)(a2 + v33);
  uint64_t v37 = *(void *)(a2 + v33 + 8);
  *uint64_t v34 = v36;
  v34[1] = v37;
  swift_bridgeObjectRelease();
  uint64_t v38 = v35[3];
  v34[2] = v35[2];
  v34[3] = v38;
  swift_bridgeObjectRelease();
  uint64_t v39 = v35[5];
  v34[4] = v35[4];
  v34[5] = v39;
  swift_bridgeObjectRelease();
  uint64_t v40 = a3[12];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  *(unsigned char *)uint64_t v41 = *(unsigned char *)(a2 + v40);
  uint64_t v43 = *(void *)(a2 + v40 + 16);
  *(void *)(v41 + 8) = *(void *)(a2 + v40 + 8);
  *(void *)(v41 + 16) = v43;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v41 + 24) = *(unsigned char *)(v42 + 24);
  *(unsigned char *)(v41 + 25) = *(unsigned char *)(v42 + 25);
  uint64_t v44 = *(void *)(v42 + 40);
  *(void *)(v41 + 32) = *(void *)(v42 + 32);
  *(void *)(v41 + 40) = v44;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v41 + 48) = *(unsigned char *)(v42 + 48);
  uint64_t v45 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  uint64_t v48 = *(void *)(v47 + 8);
  *(void *)uint64_t v46 = *(void *)v47;
  *(void *)(v46 + 8) = v48;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v46 + 16) = *(unsigned char *)(v47 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for JourneyMessageExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE0AE964);
}

uint64_t sub_1DE0AE964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DE47F330();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1DE47F350();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for JourneyMessageExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE0AEA90);
}

uint64_t sub_1DE0AEA90(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1DE47F330();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_1DE47F350();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_1DE0AEBA4()
{
  uint64_t result = sub_1DE47F330();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1DE47F350();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for JourneyMessageExposureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE0AED90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JourneyMessageExposureEvent.Model.CodingKeys()
{
  return &type metadata for JourneyMessageExposureEvent.Model.CodingKeys;
}

unint64_t sub_1DE0AEDCC()
{
  unint64_t result = qword_1EABA2228;
  if (!qword_1EABA2228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2228);
  }
  return result;
}

unint64_t sub_1DE0AEE24()
{
  unint64_t result = qword_1EABA2230;
  if (!qword_1EABA2230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2230);
  }
  return result;
}

unint64_t sub_1DE0AEE7C()
{
  unint64_t result = qword_1EABA2238;
  if (!qword_1EABA2238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2238);
  }
  return result;
}

uint64_t sub_1DE0AEED0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x61746144676174 && a2 == 0xE700000000000000 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7453676F6C616964 && a2 == 0xEF61746144656C79 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6E656D6563616C70 && a2 == 0xED00006174614474 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001DE4BDDA0 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000001DE4BE930 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6573616863727570 && a2 == 0xEC00000061746144)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v6 = sub_1DE480660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

uint64_t sub_1DE0AF3C4()
{
  unint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC13NewsAnalytics15SessionObserver_cloudContext];
  id v2 = objc_msgSend(objc_msgSend(v1, sel_configurationManager), sel_configuration);
  uint64_t result = swift_unknownObjectRelease();
  if (v2)
  {
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v0;
    *(void *)(v4 + 24) = v2;
    uint64_t v5 = v0;
    swift_unknownObjectRetain();
    sub_1DE47ED10();
    swift_unknownObjectRelease();
    swift_release();
    objc_msgSend(objc_msgSend(v1, sel_configurationManager), sel_addObserver_, v5);
    return swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DE0AF4F4(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1DE0AF9B4();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE0AF6D0(a3);
  sub_1DE07E338();
  uint64_t v9 = sub_1DE47ECB0();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1DE481D50;
  (*(void (**)(unint64_t, void, uint64_t))(v10 + 104))(v12 + v11, *MEMORY[0x1E4F4AA10], v9);
  sub_1DE0AFA10();
  sub_1DE47EF20();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1DE0AF6D0(void *a1)
{
  if (objc_msgSend(a1, sel_respondsToSelector_, sel_engagementCohortsExpField))
  {
    id v2 = objc_msgSend(a1, sel_engagementCohortsExpField);
    if (v2)
    {
      int v3 = v2;
      sub_1DE47FE90();
    }
  }
  if (objc_msgSend(a1, sel_respondsToSelector_, sel_conversionCohortsExpField))
  {
    id v4 = objc_msgSend(a1, sel_conversionCohortsExpField);
    if (v4)
    {
      uint64_t v5 = v4;
      sub_1DE47FE90();
    }
  }
  sub_1DE0AFA10();
  return sub_1DE47EB30();
}

id SessionObserver.configurationManagerScienceExperimentFieldsDidChange(_:)(void *a1)
{
  id result = objc_msgSend(a1, sel_configuration);
  if (result)
  {
    id v3 = result;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v1;
    *(void *)(v4 + 24) = v3;
    id v5 = v1;
    swift_unknownObjectRetain();
    sub_1DE47ED10();
    swift_unknownObjectRelease();
    return (id)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DE0AF8BC(uint64_t a1)
{
  return sub_1DE0AF4F4(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_1DE0AF9B4()
{
  if (!qword_1EBEC8620)
  {
    sub_1DE0AFA10();
    unint64_t v0 = sub_1DE47EB40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBEC8620);
    }
  }
}

unint64_t sub_1DE0AFA10()
{
  unint64_t result = qword_1EBEC85B8;
  if (!qword_1EBEC85B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC85B8);
  }
  return result;
}

uint64_t sub_1DE0AFA68(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4A9C8], qword_1EABA22A0, MEMORY[0x1E4F4A9C0]);
}

uint64_t static MediaViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA09F0, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EABA22A0, a1);
}

uint64_t static MediaViewEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_1DE0AFAD0(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4AAB0], qword_1EABA22B8, MEMORY[0x1E4F4AAA0]);
}

uint64_t static MediaViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA09F8, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EABA22B8, a1);
}

uint64_t sub_1DE0AFB30()
{
  uint64_t v0 = sub_1DE47F020();
  __swift_allocate_value_buffer(v0, qword_1EABA22D0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EABA22D0);
  return sub_1DE47F010();
}

uint64_t static MediaViewEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0A00, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA22D0, a1);
}

uint64_t MediaViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084((uint64_t (*)(void))sub_1DE04D618, a1);
}

uint64_t MediaViewEvent.eventData.setter(uint64_t a1)
{
  sub_1DE04D618();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*MediaViewEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t MediaViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE0B1734(type metadata accessor for MediaViewEvent, (uint64_t (*)(void))sub_1DE04D7B8, a1);
}

uint64_t type metadata accessor for MediaViewEvent(uint64_t a1)
{
  return sub_1DE04E1D0(a1, qword_1EBEC2B68);
}

uint64_t MediaViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 20);
  sub_1DE04D7B8();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaViewEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t MediaViewEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 24);
  sub_1DE0B0F48(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaViewEvent.articleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 24);
  sub_1DE0B0F48(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaViewEvent.articleData.modify())()
{
  return nullsub_1;
}

uint64_t MediaViewEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 28);
  sub_1DE0B0F48(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaViewEvent.channelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 28);
  sub_1DE0B0F48(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaViewEvent.channelData.modify())()
{
  return nullsub_1;
}

uint64_t MediaViewEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 32);
  sub_1DE0B0F48(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaViewEvent.groupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 32);
  sub_1DE0B0F48(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaViewEvent.groupData.modify())()
{
  return nullsub_1;
}

uint64_t MediaViewEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 36);
  sub_1DE0B0F48(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaViewEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 36);
  sub_1DE0B0F48(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaViewEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t MediaViewEvent.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 40);
  sub_1DE0B0F48(0, &qword_1EBEC1FF8, (void (*)(void))sub_1DE073158, (void (*)(void))sub_1DE0731AC);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaViewEvent.mediaData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 40);
  sub_1DE0B0F48(0, &qword_1EBEC1FF8, (void (*)(void))sub_1DE073158, (void (*)(void))sub_1DE0731AC);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaViewEvent.mediaData.modify())()
{
  return nullsub_1;
}

uint64_t MediaViewEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 44);
  sub_1DE0B0F48(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaViewEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 44);
  sub_1DE0B0F48(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaViewEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t MediaViewEvent.anfComponentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 48);
  sub_1DE0B0F48(0, &qword_1EBEC1ED0, (void (*)(void))sub_1DE0737A0, (void (*)(void))sub_1DE0737F4);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaViewEvent.anfComponentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 48);
  sub_1DE0B0F48(0, &qword_1EBEC1ED0, (void (*)(void))sub_1DE0737A0, (void (*)(void))sub_1DE0737F4);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaViewEvent.anfComponentData.modify())()
{
  return nullsub_1;
}

uint64_t MediaViewEvent.galleryData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 52);
  sub_1DE0B0F48(0, &qword_1EBEC1E28, (void (*)(void))sub_1DE0B09A8, (void (*)(void))sub_1DE0B09FC);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE0B09A8()
{
  unint64_t result = qword_1EBEC2420;
  if (!qword_1EBEC2420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC2420);
  }
  return result;
}

unint64_t sub_1DE0B09FC()
{
  unint64_t result = qword_1EBEC2418;
  if (!qword_1EBEC2418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC2418);
  }
  return result;
}

uint64_t MediaViewEvent.galleryData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 52);
  sub_1DE0B0F48(0, &qword_1EBEC1E28, (void (*)(void))sub_1DE0B09A8, (void (*)(void))sub_1DE0B09FC);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaViewEvent.galleryData.modify())()
{
  return nullsub_1;
}

uint64_t MediaViewEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 56);
  sub_1DE0B0F48(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaViewEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 56);
  sub_1DE0B0F48(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaViewEvent.userBundleSubscriptionContextData.modify())()
{
  return nullsub_1;
}

uint64_t MediaViewEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 60);
  sub_1DE0B0F48(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaViewEvent.issueData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 60);
  sub_1DE0B0F48(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaViewEvent.issueData.modify())()
{
  return nullsub_1;
}

uint64_t MediaViewEvent.issueViewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 64);
  sub_1DE0B0F48(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_1DE0B0F48(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_1DE47ECA0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t MediaViewEvent.issueViewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 64);
  sub_1DE0B0F48(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaViewEvent.issueViewData.modify())()
{
  return nullsub_1;
}

uint64_t MediaViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for MediaViewEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_1DE0B0F48(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_1DE0B0F48(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + v4[8];
  uint64_t v12 = *MEMORY[0x1E4F4A9F8];
  sub_1DE0B0F48(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v11, v12, v13);
  uint64_t v14 = a1 + v4[9];
  sub_1DE0B0F48(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v12, v15);
  uint64_t v16 = a1 + v4[10];
  sub_1DE0B0F48(0, &qword_1EBEC1FF8, (void (*)(void))sub_1DE073158, (void (*)(void))sub_1DE0731AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v2, v17);
  uint64_t v18 = a1 + v4[11];
  sub_1DE0B0F48(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v2, v19);
  uint64_t v20 = a1 + v4[12];
  sub_1DE0B0F48(0, &qword_1EBEC1ED0, (void (*)(void))sub_1DE0737A0, (void (*)(void))sub_1DE0737F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v12, v21);
  uint64_t v22 = a1 + v4[13];
  sub_1DE0B0F48(0, &qword_1EBEC1E28, (void (*)(void))sub_1DE0B09A8, (void (*)(void))sub_1DE0B09FC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v22, v12, v23);
  uint64_t v24 = a1 + v4[14];
  sub_1DE0B0F48(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v24, v2, v25);
  uint64_t v26 = a1 + v4[15];
  sub_1DE0B0F48(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(v26, v12, v27);
  uint64_t v28 = a1 + v4[16];
  sub_1DE0B0F48(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104);

  return v30(v28, v12, v29);
}

uint64_t MediaViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084(MEMORY[0x1E4F4AB70], a1);
}

uint64_t MediaViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE0B1734(type metadata accessor for MediaViewEvent.Model, MEMORY[0x1E4F4AB90], a1);
}

uint64_t sub_1DE0B1734@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for MediaViewEvent.Model(uint64_t a1)
{
  return sub_1DE04E1D0(a1, qword_1EBEC2AA8);
}

uint64_t MediaViewEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 24);
  long long v4 = *(_OWORD *)(v3 + 80);
  long long v5 = *(_OWORD *)(v3 + 112);
  long long v21 = *(_OWORD *)(v3 + 96);
  v22[0] = v5;
  long long v6 = *(_OWORD *)(v3 + 16);
  long long v7 = *(_OWORD *)(v3 + 48);
  long long v17 = *(_OWORD *)(v3 + 32);
  long long v8 = v17;
  long long v18 = v7;
  long long v9 = *(_OWORD *)(v3 + 48);
  long long v10 = *(_OWORD *)(v3 + 80);
  long long v19 = *(_OWORD *)(v3 + 64);
  long long v11 = v19;
  long long v20 = v10;
  long long v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  long long v13 = v16[0];
  v16[1] = v12;
  long long v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  *(void *)((char *)v22 + 15) = *(void *)(v3 + 127);
  *(void *)(a1 + 127) = *(void *)(v3 + 127);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1DE056184((uint64_t)v16);
}

uint64_t MediaViewEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 28);
  uint64_t v4 = *(void *)(v3 + 8);
  char v5 = *(unsigned char *)(v3 + 16);
  char v6 = *(unsigned char *)(v3 + 17);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 32);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 17) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

void *MediaViewEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for MediaViewEvent.Model(0);
  sub_1DE063B10(v1 + *(int *)(v3 + 32), (uint64_t)v5);
  sub_1DE063B10((uint64_t)v5, a1);
  return sub_1DE0652D8(v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DE063BCC);
}

uint64_t MediaViewEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 36));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;

  return sub_1DE056598(v4, v5, v6);
}

uint64_t MediaViewEvent.Model.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (char *)(v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 40));
  char v4 = *v3;
  uint64_t v6 = *((void *)v3 + 1);
  uint64_t v5 = *((void *)v3 + 2);
  int v7 = *((_DWORD *)v3 + 6);
  LOBYTE(v3) = v3[28];
  *(unsigned char *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 28) = (_BYTE)v3;

  return swift_bridgeObjectRetain();
}

uint64_t MediaViewEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 44));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t MediaViewEvent.Model.anfComponentData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 48));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  uint64_t v10 = v3[6];
  uint64_t v11 = v3[7];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;

  return sub_1DE074CE8(v4, v5);
}

uint64_t MediaViewEvent.Model.galleryData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 52);
  uint64_t v4 = *(void *)(v3 + 16);
  int v5 = *(_DWORD *)(v3 + 24);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(void *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 24) = v5;

  return swift_bridgeObjectRetain();
}

uint64_t MediaViewEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (char *)(v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 56));
  char v4 = *v3;
  uint64_t v5 = *((void *)v3 + 1);
  uint64_t v6 = *((void *)v3 + 2);
  char v7 = v3[24];
  char v8 = v3[25];
  uint64_t v10 = *((void *)v3 + 4);
  uint64_t v9 = *((void *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(unsigned char *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 25) = v8;
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t MediaViewEvent.Model.issueData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 60));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;

  return sub_1DE074E14(v4, v5);
}

uint64_t MediaViewEvent.Model.issueViewData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 64));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

__n128 MediaViewEvent.Model.init(eventData:timedData:articleData:channelData:groupData:feedData:mediaData:viewData:anfComponentData:galleryData:userBundleSubscriptionContextData:issueData:issueViewData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, long long *a6@<X5>, char *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, long long *a10, long long *a11, char *a12, __n128 *a13, uint64_t *a14)
{
  long long v78 = a3[6];
  *(_OWORD *)long long v79 = a3[7];
  *(void *)&v79[15] = *(void *)((char *)a3 + 127);
  long long v74 = a3[2];
  long long v75 = a3[3];
  long long v76 = a3[4];
  long long v77 = a3[5];
  long long v72 = *a3;
  long long v73 = a3[1];
  uint64_t v45 = a4[1];
  uint64_t v46 = *a4;
  char v43 = *((unsigned char *)a4 + 17);
  char v44 = *((unsigned char *)a4 + 16);
  uint64_t v41 = a4[4];
  uint64_t v42 = a4[3];
  sub_1DE063B10(a5, (uint64_t)v80);
  long long v48 = *a6;
  uint64_t v19 = *((void *)a6 + 2);
  char v20 = *a7;
  uint64_t v50 = *((void *)a7 + 2);
  uint64_t v51 = *((void *)a7 + 1);
  int v49 = *((_DWORD *)a7 + 6);
  LOBYTE(a7) = a7[28];
  uint64_t v54 = a8[1];
  uint64_t v55 = *a8;
  char v52 = v20;
  __int16 v53 = *((_WORD *)a8 + 8);
  long long v59 = a10[1];
  long long v60 = *a10;
  long long v58 = a10[2];
  uint64_t v56 = *((void *)a10 + 7);
  uint64_t v57 = *((void *)a10 + 6);
  long long v63 = *a11;
  uint64_t v62 = *((void *)a11 + 2);
  int v61 = *((_DWORD *)a11 + 6);
  char v21 = *a12;
  uint64_t v69 = *((void *)a12 + 2);
  uint64_t v70 = *((void *)a12 + 1);
  char v67 = a12[25];
  char v68 = a12[24];
  uint64_t v65 = *((void *)a12 + 5);
  uint64_t v66 = *((void *)a12 + 4);
  char v64 = a12[48];
  __n128 v71 = *a13;
  unint64_t v23 = a13[1].n128_u64[0];
  unint64_t v22 = a13[1].n128_u64[1];
  uint64_t v24 = *a14;
  uint64_t v25 = a14[1];
  uint64_t v26 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(a9, a1, v26);
  uint64_t v27 = (int *)type metadata accessor for MediaViewEvent.Model(0);
  uint64_t v28 = a9 + v27[5];
  uint64_t v29 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 32))(v28, a2, v29);
  uint64_t v30 = a9 + v27[6];
  *(_OWORD *)(v30 + 96) = v78;
  *(_OWORD *)(v30 + 112) = *(_OWORD *)v79;
  *(void *)(v30 + 127) = *(void *)&v79[15];
  *(_OWORD *)(v30 + 32) = v74;
  *(_OWORD *)(v30 + 48) = v75;
  *(_OWORD *)(v30 + 64) = v76;
  *(_OWORD *)(v30 + 80) = v77;
  *(_OWORD *)uint64_t v30 = v72;
  *(_OWORD *)(v30 + 16) = v73;
  uint64_t v31 = a9 + v27[7];
  *(void *)uint64_t v31 = v46;
  *(void *)(v31 + 8) = v45;
  *(unsigned char *)(v31 + 16) = v44;
  *(unsigned char *)(v31 + 17) = v43;
  *(void *)(v31 + 24) = v42;
  *(void *)(v31 + 32) = v41;
  sub_1DE063B10((uint64_t)v80, a9 + v27[8]);
  uint64_t v32 = a9 + v27[9];
  *(_OWORD *)uint64_t v32 = v48;
  *(void *)(v32 + 16) = v19;
  uint64_t v33 = a9 + v27[10];
  *(unsigned char *)uint64_t v33 = v52;
  *(void *)(v33 + 8) = v51;
  *(void *)(v33 + 16) = v50;
  *(_DWORD *)(v33 + 24) = v49;
  *(unsigned char *)(v33 + 28) = (_BYTE)a7;
  uint64_t v34 = a9 + v27[11];
  *(void *)uint64_t v34 = v55;
  *(void *)(v34 + 8) = v54;
  *(_WORD *)(v34 + 16) = v53;
  uint64_t v35 = a9 + v27[12];
  *(_OWORD *)uint64_t v35 = v60;
  *(_OWORD *)(v35 + 16) = v59;
  *(_OWORD *)(v35 + 32) = v58;
  *(void *)(v35 + 48) = v57;
  *(void *)(v35 + 56) = v56;
  uint64_t v36 = a9 + v27[13];
  *(_OWORD *)uint64_t v36 = v63;
  *(void *)(v36 + 16) = v62;
  *(_DWORD *)(v36 + 24) = v61;
  uint64_t v37 = a9 + v27[14];
  *(unsigned char *)uint64_t v37 = v21;
  *(void *)(v37 + 8) = v70;
  *(void *)(v37 + 16) = v69;
  *(unsigned char *)(v37 + 24) = v68;
  *(unsigned char *)(v37 + 25) = v67;
  *(void *)(v37 + 32) = v66;
  *(void *)(v37 + 40) = v65;
  *(unsigned char *)(v37 + 48) = v64;
  uint64_t v38 = (__n128 *)(a9 + v27[15]);
  __n128 result = v71;
  *uint64_t v38 = v71;
  v38[1].n128_u64[0] = v23;
  v38[1].n128_u64[1] = v22;
  uint64_t v40 = (void *)(a9 + v27[16]);
  *uint64_t v40 = v24;
  v40[1] = v25;
  return result;
}

uint64_t sub_1DE0B1F84(char a1)
{
  uint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x74614464656D6974;
      break;
    case 2:
      uint64_t result = 0x44656C6369747261;
      break;
    case 3:
      uint64_t result = 0x446C656E6E616863;
      break;
    case 4:
      uint64_t result = 0x74614470756F7267;
      break;
    case 5:
      unsigned int v3 = 1684366694;
      goto LABEL_9;
    case 6:
      uint64_t result = 0x746144616964656DLL;
      break;
    case 7:
      unsigned int v3 = 2003134838;
LABEL_9:
      uint64_t result = v3 | 0x6174614400000000;
      break;
    case 8:
      uint64_t result = 0xD000000000000010;
      break;
    case 9:
      uint64_t result = 0x447972656C6C6167;
      break;
    case 10:
      uint64_t result = 0xD000000000000021;
      break;
    case 11:
      uint64_t result = 0x7461446575737369;
      break;
    case 12:
      uint64_t result = 0x6569566575737369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE0B2118()
{
  return sub_1DE0B1F84(*v0);
}

uint64_t sub_1DE0B2120@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE0B96A8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DE0B2148(unsigned char *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_1DE0B2154(uint64_t a1)
{
  unint64_t v2 = sub_1DE0B27B4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE0B2190(uint64_t a1)
{
  unint64_t v2 = sub_1DE0B27B4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t MediaViewEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1DE0B34CC(0, &qword_1EABA22E8, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v46 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0B27B4();
  sub_1DE480790();
  LOBYTE(v51[0]) = 0;
  sub_1DE47F330();
  sub_1DE04D884(&qword_1EBEC2030, MEMORY[0x1E4F4AB70]);
  sub_1DE4805C0();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for MediaViewEvent.Model(0);
    char v60 = 1;
    sub_1DE47F350();
    sub_1DE04D884(&qword_1EBEC2040, MEMORY[0x1E4F4AB90]);
    sub_1DE4805C0();
    uint64_t v11 = v3 + v10[6];
    long long v12 = *(_OWORD *)(v11 + 112);
    v51[6] = *(_OWORD *)(v11 + 96);
    *(_OWORD *)char v52 = v12;
    *(void *)&v52[15] = *(void *)(v11 + 127);
    long long v13 = *(_OWORD *)(v11 + 48);
    v51[2] = *(_OWORD *)(v11 + 32);
    v51[3] = v13;
    long long v14 = *(_OWORD *)(v11 + 80);
    v51[4] = *(_OWORD *)(v11 + 64);
    v51[5] = v14;
    long long v15 = *(_OWORD *)(v11 + 16);
    v51[0] = *(_OWORD *)v11;
    v51[1] = v15;
    LOBYTE(v48[0]) = 2;
    sub_1DE053EBC();
    sub_1DE4805C0();
    uint64_t v16 = (uint64_t *)(v3 + v10[7]);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    char v19 = *((unsigned char *)v16 + 16);
    char v20 = *((unsigned char *)v16 + 17);
    uint64_t v22 = v16[3];
    uint64_t v21 = v16[4];
    uint64_t v54 = v17;
    uint64_t v55 = v18;
    char v56 = v19;
    char v57 = v20;
    uint64_t v58 = v22;
    uint64_t v59 = v21;
    char v53 = 3;
    sub_1DE0552E4();
    sub_1DE4805C0();
    sub_1DE063B10(v3 + v10[8], (uint64_t)v51);
    sub_1DE063B10((uint64_t)v51, (uint64_t)v48);
    char v47 = 4;
    sub_1DE0629F4();
    sub_1DE480550();
    uint64_t v23 = v3 + v10[9];
    uint64_t v24 = *(void *)(v23 + 16);
    v48[0] = *(_OWORD *)v23;
    *(void *)&v48[1] = v24;
    char v47 = 5;
    sub_1DE055800();
    sub_1DE480550();
    uint64_t v25 = (char *)(v3 + v10[10]);
    char v26 = *v25;
    uint64_t v27 = *((void *)v25 + 1);
    uint64_t v28 = *((void *)v25 + 2);
    int v29 = *((_DWORD *)v25 + 6);
    LOBYTE(v25) = v25[28];
    LOBYTE(v48[0]) = v26;
    *((void *)&v48[0] + 1) = v27;
    *(void *)&v48[1] = v28;
    DWORD2(v48[1]) = v29;
    BYTE12(v48[1]) = (_BYTE)v25;
    char v47 = 6;
    sub_1DE0731AC();
    sub_1DE4805C0();
    uint64_t v30 = (uint64_t *)(v3 + v10[11]);
    uint64_t v31 = *v30;
    uint64_t v32 = v30[1];
    LOWORD(v30) = *((_WORD *)v30 + 8);
    *(void *)&v48[0] = v31;
    *((void *)&v48[0] + 1) = v32;
    LOWORD(v48[1]) = (_WORD)v30;
    char v47 = 7;
    sub_1DE05410C();
    sub_1DE4805C0();
    uint64_t v33 = (_OWORD *)(v3 + v10[12]);
    long long v34 = v33[1];
    v48[0] = *v33;
    v48[1] = v34;
    long long v35 = v33[3];
    long long v49 = v33[2];
    long long v50 = v35;
    char v47 = 8;
    sub_1DE0737F4();
    sub_1DE480550();
    uint64_t v36 = v3 + v10[13];
    uint64_t v37 = *(void *)(v36 + 16);
    int v38 = *(_DWORD *)(v36 + 24);
    v48[0] = *(_OWORD *)v36;
    *(void *)&v48[1] = v37;
    DWORD2(v48[1]) = v38;
    char v47 = 9;
    sub_1DE0B09FC();
    sub_1DE480550();
    uint64_t v39 = v3 + v10[14];
    char v40 = *(unsigned char *)(v39 + 24);
    char v41 = *(unsigned char *)(v39 + 25);
    char v42 = *(unsigned char *)(v39 + 48);
    LOBYTE(v48[0]) = *(unsigned char *)v39;
    *(_OWORD *)((char *)v48 + 8) = *(_OWORD *)(v39 + 8);
    BYTE8(v48[1]) = v40;
    BYTE9(v48[1]) = v41;
    long long v49 = *(_OWORD *)(v39 + 32);
    LOBYTE(v50) = v42;
    char v47 = 10;
    sub_1DE04DD5C();
    sub_1DE4805C0();
    char v43 = (_OWORD *)(v3 + v10[15]);
    long long v44 = v43[1];
    v48[0] = *v43;
    v48[1] = v44;
    char v47 = 11;
    sub_1DE054A4C();
    sub_1DE480550();
    v48[0] = *(_OWORD *)(v3 + v10[16]);
    char v47 = 12;
    sub_1DE054C9C();
    sub_1DE480550();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DE0B27B4()
{
  unint64_t result = qword_1EABA22F0;
  if (!qword_1EABA22F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA22F0);
  }
  return result;
}

uint64_t MediaViewEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v72 = a2;
  uint64_t v3 = sub_1DE47F350();
  uint64_t v69 = *(void *)(v3 - 8);
  uint64_t v70 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DE47F330();
  uint64_t v71 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE0B34CC(0, &qword_1EABA22F8, MEMORY[0x1E4FBBDC0]);
  uint64_t v73 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  long long v12 = (char *)&v66 - v11;
  v99 = (int *)type metadata accessor for MediaViewEvent.Model(0);
  MEMORY[0x1F4188790](v99);
  long long v77 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  uint64_t v75 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1DE0B27B4();
  long long v74 = v12;
  uint64_t v15 = v76;
  sub_1DE480770();
  uint64_t v68 = v6;
  if (v15)
  {
    uint64_t v76 = v15;
    LODWORD(v72) = 0;
    uint64_t v17 = v77;
    uint64_t result = __swift_destroy_boxed_opaque_existential_1(v75);
    LODWORD(v75) = 0;
    LODWORD(v74) = 0;
    LODWORD(v73) = 0;
    int v19 = 0;
    char v20 = v99;
    if (v72) {
      goto LABEL_12;
    }
LABEL_5:
    if (!v19) {
      goto LABEL_13;
    }
LABEL_6:
    uint64_t result = sub_1DE076824(*(void *)&v17[v20[12]], *(void *)&v17[v20[12] + 8]);
    if (v73) {
      goto LABEL_14;
    }
LABEL_7:
    if (!v74) {
      goto LABEL_15;
    }
    goto LABEL_8;
  }
  uint64_t v16 = v5;
  uint64_t v67 = v10;
  LOBYTE(v91) = 0;
  sub_1DE04D884(&qword_1EBEC2038, MEMORY[0x1E4F4AB70]);
  sub_1DE4804E0();
  char v26 = v77;
  (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v77, v8, v6);
  LOBYTE(v91) = 1;
  sub_1DE04D884((unint64_t *)&unk_1EBEC2048, MEMORY[0x1E4F4AB90]);
  uint64_t v27 = v70;
  sub_1DE4804E0();
  uint64_t v28 = v99;
  (*(void (**)(char *, char *, uint64_t))(v69 + 32))(&v26[v99[5]], v16, v27);
  v82[143] = 2;
  sub_1DE053E68();
  sub_1DE4804E0();
  int v29 = &v26[v28[6]];
  long long v30 = *(_OWORD *)v90;
  *((_OWORD *)v29 + 6) = v89;
  *((_OWORD *)v29 + 7) = v30;
  *(void *)(v29 + 127) = *(void *)&v90[15];
  long long v31 = v86;
  *((_OWORD *)v29 + 2) = v85;
  *((_OWORD *)v29 + 3) = v31;
  long long v32 = v88;
  *((_OWORD *)v29 + 4) = v87;
  *((_OWORD *)v29 + 5) = v32;
  long long v33 = v84;
  *(_OWORD *)int v29 = v83;
  *((_OWORD *)v29 + 1) = v33;
  v82[0] = 3;
  sub_1DE055290();
  sub_1DE4804E0();
  uint64_t v34 = *((void *)&v91 + 1);
  char v35 = v92;
  char v36 = BYTE1(v92);
  uint64_t v37 = *((void *)&v92 + 1);
  uint64_t v38 = v93;
  uint64_t v39 = &v26[v28[7]];
  *(void *)uint64_t v39 = v91;
  *((void *)v39 + 1) = v34;
  v39[16] = v35;
  v39[17] = v36;
  *((void *)v39 + 3) = v37;
  *((void *)v39 + 4) = v38;
  v82[142] = 4;
  sub_1DE0629A0();
  sub_1DE480470();
  sub_1DE063B10((uint64_t)&v91, (uint64_t)v82);
  sub_1DE063B10((uint64_t)v82, (uint64_t)&v26[v28[8]]);
  char v81 = 5;
  sub_1DE0557AC();
  sub_1DE480470();
  uint64_t v40 = *(void *)&v78[1];
  char v41 = &v26[v28[9]];
  *(_OWORD *)char v41 = v78[0];
  *((void *)v41 + 2) = v40;
  char v81 = 6;
  sub_1DE073158();
  sub_1DE4804E0();
  uint64_t v42 = *((void *)&v78[0] + 1);
  uint64_t v43 = *(void *)&v78[1];
  int v44 = DWORD2(v78[1]);
  char v45 = BYTE12(v78[1]);
  uint64_t v46 = &v26[v28[10]];
  *uint64_t v46 = v78[0];
  *((void *)v46 + 1) = v42;
  *((void *)v46 + 2) = v43;
  *((_DWORD *)v46 + 6) = v44;
  v46[28] = v45;
  char v81 = 7;
  sub_1DE0540B8();
  sub_1DE4804E0();
  uint64_t v47 = *((void *)&v78[0] + 1);
  __int16 v48 = v78[1];
  long long v49 = &v26[v28[11]];
  *(void *)long long v49 = *(void *)&v78[0];
  *((void *)v49 + 1) = v47;
  *((_WORD *)v49 + 8) = v48;
  char v81 = 8;
  sub_1DE0737A0();
  sub_1DE480470();
  long long v50 = &v26[v99[12]];
  long long v51 = v78[1];
  *(_OWORD *)long long v50 = v78[0];
  *((_OWORD *)v50 + 1) = v51;
  long long v52 = v80;
  *((_OWORD *)v50 + 2) = v79;
  *((_OWORD *)v50 + 3) = v52;
  char v81 = 9;
  sub_1DE0B09A8();
  sub_1DE480470();
  uint64_t v76 = 0;
  uint64_t v53 = *(void *)&v78[1];
  int v54 = DWORD2(v78[1]);
  uint64_t v55 = &v77[v99[13]];
  *(_OWORD *)uint64_t v55 = v78[0];
  *((void *)v55 + 2) = v53;
  *((_DWORD *)v55 + 6) = v54;
  char v81 = 10;
  sub_1DE04DD08();
  uint64_t v56 = v76;
  sub_1DE4804E0();
  uint64_t v76 = v56;
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v67 + 8))(v74, v73);
    __swift_destroy_boxed_opaque_existential_1(v75);
    LODWORD(v74) = 0;
    LODWORD(v75) = 0;
    LODWORD(v72) = 1;
    int v19 = 1;
    LODWORD(v73) = 1;
    uint64_t v17 = v77;
  }
  else
  {
    char v57 = BYTE8(v78[1]);
    char v58 = BYTE9(v78[1]);
    char v59 = v80;
    char v60 = &v77[v99[14]];
    *char v60 = v78[0];
    *(_OWORD *)(v60 + 8) = *(_OWORD *)((char *)v78 + 8);
    v60[24] = v57;
    v60[25] = v58;
    *((_OWORD *)v60 + 2) = v79;
    v60[48] = v59;
    char v81 = 11;
    sub_1DE0549F8();
    uint64_t v61 = v76;
    sub_1DE480470();
    uint64_t v76 = v61;
    if (v61)
    {
      (*(void (**)(char *, uint64_t))(v67 + 8))(v74, v73);
      __swift_destroy_boxed_opaque_existential_1(v75);
      LODWORD(v75) = 0;
      LODWORD(v72) = 1;
      int v19 = 1;
      LODWORD(v73) = 1;
      LODWORD(v74) = 1;
      uint64_t v17 = v77;
    }
    else
    {
      uint64_t v62 = &v77[v99[15]];
      long long v63 = v78[1];
      *(_OWORD *)uint64_t v62 = v78[0];
      *((_OWORD *)v62 + 1) = v63;
      char v81 = 12;
      sub_1DE054C48();
      uint64_t v64 = v76;
      sub_1DE480470();
      uint64_t v76 = v64;
      if (!v64)
      {
        (*(void (**)(char *, uint64_t))(v67 + 8))(v74, v73);
        uint64_t v65 = (uint64_t)v77;
        *(_OWORD *)&v77[v99[16]] = v78[0];
        sub_1DE0B3530(v65, v72);
        __swift_destroy_boxed_opaque_existential_1(v75);
        return sub_1DE0B3594(v65);
      }
      (*(void (**)(char *, uint64_t))(v67 + 8))(v74, v73);
      __swift_destroy_boxed_opaque_existential_1(v75);
      LODWORD(v72) = 1;
      int v19 = 1;
      LODWORD(v73) = 1;
      LODWORD(v74) = 1;
      LODWORD(v75) = 1;
      uint64_t v17 = v77;
    }
  }
  (*(void (**)(char *, uint64_t))(v71 + 8))(v17, v68);
  char v20 = v99;
  (*(void (**)(char *, uint64_t))(v69 + 8))(&v17[v99[5]], v70);
  uint64_t v21 = &v17[v20[6]];
  long long v22 = *((_OWORD *)v21 + 7);
  long long v97 = *((_OWORD *)v21 + 6);
  v98[0] = v22;
  *(void *)((char *)v98 + 15) = *(void *)(v21 + 127);
  long long v23 = *((_OWORD *)v21 + 3);
  long long v93 = *((_OWORD *)v21 + 2);
  long long v94 = v23;
  long long v24 = *((_OWORD *)v21 + 5);
  long long v95 = *((_OWORD *)v21 + 4);
  long long v96 = v24;
  long long v25 = *((_OWORD *)v21 + 1);
  long long v91 = *(_OWORD *)v21;
  long long v92 = v25;
  sub_1DE057E78((uint64_t)&v91);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DE063B10((uint64_t)&v17[v20[8]], (uint64_t)&v91);
  sub_1DE0652D8(&v91, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DE06533C);
  sub_1DE05FBA8(*(void *)&v17[v20[9]], *(void *)&v17[v20[9] + 8], *(void *)&v17[v20[9] + 16]);
  uint64_t result = swift_bridgeObjectRelease();
  if ((v72 & 1) == 0) {
    goto LABEL_5;
  }
LABEL_12:
  uint64_t result = swift_bridgeObjectRelease();
  if (v19) {
    goto LABEL_6;
  }
LABEL_13:
  if (!v73) {
    goto LABEL_7;
  }
LABEL_14:
  uint64_t result = swift_bridgeObjectRelease();
  if ((v74 & 1) == 0)
  {
LABEL_15:
    if (!v75) {
      return result;
    }
    return sub_1DE0767E0(*(void *)&v17[v20[15]], *(void *)&v17[v20[15] + 8]);
  }
LABEL_8:
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v75 & 1) == 0) {
    return result;
  }
  return sub_1DE0767E0(*(void *)&v17[v20[15]], *(void *)&v17[v20[15] + 8]);
}

void sub_1DE0B34CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE0B27B4();
    unint64_t v7 = a3(a1, &type metadata for MediaViewEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DE0B3530(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MediaViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DE0B3594(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MediaViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DE0B35F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return MediaViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DE0B3608(void *a1)
{
  return MediaViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DE0B3620@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA09F0, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EABA22A0, a1);
}

uint64_t sub_1DE0B3658@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA09F8, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EABA22B8, a1);
}

uint64_t sub_1DE0B3690@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0A00, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA22D0, a1);
}

uint64_t sub_1DE0B36C8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_1DE0B0F48(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_1DE0B0F48(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  uint64_t v13 = *MEMORY[0x1E4F4A9F8];
  sub_1DE0B0F48(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v12, v13, v14);
  uint64_t v15 = a2 + a1[9];
  sub_1DE0B0F48(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v13, v16);
  uint64_t v17 = a2 + a1[10];
  sub_1DE0B0F48(0, &qword_1EBEC1FF8, (void (*)(void))sub_1DE073158, (void (*)(void))sub_1DE0731AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v4, v18);
  uint64_t v19 = a2 + a1[11];
  sub_1DE0B0F48(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v4, v20);
  uint64_t v21 = a2 + a1[12];
  sub_1DE0B0F48(0, &qword_1EBEC1ED0, (void (*)(void))sub_1DE0737A0, (void (*)(void))sub_1DE0737F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v21, v13, v22);
  uint64_t v23 = a2 + a1[13];
  sub_1DE0B0F48(0, &qword_1EBEC1E28, (void (*)(void))sub_1DE0B09A8, (void (*)(void))sub_1DE0B09FC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v23, v13, v24);
  uint64_t v25 = a2 + a1[14];
  sub_1DE0B0F48(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104))(v25, v4, v26);
  uint64_t v27 = a2 + a1[15];
  sub_1DE0B0F48(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104))(v27, v13, v28);
  uint64_t v29 = a2 + a1[16];
  sub_1DE0B0F48(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  long long v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104);

  return v31(v29, v13, v30);
}

uint64_t *initializeBufferWithCopyOfBuffer for MediaViewEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v56 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v56 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DE04D618();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DE04D7B8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_1DE0B0F48(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_1DE0B0F48(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_1DE0B0F48(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_1DE0B0F48(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    sub_1DE0B0F48(0, &qword_1EBEC1FF8, (void (*)(void))sub_1DE073158, (void (*)(void))sub_1DE0731AC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    long long v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    sub_1DE0B0F48(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    uint64_t v37 = (char *)a1 + v36;
    uint64_t v38 = (char *)a2 + v36;
    sub_1DE0B0F48(0, &qword_1EBEC1ED0, (void (*)(void))sub_1DE0737A0, (void (*)(void))sub_1DE0737F4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = a3[13];
    char v41 = (char *)a1 + v40;
    uint64_t v42 = (char *)a2 + v40;
    sub_1DE0B0F48(0, &qword_1EBEC1E28, (void (*)(void))sub_1DE0B09A8, (void (*)(void))sub_1DE0B09FC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    uint64_t v44 = a3[14];
    char v45 = (char *)a1 + v44;
    uint64_t v46 = (char *)a2 + v44;
    sub_1DE0B0F48(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
    uint64_t v48 = a3[15];
    long long v49 = (char *)a1 + v48;
    long long v50 = (char *)a2 + v48;
    sub_1DE0B0F48(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
    uint64_t v52 = a3[16];
    uint64_t v53 = (char *)a1 + v52;
    int v54 = (char *)a2 + v52;
    sub_1DE0B0F48(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
  }
  return a1;
}

uint64_t destroy for MediaViewEvent(uint64_t a1, int *a2)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_1DE0B0F48(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_1DE0B0F48(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_1DE0B0F48(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_1DE0B0F48(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_1DE0B0F48(0, &qword_1EBEC1FF8, (void (*)(void))sub_1DE073158, (void (*)(void))sub_1DE0731AC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_1DE0B0F48(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  sub_1DE0B0F48(0, &qword_1EBEC1ED0, (void (*)(void))sub_1DE0737A0, (void (*)(void))sub_1DE0737F4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[13];
  sub_1DE0B0F48(0, &qword_1EBEC1E28, (void (*)(void))sub_1DE0B09A8, (void (*)(void))sub_1DE0B09FC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = a1 + a2[14];
  sub_1DE0B0F48(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
  uint64_t v25 = a1 + a2[15];
  sub_1DE0B0F48(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
  uint64_t v27 = a1 + a2[16];
  sub_1DE0B0F48(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8);

  return v29(v27, v28);
}

uint64_t initializeWithCopy for MediaViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0B0F48(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0B0F48(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0B0F48(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE0B0F48(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE0B0F48(0, &qword_1EBEC1FF8, (void (*)(void))sub_1DE073158, (void (*)(void))sub_1DE0731AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE0B0F48(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE0B0F48(0, &qword_1EBEC1ED0, (void (*)(void))sub_1DE0737A0, (void (*)(void))sub_1DE0737F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_1DE0B0F48(0, &qword_1EBEC1E28, (void (*)(void))sub_1DE0B09A8, (void (*)(void))sub_1DE0B09FC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_1DE0B0F48(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_1DE0B0F48(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  sub_1DE0B0F48(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
  return a1;
}

uint64_t assignWithCopy for MediaViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0B0F48(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0B0F48(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0B0F48(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE0B0F48(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE0B0F48(0, &qword_1EBEC1FF8, (void (*)(void))sub_1DE073158, (void (*)(void))sub_1DE0731AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE0B0F48(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE0B0F48(0, &qword_1EBEC1ED0, (void (*)(void))sub_1DE0737A0, (void (*)(void))sub_1DE0737F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_1DE0B0F48(0, &qword_1EBEC1E28, (void (*)(void))sub_1DE0B09A8, (void (*)(void))sub_1DE0B09FC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_1DE0B0F48(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_1DE0B0F48(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 24))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  sub_1DE0B0F48(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 24))(v52, v53, v54);
  return a1;
}

uint64_t initializeWithTake for MediaViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0B0F48(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0B0F48(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0B0F48(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE0B0F48(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE0B0F48(0, &qword_1EBEC1FF8, (void (*)(void))sub_1DE073158, (void (*)(void))sub_1DE0731AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE0B0F48(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE0B0F48(0, &qword_1EBEC1ED0, (void (*)(void))sub_1DE0737A0, (void (*)(void))sub_1DE0737F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_1DE0B0F48(0, &qword_1EBEC1E28, (void (*)(void))sub_1DE0B09A8, (void (*)(void))sub_1DE0B09FC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_1DE0B0F48(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_1DE0B0F48(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  sub_1DE0B0F48(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
  return a1;
}

uint64_t assignWithTake for MediaViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0B0F48(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0B0F48(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0B0F48(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE0B0F48(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE0B0F48(0, &qword_1EBEC1FF8, (void (*)(void))sub_1DE073158, (void (*)(void))sub_1DE0731AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE0B0F48(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE0B0F48(0, &qword_1EBEC1ED0, (void (*)(void))sub_1DE0737A0, (void (*)(void))sub_1DE0737F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_1DE0B0F48(0, &qword_1EBEC1E28, (void (*)(void))sub_1DE0B09A8, (void (*)(void))sub_1DE0B09FC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_1DE0B0F48(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_1DE0B0F48(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 40))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  sub_1DE0B0F48(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 40))(v52, v53, v54);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE0B6270);
}

uint64_t sub_1DE0B6270(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_26:
    return v9(v10, a2, v8);
  }
  sub_1DE04D7B8();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_25:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_26;
  }
  sub_1DE0B0F48(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_25;
  }
  sub_1DE0B0F48(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_25;
  }
  sub_1DE0B0F48(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_25;
  }
  sub_1DE0B0F48(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_25;
  }
  sub_1DE0B0F48(0, &qword_1EBEC1FF8, (void (*)(void))sub_1DE073158, (void (*)(void))sub_1DE0731AC);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_25;
  }
  sub_1DE0B0F48(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_25;
  }
  sub_1DE0B0F48(0, &qword_1EBEC1ED0, (void (*)(void))sub_1DE0737A0, (void (*)(void))sub_1DE0737F4);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_25;
  }
  sub_1DE0B0F48(0, &qword_1EBEC1E28, (void (*)(void))sub_1DE0B09A8, (void (*)(void))sub_1DE0B09FC);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a2)
  {
    uint64_t v8 = v21;
    uint64_t v12 = *(void *)(v21 - 8);
    uint64_t v13 = a3[13];
    goto LABEL_25;
  }
  sub_1DE0B0F48(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a2)
  {
    uint64_t v8 = v22;
    uint64_t v12 = *(void *)(v22 - 8);
    uint64_t v13 = a3[14];
    goto LABEL_25;
  }
  sub_1DE0B0F48(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a2)
  {
    uint64_t v8 = v23;
    uint64_t v12 = *(void *)(v23 - 8);
    uint64_t v13 = a3[15];
    goto LABEL_25;
  }
  sub_1DE0B0F48(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48);
  uint64_t v27 = v25;
  uint64_t v28 = a1 + a3[16];

  return v26(v28, a2, v27);
}

uint64_t storeEnumTagSinglePayload for MediaViewEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE0B6930);
}

uint64_t sub_1DE0B6930(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_1DE04D618();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_26:
    return v11(v12, a2, a2, v10);
  }
  sub_1DE04D7B8();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_25:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_26;
  }
  sub_1DE0B0F48(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_25;
  }
  sub_1DE0B0F48(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_25;
  }
  sub_1DE0B0F48(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_25;
  }
  sub_1DE0B0F48(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_25;
  }
  sub_1DE0B0F48(0, &qword_1EBEC1FF8, (void (*)(void))sub_1DE073158, (void (*)(void))sub_1DE0731AC);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_25;
  }
  sub_1DE0B0F48(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_25;
  }
  sub_1DE0B0F48(0, &qword_1EBEC1ED0, (void (*)(void))sub_1DE0737A0, (void (*)(void))sub_1DE0737F4);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_25;
  }
  sub_1DE0B0F48(0, &qword_1EBEC1E28, (void (*)(void))sub_1DE0B09A8, (void (*)(void))sub_1DE0B09FC);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a3)
  {
    uint64_t v10 = v23;
    uint64_t v14 = *(void *)(v23 - 8);
    uint64_t v15 = a4[13];
    goto LABEL_25;
  }
  sub_1DE0B0F48(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  if (*(_DWORD *)(*(void *)(v24 - 8) + 84) == a3)
  {
    uint64_t v10 = v24;
    uint64_t v14 = *(void *)(v24 - 8);
    uint64_t v15 = a4[14];
    goto LABEL_25;
  }
  sub_1DE0B0F48(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  if (*(_DWORD *)(*(void *)(v25 - 8) + 84) == a3)
  {
    uint64_t v10 = v25;
    uint64_t v14 = *(void *)(v25 - 8);
    uint64_t v15 = a4[15];
    goto LABEL_25;
  }
  sub_1DE0B0F48(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56);
  uint64_t v29 = v27;
  uint64_t v30 = a1 + a4[16];

  return v28(v30, a2, a2, v29);
}

void sub_1DE0B6FE8()
{
  sub_1DE04D618();
  if (v0 <= 0x3F)
  {
    sub_1DE04D7B8();
    if (v1 <= 0x3F)
    {
      sub_1DE0B0F48(319, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
      if (v2 <= 0x3F)
      {
        sub_1DE0B0F48(319, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
        if (v3 <= 0x3F)
        {
          sub_1DE0B0F48(319, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
          if (v4 <= 0x3F)
          {
            sub_1DE0B0F48(319, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
            if (v5 <= 0x3F)
            {
              sub_1DE0B0F48(319, &qword_1EBEC1FF8, (void (*)(void))sub_1DE073158, (void (*)(void))sub_1DE0731AC);
              if (v6 <= 0x3F)
              {
                sub_1DE0B0F48(319, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
                if (v7 <= 0x3F)
                {
                  sub_1DE0B0F48(319, &qword_1EBEC1ED0, (void (*)(void))sub_1DE0737A0, (void (*)(void))sub_1DE0737F4);
                  if (v8 <= 0x3F)
                  {
                    sub_1DE0B0F48(319, &qword_1EBEC1E28, (void (*)(void))sub_1DE0B09A8, (void (*)(void))sub_1DE0B09FC);
                    if (v9 <= 0x3F)
                    {
                      sub_1DE0B0F48(319, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
                      if (v10 <= 0x3F)
                      {
                        sub_1DE0B0F48(319, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
                        if (v11 <= 0x3F)
                        {
                          sub_1DE0B0F48(319, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
                          if (v12 <= 0x3F) {
                            swift_initStructMetadata();
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for MediaViewEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v33 = *a2;
    *a1 = *a2;
    a1 = (void *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DE47F330();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    unint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DE47F350();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)a1 + v12;
    uint64_t v15 = (char *)a2 + v12;
    *(void *)uint64_t v14 = *(void *)v15;
    v14[8] = v15[8];
    uint64_t v16 = *((void *)v15 + 3);
    *((void *)v14 + 2) = *((void *)v15 + 2);
    *((void *)v14 + 3) = v16;
    v14[32] = v15[32];
    uint64_t v17 = *((void *)v15 + 6);
    *((void *)v14 + 5) = *((void *)v15 + 5);
    *((void *)v14 + 6) = v17;
    v14[56] = v15[56];
    v14[57] = v15[57];
    uint64_t v18 = *((void *)v15 + 9);
    *((void *)v14 + 8) = *((void *)v15 + 8);
    *((void *)v14 + 9) = v18;
    v14[80] = v15[80];
    *(_OWORD *)(v14 + 88) = *(_OWORD *)(v15 + 88);
    *((void *)v14 + 13) = *((void *)v15 + 13);
    v14[112] = v15[112];
    *((void *)v14 + 15) = *((void *)v15 + 15);
    *((_DWORD *)v14 + 32) = *((_DWORD *)v15 + 32);
    v14[132] = v15[132];
    *(_WORD *)(v14 + 133) = *(_WORD *)(v15 + 133);
    uint64_t v19 = (char *)a1 + v13;
    uint64_t v20 = (char *)a2 + v13;
    uint64_t v21 = *((void *)v20 + 1);
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    *((_WORD *)v19 + 8) = *((_WORD *)v20 + 8);
    uint64_t v22 = *((void *)v20 + 4);
    *((void *)v19 + 3) = *((void *)v20 + 3);
    *((void *)v19 + 4) = v22;
    uint64_t v23 = a3[8];
    uint64_t v24 = (char *)a1 + v23;
    long long v79 = a2;
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = *((void *)v25 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v26)
    {
      *(_WORD *)uint64_t v24 = *(_WORD *)v25;
      *((void *)v24 + 1) = *((void *)v25 + 1);
      *((void *)v24 + 2) = v26;
      *((void *)v24 + 3) = *((void *)v25 + 3);
      uint64_t v27 = *((void *)v25 + 5);
      *((void *)v24 + 4) = *((void *)v25 + 4);
      *((void *)v24 + 5) = v27;
      uint64_t v28 = *((void *)v25 + 7);
      *((void *)v24 + 6) = *((void *)v25 + 6);
      *((void *)v24 + 7) = v28;
      uint64_t v29 = *((void *)v25 + 9);
      *((void *)v24 + 8) = *((void *)v25 + 8);
      *((void *)v24 + 9) = v29;
      v24[80] = v25[80];
      uint64_t v30 = *((void *)v25 + 12);
      *((void *)v24 + 11) = *((void *)v25 + 11);
      *((void *)v24 + 12) = v30;
      *((void *)v24 + 13) = *((void *)v25 + 13);
      v24[112] = v25[112];
      uint64_t v32 = *((void *)v25 + 15);
      uint64_t v31 = *((void *)v25 + 16);
      *((void *)v24 + 15) = v32;
      *((void *)v24 + 16) = v31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v34 = *((_OWORD *)v25 + 7);
      *((_OWORD *)v24 + 6) = *((_OWORD *)v25 + 6);
      *((_OWORD *)v24 + 7) = v34;
      *((void *)v24 + 16) = *((void *)v25 + 16);
      long long v35 = *((_OWORD *)v25 + 3);
      *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
      *((_OWORD *)v24 + 3) = v35;
      long long v36 = *((_OWORD *)v25 + 5);
      *((_OWORD *)v24 + 4) = *((_OWORD *)v25 + 4);
      *((_OWORD *)v24 + 5) = v36;
      long long v37 = *((_OWORD *)v25 + 1);
      *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
      *((_OWORD *)v24 + 1) = v37;
    }
    uint64_t v38 = a3[9];
    uint64_t v39 = (char *)a1 + v38;
    uint64_t v40 = (char *)v79 + v38;
    uint64_t v41 = *((void *)v40 + 2);
    if (v41 == 1)
    {
      *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
      *((void *)v39 + 2) = *((void *)v40 + 2);
    }
    else
    {
      *uint64_t v39 = *v40;
      *((void *)v39 + 1) = *((void *)v40 + 1);
      *((void *)v39 + 2) = v41;
      swift_bridgeObjectRetain();
    }
    uint64_t v42 = a3[10];
    uint64_t v43 = a3[11];
    uint64_t v44 = (char *)a1 + v42;
    uint64_t v45 = (char *)v79 + v42;
    *uint64_t v44 = *v45;
    uint64_t v46 = *((void *)v45 + 2);
    *((void *)v44 + 1) = *((void *)v45 + 1);
    *((void *)v44 + 2) = v46;
    *((_DWORD *)v44 + 6) = *((_DWORD *)v45 + 6);
    v44[28] = v45[28];
    uint64_t v47 = (char *)a1 + v43;
    uint64_t v48 = (char *)v79 + v43;
    uint64_t v49 = *((void *)v48 + 1);
    *(void *)uint64_t v47 = *(void *)v48;
    *((void *)v47 + 1) = v49;
    v47[16] = v48[16];
    v47[17] = v48[17];
    uint64_t v50 = a3[12];
    uint64_t v51 = (void *)((char *)a1 + v50);
    uint64_t v52 = (void *)((char *)v79 + v50);
    uint64_t v53 = *(void *)((char *)v79 + v50 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v53)
    {
      *uint64_t v51 = *v52;
      v51[1] = v53;
      uint64_t v54 = v52[3];
      v51[2] = v52[2];
      v51[3] = v54;
      uint64_t v55 = v52[5];
      v51[4] = v52[4];
      v51[5] = v55;
      uint64_t v56 = v52[6];
      uint64_t v57 = v52[7];
      v51[6] = v56;
      _OWORD v51[7] = v57;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v58 = *((_OWORD *)v52 + 1);
      *(_OWORD *)uint64_t v51 = *(_OWORD *)v52;
      *((_OWORD *)v51 + 1) = v58;
      long long v59 = *((_OWORD *)v52 + 3);
      *((_OWORD *)v51 + 2) = *((_OWORD *)v52 + 2);
      *((_OWORD *)v51 + 3) = v59;
    }
    uint64_t v60 = a3[13];
    uint64_t v61 = a3[14];
    uint64_t v62 = (char *)a1 + v60;
    long long v63 = (char *)v79 + v60;
    *uint64_t v62 = *v63;
    uint64_t v64 = *((void *)v63 + 2);
    *((void *)v62 + 1) = *((void *)v63 + 1);
    *((void *)v62 + 2) = v64;
    *((_DWORD *)v62 + 6) = *((_DWORD *)v63 + 6);
    uint64_t v65 = (char *)a1 + v61;
    uint64_t v66 = (char *)v79 + v61;
    *uint64_t v65 = *v66;
    uint64_t v67 = *((void *)v66 + 2);
    *((void *)v65 + 1) = *((void *)v66 + 1);
    *((void *)v65 + 2) = v67;
    v65[24] = v66[24];
    v65[25] = v66[25];
    uint64_t v68 = *((void *)v66 + 5);
    *((void *)v65 + 4) = *((void *)v66 + 4);
    *((void *)v65 + 5) = v68;
    v65[48] = v66[48];
    uint64_t v69 = a3[15];
    uint64_t v70 = (char *)a1 + v69;
    uint64_t v71 = (char *)v79 + v69;
    uint64_t v72 = *(void *)((char *)v79 + v69 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v72)
    {
      *(void *)uint64_t v70 = *(void *)v71;
      *((void *)v70 + 1) = v72;
      *((_WORD *)v70 + 8) = *((_WORD *)v71 + 8);
      *((void *)v70 + 3) = *((void *)v71 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v73 = *((_OWORD *)v71 + 1);
      *(_OWORD *)uint64_t v70 = *(_OWORD *)v71;
      *((_OWORD *)v70 + 1) = v73;
    }
    uint64_t v74 = a3[16];
    uint64_t v75 = (void *)((char *)a1 + v74);
    uint64_t v76 = (void *)((char *)v79 + v74);
    uint64_t v77 = v76[1];
    *uint64_t v75 = *v76;
    v75[1] = v77;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for MediaViewEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[8] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + a2[9] + 16) != 1) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[12] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[15] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MediaViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  uint64_t v15 = *(void *)(v14 + 24);
  *(void *)(v13 + 16) = *(void *)(v14 + 16);
  *(void *)(v13 + 24) = v15;
  *(unsigned char *)(v13 + 32) = *(unsigned char *)(v14 + 32);
  uint64_t v16 = *(void *)(v14 + 48);
  *(void *)(v13 + 40) = *(void *)(v14 + 40);
  *(void *)(v13 + 48) = v16;
  *(unsigned char *)(v13 + 56) = *(unsigned char *)(v14 + 56);
  *(unsigned char *)(v13 + 57) = *(unsigned char *)(v14 + 57);
  uint64_t v17 = *(void *)(v14 + 72);
  *(void *)(v13 + 64) = *(void *)(v14 + 64);
  *(void *)(v13 + 72) = v17;
  *(unsigned char *)(v13 + 80) = *(unsigned char *)(v14 + 80);
  *(_OWORD *)(v13 + 88) = *(_OWORD *)(v14 + 88);
  *(void *)(v13 + 104) = *(void *)(v14 + 104);
  *(unsigned char *)(v13 + 112) = *(unsigned char *)(v14 + 112);
  *(void *)(v13 + 120) = *(void *)(v14 + 120);
  *(_DWORD *)(v13 + 128) = *(_DWORD *)(v14 + 128);
  *(unsigned char *)(v13 + 132) = *(unsigned char *)(v14 + 132);
  *(_WORD *)(v13 + 133) = *(_WORD *)(v14 + 133);
  uint64_t v18 = a1 + v12;
  uint64_t v19 = a2 + v12;
  uint64_t v20 = *(void *)(v19 + 8);
  *(void *)uint64_t v18 = *(void *)v19;
  *(void *)(v18 + 8) = v20;
  *(_WORD *)(v18 + 16) = *(_WORD *)(v19 + 16);
  uint64_t v21 = *(void *)(v19 + 32);
  *(void *)(v18 + 24) = *(void *)(v19 + 24);
  *(void *)(v18 + 32) = v21;
  uint64_t v77 = a3;
  uint64_t v22 = a3[8];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = *(void *)(a2 + v22 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v25)
  {
    *(_WORD *)uint64_t v23 = *(_WORD *)v24;
    *(void *)(v23 + 8) = *(void *)(v24 + 8);
    *(void *)(v23 + 16) = v25;
    *(void *)(v23 + 24) = *(void *)(v24 + 24);
    uint64_t v26 = *(void *)(v24 + 40);
    *(void *)(v23 + 32) = *(void *)(v24 + 32);
    *(void *)(v23 + 40) = v26;
    uint64_t v27 = *(void *)(v24 + 56);
    *(void *)(v23 + 48) = *(void *)(v24 + 48);
    *(void *)(v23 + 56) = v27;
    uint64_t v28 = *(void *)(v24 + 72);
    *(void *)(v23 + 64) = *(void *)(v24 + 64);
    *(void *)(v23 + 72) = v28;
    *(unsigned char *)(v23 + 80) = *(unsigned char *)(v24 + 80);
    uint64_t v29 = *(void *)(v24 + 96);
    *(void *)(v23 + 88) = *(void *)(v24 + 88);
    *(void *)(v23 + 96) = v29;
    *(void *)(v23 + 104) = *(void *)(v24 + 104);
    *(unsigned char *)(v23 + 112) = *(unsigned char *)(v24 + 112);
    uint64_t v30 = *(void *)(v24 + 120);
    uint64_t v31 = *(void *)(v24 + 128);
    *(void *)(v23 + 120) = v30;
    *(void *)(v23 + 128) = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v32 = *(_OWORD *)(v24 + 112);
    *(_OWORD *)(v23 + 96) = *(_OWORD *)(v24 + 96);
    *(_OWORD *)(v23 + 112) = v32;
    *(void *)(v23 + 128) = *(void *)(v24 + 128);
    long long v33 = *(_OWORD *)(v24 + 48);
    *(_OWORD *)(v23 + 32) = *(_OWORD *)(v24 + 32);
    *(_OWORD *)(v23 + 48) = v33;
    long long v34 = *(_OWORD *)(v24 + 80);
    *(_OWORD *)(v23 + 64) = *(_OWORD *)(v24 + 64);
    *(_OWORD *)(v23 + 80) = v34;
    long long v35 = *(_OWORD *)(v24 + 16);
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    *(_OWORD *)(v23 + 16) = v35;
  }
  uint64_t v36 = v77[9];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  uint64_t v39 = *(void *)(v38 + 16);
  if (v39 == 1)
  {
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    *(void *)(v37 + 16) = *(void *)(v38 + 16);
  }
  else
  {
    *(unsigned char *)uint64_t v37 = *(unsigned char *)v38;
    *(void *)(v37 + 8) = *(void *)(v38 + 8);
    *(void *)(v37 + 16) = v39;
    swift_bridgeObjectRetain();
  }
  uint64_t v40 = v77[10];
  uint64_t v41 = v77[11];
  uint64_t v42 = a1 + v40;
  uint64_t v43 = a2 + v40;
  *(unsigned char *)uint64_t v42 = *(unsigned char *)v43;
  uint64_t v44 = *(void *)(v43 + 16);
  *(void *)(v42 + 8) = *(void *)(v43 + 8);
  *(void *)(v42 + 16) = v44;
  *(_DWORD *)(v42 + 24) = *(_DWORD *)(v43 + 24);
  *(unsigned char *)(v42 + 28) = *(unsigned char *)(v43 + 28);
  uint64_t v45 = a1 + v41;
  uint64_t v46 = a2 + v41;
  uint64_t v47 = *(void *)(v46 + 8);
  *(void *)uint64_t v45 = *(void *)v46;
  *(void *)(v45 + 8) = v47;
  *(unsigned char *)(v45 + 16) = *(unsigned char *)(v46 + 16);
  *(unsigned char *)(v45 + 17) = *(unsigned char *)(v46 + 17);
  uint64_t v48 = v77[12];
  uint64_t v49 = (void *)(a1 + v48);
  uint64_t v50 = (void *)(a2 + v48);
  uint64_t v51 = *(void *)(a2 + v48 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v51)
  {
    *uint64_t v49 = *v50;
    v49[1] = v51;
    uint64_t v52 = v50[3];
    _OWORD v49[2] = v50[2];
    v49[3] = v52;
    uint64_t v53 = v50[5];
    v49[4] = v50[4];
    v49[5] = v53;
    uint64_t v54 = v50[6];
    uint64_t v55 = v50[7];
    v49[6] = v54;
    v49[7] = v55;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v56 = *((_OWORD *)v50 + 1);
    *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
    *((_OWORD *)v49 + 1) = v56;
    long long v57 = *((_OWORD *)v50 + 3);
    *((_OWORD *)v49 + 2) = *((_OWORD *)v50 + 2);
    *((_OWORD *)v49 + 3) = v57;
  }
  uint64_t v58 = v77[13];
  uint64_t v59 = v77[14];
  uint64_t v60 = a1 + v58;
  uint64_t v61 = a2 + v58;
  *(unsigned char *)uint64_t v60 = *(unsigned char *)v61;
  uint64_t v62 = *(void *)(v61 + 16);
  *(void *)(v60 + 8) = *(void *)(v61 + 8);
  *(void *)(v60 + 16) = v62;
  *(_DWORD *)(v60 + 24) = *(_DWORD *)(v61 + 24);
  uint64_t v63 = a1 + v59;
  uint64_t v64 = a2 + v59;
  *(unsigned char *)uint64_t v63 = *(unsigned char *)v64;
  uint64_t v65 = *(void *)(v64 + 16);
  *(void *)(v63 + 8) = *(void *)(v64 + 8);
  *(void *)(v63 + 16) = v65;
  *(unsigned char *)(v63 + 24) = *(unsigned char *)(v64 + 24);
  *(unsigned char *)(v63 + 25) = *(unsigned char *)(v64 + 25);
  uint64_t v66 = *(void *)(v64 + 40);
  *(void *)(v63 + 32) = *(void *)(v64 + 32);
  *(void *)(v63 + 40) = v66;
  *(unsigned char *)(v63 + 48) = *(unsigned char *)(v64 + 48);
  uint64_t v67 = v77[15];
  uint64_t v68 = a1 + v67;
  uint64_t v69 = a2 + v67;
  uint64_t v70 = *(void *)(a2 + v67 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v70)
  {
    *(void *)uint64_t v68 = *(void *)v69;
    *(void *)(v68 + 8) = v70;
    *(_WORD *)(v68 + 16) = *(_WORD *)(v69 + 16);
    *(void *)(v68 + 24) = *(void *)(v69 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v71 = *(_OWORD *)(v69 + 16);
    *(_OWORD *)uint64_t v68 = *(_OWORD *)v69;
    *(_OWORD *)(v68 + 16) = v71;
  }
  uint64_t v72 = v77[16];
  long long v73 = (void *)(a1 + v72);
  uint64_t v74 = (void *)(a2 + v72);
  uint64_t v75 = v74[1];
  *long long v73 = *v74;
  v73[1] = v75;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MediaViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)uint64_t v12 = *(unsigned char *)(a2 + v11);
  *(_DWORD *)(v12 + 4) = *(_DWORD *)(a2 + v11 + 4);
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(a2 + v11 + 8);
  *(void *)(v12 + 16) = *(void *)(a2 + v11 + 16);
  *(void *)(v12 + 24) = *(void *)(a2 + v11 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 32) = *(unsigned char *)(v13 + 32);
  *(void *)(v12 + 40) = *(void *)(v13 + 40);
  uint64_t v14 = *(void *)(v13 + 48);
  *(unsigned char *)(v12 + 56) = *(unsigned char *)(v13 + 56);
  *(void *)(v12 + 48) = v14;
  *(unsigned char *)(v12 + 57) = *(unsigned char *)(v13 + 57);
  *(void *)(v12 + 64) = *(void *)(v13 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v13 + 72);
  *(unsigned char *)(v12 + 80) = *(unsigned char *)(v13 + 80);
  *(void *)(v12 + 72) = v15;
  *(void *)(v12 + 88) = *(void *)(v13 + 88);
  *(void *)(v12 + 96) = *(void *)(v13 + 96);
  *(void *)(v12 + 104) = *(void *)(v13 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 112) = *(unsigned char *)(v13 + 112);
  *(void *)(v12 + 120) = *(void *)(v13 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 128) = *(unsigned char *)(v13 + 128);
  *(unsigned char *)(v12 + 129) = *(unsigned char *)(v13 + 129);
  *(unsigned char *)(v12 + 130) = *(unsigned char *)(v13 + 130);
  *(unsigned char *)(v12 + 131) = *(unsigned char *)(v13 + 131);
  *(unsigned char *)(v12 + 132) = *(unsigned char *)(v13 + 132);
  *(unsigned char *)(v12 + 133) = *(unsigned char *)(v13 + 133);
  *(unsigned char *)(v12 + 134) = *(unsigned char *)(v13 + 134);
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(void *)uint64_t v17 = *(void *)(a2 + v16);
  *(void *)(v17 + 8) = *(void *)(a2 + v16 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v17 + 16) = *(unsigned char *)(v18 + 16);
  *(unsigned char *)(v17 + 17) = *(unsigned char *)(v18 + 17);
  *(void *)(v17 + 24) = *(void *)(v18 + 24);
  *(void *)(v17 + 32) = *(void *)(v18 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = *(void *)(a1 + v19 + 16);
  uint64_t v23 = *(void *)(a2 + v19 + 16);
  if (v22)
  {
    if (v23)
    {
      *(unsigned char *)uint64_t v20 = *(unsigned char *)v21;
      *(unsigned char *)(v20 + 1) = *(unsigned char *)(v21 + 1);
      *(void *)(v20 + 8) = *(void *)(v21 + 8);
      *(void *)(v20 + 16) = *(void *)(v21 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v20 + 24) = *(_DWORD *)(v21 + 24);
      *(_DWORD *)(v20 + 28) = *(_DWORD *)(v21 + 28);
      *(void *)(v20 + 32) = *(void *)(v21 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v20 + 40) = *(void *)(v21 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v20 + 48) = *(void *)(v21 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v20 + 56) = *(void *)(v21 + 56);
      *(void *)(v20 + 64) = *(void *)(v21 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v20 + 72) = *(void *)(v21 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v20 + 80) = *(unsigned char *)(v21 + 80);
      *(void *)(v20 + 88) = *(void *)(v21 + 88);
      *(void *)(v20 + 96) = *(void *)(v21 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v24 = *(void *)(v21 + 104);
      *(unsigned char *)(v20 + 112) = *(unsigned char *)(v21 + 112);
      *(void *)(v20 + 104) = v24;
      *(void *)(v20 + 120) = *(void *)(v21 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v20 + 128) = *(void *)(v21 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DE069980(v20);
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
      long long v26 = *(_OWORD *)(v21 + 64);
      long long v28 = *(_OWORD *)(v21 + 16);
      long long v27 = *(_OWORD *)(v21 + 32);
      *(_OWORD *)(v20 + 48) = *(_OWORD *)(v21 + 48);
      *(_OWORD *)(v20 + 64) = v26;
      *(_OWORD *)(v20 + 16) = v28;
      *(_OWORD *)(v20 + 32) = v27;
      long long v30 = *(_OWORD *)(v21 + 96);
      long long v29 = *(_OWORD *)(v21 + 112);
      long long v31 = *(_OWORD *)(v21 + 80);
      *(void *)(v20 + 128) = *(void *)(v21 + 128);
      *(_OWORD *)(v20 + 96) = v30;
      *(_OWORD *)(v20 + 112) = v29;
      *(_OWORD *)(v20 + 80) = v31;
    }
  }
  else if (v23)
  {
    *(unsigned char *)uint64_t v20 = *(unsigned char *)v21;
    *(unsigned char *)(v20 + 1) = *(unsigned char *)(v21 + 1);
    *(void *)(v20 + 8) = *(void *)(v21 + 8);
    *(void *)(v20 + 16) = *(void *)(v21 + 16);
    *(_DWORD *)(v20 + 24) = *(_DWORD *)(v21 + 24);
    *(_DWORD *)(v20 + 28) = *(_DWORD *)(v21 + 28);
    *(void *)(v20 + 32) = *(void *)(v21 + 32);
    *(void *)(v20 + 40) = *(void *)(v21 + 40);
    *(void *)(v20 + 48) = *(void *)(v21 + 48);
    *(void *)(v20 + 56) = *(void *)(v21 + 56);
    *(void *)(v20 + 64) = *(void *)(v21 + 64);
    *(void *)(v20 + 72) = *(void *)(v21 + 72);
    *(unsigned char *)(v20 + 80) = *(unsigned char *)(v21 + 80);
    *(void *)(v20 + 88) = *(void *)(v21 + 88);
    *(void *)(v20 + 96) = *(void *)(v21 + 96);
    uint64_t v25 = *(void *)(v21 + 104);
    *(unsigned char *)(v20 + 112) = *(unsigned char *)(v21 + 112);
    *(void *)(v20 + 104) = v25;
    *(void *)(v20 + 120) = *(void *)(v21 + 120);
    *(void *)(v20 + 128) = *(void *)(v21 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    long long v32 = *(_OWORD *)(v21 + 16);
    long long v33 = *(_OWORD *)(v21 + 32);
    long long v34 = *(_OWORD *)(v21 + 64);
    *(_OWORD *)(v20 + 48) = *(_OWORD *)(v21 + 48);
    *(_OWORD *)(v20 + 64) = v34;
    *(_OWORD *)(v20 + 16) = v32;
    *(_OWORD *)(v20 + 32) = v33;
    long long v35 = *(_OWORD *)(v21 + 80);
    long long v36 = *(_OWORD *)(v21 + 96);
    long long v37 = *(_OWORD *)(v21 + 112);
    *(void *)(v20 + 128) = *(void *)(v21 + 128);
    *(_OWORD *)(v20 + 96) = v36;
    *(_OWORD *)(v20 + 112) = v37;
    *(_OWORD *)(v20 + 80) = v35;
  }
  uint64_t v38 = a3[9];
  uint64_t v39 = a1 + v38;
  uint64_t v40 = (long long *)(a2 + v38);
  uint64_t v41 = *(void *)(a1 + v38 + 16);
  uint64_t v42 = *(void *)(a2 + v38 + 16);
  if (v41 == 1)
  {
    if (v42 == 1)
    {
      long long v43 = *v40;
      *(void *)(v39 + 16) = *((void *)v40 + 2);
      *(_OWORD *)uint64_t v39 = v43;
    }
    else
    {
      *(unsigned char *)uint64_t v39 = *(unsigned char *)v40;
      *(void *)(v39 + 8) = *((void *)v40 + 1);
      *(void *)(v39 + 16) = *((void *)v40 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v42 == 1)
  {
    sub_1DE05D370(v39);
    uint64_t v44 = *((void *)v40 + 2);
    *(_OWORD *)uint64_t v39 = *v40;
    *(void *)(v39 + 16) = v44;
  }
  else
  {
    *(unsigned char *)uint64_t v39 = *(unsigned char *)v40;
    *(void *)(v39 + 8) = *((void *)v40 + 1);
    *(void *)(v39 + 16) = *((void *)v40 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v45 = a3[10];
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  *(unsigned char *)uint64_t v46 = *(unsigned char *)(a2 + v45);
  *(void *)(v46 + 8) = *(void *)(a2 + v45 + 8);
  *(void *)(v46 + 16) = *(void *)(a2 + v45 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v48 = *(_DWORD *)(v47 + 24);
  *(unsigned char *)(v46 + 28) = *(unsigned char *)(v47 + 28);
  *(_DWORD *)(v46 + 24) = v48;
  uint64_t v49 = a3[11];
  uint64_t v50 = a1 + v49;
  uint64_t v51 = a2 + v49;
  *(void *)uint64_t v50 = *(void *)(a2 + v49);
  *(void *)(v50 + 8) = *(void *)(a2 + v49 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v50 + 16) = *(unsigned char *)(v51 + 16);
  *(unsigned char *)(v50 + 17) = *(unsigned char *)(v51 + 17);
  uint64_t v52 = a3[12];
  uint64_t v53 = (void *)(a1 + v52);
  uint64_t v54 = (void *)(a2 + v52);
  uint64_t v55 = *(void *)(a1 + v52 + 8);
  uint64_t v56 = *(void *)(a2 + v52 + 8);
  if (v55)
  {
    if (v56)
    {
      *uint64_t v53 = *v54;
      v53[1] = v54[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      _OWORD v53[2] = v54[2];
      v53[3] = v54[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v53[4] = v54[4];
      v53[5] = v54[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v53[6] = v54[6];
      v53[7] = v54[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DE07C4A4((uint64_t)v53);
      long long v57 = *((_OWORD *)v54 + 3);
      long long v59 = *(_OWORD *)v54;
      long long v58 = *((_OWORD *)v54 + 1);
      *((_OWORD *)v53 + 2) = *((_OWORD *)v54 + 2);
      *((_OWORD *)v53 + 3) = v57;
      *(_OWORD *)uint64_t v53 = v59;
      *((_OWORD *)v53 + 1) = v58;
    }
  }
  else if (v56)
  {
    *uint64_t v53 = *v54;
    v53[1] = v54[1];
    _OWORD v53[2] = v54[2];
    v53[3] = v54[3];
    v53[4] = v54[4];
    v53[5] = v54[5];
    v53[6] = v54[6];
    v53[7] = v54[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v60 = *(_OWORD *)v54;
    long long v61 = *((_OWORD *)v54 + 1);
    long long v62 = *((_OWORD *)v54 + 3);
    *((_OWORD *)v53 + 2) = *((_OWORD *)v54 + 2);
    *((_OWORD *)v53 + 3) = v62;
    *(_OWORD *)uint64_t v53 = v60;
    *((_OWORD *)v53 + 1) = v61;
  }
  uint64_t v63 = a3[13];
  uint64_t v64 = a1 + v63;
  uint64_t v65 = a2 + v63;
  *(unsigned char *)uint64_t v64 = *(unsigned char *)(a2 + v63);
  *(void *)(v64 + 8) = *(void *)(a2 + v63 + 8);
  *(void *)(v64 + 16) = *(void *)(a2 + v63 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v64 + 24) = *(_DWORD *)(v65 + 24);
  uint64_t v66 = a3[14];
  uint64_t v67 = a1 + v66;
  uint64_t v68 = a2 + v66;
  *(unsigned char *)uint64_t v67 = *(unsigned char *)(a2 + v66);
  *(void *)(v67 + 8) = *(void *)(a2 + v66 + 8);
  *(void *)(v67 + 16) = *(void *)(a2 + v66 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v67 + 24) = *(unsigned char *)(v68 + 24);
  *(unsigned char *)(v67 + 25) = *(unsigned char *)(v68 + 25);
  *(void *)(v67 + 32) = *(void *)(v68 + 32);
  *(void *)(v67 + 40) = *(void *)(v68 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v67 + 48) = *(unsigned char *)(v68 + 48);
  uint64_t v69 = a3[15];
  uint64_t v70 = a1 + v69;
  uint64_t v71 = a2 + v69;
  uint64_t v72 = *(void *)(a1 + v69 + 8);
  uint64_t v73 = *(void *)(a2 + v69 + 8);
  if (v72)
  {
    if (v73)
    {
      *(void *)uint64_t v70 = *(void *)v71;
      *(void *)(v70 + 8) = *(void *)(v71 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v70 + 16) = *(unsigned char *)(v71 + 16);
      *(unsigned char *)(v70 + 17) = *(unsigned char *)(v71 + 17);
      *(void *)(v70 + 24) = *(void *)(v71 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DE07C4F8(v70);
      long long v74 = *(_OWORD *)(v71 + 16);
      *(_OWORD *)uint64_t v70 = *(_OWORD *)v71;
      *(_OWORD *)(v70 + 16) = v74;
    }
  }
  else if (v73)
  {
    *(void *)uint64_t v70 = *(void *)v71;
    *(void *)(v70 + 8) = *(void *)(v71 + 8);
    *(unsigned char *)(v70 + 16) = *(unsigned char *)(v71 + 16);
    *(unsigned char *)(v70 + 17) = *(unsigned char *)(v71 + 17);
    *(void *)(v70 + 24) = *(void *)(v71 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v75 = *(_OWORD *)(v71 + 16);
    *(_OWORD *)uint64_t v70 = *(_OWORD *)v71;
    *(_OWORD *)(v70 + 16) = v75;
  }
  uint64_t v76 = a3[16];
  uint64_t v77 = (void *)(a1 + v76);
  long long v78 = (void *)(a2 + v76);
  *uint64_t v77 = *v78;
  v77[1] = v78[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for MediaViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  long long v15 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 48) = v15;
  *(void *)(v13 + 127) = *(void *)(v14 + 127);
  long long v16 = *(_OWORD *)(v14 + 112);
  *(_OWORD *)(v13 + 96) = *(_OWORD *)(v14 + 96);
  *(_OWORD *)(v13 + 112) = v16;
  long long v17 = *(_OWORD *)(v14 + 80);
  *(_OWORD *)(v13 + 64) = *(_OWORD *)(v14 + 64);
  *(_OWORD *)(v13 + 80) = v17;
  long long v18 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v18;
  uint64_t v19 = a1 + v12;
  uint64_t v20 = a2 + v12;
  *(void *)(v19 + 32) = *(void *)(v20 + 32);
  long long v21 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v21;
  uint64_t v22 = a3[8];
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  long long v26 = *(_OWORD *)(v25 + 48);
  *(_OWORD *)(v24 + 32) = *(_OWORD *)(v25 + 32);
  *(_OWORD *)(v24 + 48) = v26;
  *(void *)(v24 + 128) = *(void *)(v25 + 128);
  long long v27 = *(_OWORD *)(v25 + 112);
  *(_OWORD *)(v24 + 96) = *(_OWORD *)(v25 + 96);
  *(_OWORD *)(v24 + 112) = v27;
  long long v28 = *(_OWORD *)(v25 + 80);
  *(_OWORD *)(v24 + 64) = *(_OWORD *)(v25 + 64);
  *(_OWORD *)(v24 + 80) = v28;
  long long v29 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v29;
  uint64_t v30 = a1 + v23;
  uint64_t v31 = a2 + v23;
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  *(void *)(v30 + 16) = *(void *)(v31 + 16);
  uint64_t v32 = a3[10];
  uint64_t v33 = a3[11];
  long long v34 = (_OWORD *)(a1 + v32);
  long long v35 = (_OWORD *)(a2 + v32);
  *long long v34 = *v35;
  *(_OWORD *)((char *)v34 + 13) = *(_OWORD *)((char *)v35 + 13);
  uint64_t v36 = a1 + v33;
  uint64_t v37 = a2 + v33;
  *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
  *(_WORD *)(v36 + 16) = *(_WORD *)(v37 + 16);
  uint64_t v38 = a3[12];
  uint64_t v39 = a3[13];
  uint64_t v40 = (_OWORD *)(a1 + v38);
  uint64_t v41 = (_OWORD *)(a2 + v38);
  long long v42 = v41[1];
  *uint64_t v40 = *v41;
  v40[1] = v42;
  long long v43 = v41[3];
  v40[2] = v41[2];
  v40[3] = v43;
  uint64_t v44 = (_OWORD *)(a1 + v39);
  uint64_t v45 = (long long *)(a2 + v39);
  long long v46 = *v45;
  *(_OWORD *)((char *)v44 + 12) = *(long long *)((char *)v45 + 12);
  *uint64_t v44 = v46;
  uint64_t v47 = a3[14];
  uint64_t v48 = a3[15];
  uint64_t v49 = a1 + v47;
  uint64_t v50 = (long long *)(a2 + v47);
  *(unsigned char *)(v49 + 48) = *((unsigned char *)v50 + 48);
  long long v51 = v50[2];
  long long v52 = *v50;
  *(_OWORD *)(v49 + 16) = v50[1];
  *(_OWORD *)(v49 + 32) = v51;
  *(_OWORD *)uint64_t v49 = v52;
  uint64_t v53 = (_OWORD *)(a1 + v48);
  uint64_t v54 = (_OWORD *)(a2 + v48);
  long long v55 = v54[1];
  *uint64_t v53 = *v54;
  v53[1] = v55;
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  return a1;
}

uint64_t assignWithTake for MediaViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)uint64_t v12 = *(unsigned char *)(a2 + v11);
  *(_DWORD *)(v12 + 4) = *(_DWORD *)(a2 + v11 + 4);
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(a2 + v11 + 8);
  uint64_t v14 = *(void *)(a2 + v11 + 24);
  *(void *)(v12 + 16) = *(void *)(a2 + v11 + 16);
  *(void *)(v12 + 24) = v14;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 32) = *(unsigned char *)(v13 + 32);
  uint64_t v15 = *(void *)(v13 + 48);
  *(void *)(v12 + 40) = *(void *)(v13 + 40);
  *(void *)(v12 + 48) = v15;
  *(unsigned char *)(v12 + 56) = *(unsigned char *)(v13 + 56);
  *(unsigned char *)(v12 + 57) = *(unsigned char *)(v13 + 57);
  *(void *)(v12 + 64) = *(void *)(v13 + 64);
  swift_bridgeObjectRelease();
  *(void *)(v12 + 72) = *(void *)(v13 + 72);
  *(unsigned char *)(v12 + 80) = *(unsigned char *)(v13 + 80);
  *(_OWORD *)(v12 + 88) = *(_OWORD *)(v13 + 88);
  *(void *)(v12 + 104) = *(void *)(v13 + 104);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 112) = *(unsigned char *)(v13 + 112);
  *(void *)(v12 + 120) = *(void *)(v13 + 120);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 128) = *(unsigned char *)(v13 + 128);
  *(unsigned char *)(v12 + 129) = *(unsigned char *)(v13 + 129);
  *(unsigned char *)(v12 + 130) = *(unsigned char *)(v13 + 130);
  *(unsigned char *)(v12 + 131) = *(unsigned char *)(v13 + 131);
  *(unsigned char *)(v12 + 132) = *(unsigned char *)(v13 + 132);
  *(unsigned char *)(v12 + 133) = *(unsigned char *)(v13 + 133);
  *(unsigned char *)(v12 + 134) = *(unsigned char *)(v13 + 134);
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = *(void *)(a2 + v16 + 8);
  *(void *)uint64_t v17 = *(void *)(a2 + v16);
  *(void *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v17 + 16) = *(unsigned char *)(v18 + 16);
  *(unsigned char *)(v17 + 17) = *(unsigned char *)(v18 + 17);
  uint64_t v20 = *(void *)(v18 + 32);
  *(void *)(v17 + 24) = *(void *)(v18 + 24);
  *(void *)(v17 + 32) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[8];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  if (*(void *)(a1 + v21 + 16))
  {
    uint64_t v24 = *(void *)(v23 + 16);
    if (v24)
    {
      *(_WORD *)uint64_t v22 = *(_WORD *)v23;
      *(void *)(v22 + 8) = *(void *)(v23 + 8);
      *(void *)(v22 + 16) = v24;
      swift_bridgeObjectRelease();
      *(void *)(v22 + 24) = *(void *)(v23 + 24);
      *(void *)(v22 + 32) = *(void *)(v23 + 32);
      swift_bridgeObjectRelease();
      *(void *)(v22 + 40) = *(void *)(v23 + 40);
      swift_bridgeObjectRelease();
      *(void *)(v22 + 48) = *(void *)(v23 + 48);
      swift_bridgeObjectRelease();
      uint64_t v25 = *(void *)(v23 + 64);
      *(void *)(v22 + 56) = *(void *)(v23 + 56);
      *(void *)(v22 + 64) = v25;
      swift_bridgeObjectRelease();
      *(void *)(v22 + 72) = *(void *)(v23 + 72);
      swift_bridgeObjectRelease();
      *(unsigned char *)(v22 + 80) = *(unsigned char *)(v23 + 80);
      uint64_t v26 = *(void *)(v23 + 96);
      *(void *)(v22 + 88) = *(void *)(v23 + 88);
      *(void *)(v22 + 96) = v26;
      swift_bridgeObjectRelease();
      *(void *)(v22 + 104) = *(void *)(v23 + 104);
      *(unsigned char *)(v22 + 112) = *(unsigned char *)(v23 + 112);
      *(void *)(v22 + 120) = *(void *)(v23 + 120);
      swift_bridgeObjectRelease();
      *(void *)(v22 + 128) = *(void *)(v23 + 128);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1DE069980(v22);
  }
  long long v27 = *(_OWORD *)(v23 + 112);
  *(_OWORD *)(v22 + 96) = *(_OWORD *)(v23 + 96);
  *(_OWORD *)(v22 + 112) = v27;
  *(void *)(v22 + 128) = *(void *)(v23 + 128);
  long long v28 = *(_OWORD *)(v23 + 48);
  *(_OWORD *)(v22 + 32) = *(_OWORD *)(v23 + 32);
  *(_OWORD *)(v22 + 48) = v28;
  long long v29 = *(_OWORD *)(v23 + 80);
  *(_OWORD *)(v22 + 64) = *(_OWORD *)(v23 + 64);
  *(_OWORD *)(v22 + 80) = v29;
  long long v30 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v30;
LABEL_6:
  uint64_t v31 = a3[9];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  if (*(void *)(a1 + v31 + 16) == 1)
  {
LABEL_9:
    *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
    *(void *)(v32 + 16) = *(void *)(v33 + 16);
    goto LABEL_11;
  }
  uint64_t v34 = *(void *)(v33 + 16);
  if (v34 == 1)
  {
    sub_1DE05D370(v32);
    goto LABEL_9;
  }
  *(unsigned char *)uint64_t v32 = *(unsigned char *)v33;
  *(void *)(v32 + 8) = *(void *)(v33 + 8);
  *(void *)(v32 + 16) = v34;
  swift_bridgeObjectRelease();
LABEL_11:
  uint64_t v35 = a3[10];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  *(unsigned char *)uint64_t v36 = *(unsigned char *)(a2 + v35);
  uint64_t v38 = *(void *)(a2 + v35 + 16);
  *(void *)(v36 + 8) = *(void *)(a2 + v35 + 8);
  *(void *)(v36 + 16) = v38;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v36 + 24) = *(_DWORD *)(v37 + 24);
  *(unsigned char *)(v36 + 28) = *(unsigned char *)(v37 + 28);
  uint64_t v39 = a3[11];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = *(void *)(a2 + v39 + 8);
  *(void *)uint64_t v40 = *(void *)(a2 + v39);
  *(void *)(v40 + 8) = v42;
  swift_bridgeObjectRelease();
  *(_WORD *)(v40 + 16) = *(_WORD *)(v41 + 16);
  uint64_t v43 = a3[12];
  uint64_t v44 = (void *)(a1 + v43);
  uint64_t v45 = (void *)(a2 + v43);
  if (*(void *)(a1 + v43 + 8))
  {
    uint64_t v46 = v45[1];
    if (v46)
    {
      *uint64_t v44 = *v45;
      v44[1] = v46;
      swift_bridgeObjectRelease();
      uint64_t v47 = v45[3];
      v44[2] = v45[2];
      v44[3] = v47;
      swift_bridgeObjectRelease();
      uint64_t v48 = v45[5];
      v44[4] = v45[4];
      v44[5] = v48;
      swift_bridgeObjectRelease();
      uint64_t v49 = v45[7];
      v44[6] = v45[6];
      v44[7] = v49;
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_1DE07C4A4((uint64_t)v44);
  }
  long long v50 = *((_OWORD *)v45 + 1);
  *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
  *((_OWORD *)v44 + 1) = v50;
  long long v51 = *((_OWORD *)v45 + 3);
  *((_OWORD *)v44 + 2) = *((_OWORD *)v45 + 2);
  *((_OWORD *)v44 + 3) = v51;
LABEL_16:
  uint64_t v52 = a3[13];
  uint64_t v53 = a1 + v52;
  uint64_t v54 = a2 + v52;
  *(unsigned char *)uint64_t v53 = *(unsigned char *)(a2 + v52);
  uint64_t v55 = *(void *)(a2 + v52 + 16);
  *(void *)(v53 + 8) = *(void *)(a2 + v52 + 8);
  *(void *)(v53 + 16) = v55;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v53 + 24) = *(_DWORD *)(v54 + 24);
  uint64_t v56 = a3[14];
  uint64_t v57 = a1 + v56;
  uint64_t v58 = a2 + v56;
  *(unsigned char *)uint64_t v57 = *(unsigned char *)(a2 + v56);
  uint64_t v59 = *(void *)(a2 + v56 + 16);
  *(void *)(v57 + 8) = *(void *)(a2 + v56 + 8);
  *(void *)(v57 + 16) = v59;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v57 + 24) = *(unsigned char *)(v58 + 24);
  *(unsigned char *)(v57 + 25) = *(unsigned char *)(v58 + 25);
  uint64_t v60 = *(void *)(v58 + 40);
  *(void *)(v57 + 32) = *(void *)(v58 + 32);
  *(void *)(v57 + 40) = v60;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v57 + 48) = *(unsigned char *)(v58 + 48);
  uint64_t v61 = a3[15];
  uint64_t v62 = a1 + v61;
  uint64_t v63 = a2 + v61;
  if (!*(void *)(a1 + v61 + 8))
  {
LABEL_20:
    long long v65 = *(_OWORD *)(v63 + 16);
    *(_OWORD *)uint64_t v62 = *(_OWORD *)v63;
    *(_OWORD *)(v62 + 16) = v65;
    goto LABEL_21;
  }
  uint64_t v64 = *(void *)(v63 + 8);
  if (!v64)
  {
    sub_1DE07C4F8(v62);
    goto LABEL_20;
  }
  *(void *)uint64_t v62 = *(void *)v63;
  *(void *)(v62 + 8) = v64;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v62 + 16) = *(unsigned char *)(v63 + 16);
  *(unsigned char *)(v62 + 17) = *(unsigned char *)(v63 + 17);
  *(void *)(v62 + 24) = *(void *)(v63 + 24);
  swift_bridgeObjectRelease();
LABEL_21:
  uint64_t v66 = a3[16];
  uint64_t v67 = (void *)(a1 + v66);
  uint64_t v68 = (uint64_t *)(a2 + v66);
  uint64_t v70 = *v68;
  uint64_t v69 = v68[1];
  *uint64_t v67 = v70;
  v67[1] = v69;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE0B9098);
}

uint64_t sub_1DE0B9098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DE47F330();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1DE47F350();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 24);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE0B91C4);
}

uint64_t sub_1DE0B91C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1DE47F330();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_1DE47F350();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_1DE0B92D8()
{
  uint64_t result = sub_1DE47F330();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1DE47F350();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ViewType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MediaViewEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *uint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE0B9568);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaViewEvent.Model.CodingKeys()
{
  return &type metadata for MediaViewEvent.Model.CodingKeys;
}

unint64_t sub_1DE0B95A4()
{
  unint64_t result = qword_1EABA2300;
  if (!qword_1EABA2300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2300);
  }
  return result;
}

unint64_t sub_1DE0B95FC()
{
  unint64_t result = qword_1EABA2308;
  if (!qword_1EABA2308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2308);
  }
  return result;
}

unint64_t sub_1DE0B9654()
{
  unint64_t result = qword_1EABA2310;
  if (!qword_1EABA2310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2310);
  }
  return result;
}

uint64_t sub_1DE0B96A8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x746144616964656DLL && a2 == 0xE900000000000061 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DE4BE7C0 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x447972656C6C6167 && a2 == 0xEB00000000617461 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001DE4BDDA0 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6569566575737369 && a2 == 0xED00006174614477)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    char v6 = sub_1DE480660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 12;
    }
    else {
      return 13;
    }
  }
}

uint64_t static ErrorData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t ErrorData.errorDomain.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ErrorData.errorDomain.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *BOOL v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ErrorData.errorDomain.modify())()
{
  return nullsub_1;
}

uint64_t ErrorData.errorCode.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ErrorData.errorCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ErrorData.errorCode.modify())()
{
  return nullsub_1;
}

uint64_t ErrorData.errorDetails.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ErrorData.errorDetails.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t (*ErrorData.errorDetails.modify())()
{
  return nullsub_1;
}

uint64_t ErrorData.init(errorDomain:errorCode:errorDetails:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t sub_1DE0B9DD0()
{
  uint64_t v1 = 0x646F43726F727265;
  if (*v0 != 1) {
    uint64_t v1 = 0x746544726F727265;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6D6F44726F727265;
  }
}

uint64_t sub_1DE0B9E40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE0BAB2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE0B9E68(uint64_t a1)
{
  unint64_t v2 = sub_1DE0BA0F0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE0B9EA4(uint64_t a1)
{
  unint64_t v2 = sub_1DE0BA0F0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ErrorData.encode(to:)(void *a1)
{
  sub_1DE0BA4EC(0, &qword_1EABA2318, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  BOOL v7 = (char *)&v12 - v6;
  uint64_t v8 = v1[2];
  uint64_t v14 = v1[3];
  uint64_t v15 = v8;
  uint64_t v13 = v1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0BA0F0();
  sub_1DE480790();
  char v20 = 0;
  uint64_t v9 = v16;
  sub_1DE480520();
  if (!v9)
  {
    uint64_t v10 = v13;
    char v19 = 1;
    sub_1DE480580();
    uint64_t v17 = v10;
    char v18 = 2;
    sub_1DE0BA144();
    sub_1DE0BA550(&qword_1EABA2330, (void (*)(void))sub_1DE0BA19C);
    sub_1DE480550();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DE0BA0F0()
{
  unint64_t result = qword_1EABA2320;
  if (!qword_1EABA2320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2320);
  }
  return result;
}

void sub_1DE0BA144()
{
  if (!qword_1EABA2328)
  {
    unint64_t v0 = sub_1DE480060();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EABA2328);
    }
  }
}

unint64_t sub_1DE0BA19C()
{
  unint64_t result = qword_1EABA2338;
  if (!qword_1EABA2338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2338);
  }
  return result;
}

uint64_t ErrorData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1DE0BA4EC(0, &qword_1EABA2340, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0BA0F0();
  sub_1DE480770();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v24 = 0;
    uint64_t v10 = sub_1DE480440();
    uint64_t v13 = v12;
    uint64_t v20 = v10;
    char v23 = 1;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1DE4804A0();
    uint64_t v16 = v15;
    uint64_t v19 = v14;
    sub_1DE0BA144();
    char v22 = 2;
    sub_1DE0BA550(&qword_1EABA2348, (void (*)(void))sub_1DE0BA5BC);
    swift_bridgeObjectRetain();
    sub_1DE480470();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v17 = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *a2 = v20;
    a2[1] = v13;
    a2[2] = v19;
    a2[3] = v16;
    a2[4] = v17;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1DE0BA4EC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE0BA0F0();
    unint64_t v7 = a3(a1, &type metadata for ErrorData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DE0BA550(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DE0BA144();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DE0BA5BC()
{
  unint64_t result = qword_1EABA2350;
  if (!qword_1EABA2350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2350);
  }
  return result;
}

unint64_t sub_1DE0BA614()
{
  unint64_t result = qword_1EBEC7240;
  if (!qword_1EBEC7240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC7240);
  }
  return result;
}

unint64_t sub_1DE0BA66C()
{
  unint64_t result = qword_1EBEC7238;
  if (!qword_1EBEC7238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC7238);
  }
  return result;
}

uint64_t sub_1DE0BA6C0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ErrorData.init(from:)(a1, a2);
}

uint64_t sub_1DE0BA6D8(void *a1)
{
  return ErrorData.encode(to:)(a1);
}

uint64_t destroy for ArticleExposureContextData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ArticleExposureContextData(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ArticleExposureContextData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ArticleExposureContextData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ErrorData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ErrorData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ErrorData()
{
  return &type metadata for ErrorData;
}

unsigned char *storeEnumTagSinglePayload for ErrorData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE0BA9ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ErrorData.CodingKeys()
{
  return &type metadata for ErrorData.CodingKeys;
}

unint64_t sub_1DE0BAA28()
{
  unint64_t result = qword_1EABA2358;
  if (!qword_1EABA2358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2358);
  }
  return result;
}

unint64_t sub_1DE0BAA80()
{
  unint64_t result = qword_1EABA2360;
  if (!qword_1EABA2360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2360);
  }
  return result;
}

unint64_t sub_1DE0BAAD8()
{
  unint64_t result = qword_1EABA2368;
  if (!qword_1EABA2368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2368);
  }
  return result;
}

uint64_t sub_1DE0BAB2C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D6F44726F727265 && a2 == 0xEB000000006E6961;
  if (v2 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646F43726F727265 && a2 == 0xE900000000000065 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746544726F727265 && a2 == 0xEC000000736C6961)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1DE480660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t static SearchResultsData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t SearchResultsData.topicIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SearchResultsData.topicIDs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*SearchResultsData.topicIDs.modify())()
{
  return nullsub_1;
}

uint64_t SearchResultsData.channelIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SearchResultsData.channelIDs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*SearchResultsData.channelIDs.modify())()
{
  return nullsub_1;
}

uint64_t SearchResultsData.articleIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SearchResultsData.articleIDs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*SearchResultsData.articleIDs.modify())()
{
  return nullsub_1;
}

uint64_t SearchResultsData.topResultTagID.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchResultsData.topResultTagID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*SearchResultsData.topResultTagID.modify())()
{
  return nullsub_1;
}

uint64_t SearchResultsData.topResultArticleID.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchResultsData.topResultArticleID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*SearchResultsData.topResultArticleID.modify())()
{
  return nullsub_1;
}

uint64_t SearchResultsData.totalResults.getter()
{
  return *(unsigned int *)(v0 + 56);
}

uint64_t SearchResultsData.totalResults.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 56) = result;
  return result;
}

uint64_t (*SearchResultsData.totalResults.modify())()
{
  return nullsub_1;
}

uint64_t SearchResultsData.completedString.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchResultsData.completedString.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return result;
}

uint64_t (*SearchResultsData.completedString.modify())()
{
  return nullsub_1;
}

void SearchResultsData.resultsSource.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 80);
}

unsigned char *SearchResultsData.resultsSource.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 80) = *result;
  return result;
}

uint64_t (*SearchResultsData.resultsSource.modify())()
{
  return nullsub_1;
}

uint64_t SearchResultsData.clientLatency.getter()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchResultsData.clientLatency.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = a2;
  return result;
}

uint64_t (*SearchResultsData.clientLatency.modify())()
{
  return nullsub_1;
}

uint64_t SearchResultsData.serverLatency.getter()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchResultsData.serverLatency.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = a2;
  return result;
}

uint64_t (*SearchResultsData.serverLatency.modify())()
{
  return nullsub_1;
}

uint64_t SearchResultsData.serverProcessingLatency.getter()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchResultsData.serverProcessingLatency.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 128) = a2;
  return result;
}

uint64_t (*SearchResultsData.serverProcessingLatency.modify())()
{
  return nullsub_1;
}

uint64_t SearchResultsData.sportTagIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SearchResultsData.sportTagIDs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 136) = a1;
  return result;
}

uint64_t (*SearchResultsData.sportTagIDs.modify())()
{
  return nullsub_1;
}

__n128 SearchResultsData.init(topicIDs:channelIDs:articleIDs:topResultTagID:topResultArticleID:totalResults:completedString:resultsSource:clientLatency:serverLatency:serverProcessingLatency:sportTagIDs:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, char *a12, long long a13, long long a14, __n128 a15, uint64_t a16)
{
  __n128 result = a15;
  char v17 = *a12;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(_DWORD *)(a9 + 56) = a8;
  *(void *)(a9 + 64) = a10;
  *(void *)(a9 + 72) = a11;
  *(unsigned char *)(a9 + 80) = v17;
  *(_OWORD *)(a9 + 88) = a13;
  *(_OWORD *)(a9 + 104) = a14;
  *(__n128 *)(a9 + 120) = a15;
  *(void *)(a9 + 136) = a16;
  return result;
}

uint64_t sub_1DE0BB1FC(char a1)
{
  uint64_t result = 0x7344496369706F74;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x496C656E6E616863;
      break;
    case 2:
      uint64_t result = 0x49656C6369747261;
      break;
    case 3:
      uint64_t result = 0x6C75736552706F74;
      break;
    case 4:
      uint64_t result = 0xD000000000000012;
      break;
    case 5:
      uint64_t result = 0x7365526C61746F74;
      break;
    case 6:
      uint64_t result = 0x6574656C706D6F63;
      break;
    case 7:
      uint64_t result = 0x5373746C75736572;
      break;
    case 8:
      uint64_t v3 = 0x746E65696C63;
      goto LABEL_12;
    case 9:
      uint64_t v3 = 0x726576726573;
LABEL_12:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x614C000000000000;
      break;
    case 10:
      uint64_t result = 0xD000000000000017;
      break;
    case 11:
      uint64_t result = 0x67615474726F7073;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE0BB3B8()
{
  return sub_1DE0BB1FC(*v0);
}

uint64_t sub_1DE0BB3C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE0BCDE4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DE0BB3E8(unsigned char *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_1DE0BB3F4(uint64_t a1)
{
  unint64_t v2 = sub_1DE0BB898();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE0BB430(uint64_t a1)
{
  unint64_t v2 = sub_1DE0BB898();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SearchResultsData.encode(to:)(void *a1)
{
  sub_1DE0BC3D4(0, &qword_1EABA2370, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v7 = (char *)v20 - v6;
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  long long v29 = v1[2];
  long long v30 = v8;
  uint64_t v10 = v1[3];
  long long v27 = v1[4];
  long long v28 = v10;
  uint64_t v11 = v1[6];
  uint64_t v25 = v1[5];
  uint64_t v26 = v11;
  int v24 = *((_DWORD *)v1 + 14);
  uint64_t v12 = v1[9];
  char v22 = v1[8];
  char v23 = v12;
  int v21 = *((unsigned __int8 *)v1 + 80);
  uint64_t v13 = v1[11];
  v20[4] = v1[12];
  v20[5] = v13;
  uint64_t v14 = v1[13];
  _OWORD v20[2] = v1[14];
  v20[3] = v14;
  uint64_t v15 = v1[15];
  uint64_t v16 = v1[17];
  v20[0] = v1[16];
  v20[1] = v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0BB898();
  sub_1DE480790();
  uint64_t v33 = v9;
  char v32 = 0;
  sub_1DE084DE0();
  sub_1DE085060((unint64_t *)&qword_1EBEC73E8);
  char v17 = v31;
  sub_1DE4805C0();
  if (v17) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v18 = v29;
  uint64_t v31 = v16;
  uint64_t v33 = v30;
  char v32 = 1;
  sub_1DE4805C0();
  uint64_t v33 = v18;
  char v32 = 2;
  long long v30 = v7;
  sub_1DE4805C0();
  LOBYTE(v33) = 3;
  sub_1DE480520();
  LOBYTE(v33) = 4;
  sub_1DE480520();
  LOBYTE(v33) = 5;
  sub_1DE4805D0();
  LOBYTE(v33) = 6;
  sub_1DE480520();
  LOBYTE(v33) = v21;
  char v32 = 7;
  sub_1DE0BB8EC();
  sub_1DE480550();
  LOBYTE(v33) = 8;
  sub_1DE480520();
  LOBYTE(v33) = 9;
  sub_1DE480520();
  LOBYTE(v33) = 10;
  sub_1DE480520();
  uint64_t v33 = v31;
  char v32 = 11;
  sub_1DE480550();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v30, v4);
}

unint64_t sub_1DE0BB898()
{
  unint64_t result = qword_1EABA2378;
  if (!qword_1EABA2378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2378);
  }
  return result;
}

unint64_t sub_1DE0BB8EC()
{
  unint64_t result = qword_1EABA2380;
  if (!qword_1EABA2380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2380);
  }
  return result;
}

uint64_t SearchResultsData.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1DE0BC3D4(0, &qword_1EABA2388, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v37 - v8;
  uint64_t v10 = a1[3];
  uint64_t v53 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1DE0BB898();
  sub_1DE480770();
  if (v2)
  {
    uint64_t v54 = 0;
    uint64_t v80 = 0;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v52 = v7;
    sub_1DE084DE0();
    LOBYTE(v55) = 0;
    uint64_t v11 = sub_1DE085060((unint64_t *)&qword_1EBEC73F0);
    sub_1DE4804E0();
    uint64_t v12 = v64[0];
    LOBYTE(v55) = 1;
    swift_bridgeObjectRetain();
    sub_1DE4804E0();
    uint64_t v51 = v12;
    uint64_t v13 = v64[0];
    LOBYTE(v55) = 2;
    swift_bridgeObjectRetain();
    sub_1DE4804E0();
    uint64_t v49 = v11;
    uint64_t v50 = v13;
    uint64_t v14 = v64[0];
    LOBYTE(v64[0]) = 3;
    swift_bridgeObjectRetain();
    uint64_t v47 = sub_1DE480440();
    uint64_t v48 = v14;
    LOBYTE(v64[0]) = 4;
    uint64_t v16 = v15;
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_1DE480440();
    uint64_t v46 = v16;
    LOBYTE(v64[0]) = 5;
    uint64_t v18 = v17;
    swift_bridgeObjectRetain();
    int v19 = sub_1DE4804F0();
    uint64_t v80 = v18;
    int v44 = v19;
    LOBYTE(v64[0]) = 6;
    uint64_t v20 = sub_1DE480440();
    uint64_t v22 = v21;
    uint64_t v43 = v20;
    LOBYTE(v55) = 7;
    sub_1DE0BC438();
    swift_bridgeObjectRetain();
    sub_1DE480470();
    uint64_t v54 = v22;
    LODWORD(v16) = LOBYTE(v64[0]);
    LOBYTE(v64[0]) = 8;
    uint64_t v40 = sub_1DE480440();
    int v41 = v16;
    LOBYTE(v64[0]) = 9;
    uint64_t v42 = v23;
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_1DE480440();
    uint64_t v25 = v24;
    LOBYTE(v64[0]) = 10;
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_1DE480440();
    uint64_t v27 = v26;
    char v77 = 11;
    swift_bridgeObjectRetain();
    sub_1DE480470();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v9, v6);
    uint64_t v28 = v78;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&long long v55 = v51;
    *((void *)&v55 + 1) = v50;
    *(void *)&long long v56 = v48;
    *((void *)&v56 + 1) = v47;
    uint64_t v29 = v46;
    *(void *)&long long v57 = v46;
    *((void *)&v57 + 1) = v45;
    *(void *)&long long v58 = v80;
    DWORD2(v58) = v44;
    *(void *)&long long v59 = v43;
    *((void *)&v59 + 1) = v54;
    LOBYTE(v60) = v41;
    *((void *)&v60 + 1) = v40;
    *(void *)&long long v61 = v42;
    *((void *)&v61 + 1) = v39;
    *(void *)&long long v62 = v25;
    *((void *)&v62 + 1) = v38;
    *(void *)&long long v63 = v27;
    *((void *)&v63 + 1) = v28;
    sub_1DE0BC48C((uint64_t)&v55);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v30 = v54;
    swift_bridgeObjectRelease();
    uint64_t v31 = v42;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v32 = v62;
    a2[6] = v61;
    a2[7] = v32;
    a2[8] = v63;
    long long v33 = v58;
    a2[2] = v57;
    a2[3] = v33;
    long long v34 = v60;
    a2[4] = v59;
    a2[5] = v34;
    long long v35 = v56;
    *a2 = v55;
    a2[1] = v35;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
    v64[0] = v51;
    v64[1] = v50;
    _OWORD v64[2] = v48;
    v64[3] = v47;
    v64[4] = v29;
    v64[5] = v45;
    v64[6] = v80;
    int v65 = v44;
    uint64_t v66 = v43;
    uint64_t v67 = v30;
    char v68 = v41;
    *(_DWORD *)uint64_t v69 = v79[0];
    *(_DWORD *)&v69[3] = *(_DWORD *)((char *)v79 + 3);
    uint64_t v70 = v40;
    uint64_t v71 = v31;
    uint64_t v72 = v39;
    uint64_t v73 = v25;
    uint64_t v74 = v38;
    uint64_t v75 = v27;
    uint64_t v76 = v28;
    return sub_1DE0BC53C((uint64_t)v64);
  }
}

void sub_1DE0BC3D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE0BB898();
    unint64_t v7 = a3(a1, &type metadata for SearchResultsData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1DE0BC438()
{
  unint64_t result = qword_1EABA2390;
  if (!qword_1EABA2390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2390);
  }
  return result;
}

uint64_t sub_1DE0BC48C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DE0BC53C(uint64_t a1)
{
  return a1;
}

unint64_t sub_1DE0BC5F0()
{
  unint64_t result = qword_1EABA2398;
  if (!qword_1EABA2398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2398);
  }
  return result;
}

unint64_t sub_1DE0BC648()
{
  unint64_t result = qword_1EABA23A0;
  if (!qword_1EABA23A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA23A0);
  }
  return result;
}

uint64_t sub_1DE0BC69C@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return SearchResultsData.init(from:)(a1, a2);
}

uint64_t sub_1DE0BC6B4(void *a1)
{
  return SearchResultsData.encode(to:)(a1);
}

uint64_t destroy for SearchResultsData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SearchResultsData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  uint64_t v8 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v8;
  uint64_t v9 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v9;
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SearchResultsData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy144_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t assignWithTake for SearchResultsData(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchResultsData(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 144)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchResultsData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 144) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchResultsData()
{
  return &type metadata for SearchResultsData;
}

uint64_t getEnumTagSinglePayload for SearchResultsData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SearchResultsData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *__n128 result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE0BCCA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchResultsData.CodingKeys()
{
  return &type metadata for SearchResultsData.CodingKeys;
}

unint64_t sub_1DE0BCCE0()
{
  unint64_t result = qword_1EABA23A8;
  if (!qword_1EABA23A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA23A8);
  }
  return result;
}

unint64_t sub_1DE0BCD38()
{
  unint64_t result = qword_1EABA23B0;
  if (!qword_1EABA23B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA23B0);
  }
  return result;
}

unint64_t sub_1DE0BCD90()
{
  unint64_t result = qword_1EABA23B8;
  if (!qword_1EABA23B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA23B8);
  }
  return result;
}

uint64_t sub_1DE0BCDE4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7344496369706F74 && a2 == 0xE800000000000000;
  if (v2 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x496C656E6E616863 && a2 == 0xEA00000000007344 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x49656C6369747261 && a2 == 0xEA00000000007344 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C75736552706F74 && a2 == 0xEE00444967615474 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DE4BEA20 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7365526C61746F74 && a2 == 0xEC00000073746C75 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6574656C706D6F63 && a2 == 0xEF676E6972745364 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x5373746C75736572 && a2 == 0xED0000656372756FLL || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x614C746E65696C63 && a2 == 0xED000079636E6574 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x614C726576726573 && a2 == 0xED000079636E6574 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001DE4BEA40 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x67615474726F7073 && a2 == 0xEB00000000734449)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    char v6 = sub_1DE480660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 11;
    }
    else {
      return 12;
    }
  }
}

uint64_t EventUserInfo.isFake.getter()
{
  return *v0;
}

void EventUserInfo.headlineEmbeddings.getter(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  unint64_t v5 = v1[4];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  sub_1DE0BD818(v2, v3, v4, v5, (void (*)(void))sub_1DE0BD3DC);
}

uint64_t sub_1DE0BD3DC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t EventUserInfo.init(isFake:headline:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v3 = result;
  if (a2)
  {
    swift_getObjectType();
    sub_1DE0BD4AC((uint64_t *)v7);
    uint64_t result = swift_unknownObjectRelease();
    long long v6 = v7[0];
    long long v5 = v7[1];
  }
  else
  {
    long long v5 = xmmword_1DE486AA0;
    long long v6 = 0uLL;
  }
  *(unsigned char *)a3 = v3 & 1;
  *(_OWORD *)(a3 + 8) = v6;
  *(_OWORD *)(a3 + 24) = v5;
  return result;
}

double sub_1DE0BD4AC@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  if (objc_msgSend(v1, sel_respondsToSelector_, sel_float16FullBodyEncoding))
  {
    id v4 = objc_msgSend(v1, sel_float16FullBodyEncoding);
    if (v4)
    {
      long long v5 = v4;
      uint64_t v6 = sub_1DE47E620();
      unint64_t v8 = v7;
    }
    else
    {
      uint64_t v6 = 0;
      unint64_t v8 = 0xF000000000000000;
    }
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v8 = 0xB000000000000000;
  }
  if (objc_msgSend(v2, sel_respondsToSelector_, sel_float16TitleEncoding))
  {
    id v10 = objc_msgSend(v2, sel_float16TitleEncoding);
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v12 = sub_1DE47E620();
      unint64_t v14 = v13;
    }
    else
    {
      uint64_t v12 = 0;
      unint64_t v14 = 0xF000000000000000;
    }
  }
  else
  {
    uint64_t v12 = 0;
    unint64_t v14 = 0xB000000000000000;
  }
  if (v8 >> 60 != 11)
  {
    if (v8 >> 60 != 15)
    {
      if (v14 >> 60 != 11)
      {
        if (v14 >> 60 != 15)
        {
          uint64_t v15 = v14 | 0x2000000000000000;
          *a1 = v6;
          a1[1] = v8;
          a1[2] = v12;
          goto LABEL_18;
        }
        sub_1DE0BDB4C(v12, v14);
      }
      *a1 = v6;
      a1[1] = v8;
      a1[2] = 0;
      a1[3] = 0;
      return result;
    }
    sub_1DE0BDB4C(v6, v8);
  }
  if (v14 >> 60 == 11)
  {
LABEL_17:
    *a1 = 0;
    a1[1] = 0;
    uint64_t v15 = 0x3000000000000000;
    a1[2] = 0;
LABEL_18:
    a1[3] = v15;
    return result;
  }
  if (v14 >> 60 == 15)
  {
    sub_1DE0BDB4C(v12, v14);
    goto LABEL_17;
  }
  *a1 = v12;
  a1[1] = v14;
  double result = 0.0;
  *((_OWORD *)a1 + 1) = xmmword_1DE486AB0;
  return result;
}

double ProcessEvent.newsUserInfo.getter@<D0>(uint64_t a1@<X8>)
{
  sub_1DE47EBB0();
  if (!v3[3])
  {
    sub_1DE0BD6BC((uint64_t)v3);
    goto LABEL_5;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    *(void *)a1 = 2;
    double result = 0.0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
  }
  return result;
}

uint64_t sub_1DE0BD6BC(uint64_t a1)
{
  sub_1DE0BD718();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DE0BD718()
{
  if (!qword_1EBEC7780)
  {
    unint64_t v0 = sub_1DE480220();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBEC7780);
    }
  }
}

uint64_t ProcessEvent.isFake.getter()
{
  ProcessEvent.newsUserInfo.getter((uint64_t)v2);
  if (LOBYTE(v2[0]) == 2) {
    return 0;
  }
  uint64_t v0 = v2[0] & 1;
  sub_1DE0BD7CC(v2[0], v2[1], v2[2], v2[3], v2[4]);
  return v0;
}

void sub_1DE0BD7CC(char a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if (a1 != 2) {
    sub_1DE0BD818(a2, a3, a4, a5, (void (*)(void))sub_1DE07110C);
  }
}

void sub_1DE0BD818(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(void))
{
  uint64_t v6 = (a4 >> 60) & 3;
  if (v6 == 2)
  {
    unint64_t v8 = a4 & 0xCFFFFFFFFFFFFFFFLL;
    a5();
    ((void (*)(uint64_t, unint64_t))a5)(a3, v8);
  }
  else if (v6 <= 1)
  {
    a5();
  }
}

void ProcessEvent.headlineEmbeddings.getter(_OWORD *a1@<X8>)
{
  ProcessEvent.newsUserInfo.getter((uint64_t)v4);
  if (v4[0] == 2)
  {
    long long v2 = xmmword_1DE486AA0;
    long long v3 = 0uLL;
  }
  else
  {
    long long v3 = v5;
    long long v2 = v6;
  }
  *a1 = v3;
  a1[1] = v2;
}

void destroy for EventUserInfo(uint64_t a1)
{
}

uint64_t initializeWithCopy for EventUserInfo(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  unint64_t v6 = *(void *)(a2 + 32);
  sub_1DE0BD818(v3, v4, v5, v6, (void (*)(void))sub_1DE0BD3DC);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  return a1;
}

uint64_t assignWithCopy for EventUserInfo(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  unint64_t v6 = *(void *)(a2 + 32);
  sub_1DE0BD818(v3, v4, v5, v6, (void (*)(void))sub_1DE0BD3DC);
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  unint64_t v10 = *(void *)(a1 + 32);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  sub_1DE0BD818(v7, v8, v9, v10, (void (*)(void))sub_1DE07110C);
  return a1;
}

uint64_t assignWithTake for EventUserInfo(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  unint64_t v6 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  sub_1DE0BD818(v3, v5, v4, v6, (void (*)(void))sub_1DE07110C);
  return a1;
}

uint64_t getEnumTagSinglePayload for EventUserInfo(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[40]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for EventUserInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)double result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(unsigned char *)double result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventUserInfo()
{
  return &type metadata for EventUserInfo;
}

uint64_t sub_1DE0BDB4C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 11) {
    return sub_1DE0BDB60(a1, a2);
  }
  return a1;
}

uint64_t sub_1DE0BDB60(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1DE07110C(a1, a2);
  }
  return a1;
}

uint64_t sub_1DE0BDB74(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4A9C8], qword_1EABA23C0, MEMORY[0x1E4F4A9C0]);
}

uint64_t static WidgetExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0A08, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EABA23C0, a1);
}

uint64_t static WidgetExposureEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_1DE0BDBDC(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4AAB0], qword_1EABA23D8, MEMORY[0x1E4F4AAA0]);
}

uint64_t static WidgetExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0A10, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EABA23D8, a1);
}

uint64_t sub_1DE0BDC3C()
{
  uint64_t v0 = sub_1DE47F020();
  __swift_allocate_value_buffer(v0, qword_1EABA23F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EABA23F0);
  return sub_1DE47F010();
}

uint64_t static WidgetExposureEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0A18, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA23F0, a1);
}

uint64_t WidgetExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084((uint64_t (*)(void))sub_1DE04D618, a1);
}

uint64_t WidgetExposureEvent.eventData.setter(uint64_t a1)
{
  sub_1DE04D618();
  BOOL v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*WidgetExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t WidgetExposureEvent.exposureData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetExposureEvent(0) + 20);
  sub_1DE0BEA04(0, &qword_1EABA2408, (void (*)(void))sub_1DE0BDE30, (void (*)(void))sub_1DE0BDE84);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for WidgetExposureEvent(uint64_t a1)
{
  return sub_1DE04E1D0(a1, (uint64_t *)&unk_1EABA2478);
}

unint64_t sub_1DE0BDE30()
{
  unint64_t result = qword_1EABA2410;
  if (!qword_1EABA2410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2410);
  }
  return result;
}

unint64_t sub_1DE0BDE84()
{
  unint64_t result = qword_1EABA2418;
  if (!qword_1EABA2418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2418);
  }
  return result;
}

uint64_t WidgetExposureEvent.exposureData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetExposureEvent(0) + 20);
  sub_1DE0BEA04(0, &qword_1EABA2408, (void (*)(void))sub_1DE0BDE30, (void (*)(void))sub_1DE0BDE84);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WidgetExposureEvent.exposureData.modify())()
{
  return nullsub_1;
}

uint64_t WidgetExposureEvent.groupDataList.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetExposureEvent(0) + 24);
  sub_1DE0BEA04(0, &qword_1EABA2420, (void (*)(void))sub_1DE0BE080, (void (*)(void))sub_1DE0BE0D4);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE0BE080()
{
  unint64_t result = qword_1EABA2428;
  if (!qword_1EABA2428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2428);
  }
  return result;
}

unint64_t sub_1DE0BE0D4()
{
  unint64_t result = qword_1EABA2430;
  if (!qword_1EABA2430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2430);
  }
  return result;
}

uint64_t WidgetExposureEvent.groupDataList.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetExposureEvent(0) + 24);
  sub_1DE0BEA04(0, &qword_1EABA2420, (void (*)(void))sub_1DE0BE080, (void (*)(void))sub_1DE0BE0D4);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WidgetExposureEvent.groupDataList.modify())()
{
  return nullsub_1;
}

uint64_t WidgetExposureEvent.personalizationFeatureCTRDataList.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetExposureEvent(0) + 28);
  sub_1DE0BEA04(0, &qword_1EABA2438, (void (*)(void))sub_1DE0BE2D0, (void (*)(void))sub_1DE0BE324);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE0BE2D0()
{
  unint64_t result = qword_1EABA2440;
  if (!qword_1EABA2440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2440);
  }
  return result;
}

unint64_t sub_1DE0BE324()
{
  unint64_t result = qword_1EABA2448;
  if (!qword_1EABA2448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2448);
  }
  return result;
}

uint64_t WidgetExposureEvent.personalizationFeatureCTRDataList.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetExposureEvent(0) + 28);
  sub_1DE0BEA04(0, &qword_1EABA2438, (void (*)(void))sub_1DE0BE2D0, (void (*)(void))sub_1DE0BE324);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WidgetExposureEvent.personalizationFeatureCTRDataList.modify())()
{
  return nullsub_1;
}

uint64_t WidgetExposureEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetExposureEvent(0) + 32);
  sub_1DE0BEA04(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t WidgetExposureEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetExposureEvent(0) + 32);
  sub_1DE0BEA04(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WidgetExposureEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t WidgetExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE0BF170(type metadata accessor for WidgetExposureEvent, (uint64_t (*)(void))sub_1DE04D7B8, a1);
}

uint64_t WidgetExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetExposureEvent(0) + 36);
  sub_1DE04D7B8();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WidgetExposureEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t WidgetExposureEvent.typeData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetExposureEvent(0) + 40);
  sub_1DE0BEA04(0, &qword_1EABA2450, (void (*)(void))sub_1DE0BE7B4, (void (*)(void))sub_1DE0BE808);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE0BE7B4()
{
  unint64_t result = qword_1EBECBC98;
  if (!qword_1EBECBC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBECBC98);
  }
  return result;
}

unint64_t sub_1DE0BE808()
{
  unint64_t result = qword_1EBECBC90;
  if (!qword_1EBECBC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBECBC90);
  }
  return result;
}

uint64_t WidgetExposureEvent.typeData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetExposureEvent(0) + 40);
  sub_1DE0BEA04(0, &qword_1EABA2450, (void (*)(void))sub_1DE0BE7B4, (void (*)(void))sub_1DE0BE808);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WidgetExposureEvent.typeData.modify())()
{
  return nullsub_1;
}

uint64_t WidgetExposureEvent.locationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetExposureEvent(0) + 44);
  sub_1DE0BEA04(0, &qword_1EABA2458, (void (*)(void))sub_1DE0BEA80, (void (*)(void))sub_1DE0BEAD4);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_1DE0BEA04(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_1DE47ECA0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1DE0BEA80()
{
  unint64_t result = qword_1EBECBDC8;
  if (!qword_1EBECBDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBECBDC8);
  }
  return result;
}

unint64_t sub_1DE0BEAD4()
{
  unint64_t result = qword_1EBECBDC0;
  if (!qword_1EBECBDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBECBDC0);
  }
  return result;
}

uint64_t WidgetExposureEvent.locationData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetExposureEvent(0) + 44);
  sub_1DE0BEA04(0, &qword_1EABA2458, (void (*)(void))sub_1DE0BEA80, (void (*)(void))sub_1DE0BEAD4);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WidgetExposureEvent.locationData.modify())()
{
  return nullsub_1;
}

uint64_t WidgetExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for WidgetExposureEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_1DE0BEA04(0, &qword_1EABA2408, (void (*)(void))sub_1DE0BDE30, (void (*)(void))sub_1DE0BDE84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_1DE0BEA04(0, &qword_1EABA2420, (void (*)(void))sub_1DE0BE080, (void (*)(void))sub_1DE0BE0D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_1DE0BEA04(0, &qword_1EABA2438, (void (*)(void))sub_1DE0BE2D0, (void (*)(void))sub_1DE0BE324);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + v4[8];
  sub_1DE0BEA04(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v2, v12);
  uint64_t v13 = a1 + v4[9];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v2, v14);
  uint64_t v15 = a1 + v4[10];
  sub_1DE0BEA04(0, &qword_1EABA2450, (void (*)(void))sub_1DE0BE7B4, (void (*)(void))sub_1DE0BE808);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v2, v16);
  uint64_t v17 = a1 + v4[11];
  sub_1DE0BEA04(0, &qword_1EABA2458, (void (*)(void))sub_1DE0BEA80, (void (*)(void))sub_1DE0BEAD4);
  int v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104);

  return v19(v17, v2, v18);
}

uint64_t WidgetExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084(MEMORY[0x1E4F4AB70], a1);
}

uint64_t WidgetExposureEvent.Model.exposureData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WidgetExposureEvent.Model(0) + 20);
  uint64_t v4 = *(void *)(v3 + 8);
  char v5 = *(unsigned char *)(v3 + 32);
  uint64_t v6 = *(void *)(v3 + 40);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v3 + 16);
  *(unsigned char *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for WidgetExposureEvent.Model(uint64_t a1)
{
  return sub_1DE04E1D0(a1, (uint64_t *)&unk_1EABA2488);
}

uint64_t WidgetExposureEvent.Model.groupDataList.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for WidgetExposureEvent.Model(0) + 24));

  return swift_bridgeObjectRetain();
}

uint64_t WidgetExposureEvent.Model.personalizationFeatureCTRDataList.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for WidgetExposureEvent.Model(0) + 28));

  return swift_bridgeObjectRetain();
}

uint64_t WidgetExposureEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for WidgetExposureEvent.Model(0) + 32));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t WidgetExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE0BF170(type metadata accessor for WidgetExposureEvent.Model, MEMORY[0x1E4F4AB90], a1);
}

uint64_t sub_1DE0BF170@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 36);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t WidgetExposureEvent.Model.typeData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for WidgetExposureEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t WidgetExposureEvent.Model.locationData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for WidgetExposureEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 44));
  return result;
}

uint64_t WidgetExposureEvent.Model.init(eventData:exposureData:groupDataList:personalizationFeatureCTRDataList:viewData:timedData:typeData:locationData:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>)
{
  long long v26 = *a2;
  uint64_t v11 = *((void *)a2 + 2);
  uint64_t v12 = *((void *)a2 + 3);
  char v13 = *((unsigned char *)a2 + 32);
  uint64_t v14 = *((void *)a2 + 5);
  uint64_t v15 = *a3;
  uint64_t v16 = *a4;
  uint64_t v17 = *a5;
  uint64_t v18 = a5[1];
  __int16 v27 = *((_WORD *)a5 + 8);
  char v28 = *a7;
  char v29 = *a8;
  uint64_t v19 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(a9, a1, v19);
  uint64_t v20 = (int *)type metadata accessor for WidgetExposureEvent.Model(0);
  uint64_t v21 = a9 + v20[5];
  *(_OWORD *)uint64_t v21 = v26;
  *(void *)(v21 + 16) = v11;
  *(void *)(v21 + 24) = v12;
  *(unsigned char *)(v21 + 32) = v13;
  *(void *)(v21 + 40) = v14;
  *(void *)(a9 + v20[6]) = v15;
  *(void *)(a9 + v20[7]) = v16;
  uint64_t v22 = a9 + v20[8];
  *(void *)uint64_t v22 = v17;
  *(void *)(v22 + 8) = v18;
  *(_WORD *)(v22 + 16) = v27;
  uint64_t v23 = a9 + v20[9];
  uint64_t v24 = sub_1DE47F350();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(v23, a6, v24);
  *(unsigned char *)(a9 + v20[10]) = v28;
  *(unsigned char *)(a9 + v20[11]) = v29;
  return result;
}

uint64_t sub_1DE0BF3D0(char a1)
{
  uint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x657275736F707865;
      break;
    case 2:
      uint64_t result = 0x74614470756F7267;
      break;
    case 3:
      uint64_t result = 0xD000000000000021;
      break;
    case 4:
      unsigned int v3 = 2003134838;
      goto LABEL_8;
    case 5:
      uint64_t result = 0x74614464656D6974;
      break;
    case 6:
      unsigned int v3 = 1701869940;
LABEL_8:
      uint64_t result = v3 | 0x6174614400000000;
      break;
    case 7:
      uint64_t result = 0x6E6F697461636F6CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE0BF4E0()
{
  return sub_1DE0BF3D0(*v0);
}

uint64_t sub_1DE0BF4E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE0C371C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE0BF510(uint64_t a1)
{
  unint64_t v2 = sub_1DE0BF960();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE0BF54C(uint64_t a1)
{
  unint64_t v2 = sub_1DE0BF960();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t WidgetExposureEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1DE0C0154(0, &qword_1EABA2460, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0BF960();
  sub_1DE480790();
  LOBYTE(v21) = 0;
  sub_1DE47F330();
  sub_1DE04D884(&qword_1EBEC2030, MEMORY[0x1E4F4AB70]);
  sub_1DE4805C0();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for WidgetExposureEvent.Model(0);
    uint64_t v11 = (uint64_t *)(v3 + v10[5]);
    uint64_t v12 = v11[1];
    char v13 = *((unsigned char *)v11 + 32);
    uint64_t v14 = v11[5];
    uint64_t v21 = *v11;
    uint64_t v22 = v12;
    long long v23 = *((_OWORD *)v11 + 1);
    char v24 = v13;
    uint64_t v25 = v14;
    char v20 = 1;
    sub_1DE0BDE84();
    sub_1DE4805C0();
    uint64_t v21 = *(void *)(v3 + v10[6]);
    char v20 = 2;
    sub_1DE0BE0D4();
    sub_1DE4805C0();
    uint64_t v21 = *(void *)(v3 + v10[7]);
    char v20 = 3;
    sub_1DE0BE324();
    sub_1DE4805C0();
    uint64_t v15 = (uint64_t *)(v3 + v10[8]);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    LOWORD(v15) = *((_WORD *)v15 + 8);
    uint64_t v21 = v16;
    uint64_t v22 = v17;
    LOWORD(v23) = (_WORD)v15;
    char v20 = 4;
    sub_1DE05410C();
    sub_1DE4805C0();
    LOBYTE(v21) = 5;
    sub_1DE47F350();
    sub_1DE04D884(&qword_1EBEC2040, MEMORY[0x1E4F4AB90]);
    sub_1DE4805C0();
    LOBYTE(v21) = *(unsigned char *)(v3 + v10[10]);
    char v20 = 6;
    sub_1DE0BE808();
    sub_1DE4805C0();
    LOBYTE(v21) = *(unsigned char *)(v3 + v10[11]);
    char v20 = 7;
    sub_1DE0BEAD4();
    sub_1DE4805C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DE0BF960()
{
  unint64_t result = qword_1EABA2468;
  if (!qword_1EABA2468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2468);
  }
  return result;
}

uint64_t WidgetExposureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v34 = sub_1DE47F350();
  uint64_t v27 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DE47F330();
  uint64_t v30 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE0C0154(0, &qword_1EABA2470, MEMORY[0x1E4FBBDC0]);
  uint64_t v29 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v26 - v10;
  uint64_t v35 = type metadata accessor for WidgetExposureEvent.Model(0);
  MEMORY[0x1F4188790](v35);
  uint64_t v31 = a1;
  long long v32 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0BF960();
  uint64_t v13 = v33;
  sub_1DE480770();
  uint64_t v28 = v5;
  if (v13) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  }
  LOBYTE(v36) = 0;
  sub_1DE04D884(&qword_1EBEC2038, MEMORY[0x1E4F4AB70]);
  sub_1DE4804E0();
  uint64_t v14 = v32;
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v32, v7, v5);
  char v41 = 1;
  sub_1DE0BDE30();
  sub_1DE4804E0();
  uint64_t v15 = v37;
  char v16 = v39;
  uint64_t v17 = v40;
  uint64_t v18 = (int *)v35;
  uint64_t v19 = &v14[*(int *)(v35 + 20)];
  *(void *)uint64_t v19 = v36;
  *((void *)v19 + 1) = v15;
  *((_OWORD *)v19 + 1) = v38;
  v19[32] = v16;
  *((void *)v19 + 5) = v17;
  char v41 = 2;
  sub_1DE0BE080();
  sub_1DE4804E0();
  *(void *)&v14[v18[6]] = v36;
  char v41 = 3;
  sub_1DE0BE2D0();
  sub_1DE4804E0();
  *(void *)&v14[v18[7]] = v36;
  char v41 = 4;
  sub_1DE0540B8();
  sub_1DE4804E0();
  uint64_t v20 = v37;
  __int16 v21 = v38;
  uint64_t v22 = &v14[v18[8]];
  *(void *)uint64_t v22 = v36;
  *((void *)v22 + 1) = v20;
  *((_WORD *)v22 + 8) = v21;
  LOBYTE(v36) = 5;
  sub_1DE04D884((unint64_t *)&unk_1EBEC2048, MEMORY[0x1E4F4AB90]);
  uint64_t v23 = (uint64_t)v14;
  uint64_t v24 = v34;
  sub_1DE4804E0();
  (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v23 + v18[9], v4, v24);
  char v41 = 6;
  sub_1DE0BE7B4();
  sub_1DE4804E0();
  *(unsigned char *)(v23 + v18[10]) = v36;
  char v41 = 7;
  sub_1DE0BEA80();
  sub_1DE4804E0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v29);
  *(unsigned char *)(v23 + v18[11]) = v36;
  sub_1DE0C01B8(v23, v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  return sub_1DE0C021C(v23);
}

void sub_1DE0C0154(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE0BF960();
    unint64_t v7 = a3(a1, &type metadata for WidgetExposureEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DE0C01B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DE0C021C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WidgetExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DE0C0278@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return WidgetExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DE0C0290(void *a1)
{
  return WidgetExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DE0C02A8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0A08, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EABA23C0, a1);
}

uint64_t sub_1DE0C02E0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0A10, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EABA23D8, a1);
}

uint64_t sub_1DE0C0318@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0A18, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA23F0, a1);
}

uint64_t sub_1DE0C0350@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_1DE0BEA04(0, &qword_1EABA2408, (void (*)(void))sub_1DE0BDE30, (void (*)(void))sub_1DE0BDE84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_1DE0BEA04(0, &qword_1EABA2420, (void (*)(void))sub_1DE0BE080, (void (*)(void))sub_1DE0BE0D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_1DE0BEA04(0, &qword_1EABA2438, (void (*)(void))sub_1DE0BE2D0, (void (*)(void))sub_1DE0BE324);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  sub_1DE0BEA04(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v4, v13);
  uint64_t v14 = a2 + a1[9];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v4, v15);
  uint64_t v16 = a2 + a1[10];
  sub_1DE0BEA04(0, &qword_1EABA2450, (void (*)(void))sub_1DE0BE7B4, (void (*)(void))sub_1DE0BE808);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v4, v17);
  uint64_t v18 = a2 + a1[11];
  sub_1DE0BEA04(0, &qword_1EABA2458, (void (*)(void))sub_1DE0BEA80, (void (*)(void))sub_1DE0BEAD4);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104);

  return v20(v18, v4, v19);
}

uint64_t *initializeBufferWithCopyOfBuffer for WidgetExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v36 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DE04D618();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DE0BEA04(0, &qword_1EABA2408, (void (*)(void))sub_1DE0BDE30, (void (*)(void))sub_1DE0BDE84);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_1DE0BEA04(0, &qword_1EABA2420, (void (*)(void))sub_1DE0BE080, (void (*)(void))sub_1DE0BE0D4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_1DE0BEA04(0, &qword_1EABA2438, (void (*)(void))sub_1DE0BE2D0, (void (*)(void))sub_1DE0BE324);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    __int16 v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_1DE0BEA04(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_1DE04D7B8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    sub_1DE0BEA04(0, &qword_1EABA2450, (void (*)(void))sub_1DE0BE7B4, (void (*)(void))sub_1DE0BE808);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    uint64_t v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    sub_1DE0BEA04(0, &qword_1EABA2458, (void (*)(void))sub_1DE0BEA80, (void (*)(void))sub_1DE0BEAD4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
  }
  return a1;
}

uint64_t destroy for WidgetExposureEvent(uint64_t a1, int *a2)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_1DE0BEA04(0, &qword_1EABA2408, (void (*)(void))sub_1DE0BDE30, (void (*)(void))sub_1DE0BDE84);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_1DE0BEA04(0, &qword_1EABA2420, (void (*)(void))sub_1DE0BE080, (void (*)(void))sub_1DE0BE0D4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_1DE0BEA04(0, &qword_1EABA2438, (void (*)(void))sub_1DE0BE2D0, (void (*)(void))sub_1DE0BE324);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_1DE0BEA04(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_1DE0BEA04(0, &qword_1EABA2450, (void (*)(void))sub_1DE0BE7B4, (void (*)(void))sub_1DE0BE808);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_1DE0BEA04(0, &qword_1EABA2458, (void (*)(void))sub_1DE0BEA80, (void (*)(void))sub_1DE0BEAD4);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8);

  return v19(v17, v18);
}

uint64_t initializeWithCopy for WidgetExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE0BEA04(0, &qword_1EABA2408, (void (*)(void))sub_1DE0BDE30, (void (*)(void))sub_1DE0BDE84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0BEA04(0, &qword_1EABA2420, (void (*)(void))sub_1DE0BE080, (void (*)(void))sub_1DE0BE0D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0BEA04(0, &qword_1EABA2438, (void (*)(void))sub_1DE0BE2D0, (void (*)(void))sub_1DE0BE324);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0BEA04(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE0BEA04(0, &qword_1EABA2450, (void (*)(void))sub_1DE0BE7B4, (void (*)(void))sub_1DE0BE808);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE0BEA04(0, &qword_1EABA2458, (void (*)(void))sub_1DE0BEA80, (void (*)(void))sub_1DE0BEAD4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  return a1;
}

uint64_t assignWithCopy for WidgetExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE0BEA04(0, &qword_1EABA2408, (void (*)(void))sub_1DE0BDE30, (void (*)(void))sub_1DE0BDE84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0BEA04(0, &qword_1EABA2420, (void (*)(void))sub_1DE0BE080, (void (*)(void))sub_1DE0BE0D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0BEA04(0, &qword_1EABA2438, (void (*)(void))sub_1DE0BE2D0, (void (*)(void))sub_1DE0BE324);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0BEA04(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE0BEA04(0, &qword_1EABA2450, (void (*)(void))sub_1DE0BE7B4, (void (*)(void))sub_1DE0BE808);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE0BEA04(0, &qword_1EABA2458, (void (*)(void))sub_1DE0BEA80, (void (*)(void))sub_1DE0BEAD4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

uint64_t initializeWithTake for WidgetExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE0BEA04(0, &qword_1EABA2408, (void (*)(void))sub_1DE0BDE30, (void (*)(void))sub_1DE0BDE84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0BEA04(0, &qword_1EABA2420, (void (*)(void))sub_1DE0BE080, (void (*)(void))sub_1DE0BE0D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0BEA04(0, &qword_1EABA2438, (void (*)(void))sub_1DE0BE2D0, (void (*)(void))sub_1DE0BE324);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0BEA04(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE0BEA04(0, &qword_1EABA2450, (void (*)(void))sub_1DE0BE7B4, (void (*)(void))sub_1DE0BE808);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE0BEA04(0, &qword_1EABA2458, (void (*)(void))sub_1DE0BEA80, (void (*)(void))sub_1DE0BEAD4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

uint64_t assignWithTake for WidgetExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE0BEA04(0, &qword_1EABA2408, (void (*)(void))sub_1DE0BDE30, (void (*)(void))sub_1DE0BDE84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0BEA04(0, &qword_1EABA2420, (void (*)(void))sub_1DE0BE080, (void (*)(void))sub_1DE0BE0D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0BEA04(0, &qword_1EABA2438, (void (*)(void))sub_1DE0BE2D0, (void (*)(void))sub_1DE0BE324);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0BEA04(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE0BEA04(0, &qword_1EABA2450, (void (*)(void))sub_1DE0BE7B4, (void (*)(void))sub_1DE0BE808);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE0BEA04(0, &qword_1EABA2458, (void (*)(void))sub_1DE0BEA80, (void (*)(void))sub_1DE0BEAD4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE0C1DA0);
}

uint64_t sub_1DE0C1DA0(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_16:
    return v9(v10, a2, v8);
  }
  sub_1DE0BEA04(0, &qword_1EABA2408, (void (*)(void))sub_1DE0BDE30, (void (*)(void))sub_1DE0BDE84);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_15:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_16;
  }
  sub_1DE0BEA04(0, &qword_1EABA2420, (void (*)(void))sub_1DE0BE080, (void (*)(void))sub_1DE0BE0D4);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_15;
  }
  sub_1DE0BEA04(0, &qword_1EABA2438, (void (*)(void))sub_1DE0BE2D0, (void (*)(void))sub_1DE0BE324);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_15;
  }
  sub_1DE0BEA04(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_15;
  }
  sub_1DE04D7B8();
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_15;
  }
  sub_1DE0BEA04(0, &qword_1EABA2450, (void (*)(void))sub_1DE0BE7B4, (void (*)(void))sub_1DE0BE808);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_15;
  }
  sub_1DE0BEA04(0, &qword_1EABA2458, (void (*)(void))sub_1DE0BEA80, (void (*)(void))sub_1DE0BEAD4);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48);
  uint64_t v22 = v20;
  uint64_t v23 = a1 + a3[11];

  return v21(v23, a2, v22);
}

uint64_t storeEnumTagSinglePayload for WidgetExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE0C21CC);
}

uint64_t sub_1DE0C21CC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_1DE04D618();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_16:
    return v11(v12, a2, a2, v10);
  }
  sub_1DE0BEA04(0, &qword_1EABA2408, (void (*)(void))sub_1DE0BDE30, (void (*)(void))sub_1DE0BDE84);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_15:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_16;
  }
  sub_1DE0BEA04(0, &qword_1EABA2420, (void (*)(void))sub_1DE0BE080, (void (*)(void))sub_1DE0BE0D4);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_15;
  }
  sub_1DE0BEA04(0, &qword_1EABA2438, (void (*)(void))sub_1DE0BE2D0, (void (*)(void))sub_1DE0BE324);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_15;
  }
  sub_1DE0BEA04(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_15;
  }
  sub_1DE04D7B8();
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_15;
  }
  sub_1DE0BEA04(0, &qword_1EABA2450, (void (*)(void))sub_1DE0BE7B4, (void (*)(void))sub_1DE0BE808);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_15;
  }
  sub_1DE0BEA04(0, &qword_1EABA2458, (void (*)(void))sub_1DE0BEA80, (void (*)(void))sub_1DE0BEAD4);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  uint64_t v24 = v22;
  uint64_t v25 = a1 + a4[11];

  return v23(v25, a2, a2, v24);
}

void sub_1DE0C25F0()
{
  sub_1DE04D618();
  if (v0 <= 0x3F)
  {
    sub_1DE0BEA04(319, &qword_1EABA2408, (void (*)(void))sub_1DE0BDE30, (void (*)(void))sub_1DE0BDE84);
    if (v1 <= 0x3F)
    {
      sub_1DE0BEA04(319, &qword_1EABA2420, (void (*)(void))sub_1DE0BE080, (void (*)(void))sub_1DE0BE0D4);
      if (v2 <= 0x3F)
      {
        sub_1DE0BEA04(319, &qword_1EABA2438, (void (*)(void))sub_1DE0BE2D0, (void (*)(void))sub_1DE0BE324);
        if (v3 <= 0x3F)
        {
          sub_1DE0BEA04(319, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
          if (v4 <= 0x3F)
          {
            sub_1DE04D7B8();
            if (v5 <= 0x3F)
            {
              sub_1DE0BEA04(319, &qword_1EABA2450, (void (*)(void))sub_1DE0BE7B4, (void (*)(void))sub_1DE0BE808);
              if (v6 <= 0x3F)
              {
                sub_1DE0BEA04(319, &qword_1EABA2458, (void (*)(void))sub_1DE0BEA80, (void (*)(void))sub_1DE0BEAD4);
                if (v7 <= 0x3F) {
                  swift_initStructMetadata();
                }
              }
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for WidgetExposureEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (void *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DE47F330();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)uint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    *((_OWORD *)v10 + 1) = *((_OWORD *)v11 + 1);
    v10[32] = v11[32];
    *((void *)v10 + 5) = *((void *)v11 + 5);
    *(void *)((char *)a1 + v9) = *(void *)((char *)a2 + v9);
    uint64_t v13 = a3[8];
    *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = *(void *)v15;
    uint64_t v17 = *((void *)v15 + 1);
    v14[16] = v15[16];
    v14[17] = v15[17];
    uint64_t v18 = a3[9];
    uint64_t v24 = (char *)a2 + v18;
    uint64_t v25 = (char *)a1 + v18;
    *(void *)uint64_t v14 = v16;
    *((void *)v14 + 1) = v17;
    uint64_t v19 = sub_1DE47F350();
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20(v25, v24, v19);
    uint64_t v21 = a3[11];
    *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    *((unsigned char *)a1 + v21) = *((unsigned char *)a2 + v21);
  }
  return a1;
}

uint64_t destroy for WidgetExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 36);
  uint64_t v6 = sub_1DE47F350();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for WidgetExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  uint64_t v11 = *(void *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = v11;
  *(_OWORD *)(v9 + 16) = *(_OWORD *)(v10 + 16);
  *(unsigned char *)(v9 + 32) = *(unsigned char *)(v10 + 32);
  *(void *)(v9 + 40) = *(void *)(v10 + 40);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v12 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v15 = *v14;
  uint64_t v16 = v14[1];
  *(unsigned char *)(v13 + 16) = *((unsigned char *)v14 + 16);
  *(unsigned char *)(v13 + 17) = *((unsigned char *)v14 + 17);
  uint64_t v17 = a3[9];
  uint64_t v22 = a2 + v17;
  uint64_t v23 = a1 + v17;
  *(void *)uint64_t v13 = v15;
  *(void *)(v13 + 8) = v16;
  uint64_t v18 = sub_1DE47F350();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19(v23, v22, v18);
  uint64_t v20 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v20) = *(unsigned char *)(a2 + v20);
  return a1;
}

uint64_t assignWithCopy for WidgetExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[8];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)uint64_t v11 = *(void *)(a2 + v10);
  *(void *)(v11 + 8) = *(void *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v11 + 16) = *(unsigned char *)(v12 + 16);
  *(unsigned char *)(v11 + 17) = *(unsigned char *)(v12 + 17);
  uint64_t v13 = a3[9];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

uint64_t initializeWithTake for WidgetExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (_OWORD *)(a1 + v7);
  uint64_t v10 = (_OWORD *)(a2 + v7);
  long long v11 = v10[1];
  _OWORD *v9 = *v10;
  v9[1] = v11;
  v9[2] = v10[2];
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v12 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_WORD *)(v13 + 16) = *(_WORD *)(v14 + 16);
  uint64_t v15 = a3[9];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v19) = *(unsigned char *)(a2 + v19);
  return a1;
}

uint64_t assignWithTake for WidgetExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v8 + 16) = *(_OWORD *)(v9 + 16);
  *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[8];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)(a2 + v11 + 8);
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(void *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  *(_WORD *)(v12 + 16) = *(_WORD *)(v13 + 16);
  uint64_t v15 = a3[9];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v19) = *(unsigned char *)(a2 + v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE0C319C);
}

uint64_t sub_1DE0C319C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DE47F330();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_1DE47F350();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 36);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for WidgetExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE0C32E0);
}

uint64_t sub_1DE0C32E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1DE47F330();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_1DE47F350();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 36);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_1DE0C3410()
{
  uint64_t result = sub_1DE47F330();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1DE47F350();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WidgetExposureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE0C35DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetExposureEvent.Model.CodingKeys()
{
  return &type metadata for WidgetExposureEvent.Model.CodingKeys;
}

unint64_t sub_1DE0C3618()
{
  unint64_t result = qword_1EABA2498;
  if (!qword_1EABA2498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2498);
  }
  return result;
}

unint64_t sub_1DE0C3670()
{
  unint64_t result = qword_1EABA24A0;
  if (!qword_1EABA24A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA24A0);
  }
  return result;
}

unint64_t sub_1DE0C36C8()
{
  unint64_t result = qword_1EABA24A8;
  if (!qword_1EABA24A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA24A8);
  }
  return result;
}

uint64_t sub_1DE0C371C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657275736F707865 && a2 == 0xEC00000061746144 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xED00007473694C61 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001DE4BEA60 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6174614465707974 && a2 == 0xE800000000000000 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xEC00000061746144)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_1DE480660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t static AppData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t AppData.appVersion.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppData.appVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *BOOL v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AppData.appVersion.modify())()
{
  return nullsub_1;
}

uint64_t AppData.appBuildNumber.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppData.appBuildNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*AppData.appBuildNumber.modify())()
{
  return nullsub_1;
}

NewsAnalytics::AppData __swiftcall AppData.init(appVersion:appBuildNumber:)(Swift::String appVersion, Swift::String appBuildNumber)
{
  *uint64_t v2 = appVersion;
  v2[1] = appBuildNumber;
  result.appBuildNumber = appBuildNumber;
  result.appVersion = appVersion;
  return result;
}

BOOL sub_1DE0C3BE4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1DE0C3BFC()
{
  if (*v0) {
    return 0x646C697542707061;
  }
  else {
    return 0x6973726556707061;
  }
}

uint64_t sub_1DE0C3C48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE0C4614(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DE0C3C70(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DE0C3C7C(uint64_t a1)
{
  unint64_t v2 = sub_1DE0C3E80();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE0C3CB8(uint64_t a1)
{
  unint64_t v2 = sub_1DE0C3E80();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AppData.encode(to:)(void *a1)
{
  sub_1DE0C40EC(0, &qword_1EBEC76C8, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  v11[1] = *(void *)(v1 + 24);
  void v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0C3E80();
  sub_1DE480790();
  char v13 = 0;
  uint64_t v9 = v11[3];
  sub_1DE480580();
  if (!v9)
  {
    char v12 = 1;
    sub_1DE480580();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DE0C3E80()
{
  unint64_t result = qword_1EBEC70E0;
  if (!qword_1EBEC70E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC70E0);
  }
  return result;
}

uint64_t AppData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1DE0C40EC(0, &qword_1EBEC7580, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0C3E80();
  sub_1DE480770();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v21 = 0;
  uint64_t v10 = sub_1DE4804A0();
  uint64_t v12 = v11;
  char v20 = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1DE4804A0();
  uint64_t v15 = v14;
  uint64_t v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v19 = v13;
  v16(v9, v6);
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v19;
  a2[3] = v15;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1DE0C40EC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE0C3E80();
    unint64_t v7 = a3(a1, &type metadata for AppData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1DE0C4158()
{
  unint64_t result = qword_1EBEC7100;
  if (!qword_1EBEC7100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC7100);
  }
  return result;
}

uint64_t sub_1DE0C41AC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return AppData.init(from:)(a1, a2);
}

uint64_t sub_1DE0C41C4(void *a1)
{
  return AppData.encode(to:)(a1);
}

void *initializeWithCopy for AppData(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for AppData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for AppData(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IssueData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IssueData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppData()
{
  return &type metadata for AppData;
}

uint64_t getEnumTagSinglePayload for PuzzleLayout(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AppData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE0C44C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_1DE0C44F0(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for AppData.CodingKeys()
{
  return &type metadata for AppData.CodingKeys;
}

unint64_t sub_1DE0C4510()
{
  unint64_t result = qword_1EABA24B0;
  if (!qword_1EABA24B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA24B0);
  }
  return result;
}

unint64_t sub_1DE0C4568()
{
  unint64_t result = qword_1EBEC70F0;
  if (!qword_1EBEC70F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC70F0);
  }
  return result;
}

unint64_t sub_1DE0C45C0()
{
  unint64_t result = qword_1EBEC70E8;
  if (!qword_1EBEC70E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC70E8);
  }
  return result;
}

uint64_t sub_1DE0C4614(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6973726556707061 && a2 == 0xEA00000000006E6FLL;
  if (v2 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646C697542707061 && a2 == 0xEE007265626D754ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1DE480660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

size_t sub_1DE0C4738(size_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  int v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  size_t v6 = result;
  unint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= v3[3] >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v11 = v4 + v2;
  }
  else {
    int64_t v11 = v4;
  }
  unint64_t result = sub_1DE13BE10(result, v11, 1, v3);
  int v3 = (void *)result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  uint64_t v7 = (v3[3] >> 1) - v3[2];
  unint64_t result = sub_1DE47E480();
  if (v7 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  unint64_t result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    unint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v8 = v3[2];
  BOOL v9 = __OFADD__(v8, v2);
  uint64_t v10 = v8 + v2;
  if (!v9)
  {
    v3[2] = v10;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1DE0C4860()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t type metadata accessor for FeedViewEventQueryItemsGenerator()
{
  return self;
}

void sub_1DE0C4894(uint64_t a1)
{
}

void *sub_1DE0C48B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = sub_1DE47E480();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)v26 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)v26 - v16;
  if (a3)
  {
    sub_1DE47E450();
    uint64_t v18 = (void *)sub_1DE13BE10(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v20 = v18[2];
    unint64_t v19 = v18[3];
    if (v20 >= v19 >> 1) {
      uint64_t v18 = (void *)sub_1DE13BE10(v19 > 1, v20 + 1, 1, v18);
    }
    v18[2] = v20 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))((unint64_t)v18+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v20, v17, v8);
  }
  else
  {
    uint64_t v18 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v27 = a4;
  uint64_t v28 = a5;
  v26[0] = 0x686372616573;
  v26[1] = 0xE600000000000000;
  sub_1DE0C54F8();
  if ((sub_1DE480280() & 1) != 0
    || (uint64_t v27 = a4, v28 = a5, strcpy((char *)v26, "searchSeeMore"), HIWORD(v26[1]) = -4864, (sub_1DE480280() & 1) != 0))
  {
    sub_1DE47E450();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v18 = (void *)sub_1DE13BE10(0, v18[2] + 1, 1, v18);
    }
    unint64_t v22 = v18[2];
    unint64_t v21 = v18[3];
    if (v22 >= v21 >> 1) {
      uint64_t v18 = (void *)sub_1DE13BE10(v21 > 1, v22 + 1, 1, v18);
    }
    v18[2] = v22 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))((unint64_t)v18+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v22, v15, v8);
  }
  else
  {
    uint64_t v27 = a4;
    uint64_t v28 = a5;
    strcpy((char *)v26, "following");
    WORD1(v26[1]) = 0;
    HIDWORD(v26[1]) = -385875968;
    if (sub_1DE480280())
    {
      sub_1DE47E450();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v18 = (void *)sub_1DE13BE10(0, v18[2] + 1, 1, v18);
      }
      unint64_t v25 = v18[2];
      unint64_t v24 = v18[3];
      if (v25 >= v24 >> 1) {
        uint64_t v18 = (void *)sub_1DE13BE10(v24 > 1, v25 + 1, 1, v18);
      }
      v18[2] = v25 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))((unint64_t)v18+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v25, v12, v8);
    }
  }
  return v18;
}

void sub_1DE0C4CBC(uint64_t a1)
{
  uint64_t v2 = sub_1DE47E480();
  uint64_t v40 = *(void *)(v2 - 8);
  uint64_t v41 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v42 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FeedViewEvent.Model(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v43 = (uint64_t)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE0C5310();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DE47EBC0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v40 - v11;
  sub_1DE0C5368();
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  int v18 = swift_dynamicCast();
  unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  if (!v18)
  {
    v19(v8, 1, 1, v14);
    sub_1DE0C5498((uint64_t)v8, (uint64_t (*)(void))sub_1DE0C5310);
    sub_1DE0C53FC();
    swift_allocError();
    swift_willThrow();
    return;
  }
  v19(v8, 0, 1, v14);
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v8, v14);
  unint64_t v20 = (void *)sub_1DE47EB80();
  unint64_t v21 = v44;
  uint64_t v22 = sub_1DE47F160();
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);

    return;
  }
  uint64_t v24 = v22;
  unint64_t v25 = v23;

  sub_1DE47E3A0();
  swift_allocObject();
  sub_1DE47E390();
  sub_1DE0C5450(&qword_1EBEC2740, (void (*)(uint64_t))type metadata accessor for FeedViewEvent.Model);
  uint64_t v26 = v43;
  sub_1DE47E380();
  unint64_t v44 = v25;
  swift_release();
  uint64_t v27 = (unsigned __int8 *)(v26 + *(int *)(v4 + 24));
  unsigned int v28 = *v27;
  char v47 = *v27;
  if (FeedType.rawValue.getter() == 0x6C656E6E616863 && v29 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v30 = sub_1DE480660();
    swift_bridgeObjectRelease();
    if ((v30 & 1) == 0)
    {
      sub_1DE07110C(v24, v44);
      sub_1DE0C5498(v43, type metadata accessor for FeedViewEvent.Model);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      return;
    }
  }
  unsigned int v46 = v28;
  sub_1DE47E450();
  uint64_t v31 = (void *)sub_1DE13BE10(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v33 = v31[2];
  unint64_t v32 = v31[3];
  if (v33 >= v32 >> 1) {
    uint64_t v31 = (void *)sub_1DE13BE10(v32 > 1, v33 + 1, 1, v31);
  }
  v31[2] = v33 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v40 + 32))((unint64_t)v31+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(void *)(v40 + 72) * v33, v42, v41);
  uint64_t v45 = v31;
  uint64_t v34 = *((void *)v27 + 1);
  uint64_t v35 = *((void *)v27 + 2);
  swift_bridgeObjectRetain();
  uint64_t v36 = v43;
  uint64_t v37 = sub_1DE47F320();
  char v39 = sub_1DE0C48B4(v46, v34, v35, v37, v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DE0C4738((size_t)v39);
  sub_1DE07110C(v24, v44);
  sub_1DE0C5498(v36, type metadata accessor for FeedViewEvent.Model);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

void sub_1DE0C5310()
{
  if (!qword_1EBEC1DD8)
  {
    sub_1DE0C5368();
    unint64_t v0 = sub_1DE480220();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBEC1DD8);
    }
  }
}

void sub_1DE0C5368()
{
  if (!qword_1EBEC1DD0)
  {
    type metadata accessor for FeedViewEvent(255);
    sub_1DE0C5450(&qword_1EBEC2808, (void (*)(uint64_t))type metadata accessor for FeedViewEvent);
    unint64_t v0 = sub_1DE47EBC0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBEC1DD0);
    }
  }
}

unint64_t sub_1DE0C53FC()
{
  unint64_t result = qword_1EBEC6150;
  if (!qword_1EBEC6150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC6150);
  }
  return result;
}

uint64_t sub_1DE0C5450(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DE0C5498(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1DE0C54F8()
{
  unint64_t result = qword_1EBEC1BD8;
  if (!qword_1EBEC1BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC1BD8);
  }
  return result;
}

uint64_t sub_1DE0C554C(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4A9C8], qword_1EABA24B8, MEMORY[0x1E4F4A9C0]);
}

uint64_t static LiveActivitySubscriptionFailureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0A20, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EABA24B8, a1);
}

uint64_t static LiveActivitySubscriptionFailureEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_1DE0C55B4(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4AAB0], qword_1EABA24D0, MEMORY[0x1E4F4AAA0]);
}

uint64_t static LiveActivitySubscriptionFailureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0A28, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EABA24D0, a1);
}

uint64_t sub_1DE0C5614()
{
  uint64_t v0 = sub_1DE47F020();
  __swift_allocate_value_buffer(v0, qword_1EABA24E8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EABA24E8);
  return sub_1DE47F010();
}

uint64_t static LiveActivitySubscriptionFailureEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0A30, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA24E8, a1);
}

uint64_t LiveActivitySubscriptionFailureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084((uint64_t (*)(void))sub_1DE04D618, a1);
}

uint64_t LiveActivitySubscriptionFailureEvent.eventData.setter(uint64_t a1)
{
  sub_1DE04D618();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*LiveActivitySubscriptionFailureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t LiveActivitySubscriptionFailureEvent.liveActivityData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LiveActivitySubscriptionFailureEvent(0) + 20);
  sub_1DE0C60A0(0, &qword_1EABA2500, (void (*)(void))sub_1DE0C5808, (void (*)(void))sub_1DE0C585C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for LiveActivitySubscriptionFailureEvent(uint64_t a1)
{
  return sub_1DE04E1D0(a1, (uint64_t *)&unk_1EABA2578);
}

unint64_t sub_1DE0C5808()
{
  unint64_t result = qword_1EABA2508;
  if (!qword_1EABA2508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2508);
  }
  return result;
}

unint64_t sub_1DE0C585C()
{
  unint64_t result = qword_1EABA2510;
  if (!qword_1EABA2510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2510);
  }
  return result;
}

uint64_t LiveActivitySubscriptionFailureEvent.liveActivityData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LiveActivitySubscriptionFailureEvent(0) + 20);
  sub_1DE0C60A0(0, &qword_1EABA2500, (void (*)(void))sub_1DE0C5808, (void (*)(void))sub_1DE0C585C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*LiveActivitySubscriptionFailureEvent.liveActivityData.modify())()
{
  return nullsub_1;
}

uint64_t LiveActivitySubscriptionFailureEvent.errorData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LiveActivitySubscriptionFailureEvent(0) + 24);
  sub_1DE0C60A0(0, &qword_1EBEC1FE0, (void (*)(void))sub_1DE0BA614, (void (*)(void))sub_1DE0BA66C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t LiveActivitySubscriptionFailureEvent.errorData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LiveActivitySubscriptionFailureEvent(0) + 24);
  sub_1DE0C60A0(0, &qword_1EBEC1FE0, (void (*)(void))sub_1DE0BA614, (void (*)(void))sub_1DE0BA66C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*LiveActivitySubscriptionFailureEvent.errorData.modify())()
{
  return nullsub_1;
}

uint64_t LiveActivitySubscriptionFailureEvent.userAction.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LiveActivitySubscriptionFailureEvent(0) + 28);
  sub_1DE0C60A0(0, &qword_1EABA2518, (void (*)(void))sub_1DE0C5C00, (void (*)(void))sub_1DE0C5C54);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE0C5C00()
{
  unint64_t result = qword_1EABA2520;
  if (!qword_1EABA2520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2520);
  }
  return result;
}

unint64_t sub_1DE0C5C54()
{
  unint64_t result = qword_1EABA2528;
  if (!qword_1EABA2528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2528);
  }
  return result;
}

uint64_t LiveActivitySubscriptionFailureEvent.userAction.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LiveActivitySubscriptionFailureEvent(0) + 28);
  sub_1DE0C60A0(0, &qword_1EABA2518, (void (*)(void))sub_1DE0C5C00, (void (*)(void))sub_1DE0C5C54);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*LiveActivitySubscriptionFailureEvent.userAction.modify())()
{
  return nullsub_1;
}

uint64_t LiveActivitySubscriptionFailureEvent.liveActivityOriginationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LiveActivitySubscriptionFailureEvent(0) + 32);
  sub_1DE0C60A0(0, &qword_1EABA2530, (void (*)(void))sub_1DE0C5E50, (void (*)(void))sub_1DE0C5EA4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE0C5E50()
{
  unint64_t result = qword_1EABA2538;
  if (!qword_1EABA2538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2538);
  }
  return result;
}

unint64_t sub_1DE0C5EA4()
{
  unint64_t result = qword_1EABA2540;
  if (!qword_1EABA2540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2540);
  }
  return result;
}

uint64_t LiveActivitySubscriptionFailureEvent.liveActivityOriginationData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LiveActivitySubscriptionFailureEvent(0) + 32);
  sub_1DE0C60A0(0, &qword_1EABA2530, (void (*)(void))sub_1DE0C5E50, (void (*)(void))sub_1DE0C5EA4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*LiveActivitySubscriptionFailureEvent.liveActivityOriginationData.modify())()
{
  return nullsub_1;
}

uint64_t LiveActivitySubscriptionFailureEvent.liveActivityDismissalData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LiveActivitySubscriptionFailureEvent(0) + 36);
  sub_1DE0C60A0(0, &qword_1EABA2548, (void (*)(void))sub_1DE0C611C, (void (*)(void))sub_1DE0C6170);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_1DE0C60A0(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_1DE47ECA0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1DE0C611C()
{
  unint64_t result = qword_1EABA2550;
  if (!qword_1EABA2550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2550);
  }
  return result;
}

unint64_t sub_1DE0C6170()
{
  unint64_t result = qword_1EABA2558;
  if (!qword_1EABA2558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2558);
  }
  return result;
}

uint64_t LiveActivitySubscriptionFailureEvent.liveActivityDismissalData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LiveActivitySubscriptionFailureEvent(0) + 36);
  sub_1DE0C60A0(0, &qword_1EABA2548, (void (*)(void))sub_1DE0C611C, (void (*)(void))sub_1DE0C6170);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*LiveActivitySubscriptionFailureEvent.liveActivityDismissalData.modify())()
{
  return nullsub_1;
}

uint64_t LiveActivitySubscriptionFailureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for LiveActivitySubscriptionFailureEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_1DE0C60A0(0, &qword_1EABA2500, (void (*)(void))sub_1DE0C5808, (void (*)(void))sub_1DE0C585C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_1DE0C60A0(0, &qword_1EBEC1FE0, (void (*)(void))sub_1DE0BA614, (void (*)(void))sub_1DE0BA66C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_1DE0C60A0(0, &qword_1EABA2518, (void (*)(void))sub_1DE0C5C00, (void (*)(void))sub_1DE0C5C54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + v4[8];
  uint64_t v12 = *MEMORY[0x1E4F4A9F8];
  sub_1DE0C60A0(0, &qword_1EABA2530, (void (*)(void))sub_1DE0C5E50, (void (*)(void))sub_1DE0C5EA4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v11, v12, v13);
  uint64_t v14 = a1 + v4[9];
  sub_1DE0C60A0(0, &qword_1EABA2548, (void (*)(void))sub_1DE0C611C, (void (*)(void))sub_1DE0C6170);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104);

  return v16(v14, v12, v15);
}

uint64_t LiveActivitySubscriptionFailureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084(MEMORY[0x1E4F4AB70], a1);
}

uint64_t LiveActivitySubscriptionFailureEvent.Model.liveActivityData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for LiveActivitySubscriptionFailureEvent.Model(0) + 20));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for LiveActivitySubscriptionFailureEvent.Model(uint64_t a1)
{
  return sub_1DE04E1D0(a1, (uint64_t *)&unk_1EABA2588);
}

uint64_t LiveActivitySubscriptionFailureEvent.Model.errorData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LiveActivitySubscriptionFailureEvent.Model(0) + 24);
  uint64_t v5 = *(void *)(v3 + 24);
  uint64_t v4 = *(void *)(v3 + 32);
  *(void *)a1 = *(void *)v3;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v3 + 8);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t LiveActivitySubscriptionFailureEvent.Model.userAction.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for LiveActivitySubscriptionFailureEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t LiveActivitySubscriptionFailureEvent.Model.liveActivityOriginationData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for LiveActivitySubscriptionFailureEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t LiveActivitySubscriptionFailureEvent.Model.liveActivityDismissalData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for LiveActivitySubscriptionFailureEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 36));
  return result;
}

__n128 LiveActivitySubscriptionFailureEvent.Model.init(eventData:liveActivityData:errorData:userAction:liveActivityOriginationData:liveActivityDismissalData:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, long long *a3@<X2>, char *a4@<X3>, char *a5@<X4>, char *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v9 = *a2;
  uint64_t v10 = a2[1];
  __n128 v20 = (__n128)a3[1];
  long long v21 = *a3;
  uint64_t v11 = *((void *)a3 + 4);
  char v12 = *a4;
  char v13 = *a5;
  char v14 = *a6;
  uint64_t v15 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(a7, a1, v15);
  uint64_t v16 = (int *)type metadata accessor for LiveActivitySubscriptionFailureEvent.Model(0);
  uint64_t v17 = (void *)(a7 + v16[5]);
  *uint64_t v17 = v9;
  v17[1] = v10;
  uint64_t v18 = a7 + v16[6];
  __n128 result = v20;
  *(_OWORD *)uint64_t v18 = v21;
  *(__n128 *)(v18 + 16) = v20;
  *(void *)(v18 + 32) = v11;
  *(unsigned char *)(a7 + v16[7]) = v12;
  *(unsigned char *)(a7 + v16[8]) = v13;
  *(unsigned char *)(a7 + v16[9]) = v14;
  return result;
}

unint64_t sub_1DE0C6828(char a1)
{
  unint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x746144726F727265;
      break;
    case 3:
      unint64_t result = 0x6974634172657375;
      break;
    case 4:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000019;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DE0C690C()
{
  return sub_1DE0C6828(*v0);
}

uint64_t sub_1DE0C6914@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE0C9C88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE0C693C(uint64_t a1)
{
  unint64_t v2 = sub_1DE0C6CA4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE0C6978(uint64_t a1)
{
  unint64_t v2 = sub_1DE0C6CA4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t LiveActivitySubscriptionFailureEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1DE0C7214(0, &qword_1EABA2560, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0C6CA4();
  sub_1DE480790();
  LOBYTE(v18[0]) = 0;
  sub_1DE47F330();
  sub_1DE07291C(&qword_1EBEC2030);
  sub_1DE4805C0();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for LiveActivitySubscriptionFailureEvent.Model(0);
    uint64_t v11 = (uint64_t *)(v3 + v10[5]);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    *(void *)&v18[0] = v13;
    *((void *)&v18[0] + 1) = v12;
    char v20 = 1;
    sub_1DE0C585C();
    sub_1DE4805C0();
    uint64_t v14 = v3 + v10[6];
    uint64_t v15 = *(void *)(v14 + 32);
    long long v16 = *(_OWORD *)(v14 + 16);
    v18[0] = *(_OWORD *)v14;
    v18[1] = v16;
    uint64_t v19 = v15;
    char v20 = 2;
    sub_1DE0BA66C();
    sub_1DE4805C0();
    LOBYTE(v18[0]) = *(unsigned char *)(v3 + v10[7]);
    char v20 = 3;
    sub_1DE0C5C54();
    sub_1DE4805C0();
    LOBYTE(v18[0]) = *(unsigned char *)(v3 + v10[8]);
    char v20 = 4;
    sub_1DE0C5EA4();
    sub_1DE480550();
    LOBYTE(v18[0]) = *(unsigned char *)(v3 + v10[9]);
    char v20 = 5;
    sub_1DE0C6170();
    sub_1DE480550();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DE0C6CA4()
{
  unint64_t result = qword_1EABA2568;
  if (!qword_1EABA2568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2568);
  }
  return result;
}

uint64_t LiveActivitySubscriptionFailureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v4 = sub_1DE47F330();
  uint64_t v26 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v27 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE0C7214(0, &qword_1EABA2570, MEMORY[0x1E4FBBDC0]);
  uint64_t v28 = v6;
  uint64_t v25 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = (int *)type metadata accessor for LiveActivitySubscriptionFailureEvent.Model(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0C6CA4();
  uint64_t v29 = v8;
  sub_1DE480770();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  unint64_t v23 = a1;
  uint64_t v12 = (uint64_t)v11;
  uint64_t v13 = v26;
  LOBYTE(v30) = 0;
  sub_1DE07291C(&qword_1EBEC2038);
  uint64_t v14 = v27;
  uint64_t v15 = v28;
  sub_1DE4804E0();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v14, v4);
  char v33 = 1;
  sub_1DE0C5808();
  sub_1DE4804E0();
  uint64_t v16 = *((void *)&v30 + 1);
  uint64_t v17 = (void *)(v12 + v9[5]);
  *uint64_t v17 = v30;
  v17[1] = v16;
  char v33 = 2;
  sub_1DE0BA614();
  sub_1DE4804E0();
  uint64_t v18 = v32;
  uint64_t v19 = v12 + v9[6];
  long long v20 = v31;
  *(_OWORD *)uint64_t v19 = v30;
  *(_OWORD *)(v19 + 16) = v20;
  *(void *)(v19 + 32) = v18;
  char v33 = 3;
  sub_1DE0C5C00();
  sub_1DE4804E0();
  *(unsigned char *)(v12 + v9[7]) = v30;
  char v33 = 4;
  sub_1DE0C5E50();
  sub_1DE480470();
  *(unsigned char *)(v12 + v9[8]) = v30;
  char v33 = 5;
  sub_1DE0C611C();
  sub_1DE480470();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v29, v15);
  *(unsigned char *)(v12 + v9[9]) = v30;
  sub_1DE0C7278(v12, v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return sub_1DE0C72DC(v12);
}

void sub_1DE0C7214(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE0C6CA4();
    unint64_t v7 = a3(a1, &type metadata for LiveActivitySubscriptionFailureEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DE0C7278(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LiveActivitySubscriptionFailureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DE0C72DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LiveActivitySubscriptionFailureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DE0C7338@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return LiveActivitySubscriptionFailureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DE0C7350(void *a1)
{
  return LiveActivitySubscriptionFailureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DE0C7368@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0A20, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EABA24B8, a1);
}

uint64_t sub_1DE0C73A0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0A28, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EABA24D0, a1);
}

uint64_t sub_1DE0C73D8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0A30, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA24E8, a1);
}

uint64_t sub_1DE0C7410@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_1DE0C60A0(0, &qword_1EABA2500, (void (*)(void))sub_1DE0C5808, (void (*)(void))sub_1DE0C585C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_1DE0C60A0(0, &qword_1EBEC1FE0, (void (*)(void))sub_1DE0BA614, (void (*)(void))sub_1DE0BA66C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_1DE0C60A0(0, &qword_1EABA2518, (void (*)(void))sub_1DE0C5C00, (void (*)(void))sub_1DE0C5C54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  uint64_t v13 = *MEMORY[0x1E4F4A9F8];
  sub_1DE0C60A0(0, &qword_1EABA2530, (void (*)(void))sub_1DE0C5E50, (void (*)(void))sub_1DE0C5EA4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v12, v13, v14);
  uint64_t v15 = a2 + a1[9];
  sub_1DE0C60A0(0, &qword_1EABA2548, (void (*)(void))sub_1DE0C611C, (void (*)(void))sub_1DE0C6170);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104);

  return v17(v15, v13, v16);
}

uint64_t *initializeBufferWithCopyOfBuffer for LiveActivitySubscriptionFailureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DE04D618();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DE0C60A0(0, &qword_1EABA2500, (void (*)(void))sub_1DE0C5808, (void (*)(void))sub_1DE0C585C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_1DE0C60A0(0, &qword_1EBEC1FE0, (void (*)(void))sub_1DE0BA614, (void (*)(void))sub_1DE0BA66C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_1DE0C60A0(0, &qword_1EABA2518, (void (*)(void))sub_1DE0C5C00, (void (*)(void))sub_1DE0C5C54);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    long long v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_1DE0C60A0(0, &qword_1EABA2530, (void (*)(void))sub_1DE0C5E50, (void (*)(void))sub_1DE0C5EA4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_1DE0C60A0(0, &qword_1EABA2548, (void (*)(void))sub_1DE0C611C, (void (*)(void))sub_1DE0C6170);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for LiveActivitySubscriptionFailureEvent(uint64_t a1, int *a2)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_1DE0C60A0(0, &qword_1EABA2500, (void (*)(void))sub_1DE0C5808, (void (*)(void))sub_1DE0C585C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_1DE0C60A0(0, &qword_1EBEC1FE0, (void (*)(void))sub_1DE0BA614, (void (*)(void))sub_1DE0BA66C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_1DE0C60A0(0, &qword_1EABA2518, (void (*)(void))sub_1DE0C5C00, (void (*)(void))sub_1DE0C5C54);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_1DE0C60A0(0, &qword_1EABA2530, (void (*)(void))sub_1DE0C5E50, (void (*)(void))sub_1DE0C5EA4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_1DE0C60A0(0, &qword_1EABA2548, (void (*)(void))sub_1DE0C611C, (void (*)(void))sub_1DE0C6170);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);

  return v15(v13, v14);
}

uint64_t initializeWithCopy for LiveActivitySubscriptionFailureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE0C60A0(0, &qword_1EABA2500, (void (*)(void))sub_1DE0C5808, (void (*)(void))sub_1DE0C585C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0C60A0(0, &qword_1EBEC1FE0, (void (*)(void))sub_1DE0BA614, (void (*)(void))sub_1DE0BA66C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0C60A0(0, &qword_1EABA2518, (void (*)(void))sub_1DE0C5C00, (void (*)(void))sub_1DE0C5C54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0C60A0(0, &qword_1EABA2530, (void (*)(void))sub_1DE0C5E50, (void (*)(void))sub_1DE0C5EA4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE0C60A0(0, &qword_1EABA2548, (void (*)(void))sub_1DE0C611C, (void (*)(void))sub_1DE0C6170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for LiveActivitySubscriptionFailureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE0C60A0(0, &qword_1EABA2500, (void (*)(void))sub_1DE0C5808, (void (*)(void))sub_1DE0C585C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0C60A0(0, &qword_1EBEC1FE0, (void (*)(void))sub_1DE0BA614, (void (*)(void))sub_1DE0BA66C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0C60A0(0, &qword_1EABA2518, (void (*)(void))sub_1DE0C5C00, (void (*)(void))sub_1DE0C5C54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0C60A0(0, &qword_1EABA2530, (void (*)(void))sub_1DE0C5E50, (void (*)(void))sub_1DE0C5EA4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE0C60A0(0, &qword_1EABA2548, (void (*)(void))sub_1DE0C611C, (void (*)(void))sub_1DE0C6170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for LiveActivitySubscriptionFailureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE0C60A0(0, &qword_1EABA2500, (void (*)(void))sub_1DE0C5808, (void (*)(void))sub_1DE0C585C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0C60A0(0, &qword_1EBEC1FE0, (void (*)(void))sub_1DE0BA614, (void (*)(void))sub_1DE0BA66C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0C60A0(0, &qword_1EABA2518, (void (*)(void))sub_1DE0C5C00, (void (*)(void))sub_1DE0C5C54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0C60A0(0, &qword_1EABA2530, (void (*)(void))sub_1DE0C5E50, (void (*)(void))sub_1DE0C5EA4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE0C60A0(0, &qword_1EABA2548, (void (*)(void))sub_1DE0C611C, (void (*)(void))sub_1DE0C6170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for LiveActivitySubscriptionFailureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE0C60A0(0, &qword_1EABA2500, (void (*)(void))sub_1DE0C5808, (void (*)(void))sub_1DE0C585C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0C60A0(0, &qword_1EBEC1FE0, (void (*)(void))sub_1DE0BA614, (void (*)(void))sub_1DE0BA66C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0C60A0(0, &qword_1EABA2518, (void (*)(void))sub_1DE0C5C00, (void (*)(void))sub_1DE0C5C54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0C60A0(0, &qword_1EABA2530, (void (*)(void))sub_1DE0C5E50, (void (*)(void))sub_1DE0C5EA4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE0C60A0(0, &qword_1EABA2548, (void (*)(void))sub_1DE0C611C, (void (*)(void))sub_1DE0C6170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for LiveActivitySubscriptionFailureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE0C890C);
}

uint64_t sub_1DE0C890C(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  sub_1DE0C60A0(0, &qword_1EABA2500, (void (*)(void))sub_1DE0C5808, (void (*)(void))sub_1DE0C585C);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_11:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_12;
  }
  sub_1DE0C60A0(0, &qword_1EBEC1FE0, (void (*)(void))sub_1DE0BA614, (void (*)(void))sub_1DE0BA66C);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_11;
  }
  sub_1DE0C60A0(0, &qword_1EABA2518, (void (*)(void))sub_1DE0C5C00, (void (*)(void))sub_1DE0C5C54);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_11;
  }
  sub_1DE0C60A0(0, &qword_1EABA2530, (void (*)(void))sub_1DE0C5E50, (void (*)(void))sub_1DE0C5EA4);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_11;
  }
  sub_1DE0C60A0(0, &qword_1EABA2548, (void (*)(void))sub_1DE0C611C, (void (*)(void))sub_1DE0C6170);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a3[9];

  return v19(v21, a2, v20);
}

uint64_t storeEnumTagSinglePayload for LiveActivitySubscriptionFailureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE0C8C68);
}

uint64_t sub_1DE0C8C68(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_1DE04D618();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_12:
    return v11(v12, a2, a2, v10);
  }
  sub_1DE0C60A0(0, &qword_1EABA2500, (void (*)(void))sub_1DE0C5808, (void (*)(void))sub_1DE0C585C);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_11:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_12;
  }
  sub_1DE0C60A0(0, &qword_1EBEC1FE0, (void (*)(void))sub_1DE0BA614, (void (*)(void))sub_1DE0BA66C);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_11;
  }
  sub_1DE0C60A0(0, &qword_1EABA2518, (void (*)(void))sub_1DE0C5C00, (void (*)(void))sub_1DE0C5C54);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_11;
  }
  sub_1DE0C60A0(0, &qword_1EABA2530, (void (*)(void))sub_1DE0C5E50, (void (*)(void))sub_1DE0C5EA4);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_11;
  }
  sub_1DE0C60A0(0, &qword_1EABA2548, (void (*)(void))sub_1DE0C611C, (void (*)(void))sub_1DE0C6170);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  uint64_t v22 = v20;
  uint64_t v23 = a1 + a4[9];

  return v21(v23, a2, a2, v22);
}

void sub_1DE0C8FBC()
{
  sub_1DE04D618();
  if (v0 <= 0x3F)
  {
    sub_1DE0C60A0(319, &qword_1EABA2500, (void (*)(void))sub_1DE0C5808, (void (*)(void))sub_1DE0C585C);
    if (v1 <= 0x3F)
    {
      sub_1DE0C60A0(319, &qword_1EBEC1FE0, (void (*)(void))sub_1DE0BA614, (void (*)(void))sub_1DE0BA66C);
      if (v2 <= 0x3F)
      {
        sub_1DE0C60A0(319, &qword_1EABA2518, (void (*)(void))sub_1DE0C5C00, (void (*)(void))sub_1DE0C5C54);
        if (v3 <= 0x3F)
        {
          sub_1DE0C60A0(319, &qword_1EABA2530, (void (*)(void))sub_1DE0C5E50, (void (*)(void))sub_1DE0C5EA4);
          if (v4 <= 0x3F)
          {
            sub_1DE0C60A0(319, &qword_1EABA2548, (void (*)(void))sub_1DE0C611C, (void (*)(void))sub_1DE0C6170);
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for LiveActivitySubscriptionFailureEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DE47F330();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)a1 + v8);
    uint64_t v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (void *)((char *)a1 + v9);
    uint64_t v14 = (void *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = v14[3];
    v13[2] = v14[2];
    v13[3] = v16;
    v13[4] = v14[4];
    uint64_t v17 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *((unsigned char *)a1 + v17) = *((unsigned char *)a2 + v17);
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for LiveActivitySubscriptionFailureEvent.Model(uint64_t a1)
{
  uint64_t v2 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LiveActivitySubscriptionFailureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  void *v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = v13[3];
  void v12[2] = v13[2];
  v12[3] = v15;
  v12[4] = v13[4];
  uint64_t v16 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LiveActivitySubscriptionFailureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  void *v11 = *(void *)(a2 + v10);
  v11[1] = *(void *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  void v11[2] = v12[2];
  v11[3] = v12[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  void v11[4] = v12[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t initializeWithTake for LiveActivitySubscriptionFailureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  uint64_t v11 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for LiveActivitySubscriptionFailureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = *(void *)(a2 + v12 + 8);
  *uint64_t v13 = *(void *)(a2 + v12);
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = v14[3];
  v13[2] = v14[2];
  v13[3] = v16;
  swift_bridgeObjectRelease();
  v13[4] = v14[4];
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t getEnumTagSinglePayload for LiveActivitySubscriptionFailureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE0C9828);
}

uint64_t sub_1DE0C9828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DE47F330();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for LiveActivitySubscriptionFailureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE0C9900);
}

uint64_t sub_1DE0C9900(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1DE47F330();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1DE0C99C0()
{
  uint64_t result = sub_1DE47F330();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LiveActivitySubscriptionFailureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE0C9B48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LiveActivitySubscriptionFailureEvent.Model.CodingKeys()
{
  return &type metadata for LiveActivitySubscriptionFailureEvent.Model.CodingKeys;
}

unint64_t sub_1DE0C9B84()
{
  unint64_t result = qword_1EABA2598;
  if (!qword_1EABA2598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2598);
  }
  return result;
}

unint64_t sub_1DE0C9BDC()
{
  unint64_t result = qword_1EABA25A0;
  if (!qword_1EABA25A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA25A0);
  }
  return result;
}

unint64_t sub_1DE0C9C34()
{
  unint64_t result = qword_1EABA25A8;
  if (!qword_1EABA25A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA25A8);
  }
  return result;
}

uint64_t sub_1DE0C9C88(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DE4BEAD0 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746144726F727265 && a2 == 0xE900000000000061 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6974634172657375 && a2 == 0xEA00000000006E6FLL || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001DE4BEAF0 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001DE4BEB10)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1DE480660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

NewsAnalytics::AggregateStateMode_optional __swiftcall AggregateStateMode.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_1DE480420();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *BOOL v2 = v5;
  return result;
}

uint64_t AggregateStateMode.rawValue.getter()
{
  uint64_t v1 = 0x6C75666574617473;
  if (*v0 != 1) {
    uint64_t v1 = 0x73656C6574617473;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x766C6F7365726E75;
  }
}

uint64_t sub_1DE0C9FD0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DE3D7ED0(*a1, *a2);
}

unint64_t sub_1DE0C9FE0()
{
  unint64_t result = qword_1EABA25B0;
  if (!qword_1EABA25B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA25B0);
  }
  return result;
}

uint64_t sub_1DE0CA034()
{
  return sub_1DE480750();
}

uint64_t sub_1DE0CA0E0()
{
  sub_1DE47FF00();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE0CA178()
{
  return sub_1DE480750();
}

NewsAnalytics::AggregateStateMode_optional sub_1DE0CA220(Swift::String *a1)
{
  return AggregateStateMode.init(rawValue:)(*a1);
}

void sub_1DE0CA22C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEA00000000006465;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x6C75666574617473;
  if (v2 != 1)
  {
    uint64_t v5 = 0x73656C6574617473;
    unint64_t v4 = 0xE900000000000073;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x766C6F7365726E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1DE0CA294()
{
  return sub_1DE47FFF0();
}

uint64_t sub_1DE0CA2F4()
{
  return sub_1DE47FFE0();
}

unsigned char *storeEnumTagSinglePayload for AggregateStateMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE0CA410);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AggregateStateMode()
{
  return &type metadata for AggregateStateMode;
}

unint64_t sub_1DE0CA448()
{
  unint64_t result = qword_1EBEC9850;
  if (!qword_1EBEC9850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC9850);
  }
  return result;
}

uint64_t sub_1DE0CA49C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for HeartbeatEventService();
  uint64_t result = sub_1DE47F450();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t result = sub_1DE0CAAAC(&qword_1EBEC9988);
    *a2 = v4;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DE0CA51C()
{
  uint64_t v0 = sub_1DE47F6C0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  int v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HeartbeatEventService();
  sub_1DE47F670();
  sub_1DE47F3E0();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB028], v0);
  sub_1DE47F400();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1DE0CA688(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0CAA1C();
  uint64_t result = sub_1DE47F450();
  if (result)
  {
    uint64_t v3 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1DE0CAA5C(0, (unint64_t *)&unk_1EBECBF68);
    uint64_t result = sub_1DE47F460();
    if (v5)
    {
      type metadata accessor for HeartbeatEventService();
      swift_allocObject();
      return sub_1DE1F7024(v3, &v4);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DE0CA768(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1DE0CAA5C(0, &qword_1EBEC8590);
  uint64_t result = sub_1DE47F460();
  if (v4)
  {
    sub_1DE0CAA04(&v3, (uint64_t)v5);
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    sub_1DE0CAAAC(&qword_1EBEC9980);
    sub_1DE47F690();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v3);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for HeartbeatAssembly()
{
  return self;
}

uint64_t sub_1DE0CA874()
{
  uint64_t v0 = sub_1DE47F6C0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  long long v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE47F480();
  sub_1DE0CAA5C(0, &qword_1EBEC9A28);
  sub_1DE47F680();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAB028], v0);
  sub_1DE47F400();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1DE47F490();
  sub_1DE47F660();
  return swift_release();
}

uint64_t sub_1DE0CAA04(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

unint64_t sub_1DE0CAA1C()
{
  unint64_t result = qword_1EBEC7430;
  if (!qword_1EBEC7430)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBEC7430);
  }
  return result;
}

uint64_t sub_1DE0CAA5C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1DE0CAAAC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for HeartbeatEventService();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DE0CAAF0(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4A9C8], qword_1EABA25B8, MEMORY[0x1E4F4A9C0]);
}

uint64_t static GroupLoadEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0A38, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EABA25B8, a1);
}

uint64_t static GroupLoadEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_1DE0CAB58(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4AAB0], qword_1EABA25D0, MEMORY[0x1E4F4AAA0]);
}

uint64_t static GroupLoadEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0A40, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EABA25D0, a1);
}

uint64_t sub_1DE0CABB8()
{
  uint64_t v0 = sub_1DE47F020();
  __swift_allocate_value_buffer(v0, qword_1EABA25E8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EABA25E8);
  return sub_1DE47F010();
}

uint64_t static GroupLoadEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0A48, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA25E8, a1);
}

uint64_t GroupLoadEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084((uint64_t (*)(void))sub_1DE04D618, a1);
}

uint64_t GroupLoadEvent.eventData.setter(uint64_t a1)
{
  sub_1DE04D618();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*GroupLoadEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t GroupLoadEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GroupLoadEvent(0) + 20);
  sub_1DE0CB1E8(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for GroupLoadEvent(uint64_t a1)
{
  return sub_1DE04E1D0(a1, (uint64_t *)&unk_1EABA2630);
}

uint64_t GroupLoadEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GroupLoadEvent(0) + 20);
  sub_1DE0CB1E8(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*GroupLoadEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t GroupLoadEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE0CB70C(type metadata accessor for GroupLoadEvent, (uint64_t (*)(void))sub_1DE04D7B8, a1);
}

uint64_t GroupLoadEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GroupLoadEvent(0) + 24);
  sub_1DE04D7B8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*GroupLoadEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t GroupLoadEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GroupLoadEvent(0) + 28);
  sub_1DE0CB1E8(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t GroupLoadEvent.groupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GroupLoadEvent(0) + 28);
  sub_1DE0CB1E8(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*GroupLoadEvent.groupData.modify())()
{
  return nullsub_1;
}

uint64_t GroupLoadEvent.resultActionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GroupLoadEvent(0) + 32);
  sub_1DE0CB1E8(0, &qword_1EABA2600, (void (*)(void))sub_1DE0CB264, (void (*)(void))sub_1DE0CB2B8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_1DE0CB1E8(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_1DE47ECA0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1DE0CB264()
{
  unint64_t result = qword_1EABA2608;
  if (!qword_1EABA2608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2608);
  }
  return result;
}

unint64_t sub_1DE0CB2B8()
{
  unint64_t result = qword_1EABA2610;
  if (!qword_1EABA2610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2610);
  }
  return result;
}

uint64_t GroupLoadEvent.resultActionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GroupLoadEvent(0) + 32);
  sub_1DE0CB1E8(0, &qword_1EABA2600, (void (*)(void))sub_1DE0CB264, (void (*)(void))sub_1DE0CB2B8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*GroupLoadEvent.resultActionData.modify())()
{
  return nullsub_1;
}

uint64_t GroupLoadEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  Event = (int *)type metadata accessor for GroupLoadEvent(0);
  uint64_t v5 = a1 + Event[5];
  uint64_t v6 = *MEMORY[0x1E4F4A9F8];
  sub_1DE0CB1E8(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = a1 + Event[6];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v2, v9);
  uint64_t v10 = a1 + Event[7];
  sub_1DE0CB1E8(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v2, v11);
  uint64_t v12 = a1 + Event[8];
  sub_1DE0CB1E8(0, &qword_1EABA2600, (void (*)(void))sub_1DE0CB264, (void (*)(void))sub_1DE0CB2B8);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);

  return v14(v12, v2, v13);
}

uint64_t GroupLoadEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084(MEMORY[0x1E4F4AB70], a1);
}

uint64_t GroupLoadEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for GroupLoadEvent.Model(0) + 20));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;

  return sub_1DE056598(v4, v5, v6);
}

uint64_t type metadata accessor for GroupLoadEvent.Model(uint64_t a1)
{
  return sub_1DE04E1D0(a1, (uint64_t *)&unk_1EABA2640);
}

uint64_t GroupLoadEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE0CB70C(type metadata accessor for GroupLoadEvent.Model, MEMORY[0x1E4F4AB90], a1);
}

uint64_t sub_1DE0CB70C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 24);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t GroupLoadEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GroupLoadEvent.Model(0) + 28);
  long long v4 = *(_OWORD *)(v3 + 80);
  long long v5 = *(_OWORD *)(v3 + 112);
  long long v21 = *(_OWORD *)(v3 + 96);
  long long v22 = v5;
  long long v6 = *(_OWORD *)(v3 + 16);
  long long v7 = *(_OWORD *)(v3 + 48);
  long long v17 = *(_OWORD *)(v3 + 32);
  long long v8 = v17;
  long long v18 = v7;
  long long v9 = *(_OWORD *)(v3 + 48);
  long long v10 = *(_OWORD *)(v3 + 80);
  long long v19 = *(_OWORD *)(v3 + 64);
  long long v11 = v19;
  long long v20 = v10;
  long long v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  long long v13 = v16[0];
  v16[1] = v12;
  long long v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  uint64_t v23 = *(void *)(v3 + 128);
  *(void *)(a1 + 128) = *(void *)(v3 + 128);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1DE09AAE0((uint64_t)v16);
}

uint64_t GroupLoadEvent.Model.resultActionData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for GroupLoadEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 32));
  return result;
}

__n128 GroupLoadEvent.Model.init(eventData:feedData:timedData:groupData:resultActionData:)@<Q0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, long long *a4@<X3>, char *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9 = *((void *)a2 + 2);
  long long v25 = a4[6];
  long long v26 = a4[7];
  uint64_t v27 = *((void *)a4 + 16);
  long long v21 = a4[2];
  long long v22 = a4[3];
  long long v23 = a4[4];
  long long v24 = a4[5];
  __n128 v20 = (__n128)a4[1];
  long long v18 = *a2;
  long long v19 = *a4;
  char v10 = *a5;
  uint64_t v11 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(a6, a1, v11);
  long long v12 = (int *)type metadata accessor for GroupLoadEvent.Model(0);
  uint64_t v13 = a6 + v12[5];
  *(_OWORD *)uint64_t v13 = v18;
  *(void *)(v13 + 16) = v9;
  uint64_t v14 = a6 + v12[6];
  uint64_t v15 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v14, a3, v15);
  uint64_t v16 = a6 + v12[7];
  *(_OWORD *)(v16 + 96) = v25;
  *(_OWORD *)(v16 + 112) = v26;
  *(void *)(v16 + 128) = v27;
  *(_OWORD *)(v16 + 32) = v21;
  *(_OWORD *)(v16 + 48) = v22;
  *(_OWORD *)(v16 + 64) = v23;
  *(_OWORD *)(v16 + 80) = v24;
  __n128 result = v20;
  *(_OWORD *)uint64_t v16 = v19;
  *(__n128 *)(v16 + 16) = v20;
  *(unsigned char *)(a6 + v12[8]) = v10;
  return result;
}

unint64_t sub_1DE0CB9B4()
{
  unint64_t result = 0x746144746E657665;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6174614464656566;
      break;
    case 2:
      unint64_t result = 0x74614464656D6974;
      break;
    case 3:
      unint64_t result = 0x74614470756F7267;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE0CBA60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE0CEE6C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE0CBA88(uint64_t a1)
{
  unint64_t v2 = sub_1DE0CBE14();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE0CBAC4(uint64_t a1)
{
  unint64_t v2 = sub_1DE0CBE14();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t GroupLoadEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1DE0CC548(0, &qword_1EABA2618, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0CBE14();
  sub_1DE480790();
  LOBYTE(v21) = 0;
  sub_1DE47F330();
  sub_1DE04D884(&qword_1EBEC2030, MEMORY[0x1E4F4AB70]);
  sub_1DE4805C0();
  if (!v2)
  {
    char v10 = (int *)type metadata accessor for GroupLoadEvent.Model(0);
    uint64_t v11 = (long long *)(v3 + v10[5]);
    uint64_t v12 = *((void *)v11 + 2);
    long long v21 = *v11;
    *(void *)&long long v22 = v12;
    char v30 = 1;
    sub_1DE055800();
    sub_1DE480550();
    char v30 = 2;
    sub_1DE47F350();
    sub_1DE04D884(&qword_1EBEC2040, MEMORY[0x1E4F4AB90]);
    sub_1DE4805C0();
    uint64_t v13 = (long long *)(v3 + v10[7]);
    long long v14 = v13[7];
    long long v27 = v13[6];
    long long v28 = v14;
    uint64_t v29 = *((void *)v13 + 16);
    long long v15 = v13[3];
    long long v23 = v13[2];
    long long v24 = v15;
    long long v16 = v13[5];
    long long v25 = v13[4];
    long long v26 = v16;
    long long v17 = v13[1];
    long long v21 = *v13;
    long long v22 = v17;
    char v20 = 3;
    sub_1DE0629F4();
    sub_1DE4805C0();
    LOBYTE(v21) = *(unsigned char *)(v3 + v10[8]);
    char v20 = 4;
    sub_1DE0CB2B8();
    sub_1DE4805C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DE0CBE14()
{
  unint64_t result = qword_1EABA2620;
  if (!qword_1EABA2620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2620);
  }
  return result;
}

uint64_t GroupLoadEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v34 = sub_1DE47F350();
  uint64_t v31 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  long long v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DE47F330();
  uint64_t v33 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v36 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE0CC548(0, &qword_1EABA2628, MEMORY[0x1E4FBBDC0]);
  uint64_t v35 = v7;
  uint64_t v32 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v28 - v8;
  char v10 = (int *)type metadata accessor for GroupLoadEvent.Model(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0CBE14();
  uint64_t v37 = v9;
  uint64_t v13 = (uint64_t)v50;
  sub_1DE480770();
  if (v13) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v29 = v4;
  uint64_t v14 = v33;
  uint64_t v50 = a1;
  uint64_t v15 = v34;
  LOBYTE(v40) = 0;
  sub_1DE04D884(&qword_1EBEC2038, MEMORY[0x1E4F4AB70]);
  uint64_t v16 = v35;
  sub_1DE4804E0();
  long long v17 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  uint64_t v18 = (uint64_t)v12;
  v17(v12, v36, v5);
  char v49 = 1;
  sub_1DE0557AC();
  sub_1DE480470();
  v28[1] = v5;
  uint64_t v19 = v41;
  char v20 = &v12[v10[5]];
  *(_OWORD *)char v20 = v40;
  *((void *)v20 + 2) = v19;
  LOBYTE(v40) = 2;
  sub_1DE04D884((unint64_t *)&unk_1EBEC2048, MEMORY[0x1E4F4AB90]);
  long long v21 = v29;
  uint64_t v36 = 0;
  sub_1DE4804E0();
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v18 + v10[6], v21, v15);
  char v49 = 3;
  sub_1DE0629A0();
  sub_1DE4804E0();
  uint64_t v22 = v18 + v10[7];
  long long v23 = v47;
  *(_OWORD *)(v22 + 96) = v46;
  *(_OWORD *)(v22 + 112) = v23;
  *(void *)(v22 + 128) = v48;
  long long v24 = v43;
  *(_OWORD *)(v22 + 32) = v42;
  *(_OWORD *)(v22 + 48) = v24;
  long long v25 = v45;
  *(_OWORD *)(v22 + 64) = v44;
  *(_OWORD *)(v22 + 80) = v25;
  long long v26 = v41;
  *(_OWORD *)uint64_t v22 = v40;
  *(_OWORD *)(v22 + 16) = v26;
  char v38 = 4;
  sub_1DE0CB264();
  sub_1DE4804E0();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v37, v16);
  *(unsigned char *)(v18 + v10[8]) = v39;
  sub_1DE0CC5AC(v18, v30);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
  return sub_1DE0CC610(v18);
}

void sub_1DE0CC548(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE0CBE14();
    unint64_t v7 = a3(a1, &type metadata for GroupLoadEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DE0CC5AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GroupLoadEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DE0CC610(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GroupLoadEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DE0CC66C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return GroupLoadEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DE0CC684(void *a1)
{
  return GroupLoadEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DE0CC69C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0A38, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EABA25B8, a1);
}

uint64_t sub_1DE0CC6D4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0A40, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EABA25D0, a1);
}

uint64_t sub_1DE0CC70C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0A48, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA25E8, a1);
}

uint64_t sub_1DE0CC744@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = *MEMORY[0x1E4F4A9F8];
  sub_1DE0CB1E8(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  uint64_t v9 = a2 + a1[6];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v4, v10);
  uint64_t v11 = a2 + a1[7];
  sub_1DE0CB1E8(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v4, v12);
  uint64_t v13 = a2 + a1[8];
  sub_1DE0CB1E8(0, &qword_1EABA2600, (void (*)(void))sub_1DE0CB264, (void (*)(void))sub_1DE0CB2B8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104);

  return v15(v13, v4, v14);
}

uint64_t *initializeBufferWithCopyOfBuffer for GroupLoadEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DE04D618();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DE0CB1E8(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_1DE04D7B8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    long long v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_1DE0CB1E8(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    long long v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_1DE0CB1E8(0, &qword_1EABA2600, (void (*)(void))sub_1DE0CB264, (void (*)(void))sub_1DE0CB2B8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for GroupLoadEvent(uint64_t a1, int *a2)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_1DE0CB1E8(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_1DE0CB1E8(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_1DE0CB1E8(0, &qword_1EABA2600, (void (*)(void))sub_1DE0CB264, (void (*)(void))sub_1DE0CB2B8);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);

  return v13(v11, v12);
}

uint64_t initializeWithCopy for GroupLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE0CB1E8(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0CB1E8(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0CB1E8(0, &qword_1EABA2600, (void (*)(void))sub_1DE0CB264, (void (*)(void))sub_1DE0CB2B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for GroupLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE0CB1E8(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0CB1E8(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0CB1E8(0, &qword_1EABA2600, (void (*)(void))sub_1DE0CB264, (void (*)(void))sub_1DE0CB2B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for GroupLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE0CB1E8(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0CB1E8(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0CB1E8(0, &qword_1EABA2600, (void (*)(void))sub_1DE0CB264, (void (*)(void))sub_1DE0CB2B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for GroupLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE0CB1E8(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0CB1E8(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0CB1E8(0, &qword_1EABA2600, (void (*)(void))sub_1DE0CB264, (void (*)(void))sub_1DE0CB2B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupLoadEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE0CD74C);
}

uint64_t sub_1DE0CD74C(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  sub_1DE0CB1E8(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  sub_1DE04D7B8();
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  sub_1DE0CB1E8(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  sub_1DE0CB1E8(0, &qword_1EABA2600, (void (*)(void))sub_1DE0CB264, (void (*)(void))sub_1DE0CB2B8);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[8];

  return v18(v20, a2, v19);
}

uint64_t storeEnumTagSinglePayload for GroupLoadEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE0CD9EC);
}

uint64_t sub_1DE0CD9EC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_1DE04D618();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  sub_1DE0CB1E8(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  sub_1DE04D7B8();
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_9;
  }
  sub_1DE0CB1E8(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_9;
  }
  sub_1DE0CB1E8(0, &qword_1EABA2600, (void (*)(void))sub_1DE0CB264, (void (*)(void))sub_1DE0CB2B8);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a4[8];

  return v20(v22, a2, a2, v21);
}

void sub_1DE0CDC84()
{
  sub_1DE04D618();
  if (v0 <= 0x3F)
  {
    sub_1DE0CB1E8(319, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
    if (v1 <= 0x3F)
    {
      sub_1DE04D7B8();
      if (v2 <= 0x3F)
      {
        sub_1DE0CB1E8(319, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
        if (v3 <= 0x3F)
        {
          sub_1DE0CB1E8(319, &qword_1EABA2600, (void (*)(void))sub_1DE0CB264, (void (*)(void))sub_1DE0CB2B8);
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for GroupLoadEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DE47F330();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *((void *)v10 + 2);
    if (v11 == 1)
    {
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *((void *)v9 + 2) = *((void *)v10 + 2);
    }
    else
    {
      char *v9 = *v10;
      *((void *)v9 + 1) = *((void *)v10 + 1);
      *((void *)v9 + 2) = v11;
      swift_bridgeObjectRetain();
    }
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_1DE47F350();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = a3[7];
    uint64_t v18 = a3[8];
    uint64_t v19 = (char *)a1 + v17;
    uint64_t v20 = (char *)a2 + v17;
    *(_WORD *)uint64_t v19 = *(_WORD *)v20;
    uint64_t v21 = *((void *)v20 + 2);
    *((void *)v19 + 1) = *((void *)v20 + 1);
    *((void *)v19 + 2) = v21;
    *((void *)v19 + 3) = *((void *)v20 + 3);
    uint64_t v22 = *((void *)v20 + 5);
    *((void *)v19 + 4) = *((void *)v20 + 4);
    *((void *)v19 + 5) = v22;
    uint64_t v23 = *((void *)v20 + 7);
    *((void *)v19 + 6) = *((void *)v20 + 6);
    *((void *)v19 + 7) = v23;
    uint64_t v24 = *((void *)v20 + 9);
    *((void *)v19 + 8) = *((void *)v20 + 8);
    *((void *)v19 + 9) = v24;
    v19[80] = v20[80];
    uint64_t v25 = *((void *)v20 + 12);
    *((void *)v19 + 11) = *((void *)v20 + 11);
    *((void *)v19 + 12) = v25;
    *((void *)v19 + 13) = *((void *)v20 + 13);
    v19[112] = v20[112];
    uint64_t v26 = *((void *)v20 + 16);
    *((void *)v19 + 15) = *((void *)v20 + 15);
    *((void *)v19 + 16) = v26;
    *((unsigned char *)a1 + v18) = *((unsigned char *)a2 + v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for GroupLoadEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  if (*(void *)(a1 + *(int *)(a2 + 20) + 16) != 1) {
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GroupLoadEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 == 1)
  {
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *(void *)(v8 + 16) = *(void *)(v9 + 16);
  }
  else
  {
    *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
    *(void *)(v8 + 8) = *(void *)(v9 + 8);
    *(void *)(v8 + 16) = v10;
    swift_bridgeObjectRetain();
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v15;
  uint64_t v18 = a2 + v15;
  *(_WORD *)uint64_t v17 = *(_WORD *)v18;
  uint64_t v19 = *(void *)(v18 + 16);
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  *(void *)(v17 + 16) = v19;
  *(void *)(v17 + 24) = *(void *)(v18 + 24);
  uint64_t v20 = *(void *)(v18 + 40);
  *(void *)(v17 + 32) = *(void *)(v18 + 32);
  *(void *)(v17 + 40) = v20;
  uint64_t v21 = *(void *)(v18 + 56);
  *(void *)(v17 + 48) = *(void *)(v18 + 48);
  *(void *)(v17 + 56) = v21;
  uint64_t v22 = *(void *)(v18 + 72);
  *(void *)(v17 + 64) = *(void *)(v18 + 64);
  *(void *)(v17 + 72) = v22;
  *(unsigned char *)(v17 + 80) = *(unsigned char *)(v18 + 80);
  uint64_t v23 = *(void *)(v18 + 96);
  *(void *)(v17 + 88) = *(void *)(v18 + 88);
  *(void *)(v17 + 96) = v23;
  *(void *)(v17 + 104) = *(void *)(v18 + 104);
  *(unsigned char *)(v17 + 112) = *(unsigned char *)(v18 + 112);
  uint64_t v24 = *(void *)(v18 + 128);
  *(void *)(v17 + 120) = *(void *)(v18 + 120);
  *(void *)(v17 + 128) = v24;
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GroupLoadEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (long long *)(a2 + v7);
  uint64_t v10 = *(void *)(a1 + v7 + 16);
  uint64_t v11 = *(void *)(a2 + v7 + 16);
  if (v10 == 1)
  {
    if (v11 == 1)
    {
      long long v12 = *v9;
      *(void *)(v8 + 16) = *((void *)v9 + 2);
      *(_OWORD *)uint64_t v8 = v12;
    }
    else
    {
      *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
      *(void *)(v8 + 8) = *((void *)v9 + 1);
      *(void *)(v8 + 16) = *((void *)v9 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v11 == 1)
  {
    sub_1DE05D370(v8);
    uint64_t v13 = *((void *)v9 + 2);
    *(_OWORD *)uint64_t v8 = *v9;
    *(void *)(v8 + 16) = v13;
  }
  else
  {
    *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
    *(void *)(v8 + 8) = *((void *)v9 + 1);
    *(void *)(v8 + 16) = *((void *)v9 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  uint64_t v18 = a3[7];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(unsigned char *)uint64_t v19 = *(unsigned char *)(a2 + v18);
  *(unsigned char *)(v19 + 1) = *(unsigned char *)(a2 + v18 + 1);
  *(void *)(v19 + 8) = *(void *)(a2 + v18 + 8);
  *(void *)(v19 + 16) = *(void *)(a2 + v18 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v19 + 24) = *(_DWORD *)(v20 + 24);
  *(_DWORD *)(v19 + 28) = *(_DWORD *)(v20 + 28);
  *(void *)(v19 + 32) = *(void *)(v20 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v19 + 40) = *(void *)(v20 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v19 + 48) = *(void *)(v20 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v19 + 56) = *(void *)(v20 + 56);
  *(void *)(v19 + 64) = *(void *)(v20 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v19 + 72) = *(void *)(v20 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v19 + 80) = *(unsigned char *)(v20 + 80);
  *(void *)(v19 + 88) = *(void *)(v20 + 88);
  *(void *)(v19 + 96) = *(void *)(v20 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(v20 + 104);
  *(unsigned char *)(v19 + 112) = *(unsigned char *)(v20 + 112);
  *(void *)(v19 + 104) = v21;
  *(void *)(v19 + 120) = *(void *)(v20 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v19 + 128) = *(void *)(v20 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t initializeWithTake for GroupLoadEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  uint64_t v13 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  long long v18 = *(_OWORD *)(v17 + 48);
  *(_OWORD *)(v16 + 32) = *(_OWORD *)(v17 + 32);
  *(_OWORD *)(v16 + 48) = v18;
  *(void *)(v16 + 128) = *(void *)(v17 + 128);
  long long v19 = *(_OWORD *)(v17 + 112);
  *(_OWORD *)(v16 + 96) = *(_OWORD *)(v17 + 96);
  *(_OWORD *)(v16 + 112) = v19;
  long long v20 = *(_OWORD *)(v17 + 80);
  *(_OWORD *)(v16 + 64) = *(_OWORD *)(v17 + 64);
  *(_OWORD *)(v16 + 80) = v20;
  long long v21 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v21;
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  return a1;
}

uint64_t assignWithTake for GroupLoadEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  if (*(void *)(a1 + v7 + 16) != 1)
  {
    uint64_t v10 = *(void *)(v9 + 16);
    if (v10 != 1)
    {
      *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
      *(void *)(v8 + 8) = *(void *)(v9 + 8);
      *(void *)(v8 + 16) = v10;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1DE05D370(v8);
  }
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
LABEL_6:
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(_WORD *)uint64_t v16 = *(_WORD *)(a2 + v15);
  uint64_t v18 = *(void *)(a2 + v15 + 16);
  *(void *)(v16 + 8) = *(void *)(a2 + v15 + 8);
  *(void *)(v16 + 16) = v18;
  swift_bridgeObjectRelease();
  *(void *)(v16 + 24) = *(void *)(v17 + 24);
  *(void *)(v16 + 32) = *(void *)(v17 + 32);
  swift_bridgeObjectRelease();
  *(void *)(v16 + 40) = *(void *)(v17 + 40);
  swift_bridgeObjectRelease();
  *(void *)(v16 + 48) = *(void *)(v17 + 48);
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(v17 + 64);
  *(void *)(v16 + 56) = *(void *)(v17 + 56);
  *(void *)(v16 + 64) = v19;
  swift_bridgeObjectRelease();
  *(void *)(v16 + 72) = *(void *)(v17 + 72);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v16 + 80) = *(unsigned char *)(v17 + 80);
  uint64_t v20 = *(void *)(v17 + 96);
  *(void *)(v16 + 88) = *(void *)(v17 + 88);
  *(void *)(v16 + 96) = v20;
  swift_bridgeObjectRelease();
  *(void *)(v16 + 104) = *(void *)(v17 + 104);
  *(unsigned char *)(v16 + 112) = *(unsigned char *)(v17 + 112);
  *(void *)(v16 + 120) = *(void *)(v17 + 120);
  swift_bridgeObjectRelease();
  *(void *)(v16 + 128) = *(void *)(v17 + 128);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupLoadEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE0CE93C);
}

uint64_t sub_1DE0CE93C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DE47F330();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1DE47F350();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 24);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 28) + 16);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for GroupLoadEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE0CEA68);
}

uint64_t sub_1DE0CEA68(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1DE47F330();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_1DE47F350();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 28) + 16) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 24);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_1DE0CEB7C()
{
  uint64_t result = sub_1DE47F330();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1DE47F350();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for GroupLoadEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE0CED2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GroupLoadEvent.Model.CodingKeys()
{
  return &type metadata for GroupLoadEvent.Model.CodingKeys;
}

unint64_t sub_1DE0CED68()
{
  unint64_t result = qword_1EABA2650;
  if (!qword_1EABA2650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2650);
  }
  return result;
}

unint64_t sub_1DE0CEDC0()
{
  unint64_t result = qword_1EABA2658;
  if (!qword_1EABA2658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2658);
  }
  return result;
}

unint64_t sub_1DE0CEE18()
{
  unint64_t result = qword_1EABA2660;
  if (!qword_1EABA2660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2660);
  }
  return result;
}

uint64_t sub_1DE0CEE6C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DE4BEB60)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1DE480660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

NewsAnalytics::NotificationStatus_optional __swiftcall NotificationStatus.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_1DE480420();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *BOOL v2 = v5;
  return result;
}

uint64_t NotificationStatus.rawValue.getter()
{
  uint64_t v1 = 0x6564726163736964;
  if (*v0 != 1) {
    uint64_t v1 = 0x6465766965636572;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6465766F6D6572;
  }
}

uint64_t sub_1DE0CF160(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DE3D7A2C(*a1, *a2);
}

unint64_t sub_1DE0CF170()
{
  unint64_t result = qword_1EABA2668;
  if (!qword_1EABA2668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2668);
  }
  return result;
}

uint64_t sub_1DE0CF1C4()
{
  return sub_1DE480750();
}

uint64_t sub_1DE0CF26C()
{
  sub_1DE47FF00();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE0CF300()
{
  return sub_1DE480750();
}

NewsAnalytics::NotificationStatus_optional sub_1DE0CF3A4(Swift::String *a1)
{
  return NotificationStatus.init(rawValue:)(*a1);
}

void sub_1DE0CF3B0(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE900000000000064;
  uint64_t v5 = 0x6564726163736964;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6465766965636572;
    unint64_t v4 = 0xE800000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6465766F6D6572;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1DE0CF414()
{
  return sub_1DE47FFF0();
}

uint64_t sub_1DE0CF474()
{
  return sub_1DE47FFE0();
}

unsigned char *storeEnumTagSinglePayload for NotificationStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE0CF590);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationStatus()
{
  return &type metadata for NotificationStatus;
}

unint64_t sub_1DE0CF5C8()
{
  unint64_t result = qword_1EABA2670;
  if (!qword_1EABA2670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2670);
  }
  return result;
}

uint64_t sub_1DE0CF61C(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4A9C8], qword_1EABA2678, MEMORY[0x1E4F4A9C0]);
}

uint64_t static SportsSyncSheetEngagementEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0A50, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EABA2678, a1);
}

uint64_t static SportsSyncSheetEngagementEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_1DE0CF684(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4AAB0], qword_1EABA2690, MEMORY[0x1E4F4AA98]);
}

uint64_t static SportsSyncSheetEngagementEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0A58, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EABA2690, a1);
}

uint64_t sub_1DE0CF6E4()
{
  uint64_t v0 = sub_1DE47F020();
  __swift_allocate_value_buffer(v0, qword_1EABA26A8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EABA26A8);
  return sub_1DE47F010();
}

uint64_t static SportsSyncSheetEngagementEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0A60, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA26A8, a1);
}

uint64_t SportsSyncSheetEngagementEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084((uint64_t (*)(void))sub_1DE04D618, a1);
}

uint64_t SportsSyncSheetEngagementEvent.eventData.setter(uint64_t a1)
{
  sub_1DE04D618();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*SportsSyncSheetEngagementEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SportsSyncSheetEngagementEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE0D0268(type metadata accessor for SportsSyncSheetEngagementEvent, (uint64_t (*)(void))sub_1DE04D7B8, a1);
}

uint64_t type metadata accessor for SportsSyncSheetEngagementEvent(uint64_t a1)
{
  return sub_1DE04E1D0(a1, (uint64_t *)&unk_1EABA26F0);
}

uint64_t SportsSyncSheetEngagementEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SportsSyncSheetEngagementEvent(0) + 20);
  sub_1DE04D7B8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SportsSyncSheetEngagementEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t SportsSyncSheetEngagementEvent.userSelectionSportsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SportsSyncSheetEngagementEvent(0) + 24);
  sub_1DE0CFDBC(0, &qword_1EABA26C0, (void (*)(void))sub_1DE0CF9C4, (void (*)(void))sub_1DE0CFA18);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE0CF9C4()
{
  unint64_t result = qword_1EABA26C8;
  if (!qword_1EABA26C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA26C8);
  }
  return result;
}

unint64_t sub_1DE0CFA18()
{
  unint64_t result = qword_1EABA26D0;
  if (!qword_1EABA26D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA26D0);
  }
  return result;
}

uint64_t SportsSyncSheetEngagementEvent.userSelectionSportsData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SportsSyncSheetEngagementEvent(0) + 24);
  sub_1DE0CFDBC(0, &qword_1EABA26C0, (void (*)(void))sub_1DE0CF9C4, (void (*)(void))sub_1DE0CFA18);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SportsSyncSheetEngagementEvent.userSelectionSportsData.modify())()
{
  return nullsub_1;
}

uint64_t SportsSyncSheetEngagementEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SportsSyncSheetEngagementEvent(0) + 28);
  sub_1DE0CFDBC(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SportsSyncSheetEngagementEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SportsSyncSheetEngagementEvent(0) + 28);
  sub_1DE0CFDBC(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SportsSyncSheetEngagementEvent.userBundleSubscriptionContextData.modify())()
{
  return nullsub_1;
}

uint64_t SportsSyncSheetEngagementEvent.campaignData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SportsSyncSheetEngagementEvent(0) + 32);
  sub_1DE0CFDBC(0, &qword_1EBEC1E58, (void (*)(void))sub_1DE0CFE38, (void (*)(void))sub_1DE0CFE8C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_1DE0CFDBC(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_1DE47ECA0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1DE0CFE38()
{
  unint64_t result = qword_1EBEC2538;
  if (!qword_1EBEC2538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC2538);
  }
  return result;
}

unint64_t sub_1DE0CFE8C()
{
  unint64_t result = qword_1EBEC2530;
  if (!qword_1EBEC2530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC2530);
  }
  return result;
}

uint64_t SportsSyncSheetEngagementEvent.campaignData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SportsSyncSheetEngagementEvent(0) + 32);
  sub_1DE0CFDBC(0, &qword_1EBEC1E58, (void (*)(void))sub_1DE0CFE38, (void (*)(void))sub_1DE0CFE8C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SportsSyncSheetEngagementEvent.campaignData.modify())()
{
  return nullsub_1;
}

uint64_t SportsSyncSheetEngagementEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for SportsSyncSheetEngagementEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_1DE0CFDBC(0, &qword_1EABA26C0, (void (*)(void))sub_1DE0CF9C4, (void (*)(void))sub_1DE0CFA18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_1DE0CFDBC(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + v4[8];
  uint64_t v12 = *MEMORY[0x1E4F4A9F8];
  sub_1DE0CFDBC(0, &qword_1EBEC1E58, (void (*)(void))sub_1DE0CFE38, (void (*)(void))sub_1DE0CFE8C);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);

  return v14(v11, v12, v13);
}

uint64_t SportsSyncSheetEngagementEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084(MEMORY[0x1E4F4AB70], a1);
}

uint64_t SportsSyncSheetEngagementEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE0D0268(type metadata accessor for SportsSyncSheetEngagementEvent.Model, MEMORY[0x1E4F4AB90], a1);
}

uint64_t sub_1DE0D0268@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for SportsSyncSheetEngagementEvent.Model(uint64_t a1)
{
  return sub_1DE04E1D0(a1, (uint64_t *)&unk_1EABA2700);
}

uint64_t SportsSyncSheetEngagementEvent.Model.userSelectionSportsData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for SportsSyncSheetEngagementEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t SportsSyncSheetEngagementEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (char *)(v1 + *(int *)(type metadata accessor for SportsSyncSheetEngagementEvent.Model(0) + 28));
  char v4 = *v3;
  uint64_t v5 = *((void *)v3 + 1);
  uint64_t v6 = *((void *)v3 + 2);
  char v7 = v3[24];
  char v8 = v3[25];
  uint64_t v10 = *((void *)v3 + 4);
  uint64_t v9 = *((void *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(unsigned char *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 25) = v8;
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t SportsSyncSheetEngagementEvent.Model.campaignData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SportsSyncSheetEngagementEvent.Model(0) + 32));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;

  return sub_1DE0D041C(v4, v5);
}

uint64_t sub_1DE0D041C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

__n128 SportsSyncSheetEngagementEvent.Model.init(eventData:timedData:userSelectionSportsData:userBundleSubscriptionContextData:campaignData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char *a4@<X3>, long long *a5@<X4>, uint64_t a6@<X8>)
{
  char v9 = *a3;
  char v10 = *a4;
  uint64_t v11 = *((void *)a4 + 1);
  uint64_t v12 = *((void *)a4 + 2);
  char v13 = a4[24];
  char v14 = a4[25];
  uint64_t v23 = *((void *)a4 + 5);
  uint64_t v24 = *((void *)a4 + 4);
  char v22 = a4[48];
  __n128 v27 = (__n128)a5[1];
  long long v28 = *a5;
  uint64_t v25 = *((void *)a5 + 5);
  uint64_t v26 = *((void *)a5 + 4);
  uint64_t v15 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(a6, a1, v15);
  uint64_t v16 = (int *)type metadata accessor for SportsSyncSheetEngagementEvent.Model(0);
  uint64_t v17 = a6 + v16[5];
  uint64_t v18 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v17, a2, v18);
  *(unsigned char *)(a6 + v16[6]) = v9;
  uint64_t v19 = a6 + v16[7];
  *(unsigned char *)uint64_t v19 = v10;
  *(void *)(v19 + 8) = v11;
  *(void *)(v19 + 16) = v12;
  *(unsigned char *)(v19 + 24) = v13;
  *(unsigned char *)(v19 + 25) = v14;
  *(void *)(v19 + 32) = v24;
  *(void *)(v19 + 40) = v23;
  *(unsigned char *)(v19 + 48) = v22;
  uint64_t v20 = a6 + v16[8];
  __n128 result = v27;
  *(_OWORD *)uint64_t v20 = v28;
  *(__n128 *)(v20 + 16) = v27;
  *(void *)(v20 + 32) = v26;
  *(void *)(v20 + 40) = v25;
  return result;
}

unint64_t sub_1DE0D05DC(char a1)
{
  unint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x74614464656D6974;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0xD000000000000021;
      break;
    case 4:
      unint64_t result = 0x6E676961706D6163;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DE0D06A0()
{
  return sub_1DE0D05DC(*v0);
}

uint64_t sub_1DE0D06A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE0D3814(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE0D06D0(uint64_t a1)
{
  unint64_t v2 = sub_1DE0D0A64();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE0D070C(uint64_t a1)
{
  unint64_t v2 = sub_1DE0D0A64();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SportsSyncSheetEngagementEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1DE0D1060(0, &qword_1EABA26D8, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v9 = &v18[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0D0A64();
  sub_1DE480790();
  v18[0] = 0;
  sub_1DE47F330();
  sub_1DE04D884(&qword_1EBEC2030, MEMORY[0x1E4F4AB70]);
  sub_1DE4805C0();
  if (!v2)
  {
    char v10 = (int *)type metadata accessor for SportsSyncSheetEngagementEvent.Model(0);
    v18[0] = 1;
    sub_1DE47F350();
    sub_1DE04D884(&qword_1EBEC2040, MEMORY[0x1E4F4AB90]);
    sub_1DE4805C0();
    v18[0] = *(unsigned char *)(v3 + v10[6]);
    char v21 = 2;
    sub_1DE0CFA18();
    sub_1DE4805C0();
    uint64_t v11 = v3 + v10[7];
    char v12 = *(unsigned char *)(v11 + 24);
    char v13 = *(unsigned char *)(v11 + 25);
    char v14 = *(unsigned char *)(v11 + 48);
    v18[0] = *(unsigned char *)v11;
    *(_OWORD *)&v18[8] = *(_OWORD *)(v11 + 8);
    v18[24] = v12;
    v18[25] = v13;
    long long v19 = *(_OWORD *)(v11 + 32);
    char v20 = v14;
    char v21 = 3;
    sub_1DE04DD5C();
    sub_1DE4805C0();
    uint64_t v15 = (_OWORD *)(v3 + v10[8]);
    long long v16 = v15[1];
    *(_OWORD *)uint64_t v18 = *v15;
    *(_OWORD *)&v18[16] = v16;
    long long v19 = v15[2];
    char v21 = 4;
    sub_1DE0CFE8C();
    sub_1DE480550();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DE0D0A64()
{
  unint64_t result = qword_1EABA26E0;
  if (!qword_1EABA26E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA26E0);
  }
  return result;
}

uint64_t SportsSyncSheetEngagementEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v3 = sub_1DE47F350();
  uint64_t v30 = *(void *)(v3 - 8);
  uint64_t v31 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DE47F330();
  uint64_t v29 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v32 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE0D1060(0, &qword_1EABA26E8, MEMORY[0x1E4FBBDC0]);
  uint64_t v34 = v8;
  uint64_t v28 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v10 = (char *)&v26 - v9;
  uint64_t v11 = (int *)type metadata accessor for SportsSyncSheetEngagementEvent.Model(0);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0D0A64();
  uint64_t v33 = v10;
  uint64_t v14 = (uint64_t)v35;
  sub_1DE480770();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v15 = v5;
  uint64_t v35 = a1;
  uint64_t v16 = v29;
  uint64_t v17 = v30;
  uint64_t v18 = v31;
  v36[0] = 0;
  sub_1DE04D884(&qword_1EBEC2038, MEMORY[0x1E4F4AB70]);
  sub_1DE4804E0();
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v32, v6);
  v36[0] = 1;
  sub_1DE04D884((unint64_t *)&unk_1EBEC2048, MEMORY[0x1E4F4AB90]);
  sub_1DE4804E0();
  uint64_t v26 = v6;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v13[v11[5]], v15, v18);
  char v39 = 2;
  sub_1DE0CF9C4();
  sub_1DE4804E0();
  v13[v11[6]] = v36[0];
  char v39 = 3;
  sub_1DE04DD08();
  sub_1DE4804E0();
  char v19 = v36[24];
  char v20 = v36[25];
  char v21 = v38;
  char v22 = &v13[v11[7]];
  *char v22 = v36[0];
  *(_OWORD *)(v22 + 8) = *(_OWORD *)&v36[8];
  v22[24] = v19;
  v22[25] = v20;
  *((_OWORD *)v22 + 2) = v37;
  v22[48] = v21;
  char v39 = 4;
  sub_1DE0CFE38();
  sub_1DE480470();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v33, v34);
  uint64_t v23 = &v13[v11[8]];
  long long v24 = *(_OWORD *)&v36[16];
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v36;
  *((_OWORD *)v23 + 1) = v24;
  *((_OWORD *)v23 + 2) = v37;
  sub_1DE0D10C4((uint64_t)v13, v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  return sub_1DE0D1128((uint64_t)v13);
}

void sub_1DE0D1060(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE0D0A64();
    unint64_t v7 = a3(a1, &type metadata for SportsSyncSheetEngagementEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DE0D10C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SportsSyncSheetEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DE0D1128(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SportsSyncSheetEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DE0D1184@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SportsSyncSheetEngagementEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DE0D119C(void *a1)
{
  return SportsSyncSheetEngagementEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DE0D11B4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0A50, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EABA2678, a1);
}

uint64_t sub_1DE0D11EC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0A58, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EABA2690, a1);
}

uint64_t sub_1DE0D1224@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0A60, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA26A8, a1);
}

uint64_t sub_1DE0D125C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_1DE0CFDBC(0, &qword_1EABA26C0, (void (*)(void))sub_1DE0CF9C4, (void (*)(void))sub_1DE0CFA18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_1DE0CFDBC(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  uint64_t v13 = *MEMORY[0x1E4F4A9F8];
  sub_1DE0CFDBC(0, &qword_1EBEC1E58, (void (*)(void))sub_1DE0CFE38, (void (*)(void))sub_1DE0CFE8C);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104);

  return v15(v12, v13, v14);
}

uint64_t *initializeBufferWithCopyOfBuffer for SportsSyncSheetEngagementEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DE04D618();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DE04D7B8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_1DE0CFDBC(0, &qword_1EABA26C0, (void (*)(void))sub_1DE0CF9C4, (void (*)(void))sub_1DE0CFA18);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_1DE0CFDBC(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    char v21 = (char *)a1 + v20;
    char v22 = (char *)a2 + v20;
    sub_1DE0CFDBC(0, &qword_1EBEC1E58, (void (*)(void))sub_1DE0CFE38, (void (*)(void))sub_1DE0CFE8C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for SportsSyncSheetEngagementEvent(uint64_t a1, int *a2)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_1DE0CFDBC(0, &qword_1EABA26C0, (void (*)(void))sub_1DE0CF9C4, (void (*)(void))sub_1DE0CFA18);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_1DE0CFDBC(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_1DE0CFDBC(0, &qword_1EBEC1E58, (void (*)(void))sub_1DE0CFE38, (void (*)(void))sub_1DE0CFE8C);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);

  return v13(v11, v12);
}

uint64_t initializeWithCopy for SportsSyncSheetEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0CFDBC(0, &qword_1EABA26C0, (void (*)(void))sub_1DE0CF9C4, (void (*)(void))sub_1DE0CFA18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0CFDBC(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0CFDBC(0, &qword_1EBEC1E58, (void (*)(void))sub_1DE0CFE38, (void (*)(void))sub_1DE0CFE8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for SportsSyncSheetEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0CFDBC(0, &qword_1EABA26C0, (void (*)(void))sub_1DE0CF9C4, (void (*)(void))sub_1DE0CFA18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0CFDBC(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0CFDBC(0, &qword_1EBEC1E58, (void (*)(void))sub_1DE0CFE38, (void (*)(void))sub_1DE0CFE8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for SportsSyncSheetEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0CFDBC(0, &qword_1EABA26C0, (void (*)(void))sub_1DE0CF9C4, (void (*)(void))sub_1DE0CFA18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0CFDBC(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0CFDBC(0, &qword_1EBEC1E58, (void (*)(void))sub_1DE0CFE38, (void (*)(void))sub_1DE0CFE8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for SportsSyncSheetEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0CFDBC(0, &qword_1EABA26C0, (void (*)(void))sub_1DE0CF9C4, (void (*)(void))sub_1DE0CFA18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0CFDBC(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0CFDBC(0, &qword_1EBEC1E58, (void (*)(void))sub_1DE0CFE38, (void (*)(void))sub_1DE0CFE8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsSyncSheetEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE0D225C);
}

uint64_t sub_1DE0D225C(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  sub_1DE04D7B8();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  sub_1DE0CFDBC(0, &qword_1EABA26C0, (void (*)(void))sub_1DE0CF9C4, (void (*)(void))sub_1DE0CFA18);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  sub_1DE0CFDBC(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  sub_1DE0CFDBC(0, &qword_1EBEC1E58, (void (*)(void))sub_1DE0CFE38, (void (*)(void))sub_1DE0CFE8C);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[8];

  return v18(v20, a2, v19);
}

uint64_t storeEnumTagSinglePayload for SportsSyncSheetEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE0D24FC);
}

uint64_t sub_1DE0D24FC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_1DE04D618();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  sub_1DE04D7B8();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  sub_1DE0CFDBC(0, &qword_1EABA26C0, (void (*)(void))sub_1DE0CF9C4, (void (*)(void))sub_1DE0CFA18);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_9;
  }
  sub_1DE0CFDBC(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_9;
  }
  sub_1DE0CFDBC(0, &qword_1EBEC1E58, (void (*)(void))sub_1DE0CFE38, (void (*)(void))sub_1DE0CFE8C);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a4[8];

  return v20(v22, a2, a2, v21);
}

void sub_1DE0D2794()
{
  sub_1DE04D618();
  if (v0 <= 0x3F)
  {
    sub_1DE04D7B8();
    if (v1 <= 0x3F)
    {
      sub_1DE0CFDBC(319, &qword_1EABA26C0, (void (*)(void))sub_1DE0CF9C4, (void (*)(void))sub_1DE0CFA18);
      if (v2 <= 0x3F)
      {
        sub_1DE0CFDBC(319, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
        if (v3 <= 0x3F)
        {
          sub_1DE0CFDBC(319, &qword_1EBEC1E58, (void (*)(void))sub_1DE0CFE38, (void (*)(void))sub_1DE0CFE8C);
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for SportsSyncSheetEngagementEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    a1 = (void *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DE47F330();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DE47F350();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    *uint64_t v13 = *v14;
    uint64_t v15 = *((void *)v14 + 2);
    *((void *)v13 + 1) = *((void *)v14 + 1);
    *((void *)v13 + 2) = v15;
    *((_WORD *)v13 + 12) = *((_WORD *)v14 + 12);
    uint64_t v16 = *((void *)v14 + 5);
    *((void *)v13 + 4) = *((void *)v14 + 4);
    *((void *)v13 + 5) = v16;
    v13[48] = v14[48];
    uint64_t v17 = a3[8];
    uint64_t v18 = (void *)((char *)a1 + v17);
    uint64_t v19 = (void *)((char *)a2 + v17);
    uint64_t v20 = *(void *)((char *)a2 + v17 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20)
    {
      *uint64_t v18 = *v19;
      v18[1] = v20;
      uint64_t v21 = v19[3];
      _OWORD v18[2] = v19[2];
      v18[3] = v21;
      uint64_t v22 = v19[5];
      v18[4] = v19[4];
      v18[5] = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v24 = *((_OWORD *)v19 + 1);
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v24;
      *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
    }
  }
  return a1;
}

uint64_t destroy for SportsSyncSheetEngagementEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + *(int *)(a2 + 32) + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for SportsSyncSheetEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)uint64_t v12 = *(unsigned char *)v13;
  uint64_t v14 = *(void *)(v13 + 16);
  *(void *)(v12 + 8) = *(void *)(v13 + 8);
  *(void *)(v12 + 16) = v14;
  *(_WORD *)(v12 + 24) = *(_WORD *)(v13 + 24);
  uint64_t v15 = *(void *)(v13 + 40);
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  *(void *)(v12 + 40) = v15;
  *(unsigned char *)(v12 + 48) = *(unsigned char *)(v13 + 48);
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = *(void *)(a2 + v16 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v19)
  {
    *uint64_t v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = v18[3];
    v17[2] = v18[2];
    v17[3] = v20;
    uint64_t v21 = v18[5];
    v17[4] = v18[4];
    v17[5] = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v22 = *((_OWORD *)v18 + 1);
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    *((_OWORD *)v17 + 1) = v22;
    *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
  }
  return a1;
}

uint64_t assignWithCopy for SportsSyncSheetEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v11 = a3[7];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)uint64_t v12 = *(unsigned char *)(a2 + v11);
  *(void *)(v12 + 8) = *(void *)(a2 + v11 + 8);
  *(void *)(v12 + 16) = *(void *)(a2 + v11 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 24) = *(unsigned char *)(v13 + 24);
  *(unsigned char *)(v12 + 25) = *(unsigned char *)(v13 + 25);
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  *(void *)(v12 + 40) = *(void *)(v13 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 48) = *(unsigned char *)(v13 + 48);
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  uint64_t v17 = *(void *)(a1 + v14 + 8);
  uint64_t v18 = v16[1];
  if (v17)
  {
    if (v18)
    {
      *uint64_t v15 = *v16;
      v15[1] = v16[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      void v15[2] = v16[2];
      void v15[3] = v16[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v15[4] = v16[4];
      v15[5] = v16[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DE0D2FF0((uint64_t)v15);
      long long v20 = *((_OWORD *)v16 + 1);
      long long v19 = *((_OWORD *)v16 + 2);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v20;
      *((_OWORD *)v15 + 2) = v19;
    }
  }
  else if (v18)
  {
    *uint64_t v15 = *v16;
    v15[1] = v16[1];
    void v15[2] = v16[2];
    void v15[3] = v16[3];
    v15[4] = v16[4];
    v15[5] = v16[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v21 = *(_OWORD *)v16;
    long long v22 = *((_OWORD *)v16 + 2);
    *((_OWORD *)v15 + 1) = *((_OWORD *)v16 + 1);
    *((_OWORD *)v15 + 2) = v22;
    *(_OWORD *)uint64_t v15 = v21;
  }
  return a1;
}

uint64_t sub_1DE0D2FF0(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for SportsSyncSheetEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  long long v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
  *(unsigned char *)(v12 + 48) = *(unsigned char *)(v13 + 48);
  uint64_t v15 = a3[8];
  uint64_t v16 = (_OWORD *)(a1 + v15);
  uint64_t v17 = (_OWORD *)(a2 + v15);
  long long v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  _OWORD v16[2] = v17[2];
  return a1;
}

uint64_t assignWithTake for SportsSyncSheetEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)uint64_t v12 = *(unsigned char *)(a2 + v11);
  uint64_t v14 = *(void *)(a2 + v11 + 8);
  uint64_t v15 = *(void *)(a2 + v11 + 16);
  *(void *)(v12 + 8) = v14;
  *(void *)(v12 + 16) = v15;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 24) = *(unsigned char *)(v13 + 24);
  *(unsigned char *)(v12 + 25) = *(unsigned char *)(v13 + 25);
  uint64_t v16 = *(void *)(v13 + 40);
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  *(void *)(v12 + 40) = v16;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 48) = *(unsigned char *)(v13 + 48);
  uint64_t v17 = a3[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  if (!*(void *)(a1 + v17 + 8)) {
    goto LABEL_5;
  }
  uint64_t v20 = *(void *)(v19 + 8);
  if (!v20)
  {
    sub_1DE0D2FF0(v18);
LABEL_5:
    long long v23 = *(_OWORD *)(v19 + 16);
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    *(_OWORD *)(v18 + 16) = v23;
    *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
    return a1;
  }
  *(void *)uint64_t v18 = *(void *)v19;
  *(void *)(v18 + 8) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(v19 + 24);
  *(void *)(v18 + 16) = *(void *)(v19 + 16);
  *(void *)(v18 + 24) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(v19 + 40);
  *(void *)(v18 + 32) = *(void *)(v19 + 32);
  *(void *)(v18 + 40) = v22;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsSyncSheetEngagementEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE0D32D8);
}

uint64_t sub_1DE0D32D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DE47F330();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1DE47F350();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 28) + 16);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  int v15 = v14 - 1;
  if (v15 < 0) {
    int v15 = -1;
  }
  return (v15 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsSyncSheetEngagementEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE0D3410);
}

uint64_t sub_1DE0D3410(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1DE47F330();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_1DE47F350();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 28) + 16) = a2;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_1DE0D3524()
{
  uint64_t result = sub_1DE47F330();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1DE47F350();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SportsSyncSheetEngagementEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE0D36D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsSyncSheetEngagementEvent.Model.CodingKeys()
{
  return &type metadata for SportsSyncSheetEngagementEvent.Model.CodingKeys;
}

unint64_t sub_1DE0D3710()
{
  unint64_t result = qword_1EABA2710;
  if (!qword_1EABA2710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2710);
  }
  return result;
}

unint64_t sub_1DE0D3768()
{
  unint64_t result = qword_1EABA2718;
  if (!qword_1EABA2718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2718);
  }
  return result;
}

unint64_t sub_1DE0D37C0()
{
  unint64_t result = qword_1EABA2720;
  if (!qword_1EABA2720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2720);
  }
  return result;
}

uint64_t sub_1DE0D3814(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001DE4BEB80 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001DE4BDDA0 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E676961706D6163 && a2 == 0xEC00000061746144)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1DE480660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1DE0D3A50(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4A9C8], qword_1EBECA6A8, MEMORY[0x1E4F4A9C0]);
}

uint64_t static TagExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EBEC91B8, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EBECA6A8, a1);
}

uint64_t static TagExposureEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_1DE0D3AB8(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4AAB0], qword_1EBECA6C0, MEMORY[0x1E4F4AAA0]);
}

uint64_t static TagExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EBECA6E0, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EBECA6C0, a1);
}

uint64_t sub_1DE0D3B18()
{
  uint64_t v0 = sub_1DE47F020();
  __swift_allocate_value_buffer(v0, qword_1EABA2728);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EABA2728);
  return sub_1DE47F010();
}

uint64_t static TagExposureEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0A68, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA2728, a1);
}

uint64_t TagExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084((uint64_t (*)(void))sub_1DE04D618, a1);
}

uint64_t TagExposureEvent.eventData.setter(uint64_t a1)
{
  sub_1DE04D618();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*TagExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t TagExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE0D50B0(type metadata accessor for TagExposureEvent, (uint64_t (*)(void))sub_1DE04D7B8, a1);
}

uint64_t type metadata accessor for TagExposureEvent(uint64_t a1)
{
  return sub_1DE04E1D0(a1, qword_1EBEC3D70);
}

uint64_t TagExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TagExposureEvent(0) + 20);
  sub_1DE04D7B8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*TagExposureEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t TagExposureEvent.tagData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TagExposureEvent(0) + 24);
  sub_1DE0D4A38(0, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t TagExposureEvent.tagData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TagExposureEvent(0) + 24);
  sub_1DE0D4A38(0, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*TagExposureEvent.tagData.modify())()
{
  return nullsub_1;
}

uint64_t TagExposureEvent.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TagExposureEvent(0) + 28);
  sub_1DE0D4A38(0, &qword_1EBEC1ED8, (void (*)(void))sub_1DE062CDC, (void (*)(void))sub_1DE062D30);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t TagExposureEvent.feedPositionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TagExposureEvent(0) + 28);
  sub_1DE0D4A38(0, &qword_1EBEC1ED8, (void (*)(void))sub_1DE062CDC, (void (*)(void))sub_1DE062D30);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*TagExposureEvent.feedPositionData.modify())()
{
  return nullsub_1;
}

uint64_t TagExposureEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TagExposureEvent(0) + 32);
  sub_1DE0D4A38(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t TagExposureEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TagExposureEvent(0) + 32);
  sub_1DE0D4A38(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*TagExposureEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t TagExposureEvent.sectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TagExposureEvent(0) + 36);
  sub_1DE0D4A38(0, &qword_1EBEC1E40, (void (*)(void))sub_1DE0D42F0, (void (*)(void))sub_1DE0D4344);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE0D42F0()
{
  unint64_t result = qword_1EBEC2490;
  if (!qword_1EBEC2490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC2490);
  }
  return result;
}

unint64_t sub_1DE0D4344()
{
  unint64_t result = qword_1EBEC2488;
  if (!qword_1EBEC2488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC2488);
  }
  return result;
}

uint64_t TagExposureEvent.sectionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TagExposureEvent(0) + 36);
  sub_1DE0D4A38(0, &qword_1EBEC1E40, (void (*)(void))sub_1DE0D42F0, (void (*)(void))sub_1DE0D4344);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*TagExposureEvent.sectionData.modify())()
{
  return nullsub_1;
}

uint64_t TagExposureEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TagExposureEvent(0) + 40);
  sub_1DE0D4A38(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t TagExposureEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TagExposureEvent(0) + 40);
  sub_1DE0D4A38(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*TagExposureEvent.userBundleSubscriptionContextData.modify())()
{
  return nullsub_1;
}

uint64_t TagExposureEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TagExposureEvent(0) + 44);
  sub_1DE0D4A38(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t TagExposureEvent.articleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TagExposureEvent(0) + 44);
  sub_1DE0D4A38(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*TagExposureEvent.articleData.modify())()
{
  return nullsub_1;
}

uint64_t TagExposureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TagExposureEvent(0) + 48);
  sub_1DE0D4A38(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t TagExposureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TagExposureEvent(0) + 48);
  sub_1DE0D4A38(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*TagExposureEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t TagExposureEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TagExposureEvent(0) + 52);
  sub_1DE0D4A38(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_1DE0D4A38(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_1DE47ECA0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t TagExposureEvent.groupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TagExposureEvent(0) + 52);
  sub_1DE0D4A38(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*TagExposureEvent.groupData.modify())()
{
  return nullsub_1;
}

uint64_t TagExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for TagExposureEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_1DE0D4A38(0, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = *MEMORY[0x1E4F4A9F8];
  sub_1DE0D4A38(0, &qword_1EBEC1ED8, (void (*)(void))sub_1DE062CDC, (void (*)(void))sub_1DE062D30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v9, v10, v11);
  uint64_t v12 = a1 + v4[8];
  sub_1DE0D4A38(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v2, v13);
  uint64_t v14 = a1 + v4[9];
  sub_1DE0D4A38(0, &qword_1EBEC1E40, (void (*)(void))sub_1DE0D42F0, (void (*)(void))sub_1DE0D4344);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v2, v15);
  uint64_t v16 = a1 + v4[10];
  sub_1DE0D4A38(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v2, v17);
  uint64_t v18 = a1 + v4[11];
  sub_1DE0D4A38(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v10, v19);
  uint64_t v20 = a1 + v4[12];
  sub_1DE0D4A38(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v10, v21);
  uint64_t v22 = a1 + v4[13];
  sub_1DE0D4A38(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  long long v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104);

  return v24(v22, v10, v23);
}

uint64_t TagExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084(MEMORY[0x1E4F4AB70], a1);
}

uint64_t TagExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE0D50B0(type metadata accessor for TagExposureEvent.Model, MEMORY[0x1E4F4AB90], a1);
}

uint64_t sub_1DE0D50B0@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for TagExposureEvent.Model(uint64_t a1)
{
  return sub_1DE04E1D0(a1, qword_1EBEC3CC0);
}

uint64_t TagExposureEvent.Model.tagData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for TagExposureEvent.Model(0) + 24));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t TagExposureEvent.Model.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for TagExposureEvent.Model(0);
  uint64_t v4 = (int *)(v1 + *(int *)(result + 28));
  int v5 = *v4;
  LOBYTE(v4) = *((unsigned char *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(unsigned char *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t TagExposureEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for TagExposureEvent.Model(0) + 32));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t TagExposureEvent.Model.sectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for TagExposureEvent.Model(0) + 36));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  LOBYTE(v3) = *((unsigned char *)v3 + 24);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = (_BYTE)v3;

  return swift_bridgeObjectRetain();
}

uint64_t TagExposureEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (char *)(v1 + *(int *)(type metadata accessor for TagExposureEvent.Model(0) + 40));
  char v4 = *v3;
  uint64_t v5 = *((void *)v3 + 1);
  uint64_t v6 = *((void *)v3 + 2);
  char v7 = v3[24];
  char v8 = v3[25];
  uint64_t v10 = *((void *)v3 + 4);
  uint64_t v9 = *((void *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(unsigned char *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 25) = v8;
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t TagExposureEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for TagExposureEvent.Model(0);
  sub_1DE0D5464(v1 + *(int *)(v3 + 44), (uint64_t)v5, (unint64_t *)&qword_1EBEC9030);
  sub_1DE0D5464((uint64_t)v5, a1, (unint64_t *)&qword_1EBEC9030);
  return sub_1DE0A9FFC((uint64_t)v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DE0A891C);
}

uint64_t TagExposureEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for TagExposureEvent.Model(0) + 48));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;

  return sub_1DE056598(v4, v5, v6);
}

uint64_t *TagExposureEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for TagExposureEvent.Model(0);
  sub_1DE0D5464(v1 + *(int *)(v3 + 52), (uint64_t)v5, (unint64_t *)&qword_1EBEC9B00);
  sub_1DE0D5464((uint64_t)v5, a1, (unint64_t *)&qword_1EBEC9B00);
  return sub_1DE0D5518(v5);
}

uint64_t sub_1DE0D5464(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  sub_1DE0D54D0(0, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1DE0D54D0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1DE480220();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t *sub_1DE0D5518(uint64_t *a1)
{
  return a1;
}

uint64_t TagExposureEvent.Model.init(eventData:timedData:tagData:feedPositionData:viewData:sectionData:userBundleSubscriptionContextData:articleData:feedData:groupData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, int *a4@<X3>, uint64_t *a5@<X4>, long long *a6@<X5>, char *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long *a10, uint64_t a11)
{
  uint64_t v14 = *a3;
  uint64_t v15 = a3[1];
  int v16 = *a4;
  char v17 = *((unsigned char *)a4 + 4);
  uint64_t v30 = a5[1];
  uint64_t v31 = *a5;
  __int16 v18 = *((_WORD *)a5 + 8);
  long long v34 = *a6;
  uint64_t v33 = *((void *)a6 + 2);
  char v32 = *((unsigned char *)a6 + 24);
  char v42 = *a7;
  uint64_t v40 = *((void *)a7 + 2);
  uint64_t v41 = *((void *)a7 + 1);
  char v38 = a7[25];
  char v39 = a7[24];
  uint64_t v36 = *((void *)a7 + 5);
  uint64_t v37 = *((void *)a7 + 4);
  char v35 = a7[48];
  sub_1DE0D5464(a8, (uint64_t)v45, (unint64_t *)&qword_1EBEC9030);
  long long v44 = *a10;
  uint64_t v43 = *((void *)a10 + 2);
  sub_1DE0D5464(a11, (uint64_t)v46, (unint64_t *)&qword_1EBEC9B00);
  uint64_t v19 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(a9, a1, v19);
  uint64_t v20 = (int *)type metadata accessor for TagExposureEvent.Model(0);
  uint64_t v21 = a9 + v20[5];
  uint64_t v22 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v21, a2, v22);
  uint64_t v23 = (void *)(a9 + v20[6]);
  *uint64_t v23 = v14;
  v23[1] = v15;
  uint64_t v24 = a9 + v20[7];
  *(_DWORD *)uint64_t v24 = v16;
  *(unsigned char *)(v24 + 4) = v17;
  uint64_t v25 = a9 + v20[8];
  *(void *)uint64_t v25 = v31;
  *(void *)(v25 + 8) = v30;
  *(_WORD *)(v25 + 16) = v18;
  uint64_t v26 = a9 + v20[9];
  *(_OWORD *)uint64_t v26 = v34;
  *(void *)(v26 + 16) = v33;
  *(unsigned char *)(v26 + 24) = v32;
  uint64_t v27 = a9 + v20[10];
  *(unsigned char *)uint64_t v27 = v42;
  *(void *)(v27 + 8) = v41;
  *(void *)(v27 + 16) = v40;
  *(unsigned char *)(v27 + 24) = v39;
  *(unsigned char *)(v27 + 25) = v38;
  *(void *)(v27 + 32) = v37;
  *(void *)(v27 + 40) = v36;
  *(unsigned char *)(v27 + 48) = v35;
  sub_1DE0D5464((uint64_t)v45, a9 + v20[11], (unint64_t *)&qword_1EBEC9030);
  uint64_t v28 = a9 + v20[12];
  *(_OWORD *)uint64_t v28 = v44;
  *(void *)(v28 + 16) = v43;
  return sub_1DE0D5464((uint64_t)v46, a9 + v20[13], (unint64_t *)&qword_1EBEC9B00);
}

uint64_t sub_1DE0D57F0(char a1)
{
  uint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x74614464656D6974;
      break;
    case 2:
      uint64_t result = 0x61746144676174;
      break;
    case 3:
      uint64_t result = 0xD000000000000010;
      break;
    case 4:
      unsigned int v3 = 2003134838;
      goto LABEL_11;
    case 5:
      uint64_t result = 0x446E6F6974636573;
      break;
    case 6:
      uint64_t result = 0xD000000000000021;
      break;
    case 7:
      uint64_t result = 0x44656C6369747261;
      break;
    case 8:
      unsigned int v3 = 1684366694;
LABEL_11:
      uint64_t result = v3 | 0x6174614400000000;
      break;
    case 9:
      uint64_t result = 0x74614470756F7267;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE0D5930()
{
  return sub_1DE0D57F0(*v0);
}

uint64_t sub_1DE0D5938@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE0DB7DC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DE0D5960(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_1DE0D596C(uint64_t a1)
{
  unint64_t v2 = sub_1DE0D5EF0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE0D59A8(uint64_t a1)
{
  unint64_t v2 = sub_1DE0D5EF0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t TagExposureEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1DE0D6954(0, &qword_1EABA2740, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v29[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0D5EF0();
  sub_1DE480790();
  LOBYTE(v31) = 0;
  sub_1DE47F330();
  sub_1DE04D884(&qword_1EBEC2030, MEMORY[0x1E4F4AB70]);
  sub_1DE4805C0();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for TagExposureEvent.Model(0);
    LOBYTE(v31) = 1;
    sub_1DE47F350();
    sub_1DE04D884(&qword_1EBEC2040, MEMORY[0x1E4F4AB90]);
    sub_1DE4805C0();
    uint64_t v11 = (uint64_t *)(v3 + v10[6]);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    *(void *)&long long v31 = v13;
    *((void *)&v31 + 1) = v12;
    v30[0] = 2;
    sub_1DE099FD0();
    sub_1DE4805C0();
    uint64_t v14 = (int *)(v3 + v10[7]);
    int v15 = *v14;
    LOBYTE(v14) = *((unsigned char *)v14 + 4);
    LODWORD(v31) = v15;
    BYTE4(v31) = (_BYTE)v14;
    v30[0] = 3;
    sub_1DE062D30();
    sub_1DE480550();
    int v16 = (uint64_t *)(v3 + v10[8]);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    LOWORD(v16) = *((_WORD *)v16 + 8);
    *(void *)&long long v31 = v17;
    *((void *)&v31 + 1) = v18;
    LOWORD(v32) = (_WORD)v16;
    v30[0] = 4;
    sub_1DE05410C();
    sub_1DE4805C0();
    uint64_t v19 = (long long *)(v3 + v10[9]);
    long long v20 = *v19;
    uint64_t v21 = *((void *)v19 + 2);
    LOBYTE(v19) = *((unsigned char *)v19 + 24);
    long long v31 = v20;
    uint64_t v32 = v21;
    char v33 = (char)v19;
    v30[0] = 5;
    sub_1DE0D4344();
    sub_1DE4805C0();
    uint64_t v22 = v3 + v10[10];
    char v23 = *(unsigned char *)(v22 + 24);
    char v24 = *(unsigned char *)(v22 + 25);
    char v25 = *(unsigned char *)(v22 + 48);
    v37[136] = *(unsigned char *)v22;
    long long v38 = *(_OWORD *)(v22 + 8);
    char v39 = v23;
    char v40 = v24;
    long long v41 = *(_OWORD *)(v22 + 32);
    char v42 = v25;
    v37[135] = 6;
    sub_1DE04DD5C();
    sub_1DE4805C0();
    sub_1DE0D5464(v3 + v10[11], (uint64_t)v37, (unint64_t *)&qword_1EBEC9030);
    sub_1DE0D5464((uint64_t)v37, (uint64_t)&v31, (unint64_t *)&qword_1EBEC9030);
    v30[0] = 7;
    sub_1DE053EBC();
    sub_1DE480550();
    uint64_t v26 = (long long *)(v3 + v10[12]);
    uint64_t v27 = *((void *)v26 + 2);
    long long v35 = *v26;
    uint64_t v36 = v27;
    char v34 = 8;
    sub_1DE055800();
    sub_1DE480550();
    sub_1DE0D5464(v3 + v10[13], (uint64_t)&v31, (unint64_t *)&qword_1EBEC9B00);
    sub_1DE0D5464((uint64_t)&v31, (uint64_t)v30, (unint64_t *)&qword_1EBEC9B00);
    v29[7] = 9;
    sub_1DE0629F4();
    sub_1DE480550();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DE0D5EF0()
{
  unint64_t result = qword_1EBECA6E8;
  if (!qword_1EBECA6E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBECA6E8);
  }
  return result;
}

uint64_t TagExposureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v3 = sub_1DE47F350();
  uint64_t v45 = *(void *)(v3 - 8);
  uint64_t v46 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DE47F330();
  uint64_t v47 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE0D6954(0, &qword_1EBEC9370, MEMORY[0x1E4FBBDC0]);
  uint64_t v44 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v42 - v11;
  uint64_t v51 = (int *)type metadata accessor for TagExposureEvent.Model(0);
  MEMORY[0x1F4188790](v51);
  uint64_t v52 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  char v49 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1DE0D5EF0();
  uint64_t v48 = v12;
  uint64_t v15 = v50;
  sub_1DE480770();
  if (v15)
  {
    uint64_t v50 = v15;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  }
  else
  {
    int v16 = v5;
    uint64_t v17 = v10;
    v54[0] = 0;
    sub_1DE04D884(&qword_1EBEC2038, MEMORY[0x1E4F4AB70]);
    sub_1DE4804E0();
    uint64_t v21 = v52;
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v52, v8, v6);
    v54[0] = 1;
    sub_1DE04D884((unint64_t *)&unk_1EBEC2048, MEMORY[0x1E4F4AB90]);
    uint64_t v22 = v46;
    sub_1DE4804E0();
    uint64_t v43 = v6;
    char v23 = v51;
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(&v21[v51[5]], v16, v22);
    v53[0] = 2;
    sub_1DE099F7C();
    sub_1DE4804E0();
    uint64_t v24 = *(void *)&v54[8];
    char v25 = &v21[v23[6]];
    *(void *)char v25 = *(void *)v54;
    *((void *)v25 + 1) = v24;
    v53[0] = 3;
    sub_1DE062CDC();
    sub_1DE480470();
    char v26 = v54[4];
    uint64_t v27 = &v21[v23[7]];
    *(_DWORD *)uint64_t v27 = *(_DWORD *)v54;
    v27[4] = v26;
    v53[0] = 4;
    sub_1DE0540B8();
    sub_1DE4804E0();
    uint64_t v28 = *(void *)&v54[8];
    __int16 v29 = *(_WORD *)&v54[16];
    uint64_t v30 = &v21[v23[8]];
    *(void *)uint64_t v30 = *(void *)v54;
    *((void *)v30 + 1) = v28;
    *((_WORD *)v30 + 8) = v29;
    v53[0] = 5;
    sub_1DE0D42F0();
    sub_1DE4804E0();
    uint64_t v31 = *(void *)&v54[16];
    char v32 = v55;
    char v33 = &v21[v23[9]];
    *(_OWORD *)char v33 = *(_OWORD *)v54;
    *((void *)v33 + 2) = v31;
    v33[24] = v32;
    v53[0] = 6;
    sub_1DE04DD08();
    sub_1DE4804E0();
    char v34 = v55;
    char v35 = v56;
    char v36 = v58;
    uint64_t v37 = &v21[v23[10]];
    *uint64_t v37 = v54[0];
    *(_OWORD *)(v37 + 8) = *(_OWORD *)&v54[8];
    v37[24] = v34;
    v37[25] = v35;
    *((_OWORD *)v37 + 2) = v57;
    v37[48] = v36;
    v60[159] = 7;
    sub_1DE053E68();
    sub_1DE480470();
    sub_1DE0D5464((uint64_t)v60, (uint64_t)v59, (unint64_t *)&qword_1EBEC9030);
    sub_1DE0D5464((uint64_t)v59, (uint64_t)&v21[v51[11]], (unint64_t *)&qword_1EBEC9030);
    v53[0] = 8;
    sub_1DE0557AC();
    sub_1DE480470();
    uint64_t v50 = 0;
    uint64_t v38 = *(void *)&v54[16];
    char v39 = &v21[v51[12]];
    *(_OWORD *)char v39 = *(_OWORD *)v54;
    *((void *)v39 + 2) = v38;
    v60[158] = 9;
    sub_1DE0629A0();
    uint64_t v40 = v50;
    sub_1DE480470();
    uint64_t v50 = v40;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v48, v44);
    if (v40)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v52, v43);
      long long v20 = v51;
      uint64_t v19 = v52;
      (*(void (**)(char *, uint64_t))(v45 + 8))(&v52[v51[5]], v46);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DE0D5464((uint64_t)&v19[v20[11]], (uint64_t)v54, (unint64_t *)&qword_1EBEC9030);
      sub_1DE0A9FFC((uint64_t)v54, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DE0AA078);
      return sub_1DE05FBA8(*(void *)&v19[v20[12]], *(void *)&v19[v20[12] + 8], *(void *)&v19[v20[12] + 16]);
    }
    else
    {
      sub_1DE0D5464((uint64_t)v54, (uint64_t)v53, (unint64_t *)&qword_1EBEC9B00);
      uint64_t v41 = (uint64_t)v52;
      sub_1DE0D5464((uint64_t)v53, (uint64_t)&v52[v51[13]], (unint64_t *)&qword_1EBEC9B00);
      sub_1DE0D69B8(v41, v42);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
      return sub_1DE0D6A1C(v41);
    }
  }
}

void sub_1DE0D6954(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE0D5EF0();
    unint64_t v7 = a3(a1, &type metadata for TagExposureEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DE0D69B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TagExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DE0D6A1C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TagExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DE0D6A78@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TagExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DE0D6A90(void *a1)
{
  return TagExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DE0D6AA8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EBEC91B8, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EBECA6A8, a1);
}

uint64_t sub_1DE0D6AE0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EBECA6E0, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EBECA6C0, a1);
}

uint64_t sub_1DE0D6B18@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0A68, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA2728, a1);
}

uint64_t sub_1DE0D6B50@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_1DE0D4A38(0, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = *MEMORY[0x1E4F4A9F8];
  sub_1DE0D4A38(0, &qword_1EBEC1ED8, (void (*)(void))sub_1DE062CDC, (void (*)(void))sub_1DE062D30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  uint64_t v13 = a2 + a1[8];
  sub_1DE0D4A38(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v4, v14);
  uint64_t v15 = a2 + a1[9];
  sub_1DE0D4A38(0, &qword_1EBEC1E40, (void (*)(void))sub_1DE0D42F0, (void (*)(void))sub_1DE0D4344);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v4, v16);
  uint64_t v17 = a2 + a1[10];
  sub_1DE0D4A38(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v4, v18);
  uint64_t v19 = a2 + a1[11];
  sub_1DE0D4A38(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v11, v20);
  uint64_t v21 = a2 + a1[12];
  sub_1DE0D4A38(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v21, v11, v22);
  uint64_t v23 = a2 + a1[13];
  sub_1DE0D4A38(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  char v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104);

  return v25(v23, v11, v24);
}

uint64_t *initializeBufferWithCopyOfBuffer for TagExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v44 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v44 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DE04D618();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DE04D7B8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_1DE0D4A38(0, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_1DE0D4A38(0, &qword_1EBEC1ED8, (void (*)(void))sub_1DE062CDC, (void (*)(void))sub_1DE062D30);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_1DE0D4A38(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    char v25 = (char *)a1 + v24;
    char v26 = (char *)a2 + v24;
    sub_1DE0D4A38(0, &qword_1EBEC1E40, (void (*)(void))sub_1DE0D42F0, (void (*)(void))sub_1DE0D4344);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    __int16 v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    sub_1DE0D4A38(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    char v33 = (char *)a1 + v32;
    char v34 = (char *)a2 + v32;
    sub_1DE0D4A38(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    uint64_t v37 = (char *)a1 + v36;
    uint64_t v38 = (char *)a2 + v36;
    sub_1DE0D4A38(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = a3[13];
    uint64_t v41 = (char *)a1 + v40;
    uint64_t v42 = (char *)a2 + v40;
    sub_1DE0D4A38(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
  }
  return a1;
}

uint64_t destroy for TagExposureEvent(uint64_t a1, int *a2)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_1DE0D4A38(0, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_1DE0D4A38(0, &qword_1EBEC1ED8, (void (*)(void))sub_1DE062CDC, (void (*)(void))sub_1DE062D30);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_1DE0D4A38(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_1DE0D4A38(0, &qword_1EBEC1E40, (void (*)(void))sub_1DE0D42F0, (void (*)(void))sub_1DE0D4344);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_1DE0D4A38(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_1DE0D4A38(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  sub_1DE0D4A38(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[13];
  sub_1DE0D4A38(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8);

  return v23(v21, v22);
}

uint64_t initializeWithCopy for TagExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0D4A38(0, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0D4A38(0, &qword_1EBEC1ED8, (void (*)(void))sub_1DE062CDC, (void (*)(void))sub_1DE062D30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0D4A38(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE0D4A38(0, &qword_1EBEC1E40, (void (*)(void))sub_1DE0D42F0, (void (*)(void))sub_1DE0D4344);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE0D4A38(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE0D4A38(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE0D4A38(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_1DE0D4A38(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  return a1;
}

uint64_t assignWithCopy for TagExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0D4A38(0, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0D4A38(0, &qword_1EBEC1ED8, (void (*)(void))sub_1DE062CDC, (void (*)(void))sub_1DE062D30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0D4A38(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE0D4A38(0, &qword_1EBEC1E40, (void (*)(void))sub_1DE0D42F0, (void (*)(void))sub_1DE0D4344);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE0D4A38(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE0D4A38(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE0D4A38(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_1DE0D4A38(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  return a1;
}

uint64_t initializeWithTake for TagExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0D4A38(0, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0D4A38(0, &qword_1EBEC1ED8, (void (*)(void))sub_1DE062CDC, (void (*)(void))sub_1DE062D30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0D4A38(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE0D4A38(0, &qword_1EBEC1E40, (void (*)(void))sub_1DE0D42F0, (void (*)(void))sub_1DE0D4344);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE0D4A38(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE0D4A38(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE0D4A38(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_1DE0D4A38(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  return a1;
}

uint64_t assignWithTake for TagExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0D4A38(0, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0D4A38(0, &qword_1EBEC1ED8, (void (*)(void))sub_1DE062CDC, (void (*)(void))sub_1DE062D30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0D4A38(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE0D4A38(0, &qword_1EBEC1E40, (void (*)(void))sub_1DE0D42F0, (void (*)(void))sub_1DE0D4344);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE0D4A38(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE0D4A38(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE0D4A38(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_1DE0D4A38(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  return a1;
}

uint64_t getEnumTagSinglePayload for TagExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE0D8C9C);
}

uint64_t sub_1DE0D8C9C(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_20:
    return v9(v10, a2, v8);
  }
  sub_1DE04D7B8();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_19:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_20;
  }
  sub_1DE0D4A38(0, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_19;
  }
  sub_1DE0D4A38(0, &qword_1EBEC1ED8, (void (*)(void))sub_1DE062CDC, (void (*)(void))sub_1DE062D30);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_19;
  }
  sub_1DE0D4A38(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_19;
  }
  sub_1DE0D4A38(0, &qword_1EBEC1E40, (void (*)(void))sub_1DE0D42F0, (void (*)(void))sub_1DE0D4344);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_19;
  }
  sub_1DE0D4A38(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_19;
  }
  sub_1DE0D4A38(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_19;
  }
  sub_1DE0D4A38(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_19;
  }
  sub_1DE0D4A38(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48);
  uint64_t v24 = v22;
  uint64_t v25 = a1 + a3[13];

  return v23(v25, a2, v24);
}

uint64_t storeEnumTagSinglePayload for TagExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE0D91D0);
}

uint64_t sub_1DE0D91D0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_1DE04D618();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_20:
    return v11(v12, a2, a2, v10);
  }
  sub_1DE04D7B8();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_19:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_20;
  }
  sub_1DE0D4A38(0, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_19;
  }
  sub_1DE0D4A38(0, &qword_1EBEC1ED8, (void (*)(void))sub_1DE062CDC, (void (*)(void))sub_1DE062D30);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_19;
  }
  sub_1DE0D4A38(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_19;
  }
  sub_1DE0D4A38(0, &qword_1EBEC1E40, (void (*)(void))sub_1DE0D42F0, (void (*)(void))sub_1DE0D4344);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_19;
  }
  sub_1DE0D4A38(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_19;
  }
  sub_1DE0D4A38(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_19;
  }
  sub_1DE0D4A38(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_19;
  }
  sub_1DE0D4A38(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);
  uint64_t v26 = v24;
  uint64_t v27 = a1 + a4[13];

  return v25(v27, a2, a2, v26);
}

void sub_1DE0D96FC()
{
  sub_1DE04D618();
  if (v0 <= 0x3F)
  {
    sub_1DE04D7B8();
    if (v1 <= 0x3F)
    {
      sub_1DE0D4A38(319, &qword_1EBEC1FC8, (void (*)(void))sub_1DE099F7C, (void (*)(void))sub_1DE099FD0);
      if (v2 <= 0x3F)
      {
        sub_1DE0D4A38(319, &qword_1EBEC1ED8, (void (*)(void))sub_1DE062CDC, (void (*)(void))sub_1DE062D30);
        if (v3 <= 0x3F)
        {
          sub_1DE0D4A38(319, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
          if (v4 <= 0x3F)
          {
            sub_1DE0D4A38(319, &qword_1EBEC1E40, (void (*)(void))sub_1DE0D42F0, (void (*)(void))sub_1DE0D4344);
            if (v5 <= 0x3F)
            {
              sub_1DE0D4A38(319, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
              if (v6 <= 0x3F)
              {
                sub_1DE0D4A38(319, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
                if (v7 <= 0x3F)
                {
                  sub_1DE0D4A38(319, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
                  if (v8 <= 0x3F)
                  {
                    sub_1DE0D4A38(319, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
                    if (v9 <= 0x3F) {
                      swift_initStructMetadata();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TagExposureEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v39 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v39 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DE47F330();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    unint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DE47F350();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (uint64_t *)((char *)a1 + v12);
    uint64_t v15 = (uint64_t *)((char *)a2 + v12);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = (char *)a1 + v13;
    uint64_t v18 = (char *)a2 + v13;
    *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
    v17[4] = v18[4];
    uint64_t v19 = a3[8];
    uint64_t v20 = a3[9];
    uint64_t v21 = (char *)a1 + v19;
    uint64_t v22 = (char *)a2 + v19;
    uint64_t v23 = *((void *)v22 + 1);
    *(void *)uint64_t v21 = *(void *)v22;
    *((void *)v21 + 1) = v23;
    v21[16] = v22[16];
    v21[17] = v22[17];
    uint64_t v24 = (char *)a1 + v20;
    uint64_t v25 = (char *)a2 + v20;
    uint64_t v26 = *((void *)v25 + 1);
    *(void *)uint64_t v24 = *(void *)v25;
    *((void *)v24 + 1) = v26;
    *((void *)v24 + 2) = *((void *)v25 + 2);
    v24[24] = v25[24];
    uint64_t v27 = a3[10];
    uint64_t v28 = a3[11];
    uint64_t v29 = (char *)a1 + v27;
    uint64_t v30 = (char *)a2 + v27;
    char *v29 = *v30;
    uint64_t v31 = *((void *)v30 + 2);
    *((void *)v29 + 1) = *((void *)v30 + 1);
    *((void *)v29 + 2) = v31;
    v29[24] = v30[24];
    v29[25] = v30[25];
    uint64_t v32 = *((void *)v30 + 5);
    *((void *)v29 + 4) = *((void *)v30 + 4);
    *((void *)v29 + 5) = v32;
    v29[48] = v30[48];
    uint64_t v33 = (char *)a1 + v28;
    uint64_t v34 = (char *)a2 + v28;
    uint64_t v35 = *(uint64_t *)((char *)a2 + v28 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v35)
    {
      *(void *)uint64_t v33 = *(void *)v34;
      v33[8] = v34[8];
      *((void *)v33 + 2) = *((void *)v34 + 2);
      *((void *)v33 + 3) = v35;
      v33[32] = v34[32];
      uint64_t v36 = *((void *)v34 + 6);
      *((void *)v33 + 5) = *((void *)v34 + 5);
      *((void *)v33 + 6) = v36;
      *((_WORD *)v33 + 28) = *((_WORD *)v34 + 28);
      uint64_t v38 = *((void *)v34 + 8);
      uint64_t v37 = *((void *)v34 + 9);
      v33[80] = v34[80];
      *((void *)v33 + 8) = v38;
      *((void *)v33 + 9) = v37;
      *(_OWORD *)(v33 + 88) = *(_OWORD *)(v34 + 88);
      *((void *)v33 + 13) = *((void *)v34 + 13);
      v33[112] = v34[112];
      *((void *)v33 + 15) = *((void *)v34 + 15);
      *((_DWORD *)v33 + 32) = *((_DWORD *)v34 + 32);
      v33[132] = v34[132];
      *(_WORD *)(v33 + 133) = *(_WORD *)(v34 + 133);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v40 = *((_OWORD *)v34 + 7);
      *((_OWORD *)v33 + 6) = *((_OWORD *)v34 + 6);
      *((_OWORD *)v33 + 7) = v40;
      *(void *)(v33 + 127) = *(void *)(v34 + 127);
      long long v41 = *((_OWORD *)v34 + 3);
      *((_OWORD *)v33 + 2) = *((_OWORD *)v34 + 2);
      *((_OWORD *)v33 + 3) = v41;
      long long v42 = *((_OWORD *)v34 + 5);
      *((_OWORD *)v33 + 4) = *((_OWORD *)v34 + 4);
      *((_OWORD *)v33 + 5) = v42;
      long long v43 = *((_OWORD *)v34 + 1);
      *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
      *((_OWORD *)v33 + 1) = v43;
    }
    uint64_t v44 = a3[12];
    uint64_t v45 = (char *)a1 + v44;
    uint64_t v46 = (char *)a2 + v44;
    uint64_t v47 = *((void *)v46 + 2);
    if (v47 == 1)
    {
      *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
      *((void *)v45 + 2) = *((void *)v46 + 2);
    }
    else
    {
      *uint64_t v45 = *v46;
      *((void *)v45 + 1) = *((void *)v46 + 1);
      *((void *)v45 + 2) = v47;
      swift_bridgeObjectRetain();
    }
    uint64_t v48 = a3[13];
    char v49 = (char *)a1 + v48;
    uint64_t v50 = (char *)a2 + v48;
    uint64_t v51 = *((void *)v50 + 2);
    if (v51)
    {
      *(_WORD *)char v49 = *(_WORD *)v50;
      *((void *)v49 + 1) = *((void *)v50 + 1);
      *((void *)v49 + 2) = v51;
      *((void *)v49 + 3) = *((void *)v50 + 3);
      uint64_t v52 = *((void *)v50 + 5);
      *((void *)v49 + 4) = *((void *)v50 + 4);
      *((void *)v49 + 5) = v52;
      uint64_t v53 = *((void *)v50 + 7);
      *((void *)v49 + 6) = *((void *)v50 + 6);
      *((void *)v49 + 7) = v53;
      uint64_t v54 = *((void *)v50 + 9);
      *((void *)v49 + 8) = *((void *)v50 + 8);
      *((void *)v49 + 9) = v54;
      v49[80] = v50[80];
      uint64_t v55 = *((void *)v50 + 12);
      *((void *)v49 + 11) = *((void *)v50 + 11);
      *((void *)v49 + 12) = v55;
      *((void *)v49 + 13) = *((void *)v50 + 13);
      v49[112] = v50[112];
      uint64_t v56 = *((void *)v50 + 16);
      *((void *)v49 + 15) = *((void *)v50 + 15);
      *((void *)v49 + 16) = v56;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v57 = *((_OWORD *)v50 + 7);
      *((_OWORD *)v49 + 6) = *((_OWORD *)v50 + 6);
      *((_OWORD *)v49 + 7) = v57;
      *((void *)v49 + 16) = *((void *)v50 + 16);
      long long v58 = *((_OWORD *)v50 + 3);
      *((_OWORD *)v49 + 2) = *((_OWORD *)v50 + 2);
      *((_OWORD *)v49 + 3) = v58;
      long long v59 = *((_OWORD *)v50 + 5);
      *((_OWORD *)v49 + 4) = *((_OWORD *)v50 + 4);
      *((_OWORD *)v49 + 5) = v59;
      long long v60 = *((_OWORD *)v50 + 1);
      *(_OWORD *)char v49 = *(_OWORD *)v50;
      *((_OWORD *)v49 + 1) = v60;
    }
  }
  return a1;
}

uint64_t destroy for TagExposureEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[11] + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + a2[12] + 16) != 1) {
    swift_bridgeObjectRelease();
  }
  uint64_t result = *(void *)(a1 + a2[13] + 16);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for TagExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v11);
  uint64_t v14 = (void *)(a2 + v11);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = a1 + v12;
  uint64_t v17 = a2 + v12;
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  *(unsigned char *)(v16 + 4) = *(unsigned char *)(v17 + 4);
  uint64_t v18 = a3[8];
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  uint64_t v22 = *(void *)(v21 + 8);
  *(void *)uint64_t v20 = *(void *)v21;
  *(void *)(v20 + 8) = v22;
  *(unsigned char *)(v20 + 16) = *(unsigned char *)(v21 + 16);
  *(unsigned char *)(v20 + 17) = *(unsigned char *)(v21 + 17);
  uint64_t v23 = a1 + v19;
  uint64_t v24 = a2 + v19;
  uint64_t v25 = *(void *)(v24 + 8);
  *(void *)uint64_t v23 = *(void *)v24;
  *(void *)(v23 + 8) = v25;
  *(void *)(v23 + 16) = *(void *)(v24 + 16);
  *(unsigned char *)(v23 + 24) = *(unsigned char *)(v24 + 24);
  uint64_t v26 = a3[10];
  uint64_t v27 = a3[11];
  uint64_t v28 = a1 + v26;
  uint64_t v29 = a2 + v26;
  *(unsigned char *)uint64_t v28 = *(unsigned char *)v29;
  uint64_t v30 = *(void *)(v29 + 16);
  *(void *)(v28 + 8) = *(void *)(v29 + 8);
  *(void *)(v28 + 16) = v30;
  *(unsigned char *)(v28 + 24) = *(unsigned char *)(v29 + 24);
  *(unsigned char *)(v28 + 25) = *(unsigned char *)(v29 + 25);
  uint64_t v31 = *(void *)(v29 + 40);
  *(void *)(v28 + 32) = *(void *)(v29 + 32);
  *(void *)(v28 + 40) = v31;
  *(unsigned char *)(v28 + 48) = *(unsigned char *)(v29 + 48);
  uint64_t v32 = a1 + v27;
  uint64_t v33 = a2 + v27;
  uint64_t v34 = *(void *)(a2 + v27 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v34)
  {
    *(void *)uint64_t v32 = *(void *)v33;
    *(unsigned char *)(v32 + 8) = *(unsigned char *)(v33 + 8);
    *(void *)(v32 + 16) = *(void *)(v33 + 16);
    *(void *)(v32 + 24) = v34;
    *(unsigned char *)(v32 + 32) = *(unsigned char *)(v33 + 32);
    uint64_t v35 = *(void *)(v33 + 48);
    *(void *)(v32 + 40) = *(void *)(v33 + 40);
    *(void *)(v32 + 48) = v35;
    *(_WORD *)(v32 + 56) = *(_WORD *)(v33 + 56);
    uint64_t v37 = *(void *)(v33 + 64);
    uint64_t v36 = *(void *)(v33 + 72);
    *(unsigned char *)(v32 + 80) = *(unsigned char *)(v33 + 80);
    *(void *)(v32 + 64) = v37;
    *(void *)(v32 + 72) = v36;
    *(_OWORD *)(v32 + 88) = *(_OWORD *)(v33 + 88);
    *(void *)(v32 + 104) = *(void *)(v33 + 104);
    *(unsigned char *)(v32 + 112) = *(unsigned char *)(v33 + 112);
    *(void *)(v32 + 120) = *(void *)(v33 + 120);
    *(_DWORD *)(v32 + 128) = *(_DWORD *)(v33 + 128);
    *(unsigned char *)(v32 + 132) = *(unsigned char *)(v33 + 132);
    *(_WORD *)(v32 + 133) = *(_WORD *)(v33 + 133);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v38 = *(_OWORD *)(v33 + 112);
    *(_OWORD *)(v32 + 96) = *(_OWORD *)(v33 + 96);
    *(_OWORD *)(v32 + 112) = v38;
    *(void *)(v32 + 127) = *(void *)(v33 + 127);
    long long v39 = *(_OWORD *)(v33 + 48);
    *(_OWORD *)(v32 + 32) = *(_OWORD *)(v33 + 32);
    *(_OWORD *)(v32 + 48) = v39;
    long long v40 = *(_OWORD *)(v33 + 80);
    *(_OWORD *)(v32 + 64) = *(_OWORD *)(v33 + 64);
    *(_OWORD *)(v32 + 80) = v40;
    long long v41 = *(_OWORD *)(v33 + 16);
    *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
    *(_OWORD *)(v32 + 16) = v41;
  }
  uint64_t v42 = a3[12];
  uint64_t v43 = a1 + v42;
  uint64_t v44 = a2 + v42;
  uint64_t v45 = *(void *)(v44 + 16);
  if (v45 == 1)
  {
    *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
    *(void *)(v43 + 16) = *(void *)(v44 + 16);
  }
  else
  {
    *(unsigned char *)uint64_t v43 = *(unsigned char *)v44;
    *(void *)(v43 + 8) = *(void *)(v44 + 8);
    *(void *)(v43 + 16) = v45;
    swift_bridgeObjectRetain();
  }
  uint64_t v46 = a3[13];
  uint64_t v47 = a1 + v46;
  uint64_t v48 = a2 + v46;
  uint64_t v49 = *(void *)(v48 + 16);
  if (v49)
  {
    *(_WORD *)uint64_t v47 = *(_WORD *)v48;
    *(void *)(v47 + 8) = *(void *)(v48 + 8);
    *(void *)(v47 + 16) = v49;
    *(void *)(v47 + 24) = *(void *)(v48 + 24);
    uint64_t v50 = *(void *)(v48 + 40);
    *(void *)(v47 + 32) = *(void *)(v48 + 32);
    *(void *)(v47 + 40) = v50;
    uint64_t v51 = *(void *)(v48 + 56);
    *(void *)(v47 + 48) = *(void *)(v48 + 48);
    *(void *)(v47 + 56) = v51;
    uint64_t v52 = *(void *)(v48 + 72);
    *(void *)(v47 + 64) = *(void *)(v48 + 64);
    *(void *)(v47 + 72) = v52;
    *(unsigned char *)(v47 + 80) = *(unsigned char *)(v48 + 80);
    uint64_t v53 = *(void *)(v48 + 96);
    *(void *)(v47 + 88) = *(void *)(v48 + 88);
    *(void *)(v47 + 96) = v53;
    *(void *)(v47 + 104) = *(void *)(v48 + 104);
    *(unsigned char *)(v47 + 112) = *(unsigned char *)(v48 + 112);
    uint64_t v54 = *(void *)(v48 + 128);
    *(void *)(v47 + 120) = *(void *)(v48 + 120);
    *(void *)(v47 + 128) = v54;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v55 = *(_OWORD *)(v48 + 112);
    *(_OWORD *)(v47 + 96) = *(_OWORD *)(v48 + 96);
    *(_OWORD *)(v47 + 112) = v55;
    *(void *)(v47 + 128) = *(void *)(v48 + 128);
    long long v56 = *(_OWORD *)(v48 + 48);
    *(_OWORD *)(v47 + 32) = *(_OWORD *)(v48 + 32);
    *(_OWORD *)(v47 + 48) = v56;
    long long v57 = *(_OWORD *)(v48 + 80);
    *(_OWORD *)(v47 + 64) = *(_OWORD *)(v48 + 64);
    *(_OWORD *)(v47 + 80) = v57;
    long long v58 = *(_OWORD *)(v48 + 16);
    *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
    *(_OWORD *)(v47 + 16) = v58;
  }
  return a1;
}

uint64_t assignWithCopy for TagExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = (int *)(a2 + v14);
  int v17 = *v16;
  *(unsigned char *)(v15 + 4) = *((unsigned char *)v16 + 4);
  *(_DWORD *)uint64_t v15 = v17;
  uint64_t v18 = a3[8];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(void *)uint64_t v19 = *(void *)(a2 + v18);
  *(void *)(v19 + 8) = *(void *)(a2 + v18 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v19 + 16) = *(unsigned char *)(v20 + 16);
  *(unsigned char *)(v19 + 17) = *(unsigned char *)(v20 + 17);
  uint64_t v21 = a3[9];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  *(void *)uint64_t v22 = *(void *)(a2 + v21);
  *(void *)(v22 + 8) = *(void *)(a2 + v21 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(v23 + 16);
  *(unsigned char *)(v22 + 24) = *(unsigned char *)(v23 + 24);
  *(void *)(v22 + 16) = v24;
  uint64_t v25 = a3[10];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  *(unsigned char *)uint64_t v26 = *(unsigned char *)(a2 + v25);
  *(void *)(v26 + 8) = *(void *)(a2 + v25 + 8);
  *(void *)(v26 + 16) = *(void *)(a2 + v25 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v26 + 24) = *(unsigned char *)(v27 + 24);
  *(unsigned char *)(v26 + 25) = *(unsigned char *)(v27 + 25);
  *(void *)(v26 + 32) = *(void *)(v27 + 32);
  *(void *)(v26 + 40) = *(void *)(v27 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v26 + 48) = *(unsigned char *)(v27 + 48);
  uint64_t v28 = a3[11];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = *(void *)(a1 + v28 + 24);
  uint64_t v32 = *(void *)(a2 + v28 + 24);
  if (v31)
  {
    if (v32)
    {
      *(unsigned char *)uint64_t v29 = *(unsigned char *)v30;
      *(_DWORD *)(v29 + 4) = *(_DWORD *)(v30 + 4);
      *(unsigned char *)(v29 + 8) = *(unsigned char *)(v30 + 8);
      *(void *)(v29 + 16) = *(void *)(v30 + 16);
      *(void *)(v29 + 24) = *(void *)(v30 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v29 + 32) = *(unsigned char *)(v30 + 32);
      *(void *)(v29 + 40) = *(void *)(v30 + 40);
      uint64_t v33 = *(void *)(v30 + 48);
      *(unsigned char *)(v29 + 56) = *(unsigned char *)(v30 + 56);
      *(void *)(v29 + 48) = v33;
      *(unsigned char *)(v29 + 57) = *(unsigned char *)(v30 + 57);
      *(void *)(v29 + 64) = *(void *)(v30 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v34 = *(void *)(v30 + 72);
      *(unsigned char *)(v29 + 80) = *(unsigned char *)(v30 + 80);
      *(void *)(v29 + 72) = v34;
      *(void *)(v29 + 88) = *(void *)(v30 + 88);
      *(void *)(v29 + 96) = *(void *)(v30 + 96);
      *(void *)(v29 + 104) = *(void *)(v30 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v29 + 112) = *(unsigned char *)(v30 + 112);
      *(void *)(v29 + 120) = *(void *)(v30 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v29 + 128) = *(unsigned char *)(v30 + 128);
      *(unsigned char *)(v29 + 129) = *(unsigned char *)(v30 + 129);
      *(unsigned char *)(v29 + 130) = *(unsigned char *)(v30 + 130);
      *(unsigned char *)(v29 + 131) = *(unsigned char *)(v30 + 131);
      *(unsigned char *)(v29 + 132) = *(unsigned char *)(v30 + 132);
      *(unsigned char *)(v29 + 133) = *(unsigned char *)(v30 + 133);
      *(unsigned char *)(v29 + 134) = *(unsigned char *)(v30 + 134);
    }
    else
    {
      sub_1DE0AE434(v29);
      *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
      long long v37 = *(_OWORD *)(v30 + 64);
      long long v39 = *(_OWORD *)(v30 + 16);
      long long v38 = *(_OWORD *)(v30 + 32);
      *(_OWORD *)(v29 + 48) = *(_OWORD *)(v30 + 48);
      *(_OWORD *)(v29 + 64) = v37;
      *(_OWORD *)(v29 + 16) = v39;
      *(_OWORD *)(v29 + 32) = v38;
      long long v41 = *(_OWORD *)(v30 + 96);
      long long v40 = *(_OWORD *)(v30 + 112);
      long long v42 = *(_OWORD *)(v30 + 80);
      *(void *)(v29 + 127) = *(void *)(v30 + 127);
      *(_OWORD *)(v29 + 96) = v41;
      *(_OWORD *)(v29 + 112) = v40;
      *(_OWORD *)(v29 + 80) = v42;
    }
  }
  else if (v32)
  {
    *(void *)uint64_t v29 = *(void *)v30;
    *(unsigned char *)(v29 + 8) = *(unsigned char *)(v30 + 8);
    *(void *)(v29 + 16) = *(void *)(v30 + 16);
    *(void *)(v29 + 24) = *(void *)(v30 + 24);
    *(unsigned char *)(v29 + 32) = *(unsigned char *)(v30 + 32);
    *(void *)(v29 + 40) = *(void *)(v30 + 40);
    uint64_t v35 = *(void *)(v30 + 48);
    *(unsigned char *)(v29 + 56) = *(unsigned char *)(v30 + 56);
    *(void *)(v29 + 48) = v35;
    *(unsigned char *)(v29 + 57) = *(unsigned char *)(v30 + 57);
    *(void *)(v29 + 64) = *(void *)(v30 + 64);
    uint64_t v36 = *(void *)(v30 + 72);
    *(unsigned char *)(v29 + 80) = *(unsigned char *)(v30 + 80);
    *(void *)(v29 + 72) = v36;
    *(void *)(v29 + 88) = *(void *)(v30 + 88);
    *(void *)(v29 + 96) = *(void *)(v30 + 96);
    *(void *)(v29 + 104) = *(void *)(v30 + 104);
    *(unsigned char *)(v29 + 112) = *(unsigned char *)(v30 + 112);
    *(void *)(v29 + 120) = *(void *)(v30 + 120);
    *(unsigned char *)(v29 + 128) = *(unsigned char *)(v30 + 128);
    *(unsigned char *)(v29 + 129) = *(unsigned char *)(v30 + 129);
    *(unsigned char *)(v29 + 130) = *(unsigned char *)(v30 + 130);
    *(unsigned char *)(v29 + 131) = *(unsigned char *)(v30 + 131);
    *(unsigned char *)(v29 + 132) = *(unsigned char *)(v30 + 132);
    *(unsigned char *)(v29 + 133) = *(unsigned char *)(v30 + 133);
    *(unsigned char *)(v29 + 134) = *(unsigned char *)(v30 + 134);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
    long long v43 = *(_OWORD *)(v30 + 16);
    long long v44 = *(_OWORD *)(v30 + 32);
    long long v45 = *(_OWORD *)(v30 + 64);
    *(_OWORD *)(v29 + 48) = *(_OWORD *)(v30 + 48);
    *(_OWORD *)(v29 + 64) = v45;
    *(_OWORD *)(v29 + 16) = v43;
    *(_OWORD *)(v29 + 32) = v44;
    long long v46 = *(_OWORD *)(v30 + 80);
    long long v47 = *(_OWORD *)(v30 + 96);
    long long v48 = *(_OWORD *)(v30 + 112);
    *(void *)(v29 + 127) = *(void *)(v30 + 127);
    *(_OWORD *)(v29 + 96) = v47;
    *(_OWORD *)(v29 + 112) = v48;
    *(_OWORD *)(v29 + 80) = v46;
  }
  uint64_t v49 = a3[12];
  uint64_t v50 = a1 + v49;
  uint64_t v51 = (long long *)(a2 + v49);
  uint64_t v52 = *(void *)(a1 + v49 + 16);
  uint64_t v53 = *(void *)(a2 + v49 + 16);
  if (v52 == 1)
  {
    if (v53 == 1)
    {
      long long v54 = *v51;
      *(void *)(v50 + 16) = *((void *)v51 + 2);
      *(_OWORD *)uint64_t v50 = v54;
    }
    else
    {
      *(unsigned char *)uint64_t v50 = *(unsigned char *)v51;
      *(void *)(v50 + 8) = *((void *)v51 + 1);
      *(void *)(v50 + 16) = *((void *)v51 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v53 == 1)
  {
    sub_1DE05D370(v50);
    uint64_t v55 = *((void *)v51 + 2);
    *(_OWORD *)uint64_t v50 = *v51;
    *(void *)(v50 + 16) = v55;
  }
  else
  {
    *(unsigned char *)uint64_t v50 = *(unsigned char *)v51;
    *(void *)(v50 + 8) = *((void *)v51 + 1);
    *(void *)(v50 + 16) = *((void *)v51 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v56 = a3[13];
  uint64_t v57 = a1 + v56;
  uint64_t v58 = a2 + v56;
  uint64_t v59 = *(void *)(a1 + v56 + 16);
  uint64_t v60 = *(void *)(v58 + 16);
  if (v59)
  {
    if (v60)
    {
      *(unsigned char *)uint64_t v57 = *(unsigned char *)v58;
      *(unsigned char *)(v57 + 1) = *(unsigned char *)(v58 + 1);
      *(void *)(v57 + 8) = *(void *)(v58 + 8);
      *(void *)(v57 + 16) = *(void *)(v58 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v57 + 24) = *(_DWORD *)(v58 + 24);
      *(_DWORD *)(v57 + 28) = *(_DWORD *)(v58 + 28);
      *(void *)(v57 + 32) = *(void *)(v58 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v57 + 40) = *(void *)(v58 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v57 + 48) = *(void *)(v58 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v57 + 56) = *(void *)(v58 + 56);
      *(void *)(v57 + 64) = *(void *)(v58 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v57 + 72) = *(void *)(v58 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v57 + 80) = *(unsigned char *)(v58 + 80);
      *(void *)(v57 + 88) = *(void *)(v58 + 88);
      *(void *)(v57 + 96) = *(void *)(v58 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v61 = *(void *)(v58 + 104);
      *(unsigned char *)(v57 + 112) = *(unsigned char *)(v58 + 112);
      *(void *)(v57 + 104) = v61;
      *(void *)(v57 + 120) = *(void *)(v58 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v57 + 128) = *(void *)(v58 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DE069980(v57);
      *(_OWORD *)uint64_t v57 = *(_OWORD *)v58;
      long long v63 = *(_OWORD *)(v58 + 64);
      long long v65 = *(_OWORD *)(v58 + 16);
      long long v64 = *(_OWORD *)(v58 + 32);
      *(_OWORD *)(v57 + 48) = *(_OWORD *)(v58 + 48);
      *(_OWORD *)(v57 + 64) = v63;
      *(_OWORD *)(v57 + 16) = v65;
      *(_OWORD *)(v57 + 32) = v64;
      long long v67 = *(_OWORD *)(v58 + 96);
      long long v66 = *(_OWORD *)(v58 + 112);
      long long v68 = *(_OWORD *)(v58 + 80);
      *(void *)(v57 + 128) = *(void *)(v58 + 128);
      *(_OWORD *)(v57 + 96) = v67;
      *(_OWORD *)(v57 + 112) = v66;
      *(_OWORD *)(v57 + 80) = v68;
    }
  }
  else if (v60)
  {
    *(unsigned char *)uint64_t v57 = *(unsigned char *)v58;
    *(unsigned char *)(v57 + 1) = *(unsigned char *)(v58 + 1);
    *(void *)(v57 + 8) = *(void *)(v58 + 8);
    *(void *)(v57 + 16) = *(void *)(v58 + 16);
    *(_DWORD *)(v57 + 24) = *(_DWORD *)(v58 + 24);
    *(_DWORD *)(v57 + 28) = *(_DWORD *)(v58 + 28);
    *(void *)(v57 + 32) = *(void *)(v58 + 32);
    *(void *)(v57 + 40) = *(void *)(v58 + 40);
    *(void *)(v57 + 48) = *(void *)(v58 + 48);
    *(void *)(v57 + 56) = *(void *)(v58 + 56);
    *(void *)(v57 + 64) = *(void *)(v58 + 64);
    *(void *)(v57 + 72) = *(void *)(v58 + 72);
    *(unsigned char *)(v57 + 80) = *(unsigned char *)(v58 + 80);
    *(void *)(v57 + 88) = *(void *)(v58 + 88);
    *(void *)(v57 + 96) = *(void *)(v58 + 96);
    uint64_t v62 = *(void *)(v58 + 104);
    *(unsigned char *)(v57 + 112) = *(unsigned char *)(v58 + 112);
    *(void *)(v57 + 104) = v62;
    *(void *)(v57 + 120) = *(void *)(v58 + 120);
    *(void *)(v57 + 128) = *(void *)(v58 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v57 = *(_OWORD *)v58;
    long long v69 = *(_OWORD *)(v58 + 16);
    long long v70 = *(_OWORD *)(v58 + 32);
    long long v71 = *(_OWORD *)(v58 + 64);
    *(_OWORD *)(v57 + 48) = *(_OWORD *)(v58 + 48);
    *(_OWORD *)(v57 + 64) = v71;
    *(_OWORD *)(v57 + 16) = v69;
    *(_OWORD *)(v57 + 32) = v70;
    long long v72 = *(_OWORD *)(v58 + 80);
    long long v73 = *(_OWORD *)(v58 + 96);
    long long v74 = *(_OWORD *)(v58 + 112);
    *(void *)(v57 + 128) = *(void *)(v58 + 128);
    *(_OWORD *)(v57 + 96) = v73;
    *(_OWORD *)(v57 + 112) = v74;
    *(_OWORD *)(v57 + 80) = v72;
  }
  return a1;
}

uint64_t initializeWithTake for TagExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)(v12 + 4) = *(unsigned char *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  uint64_t v14 = a3[8];
  uint64_t v15 = a3[9];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(_WORD *)(v16 + 16) = *(_WORD *)(v17 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  uint64_t v18 = (_OWORD *)(a1 + v15);
  uint64_t v19 = (_OWORD *)(a2 + v15);
  *uint64_t v18 = *v19;
  *(_OWORD *)((char *)v18 + 9) = *(_OWORD *)((char *)v19 + 9);
  uint64_t v20 = a3[10];
  uint64_t v21 = a3[11];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = (long long *)(a2 + v20);
  long long v24 = *v23;
  long long v25 = v23[1];
  long long v26 = v23[2];
  *(unsigned char *)(v22 + 48) = *((unsigned char *)v23 + 48);
  *(_OWORD *)(v22 + 16) = v25;
  *(_OWORD *)(v22 + 32) = v26;
  *(_OWORD *)uint64_t v22 = v24;
  uint64_t v27 = a1 + v21;
  uint64_t v28 = a2 + v21;
  *(void *)(v27 + 127) = *(void *)(v28 + 127);
  long long v29 = *(_OWORD *)(v28 + 112);
  *(_OWORD *)(v27 + 96) = *(_OWORD *)(v28 + 96);
  *(_OWORD *)(v27 + 112) = v29;
  long long v30 = *(_OWORD *)(v28 + 80);
  *(_OWORD *)(v27 + 64) = *(_OWORD *)(v28 + 64);
  *(_OWORD *)(v27 + 80) = v30;
  long long v31 = *(_OWORD *)(v28 + 48);
  *(_OWORD *)(v27 + 32) = *(_OWORD *)(v28 + 32);
  *(_OWORD *)(v27 + 48) = v31;
  long long v32 = *(_OWORD *)(v28 + 16);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  *(_OWORD *)(v27 + 16) = v32;
  uint64_t v33 = a3[12];
  uint64_t v34 = a3[13];
  uint64_t v35 = a1 + v33;
  uint64_t v36 = a2 + v33;
  *(void *)(v35 + 16) = *(void *)(v36 + 16);
  *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
  uint64_t v37 = a1 + v34;
  uint64_t v38 = a2 + v34;
  long long v39 = *(_OWORD *)(v38 + 112);
  *(_OWORD *)(v37 + 96) = *(_OWORD *)(v38 + 96);
  *(_OWORD *)(v37 + 112) = v39;
  *(void *)(v37 + 128) = *(void *)(v38 + 128);
  long long v40 = *(_OWORD *)(v38 + 48);
  *(_OWORD *)(v37 + 32) = *(_OWORD *)(v38 + 32);
  *(_OWORD *)(v37 + 48) = v40;
  long long v41 = *(_OWORD *)(v38 + 80);
  *(_OWORD *)(v37 + 64) = *(_OWORD *)(v38 + 64);
  *(_OWORD *)(v37 + 80) = v41;
  long long v42 = *(_OWORD *)(v38 + 16);
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
  *(_OWORD *)(v37 + 16) = v42;
  return a1;
}

uint64_t assignWithTake for TagExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  *(unsigned char *)(v18 + 4) = *(unsigned char *)(v19 + 4);
  uint64_t v20 = a1 + v17;
  uint64_t v21 = a2 + v17;
  uint64_t v22 = *(void *)(a2 + v17);
  uint64_t v23 = *(void *)(a2 + v17 + 8);
  *(void *)uint64_t v20 = v22;
  *(void *)(v20 + 8) = v23;
  swift_bridgeObjectRelease();
  *(_WORD *)(v20 + 16) = *(_WORD *)(v21 + 16);
  uint64_t v24 = a3[9];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = *(void *)(a2 + v24 + 8);
  *(void *)uint64_t v25 = *(void *)(a2 + v24);
  *(void *)(v25 + 8) = v27;
  swift_bridgeObjectRelease();
  *(void *)(v25 + 16) = *(void *)(v26 + 16);
  *(unsigned char *)(v25 + 24) = *(unsigned char *)(v26 + 24);
  uint64_t v28 = a3[10];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  *(unsigned char *)uint64_t v29 = *(unsigned char *)(a2 + v28);
  uint64_t v31 = *(void *)(a2 + v28 + 16);
  *(void *)(v29 + 8) = *(void *)(a2 + v28 + 8);
  *(void *)(v29 + 16) = v31;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v29 + 24) = *(unsigned char *)(v30 + 24);
  *(unsigned char *)(v29 + 25) = *(unsigned char *)(v30 + 25);
  uint64_t v32 = *(void *)(v30 + 40);
  *(void *)(v29 + 32) = *(void *)(v30 + 32);
  *(void *)(v29 + 40) = v32;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v29 + 48) = *(unsigned char *)(v30 + 48);
  uint64_t v33 = a3[11];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  if (*(void *)(a1 + v33 + 24))
  {
    uint64_t v36 = *(void *)(v35 + 24);
    if (v36)
    {
      *(unsigned char *)uint64_t v34 = *(unsigned char *)v35;
      *(_DWORD *)(v34 + 4) = *(_DWORD *)(v35 + 4);
      *(unsigned char *)(v34 + 8) = *(unsigned char *)(v35 + 8);
      *(void *)(v34 + 16) = *(void *)(v35 + 16);
      *(void *)(v34 + 24) = v36;
      swift_bridgeObjectRelease();
      *(unsigned char *)(v34 + 32) = *(unsigned char *)(v35 + 32);
      uint64_t v37 = *(void *)(v35 + 48);
      *(void *)(v34 + 40) = *(void *)(v35 + 40);
      *(void *)(v34 + 48) = v37;
      *(unsigned char *)(v34 + 56) = *(unsigned char *)(v35 + 56);
      *(unsigned char *)(v34 + 57) = *(unsigned char *)(v35 + 57);
      *(void *)(v34 + 64) = *(void *)(v35 + 64);
      swift_bridgeObjectRelease();
      *(void *)(v34 + 72) = *(void *)(v35 + 72);
      *(unsigned char *)(v34 + 80) = *(unsigned char *)(v35 + 80);
      *(_OWORD *)(v34 + 88) = *(_OWORD *)(v35 + 88);
      *(void *)(v34 + 104) = *(void *)(v35 + 104);
      swift_bridgeObjectRelease();
      *(unsigned char *)(v34 + 112) = *(unsigned char *)(v35 + 112);
      *(void *)(v34 + 120) = *(void *)(v35 + 120);
      swift_bridgeObjectRelease();
      *(unsigned char *)(v34 + 128) = *(unsigned char *)(v35 + 128);
      *(unsigned char *)(v34 + 129) = *(unsigned char *)(v35 + 129);
      *(unsigned char *)(v34 + 130) = *(unsigned char *)(v35 + 130);
      *(unsigned char *)(v34 + 131) = *(unsigned char *)(v35 + 131);
      *(unsigned char *)(v34 + 132) = *(unsigned char *)(v35 + 132);
      *(unsigned char *)(v34 + 133) = *(unsigned char *)(v35 + 133);
      *(unsigned char *)(v34 + 134) = *(unsigned char *)(v35 + 134);
      goto LABEL_6;
    }
    sub_1DE0AE434(v34);
  }
  long long v38 = *(_OWORD *)(v35 + 112);
  *(_OWORD *)(v34 + 96) = *(_OWORD *)(v35 + 96);
  *(_OWORD *)(v34 + 112) = v38;
  *(void *)(v34 + 127) = *(void *)(v35 + 127);
  long long v39 = *(_OWORD *)(v35 + 48);
  *(_OWORD *)(v34 + 32) = *(_OWORD *)(v35 + 32);
  *(_OWORD *)(v34 + 48) = v39;
  long long v40 = *(_OWORD *)(v35 + 80);
  *(_OWORD *)(v34 + 64) = *(_OWORD *)(v35 + 64);
  *(_OWORD *)(v34 + 80) = v40;
  long long v41 = *(_OWORD *)(v35 + 16);
  *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
  *(_OWORD *)(v34 + 16) = v41;
LABEL_6:
  uint64_t v42 = a3[12];
  uint64_t v43 = a1 + v42;
  uint64_t v44 = a2 + v42;
  if (*(void *)(a1 + v42 + 16) == 1)
  {
LABEL_9:
    *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
    *(void *)(v43 + 16) = *(void *)(v44 + 16);
    goto LABEL_11;
  }
  uint64_t v45 = *(void *)(v44 + 16);
  if (v45 == 1)
  {
    sub_1DE05D370(v43);
    goto LABEL_9;
  }
  *(unsigned char *)uint64_t v43 = *(unsigned char *)v44;
  *(void *)(v43 + 8) = *(void *)(v44 + 8);
  *(void *)(v43 + 16) = v45;
  swift_bridgeObjectRelease();
LABEL_11:
  uint64_t v46 = a3[13];
  uint64_t v47 = a1 + v46;
  uint64_t v48 = a2 + v46;
  if (!*(void *)(a1 + v46 + 16))
  {
LABEL_15:
    long long v52 = *(_OWORD *)(v48 + 112);
    *(_OWORD *)(v47 + 96) = *(_OWORD *)(v48 + 96);
    *(_OWORD *)(v47 + 112) = v52;
    *(void *)(v47 + 128) = *(void *)(v48 + 128);
    long long v53 = *(_OWORD *)(v48 + 48);
    *(_OWORD *)(v47 + 32) = *(_OWORD *)(v48 + 32);
    *(_OWORD *)(v47 + 48) = v53;
    long long v54 = *(_OWORD *)(v48 + 80);
    *(_OWORD *)(v47 + 64) = *(_OWORD *)(v48 + 64);
    *(_OWORD *)(v47 + 80) = v54;
    long long v55 = *(_OWORD *)(v48 + 16);
    *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
    *(_OWORD *)(v47 + 16) = v55;
    return a1;
  }
  uint64_t v49 = *(void *)(v48 + 16);
  if (!v49)
  {
    sub_1DE069980(v47);
    goto LABEL_15;
  }
  *(_WORD *)uint64_t v47 = *(_WORD *)v48;
  *(void *)(v47 + 8) = *(void *)(v48 + 8);
  *(void *)(v47 + 16) = v49;
  swift_bridgeObjectRelease();
  *(void *)(v47 + 24) = *(void *)(v48 + 24);
  *(void *)(v47 + 32) = *(void *)(v48 + 32);
  swift_bridgeObjectRelease();
  *(void *)(v47 + 40) = *(void *)(v48 + 40);
  swift_bridgeObjectRelease();
  *(void *)(v47 + 48) = *(void *)(v48 + 48);
  swift_bridgeObjectRelease();
  uint64_t v50 = *(void *)(v48 + 64);
  *(void *)(v47 + 56) = *(void *)(v48 + 56);
  *(void *)(v47 + 64) = v50;
  swift_bridgeObjectRelease();
  *(void *)(v47 + 72) = *(void *)(v48 + 72);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v47 + 80) = *(unsigned char *)(v48 + 80);
  uint64_t v51 = *(void *)(v48 + 96);
  *(void *)(v47 + 88) = *(void *)(v48 + 88);
  *(void *)(v47 + 96) = v51;
  swift_bridgeObjectRelease();
  *(void *)(v47 + 104) = *(void *)(v48 + 104);
  *(unsigned char *)(v47 + 112) = *(unsigned char *)(v48 + 112);
  *(void *)(v47 + 120) = *(void *)(v48 + 120);
  swift_bridgeObjectRelease();
  *(void *)(v47 + 128) = *(void *)(v48 + 128);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TagExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE0DB1E8);
}

uint64_t sub_1DE0DB1E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DE47F330();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1DE47F350();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for TagExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE0DB314);
}

uint64_t sub_1DE0DB314(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1DE47F330();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_1DE47F350();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_1DE0DB428()
{
  uint64_t result = sub_1DE47F330();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1DE47F350();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TagExposureEvent.Model.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TagExposureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE0DB69CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TagExposureEvent.Model.CodingKeys()
{
  return &type metadata for TagExposureEvent.Model.CodingKeys;
}

unint64_t sub_1DE0DB6D8()
{
  unint64_t result = qword_1EABA2748;
  if (!qword_1EABA2748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2748);
  }
  return result;
}

unint64_t sub_1DE0DB730()
{
  unint64_t result = qword_1EBECA6F8;
  if (!qword_1EBECA6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBECA6F8);
  }
  return result;
}

unint64_t sub_1DE0DB788()
{
  unint64_t result = qword_1EBECA6F0;
  if (!qword_1EBECA6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBECA6F0);
  }
  return result;
}

uint64_t sub_1DE0DB7DC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61746144676174 && a2 == 0xE700000000000000 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DE4BDF10 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x446E6F6974636573 && a2 == 0xEB00000000617461 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001DE4BDDA0 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_1DE480660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

NewsAnalytics::AppLaunchTakeoverTriggerResult_optional __swiftcall AppLaunchTakeoverTriggerResult.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_1DE480690();
  result.value = swift_bridgeObjectRelease();
  char v5 = 18;
  if (v3 < 0x12) {
    char v5 = v3;
  }
  *BOOL v2 = v5;
  return result;
}

unint64_t AppLaunchTakeoverTriggerResult.rawValue.getter()
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x73736563637573;
      break;
    case 2:
    case 0xC:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0xD000000000000017;
      break;
    case 5:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000031;
      break;
    case 7:
      unint64_t result = 0xD000000000000016;
      break;
    case 8:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 9:
      unint64_t result = 0xD000000000000018;
      break;
    case 0xA:
      unint64_t result = 0xD000000000000024;
      break;
    case 0xB:
      unint64_t result = 0xD000000000000012;
      break;
    case 0xD:
      unint64_t result = 0xD000000000000014;
      break;
    case 0xE:
      unint64_t result = 0x664F656369766564;
      break;
    case 0xF:
      unint64_t result = 0xD000000000000019;
      break;
    case 0x10:
      unint64_t result = 0xD000000000000015;
      break;
    case 0x11:
      unint64_t result = 0x52636972656E6567;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE0DBEB4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DE3D3144(*a1, *a2);
}

unint64_t sub_1DE0DBEC4()
{
  unint64_t result = qword_1EABA2750;
  if (!qword_1EABA2750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2750);
  }
  return result;
}

uint64_t sub_1DE0DBF18()
{
  return sub_1DE480750();
}

uint64_t sub_1DE0DBF80()
{
  AppLaunchTakeoverTriggerResult.rawValue.getter();
  sub_1DE47FF00();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE0DBFE4()
{
  return sub_1DE480750();
}

NewsAnalytics::AppLaunchTakeoverTriggerResult_optional sub_1DE0DC048(Swift::String *a1)
{
  return AppLaunchTakeoverTriggerResult.init(rawValue:)(*a1);
}

unint64_t sub_1DE0DC054@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = AppLaunchTakeoverTriggerResult.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DE0DC07C()
{
  return sub_1DE47FFF0();
}

uint64_t sub_1DE0DC0DC()
{
  return sub_1DE47FFE0();
}

uint64_t getEnumTagSinglePayload for ViewAction(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEF) {
    goto LABEL_17;
  }
  if (a2 + 17 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 17) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 17;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x12;
  int v8 = v6 - 18;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AppLaunchTakeoverTriggerResult(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 17 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 17) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEE)
  {
    unsigned int v6 = ((a2 - 239) >> 8) + 1;
    *unint64_t result = a2 + 17;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE0DC288);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 17;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppLaunchTakeoverTriggerResult()
{
  return &type metadata for AppLaunchTakeoverTriggerResult;
}

unint64_t sub_1DE0DC2C0()
{
  unint64_t result = qword_1EBECBF60;
  if (!qword_1EBECBF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBECBF60);
  }
  return result;
}

uint64_t ActionMethod.init(_:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  sub_1DE0DC54C();
  MEMORY[0x1F4188790](v4 - 8);
  unsigned int v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DE47F840();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a1, 1, v7) != 1)
  {
    sub_1DE0DC600(a1, (uint64_t)v6);
    int v9 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v6, v7);
    if (v9 != *MEMORY[0x1E4FACB70])
    {
      if (v9 == *MEMORY[0x1E4FACB30])
      {
        char v10 = 3;
        goto LABEL_4;
      }
      if (v9 == *MEMORY[0x1E4FACB28])
      {
        char v10 = 2;
        goto LABEL_4;
      }
      if (v9 == *MEMORY[0x1E4FACB58])
      {
        char v10 = 1;
        goto LABEL_4;
      }
      if (v9 == *MEMORY[0x1E4FACB68])
      {
        char v10 = 4;
        goto LABEL_4;
      }
      if (v9 == *MEMORY[0x1E4FACB60])
      {
        char v10 = 5;
        goto LABEL_4;
      }
      if (v9 == *MEMORY[0x1E4FACB48])
      {
        char v10 = 6;
        goto LABEL_4;
      }
      if (v9 != *MEMORY[0x1E4FACB50])
      {
        if (v9 == *MEMORY[0x1E4FACB20])
        {
          char v10 = 7;
          goto LABEL_4;
        }
        if (v9 == *MEMORY[0x1E4FACB78])
        {
          char v10 = 8;
          goto LABEL_4;
        }
        (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
      }
    }
  }
  char v10 = 0;
LABEL_4:
  uint64_t result = sub_1DE0DC5A4(a1);
  *a2 = v10;
  return result;
}

void sub_1DE0DC54C()
{
  if (!qword_1EABA2758)
  {
    sub_1DE47F840();
    unint64_t v0 = sub_1DE480220();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EABA2758);
    }
  }
}

uint64_t sub_1DE0DC5A4(uint64_t a1)
{
  sub_1DE0DC54C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DE0DC600(uint64_t a1, uint64_t a2)
{
  sub_1DE0DC54C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

NewsAnalytics::ViewAction_optional __swiftcall ViewAction.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1DE480690();
  result.value = swift_bridgeObjectRelease();
  char v5 = 18;
  if (v3 < 0x12) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

unint64_t ViewAction.rawValue.getter()
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x636E75614C707061;
      break;
    case 2:
      unint64_t result = 0x6570697773;
      break;
    case 3:
      unint64_t result = 0x656E696C64616568;
      break;
    case 4:
      unint64_t result = 0x7061546575737369;
      break;
    case 5:
      unint64_t result = 0x6B6E696C70656564;
      break;
    case 6:
      unint64_t result = 0x6E6164726F666661;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
      unint64_t result = 0x6976614E72657375;
      break;
    case 9:
      unint64_t result = 0x61646F4D6E65706FLL;
      break;
    case 0xA:
      unint64_t result = 0x6369747241636F74;
      break;
    case 0xB:
      unint64_t result = 0x6163696669746F6ELL;
      break;
    case 0xC:
      unint64_t result = 0xD000000000000016;
      break;
    case 0xD:
      unint64_t result = 0xD000000000000010;
      break;
    case 0xE:
      unint64_t result = 0xD000000000000013;
      break;
    case 0xF:
      unint64_t result = 0x6154656C7A7A7570;
      break;
    case 0x10:
      unint64_t result = 0xD000000000000022;
      break;
    case 0x11:
      unint64_t result = 0x6E65746E49707061;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE0DC93C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DE3DBB30(*a1, *a2);
}

unint64_t sub_1DE0DC94C()
{
  unint64_t result = qword_1EABA2760;
  if (!qword_1EABA2760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2760);
  }
  return result;
}

uint64_t sub_1DE0DC9A0()
{
  return sub_1DE480750();
}

uint64_t sub_1DE0DCA08()
{
  ViewAction.rawValue.getter();
  sub_1DE47FF00();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE0DCA6C()
{
  return sub_1DE480750();
}

NewsAnalytics::ViewAction_optional sub_1DE0DCAD0(Swift::String *a1)
{
  return ViewAction.init(rawValue:)(*a1);
}

unint64_t sub_1DE0DCADC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ViewAction.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DE0DCB04()
{
  return sub_1DE47FFF0();
}

uint64_t sub_1DE0DCB64()
{
  return sub_1DE47FFE0();
}

unsigned char *storeEnumTagSinglePayload for ViewAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 17 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 17) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEE)
  {
    unsigned int v6 = ((a2 - 239) >> 8) + 1;
    *unint64_t result = a2 + 17;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE0DCC80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 17;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewAction()
{
  return &type metadata for ViewAction;
}

unint64_t sub_1DE0DCCB8()
{
  unint64_t result = qword_1EBEC2370;
  if (!qword_1EBEC2370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC2370);
  }
  return result;
}

uint64_t static LiveActivityCountData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t LiveActivityCountData.countOfLiveActivitiesFollowed.getter()
{
  return *v0;
}

uint64_t LiveActivityCountData.countOfLiveActivitiesFollowed.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*LiveActivityCountData.countOfLiveActivitiesFollowed.modify())()
{
  return nullsub_1;
}

uint64_t LiveActivityCountData.init(countOfLiveActivitiesFollowed:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

unint64_t sub_1DE0DCD4C()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_1DE0DCD68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE0DD588(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DE0DCD94(uint64_t a1)
{
  unint64_t v2 = sub_1DE0DCF54();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE0DCDD0(uint64_t a1)
{
  unint64_t v2 = sub_1DE0DCF54();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t LiveActivityCountData.encode(to:)(void *a1)
{
  sub_1DE0DD128(0, &qword_1EBECB8F8, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unsigned int v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0DCF54();
  sub_1DE480790();
  sub_1DE4805D0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DE0DCF54()
{
  unint64_t result = qword_1EBECB020;
  if (!qword_1EBECB020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBECB020);
  }
  return result;
}

uint64_t LiveActivityCountData.init(from:)@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  sub_1DE0DD128(0, &qword_1EBECB860, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  int v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0DCF54();
  sub_1DE480770();
  if (!v2)
  {
    int v10 = sub_1DE4804F0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DE0DD128(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE0DCF54();
    unint64_t v7 = a3(a1, &type metadata for LiveActivityCountData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1DE0DD190()
{
  unint64_t result = qword_1EBECB050;
  if (!qword_1EBECB050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBECB050);
  }
  return result;
}

unint64_t sub_1DE0DD1E8()
{
  unint64_t result = qword_1EBECB048;
  if (!qword_1EBECB048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBECB048);
  }
  return result;
}

uint64_t sub_1DE0DD23C@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return LiveActivityCountData.init(from:)(a1, a2);
}

uint64_t sub_1DE0DD254(void *a1)
{
  sub_1DE0DD128(0, &qword_1EBECB8F8, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0DCF54();
  sub_1DE480790();
  sub_1DE4805D0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for LiveActivityCountData()
{
  return &type metadata for LiveActivityCountData;
}

unsigned char *storeEnumTagSinglePayload for LiveActivityCountData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DE0DD448);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LiveActivityCountData.CodingKeys()
{
  return &type metadata for LiveActivityCountData.CodingKeys;
}

unint64_t sub_1DE0DD484()
{
  unint64_t result = qword_1EABA2768;
  if (!qword_1EABA2768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2768);
  }
  return result;
}

unint64_t sub_1DE0DD4DC()
{
  unint64_t result = qword_1EBECB030;
  if (!qword_1EBECB030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBECB030);
  }
  return result;
}

unint64_t sub_1DE0DD534()
{
  unint64_t result = qword_1EBECB028;
  if (!qword_1EBECB028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBECB028);
  }
  return result;
}

uint64_t sub_1DE0DD588(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001DLL && a2 == 0x80000001DE4BEBA0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1DE480660();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t static DownloadData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void DownloadData.type.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *DownloadData.type.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*DownloadData.type.modify())()
{
  return nullsub_1;
}

NewsAnalytics::DownloadData __swiftcall DownloadData.init(type:)(NewsAnalytics::DownloadData type)
{
  *uint64_t v1 = *(unsigned char *)type.type;
  return type;
}

uint64_t sub_1DE0DD65C()
{
  return 1701869940;
}

uint64_t sub_1DE0DD66C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1DE480660();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DE0DD6F4(uint64_t a1)
{
  unint64_t v2 = sub_1DE0DD8C8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE0DD730(uint64_t a1)
{
  unint64_t v2 = sub_1DE0DD8C8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t DownloadData.encode(to:)(void *a1)
{
  sub_1DE0DDB08(0, &qword_1EABA2770, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v7 = (char *)&v10 - v6;
  char v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0DD8C8();
  sub_1DE480790();
  char v11 = v8;
  sub_1DE0DD91C();
  sub_1DE4805C0();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DE0DD8C8()
{
  unint64_t result = qword_1EABA2778;
  if (!qword_1EABA2778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2778);
  }
  return result;
}

unint64_t sub_1DE0DD91C()
{
  unint64_t result = qword_1EABA2780;
  if (!qword_1EABA2780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2780);
  }
  return result;
}

uint64_t DownloadData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_1DE0DDB08(0, &qword_1EABA2788, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  int v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0DD8C8();
  sub_1DE480770();
  if (!v2)
  {
    sub_1DE0DDB6C();
    sub_1DE4804E0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DE0DDB08(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE0DD8C8();
    unint64_t v7 = a3(a1, &type metadata for DownloadData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1DE0DDB6C()
{
  unint64_t result = qword_1EABA2790;
  if (!qword_1EABA2790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2790);
  }
  return result;
}

unint64_t sub_1DE0DDBC4()
{
  unint64_t result = qword_1EBEC2548;
  if (!qword_1EBEC2548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC2548);
  }
  return result;
}

unint64_t sub_1DE0DDC1C()
{
  unint64_t result = qword_1EBEC2540;
  if (!qword_1EBEC2540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC2540);
  }
  return result;
}

uint64_t sub_1DE0DDC70@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return DownloadData.init(from:)(a1, a2);
}

uint64_t sub_1DE0DDC88(void *a1)
{
  return DownloadData.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for DownloadData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE0DDD6CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadData()
{
  return &type metadata for DownloadData;
}

unsigned char *storeEnumTagSinglePayload for DownloadData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DE0DDE40);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadData.CodingKeys()
{
  return &type metadata for DownloadData.CodingKeys;
}

unint64_t sub_1DE0DDE7C()
{
  unint64_t result = qword_1EABA2798;
  if (!qword_1EABA2798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2798);
  }
  return result;
}

unint64_t sub_1DE0DDED4()
{
  unint64_t result = qword_1EABA27A0;
  if (!qword_1EABA27A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA27A0);
  }
  return result;
}

unint64_t sub_1DE0DDF2C()
{
  unint64_t result = qword_1EABA27A8;
  if (!qword_1EABA27A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA27A8);
  }
  return result;
}

uint64_t sub_1DE0DDF80(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4A9C8], qword_1EABA27B0, MEMORY[0x1E4F4A9C0]);
}

uint64_t static SubscribeButtonExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0A70, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EABA27B0, a1);
}

uint64_t static SubscribeButtonExposureEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_1DE0DDFE8(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4AAB0], qword_1EABA27C8, MEMORY[0x1E4F4AAA0]);
}

uint64_t static SubscribeButtonExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0A78, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EABA27C8, a1);
}

uint64_t sub_1DE0DE048()
{
  uint64_t v0 = sub_1DE47F020();
  __swift_allocate_value_buffer(v0, qword_1EABA27E0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EABA27E0);
  return sub_1DE47F010();
}

uint64_t static SubscribeButtonExposureEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0A80, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA27E0, a1);
}

uint64_t SubscribeButtonExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084((uint64_t (*)(void))sub_1DE04D618, a1);
}

uint64_t SubscribeButtonExposureEvent.eventData.setter(uint64_t a1)
{
  sub_1DE04D618();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*SubscribeButtonExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SubscribeButtonExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE0E01E4(type metadata accessor for SubscribeButtonExposureEvent, (uint64_t (*)(void))sub_1DE04D7B8, a1);
}

uint64_t type metadata accessor for SubscribeButtonExposureEvent(uint64_t a1)
{
  return sub_1DE04E1D0(a1, (uint64_t *)&unk_1EABA2810);
}

uint64_t SubscribeButtonExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 20);
  sub_1DE04D7B8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SubscribeButtonExposureEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t SubscribeButtonExposureEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 24);
  sub_1DE0DF900(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SubscribeButtonExposureEvent.articleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 24);
  sub_1DE0DF900(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SubscribeButtonExposureEvent.articleData.modify())()
{
  return nullsub_1;
}

uint64_t SubscribeButtonExposureEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 28);
  sub_1DE0DF900(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SubscribeButtonExposureEvent.channelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 28);
  sub_1DE0DF900(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SubscribeButtonExposureEvent.channelData.modify())()
{
  return nullsub_1;
}

uint64_t SubscribeButtonExposureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 32);
  sub_1DE0DF900(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SubscribeButtonExposureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 32);
  sub_1DE0DF900(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SubscribeButtonExposureEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t SubscribeButtonExposureEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 36);
  sub_1DE0DF900(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SubscribeButtonExposureEvent.groupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 36);
  sub_1DE0DF900(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SubscribeButtonExposureEvent.groupData.modify())()
{
  return nullsub_1;
}

uint64_t SubscribeButtonExposureEvent.paywallData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 40);
  sub_1DE0DF900(0, &qword_1EBEC1E30, (void (*)(void))sub_1DE0DE9C8, (void (*)(void))sub_1DE0DEA1C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE0DE9C8()
{
  unint64_t result = qword_1EBEC2448;
  if (!qword_1EBEC2448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC2448);
  }
  return result;
}

unint64_t sub_1DE0DEA1C()
{
  unint64_t result = qword_1EBEC2440;
  if (!qword_1EBEC2440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC2440);
  }
  return result;
}

uint64_t SubscribeButtonExposureEvent.paywallData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 40);
  sub_1DE0DF900(0, &qword_1EBEC1E30, (void (*)(void))sub_1DE0DE9C8, (void (*)(void))sub_1DE0DEA1C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SubscribeButtonExposureEvent.paywallData.modify())()
{
  return nullsub_1;
}

uint64_t SubscribeButtonExposureEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 44);
  sub_1DE0DF900(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SubscribeButtonExposureEvent.issueData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 44);
  sub_1DE0DF900(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SubscribeButtonExposureEvent.issueData.modify())()
{
  return nullsub_1;
}

uint64_t SubscribeButtonExposureEvent.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 48);
  sub_1DE0DF900(0, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SubscribeButtonExposureEvent.purchaseData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 48);
  sub_1DE0DF900(0, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SubscribeButtonExposureEvent.purchaseData.modify())()
{
  return nullsub_1;
}

uint64_t SubscribeButtonExposureEvent.purchaseSessionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 52);
  sub_1DE0DF900(0, &qword_1EBEC1F38, (void (*)(void))sub_1DE0DEF68, (void (*)(void))sub_1DE0DEFBC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE0DEF68()
{
  unint64_t result = qword_1EBEC50E8;
  if (!qword_1EBEC50E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC50E8);
  }
  return result;
}

unint64_t sub_1DE0DEFBC()
{
  unint64_t result = qword_1EBEC50E0;
  if (!qword_1EBEC50E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC50E0);
  }
  return result;
}

uint64_t SubscribeButtonExposureEvent.purchaseSessionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 52);
  sub_1DE0DF900(0, &qword_1EBEC1F38, (void (*)(void))sub_1DE0DEF68, (void (*)(void))sub_1DE0DEFBC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SubscribeButtonExposureEvent.purchaseSessionData.modify())()
{
  return nullsub_1;
}

uint64_t SubscribeButtonExposureEvent.sectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 56);
  sub_1DE0DF900(0, &qword_1EBEC1E40, (void (*)(void))sub_1DE0D42F0, (void (*)(void))sub_1DE0D4344);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SubscribeButtonExposureEvent.sectionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 56);
  sub_1DE0DF900(0, &qword_1EBEC1E40, (void (*)(void))sub_1DE0D42F0, (void (*)(void))sub_1DE0D4344);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SubscribeButtonExposureEvent.sectionData.modify())()
{
  return nullsub_1;
}

uint64_t SubscribeButtonExposureEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 60);
  sub_1DE0DF900(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SubscribeButtonExposureEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 60);
  sub_1DE0DF900(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SubscribeButtonExposureEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t SubscribeButtonExposureEvent.subscribeButtonContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 64);
  sub_1DE0DF900(0, &qword_1EBEC1FA0, (void (*)(void))sub_1DE0DF508, (void (*)(void))sub_1DE0DF55C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_1DE0DF508()
{
  unint64_t result = qword_1EBEC64F8;
  if (!qword_1EBEC64F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC64F8);
  }
  return result;
}

unint64_t sub_1DE0DF55C()
{
  unint64_t result = qword_1EBEC64F0;
  if (!qword_1EBEC64F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC64F0);
  }
  return result;
}

uint64_t SubscribeButtonExposureEvent.subscribeButtonContextData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 64);
  sub_1DE0DF900(0, &qword_1EBEC1FA0, (void (*)(void))sub_1DE0DF508, (void (*)(void))sub_1DE0DF55C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SubscribeButtonExposureEvent.subscribeButtonContextData.modify())()
{
  return nullsub_1;
}

uint64_t SubscribeButtonExposureEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 68);
  sub_1DE0DF900(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SubscribeButtonExposureEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 68);
  sub_1DE0DF900(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SubscribeButtonExposureEvent.userBundleSubscriptionContextData.modify())()
{
  return nullsub_1;
}

uint64_t SubscribeButtonExposureEvent.puzzleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 72);
  sub_1DE0DF900(0, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_1DE0DF900(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_1DE47ECA0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t SubscribeButtonExposureEvent.puzzleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent(0) + 72);
  sub_1DE0DF900(0, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SubscribeButtonExposureEvent.puzzleData.modify())()
{
  return nullsub_1;
}

uint64_t SubscribeButtonExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for SubscribeButtonExposureEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = *MEMORY[0x1E4F4A9F8];
  sub_1DE0DF900(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  uint64_t v10 = a1 + v4[7];
  sub_1DE0DF900(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v8, v11);
  uint64_t v12 = a1 + v4[8];
  sub_1DE0DF900(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v8, v13);
  uint64_t v14 = a1 + v4[9];
  sub_1DE0DF900(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v8, v15);
  uint64_t v16 = a1 + v4[10];
  sub_1DE0DF900(0, &qword_1EBEC1E30, (void (*)(void))sub_1DE0DE9C8, (void (*)(void))sub_1DE0DEA1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v8, v17);
  uint64_t v18 = a1 + v4[11];
  sub_1DE0DF900(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v8, v19);
  uint64_t v20 = a1 + v4[12];
  sub_1DE0DF900(0, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v2, v21);
  uint64_t v22 = a1 + v4[13];
  sub_1DE0DF900(0, &qword_1EBEC1F38, (void (*)(void))sub_1DE0DEF68, (void (*)(void))sub_1DE0DEFBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v22, v2, v23);
  uint64_t v24 = a1 + v4[14];
  sub_1DE0DF900(0, &qword_1EBEC1E40, (void (*)(void))sub_1DE0D42F0, (void (*)(void))sub_1DE0D4344);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v24, v8, v25);
  uint64_t v26 = a1 + v4[15];
  sub_1DE0DF900(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(v26, v2, v27);
  uint64_t v28 = a1 + v4[16];
  sub_1DE0DF900(0, &qword_1EBEC1FA0, (void (*)(void))sub_1DE0DF508, (void (*)(void))sub_1DE0DF55C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104))(v28, v2, v29);
  uint64_t v30 = a1 + v4[17];
  sub_1DE0DF900(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 104))(v30, v2, v31);
  uint64_t v32 = a1 + v4[18];
  sub_1DE0DF900(0, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
  uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 104);

  return v34(v32, v8, v33);
}

uint64_t SubscribeButtonExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084(MEMORY[0x1E4F4AB70], a1);
}

uint64_t SubscribeButtonExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE0E01E4(type metadata accessor for SubscribeButtonExposureEvent.Model, MEMORY[0x1E4F4AB90], a1);
}

uint64_t sub_1DE0E01E4@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for SubscribeButtonExposureEvent.Model(uint64_t a1)
{
  return sub_1DE04E1D0(a1, (uint64_t *)&unk_1EABA2820);
}

uint64_t SubscribeButtonExposureEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SubscribeButtonExposureEvent.Model(0);
  sub_1DE0D5464(v1 + *(int *)(v3 + 24), (uint64_t)v5, (unint64_t *)&qword_1EBEC9030);
  sub_1DE0D5464((uint64_t)v5, a1, (unint64_t *)&qword_1EBEC9030);
  return sub_1DE0A9FFC((uint64_t)v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DE0A891C);
}

uint64_t SubscribeButtonExposureEvent.Model.channelData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent.Model(0) + 28));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;

  return sub_1DE0639EC(v4, v5);
}

uint64_t SubscribeButtonExposureEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent.Model(0) + 32));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;

  return sub_1DE056598(v4, v5, v6);
}

void *SubscribeButtonExposureEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SubscribeButtonExposureEvent.Model(0);
  sub_1DE0D5464(v1 + *(int *)(v3 + 36), (uint64_t)v5, (unint64_t *)&qword_1EBEC9B00);
  sub_1DE0D5464((uint64_t)v5, a1, (unint64_t *)&qword_1EBEC9B00);
  return sub_1DE0652D8(v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DE063BCC);
}

uint64_t SubscribeButtonExposureEvent.Model.paywallData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for SubscribeButtonExposureEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t SubscribeButtonExposureEvent.Model.issueData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent.Model(0) + 44));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;

  return sub_1DE074E14(v4, v5);
}

uint64_t SubscribeButtonExposureEvent.Model.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent.Model(0) + 48));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOBYTE(v3) = *((unsigned char *)v3 + 16);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = (_BYTE)v3;

  return swift_bridgeObjectRetain();
}

uint64_t SubscribeButtonExposureEvent.Model.purchaseSessionData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent.Model(0) + 52));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t SubscribeButtonExposureEvent.Model.sectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent.Model(0) + 56);
  char v4 = *(unsigned char *)(v3 + 24);
  *(void *)a1 = *(void *)v3;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v3 + 8);
  *(unsigned char *)(a1 + 24) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t SubscribeButtonExposureEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent.Model(0) + 60));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t SubscribeButtonExposureEvent.Model.subscribeButtonContextData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for SubscribeButtonExposureEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 64));
  return result;
}

uint64_t SubscribeButtonExposureEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (char *)(v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent.Model(0) + 68));
  char v4 = *v3;
  uint64_t v5 = *((void *)v3 + 1);
  uint64_t v6 = *((void *)v3 + 2);
  char v7 = v3[24];
  char v8 = v3[25];
  uint64_t v10 = *((void *)v3 + 4);
  uint64_t v9 = *((void *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(unsigned char *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 25) = v8;
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t SubscribeButtonExposureEvent.Model.puzzleData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscribeButtonExposureEvent.Model(0) + 72));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  uint64_t v10 = v3[6];
  uint64_t v11 = v3[7];
  uint64_t v13 = v3[8];
  uint64_t v12 = v3[9];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v13;
  a1[9] = v12;
  return sub_1DE074E14(v4, v5);
}

__n128 SubscribeButtonExposureEvent.Model.init(eventData:timedData:articleData:channelData:feedData:groupData:paywallData:issueData:purchaseData:purchaseSessionData:sectionData:viewData:subscribeButtonContextData:userBundleSubscriptionContextData:puzzleData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, long long *a4@<X3>, long long *a5@<X4>, uint64_t a6@<X5>, __int16 *a7@<X6>, long long *a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, uint64_t *a11, long long *a12, uint64_t *a13, __int16 *a14, char *a15, long long *a16)
{
  sub_1DE0D5464(a3, (uint64_t)v73, (unint64_t *)&qword_1EBEC9030);
  long long v42 = a4[1];
  long long v43 = *a4;
  uint64_t v20 = *((void *)a4 + 4);
  long long v45 = *a5;
  uint64_t v21 = *((void *)a5 + 2);
  sub_1DE0D5464(a6, (uint64_t)v74, (unint64_t *)&qword_1EBEC9B00);
  __int16 v44 = *a7;
  long long v48 = *a8;
  uint64_t v46 = *((void *)a8 + 3);
  uint64_t v47 = *((void *)a8 + 2);
  uint64_t v51 = a10[1];
  uint64_t v52 = *a10;
  char v50 = *((unsigned char *)a10 + 16);
  uint64_t v53 = a11[1];
  uint64_t v54 = *a11;
  long long v57 = *a12;
  uint64_t v56 = *((void *)a12 + 2);
  char v55 = *((unsigned char *)a12 + 24);
  uint64_t v59 = a13[1];
  uint64_t v60 = *a13;
  __int16 v58 = *((_WORD *)a13 + 8);
  char v22 = *a15;
  uint64_t v23 = *((void *)a15 + 1);
  uint64_t v24 = *((void *)a15 + 2);
  char v65 = a15[25];
  char v66 = a15[24];
  uint64_t v63 = *((void *)a15 + 5);
  uint64_t v64 = *((void *)a15 + 4);
  __int16 v61 = *a14;
  char v62 = a15[48];
  long long v71 = a16[1];
  long long v72 = *a16;
  __n128 v67 = (__n128)a16[3];
  long long v69 = a16[2];
  uint64_t v26 = *((void *)a16 + 8);
  uint64_t v25 = *((void *)a16 + 9);
  uint64_t v27 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32))(a9, a1, v27);
  uint64_t v28 = (int *)type metadata accessor for SubscribeButtonExposureEvent.Model(0);
  uint64_t v29 = a9 + v28[5];
  uint64_t v30 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v29, a2, v30);
  sub_1DE0D5464((uint64_t)v73, a9 + v28[6], (unint64_t *)&qword_1EBEC9030);
  uint64_t v31 = a9 + v28[7];
  *(_OWORD *)uint64_t v31 = v43;
  *(_OWORD *)(v31 + 16) = v42;
  *(void *)(v31 + 32) = v20;
  uint64_t v32 = a9 + v28[8];
  *(_OWORD *)uint64_t v32 = v45;
  *(void *)(v32 + 16) = v21;
  sub_1DE0D5464((uint64_t)v74, a9 + v28[9], (unint64_t *)&qword_1EBEC9B00);
  *(_WORD *)(a9 + v28[10]) = v44;
  uint64_t v33 = a9 + v28[11];
  *(_OWORD *)uint64_t v33 = v48;
  *(void *)(v33 + 16) = v47;
  *(void *)(v33 + 24) = v46;
  uint64_t v34 = a9 + v28[12];
  *(void *)uint64_t v34 = v52;
  *(void *)(v34 + 8) = v51;
  *(unsigned char *)(v34 + 16) = v50;
  uint64_t v35 = (void *)(a9 + v28[13]);
  *uint64_t v35 = v54;
  v35[1] = v53;
  uint64_t v36 = a9 + v28[14];
  *(_OWORD *)uint64_t v36 = v57;
  *(void *)(v36 + 16) = v56;
  *(unsigned char *)(v36 + 24) = v55;
  uint64_t v37 = a9 + v28[15];
  *(void *)uint64_t v37 = v60;
  *(void *)(v37 + 8) = v59;
  *(_WORD *)(v37 + 16) = v58;
  *(_WORD *)(a9 + v28[16]) = v61;
  uint64_t v38 = a9 + v28[17];
  *(unsigned char *)uint64_t v38 = v22;
  *(void *)(v38 + 8) = v23;
  *(void *)(v38 + 16) = v24;
  *(unsigned char *)(v38 + 24) = v66;
  *(unsigned char *)(v38 + 25) = v65;
  *(void *)(v38 + 32) = v64;
  *(void *)(v38 + 40) = v63;
  *(unsigned char *)(v38 + 48) = v62;
  uint64_t v39 = a9 + v28[18];
  *(_OWORD *)uint64_t v39 = v72;
  *(_OWORD *)(v39 + 16) = v71;
  __n128 result = v67;
  *(_OWORD *)(v39 + 32) = v69;
  *(__n128 *)(v39 + 48) = v67;
  *(void *)(v39 + 64) = v26;
  *(void *)(v39 + 72) = v25;
  return result;
}

uint64_t sub_1DE0E0AB0(char a1)
{
  uint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      return 0x74614464656D6974;
    case 2:
      return 0x44656C6369747261;
    case 3:
      uint64_t v3 = 0x656E6E616863;
      return v3 & 0xFFFFFFFFFFFFLL | 0x446C000000000000;
    case 4:
      unsigned int v4 = 1684366694;
      goto LABEL_15;
    case 5:
      return 0x74614470756F7267;
    case 6:
      uint64_t v3 = 0x6C6177796170;
      return v3 & 0xFFFFFFFFFFFFLL | 0x446C000000000000;
    case 7:
      return 0x7461446575737369;
    case 8:
      return 0x6573616863727570;
    case 9:
      return 0xD000000000000013;
    case 10:
      return 0x446E6F6974636573;
    case 11:
      unsigned int v4 = 2003134838;
LABEL_15:
      uint64_t result = v4 | 0x6174614400000000;
      break;
    case 12:
      uint64_t result = 0xD00000000000001ALL;
      break;
    case 13:
      uint64_t result = 0xD000000000000021;
      break;
    case 14:
      uint64_t result = 0x6144656C7A7A7570;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DE0E0C78()
{
  return sub_1DE0E0AB0(*v0);
}

uint64_t sub_1DE0E0C80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE0E907C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DE0E0CA8(unsigned char *a1@<X8>)
{
  *a1 = 15;
}

uint64_t sub_1DE0E0CB4(uint64_t a1)
{
  unint64_t v2 = sub_1DE0E13AC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE0E0CF0(uint64_t a1)
{
  unint64_t v2 = sub_1DE0E13AC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SubscribeButtonExposureEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1DE0E2144(0, &qword_1EABA27F8, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v38 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0E13AC();
  sub_1DE480790();
  LOBYTE(v44[0]) = 0;
  sub_1DE47F330();
  sub_1DE04D884(&qword_1EBEC2030, MEMORY[0x1E4F4AB70]);
  sub_1DE4805C0();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for SubscribeButtonExposureEvent.Model(0);
    v49[135] = 1;
    sub_1DE47F350();
    sub_1DE04D884(&qword_1EBEC2040, MEMORY[0x1E4F4AB90]);
    sub_1DE4805C0();
    sub_1DE0D5464(v3 + v10[6], (uint64_t)v49, (unint64_t *)&qword_1EBEC9030);
    sub_1DE0D5464((uint64_t)v49, (uint64_t)v44, (unint64_t *)&qword_1EBEC9030);
    LOBYTE(v40[0]) = 2;
    sub_1DE053EBC();
    sub_1DE480550();
    uint64_t v11 = v3 + v10[7];
    uint64_t v12 = *(void *)(v11 + 32);
    long long v13 = *(_OWORD *)(v11 + 16);
    v44[0] = *(_OWORD *)v11;
    v44[1] = v13;
    uint64_t v45 = v12;
    LOBYTE(v40[0]) = 3;
    sub_1DE0552E4();
    sub_1DE480550();
    uint64_t v14 = (long long *)(v3 + v10[8]);
    uint64_t v15 = *((void *)v14 + 2);
    long long v47 = *v14;
    uint64_t v48 = v15;
    char v46 = 4;
    sub_1DE055800();
    sub_1DE480550();
    sub_1DE0D5464(v3 + v10[9], (uint64_t)v44, (unint64_t *)&qword_1EBEC9B00);
    sub_1DE0D5464((uint64_t)v44, (uint64_t)v40, (unint64_t *)&qword_1EBEC9B00);
    char v39 = 5;
    sub_1DE0629F4();
    sub_1DE480550();
    LOWORD(v40[0]) = *(_WORD *)(v3 + v10[10]);
    char v39 = 6;
    sub_1DE0DEA1C();
    sub_1DE480550();
    uint64_t v16 = (_OWORD *)(v3 + v10[11]);
    long long v17 = v16[1];
    v40[0] = *v16;
    v40[1] = v17;
    char v39 = 7;
    sub_1DE054A4C();
    sub_1DE480550();
    uint64_t v18 = (uint64_t *)(v3 + v10[12]);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    LOBYTE(v18) = *((unsigned char *)v18 + 16);
    *(void *)&v40[0] = v19;
    *((void *)&v40[0] + 1) = v20;
    LOBYTE(v40[1]) = (_BYTE)v18;
    char v39 = 8;
    sub_1DE0A802C();
    sub_1DE4805C0();
    uint64_t v21 = (uint64_t *)(v3 + v10[13]);
    uint64_t v23 = *v21;
    uint64_t v22 = v21[1];
    *(void *)&v40[0] = v23;
    *((void *)&v40[0] + 1) = v22;
    char v39 = 9;
    sub_1DE0DEFBC();
    sub_1DE4805C0();
    uint64_t v24 = v3 + v10[14];
    uint64_t v25 = *(void *)(v24 + 16);
    char v26 = *(unsigned char *)(v24 + 24);
    v40[0] = *(_OWORD *)v24;
    *(void *)&v40[1] = v25;
    BYTE8(v40[1]) = v26;
    char v39 = 10;
    sub_1DE0D4344();
    sub_1DE480550();
    uint64_t v27 = (uint64_t *)(v3 + v10[15]);
    uint64_t v28 = *v27;
    uint64_t v29 = v27[1];
    LOWORD(v27) = *((_WORD *)v27 + 8);
    *(void *)&v40[0] = v28;
    *((void *)&v40[0] + 1) = v29;
    LOWORD(v40[1]) = (_WORD)v27;
    char v39 = 11;
    sub_1DE05410C();
    sub_1DE4805C0();
    LOWORD(v40[0]) = *(_WORD *)(v3 + v10[16]);
    char v39 = 12;
    sub_1DE0DF55C();
    sub_1DE4805C0();
    uint64_t v30 = v3 + v10[17];
    char v31 = *(unsigned char *)(v30 + 24);
    char v32 = *(unsigned char *)(v30 + 25);
    char v33 = *(unsigned char *)(v30 + 48);
    LOBYTE(v40[0]) = *(unsigned char *)v30;
    *(_OWORD *)((char *)v40 + 8) = *(_OWORD *)(v30 + 8);
    BYTE8(v40[1]) = v31;
    BYTE9(v40[1]) = v32;
    long long v41 = *(_OWORD *)(v30 + 32);
    LOBYTE(v42) = v33;
    char v39 = 13;
    sub_1DE04DD5C();
    sub_1DE4805C0();
    uint64_t v34 = (_OWORD *)(v3 + v10[18]);
    long long v35 = v34[1];
    v40[0] = *v34;
    v40[1] = v35;
    long long v36 = v34[3];
    long long v41 = v34[2];
    long long v42 = v36;
    long long v43 = v34[4];
    char v39 = 14;
    sub_1DE0622AC();
    sub_1DE480550();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DE0E13AC()
{
  unint64_t result = qword_1EABA2800;
  if (!qword_1EABA2800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2800);
  }
  return result;
}

uint64_t SubscribeButtonExposureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v67 = a2;
  uint64_t v3 = sub_1DE47F350();
  uint64_t v64 = *(void *)(v3 - 8);
  uint64_t v65 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DE47F330();
  uint64_t v66 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE0E2144(0, &qword_1EABA2808, MEMORY[0x1E4FBBDC0]);
  uint64_t v68 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v62 - v11;
  long long v73 = (int *)type metadata accessor for SubscribeButtonExposureEvent.Model(0);
  MEMORY[0x1F4188790](v73);
  long long v72 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  uint64_t v70 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1DE0E13AC();
  long long v69 = v12;
  uint64_t v15 = v71;
  sub_1DE480770();
  uint64_t v63 = v6;
  if (v15)
  {
    uint64_t v71 = v15;
    LODWORD(v67) = 0;
    unsigned int v17 = 0;
  }
  else
  {
    uint64_t v16 = v5;
    uint64_t v62 = v10;
    LOBYTE(v81) = 0;
    sub_1DE04D884(&qword_1EBEC2038, MEMORY[0x1E4F4AB70]);
    sub_1DE4804E0();
    uint64_t v28 = v72;
    (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v72, v8, v6);
    LOBYTE(v81) = 1;
    sub_1DE04D884((unint64_t *)&unk_1EBEC2048, MEMORY[0x1E4F4AB90]);
    uint64_t v29 = v65;
    sub_1DE4804E0();
    uint64_t v30 = v73;
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(&v28[v73[5]], v16, v29);
    char v86 = 2;
    sub_1DE053E68();
    sub_1DE480470();
    sub_1DE0D5464((uint64_t)&v80, (uint64_t)v79, (unint64_t *)&qword_1EBEC9030);
    sub_1DE0D5464((uint64_t)v79, (uint64_t)&v28[v30[6]], (unint64_t *)&qword_1EBEC9030);
    v78[0] = 3;
    sub_1DE055290();
    sub_1DE480470();
    uint64_t v31 = v83;
    char v32 = &v28[v30[7]];
    long long v33 = v82;
    *(_OWORD *)char v32 = v81;
    *((_OWORD *)v32 + 1) = v33;
    *((void *)v32 + 4) = v31;
    v78[0] = 4;
    sub_1DE0557AC();
    sub_1DE480470();
    uint64_t v34 = v82;
    long long v35 = &v28[v30[8]];
    *(_OWORD *)long long v35 = v81;
    *((void *)v35 + 2) = v34;
    char v85 = 5;
    sub_1DE0629A0();
    sub_1DE480470();
    sub_1DE0D5464((uint64_t)&v81, (uint64_t)v78, (unint64_t *)&qword_1EBEC9B00);
    sub_1DE0D5464((uint64_t)v78, (uint64_t)&v28[v30[9]], (unint64_t *)&qword_1EBEC9B00);
    char v84 = 6;
    sub_1DE0DE9C8();
    sub_1DE480470();
    *(_WORD *)&v28[v30[10]] = v74[0];
    char v84 = 7;
    sub_1DE0549F8();
    sub_1DE480470();
    long long v36 = &v28[v73[11]];
    long long v37 = v74[1];
    *(_OWORD *)long long v36 = v74[0];
    *((_OWORD *)v36 + 1) = v37;
    char v84 = 8;
    sub_1DE0A7FD8();
    sub_1DE4804E0();
    uint64_t v38 = *((void *)&v74[0] + 1);
    char v39 = v74[1];
    long long v40 = &v28[v73[12]];
    *(void *)long long v40 = *(void *)&v74[0];
    *((void *)v40 + 1) = v38;
    v40[16] = v39;
    char v84 = 9;
    sub_1DE0DEF68();
    sub_1DE4804E0();
    uint64_t v71 = 0;
    uint64_t v41 = *((void *)&v74[0] + 1);
    long long v42 = &v72[v73[13]];
    *(void *)long long v42 = *(void *)&v74[0];
    *((void *)v42 + 1) = v41;
    char v84 = 10;
    sub_1DE0D42F0();
    uint64_t v43 = v71;
    sub_1DE480470();
    uint64_t v71 = v43;
    if (!v43)
    {
      uint64_t v44 = *(void *)&v74[1];
      char v45 = BYTE8(v74[1]);
      char v46 = &v72[v73[14]];
      *(_OWORD *)char v46 = v74[0];
      *((void *)v46 + 2) = v44;
      v46[24] = v45;
      char v84 = 11;
      sub_1DE0540B8();
      uint64_t v47 = v71;
      sub_1DE4804E0();
      uint64_t v71 = v47;
      if (v47)
      {
        (*(void (**)(char *, uint64_t))(v62 + 8))(v69, v68);
        __swift_destroy_boxed_opaque_existential_1(v70);
        LODWORD(v69) = 0;
        LODWORD(v70) = 0;
        LOBYTE(v27) = 1;
        int v20 = 1;
        int v21 = 1;
        int v22 = 1;
        int v23 = 1;
        int v24 = 1;
        int v25 = 1;
        LODWORD(v67) = 1;
        LODWORD(v68) = 1;
        uint64_t v18 = v72;
      }
      else
      {
        uint64_t v48 = *((void *)&v74[0] + 1);
        __int16 v49 = v74[1];
        char v50 = &v72[v73[15]];
        *(void *)char v50 = *(void *)&v74[0];
        *((void *)v50 + 1) = v48;
        *((_WORD *)v50 + 8) = v49;
        char v84 = 12;
        sub_1DE0DF508();
        uint64_t v51 = v71;
        sub_1DE4804E0();
        uint64_t v71 = v51;
        if (v51
          || (*(_WORD *)&v72[v73[16]] = v74[0], v84 = 13, sub_1DE04DD08(), uint64_t v52 = v71, sub_1DE4804E0(), (v71 = v52) != 0))
        {
          (*(void (**)(char *, uint64_t))(v62 + 8))(v69, v68);
          __swift_destroy_boxed_opaque_existential_1(v70);
          LODWORD(v70) = 0;
          LOBYTE(v27) = 1;
          int v20 = 1;
          int v21 = 1;
          int v22 = 1;
          int v23 = 1;
          int v24 = 1;
          int v25 = 1;
          LODWORD(v67) = 1;
          LODWORD(v68) = 1;
          LODWORD(v69) = 1;
          uint64_t v18 = v72;
        }
        else
        {
          char v53 = BYTE8(v74[1]);
          char v54 = BYTE9(v74[1]);
          char v55 = v76;
          uint64_t v56 = &v72[v73[17]];
          *uint64_t v56 = v74[0];
          *(_OWORD *)(v56 + 8) = *(_OWORD *)((char *)v74 + 8);
          v56[24] = v53;
          v56[25] = v54;
          *((_OWORD *)v56 + 2) = v75;
          v56[48] = v55;
          char v84 = 14;
          sub_1DE062258();
          uint64_t v57 = v71;
          sub_1DE480470();
          uint64_t v71 = v57;
          if (!v57)
          {
            (*(void (**)(char *, uint64_t))(v62 + 8))(v69, v68);
            uint64_t v58 = (uint64_t)v72;
            uint64_t v59 = &v72[v73[18]];
            long long v60 = v74[1];
            *(_OWORD *)uint64_t v59 = v74[0];
            *((_OWORD *)v59 + 1) = v60;
            long long v61 = v76;
            *((_OWORD *)v59 + 2) = v75;
            *((_OWORD *)v59 + 3) = v61;
            *((_OWORD *)v59 + 4) = v77;
            sub_1DE0E21A8(v58, v67);
            __swift_destroy_boxed_opaque_existential_1(v70);
            return sub_1DE0E220C(v58);
          }
          (*(void (**)(char *, uint64_t))(v62 + 8))(v69, v68);
          __swift_destroy_boxed_opaque_existential_1(v70);
          LOBYTE(v27) = 1;
          int v20 = 1;
          int v21 = 1;
          int v22 = 1;
          int v23 = 1;
          int v24 = 1;
          int v25 = 1;
          LODWORD(v67) = 1;
          LODWORD(v68) = 1;
          LODWORD(v69) = 1;
          LODWORD(v70) = 1;
          uint64_t v18 = v72;
        }
      }
      goto LABEL_18;
    }
    (*(void (**)(char *, uint64_t))(v62 + 8))(v69, v68);
    unsigned int v17 = 959;
    LODWORD(v67) = 1;
  }
  uint64_t v18 = v72;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1(v70);
  int v20 = (v17 >> 2) & 1;
  int v21 = (v17 >> 3) & 1;
  int v22 = (v17 >> 4) & 1;
  int v23 = (v17 >> 5) & 1;
  int v24 = (v17 >> 7) & 1;
  int v25 = (v17 >> 8) & 1;
  if ((v17 & 1) == 0)
  {
    LODWORD(v70) = 0;
    LODWORD(v69) = 0;
    LODWORD(v68) = 0;
    if ((v17 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
  LODWORD(v68) = 0;
  LODWORD(v69) = 0;
  LODWORD(v70) = 0;
  int v27 = (v17 >> 1) & 1;
LABEL_18:
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v18, v63);
  if ((v27 & 1) == 0)
  {
LABEL_6:
    char v26 = v73;
    if (v20) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  char v26 = v73;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(&v18[v73[5]], v65);
  if (v20)
  {
LABEL_7:
    sub_1DE0D5464((uint64_t)&v18[v26[6]], (uint64_t)&v81, (unint64_t *)&qword_1EBEC9030);
    uint64_t result = sub_1DE0A9FFC((uint64_t)&v81, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DE0AA078);
    if ((v21 & 1) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  if (!v21)
  {
LABEL_8:
    if (v22) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = sub_1DE0653E4(*(void *)&v18[v26[7]], *(void *)&v18[v26[7] + 8]);
  if (v22)
  {
LABEL_9:
    uint64_t result = sub_1DE05FBA8(*(void *)&v18[v26[8]], *(void *)&v18[v26[8] + 8], *(void *)&v18[v26[8] + 16]);
    if ((v23 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  if (!v23)
  {
LABEL_10:
    if (v24) {
      goto LABEL_11;
    }
    goto LABEL_24;
  }
LABEL_23:
  sub_1DE0D5464((uint64_t)&v18[v26[9]], (uint64_t)&v81, (unint64_t *)&qword_1EBEC9B00);
  uint64_t result = (uint64_t)sub_1DE0652D8(&v81, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DE06533C);
  if (v24)
  {
LABEL_11:
    uint64_t result = sub_1DE0767E0(*(void *)&v18[v26[11]], *(void *)&v18[v26[11] + 8]);
    if ((v25 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_24:
  if (!v25)
  {
LABEL_12:
    if (v67) {
      goto LABEL_13;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = swift_bridgeObjectRelease();
  if (v67)
  {
LABEL_13:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v68 & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_27;
  }
LABEL_26:
  if (!v68)
  {
LABEL_14:
    if (v69) {
      goto LABEL_15;
    }
LABEL_28:
    if (!v70) {
      return result;
    }
    goto LABEL_29;
  }
LABEL_27:
  uint64_t result = swift_bridgeObjectRelease();
  if ((v69 & 1) == 0) {
    goto LABEL_28;
  }
LABEL_15:
  uint64_t result = swift_bridgeObjectRelease();
  if ((v70 & 1) == 0) {
    return result;
  }
LABEL_29:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1DE0E2144(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE0E13AC();
    unint64_t v7 = a3(a1, &type metadata for SubscribeButtonExposureEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DE0E21A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SubscribeButtonExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DE0E220C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SubscribeButtonExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DE0E2268@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SubscribeButtonExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DE0E2280(void *a1)
{
  return SubscribeButtonExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DE0E2298@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0A70, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EABA27B0, a1);
}

uint64_t sub_1DE0E22D0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0A78, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EABA27C8, a1);
}

uint64_t sub_1DE0E2308@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0A80, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA27E0, a1);
}

uint64_t sub_1DE0E2340@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = *MEMORY[0x1E4F4A9F8];
  sub_1DE0DF900(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v8, v9, v10);
  uint64_t v11 = a2 + a1[7];
  sub_1DE0DF900(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v9, v12);
  uint64_t v13 = a2 + a1[8];
  sub_1DE0DF900(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v9, v14);
  uint64_t v15 = a2 + a1[9];
  sub_1DE0DF900(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v9, v16);
  uint64_t v17 = a2 + a1[10];
  sub_1DE0DF900(0, &qword_1EBEC1E30, (void (*)(void))sub_1DE0DE9C8, (void (*)(void))sub_1DE0DEA1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v9, v18);
  uint64_t v19 = a2 + a1[11];
  sub_1DE0DF900(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v9, v20);
  uint64_t v21 = a2 + a1[12];
  sub_1DE0DF900(0, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v21, v4, v22);
  uint64_t v23 = a2 + a1[13];
  sub_1DE0DF900(0, &qword_1EBEC1F38, (void (*)(void))sub_1DE0DEF68, (void (*)(void))sub_1DE0DEFBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v23, v4, v24);
  uint64_t v25 = a2 + a1[14];
  sub_1DE0DF900(0, &qword_1EBEC1E40, (void (*)(void))sub_1DE0D42F0, (void (*)(void))sub_1DE0D4344);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104))(v25, v9, v26);
  uint64_t v27 = a2 + a1[15];
  sub_1DE0DF900(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104))(v27, v4, v28);
  uint64_t v29 = a2 + a1[16];
  sub_1DE0DF900(0, &qword_1EBEC1FA0, (void (*)(void))sub_1DE0DF508, (void (*)(void))sub_1DE0DF55C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104))(v29, v4, v30);
  uint64_t v31 = a2 + a1[17];
  sub_1DE0DF900(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104))(v31, v4, v32);
  uint64_t v33 = a2 + a1[18];
  sub_1DE0DF900(0, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
  long long v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 104);

  return v35(v33, v9, v34);
}

uint64_t *initializeBufferWithCopyOfBuffer for SubscribeButtonExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v64 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v64 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DE04D618();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DE04D7B8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_1DE0DF900(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_1DE0DF900(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_1DE0DF900(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_1DE0DF900(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    sub_1DE0DF900(0, &qword_1EBEC1E30, (void (*)(void))sub_1DE0DE9C8, (void (*)(void))sub_1DE0DEA1C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    uint64_t v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    sub_1DE0DF900(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    long long v37 = (char *)a1 + v36;
    uint64_t v38 = (char *)a2 + v36;
    sub_1DE0DF900(0, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = a3[13];
    uint64_t v41 = (char *)a1 + v40;
    long long v42 = (char *)a2 + v40;
    sub_1DE0DF900(0, &qword_1EBEC1F38, (void (*)(void))sub_1DE0DEF68, (void (*)(void))sub_1DE0DEFBC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    uint64_t v44 = a3[14];
    char v45 = (char *)a1 + v44;
    char v46 = (char *)a2 + v44;
    sub_1DE0DF900(0, &qword_1EBEC1E40, (void (*)(void))sub_1DE0D42F0, (void (*)(void))sub_1DE0D4344);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
    uint64_t v48 = a3[15];
    __int16 v49 = (char *)a1 + v48;
    char v50 = (char *)a2 + v48;
    sub_1DE0DF900(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
    uint64_t v52 = a3[16];
    char v53 = (char *)a1 + v52;
    char v54 = (char *)a2 + v52;
    sub_1DE0DF900(0, &qword_1EBEC1FA0, (void (*)(void))sub_1DE0DF508, (void (*)(void))sub_1DE0DF55C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
    uint64_t v56 = a3[17];
    uint64_t v57 = (char *)a1 + v56;
    uint64_t v58 = (char *)a2 + v56;
    sub_1DE0DF900(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
    uint64_t v60 = a3[18];
    long long v61 = (char *)a1 + v60;
    uint64_t v62 = (char *)a2 + v60;
    sub_1DE0DF900(0, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
  }
  return a1;
}

uint64_t destroy for SubscribeButtonExposureEvent(uint64_t a1, int *a2)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_1DE0DF900(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_1DE0DF900(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_1DE0DF900(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_1DE0DF900(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_1DE0DF900(0, &qword_1EBEC1E30, (void (*)(void))sub_1DE0DE9C8, (void (*)(void))sub_1DE0DEA1C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_1DE0DF900(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  sub_1DE0DF900(0, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[13];
  sub_1DE0DF900(0, &qword_1EBEC1F38, (void (*)(void))sub_1DE0DEF68, (void (*)(void))sub_1DE0DEFBC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = a1 + a2[14];
  sub_1DE0DF900(0, &qword_1EBEC1E40, (void (*)(void))sub_1DE0D42F0, (void (*)(void))sub_1DE0D4344);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
  uint64_t v25 = a1 + a2[15];
  sub_1DE0DF900(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
  uint64_t v27 = a1 + a2[16];
  sub_1DE0DF900(0, &qword_1EBEC1FA0, (void (*)(void))sub_1DE0DF508, (void (*)(void))sub_1DE0DF55C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
  uint64_t v29 = a1 + a2[17];
  sub_1DE0DF900(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
  uint64_t v31 = a1 + a2[18];
  sub_1DE0DF900(0, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
  uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8);

  return v33(v31, v32);
}

uint64_t initializeWithCopy for SubscribeButtonExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0DF900(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0DF900(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0DF900(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE0DF900(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE0DF900(0, &qword_1EBEC1E30, (void (*)(void))sub_1DE0DE9C8, (void (*)(void))sub_1DE0DEA1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE0DF900(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE0DF900(0, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_1DE0DF900(0, &qword_1EBEC1F38, (void (*)(void))sub_1DE0DEF68, (void (*)(void))sub_1DE0DEFBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_1DE0DF900(0, &qword_1EBEC1E40, (void (*)(void))sub_1DE0D42F0, (void (*)(void))sub_1DE0D4344);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_1DE0DF900(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  sub_1DE0DF900(0, &qword_1EBEC1FA0, (void (*)(void))sub_1DE0DF508, (void (*)(void))sub_1DE0DF55C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
  uint64_t v55 = a3[17];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  sub_1DE0DF900(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
  uint64_t v59 = a3[18];
  uint64_t v60 = a1 + v59;
  uint64_t v61 = a2 + v59;
  sub_1DE0DF900(0, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 16))(v60, v61, v62);
  return a1;
}

uint64_t assignWithCopy for SubscribeButtonExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0DF900(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0DF900(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0DF900(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE0DF900(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE0DF900(0, &qword_1EBEC1E30, (void (*)(void))sub_1DE0DE9C8, (void (*)(void))sub_1DE0DEA1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE0DF900(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE0DF900(0, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_1DE0DF900(0, &qword_1EBEC1F38, (void (*)(void))sub_1DE0DEF68, (void (*)(void))sub_1DE0DEFBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_1DE0DF900(0, &qword_1EBEC1E40, (void (*)(void))sub_1DE0D42F0, (void (*)(void))sub_1DE0D4344);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_1DE0DF900(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 24))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  sub_1DE0DF900(0, &qword_1EBEC1FA0, (void (*)(void))sub_1DE0DF508, (void (*)(void))sub_1DE0DF55C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 24))(v52, v53, v54);
  uint64_t v55 = a3[17];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  sub_1DE0DF900(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 24))(v56, v57, v58);
  uint64_t v59 = a3[18];
  uint64_t v60 = a1 + v59;
  uint64_t v61 = a2 + v59;
  sub_1DE0DF900(0, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 24))(v60, v61, v62);
  return a1;
}

uint64_t initializeWithTake for SubscribeButtonExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0DF900(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0DF900(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0DF900(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE0DF900(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE0DF900(0, &qword_1EBEC1E30, (void (*)(void))sub_1DE0DE9C8, (void (*)(void))sub_1DE0DEA1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE0DF900(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE0DF900(0, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_1DE0DF900(0, &qword_1EBEC1F38, (void (*)(void))sub_1DE0DEF68, (void (*)(void))sub_1DE0DEFBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_1DE0DF900(0, &qword_1EBEC1E40, (void (*)(void))sub_1DE0D42F0, (void (*)(void))sub_1DE0D4344);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_1DE0DF900(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  sub_1DE0DF900(0, &qword_1EBEC1FA0, (void (*)(void))sub_1DE0DF508, (void (*)(void))sub_1DE0DF55C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
  uint64_t v55 = a3[17];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  sub_1DE0DF900(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
  uint64_t v59 = a3[18];
  uint64_t v60 = a1 + v59;
  uint64_t v61 = a2 + v59;
  sub_1DE0DF900(0, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
  return a1;
}

uint64_t assignWithTake for SubscribeButtonExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0DF900(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0DF900(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0DF900(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE0DF900(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE0DF900(0, &qword_1EBEC1E30, (void (*)(void))sub_1DE0DE9C8, (void (*)(void))sub_1DE0DEA1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE0DF900(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE0DF900(0, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_1DE0DF900(0, &qword_1EBEC1F38, (void (*)(void))sub_1DE0DEF68, (void (*)(void))sub_1DE0DEFBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_1DE0DF900(0, &qword_1EBEC1E40, (void (*)(void))sub_1DE0D42F0, (void (*)(void))sub_1DE0D4344);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_1DE0DF900(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 40))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  sub_1DE0DF900(0, &qword_1EBEC1FA0, (void (*)(void))sub_1DE0DF508, (void (*)(void))sub_1DE0DF55C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 40))(v52, v53, v54);
  uint64_t v55 = a3[17];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  sub_1DE0DF900(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 40))(v56, v57, v58);
  uint64_t v59 = a3[18];
  uint64_t v60 = a1 + v59;
  uint64_t v61 = a2 + v59;
  sub_1DE0DF900(0, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 40))(v60, v61, v62);
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscribeButtonExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE0E55D0);
}

uint64_t sub_1DE0E55D0(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_30:
    return v9(v10, a2, v8);
  }
  sub_1DE04D7B8();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_29:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_30;
  }
  sub_1DE0DF900(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_29;
  }
  sub_1DE0DF900(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_29;
  }
  sub_1DE0DF900(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_29;
  }
  sub_1DE0DF900(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_29;
  }
  sub_1DE0DF900(0, &qword_1EBEC1E30, (void (*)(void))sub_1DE0DE9C8, (void (*)(void))sub_1DE0DEA1C);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_29;
  }
  sub_1DE0DF900(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_29;
  }
  sub_1DE0DF900(0, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_29;
  }
  sub_1DE0DF900(0, &qword_1EBEC1F38, (void (*)(void))sub_1DE0DEF68, (void (*)(void))sub_1DE0DEFBC);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a2)
  {
    uint64_t v8 = v21;
    uint64_t v12 = *(void *)(v21 - 8);
    uint64_t v13 = a3[13];
    goto LABEL_29;
  }
  sub_1DE0DF900(0, &qword_1EBEC1E40, (void (*)(void))sub_1DE0D42F0, (void (*)(void))sub_1DE0D4344);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a2)
  {
    uint64_t v8 = v22;
    uint64_t v12 = *(void *)(v22 - 8);
    uint64_t v13 = a3[14];
    goto LABEL_29;
  }
  sub_1DE0DF900(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a2)
  {
    uint64_t v8 = v23;
    uint64_t v12 = *(void *)(v23 - 8);
    uint64_t v13 = a3[15];
    goto LABEL_29;
  }
  sub_1DE0DF900(0, &qword_1EBEC1FA0, (void (*)(void))sub_1DE0DF508, (void (*)(void))sub_1DE0DF55C);
  if (*(_DWORD *)(*(void *)(v24 - 8) + 84) == a2)
  {
    uint64_t v8 = v24;
    uint64_t v12 = *(void *)(v24 - 8);
    uint64_t v13 = a3[16];
    goto LABEL_29;
  }
  sub_1DE0DF900(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  if (*(_DWORD *)(*(void *)(v25 - 8) + 84) == a2)
  {
    uint64_t v8 = v25;
    uint64_t v12 = *(void *)(v25 - 8);
    uint64_t v13 = a3[17];
    goto LABEL_29;
  }
  sub_1DE0DF900(0, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
  uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48);
  uint64_t v29 = v27;
  uint64_t v30 = a1 + a3[18];

  return v28(v30, a2, v29);
}

uint64_t storeEnumTagSinglePayload for SubscribeButtonExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE0E5D98);
}

uint64_t sub_1DE0E5D98(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_1DE04D618();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_30:
    return v11(v12, a2, a2, v10);
  }
  sub_1DE04D7B8();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_29:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_30;
  }
  sub_1DE0DF900(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_29;
  }
  sub_1DE0DF900(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_29;
  }
  sub_1DE0DF900(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_29;
  }
  sub_1DE0DF900(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_29;
  }
  sub_1DE0DF900(0, &qword_1EBEC1E30, (void (*)(void))sub_1DE0DE9C8, (void (*)(void))sub_1DE0DEA1C);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_29;
  }
  sub_1DE0DF900(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_29;
  }
  sub_1DE0DF900(0, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_29;
  }
  sub_1DE0DF900(0, &qword_1EBEC1F38, (void (*)(void))sub_1DE0DEF68, (void (*)(void))sub_1DE0DEFBC);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a3)
  {
    uint64_t v10 = v23;
    uint64_t v14 = *(void *)(v23 - 8);
    uint64_t v15 = a4[13];
    goto LABEL_29;
  }
  sub_1DE0DF900(0, &qword_1EBEC1E40, (void (*)(void))sub_1DE0D42F0, (void (*)(void))sub_1DE0D4344);
  if (*(_DWORD *)(*(void *)(v24 - 8) + 84) == a3)
  {
    uint64_t v10 = v24;
    uint64_t v14 = *(void *)(v24 - 8);
    uint64_t v15 = a4[14];
    goto LABEL_29;
  }
  sub_1DE0DF900(0, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
  if (*(_DWORD *)(*(void *)(v25 - 8) + 84) == a3)
  {
    uint64_t v10 = v25;
    uint64_t v14 = *(void *)(v25 - 8);
    uint64_t v15 = a4[15];
    goto LABEL_29;
  }
  sub_1DE0DF900(0, &qword_1EBEC1FA0, (void (*)(void))sub_1DE0DF508, (void (*)(void))sub_1DE0DF55C);
  if (*(_DWORD *)(*(void *)(v26 - 8) + 84) == a3)
  {
    uint64_t v10 = v26;
    uint64_t v14 = *(void *)(v26 - 8);
    uint64_t v15 = a4[16];
    goto LABEL_29;
  }
  sub_1DE0DF900(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  if (*(_DWORD *)(*(void *)(v27 - 8) + 84) == a3)
  {
    uint64_t v10 = v27;
    uint64_t v14 = *(void *)(v27 - 8);
    uint64_t v15 = a4[17];
    goto LABEL_29;
  }
  sub_1DE0DF900(0, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
  uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56);
  uint64_t v31 = v29;
  uint64_t v32 = a1 + a4[18];

  return v30(v32, a2, a2, v31);
}

void sub_1DE0E6558()
{
  sub_1DE04D618();
  if (v0 <= 0x3F)
  {
    sub_1DE04D7B8();
    if (v1 <= 0x3F)
    {
      sub_1DE0DF900(319, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
      if (v2 <= 0x3F)
      {
        sub_1DE0DF900(319, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
        if (v3 <= 0x3F)
        {
          sub_1DE0DF900(319, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
          if (v4 <= 0x3F)
          {
            sub_1DE0DF900(319, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
            if (v5 <= 0x3F)
            {
              sub_1DE0DF900(319, &qword_1EBEC1E30, (void (*)(void))sub_1DE0DE9C8, (void (*)(void))sub_1DE0DEA1C);
              if (v6 <= 0x3F)
              {
                sub_1DE0DF900(319, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
                if (v7 <= 0x3F)
                {
                  sub_1DE0DF900(319, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
                  if (v8 <= 0x3F)
                  {
                    sub_1DE0DF900(319, &qword_1EBEC1F38, (void (*)(void))sub_1DE0DEF68, (void (*)(void))sub_1DE0DEFBC);
                    if (v9 <= 0x3F)
                    {
                      sub_1DE0DF900(319, &qword_1EBEC1E40, (void (*)(void))sub_1DE0D42F0, (void (*)(void))sub_1DE0D4344);
                      if (v10 <= 0x3F)
                      {
                        sub_1DE0DF900(319, (unint64_t *)&qword_1EBEC1FD8, (void (*)(void))sub_1DE0540B8, (void (*)(void))sub_1DE05410C);
                        if (v11 <= 0x3F)
                        {
                          sub_1DE0DF900(319, &qword_1EBEC1FA0, (void (*)(void))sub_1DE0DF508, (void (*)(void))sub_1DE0DF55C);
                          if (v12 <= 0x3F)
                          {
                            sub_1DE0DF900(319, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
                            if (v13 <= 0x3F)
                            {
                              sub_1DE0DF900(319, &qword_1EBEC9D38, (void (*)(void))sub_1DE062258, (void (*)(void))sub_1DE0622AC);
                              if (v14 <= 0x3F) {
                                swift_initStructMetadata();
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for SubscribeButtonExposureEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DE47F330();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    unint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DE47F350();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    unint64_t v13 = (char *)a1 + v12;
    unint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = *((void *)v14 + 3);
    if (v15)
    {
      *(void *)unint64_t v13 = *(void *)v14;
      unsigned char v13[8] = v14[8];
      *((void *)v13 + 2) = *((void *)v14 + 2);
      *((void *)v13 + 3) = v15;
      v13[32] = v14[32];
      uint64_t v16 = *((void *)v14 + 6);
      *((void *)v13 + 5) = *((void *)v14 + 5);
      *((void *)v13 + 6) = v16;
      *((_WORD *)v13 + 28) = *((_WORD *)v14 + 28);
      uint64_t v18 = *((void *)v14 + 8);
      uint64_t v17 = *((void *)v14 + 9);
      v13[80] = v14[80];
      *((void *)v13 + 8) = v18;
      *((void *)v13 + 9) = v17;
      *(_OWORD *)(v13 + 88) = *(_OWORD *)(v14 + 88);
      *((void *)v13 + 13) = *((void *)v14 + 13);
      v13[112] = v14[112];
      *((void *)v13 + 15) = *((void *)v14 + 15);
      *((_DWORD *)v13 + 32) = *((_DWORD *)v14 + 32);
      v13[132] = v14[132];
      *(_WORD *)(v13 + 133) = *(_WORD *)(v14 + 133);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v20 = *((_OWORD *)v14 + 7);
      *((_OWORD *)v13 + 6) = *((_OWORD *)v14 + 6);
      *((_OWORD *)v13 + 7) = v20;
      *(void *)(v13 + 127) = *(void *)(v14 + 127);
      long long v21 = *((_OWORD *)v14 + 3);
      *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
      *((_OWORD *)v13 + 3) = v21;
      long long v22 = *((_OWORD *)v14 + 5);
      *((_OWORD *)v13 + 4) = *((_OWORD *)v14 + 4);
      *((_OWORD *)v13 + 5) = v22;
      long long v23 = *((_OWORD *)v14 + 1);
      *(_OWORD *)unint64_t v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v23;
    }
    uint64_t v24 = a3[7];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = *((void *)v26 + 1);
    if (v27)
    {
      *(void *)uint64_t v25 = *(void *)v26;
      *((void *)v25 + 1) = v27;
      *((_WORD *)v25 + 8) = *((_WORD *)v26 + 8);
      uint64_t v28 = *((void *)v26 + 4);
      *((void *)v25 + 3) = *((void *)v26 + 3);
      *((void *)v25 + 4) = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v29 = *((_OWORD *)v26 + 1);
      *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
      *((_OWORD *)v25 + 1) = v29;
      *((void *)v25 + 4) = *((void *)v26 + 4);
    }
    uint64_t v30 = a3[8];
    uint64_t v31 = (char *)a1 + v30;
    uint64_t v32 = (char *)a2 + v30;
    uint64_t v33 = *((void *)v32 + 2);
    if (v33 == 1)
    {
      *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
      *((void *)v31 + 2) = *((void *)v32 + 2);
    }
    else
    {
      char *v31 = *v32;
      *((void *)v31 + 1) = *((void *)v32 + 1);
      *((void *)v31 + 2) = v33;
      swift_bridgeObjectRetain();
    }
    uint64_t v34 = a3[9];
    uint64_t v35 = (char *)a1 + v34;
    uint64_t v36 = (char *)a2 + v34;
    uint64_t v37 = *((void *)v36 + 2);
    if (v37)
    {
      *(_WORD *)uint64_t v35 = *(_WORD *)v36;
      *((void *)v35 + 1) = *((void *)v36 + 1);
      *((void *)v35 + 2) = v37;
      *((void *)v35 + 3) = *((void *)v36 + 3);
      uint64_t v38 = *((void *)v36 + 5);
      *((void *)v35 + 4) = *((void *)v36 + 4);
      *((void *)v35 + 5) = v38;
      uint64_t v39 = *((void *)v36 + 7);
      *((void *)v35 + 6) = *((void *)v36 + 6);
      *((void *)v35 + 7) = v39;
      uint64_t v40 = *((void *)v36 + 9);
      *((void *)v35 + 8) = *((void *)v36 + 8);
      *((void *)v35 + 9) = v40;
      v35[80] = v36[80];
      uint64_t v41 = *((void *)v36 + 12);
      *((void *)v35 + 11) = *((void *)v36 + 11);
      *((void *)v35 + 12) = v41;
      *((void *)v35 + 13) = *((void *)v36 + 13);
      v35[112] = v36[112];
      uint64_t v42 = *((void *)v36 + 16);
      *((void *)v35 + 15) = *((void *)v36 + 15);
      *((void *)v35 + 16) = v42;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v43 = *((_OWORD *)v36 + 7);
      *((_OWORD *)v35 + 6) = *((_OWORD *)v36 + 6);
      *((_OWORD *)v35 + 7) = v43;
      *((void *)v35 + 16) = *((void *)v36 + 16);
      long long v44 = *((_OWORD *)v36 + 3);
      *((_OWORD *)v35 + 2) = *((_OWORD *)v36 + 2);
      *((_OWORD *)v35 + 3) = v44;
      long long v45 = *((_OWORD *)v36 + 5);
      *((_OWORD *)v35 + 4) = *((_OWORD *)v36 + 4);
      *((_OWORD *)v35 + 5) = v45;
      long long v46 = *((_OWORD *)v36 + 1);
      *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
      *((_OWORD *)v35 + 1) = v46;
    }
    uint64_t v47 = a3[11];
    *(_WORD *)((char *)a1 + a3[10]) = *(_WORD *)((char *)a2 + a3[10]);
    uint64_t v48 = (char *)a1 + v47;
    uint64_t v49 = (char *)a2 + v47;
    uint64_t v50 = *((void *)v49 + 1);
    if (v50)
    {
      *(void *)uint64_t v48 = *(void *)v49;
      *((void *)v48 + 1) = v50;
      *((_WORD *)v48 + 8) = *((_WORD *)v49 + 8);
      *((void *)v48 + 3) = *((void *)v49 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v51 = *((_OWORD *)v49 + 1);
      *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
      *((_OWORD *)v48 + 1) = v51;
    }
    uint64_t v52 = a3[12];
    uint64_t v53 = a3[13];
    uint64_t v54 = (char *)a1 + v52;
    uint64_t v55 = (char *)a2 + v52;
    uint64_t v56 = *((void *)v55 + 1);
    *(void *)uint64_t v54 = *(void *)v55;
    *((void *)v54 + 1) = v56;
    v54[16] = v55[16];
    uint64_t v57 = (uint64_t *)((char *)a1 + v53);
    uint64_t v58 = (uint64_t *)((char *)a2 + v53);
    uint64_t v59 = v58[1];
    *uint64_t v57 = *v58;
    v57[1] = v59;
    uint64_t v60 = a3[14];
    uint64_t v61 = a3[15];
    uint64_t v62 = (char *)a1 + v60;
    uint64_t v63 = (char *)a2 + v60;
    uint64_t v64 = *((void *)v63 + 1);
    *(void *)uint64_t v62 = *(void *)v63;
    *((void *)v62 + 1) = v64;
    *((void *)v62 + 2) = *((void *)v63 + 2);
    v62[24] = v63[24];
    uint64_t v65 = (char *)a1 + v61;
    uint64_t v66 = (char *)a2 + v61;
    uint64_t v67 = *((void *)v66 + 1);
    *(void *)uint64_t v65 = *(void *)v66;
    *((void *)v65 + 1) = v67;
    v65[16] = v66[16];
    v65[17] = v66[17];
    uint64_t v68 = a3[17];
    *(_WORD *)((char *)a1 + a3[16]) = *(_WORD *)((char *)a2 + a3[16]);
    long long v69 = (char *)a1 + v68;
    uint64_t v70 = (char *)a2 + v68;
    *long long v69 = *v70;
    uint64_t v71 = *((void *)v70 + 2);
    *((void *)v69 + 1) = *((void *)v70 + 1);
    *((void *)v69 + 2) = v71;
    v69[24] = v70[24];
    v69[25] = v70[25];
    uint64_t v72 = *((void *)v70 + 5);
    *((void *)v69 + 4) = *((void *)v70 + 4);
    *((void *)v69 + 5) = v72;
    v69[48] = v70[48];
    uint64_t v73 = a3[18];
    long long v74 = (char *)a1 + v73;
    long long v75 = (char *)a2 + v73;
    uint64_t v76 = *(uint64_t *)((char *)a2 + v73 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v76)
    {
      *(void *)long long v74 = *(void *)v75;
      *((void *)v74 + 1) = v76;
      uint64_t v77 = *((void *)v75 + 3);
      *((void *)v74 + 2) = *((void *)v75 + 2);
      *((void *)v74 + 3) = v77;
      long long v78 = *((_OWORD *)v75 + 3);
      *((_OWORD *)v74 + 2) = *((_OWORD *)v75 + 2);
      *((_OWORD *)v74 + 3) = v78;
      *((_WORD *)v74 + 32) = *((_WORD *)v75 + 32);
      *((void *)v74 + 9) = *((void *)v75 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v79 = *((_OWORD *)v75 + 3);
      *((_OWORD *)v74 + 2) = *((_OWORD *)v75 + 2);
      *((_OWORD *)v74 + 3) = v79;
      *((_OWORD *)v74 + 4) = *((_OWORD *)v75 + 4);
      long long v80 = *((_OWORD *)v75 + 1);
      *(_OWORD *)long long v74 = *(_OWORD *)v75;
      *((_OWORD *)v74 + 1) = v80;
    }
  }
  return a1;
}

uint64_t destroy for SubscribeButtonExposureEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  if (*(void *)(a1 + a2[6] + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + a2[7] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + a2[8] + 16) != 1) {
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + a2[9] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + a2[11] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + a2[18] + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for SubscribeButtonExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)(v13 + 24);
  if (v14)
  {
    *(void *)uint64_t v12 = *(void *)v13;
    *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
    *(void *)(v12 + 16) = *(void *)(v13 + 16);
    *(void *)(v12 + 24) = v14;
    *(unsigned char *)(v12 + 32) = *(unsigned char *)(v13 + 32);
    uint64_t v15 = *(void *)(v13 + 48);
    *(void *)(v12 + 40) = *(void *)(v13 + 40);
    *(void *)(v12 + 48) = v15;
    *(_WORD *)(v12 + 56) = *(_WORD *)(v13 + 56);
    uint64_t v17 = *(void *)(v13 + 64);
    uint64_t v16 = *(void *)(v13 + 72);
    *(unsigned char *)(v12 + 80) = *(unsigned char *)(v13 + 80);
    *(void *)(v12 + 64) = v17;
    *(void *)(v12 + 72) = v16;
    *(_OWORD *)(v12 + 88) = *(_OWORD *)(v13 + 88);
    *(void *)(v12 + 104) = *(void *)(v13 + 104);
    *(unsigned char *)(v12 + 112) = *(unsigned char *)(v13 + 112);
    *(void *)(v12 + 120) = *(void *)(v13 + 120);
    *(_DWORD *)(v12 + 128) = *(_DWORD *)(v13 + 128);
    *(unsigned char *)(v12 + 132) = *(unsigned char *)(v13 + 132);
    *(_WORD *)(v12 + 133) = *(_WORD *)(v13 + 133);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v18 = *(_OWORD *)(v13 + 112);
    *(_OWORD *)(v12 + 96) = *(_OWORD *)(v13 + 96);
    *(_OWORD *)(v12 + 112) = v18;
    *(void *)(v12 + 127) = *(void *)(v13 + 127);
    long long v19 = *(_OWORD *)(v13 + 48);
    *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
    *(_OWORD *)(v12 + 48) = v19;
    long long v20 = *(_OWORD *)(v13 + 80);
    *(_OWORD *)(v12 + 64) = *(_OWORD *)(v13 + 64);
    *(_OWORD *)(v12 + 80) = v20;
    long long v21 = *(_OWORD *)(v13 + 16);
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    *(_OWORD *)(v12 + 16) = v21;
  }
  uint64_t v22 = a3[7];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = *(void *)(v24 + 8);
  if (v25)
  {
    *(void *)uint64_t v23 = *(void *)v24;
    *(void *)(v23 + 8) = v25;
    *(_WORD *)(v23 + 16) = *(_WORD *)(v24 + 16);
    uint64_t v26 = *(void *)(v24 + 32);
    *(void *)(v23 + 24) = *(void *)(v24 + 24);
    *(void *)(v23 + 32) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v27 = *(_OWORD *)(v24 + 16);
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    *(_OWORD *)(v23 + 16) = v27;
    *(void *)(v23 + 32) = *(void *)(v24 + 32);
  }
  uint64_t v28 = a3[8];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = *(void *)(v30 + 16);
  if (v31 == 1)
  {
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
    *(void *)(v29 + 16) = *(void *)(v30 + 16);
  }
  else
  {
    *(unsigned char *)uint64_t v29 = *(unsigned char *)v30;
    *(void *)(v29 + 8) = *(void *)(v30 + 8);
    *(void *)(v29 + 16) = v31;
    swift_bridgeObjectRetain();
  }
  uint64_t v32 = a3[9];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  uint64_t v35 = *(void *)(v34 + 16);
  if (v35)
  {
    *(_WORD *)uint64_t v33 = *(_WORD *)v34;
    *(void *)(v33 + 8) = *(void *)(v34 + 8);
    *(void *)(v33 + 16) = v35;
    *(void *)(v33 + 24) = *(void *)(v34 + 24);
    uint64_t v36 = *(void *)(v34 + 40);
    *(void *)(v33 + 32) = *(void *)(v34 + 32);
    *(void *)(v33 + 40) = v36;
    uint64_t v37 = *(void *)(v34 + 56);
    *(void *)(v33 + 48) = *(void *)(v34 + 48);
    *(void *)(v33 + 56) = v37;
    uint64_t v38 = *(void *)(v34 + 72);
    *(void *)(v33 + 64) = *(void *)(v34 + 64);
    *(void *)(v33 + 72) = v38;
    *(unsigned char *)(v33 + 80) = *(unsigned char *)(v34 + 80);
    uint64_t v39 = *(void *)(v34 + 96);
    *(void *)(v33 + 88) = *(void *)(v34 + 88);
    *(void *)(v33 + 96) = v39;
    *(void *)(v33 + 104) = *(void *)(v34 + 104);
    *(unsigned char *)(v33 + 112) = *(unsigned char *)(v34 + 112);
    uint64_t v40 = *(void *)(v34 + 128);
    *(void *)(v33 + 120) = *(void *)(v34 + 120);
    *(void *)(v33 + 128) = v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v41 = *(_OWORD *)(v34 + 112);
    *(_OWORD *)(v33 + 96) = *(_OWORD *)(v34 + 96);
    *(_OWORD *)(v33 + 112) = v41;
    *(void *)(v33 + 128) = *(void *)(v34 + 128);
    long long v42 = *(_OWORD *)(v34 + 48);
    *(_OWORD *)(v33 + 32) = *(_OWORD *)(v34 + 32);
    *(_OWORD *)(v33 + 48) = v42;
    long long v43 = *(_OWORD *)(v34 + 80);
    *(_OWORD *)(v33 + 64) = *(_OWORD *)(v34 + 64);
    *(_OWORD *)(v33 + 80) = v43;
    long long v44 = *(_OWORD *)(v34 + 16);
    *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
    *(_OWORD *)(v33 + 16) = v44;
  }
  uint64_t v45 = a3[11];
  *(_WORD *)(a1 + a3[10]) = *(_WORD *)(a2 + a3[10]);
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  uint64_t v48 = *(void *)(v47 + 8);
  if (v48)
  {
    *(void *)uint64_t v46 = *(void *)v47;
    *(void *)(v46 + 8) = v48;
    *(_WORD *)(v46 + 16) = *(_WORD *)(v47 + 16);
    *(void *)(v46 + 24) = *(void *)(v47 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v49 = *(_OWORD *)(v47 + 16);
    *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
    *(_OWORD *)(v46 + 16) = v49;
  }
  uint64_t v50 = a3[12];
  uint64_t v51 = a3[13];
  uint64_t v52 = a1 + v50;
  uint64_t v53 = a2 + v50;
  uint64_t v54 = *(void *)(v53 + 8);
  *(void *)uint64_t v52 = *(void *)v53;
  *(void *)(v52 + 8) = v54;
  *(unsigned char *)(v52 + 16) = *(unsigned char *)(v53 + 16);
  uint64_t v55 = (void *)(a1 + v51);
  uint64_t v56 = (void *)(a2 + v51);
  uint64_t v57 = v56[1];
  *uint64_t v55 = *v56;
  v55[1] = v57;
  uint64_t v58 = a3[14];
  uint64_t v59 = a3[15];
  uint64_t v60 = a1 + v58;
  uint64_t v61 = a2 + v58;
  uint64_t v62 = *(void *)(v61 + 8);
  *(void *)uint64_t v60 = *(void *)v61;
  *(void *)(v60 + 8) = v62;
  *(void *)(v60 + 16) = *(void *)(v61 + 16);
  *(unsigned char *)(v60 + 24) = *(unsigned char *)(v61 + 24);
  uint64_t v63 = a1 + v59;
  uint64_t v64 = a2 + v59;
  uint64_t v65 = *(void *)(v64 + 8);
  *(void *)uint64_t v63 = *(void *)v64;
  *(void *)(v63 + 8) = v65;
  *(unsigned char *)(v63 + 16) = *(unsigned char *)(v64 + 16);
  *(unsigned char *)(v63 + 17) = *(unsigned char *)(v64 + 17);
  uint64_t v66 = a3[17];
  *(_WORD *)(a1 + a3[16]) = *(_WORD *)(a2 + a3[16]);
  uint64_t v67 = a1 + v66;
  uint64_t v68 = a2 + v66;
  *(unsigned char *)uint64_t v67 = *(unsigned char *)v68;
  uint64_t v69 = *(void *)(v68 + 16);
  *(void *)(v67 + 8) = *(void *)(v68 + 8);
  *(void *)(v67 + 16) = v69;
  *(unsigned char *)(v67 + 24) = *(unsigned char *)(v68 + 24);
  *(unsigned char *)(v67 + 25) = *(unsigned char *)(v68 + 25);
  uint64_t v70 = *(void *)(v68 + 40);
  *(void *)(v67 + 32) = *(void *)(v68 + 32);
  *(void *)(v67 + 40) = v70;
  *(unsigned char *)(v67 + 48) = *(unsigned char *)(v68 + 48);
  uint64_t v71 = a3[18];
  uint64_t v72 = a1 + v71;
  uint64_t v73 = a2 + v71;
  uint64_t v74 = *(void *)(a2 + v71 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v74)
  {
    *(void *)uint64_t v72 = *(void *)v73;
    *(void *)(v72 + 8) = v74;
    uint64_t v75 = *(void *)(v73 + 24);
    *(void *)(v72 + 16) = *(void *)(v73 + 16);
    *(void *)(v72 + 24) = v75;
    long long v76 = *(_OWORD *)(v73 + 48);
    *(_OWORD *)(v72 + 32) = *(_OWORD *)(v73 + 32);
    *(_OWORD *)(v72 + 48) = v76;
    *(_WORD *)(v72 + 64) = *(_WORD *)(v73 + 64);
    *(void *)(v72 + 72) = *(void *)(v73 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v77 = *(_OWORD *)(v73 + 48);
    *(_OWORD *)(v72 + 32) = *(_OWORD *)(v73 + 32);
    *(_OWORD *)(v72 + 48) = v77;
    *(_OWORD *)(v72 + 64) = *(_OWORD *)(v73 + 64);
    long long v78 = *(_OWORD *)(v73 + 16);
    *(_OWORD *)uint64_t v72 = *(_OWORD *)v73;
    *(_OWORD *)(v72 + 16) = v78;
  }
  return a1;
}

uint64_t assignWithCopy for SubscribeButtonExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)(a1 + v11 + 24);
  uint64_t v15 = *(void *)(a2 + v11 + 24);
  if (v14)
  {
    if (v15)
    {
      *(unsigned char *)uint64_t v12 = *(unsigned char *)v13;
      *(_DWORD *)(v12 + 4) = *(_DWORD *)(v13 + 4);
      *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
      *(void *)(v12 + 16) = *(void *)(v13 + 16);
      *(void *)(v12 + 24) = *(void *)(v13 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v12 + 32) = *(unsigned char *)(v13 + 32);
      *(void *)(v12 + 40) = *(void *)(v13 + 40);
      uint64_t v16 = *(void *)(v13 + 48);
      *(unsigned char *)(v12 + 56) = *(unsigned char *)(v13 + 56);
      *(void *)(v12 + 48) = v16;
      *(unsigned char *)(v12 + 57) = *(unsigned char *)(v13 + 57);
      *(void *)(v12 + 64) = *(void *)(v13 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v17 = *(void *)(v13 + 72);
      *(unsigned char *)(v12 + 80) = *(unsigned char *)(v13 + 80);
      *(void *)(v12 + 72) = v17;
      *(void *)(v12 + 88) = *(void *)(v13 + 88);
      *(void *)(v12 + 96) = *(void *)(v13 + 96);
      *(void *)(v12 + 104) = *(void *)(v13 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v12 + 112) = *(unsigned char *)(v13 + 112);
      *(void *)(v12 + 120) = *(void *)(v13 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v12 + 128) = *(unsigned char *)(v13 + 128);
      *(unsigned char *)(v12 + 129) = *(unsigned char *)(v13 + 129);
      *(unsigned char *)(v12 + 130) = *(unsigned char *)(v13 + 130);
      *(unsigned char *)(v12 + 131) = *(unsigned char *)(v13 + 131);
      *(unsigned char *)(v12 + 132) = *(unsigned char *)(v13 + 132);
      *(unsigned char *)(v12 + 133) = *(unsigned char *)(v13 + 133);
      *(unsigned char *)(v12 + 134) = *(unsigned char *)(v13 + 134);
    }
    else
    {
      sub_1DE0AE434(v12);
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      long long v20 = *(_OWORD *)(v13 + 64);
      long long v22 = *(_OWORD *)(v13 + 16);
      long long v21 = *(_OWORD *)(v13 + 32);
      *(_OWORD *)(v12 + 48) = *(_OWORD *)(v13 + 48);
      *(_OWORD *)(v12 + 64) = v20;
      *(_OWORD *)(v12 + 16) = v22;
      *(_OWORD *)(v12 + 32) = v21;
      long long v24 = *(_OWORD *)(v13 + 96);
      long long v23 = *(_OWORD *)(v13 + 112);
      long long v25 = *(_OWORD *)(v13 + 80);
      *(void *)(v12 + 127) = *(void *)(v13 + 127);
      *(_OWORD *)(v12 + 96) = v24;
      *(_OWORD *)(v12 + 112) = v23;
      *(_OWORD *)(v12 + 80) = v25;
    }
  }
  else if (v15)
  {
    *(void *)uint64_t v12 = *(void *)v13;
    *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
    *(void *)(v12 + 16) = *(void *)(v13 + 16);
    *(void *)(v12 + 24) = *(void *)(v13 + 24);
    *(unsigned char *)(v12 + 32) = *(unsigned char *)(v13 + 32);
    *(void *)(v12 + 40) = *(void *)(v13 + 40);
    uint64_t v18 = *(void *)(v13 + 48);
    *(unsigned char *)(v12 + 56) = *(unsigned char *)(v13 + 56);
    *(void *)(v12 + 48) = v18;
    *(unsigned char *)(v12 + 57) = *(unsigned char *)(v13 + 57);
    *(void *)(v12 + 64) = *(void *)(v13 + 64);
    uint64_t v19 = *(void *)(v13 + 72);
    *(unsigned char *)(v12 + 80) = *(unsigned char *)(v13 + 80);
    *(void *)(v12 + 72) = v19;
    *(void *)(v12 + 88) = *(void *)(v13 + 88);
    *(void *)(v12 + 96) = *(void *)(v13 + 96);
    *(void *)(v12 + 104) = *(void *)(v13 + 104);
    *(unsigned char *)(v12 + 112) = *(unsigned char *)(v13 + 112);
    *(void *)(v12 + 120) = *(void *)(v13 + 120);
    *(unsigned char *)(v12 + 128) = *(unsigned char *)(v13 + 128);
    *(unsigned char *)(v12 + 129) = *(unsigned char *)(v13 + 129);
    *(unsigned char *)(v12 + 130) = *(unsigned char *)(v13 + 130);
    *(unsigned char *)(v12 + 131) = *(unsigned char *)(v13 + 131);
    *(unsigned char *)(v12 + 132) = *(unsigned char *)(v13 + 132);
    *(unsigned char *)(v12 + 133) = *(unsigned char *)(v13 + 133);
    *(unsigned char *)(v12 + 134) = *(unsigned char *)(v13 + 134);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    long long v26 = *(_OWORD *)(v13 + 16);
    long long v27 = *(_OWORD *)(v13 + 32);
    long long v28 = *(_OWORD *)(v13 + 64);
    *(_OWORD *)(v12 + 48) = *(_OWORD *)(v13 + 48);
    *(_OWORD *)(v12 + 64) = v28;
    *(_OWORD *)(v12 + 16) = v26;
    *(_OWORD *)(v12 + 32) = v27;
    long long v29 = *(_OWORD *)(v13 + 80);
    long long v30 = *(_OWORD *)(v13 + 96);
    long long v31 = *(_OWORD *)(v13 + 112);
    *(void *)(v12 + 127) = *(void *)(v13 + 127);
    *(_OWORD *)(v12 + 96) = v30;
    *(_OWORD *)(v12 + 112) = v31;
    *(_OWORD *)(v12 + 80) = v29;
  }
  uint64_t v32 = a3[7];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = (long long *)(a2 + v32);
  uint64_t v35 = *(void *)(a1 + v32 + 8);
  uint64_t v36 = *(void *)(a2 + v32 + 8);
  if (v35)
  {
    if (v36)
    {
      *(void *)uint64_t v33 = *(void *)v34;
      *(void *)(v33 + 8) = *((void *)v34 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v33 + 16) = *((unsigned char *)v34 + 16);
      *(unsigned char *)(v33 + 17) = *((unsigned char *)v34 + 17);
      *(void *)(v33 + 24) = *((void *)v34 + 3);
      *(void *)(v33 + 32) = *((void *)v34 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DE06992C(v33);
      uint64_t v37 = *((void *)v34 + 4);
      long long v38 = v34[1];
      *(_OWORD *)uint64_t v33 = *v34;
      *(_OWORD *)(v33 + 16) = v38;
      *(void *)(v33 + 32) = v37;
    }
  }
  else if (v36)
  {
    *(void *)uint64_t v33 = *(void *)v34;
    *(void *)(v33 + 8) = *((void *)v34 + 1);
    *(unsigned char *)(v33 + 16) = *((unsigned char *)v34 + 16);
    *(unsigned char *)(v33 + 17) = *((unsigned char *)v34 + 17);
    *(void *)(v33 + 24) = *((void *)v34 + 3);
    *(void *)(v33 + 32) = *((void *)v34 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v39 = *v34;
    long long v40 = v34[1];
    *(void *)(v33 + 32) = *((void *)v34 + 4);
    *(_OWORD *)uint64_t v33 = v39;
    *(_OWORD *)(v33 + 16) = v40;
  }
  uint64_t v41 = a3[8];
  uint64_t v42 = a1 + v41;
  long long v43 = (long long *)(a2 + v41);
  uint64_t v44 = *(void *)(a1 + v41 + 16);
  uint64_t v45 = *(void *)(a2 + v41 + 16);
  if (v44 == 1)
  {
    if (v45 == 1)
    {
      long long v46 = *v43;
      *(void *)(v42 + 16) = *((void *)v43 + 2);
      *(_OWORD *)uint64_t v42 = v46;
    }
    else
    {
      *(unsigned char *)uint64_t v42 = *(unsigned char *)v43;
      *(void *)(v42 + 8) = *((void *)v43 + 1);
      *(void *)(v42 + 16) = *((void *)v43 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v45 == 1)
  {
    sub_1DE05D370(v42);
    uint64_t v47 = *((void *)v43 + 2);
    *(_OWORD *)uint64_t v42 = *v43;
    *(void *)(v42 + 16) = v47;
  }
  else
  {
    *(unsigned char *)uint64_t v42 = *(unsigned char *)v43;
    *(void *)(v42 + 8) = *((void *)v43 + 1);
    *(void *)(v42 + 16) = *((void *)v43 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v48 = a3[9];
  uint64_t v49 = a1 + v48;
  uint64_t v50 = a2 + v48;
  uint64_t v51 = *(void *)(a1 + v48 + 16);
  uint64_t v52 = *(void *)(a2 + v48 + 16);
  if (v51)
  {
    if (v52)
    {
      *(unsigned char *)uint64_t v49 = *(unsigned char *)v50;
      *(unsigned char *)(v49 + 1) = *(unsigned char *)(v50 + 1);
      *(void *)(v49 + 8) = *(void *)(v50 + 8);
      *(void *)(v49 + 16) = *(void *)(v50 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v49 + 24) = *(_DWORD *)(v50 + 24);
      *(_DWORD *)(v49 + 28) = *(_DWORD *)(v50 + 28);
      *(void *)(v49 + 32) = *(void *)(v50 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v49 + 40) = *(void *)(v50 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v49 + 48) = *(void *)(v50 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v49 + 56) = *(void *)(v50 + 56);
      *(void *)(v49 + 64) = *(void *)(v50 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v49 + 72) = *(void *)(v50 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v49 + 80) = *(unsigned char *)(v50 + 80);
      *(void *)(v49 + 88) = *(void *)(v50 + 88);
      *(void *)(v49 + 96) = *(void *)(v50 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v53 = *(void *)(v50 + 104);
      *(unsigned char *)(v49 + 112) = *(unsigned char *)(v50 + 112);
      *(void *)(v49 + 104) = v53;
      *(void *)(v49 + 120) = *(void *)(v50 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v49 + 128) = *(void *)(v50 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DE069980(v49);
      *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
      long long v55 = *(_OWORD *)(v50 + 64);
      long long v57 = *(_OWORD *)(v50 + 16);
      long long v56 = *(_OWORD *)(v50 + 32);
      *(_OWORD *)(v49 + 48) = *(_OWORD *)(v50 + 48);
      *(_OWORD *)(v49 + 64) = v55;
      *(_OWORD *)(v49 + 16) = v57;
      *(_OWORD *)(v49 + 32) = v56;
      long long v59 = *(_OWORD *)(v50 + 96);
      long long v58 = *(_OWORD *)(v50 + 112);
      long long v60 = *(_OWORD *)(v50 + 80);
      *(void *)(v49 + 128) = *(void *)(v50 + 128);
      *(_OWORD *)(v49 + 96) = v59;
      *(_OWORD *)(v49 + 112) = v58;
      *(_OWORD *)(v49 + 80) = v60;
    }
  }
  else if (v52)
  {
    *(unsigned char *)uint64_t v49 = *(unsigned char *)v50;
    *(unsigned char *)(v49 + 1) = *(unsigned char *)(v50 + 1);
    *(void *)(v49 + 8) = *(void *)(v50 + 8);
    *(void *)(v49 + 16) = *(void *)(v50 + 16);
    *(_DWORD *)(v49 + 24) = *(_DWORD *)(v50 + 24);
    *(_DWORD *)(v49 + 28) = *(_DWORD *)(v50 + 28);
    *(void *)(v49 + 32) = *(void *)(v50 + 32);
    *(void *)(v49 + 40) = *(void *)(v50 + 40);
    *(void *)(v49 + 48) = *(void *)(v50 + 48);
    *(void *)(v49 + 56) = *(void *)(v50 + 56);
    *(void *)(v49 + 64) = *(void *)(v50 + 64);
    *(void *)(v49 + 72) = *(void *)(v50 + 72);
    *(unsigned char *)(v49 + 80) = *(unsigned char *)(v50 + 80);
    *(void *)(v49 + 88) = *(void *)(v50 + 88);
    *(void *)(v49 + 96) = *(void *)(v50 + 96);
    uint64_t v54 = *(void *)(v50 + 104);
    *(unsigned char *)(v49 + 112) = *(unsigned char *)(v50 + 112);
    *(void *)(v49 + 104) = v54;
    *(void *)(v49 + 120) = *(void *)(v50 + 120);
    *(void *)(v49 + 128) = *(void *)(v50 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
    long long v61 = *(_OWORD *)(v50 + 16);
    long long v62 = *(_OWORD *)(v50 + 32);
    long long v63 = *(_OWORD *)(v50 + 64);
    *(_OWORD *)(v49 + 48) = *(_OWORD *)(v50 + 48);
    *(_OWORD *)(v49 + 64) = v63;
    *(_OWORD *)(v49 + 16) = v61;
    *(_OWORD *)(v49 + 32) = v62;
    long long v64 = *(_OWORD *)(v50 + 80);
    long long v65 = *(_OWORD *)(v50 + 96);
    long long v66 = *(_OWORD *)(v50 + 112);
    *(void *)(v49 + 128) = *(void *)(v50 + 128);
    *(_OWORD *)(v49 + 96) = v65;
    *(_OWORD *)(v49 + 112) = v66;
    *(_OWORD *)(v49 + 80) = v64;
  }
  *(_WORD *)(a1 + a3[10]) = *(_WORD *)(a2 + a3[10]);
  uint64_t v67 = a3[11];
  uint64_t v68 = a1 + v67;
  uint64_t v69 = a2 + v67;
  uint64_t v70 = *(void *)(a1 + v67 + 8);
  uint64_t v71 = *(void *)(a2 + v67 + 8);
  if (v70)
  {
    if (v71)
    {
      *(void *)uint64_t v68 = *(void *)v69;
      *(void *)(v68 + 8) = *(void *)(v69 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v68 + 16) = *(unsigned char *)(v69 + 16);
      *(unsigned char *)(v68 + 17) = *(unsigned char *)(v69 + 17);
      *(void *)(v68 + 24) = *(void *)(v69 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DE07C4F8(v68);
      long long v72 = *(_OWORD *)(v69 + 16);
      *(_OWORD *)uint64_t v68 = *(_OWORD *)v69;
      *(_OWORD *)(v68 + 16) = v72;
    }
  }
  else if (v71)
  {
    *(void *)uint64_t v68 = *(void *)v69;
    *(void *)(v68 + 8) = *(void *)(v69 + 8);
    *(unsigned char *)(v68 + 16) = *(unsigned char *)(v69 + 16);
    *(unsigned char *)(v68 + 17) = *(unsigned char *)(v69 + 17);
    *(void *)(v68 + 24) = *(void *)(v69 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v73 = *(_OWORD *)(v69 + 16);
    *(_OWORD *)uint64_t v68 = *(_OWORD *)v69;
    *(_OWORD *)(v68 + 16) = v73;
  }
  uint64_t v74 = a3[12];
  uint64_t v75 = a1 + v74;
  uint64_t v76 = a2 + v74;
  *(void *)uint64_t v75 = *(void *)(a2 + v74);
  *(void *)(v75 + 8) = *(void *)(a2 + v74 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v75 + 16) = *(unsigned char *)(v76 + 16);
  uint64_t v77 = a3[13];
  long long v78 = (void *)(a1 + v77);
  long long v79 = (void *)(a2 + v77);
  *long long v78 = *v79;
  v78[1] = v79[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v80 = a3[14];
  uint64_t v81 = a1 + v80;
  uint64_t v82 = a2 + v80;
  *(void *)uint64_t v81 = *(void *)(a2 + v80);
  *(void *)(v81 + 8) = *(void *)(a2 + v80 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v83 = *(void *)(v82 + 16);
  *(unsigned char *)(v81 + 24) = *(unsigned char *)(v82 + 24);
  *(void *)(v81 + 16) = v83;
  uint64_t v84 = a3[15];
  uint64_t v85 = a1 + v84;
  uint64_t v86 = a2 + v84;
  *(void *)uint64_t v85 = *(void *)(a2 + v84);
  *(void *)(v85 + 8) = *(void *)(a2 + v84 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v85 + 16) = *(unsigned char *)(v86 + 16);
  *(unsigned char *)(v85 + 17) = *(unsigned char *)(v86 + 17);
  uint64_t v87 = a3[16];
  long long v88 = (unsigned char *)(a1 + v87);
  long long v89 = (unsigned char *)(a2 + v87);
  *long long v88 = *v89;
  v88[1] = v89[1];
  uint64_t v90 = a3[17];
  uint64_t v91 = a1 + v90;
  uint64_t v92 = a2 + v90;
  *(unsigned char *)uint64_t v91 = *(unsigned char *)(a2 + v90);
  *(void *)(v91 + 8) = *(void *)(a2 + v90 + 8);
  *(void *)(v91 + 16) = *(void *)(a2 + v90 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v91 + 24) = *(unsigned char *)(v92 + 24);
  *(unsigned char *)(v91 + 25) = *(unsigned char *)(v92 + 25);
  *(void *)(v91 + 32) = *(void *)(v92 + 32);
  *(void *)(v91 + 40) = *(void *)(v92 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v91 + 48) = *(unsigned char *)(v92 + 48);
  uint64_t v93 = a3[18];
  uint64_t v94 = a1 + v93;
  uint64_t v95 = a2 + v93;
  uint64_t v96 = *(void *)(a1 + v93 + 8);
  uint64_t v97 = *(void *)(v95 + 8);
  if (v96)
  {
    if (v97)
    {
      *(void *)uint64_t v94 = *(void *)v95;
      *(void *)(v94 + 8) = *(void *)(v95 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v94 + 16) = *(void *)(v95 + 16);
      *(void *)(v94 + 24) = *(void *)(v95 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v94 + 32) = *(_DWORD *)(v95 + 32);
      uint64_t v98 = *(void *)(v95 + 40);
      *(unsigned char *)(v94 + 48) = *(unsigned char *)(v95 + 48);
      *(void *)(v94 + 40) = v98;
      uint64_t v99 = *(void *)(v95 + 56);
      *(unsigned char *)(v94 + 64) = *(unsigned char *)(v95 + 64);
      *(void *)(v94 + 56) = v99;
      *(unsigned char *)(v94 + 65) = *(unsigned char *)(v95 + 65);
      *(void *)(v94 + 72) = *(void *)(v95 + 72);
    }
    else
    {
      sub_1DE0E8260(v94);
      *(_OWORD *)uint64_t v94 = *(_OWORD *)v95;
      long long v102 = *(_OWORD *)(v95 + 64);
      long long v104 = *(_OWORD *)(v95 + 16);
      long long v103 = *(_OWORD *)(v95 + 32);
      *(_OWORD *)(v94 + 48) = *(_OWORD *)(v95 + 48);
      *(_OWORD *)(v94 + 64) = v102;
      *(_OWORD *)(v94 + 16) = v104;
      *(_OWORD *)(v94 + 32) = v103;
    }
  }
  else if (v97)
  {
    *(void *)uint64_t v94 = *(void *)v95;
    *(void *)(v94 + 8) = *(void *)(v95 + 8);
    *(void *)(v94 + 16) = *(void *)(v95 + 16);
    *(void *)(v94 + 24) = *(void *)(v95 + 24);
    long long v100 = *(_OWORD *)(v95 + 32);
    long long v101 = *(_OWORD *)(v95 + 48);
    *(unsigned char *)(v94 + 64) = *(unsigned char *)(v95 + 64);
    *(_OWORD *)(v94 + 32) = v100;
    *(_OWORD *)(v94 + 48) = v101;
    *(unsigned char *)(v94 + 65) = *(unsigned char *)(v95 + 65);
    *(void *)(v94 + 72) = *(void *)(v95 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v94 = *(_OWORD *)v95;
    long long v105 = *(_OWORD *)(v95 + 16);
    long long v106 = *(_OWORD *)(v95 + 32);
    long long v107 = *(_OWORD *)(v95 + 64);
    *(_OWORD *)(v94 + 48) = *(_OWORD *)(v95 + 48);
    *(_OWORD *)(v94 + 64) = v107;
    *(_OWORD *)(v94 + 16) = v105;
    *(_OWORD *)(v94 + 32) = v106;
  }
  return a1;
}

uint64_t sub_1DE0E8260(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for SubscribeButtonExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  long long v15 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 48) = v15;
  *(void *)(v13 + 127) = *(void *)(v14 + 127);
  long long v16 = *(_OWORD *)(v14 + 112);
  *(_OWORD *)(v13 + 96) = *(_OWORD *)(v14 + 96);
  *(_OWORD *)(v13 + 112) = v16;
  long long v17 = *(_OWORD *)(v14 + 80);
  *(_OWORD *)(v13 + 64) = *(_OWORD *)(v14 + 64);
  *(_OWORD *)(v13 + 80) = v17;
  long long v18 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v18;
  uint64_t v19 = a1 + v12;
  uint64_t v20 = a2 + v12;
  *(void *)(v19 + 32) = *(void *)(v20 + 32);
  long long v21 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v21;
  uint64_t v22 = a3[8];
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(void *)(v24 + 16) = *(void *)(v25 + 16);
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  uint64_t v26 = a1 + v23;
  uint64_t v27 = a2 + v23;
  long long v28 = *(_OWORD *)(v27 + 48);
  *(_OWORD *)(v26 + 32) = *(_OWORD *)(v27 + 32);
  *(_OWORD *)(v26 + 48) = v28;
  *(void *)(v26 + 128) = *(void *)(v27 + 128);
  long long v29 = *(_OWORD *)(v27 + 112);
  *(_OWORD *)(v26 + 96) = *(_OWORD *)(v27 + 96);
  *(_OWORD *)(v26 + 112) = v29;
  long long v30 = *(_OWORD *)(v27 + 80);
  *(_OWORD *)(v26 + 64) = *(_OWORD *)(v27 + 64);
  *(_OWORD *)(v26 + 80) = v30;
  long long v31 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v31;
  uint64_t v32 = a3[11];
  *(_WORD *)(a1 + a3[10]) = *(_WORD *)(a2 + a3[10]);
  uint64_t v33 = (_OWORD *)(a1 + v32);
  uint64_t v34 = (_OWORD *)(a2 + v32);
  long long v35 = v34[1];
  *uint64_t v33 = *v34;
  v33[1] = v35;
  uint64_t v36 = a3[12];
  uint64_t v37 = a3[13];
  uint64_t v38 = a1 + v36;
  uint64_t v39 = a2 + v36;
  *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
  *(unsigned char *)(v38 + 16) = *(unsigned char *)(v39 + 16);
  *(_OWORD *)(a1 + v37) = *(_OWORD *)(a2 + v37);
  uint64_t v40 = a3[14];
  uint64_t v41 = a3[15];
  uint64_t v42 = (_OWORD *)(a1 + v40);
  long long v43 = (_OWORD *)(a2 + v40);
  *uint64_t v42 = *v43;
  *(_OWORD *)((char *)v42 + 9) = *(_OWORD *)((char *)v43 + 9);
  uint64_t v44 = a1 + v41;
  uint64_t v45 = a2 + v41;
  *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
  *(_WORD *)(v44 + 16) = *(_WORD *)(v45 + 16);
  uint64_t v46 = a3[17];
  *(_WORD *)(a1 + a3[16]) = *(_WORD *)(a2 + a3[16]);
  uint64_t v47 = a1 + v46;
  uint64_t v48 = a2 + v46;
  long long v49 = *(_OWORD *)(v48 + 16);
  *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
  *(_OWORD *)(v47 + 16) = v49;
  *(_OWORD *)(v47 + 32) = *(_OWORD *)(v48 + 32);
  *(unsigned char *)(v47 + 48) = *(unsigned char *)(v48 + 48);
  uint64_t v50 = a3[18];
  uint64_t v51 = (_OWORD *)(a1 + v50);
  uint64_t v52 = (_OWORD *)(a2 + v50);
  long long v53 = v52[3];
  v51[2] = v52[2];
  v51[3] = v53;
  v51[4] = v52[4];
  long long v54 = v52[1];
  *uint64_t v51 = *v52;
  v51[1] = v54;
  return a1;
}

uint64_t assignWithTake for SubscribeButtonExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  if (*(void *)(a1 + v11 + 24))
  {
    uint64_t v14 = *(void *)(v13 + 24);
    if (v14)
    {
      *(unsigned char *)uint64_t v12 = *(unsigned char *)v13;
      *(_DWORD *)(v12 + 4) = *(_DWORD *)(v13 + 4);
      *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
      *(void *)(v12 + 16) = *(void *)(v13 + 16);
      *(void *)(v12 + 24) = v14;
      swift_bridgeObjectRelease();
      *(unsigned char *)(v12 + 32) = *(unsigned char *)(v13 + 32);
      uint64_t v15 = *(void *)(v13 + 48);
      *(void *)(v12 + 40) = *(void *)(v13 + 40);
      *(void *)(v12 + 48) = v15;
      *(unsigned char *)(v12 + 56) = *(unsigned char *)(v13 + 56);
      *(unsigned char *)(v12 + 57) = *(unsigned char *)(v13 + 57);
      *(void *)(v12 + 64) = *(void *)(v13 + 64);
      swift_bridgeObjectRelease();
      *(void *)(v12 + 72) = *(void *)(v13 + 72);
      *(unsigned char *)(v12 + 80) = *(unsigned char *)(v13 + 80);
      *(_OWORD *)(v12 + 88) = *(_OWORD *)(v13 + 88);
      *(void *)(v12 + 104) = *(void *)(v13 + 104);
      swift_bridgeObjectRelease();
      *(unsigned char *)(v12 + 112) = *(unsigned char *)(v13 + 112);
      *(void *)(v12 + 120) = *(void *)(v13 + 120);
      swift_bridgeObjectRelease();
      *(unsigned char *)(v12 + 128) = *(unsigned char *)(v13 + 128);
      *(unsigned char *)(v12 + 129) = *(unsigned char *)(v13 + 129);
      *(unsigned char *)(v12 + 130) = *(unsigned char *)(v13 + 130);
      *(unsigned char *)(v12 + 131) = *(unsigned char *)(v13 + 131);
      *(unsigned char *)(v12 + 132) = *(unsigned char *)(v13 + 132);
      *(unsigned char *)(v12 + 133) = *(unsigned char *)(v13 + 133);
      *(unsigned char *)(v12 + 134) = *(unsigned char *)(v13 + 134);
      goto LABEL_6;
    }
    sub_1DE0AE434(v12);
  }
  long long v16 = *(_OWORD *)(v13 + 112);
  *(_OWORD *)(v12 + 96) = *(_OWORD *)(v13 + 96);
  *(_OWORD *)(v12 + 112) = v16;
  *(void *)(v12 + 127) = *(void *)(v13 + 127);
  long long v17 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(v12 + 48) = v17;
  long long v18 = *(_OWORD *)(v13 + 80);
  *(_OWORD *)(v12 + 64) = *(_OWORD *)(v13 + 64);
  *(_OWORD *)(v12 + 80) = v18;
  long long v19 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v19;
LABEL_6:
  uint64_t v20 = a3[7];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  if (*(void *)(a1 + v20 + 8))
  {
    uint64_t v23 = *(void *)(v22 + 8);
    if (v23)
    {
      *(void *)uint64_t v21 = *(void *)v22;
      *(void *)(v21 + 8) = v23;
      swift_bridgeObjectRelease();
      *(unsigned char *)(v21 + 16) = *(unsigned char *)(v22 + 16);
      *(unsigned char *)(v21 + 17) = *(unsigned char *)(v22 + 17);
      uint64_t v24 = *(void *)(v22 + 32);
      *(void *)(v21 + 24) = *(void *)(v22 + 24);
      *(void *)(v21 + 32) = v24;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1DE06992C(v21);
  }
  long long v25 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v25;
  *(void *)(v21 + 32) = *(void *)(v22 + 32);
LABEL_11:
  uint64_t v26 = a3[8];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  if (*(void *)(a1 + v26 + 16) == 1)
  {
LABEL_14:
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
    *(void *)(v27 + 16) = *(void *)(v28 + 16);
    goto LABEL_16;
  }
  uint64_t v29 = *(void *)(v28 + 16);
  if (v29 == 1)
  {
    sub_1DE05D370(v27);
    goto LABEL_14;
  }
  *(unsigned char *)uint64_t v27 = *(unsigned char *)v28;
  *(void *)(v27 + 8) = *(void *)(v28 + 8);
  *(void *)(v27 + 16) = v29;
  swift_bridgeObjectRelease();
LABEL_16:
  uint64_t v30 = a3[9];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  if (*(void *)(a1 + v30 + 16))
  {
    uint64_t v33 = *(void *)(v32 + 16);
    if (v33)
    {
      *(_WORD *)uint64_t v31 = *(_WORD *)v32;
      *(void *)(v31 + 8) = *(void *)(v32 + 8);
      *(void *)(v31 + 16) = v33;
      swift_bridgeObjectRelease();
      *(void *)(v31 + 24) = *(void *)(v32 + 24);
      *(void *)(v31 + 32) = *(void *)(v32 + 32);
      swift_bridgeObjectRelease();
      *(void *)(v31 + 40) = *(void *)(v32 + 40);
      swift_bridgeObjectRelease();
      *(void *)(v31 + 48) = *(void *)(v32 + 48);
      swift_bridgeObjectRelease();
      uint64_t v34 = *(void *)(v32 + 64);
      *(void *)(v31 + 56) = *(void *)(v32 + 56);
      *(void *)(v31 + 64) = v34;
      swift_bridgeObjectRelease();
      *(void *)(v31 + 72) = *(void *)(v32 + 72);
      swift_bridgeObjectRelease();
      *(unsigned char *)(v31 + 80) = *(unsigned char *)(v32 + 80);
      uint64_t v35 = *(void *)(v32 + 96);
      *(void *)(v31 + 88) = *(void *)(v32 + 88);
      *(void *)(v31 + 96) = v35;
      swift_bridgeObjectRelease();
      *(void *)(v31 + 104) = *(void *)(v32 + 104);
      *(unsigned char *)(v31 + 112) = *(unsigned char *)(v32 + 112);
      *(void *)(v31 + 120) = *(void *)(v32 + 120);
      swift_bridgeObjectRelease();
      *(void *)(v31 + 128) = *(void *)(v32 + 128);
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_1DE069980(v31);
  }
  long long v36 = *(_OWORD *)(v32 + 112);
  *(_OWORD *)(v31 + 96) = *(_OWORD *)(v32 + 96);
  *(_OWORD *)(v31 + 112) = v36;
  *(void *)(v31 + 128) = *(void *)(v32 + 128);
  long long v37 = *(_OWORD *)(v32 + 48);
  *(_OWORD *)(v31 + 32) = *(_OWORD *)(v32 + 32);
  *(_OWORD *)(v31 + 48) = v37;
  long long v38 = *(_OWORD *)(v32 + 80);
  *(_OWORD *)(v31 + 64) = *(_OWORD *)(v32 + 64);
  *(_OWORD *)(v31 + 80) = v38;
  long long v39 = *(_OWORD *)(v32 + 16);
  *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
  *(_OWORD *)(v31 + 16) = v39;
LABEL_21:
  uint64_t v40 = a3[11];
  *(_WORD *)(a1 + a3[10]) = *(_WORD *)(a2 + a3[10]);
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  if (*(void *)(a1 + v40 + 8))
  {
    uint64_t v43 = *(void *)(v42 + 8);
    if (v43)
    {
      *(void *)uint64_t v41 = *(void *)v42;
      *(void *)(v41 + 8) = v43;
      swift_bridgeObjectRelease();
      *(unsigned char *)(v41 + 16) = *(unsigned char *)(v42 + 16);
      *(unsigned char *)(v41 + 17) = *(unsigned char *)(v42 + 17);
      *(void *)(v41 + 24) = *(void *)(v42 + 24);
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    sub_1DE07C4F8(a1 + v40);
  }
  long long v44 = *(_OWORD *)(v42 + 16);
  *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
  *(_OWORD *)(v41 + 16) = v44;
LABEL_26:
  uint64_t v45 = a3[12];
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  uint64_t v48 = *(void *)(a2 + v45 + 8);
  *(void *)uint64_t v46 = *(void *)(a2 + v45);
  *(void *)(v46 + 8) = v48;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v46 + 16) = *(unsigned char *)(v47 + 16);
  uint64_t v49 = a3[13];
  uint64_t v50 = (void *)(a1 + v49);
  uint64_t v51 = (uint64_t *)(a2 + v49);
  uint64_t v53 = *v51;
  uint64_t v52 = v51[1];
  *uint64_t v50 = v53;
  v50[1] = v52;
  swift_bridgeObjectRelease();
  uint64_t v54 = a3[14];
  uint64_t v55 = a1 + v54;
  uint64_t v56 = a2 + v54;
  uint64_t v57 = *(void *)(a2 + v54 + 8);
  *(void *)uint64_t v55 = *(void *)(a2 + v54);
  *(void *)(v55 + 8) = v57;
  swift_bridgeObjectRelease();
  *(void *)(v55 + 16) = *(void *)(v56 + 16);
  *(unsigned char *)(v55 + 24) = *(unsigned char *)(v56 + 24);
  uint64_t v58 = a3[15];
  uint64_t v59 = a1 + v58;
  uint64_t v60 = a2 + v58;
  uint64_t v61 = *(void *)(a2 + v58 + 8);
  *(void *)uint64_t v59 = *(void *)(a2 + v58);
  *(void *)(v59 + 8) = v61;
  swift_bridgeObjectRelease();
  uint64_t v62 = a3[16];
  uint64_t v63 = a3[17];
  __int16 v64 = *(_WORD *)(a2 + v62);
  *(_WORD *)(v59 + 16) = *(_WORD *)(v60 + 16);
  *(_WORD *)(a1 + v62) = v64;
  uint64_t v65 = a1 + v63;
  uint64_t v66 = a2 + v63;
  *(unsigned char *)uint64_t v65 = *(unsigned char *)(a2 + v63);
  uint64_t v67 = *(void *)(a2 + v63 + 16);
  *(void *)(v65 + 8) = *(void *)(a2 + v63 + 8);
  *(void *)(v65 + 16) = v67;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v65 + 24) = *(unsigned char *)(v66 + 24);
  *(unsigned char *)(v65 + 25) = *(unsigned char *)(v66 + 25);
  uint64_t v68 = *(void *)(v66 + 40);
  *(void *)(v65 + 32) = *(void *)(v66 + 32);
  *(void *)(v65 + 40) = v68;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v65 + 48) = *(unsigned char *)(v66 + 48);
  uint64_t v69 = a3[18];
  uint64_t v70 = a1 + v69;
  uint64_t v71 = a2 + v69;
  if (!*(void *)(a1 + v69 + 8))
  {
LABEL_30:
    long long v74 = *(_OWORD *)(v71 + 48);
    *(_OWORD *)(v70 + 32) = *(_OWORD *)(v71 + 32);
    *(_OWORD *)(v70 + 48) = v74;
    *(_OWORD *)(v70 + 64) = *(_OWORD *)(v71 + 64);
    long long v75 = *(_OWORD *)(v71 + 16);
    *(_OWORD *)uint64_t v70 = *(_OWORD *)v71;
    *(_OWORD *)(v70 + 16) = v75;
    return a1;
  }
  uint64_t v72 = *(void *)(v71 + 8);
  if (!v72)
  {
    sub_1DE0E8260(v70);
    goto LABEL_30;
  }
  *(void *)uint64_t v70 = *(void *)v71;
  *(void *)(v70 + 8) = v72;
  swift_bridgeObjectRelease();
  uint64_t v73 = *(void *)(v71 + 24);
  *(void *)(v70 + 16) = *(void *)(v71 + 16);
  *(void *)(v70 + 24) = v73;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v70 + 32) = *(_DWORD *)(v71 + 32);
  *(void *)(v70 + 40) = *(void *)(v71 + 40);
  *(unsigned char *)(v70 + 48) = *(unsigned char *)(v71 + 48);
  *(void *)(v70 + 56) = *(void *)(v71 + 56);
  *(unsigned char *)(v70 + 64) = *(unsigned char *)(v71 + 64);
  *(unsigned char *)(v70 + 65) = *(unsigned char *)(v71 + 65);
  *(void *)(v70 + 72) = *(void *)(v71 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscribeButtonExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE0E8A58);
}

uint64_t sub_1DE0E8A58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DE47F330();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1DE47F350();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 48) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for SubscribeButtonExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE0E8B84);
}

uint64_t sub_1DE0E8B84(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1DE47F330();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_1DE47F350();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 48) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_1DE0E8C98()
{
  uint64_t result = sub_1DE47F330();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1DE47F350();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SubscribeButtonExposureEvent.Model.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF2) {
    goto LABEL_17;
  }
  if (a2 + 14 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 14) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 14;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xF;
  int v8 = v6 - 15;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SubscribeButtonExposureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *uint64_t result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE0E8F3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 14;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscribeButtonExposureEvent.Model.CodingKeys()
{
  return &type metadata for SubscribeButtonExposureEvent.Model.CodingKeys;
}

unint64_t sub_1DE0E8F78()
{
  unint64_t result = qword_1EABA2830;
  if (!qword_1EABA2830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2830);
  }
  return result;
}

unint64_t sub_1DE0E8FD0()
{
  unint64_t result = qword_1EABA2838;
  if (!qword_1EABA2838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2838);
  }
  return result;
}

unint64_t sub_1DE0E9028()
{
  unint64_t result = qword_1EABA2840;
  if (!qword_1EABA2840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2840);
  }
  return result;
}

uint64_t sub_1DE0E907C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x446C6C6177796170 && a2 == 0xEB00000000617461 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6573616863727570 && a2 == 0xEC00000061746144 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DE4BEBC0 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x446E6F6974636573 && a2 == 0xEB00000000617461 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001DE4BEBE0 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001DE4BDDA0 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x6144656C7A7A7570 && a2 == 0xEA00000000006174)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else
  {
    char v6 = sub_1DE480660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 14;
    }
    else {
      return 15;
    }
  }
}

uint64_t static RecentSearchListData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t RecentSearchListData.recentSearch.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RecentSearchListData.recentSearch.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v1 = a1;
  return result;
}

uint64_t (*RecentSearchListData.recentSearch.modify())()
{
  return nullsub_1;
}

NewsAnalytics::RecentSearchListData __swiftcall RecentSearchListData.init(recentSearch:)(NewsAnalytics::RecentSearchListData recentSearch)
{
  v1->recentSearch._rawValue = recentSearch.recentSearch._rawValue;
  return recentSearch;
}

uint64_t sub_1DE0E9748()
{
  return 0x6553746E65636572;
}

uint64_t sub_1DE0E9768@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6553746E65636572 && a2 == 0xEC00000068637261)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1DE480660();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DE0E9818(uint64_t a1)
{
  unint64_t v2 = sub_1DE0E9A24();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE0E9854(uint64_t a1)
{
  unint64_t v2 = sub_1DE0E9A24();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t RecentSearchListData.encode(to:)(void *a1)
{
  sub_1DE0E9CF4(0, &qword_1EABA2848, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v7 = (char *)v10 - v6;
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0E9A24();
  sub_1DE480790();
  v10[1] = v8;
  sub_1DE0E9A78();
  sub_1DE0E9D58(&qword_1EABA2860, (void (*)(void))sub_1DE0E9AD0);
  sub_1DE4805C0();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DE0E9A24()
{
  unint64_t result = qword_1EABA2850;
  if (!qword_1EABA2850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2850);
  }
  return result;
}

void sub_1DE0E9A78()
{
  if (!qword_1EABA2858)
  {
    unint64_t v0 = sub_1DE480060();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EABA2858);
    }
  }
}

unint64_t sub_1DE0E9AD0()
{
  unint64_t result = qword_1EBEC2358;
  if (!qword_1EBEC2358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC2358);
  }
  return result;
}

uint64_t RecentSearchListData.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1DE0E9CF4(0, &qword_1EABA2868, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0E9A24();
  sub_1DE480770();
  if (!v2)
  {
    sub_1DE0E9A78();
    sub_1DE0E9D58(&qword_1EABA2870, (void (*)(void))sub_1DE0E9DC4);
    sub_1DE4804E0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DE0E9CF4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE0E9A24();
    unint64_t v7 = a3(a1, &type metadata for RecentSearchListData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DE0E9D58(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DE0E9A78();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DE0E9DC4()
{
  unint64_t result = qword_1EBEC2360;
  if (!qword_1EBEC2360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC2360);
  }
  return result;
}

unint64_t sub_1DE0E9E1C()
{
  unint64_t result = qword_1EABA2878;
  if (!qword_1EABA2878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2878);
  }
  return result;
}

unint64_t sub_1DE0E9E74()
{
  unint64_t result = qword_1EABA2880;
  if (!qword_1EABA2880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2880);
  }
  return result;
}

uint64_t sub_1DE0E9EC8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return RecentSearchListData.init(from:)(a1, a2);
}

uint64_t sub_1DE0E9EE0(void *a1)
{
  return RecentSearchListData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for RecentSearchListData()
{
  return &type metadata for RecentSearchListData;
}

unsigned char *storeEnumTagSinglePayload for RecentSearchListData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DE0E9FA4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RecentSearchListData.CodingKeys()
{
  return &type metadata for RecentSearchListData.CodingKeys;
}

unint64_t sub_1DE0E9FE0()
{
  unint64_t result = qword_1EABA2888;
  if (!qword_1EABA2888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2888);
  }
  return result;
}

unint64_t sub_1DE0EA038()
{
  unint64_t result = qword_1EABA2890;
  if (!qword_1EABA2890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2890);
  }
  return result;
}

unint64_t sub_1DE0EA090()
{
  unint64_t result = qword_1EABA2898;
  if (!qword_1EABA2898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2898);
  }
  return result;
}

NewsAnalytics::GalleryType_optional __swiftcall GalleryType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1DE480420();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t GalleryType.rawValue.getter()
{
  uint64_t v1 = 0x636961736F6DLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x7069727473;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_1DE0EA194(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DE3DB5F0(*a1, *a2);
}

unint64_t sub_1DE0EA1A4()
{
  unint64_t result = qword_1EABA28A0;
  if (!qword_1EABA28A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA28A0);
  }
  return result;
}

uint64_t sub_1DE0EA1F8()
{
  return sub_1DE480750();
}

uint64_t sub_1DE0EA294()
{
  sub_1DE47FF00();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DE0EA31C()
{
  return sub_1DE480750();
}

NewsAnalytics::GalleryType_optional sub_1DE0EA3B4(Swift::String *a1)
{
  return GalleryType.init(rawValue:)(*a1);
}

void sub_1DE0EA3C0(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE600000000000000;
  uint64_t v5 = 0x636961736F6DLL;
  if (v2 != 1)
  {
    uint64_t v5 = 0x7069727473;
    unint64_t v4 = 0xE500000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1DE0EA418()
{
  return sub_1DE47FFF0();
}

uint64_t sub_1DE0EA478()
{
  return sub_1DE47FFE0();
}

unsigned char *storeEnumTagSinglePayload for GalleryType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE0EA594);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GalleryType()
{
  return &type metadata for GalleryType;
}

unint64_t sub_1DE0EA5CC()
{
  unint64_t result = qword_1EBEC7E60;
  if (!qword_1EBEC7E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC7E60);
  }
  return result;
}

uint64_t sub_1DE0EA620(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4A9C8], qword_1EABA28A8, MEMORY[0x1E4F4A9C0]);
}

uint64_t static AppleIdSignInEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0A88, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EABA28A8, a1);
}

uint64_t static AppleIdSignInEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_1DE0EA688(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4AAB0], qword_1EABA28C0, MEMORY[0x1E4F4AAA0]);
}

uint64_t static AppleIdSignInEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0A90, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EABA28C0, a1);
}

uint64_t sub_1DE0EA6E8()
{
  uint64_t v0 = sub_1DE47F020();
  __swift_allocate_value_buffer(v0, qword_1EABA28D8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EABA28D8);
  return sub_1DE47F010();
}

uint64_t static AppleIdSignInEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0A98, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA28D8, a1);
}

uint64_t AppleIdSignInEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084((uint64_t (*)(void))sub_1DE04D618, a1);
}

uint64_t AppleIdSignInEvent.eventData.setter(uint64_t a1)
{
  sub_1DE04D618();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*AppleIdSignInEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AppleIdSignInEvent.resultData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppleIdSignInEvent(0) + 20);
  sub_1DE0EB024(0, &qword_1EBEC1E08, (void (*)(void))sub_1DE0EA8DC, (void (*)(void))sub_1DE0EA930);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AppleIdSignInEvent(uint64_t a1)
{
  return sub_1DE04E1D0(a1, (uint64_t *)&unk_1EABA2908);
}

unint64_t sub_1DE0EA8DC()
{
  unint64_t result = qword_1EBEC2350;
  if (!qword_1EBEC2350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC2350);
  }
  return result;
}

unint64_t sub_1DE0EA930()
{
  unint64_t result = qword_1EBEC2348;
  if (!qword_1EBEC2348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC2348);
  }
  return result;
}

uint64_t AppleIdSignInEvent.resultData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppleIdSignInEvent(0) + 20);
  sub_1DE0EB024(0, &qword_1EBEC1E08, (void (*)(void))sub_1DE0EA8DC, (void (*)(void))sub_1DE0EA930);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AppleIdSignInEvent.resultData.modify())()
{
  return nullsub_1;
}

uint64_t AppleIdSignInEvent.paywallData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppleIdSignInEvent(0) + 24);
  sub_1DE0EB024(0, &qword_1EBEC1E30, (void (*)(void))sub_1DE0DE9C8, (void (*)(void))sub_1DE0DEA1C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AppleIdSignInEvent.paywallData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppleIdSignInEvent(0) + 24);
  sub_1DE0EB024(0, &qword_1EBEC1E30, (void (*)(void))sub_1DE0DE9C8, (void (*)(void))sub_1DE0DEA1C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AppleIdSignInEvent.paywallData.modify())()
{
  return nullsub_1;
}

uint64_t AppleIdSignInEvent.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppleIdSignInEvent(0) + 28);
  sub_1DE0EB024(0, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AppleIdSignInEvent.purchaseData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppleIdSignInEvent(0) + 28);
  sub_1DE0EB024(0, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AppleIdSignInEvent.purchaseData.modify())()
{
  return nullsub_1;
}

uint64_t AppleIdSignInEvent.purchaseSessionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppleIdSignInEvent(0) + 32);
  sub_1DE0EB024(0, &qword_1EBEC1F38, (void (*)(void))sub_1DE0DEF68, (void (*)(void))sub_1DE0DEFBC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AppleIdSignInEvent.purchaseSessionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppleIdSignInEvent(0) + 32);
  sub_1DE0EB024(0, &qword_1EBEC1F38, (void (*)(void))sub_1DE0DEF68, (void (*)(void))sub_1DE0DEFBC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AppleIdSignInEvent.purchaseSessionData.modify())()
{
  return nullsub_1;
}

uint64_t AppleIdSignInEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppleIdSignInEvent(0) + 36);
  sub_1DE0EB024(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_1DE0EB024(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_1DE47ECA0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t AppleIdSignInEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppleIdSignInEvent(0) + 36);
  sub_1DE0EB024(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AppleIdSignInEvent.userBundleSubscriptionContextData.modify())()
{
  return nullsub_1;
}

uint64_t AppleIdSignInEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for AppleIdSignInEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_1DE0EB024(0, &qword_1EBEC1E08, (void (*)(void))sub_1DE0EA8DC, (void (*)(void))sub_1DE0EA930);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = *MEMORY[0x1E4F4A9F8];
  sub_1DE0EB024(0, &qword_1EBEC1E30, (void (*)(void))sub_1DE0DE9C8, (void (*)(void))sub_1DE0DEA1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  uint64_t v10 = a1 + v4[7];
  sub_1DE0EB024(0, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v8, v11);
  uint64_t v12 = a1 + v4[8];
  sub_1DE0EB024(0, &qword_1EBEC1F38, (void (*)(void))sub_1DE0DEF68, (void (*)(void))sub_1DE0DEFBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v8, v13);
  uint64_t v14 = a1 + v4[9];
  sub_1DE0EB024(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  long long v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104);

  return v16(v14, v2, v15);
}

uint64_t AppleIdSignInEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084(MEMORY[0x1E4F4AB70], a1);
}

uint64_t AppleIdSignInEvent.Model.resultData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for AppleIdSignInEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for AppleIdSignInEvent.Model(uint64_t a1)
{
  return sub_1DE04E1D0(a1, (uint64_t *)&unk_1EABA2918);
}

uint64_t AppleIdSignInEvent.Model.paywallData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for AppleIdSignInEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t AppleIdSignInEvent.Model.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AppleIdSignInEvent.Model(0) + 28));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOBYTE(v3) = *((unsigned char *)v3 + 16);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = (_BYTE)v3;

  return swift_bridgeObjectRetain();
}

uint64_t AppleIdSignInEvent.Model.purchaseSessionData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for AppleIdSignInEvent.Model(0) + 32));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t AppleIdSignInEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (char *)(v1 + *(int *)(type metadata accessor for AppleIdSignInEvent.Model(0) + 36));
  char v4 = *v3;
  uint64_t v5 = *((void *)v3 + 1);
  uint64_t v6 = *((void *)v3 + 2);
  char v7 = v3[24];
  char v8 = v3[25];
  uint64_t v10 = *((void *)v3 + 4);
  uint64_t v9 = *((void *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(unsigned char *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 25) = v8;
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

int *AppleIdSignInEvent.Model.init(eventData:resultData:paywallData:purchaseData:purchaseSessionData:userBundleSubscriptionContextData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, __int16 *a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, char *a6@<X5>, uint64_t a7@<X8>)
{
  char v9 = *a2;
  __int16 v10 = *a3;
  uint64_t v11 = *a4;
  uint64_t v12 = a4[1];
  char v13 = *((unsigned char *)a4 + 16);
  uint64_t v14 = *a5;
  uint64_t v15 = a5[1];
  char v16 = *a6;
  uint64_t v27 = *((void *)a6 + 2);
  uint64_t v28 = *((void *)a6 + 1);
  char v25 = a6[25];
  char v26 = a6[24];
  uint64_t v23 = *((void *)a6 + 5);
  uint64_t v24 = *((void *)a6 + 4);
  char v22 = a6[48];
  uint64_t v17 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(a7, a1, v17);
  uint64_t result = (int *)type metadata accessor for AppleIdSignInEvent.Model(0);
  *(unsigned char *)(a7 + result[5]) = v9;
  *(_WORD *)(a7 + result[6]) = v10;
  uint64_t v19 = a7 + result[7];
  *(void *)uint64_t v19 = v11;
  *(void *)(v19 + 8) = v12;
  *(unsigned char *)(v19 + 16) = v13;
  uint64_t v20 = (void *)(a7 + result[8]);
  *uint64_t v20 = v14;
  v20[1] = v15;
  uint64_t v21 = a7 + result[9];
  *(unsigned char *)uint64_t v21 = v16;
  *(void *)(v21 + 8) = v28;
  *(void *)(v21 + 16) = v27;
  *(unsigned char *)(v21 + 24) = v26;
  *(unsigned char *)(v21 + 25) = v25;
  *(void *)(v21 + 32) = v24;
  *(void *)(v21 + 40) = v23;
  *(unsigned char *)(v21 + 48) = v22;
  return result;
}

unint64_t sub_1DE0EB78C(char a1)
{
  unint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6144746C75736572;
      break;
    case 2:
      unint64_t result = 0x446C6C6177796170;
      break;
    case 3:
      unint64_t result = 0x6573616863727570;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0xD000000000000021;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DE0EB87C()
{
  return sub_1DE0EB78C(*v0);
}

uint64_t sub_1DE0EB884@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE0EECD4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE0EB8AC(uint64_t a1)
{
  unint64_t v2 = sub_1DE0EBC3C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE0EB8E8(uint64_t a1)
{
  unint64_t v2 = sub_1DE0EBC3C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AppleIdSignInEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1DE0EC194(0, &qword_1EABA28F0, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v9 = &v18[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0EBC3C();
  sub_1DE480790();
  v18[0] = 0;
  sub_1DE47F330();
  sub_1DE07291C(&qword_1EBEC2030);
  sub_1DE4805C0();
  if (!v2)
  {
    __int16 v10 = (int *)type metadata accessor for AppleIdSignInEvent.Model(0);
    v18[0] = *(unsigned char *)(v3 + v10[5]);
    char v23 = 1;
    sub_1DE0EA930();
    sub_1DE4805C0();
    *(_WORD *)long long v18 = *(_WORD *)(v3 + v10[6]);
    char v23 = 2;
    sub_1DE0DEA1C();
    sub_1DE480550();
    uint64_t v11 = v3 + v10[7];
    char v12 = *(unsigned char *)(v11 + 16);
    *(_OWORD *)long long v18 = *(_OWORD *)v11;
    v18[16] = v12;
    char v23 = 3;
    sub_1DE0A802C();
    sub_1DE480550();
    *(_OWORD *)long long v18 = *(_OWORD *)(v3 + v10[8]);
    char v23 = 4;
    sub_1DE0DEFBC();
    sub_1DE480550();
    uint64_t v13 = v3 + v10[9];
    char v14 = *(unsigned char *)(v13 + 24);
    char v15 = *(unsigned char *)(v13 + 25);
    char v16 = *(unsigned char *)(v13 + 48);
    v18[0] = *(unsigned char *)v13;
    *(_OWORD *)&v18[8] = *(_OWORD *)(v13 + 8);
    char v19 = v14;
    char v20 = v15;
    long long v21 = *(_OWORD *)(v13 + 32);
    char v22 = v16;
    char v23 = 5;
    sub_1DE04DD5C();
    sub_1DE4805C0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DE0EBC3C()
{
  unint64_t result = qword_1EABA28F8;
  if (!qword_1EABA28F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA28F8);
  }
  return result;
}

uint64_t AppleIdSignInEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v4 = sub_1DE47F330();
  uint64_t v27 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v28 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE0EC194(0, &qword_1EABA2900, MEMORY[0x1E4FBBDC0]);
  uint64_t v30 = v6;
  uint64_t v26 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v23 - v7;
  char v9 = (int *)type metadata accessor for AppleIdSignInEvent.Model(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0EBC3C();
  uint64_t v29 = v8;
  sub_1DE480770();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v24 = a1;
  uint64_t v12 = (uint64_t)v11;
  uint64_t v14 = v26;
  uint64_t v13 = v27;
  v31[0] = 0;
  sub_1DE07291C(&qword_1EBEC2038);
  char v15 = v28;
  sub_1DE4804E0();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v15, v4);
  char v36 = 1;
  sub_1DE0EA8DC();
  sub_1DE4804E0();
  *(unsigned char *)(v12 + v9[5]) = v31[0];
  char v36 = 2;
  sub_1DE0DE9C8();
  sub_1DE480470();
  *(_WORD *)(v12 + v9[6]) = *(_WORD *)v31;
  char v36 = 3;
  sub_1DE0A7FD8();
  sub_1DE480470();
  char v16 = v31[16];
  uint64_t v17 = v12 + v9[7];
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v31;
  *(unsigned char *)(v17 + 16) = v16;
  char v36 = 4;
  sub_1DE0DEF68();
  sub_1DE480470();
  *(_OWORD *)(v12 + v9[8]) = *(_OWORD *)v31;
  char v36 = 5;
  sub_1DE04DD08();
  sub_1DE4804E0();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v29, v30);
  char v18 = v32;
  char v19 = v33;
  char v20 = v35;
  uint64_t v21 = v12 + v9[9];
  *(unsigned char *)uint64_t v21 = v31[0];
  *(_OWORD *)(v21 + 8) = *(_OWORD *)&v31[8];
  *(unsigned char *)(v21 + 24) = v18;
  *(unsigned char *)(v21 + 25) = v19;
  *(_OWORD *)(v21 + 32) = v34;
  *(unsigned char *)(v21 + 48) = v20;
  sub_1DE0EC1F8(v12, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return sub_1DE0EC25C(v12);
}

void sub_1DE0EC194(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE0EBC3C();
    unint64_t v7 = a3(a1, &type metadata for AppleIdSignInEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DE0EC1F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppleIdSignInEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DE0EC25C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AppleIdSignInEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DE0EC2B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AppleIdSignInEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DE0EC2D0(void *a1)
{
  return AppleIdSignInEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DE0EC2E8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0A88, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EABA28A8, a1);
}

uint64_t sub_1DE0EC320@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0A90, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EABA28C0, a1);
}

uint64_t sub_1DE0EC358@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0A98, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA28D8, a1);
}

uint64_t sub_1DE0EC390@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_1DE0EB024(0, &qword_1EBEC1E08, (void (*)(void))sub_1DE0EA8DC, (void (*)(void))sub_1DE0EA930);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = *MEMORY[0x1E4F4A9F8];
  sub_1DE0EB024(0, &qword_1EBEC1E30, (void (*)(void))sub_1DE0DE9C8, (void (*)(void))sub_1DE0DEA1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v8, v9, v10);
  uint64_t v11 = a2 + a1[7];
  sub_1DE0EB024(0, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v9, v12);
  uint64_t v13 = a2 + a1[8];
  sub_1DE0EB024(0, &qword_1EBEC1F38, (void (*)(void))sub_1DE0DEF68, (void (*)(void))sub_1DE0DEFBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v9, v14);
  uint64_t v15 = a2 + a1[9];
  sub_1DE0EB024(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104);

  return v17(v15, v4, v16);
}

uint64_t *initializeBufferWithCopyOfBuffer for AppleIdSignInEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DE04D618();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DE0EB024(0, &qword_1EBEC1E08, (void (*)(void))sub_1DE0EA8DC, (void (*)(void))sub_1DE0EA930);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_1DE0EB024(0, &qword_1EBEC1E30, (void (*)(void))sub_1DE0DE9C8, (void (*)(void))sub_1DE0DEA1C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    char v18 = (char *)a2 + v16;
    sub_1DE0EB024(0, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    char v22 = (char *)a2 + v20;
    sub_1DE0EB024(0, &qword_1EBEC1F38, (void (*)(void))sub_1DE0DEF68, (void (*)(void))sub_1DE0DEFBC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_1DE0EB024(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for AppleIdSignInEvent(uint64_t a1, int *a2)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_1DE0EB024(0, &qword_1EBEC1E08, (void (*)(void))sub_1DE0EA8DC, (void (*)(void))sub_1DE0EA930);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_1DE0EB024(0, &qword_1EBEC1E30, (void (*)(void))sub_1DE0DE9C8, (void (*)(void))sub_1DE0DEA1C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_1DE0EB024(0, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_1DE0EB024(0, &qword_1EBEC1F38, (void (*)(void))sub_1DE0DEF68, (void (*)(void))sub_1DE0DEFBC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_1DE0EB024(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);

  return v15(v13, v14);
}

uint64_t initializeWithCopy for AppleIdSignInEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE0EB024(0, &qword_1EBEC1E08, (void (*)(void))sub_1DE0EA8DC, (void (*)(void))sub_1DE0EA930);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0EB024(0, &qword_1EBEC1E30, (void (*)(void))sub_1DE0DE9C8, (void (*)(void))sub_1DE0DEA1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0EB024(0, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0EB024(0, &qword_1EBEC1F38, (void (*)(void))sub_1DE0DEF68, (void (*)(void))sub_1DE0DEFBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE0EB024(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for AppleIdSignInEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE0EB024(0, &qword_1EBEC1E08, (void (*)(void))sub_1DE0EA8DC, (void (*)(void))sub_1DE0EA930);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0EB024(0, &qword_1EBEC1E30, (void (*)(void))sub_1DE0DE9C8, (void (*)(void))sub_1DE0DEA1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0EB024(0, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0EB024(0, &qword_1EBEC1F38, (void (*)(void))sub_1DE0DEF68, (void (*)(void))sub_1DE0DEFBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE0EB024(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for AppleIdSignInEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE0EB024(0, &qword_1EBEC1E08, (void (*)(void))sub_1DE0EA8DC, (void (*)(void))sub_1DE0EA930);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0EB024(0, &qword_1EBEC1E30, (void (*)(void))sub_1DE0DE9C8, (void (*)(void))sub_1DE0DEA1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0EB024(0, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0EB024(0, &qword_1EBEC1F38, (void (*)(void))sub_1DE0DEF68, (void (*)(void))sub_1DE0DEFBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE0EB024(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for AppleIdSignInEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE0EB024(0, &qword_1EBEC1E08, (void (*)(void))sub_1DE0EA8DC, (void (*)(void))sub_1DE0EA930);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0EB024(0, &qword_1EBEC1E30, (void (*)(void))sub_1DE0DE9C8, (void (*)(void))sub_1DE0DEA1C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0EB024(0, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0EB024(0, &qword_1EBEC1F38, (void (*)(void))sub_1DE0DEF68, (void (*)(void))sub_1DE0DEFBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE0EB024(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppleIdSignInEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE0ED894);
}

uint64_t sub_1DE0ED894(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  sub_1DE0EB024(0, &qword_1EBEC1E08, (void (*)(void))sub_1DE0EA8DC, (void (*)(void))sub_1DE0EA930);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_11:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_12;
  }
  sub_1DE0EB024(0, &qword_1EBEC1E30, (void (*)(void))sub_1DE0DE9C8, (void (*)(void))sub_1DE0DEA1C);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_11;
  }
  sub_1DE0EB024(0, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_11;
  }
  sub_1DE0EB024(0, &qword_1EBEC1F38, (void (*)(void))sub_1DE0DEF68, (void (*)(void))sub_1DE0DEFBC);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_11;
  }
  sub_1DE0EB024(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a3[9];

  return v19(v21, a2, v20);
}

uint64_t storeEnumTagSinglePayload for AppleIdSignInEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE0EDBF0);
}

uint64_t sub_1DE0EDBF0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_1DE04D618();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_12:
    return v11(v12, a2, a2, v10);
  }
  sub_1DE0EB024(0, &qword_1EBEC1E08, (void (*)(void))sub_1DE0EA8DC, (void (*)(void))sub_1DE0EA930);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_11:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_12;
  }
  sub_1DE0EB024(0, &qword_1EBEC1E30, (void (*)(void))sub_1DE0DE9C8, (void (*)(void))sub_1DE0DEA1C);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_11;
  }
  sub_1DE0EB024(0, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_11;
  }
  sub_1DE0EB024(0, &qword_1EBEC1F38, (void (*)(void))sub_1DE0DEF68, (void (*)(void))sub_1DE0DEFBC);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_11;
  }
  sub_1DE0EB024(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  uint64_t v22 = v20;
  uint64_t v23 = a1 + a4[9];

  return v21(v23, a2, a2, v22);
}

void sub_1DE0EDF44()
{
  sub_1DE04D618();
  if (v0 <= 0x3F)
  {
    sub_1DE0EB024(319, &qword_1EBEC1E08, (void (*)(void))sub_1DE0EA8DC, (void (*)(void))sub_1DE0EA930);
    if (v1 <= 0x3F)
    {
      sub_1DE0EB024(319, &qword_1EBEC1E30, (void (*)(void))sub_1DE0DE9C8, (void (*)(void))sub_1DE0DEA1C);
      if (v2 <= 0x3F)
      {
        sub_1DE0EB024(319, &qword_1EBEC1E70, (void (*)(void))sub_1DE0A7FD8, (void (*)(void))sub_1DE0A802C);
        if (v3 <= 0x3F)
        {
          sub_1DE0EB024(319, &qword_1EBEC1F38, (void (*)(void))sub_1DE0DEF68, (void (*)(void))sub_1DE0DEFBC);
          if (v4 <= 0x3F)
          {
            sub_1DE0EB024(319, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for AppleIdSignInEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (void *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DE47F330();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    *(_WORD *)((char *)a1 + v8) = *(_WORD *)((char *)a2 + v8);
    uint64_t v9 = a3[7];
    uint64_t v10 = a3[8];
    uint64_t v11 = (char *)a1 + v9;
    uint64_t v12 = (char *)a2 + v9;
    uint64_t v13 = *((void *)v12 + 1);
    *(void *)uint64_t v11 = *(void *)v12;
    *((void *)v11 + 1) = v13;
    v11[16] = v12[16];
    uint64_t v14 = (void *)((char *)a1 + v10);
    uint64_t v15 = (void *)((char *)a2 + v10);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = a3[9];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    *uint64_t v18 = *v19;
    uint64_t v20 = *((void *)v19 + 2);
    *((void *)v18 + 1) = *((void *)v19 + 1);
    *((void *)v18 + 2) = v20;
    unsigned char v18[24] = v19[24];
    v18[25] = v19[25];
    uint64_t v21 = *((void *)v19 + 5);
    *((void *)v18 + 4) = *((void *)v19 + 4);
    *((void *)v18 + 5) = v21;
    v18[48] = v19[48];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AppleIdSignInEvent.Model(uint64_t a1)
{
  uint64_t v2 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AppleIdSignInEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(_WORD *)(a1 + v7) = *(_WORD *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a3[8];
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  uint64_t v12 = *(void *)(v11 + 8);
  *(void *)uint64_t v10 = *(void *)v11;
  *(void *)(v10 + 8) = v12;
  *(unsigned char *)(v10 + 16) = *(unsigned char *)(v11 + 16);
  uint64_t v13 = (void *)(a1 + v9);
  uint64_t v14 = (void *)(a2 + v9);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = a3[9];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
  uint64_t v19 = *(void *)(v18 + 16);
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  *(void *)(v17 + 16) = v19;
  *(unsigned char *)(v17 + 24) = *(unsigned char *)(v18 + 24);
  *(unsigned char *)(v17 + 25) = *(unsigned char *)(v18 + 25);
  uint64_t v20 = *(void *)(v18 + 40);
  *(void *)(v17 + 32) = *(void *)(v18 + 32);
  *(void *)(v17 + 40) = v20;
  *(unsigned char *)(v17 + 48) = *(unsigned char *)(v18 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AppleIdSignInEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(_WORD *)(a1 + a3[6]) = *(_WORD *)(a2 + a3[6]);
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  uint64_t v10 = a3[8];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[9];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(unsigned char *)uint64_t v14 = *(unsigned char *)(a2 + v13);
  *(void *)(v14 + 8) = *(void *)(a2 + v13 + 8);
  *(void *)(v14 + 16) = *(void *)(a2 + v13 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v14 + 24) = *(unsigned char *)(v15 + 24);
  *(unsigned char *)(v14 + 25) = *(unsigned char *)(v15 + 25);
  *(void *)(v14 + 32) = *(void *)(v15 + 32);
  *(void *)(v14 + 40) = *(void *)(v15 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v14 + 48) = *(unsigned char *)(v15 + 48);
  return a1;
}

uint64_t initializeWithTake for AppleIdSignInEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(_WORD *)(a1 + v7) = *(_WORD *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a3[8];
  uint64_t v10 = a1 + v8;
  uint64_t v11 = (long long *)(a2 + v8);
  long long v12 = *v11;
  *(unsigned char *)(v10 + 16) = *((unsigned char *)v11 + 16);
  *(_OWORD *)uint64_t v10 = v12;
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  uint64_t v13 = a3[9];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = (long long *)(a2 + v13);
  *(unsigned char *)(v14 + 48) = *((unsigned char *)v15 + 48);
  long long v16 = v15[2];
  long long v17 = *v15;
  *(_OWORD *)(v14 + 16) = v15[1];
  *(_OWORD *)(v14 + 32) = v16;
  *(_OWORD *)uint64_t v14 = v17;
  return a1;
}

uint64_t assignWithTake for AppleIdSignInEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(_WORD *)(a1 + v7) = *(_WORD *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = *(void *)(a2 + v8 + 8);
  *(void *)uint64_t v9 = *(void *)(a2 + v8);
  *(void *)(v9 + 8) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  uint64_t v12 = a3[8];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[9];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
  uint64_t v20 = *(void *)(v19 + 16);
  *(void *)(v18 + 8) = *(void *)(v19 + 8);
  *(void *)(v18 + 16) = v20;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v18 + 24) = *(unsigned char *)(v19 + 24);
  *(unsigned char *)(v18 + 25) = *(unsigned char *)(v19 + 25);
  uint64_t v21 = *(void *)(v19 + 40);
  *(void *)(v18 + 32) = *(void *)(v19 + 32);
  *(void *)(v18 + 40) = v21;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v18 + 48) = *(unsigned char *)(v19 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppleIdSignInEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE0EE868);
}

uint64_t sub_1DE0EE868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DE47F330();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for AppleIdSignInEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE0EE94C);
}

uint64_t sub_1DE0EE94C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1DE47F330();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28) + 8) = a2;
  }
  return result;
}

uint64_t sub_1DE0EEA0C()
{
  uint64_t result = sub_1DE47F330();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AppleIdSignInEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE0EEB94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleIdSignInEvent.Model.CodingKeys()
{
  return &type metadata for AppleIdSignInEvent.Model.CodingKeys;
}

unint64_t sub_1DE0EEBD0()
{
  unint64_t result = qword_1EABA2928;
  if (!qword_1EABA2928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2928);
  }
  return result;
}

unint64_t sub_1DE0EEC28()
{
  unint64_t result = qword_1EABA2930;
  if (!qword_1EABA2930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2930);
  }
  return result;
}

unint64_t sub_1DE0EEC80()
{
  unint64_t result = qword_1EABA2938;
  if (!qword_1EABA2938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2938);
  }
  return result;
}

uint64_t sub_1DE0EECD4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6144746C75736572 && a2 == 0xEA00000000006174 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x446C6C6177796170 && a2 == 0xEB00000000617461 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6573616863727570 && a2 == 0xEC00000061746144 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DE4BEBC0 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001DE4BDDA0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1DE480660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

id FCBundleSubscriptionManagerType.bundleContainsChannel(_:)(void *a1)
{
  id v3 = objc_msgSend(v1, sel_cachedSubscription);
  id v4 = objc_msgSend(a1, sel_identifier);
  if (!v4)
  {
    sub_1DE47FE90();
    id v4 = (id)sub_1DE47FE60();
    swift_bridgeObjectRelease();
  }
  id v5 = objc_msgSend(v3, sel_containsTagID_, v4);

  return v5;
}

uint64_t sub_1DE0EF034(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4A9C8], qword_1EABA2940, MEMORY[0x1E4F4A9C0]);
}

uint64_t static ListenSheetEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0AA0, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EABA2940, a1);
}

uint64_t static ListenSheetEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_1DE0EF09C(uint64_t a1)
{
  return sub_1DE04D418(a1, MEMORY[0x1E4F4AAB0], qword_1EABA2958, MEMORY[0x1E4F4AAA0]);
}

uint64_t static ListenSheetEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0AA8, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EABA2958, a1);
}

uint64_t sub_1DE0EF0FC()
{
  uint64_t v0 = sub_1DE47F020();
  __swift_allocate_value_buffer(v0, qword_1EABA2970);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EABA2970);
  return sub_1DE47F010();
}

uint64_t static ListenSheetEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04D560(&qword_1EABA0AB0, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA2970, a1);
}

uint64_t ListenSheetEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084((uint64_t (*)(void))sub_1DE04D618, a1);
}

uint64_t ListenSheetEvent.eventData.setter(uint64_t a1)
{
  sub_1DE04D618();
  id v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*ListenSheetEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ListenSheetEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE0F0694(type metadata accessor for ListenSheetEvent, (uint64_t (*)(void))sub_1DE04D7B8, a1);
}

uint64_t type metadata accessor for ListenSheetEvent(uint64_t a1)
{
  return sub_1DE04E1D0(a1, (uint64_t *)&unk_1EABA29B8);
}

uint64_t ListenSheetEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent(0) + 20);
  sub_1DE04D7B8();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ListenSheetEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t ListenSheetEvent.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent(0) + 24);
  sub_1DE0EFF74(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ListenSheetEvent.articleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent(0) + 24);
  sub_1DE0EFF74(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ListenSheetEvent.articleData.modify())()
{
  return nullsub_1;
}

uint64_t ListenSheetEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent(0) + 28);
  sub_1DE0EFF74(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ListenSheetEvent.channelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent(0) + 28);
  sub_1DE0EFF74(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ListenSheetEvent.channelData.modify())()
{
  return nullsub_1;
}

uint64_t ListenSheetEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent(0) + 32);
  sub_1DE0EFF74(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ListenSheetEvent.groupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent(0) + 32);
  sub_1DE0EFF74(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ListenSheetEvent.groupData.modify())()
{
  return nullsub_1;
}

uint64_t ListenSheetEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent(0) + 36);
  sub_1DE0EFF74(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ListenSheetEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent(0) + 36);
  sub_1DE0EFF74(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ListenSheetEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t ListenSheetEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent(0) + 40);
  sub_1DE0EFF74(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ListenSheetEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent(0) + 40);
  sub_1DE0EFF74(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ListenSheetEvent.userBundleSubscriptionContextData.modify())()
{
  return nullsub_1;
}

uint64_t ListenSheetEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent(0) + 44);
  sub_1DE0EFF74(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ListenSheetEvent.issueData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent(0) + 44);
  sub_1DE0EFF74(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ListenSheetEvent.issueData.modify())()
{
  return nullsub_1;
}

uint64_t ListenSheetEvent.issueViewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent(0) + 48);
  sub_1DE0EFF74(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ListenSheetEvent.issueViewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent(0) + 48);
  sub_1DE0EFF74(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ListenSheetEvent.issueViewData.modify())()
{
  return nullsub_1;
}

uint64_t ListenSheetEvent.listenSheetActionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent(0) + 52);
  sub_1DE0EFF74(0, &qword_1EABA2988, (void (*)(void))sub_1DE0EFFF0, (void (*)(void))sub_1DE0F0044);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_1DE0EFF74(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_1DE47ECA0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1DE0EFFF0()
{
  unint64_t result = qword_1EABA2990;
  if (!qword_1EABA2990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2990);
  }
  return result;
}

unint64_t sub_1DE0F0044()
{
  unint64_t result = qword_1EABA2998;
  if (!qword_1EABA2998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2998);
  }
  return result;
}

uint64_t ListenSheetEvent.listenSheetActionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent(0) + 52);
  sub_1DE0EFF74(0, &qword_1EABA2988, (void (*)(void))sub_1DE0EFFF0, (void (*)(void))sub_1DE0F0044);
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ListenSheetEvent.listenSheetActionData.modify())()
{
  return nullsub_1;
}

uint64_t ListenSheetEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for ListenSheetEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_1DE0EFF74(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_1DE0EFF74(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + v4[8];
  uint64_t v12 = *MEMORY[0x1E4F4A9F8];
  sub_1DE0EFF74(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v11, v12, v13);
  uint64_t v14 = a1 + v4[9];
  sub_1DE0EFF74(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v12, v15);
  uint64_t v16 = a1 + v4[10];
  sub_1DE0EFF74(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v2, v17);
  uint64_t v18 = a1 + v4[11];
  sub_1DE0EFF74(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v12, v19);
  uint64_t v20 = a1 + v4[12];
  sub_1DE0EFF74(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v12, v21);
  uint64_t v22 = a1 + v4[13];
  sub_1DE0EFF74(0, &qword_1EABA2988, (void (*)(void))sub_1DE0EFFF0, (void (*)(void))sub_1DE0F0044);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104);

  return v24(v22, v2, v23);
}

uint64_t ListenSheetEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04E084(MEMORY[0x1E4F4AB70], a1);
}

uint64_t ListenSheetEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE0F0694(type metadata accessor for ListenSheetEvent.Model, MEMORY[0x1E4F4AB90], a1);
}

uint64_t sub_1DE0F0694@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for ListenSheetEvent.Model(uint64_t a1)
{
  return sub_1DE04E1D0(a1, (uint64_t *)&unk_1EABA29C8);
}

uint64_t ListenSheetEvent.Model.articleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent.Model(0) + 24);
  long long v4 = *(_OWORD *)(v3 + 80);
  long long v5 = *(_OWORD *)(v3 + 112);
  long long v21 = *(_OWORD *)(v3 + 96);
  v22[0] = v5;
  long long v6 = *(_OWORD *)(v3 + 16);
  long long v7 = *(_OWORD *)(v3 + 48);
  long long v17 = *(_OWORD *)(v3 + 32);
  long long v8 = v17;
  long long v18 = v7;
  long long v9 = *(_OWORD *)(v3 + 48);
  long long v10 = *(_OWORD *)(v3 + 80);
  long long v19 = *(_OWORD *)(v3 + 64);
  long long v11 = v19;
  long long v20 = v10;
  long long v12 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  long long v13 = v16[0];
  v16[1] = v12;
  long long v14 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v4;
  *(void *)((char *)v22 + 15) = *(void *)(v3 + 127);
  *(void *)(a1 + 127) = *(void *)(v3 + 127);
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1DE056184((uint64_t)v16);
}

uint64_t ListenSheetEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ListenSheetEvent.Model(0) + 28);
  uint64_t v4 = *(void *)(v3 + 8);
  char v5 = *(unsigned char *)(v3 + 16);
  char v6 = *(unsigned char *)(v3 + 17);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 32);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 17) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

void *ListenSheetEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ListenSheetEvent.Model(0);
  sub_1DE063B10(v1 + *(int *)(v3 + 32), (uint64_t)v5);
  sub_1DE063B10((uint64_t)v5, a1);
  return sub_1DE0652D8(v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DE063BCC);
}

uint64_t ListenSheetEvent.Model.feedData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ListenSheetEvent.Model(0) + 36));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;

  return sub_1DE056598(v4, v5, v6);
}

uint64_t ListenSheetEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (char *)(v1 + *(int *)(type metadata accessor for ListenSheetEvent.Model(0) + 40));
  char v4 = *v3;
  uint64_t v5 = *((void *)v3 + 1);
  uint64_t v6 = *((void *)v3 + 2);
  char v7 = v3[24];
  char v8 = v3[25];
  uint64_t v10 = *((void *)v3 + 4);
  uint64_t v9 = *((void *)v3 + 5);
  LOBYTE(v3) = v3[48];
  *(unsigned char *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 25) = v8;
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t ListenSheetEvent.Model.issueData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ListenSheetEvent.Model(0) + 44));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;

  return sub_1DE074E14(v4, v5);
}

uint64_t ListenSheetEvent.Model.issueViewData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for ListenSheetEvent.Model(0) + 48));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t ListenSheetEvent.Model.listenSheetActionData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for ListenSheetEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 52));
  return result;
}

__n128 ListenSheetEvent.Model.init(eventData:timedData:articleData:channelData:groupData:feedData:userBundleSubscriptionContextData:issueData:issueViewData:listenSheetActionData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, long long *a6@<X5>, char *a7@<X6>, __n128 *a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, char *a11)
{
  long long v55 = a3[6];
  *(_OWORD *)uint64_t v56 = a3[7];
  *(void *)&v56[15] = *(void *)((char *)a3 + 127);
  long long v51 = a3[2];
  long long v52 = a3[3];
  long long v53 = a3[4];
  long long v54 = a3[5];
  long long v49 = *a3;
  long long v50 = a3[1];
  uint64_t v35 = a4[1];
  uint64_t v36 = *a4;
  char v17 = *((unsigned char *)a4 + 16);
  char v18 = *((unsigned char *)a4 + 17);
  uint64_t v33 = a4[4];
  uint64_t v34 = a4[3];
  sub_1DE063B10(a5, (uint64_t)v57);
  long long v37 = *a6;
  uint64_t v19 = *((void *)a6 + 2);
  char v44 = *a7;
  uint64_t v42 = *((void *)a7 + 2);
  uint64_t v43 = *((void *)a7 + 1);
  char v40 = a7[25];
  char v41 = a7[24];
  uint64_t v38 = *((void *)a7 + 5);
  uint64_t v39 = *((void *)a7 + 4);
  LOBYTE(a7) = a7[48];
  __n128 v47 = *a8;
  unint64_t v45 = a8[1].n128_u64[1];
  unint64_t v46 = a8[1].n128_u64[0];
  uint64_t v20 = a10[1];
  uint64_t v48 = *a10;
  char v21 = *a11;
  uint64_t v22 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(a9, a1, v22);
  uint64_t v23 = (int *)type metadata accessor for ListenSheetEvent.Model(0);
  uint64_t v24 = a9 + v23[5];
  uint64_t v25 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32))(v24, a2, v25);
  uint64_t v26 = a9 + v23[6];
  *(_OWORD *)(v26 + 96) = v55;
  *(_OWORD *)(v26 + 112) = *(_OWORD *)v56;
  *(void *)(v26 + 127) = *(void *)&v56[15];
  *(_OWORD *)(v26 + 32) = v51;
  *(_OWORD *)(v26 + 48) = v52;
  *(_OWORD *)(v26 + 64) = v53;
  *(_OWORD *)(v26 + 80) = v54;
  *(_OWORD *)uint64_t v26 = v49;
  *(_OWORD *)(v26 + 16) = v50;
  uint64_t v27 = a9 + v23[7];
  *(void *)uint64_t v27 = v36;
  *(void *)(v27 + 8) = v35;
  *(unsigned char *)(v27 + 16) = v17;
  *(unsigned char *)(v27 + 17) = v18;
  *(void *)(v27 + 24) = v34;
  *(void *)(v27 + 32) = v33;
  sub_1DE063B10((uint64_t)v57, a9 + v23[8]);
  uint64_t v28 = a9 + v23[9];
  *(_OWORD *)uint64_t v28 = v37;
  *(void *)(v28 + 16) = v19;
  uint64_t v29 = a9 + v23[10];
  *(unsigned char *)uint64_t v29 = v44;
  *(void *)(v29 + 8) = v43;
  *(void *)(v29 + 16) = v42;
  *(unsigned char *)(v29 + 24) = v41;
  *(unsigned char *)(v29 + 25) = v40;
  *(void *)(v29 + 32) = v39;
  *(void *)(v29 + 40) = v38;
  *(unsigned char *)(v29 + 48) = (_BYTE)a7;
  uint64_t v30 = (__n128 *)(a9 + v23[11]);
  __n128 result = v47;
  __n128 *v30 = v47;
  v30[1].n128_u64[0] = v46;
  v30[1].n128_u64[1] = v45;
  char v32 = (void *)(a9 + v23[12]);
  *char v32 = v48;
  v32[1] = v20;
  *(unsigned char *)(a9 + v23[13]) = v21;
  return result;
}

unint64_t sub_1DE0F0CCC(char a1)
{
  unint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x74614464656D6974;
      break;
    case 2:
      unint64_t result = 0x44656C6369747261;
      break;
    case 3:
      unint64_t result = 0x446C656E6E616863;
      break;
    case 4:
      unint64_t result = 0x74614470756F7267;
      break;
    case 5:
      unint64_t result = 0x6174614464656566;
      break;
    case 6:
      unint64_t result = 0xD000000000000021;
      break;
    case 7:
      unint64_t result = 0x7461446575737369;
      break;
    case 8:
      unint64_t result = 0x6569566575737369;
      break;
    case 9:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DE0F0E1C()
{
  return sub_1DE0F0CCC(*v0);
}

uint64_t sub_1DE0F0E24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE0F6B48(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE0F0E4C(uint64_t a1)
{
  unint64_t v2 = sub_1DE0F1398();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE0F0E88(uint64_t a1)
{
  unint64_t v2 = sub_1DE0F1398();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ListenSheetEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1DE0F1E44(0, &qword_1EABA29A0, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v32 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0F1398();
  sub_1DE480790();
  LOBYTE(v36[0]) = 0;
  sub_1DE47F330();
  sub_1DE04D884(&qword_1EBEC2030, MEMORY[0x1E4F4AB70]);
  sub_1DE4805C0();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for ListenSheetEvent.Model(0);
    char v45 = 1;
    sub_1DE47F350();
    sub_1DE04D884(&qword_1EBEC2040, MEMORY[0x1E4F4AB90]);
    sub_1DE4805C0();
    uint64_t v11 = v3 + v10[6];
    long long v12 = *(_OWORD *)(v11 + 112);
    v36[6] = *(_OWORD *)(v11 + 96);
    *(_OWORD *)long long v37 = v12;
    *(void *)&v37[15] = *(void *)(v11 + 127);
    long long v13 = *(_OWORD *)(v11 + 48);
    v36[2] = *(_OWORD *)(v11 + 32);
    v36[3] = v13;
    long long v14 = *(_OWORD *)(v11 + 80);
    v36[4] = *(_OWORD *)(v11 + 64);
    v36[5] = v14;
    long long v15 = *(_OWORD *)(v11 + 16);
    v36[0] = *(_OWORD *)v11;
    v36[1] = v15;
    LOBYTE(v34[0]) = 2;
    sub_1DE053EBC();
    sub_1DE4805C0();
    uint64_t v16 = (uint64_t *)(v3 + v10[7]);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    char v19 = *((unsigned char *)v16 + 16);
    char v20 = *((unsigned char *)v16 + 17);
    uint64_t v22 = v16[3];
    uint64_t v21 = v16[4];
    uint64_t v39 = v17;
    uint64_t v40 = v18;
    char v41 = v19;
    char v42 = v20;
    uint64_t v43 = v22;
    uint64_t v44 = v21;
    char v38 = 3;
    sub_1DE0552E4();
    sub_1DE4805C0();
    sub_1DE063B10(v3 + v10[8], (uint64_t)v36);
    sub_1DE063B10((uint64_t)v36, (uint64_t)v34);
    char v33 = 4;
    sub_1DE0629F4();
    sub_1DE480550();
    uint64_t v23 = v3 + v10[9];
    uint64_t v24 = *(void *)(v23 + 16);
    v34[0] = *(_OWORD *)v23;
    *(void *)&v34[1] = v24;
    char v33 = 5;
    sub_1DE055800();
    sub_1DE480550();
    uint64_t v25 = v3 + v10[10];
    char v26 = *(unsigned char *)(v25 + 24);
    char v27 = *(unsigned char *)(v25 + 25);
    char v28 = *(unsigned char *)(v25 + 48);
    LOBYTE(v34[0]) = *(unsigned char *)v25;
    *(_OWORD *)((char *)v34 + 8) = *(_OWORD *)(v25 + 8);
    BYTE8(v34[1]) = v26;
    BYTE9(v34[1]) = v27;
    v34[2] = *(_OWORD *)(v25 + 32);
    char v35 = v28;
    char v33 = 6;
    sub_1DE04DD5C();
    sub_1DE4805C0();
    uint64_t v29 = (_OWORD *)(v3 + v10[11]);
    long long v30 = v29[1];
    v34[0] = *v29;
    v34[1] = v30;
    char v33 = 7;
    sub_1DE054A4C();
    sub_1DE480550();
    v34[0] = *(_OWORD *)(v3 + v10[12]);
    char v33 = 8;
    sub_1DE054C9C();
    sub_1DE480550();
    LOBYTE(v34[0]) = *(unsigned char *)(v3 + v10[13]);
    char v33 = 9;
    sub_1DE0F0044();
    sub_1DE4805C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DE0F1398()
{
  unint64_t result = qword_1EABA29A8;
  if (!qword_1EABA29A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA29A8);
  }
  return result;
}

uint64_t ListenSheetEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v3 = sub_1DE47F350();
  uint64_t v55 = *(void *)(v3 - 8);
  uint64_t v56 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DE47F330();
  uint64_t v57 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DE0F1E44(0, &qword_1EABA29B0, MEMORY[0x1E4FBBDC0]);
  uint64_t v52 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  long long v12 = (char *)&v49 - v11;
  uint64_t v60 = (int *)type metadata accessor for ListenSheetEvent.Model(0);
  MEMORY[0x1F4188790](v60);
  uint64_t v81 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  uint64_t v58 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1DE0F1398();
  long long v54 = v12;
  uint64_t v15 = v59;
  sub_1DE480770();
  uint64_t v53 = v6;
  if (v15)
  {
    uint64_t v59 = v15;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  }
  else
  {
    uint64_t v50 = v10;
    LOBYTE(v73) = 0;
    sub_1DE04D884(&qword_1EBEC2038, MEMORY[0x1E4F4AB70]);
    sub_1DE4804E0();
    uint64_t v24 = v81;
    (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v81, v8, v6);
    LOBYTE(v73) = 1;
    sub_1DE04D884((unint64_t *)&unk_1EBEC2048, MEMORY[0x1E4F4AB90]);
    uint64_t v25 = v5;
    uint64_t v26 = v56;
    sub_1DE4804E0();
    char v27 = v60;
    (*(void (**)(char *, char *, uint64_t))(v55 + 32))(&v24[v60[5]], v25, v26);
    v64[143] = 2;
    sub_1DE053E68();
    sub_1DE4804E0();
    char v28 = &v24[v27[6]];
    long long v29 = *(_OWORD *)v72;
    *((_OWORD *)v28 + 6) = v71;
    *((_OWORD *)v28 + 7) = v29;
    *(void *)(v28 + 127) = *(void *)&v72[15];
    long long v30 = v68;
    *((_OWORD *)v28 + 2) = v67;
    *((_OWORD *)v28 + 3) = v30;
    long long v31 = v70;
    *((_OWORD *)v28 + 4) = v69;
    *((_OWORD *)v28 + 5) = v31;
    long long v32 = v66;
    *(_OWORD *)char v28 = v65;
    *((_OWORD *)v28 + 1) = v32;
    v64[0] = 3;
    sub_1DE055290();
    sub_1DE4804E0();
    uint64_t v33 = *((void *)&v73 + 1);
    char v34 = v74;
    char v35 = BYTE1(v74);
    uint64_t v36 = *((void *)&v74 + 1);
    uint64_t v37 = v75;
    char v38 = &v24[v27[7]];
    *(void *)char v38 = v73;
    *((void *)v38 + 1) = v33;
    v38[16] = v34;
    v38[17] = v35;
    *((void *)v38 + 3) = v36;
    *((void *)v38 + 4) = v37;
    v64[142] = 4;
    sub_1DE0629A0();
    sub_1DE480470();
    sub_1DE063B10((uint64_t)&v73, (uint64_t)v64);
    sub_1DE063B10((uint64_t)v64, (uint64_t)&v24[v27[8]]);
    char v63 = 5;
    sub_1DE0557AC();
    sub_1DE480470();
    uint64_t v39 = *(void *)&v61[1];
    uint64_t v40 = &v24[v27[9]];
    *(_OWORD *)uint64_t v40 = v61[0];
    *((void *)v40 + 2) = v39;
    char v63 = 6;
    sub_1DE04DD08();
    sub_1DE4804E0();
    char v41 = BYTE8(v61[1]);
    char v42 = BYTE9(v61[1]);
    char v43 = v62;
    uint64_t v44 = &v24[v27[10]];
    *uint64_t v44 = v61[0];
    *(_OWORD *)(v44 + 8) = *(_OWORD *)((char *)v61 + 8);
    v44[24] = v41;
    v44[25] = v42;
    *((_OWORD *)v44 + 2) = v61[2];
    v44[48] = v43;
    char v63 = 7;
    sub_1DE0549F8();
    sub_1DE480470();
    char v45 = &v24[v60[11]];
    long long v46 = v61[1];
    *(_OWORD *)char v45 = v61[0];
    *((_OWORD *)v45 + 1) = v46;
    char v63 = 8;
    sub_1DE054C48();
    sub_1DE480470();
    uint64_t v59 = 0;
    *(_OWORD *)&v81[v60[12]] = v61[0];
    char v63 = 9;
    sub_1DE0EFFF0();
    uint64_t v47 = v59;
    sub_1DE4804E0();
    uint64_t v59 = v47;
    (*(void (**)(char *, uint64_t))(v50 + 8))(v54, v52);
    if (v47)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v81, v53);
      uint64_t v23 = v81;
      (*(void (**)(char *, uint64_t))(v55 + 8))(&v81[v60[5]], v56);
      uint64_t v17 = v60;
      uint64_t v18 = &v23[v60[6]];
      long long v19 = *((_OWORD *)v18 + 7);
      long long v79 = *((_OWORD *)v18 + 6);
      v80[0] = v19;
      *(void *)((char *)v80 + 15) = *(void *)(v18 + 127);
      long long v20 = *((_OWORD *)v18 + 3);
      long long v75 = *((_OWORD *)v18 + 2);
      long long v76 = v20;
      long long v21 = *((_OWORD *)v18 + 5);
      long long v77 = *((_OWORD *)v18 + 4);
      long long v78 = v21;
      long long v22 = *((_OWORD *)v18 + 1);
      long long v73 = *(_OWORD *)v18;
      long long v74 = v22;
      sub_1DE057E78((uint64_t)&v73);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DE063B10((uint64_t)&v23[v17[8]], (uint64_t)&v73);
      sub_1DE0652D8(&v73, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DE06533C);
      sub_1DE05FBA8(*(void *)&v23[v17[9]], *(void *)&v23[v17[9] + 8], *(void *)&v23[v17[9] + 16]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DE0767E0(*(void *)&v23[v17[11]], *(void *)&v23[v17[11] + 8]);
      return swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v48 = (uint64_t)v81;
      v81[v60[13]] = v61[0];
      sub_1DE0F1EA8(v48, v51);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
      return sub_1DE0F1F0C(v48);
    }
  }
}

void sub_1DE0F1E44(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE0F1398();
    unint64_t v7 = a3(a1, &type metadata for ListenSheetEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1DE0F1EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ListenSheetEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DE0F1F0C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ListenSheetEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DE0F1F68@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ListenSheetEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DE0F1F80(void *a1)
{
  return ListenSheetEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DE0F1F98@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0AA0, MEMORY[0x1E4F4A9C8], (uint64_t)qword_1EABA2940, a1);
}

uint64_t sub_1DE0F1FD0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0AA8, MEMORY[0x1E4F4AAB0], (uint64_t)qword_1EABA2958, a1);
}

uint64_t sub_1DE0F2008@<X0>(uint64_t a1@<X8>)
{
  return sub_1DE04F064(&qword_1EABA0AB0, MEMORY[0x1E4F4AAC0], (uint64_t)qword_1EABA2970, a1);
}

uint64_t sub_1DE0F2040@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x1E4F4AA00];
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_1DE0EFF74(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_1DE0EFF74(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  uint64_t v13 = *MEMORY[0x1E4F4A9F8];
  sub_1DE0EFF74(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v12, v13, v14);
  uint64_t v15 = a2 + a1[9];
  sub_1DE0EFF74(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v13, v16);
  uint64_t v17 = a2 + a1[10];
  sub_1DE0EFF74(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v4, v18);
  uint64_t v19 = a2 + a1[11];
  sub_1DE0EFF74(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v13, v20);
  uint64_t v21 = a2 + a1[12];
  sub_1DE0EFF74(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v21, v13, v22);
  uint64_t v23 = a2 + a1[13];
  sub_1DE0EFF74(0, &qword_1EABA2988, (void (*)(void))sub_1DE0EFFF0, (void (*)(void))sub_1DE0F0044);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104);

  return v25(v23, v4, v24);
}

uint64_t *initializeBufferWithCopyOfBuffer for ListenSheetEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v44 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v44 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DE04D618();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1DE04D7B8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_1DE0EFF74(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_1DE0EFF74(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_1DE0EFF74(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_1DE0EFF74(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    long long v29 = (char *)a1 + v28;
    long long v30 = (char *)a2 + v28;
    sub_1DE0EFF74(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    uint64_t v33 = (char *)a1 + v32;
    char v34 = (char *)a2 + v32;
    sub_1DE0EFF74(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    uint64_t v37 = (char *)a1 + v36;
    char v38 = (char *)a2 + v36;
    sub_1DE0EFF74(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = a3[13];
    char v41 = (char *)a1 + v40;
    char v42 = (char *)a2 + v40;
    sub_1DE0EFF74(0, &qword_1EABA2988, (void (*)(void))sub_1DE0EFFF0, (void (*)(void))sub_1DE0F0044);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
  }
  return a1;
}

uint64_t destroy for ListenSheetEvent(uint64_t a1, int *a2)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_1DE0EFF74(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_1DE0EFF74(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_1DE0EFF74(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_1DE0EFF74(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_1DE0EFF74(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_1DE0EFF74(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  sub_1DE0EFF74(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[13];
  sub_1DE0EFF74(0, &qword_1EABA2988, (void (*)(void))sub_1DE0EFFF0, (void (*)(void))sub_1DE0F0044);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8);

  return v23(v21, v22);
}

uint64_t initializeWithCopy for ListenSheetEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0EFF74(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0EFF74(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0EFF74(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE0EFF74(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE0EFF74(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE0EFF74(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE0EFF74(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_1DE0EFF74(0, &qword_1EABA2988, (void (*)(void))sub_1DE0EFFF0, (void (*)(void))sub_1DE0F0044);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  return a1;
}

uint64_t assignWithCopy for ListenSheetEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0EFF74(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0EFF74(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0EFF74(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE0EFF74(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE0EFF74(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE0EFF74(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE0EFF74(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_1DE0EFF74(0, &qword_1EABA2988, (void (*)(void))sub_1DE0EFFF0, (void (*)(void))sub_1DE0F0044);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  return a1;
}

uint64_t initializeWithTake for ListenSheetEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0EFF74(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0EFF74(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0EFF74(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE0EFF74(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE0EFF74(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE0EFF74(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE0EFF74(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_1DE0EFF74(0, &qword_1EABA2988, (void (*)(void))sub_1DE0EFFF0, (void (*)(void))sub_1DE0F0044);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  return a1;
}

uint64_t assignWithTake for ListenSheetEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1DE04D7B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_1DE0EFF74(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_1DE0EFF74(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1DE0EFF74(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_1DE0EFF74(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_1DE0EFF74(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_1DE0EFF74(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_1DE0EFF74(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_1DE0EFF74(0, &qword_1EABA2988, (void (*)(void))sub_1DE0EFFF0, (void (*)(void))sub_1DE0F0044);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  return a1;
}

uint64_t getEnumTagSinglePayload for ListenSheetEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE0F418C);
}

uint64_t sub_1DE0F418C(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1DE04D618();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_20:
    return v9(v10, a2, v8);
  }
  sub_1DE04D7B8();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_19:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_20;
  }
  sub_1DE0EFF74(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_19;
  }
  sub_1DE0EFF74(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_19;
  }
  sub_1DE0EFF74(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_19;
  }
  sub_1DE0EFF74(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_19;
  }
  sub_1DE0EFF74(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_19;
  }
  sub_1DE0EFF74(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_19;
  }
  sub_1DE0EFF74(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_19;
  }
  sub_1DE0EFF74(0, &qword_1EABA2988, (void (*)(void))sub_1DE0EFFF0, (void (*)(void))sub_1DE0F0044);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48);
  uint64_t v24 = v22;
  uint64_t v25 = a1 + a3[13];

  return v23(v25, a2, v24);
}

uint64_t storeEnumTagSinglePayload for ListenSheetEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE0F46C0);
}

uint64_t sub_1DE0F46C0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_1DE04D618();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_20:
    return v11(v12, a2, a2, v10);
  }
  sub_1DE04D7B8();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_19:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_20;
  }
  sub_1DE0EFF74(0, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_19;
  }
  sub_1DE0EFF74(0, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_19;
  }
  sub_1DE0EFF74(0, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_19;
  }
  sub_1DE0EFF74(0, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_19;
  }
  sub_1DE0EFF74(0, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_19;
  }
  sub_1DE0EFF74(0, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_19;
  }
  sub_1DE0EFF74(0, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_19;
  }
  sub_1DE0EFF74(0, &qword_1EABA2988, (void (*)(void))sub_1DE0EFFF0, (void (*)(void))sub_1DE0F0044);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);
  uint64_t v26 = v24;
  uint64_t v27 = a1 + a4[13];

  return v25(v27, a2, a2, v26);
}

void sub_1DE0F4BEC()
{
  sub_1DE04D618();
  if (v0 <= 0x3F)
  {
    sub_1DE04D7B8();
    if (v1 <= 0x3F)
    {
      sub_1DE0EFF74(319, &qword_1EBEC1E18, (void (*)(void))sub_1DE053E68, (void (*)(void))sub_1DE053EBC);
      if (v2 <= 0x3F)
      {
        sub_1DE0EFF74(319, &qword_1EBEC1E20, (void (*)(void))sub_1DE055290, (void (*)(void))sub_1DE0552E4);
        if (v3 <= 0x3F)
        {
          sub_1DE0EFF74(319, &qword_1EBEC1FE8, (void (*)(void))sub_1DE0629A0, (void (*)(void))sub_1DE0629F4);
          if (v4 <= 0x3F)
          {
            sub_1DE0EFF74(319, (unint64_t *)&qword_1EBEC1FD0, (void (*)(void))sub_1DE0557AC, (void (*)(void))sub_1DE055800);
            if (v5 <= 0x3F)
            {
              sub_1DE0EFF74(319, (unint64_t *)&qword_1EBEC1FB8, (void (*)(void))sub_1DE04DD08, (void (*)(void))sub_1DE04DD5C);
              if (v6 <= 0x3F)
              {
                sub_1DE0EFF74(319, &qword_1EBEC1FF0, (void (*)(void))sub_1DE0549F8, (void (*)(void))sub_1DE054A4C);
                if (v7 <= 0x3F)
                {
                  sub_1DE0EFF74(319, &qword_1EBEC1E90, (void (*)(void))sub_1DE054C48, (void (*)(void))sub_1DE054C9C);
                  if (v8 <= 0x3F)
                  {
                    sub_1DE0EFF74(319, &qword_1EABA2988, (void (*)(void))sub_1DE0EFFF0, (void (*)(void))sub_1DE0F0044);
                    if (v9 <= 0x3F) {
                      swift_initStructMetadata();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ListenSheetEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v33 = *a2;
    *a1 = *a2;
    a1 = (void *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DE47F330();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    unint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DE47F350();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)a1 + v12;
    uint64_t v15 = (char *)a2 + v12;
    *(void *)uint64_t v14 = *(void *)v15;
    v14[8] = v15[8];
    uint64_t v16 = *((void *)v15 + 3);
    *((void *)v14 + 2) = *((void *)v15 + 2);
    *((void *)v14 + 3) = v16;
    v14[32] = v15[32];
    uint64_t v17 = *((void *)v15 + 6);
    *((void *)v14 + 5) = *((void *)v15 + 5);
    *((void *)v14 + 6) = v17;
    v14[56] = v15[56];
    v14[57] = v15[57];
    uint64_t v18 = *((void *)v15 + 9);
    *((void *)v14 + 8) = *((void *)v15 + 8);
    *((void *)v14 + 9) = v18;
    v14[80] = v15[80];
    *(_OWORD *)(v14 + 88) = *(_OWORD *)(v15 + 88);
    *((void *)v14 + 13) = *((void *)v15 + 13);
    v14[112] = v15[112];
    *((void *)v14 + 15) = *((void *)v15 + 15);
    *((_DWORD *)v14 + 32) = *((_DWORD *)v15 + 32);
    v14[132] = v15[132];
    *(_WORD *)(v14 + 133) = *(_WORD *)(v15 + 133);
    uint64_t v19 = (char *)a1 + v13;
    uint64_t v20 = (char *)a2 + v13;
    uint64_t v21 = *((void *)v20 + 1);
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    *((_WORD *)v19 + 8) = *((_WORD *)v20 + 8);
    uint64_t v22 = *((void *)v20 + 4);
    *((void *)v19 + 3) = *((void *)v20 + 3);
    *((void *)v19 + 4) = v22;
    uint64_t v23 = a3[8];
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v58 = a2;
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = *((void *)v25 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v26)
    {
      *(_WORD *)uint64_t v24 = *(_WORD *)v25;
      *((void *)v24 + 1) = *((void *)v25 + 1);
      *((void *)v24 + 2) = v26;
      *((void *)v24 + 3) = *((void *)v25 + 3);
      uint64_t v27 = *((void *)v25 + 5);
      *((void *)v24 + 4) = *((void *)v25 + 4);
      *((void *)v24 + 5) = v27;
      uint64_t v28 = *((void *)v25 + 7);
      *((void *)v24 + 6) = *((void *)v25 + 6);
      *((void *)v24 + 7) = v28;
      uint64_t v29 = *((void *)v25 + 9);
      *((void *)v24 + 8) = *((void *)v25 + 8);
      *((void *)v24 + 9) = v29;
      v24[80] = v25[80];
      uint64_t v30 = *((void *)v25 + 12);
      *((void *)v24 + 11) = *((void *)v25 + 11);
      *((void *)v24 + 12) = v30;
      *((void *)v24 + 13) = *((void *)v25 + 13);
      v24[112] = v25[112];
      uint64_t v32 = *((void *)v25 + 15);
      uint64_t v31 = *((void *)v25 + 16);
      *((void *)v24 + 15) = v32;
      *((void *)v24 + 16) = v31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v34 = *((_OWORD *)v25 + 7);
      *((_OWORD *)v24 + 6) = *((_OWORD *)v25 + 6);
      *((_OWORD *)v24 + 7) = v34;
      *((void *)v24 + 16) = *((void *)v25 + 16);
      long long v35 = *((_OWORD *)v25 + 3);
      *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
      *((_OWORD *)v24 + 3) = v35;
      long long v36 = *((_OWORD *)v25 + 5);
      *((_OWORD *)v24 + 4) = *((_OWORD *)v25 + 4);
      *((_OWORD *)v24 + 5) = v36;
      long long v37 = *((_OWORD *)v25 + 1);
      *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
      *((_OWORD *)v24 + 1) = v37;
    }
    uint64_t v38 = a3[9];
    uint64_t v39 = (char *)a1 + v38;
    uint64_t v40 = (char *)v58 + v38;
    uint64_t v41 = *((void *)v40 + 2);
    if (v41 == 1)
    {
      *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
      *((void *)v39 + 2) = *((void *)v40 + 2);
    }
    else
    {
      *uint64_t v39 = *v40;
      *((void *)v39 + 1) = *((void *)v40 + 1);
      *((void *)v39 + 2) = v41;
      swift_bridgeObjectRetain();
    }
    uint64_t v42 = a3[10];
    uint64_t v43 = a3[11];
    uint64_t v44 = (char *)a1 + v42;
    char v45 = (char *)v58 + v42;
    *uint64_t v44 = *v45;
    uint64_t v46 = *((void *)v45 + 2);
    *((void *)v44 + 1) = *((void *)v45 + 1);
    *((void *)v44 + 2) = v46;
    *((_WORD *)v44 + 12) = *((_WORD *)v45 + 12);
    uint64_t v47 = *((void *)v45 + 5);
    *((void *)v44 + 4) = *((void *)v45 + 4);
    *((void *)v44 + 5) = v47;
    v44[48] = v45[48];
    uint64_t v48 = (char *)a1 + v43;
    uint64_t v49 = (char *)v58 + v43;
    uint64_t v50 = *(void *)((char *)v58 + v43 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v50)
    {
      *(void *)uint64_t v48 = *(void *)v49;
      *((void *)v48 + 1) = v50;
      *((_WORD *)v48 + 8) = *((_WORD *)v49 + 8);
      *((void *)v48 + 3) = *((void *)v49 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v51 = *((_OWORD *)v49 + 1);
      *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
      *((_OWORD *)v48 + 1) = v51;
    }
    uint64_t v52 = a3[12];
    uint64_t v53 = a3[13];
    long long v54 = (void *)((char *)a1 + v52);
    uint64_t v55 = (void *)((char *)v58 + v52);
    uint64_t v56 = v55[1];
    *long long v54 = *v55;
    v54[1] = v56;
    *((unsigned char *)a1 + v53) = *((unsigned char *)v58 + v53);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ListenSheetEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[8] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + a2[9] + 16) != 1) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[11] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ListenSheetEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  uint64_t v15 = *(void *)(v14 + 24);
  *(void *)(v13 + 16) = *(void *)(v14 + 16);
  *(void *)(v13 + 24) = v15;
  *(unsigned char *)(v13 + 32) = *(unsigned char *)(v14 + 32);
  uint64_t v16 = *(void *)(v14 + 48);
  *(void *)(v13 + 40) = *(void *)(v14 + 40);
  *(void *)(v13 + 48) = v16;
  *(unsigned char *)(v13 + 56) = *(unsigned char *)(v14 + 56);
  *(unsigned char *)(v13 + 57) = *(unsigned char *)(v14 + 57);
  uint64_t v17 = *(void *)(v14 + 72);
  *(void *)(v13 + 64) = *(void *)(v14 + 64);
  *(void *)(v13 + 72) = v17;
  *(unsigned char *)(v13 + 80) = *(unsigned char *)(v14 + 80);
  *(_OWORD *)(v13 + 88) = *(_OWORD *)(v14 + 88);
  *(void *)(v13 + 104) = *(void *)(v14 + 104);
  *(unsigned char *)(v13 + 112) = *(unsigned char *)(v14 + 112);
  *(void *)(v13 + 120) = *(void *)(v14 + 120);
  *(_DWORD *)(v13 + 128) = *(_DWORD *)(v14 + 128);
  *(unsigned char *)(v13 + 132) = *(unsigned char *)(v14 + 132);
  *(_WORD *)(v13 + 133) = *(_WORD *)(v14 + 133);
  uint64_t v18 = a1 + v12;
  uint64_t v19 = a2 + v12;
  uint64_t v20 = *(void *)(v19 + 8);
  *(void *)uint64_t v18 = *(void *)v19;
  *(void *)(v18 + 8) = v20;
  *(_WORD *)(v18 + 16) = *(_WORD *)(v19 + 16);
  uint64_t v21 = *(void *)(v19 + 32);
  *(void *)(v18 + 24) = *(void *)(v19 + 24);
  *(void *)(v18 + 32) = v21;
  uint64_t v56 = a3;
  uint64_t v22 = a3[8];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = *(void *)(a2 + v22 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v25)
  {
    *(_WORD *)uint64_t v23 = *(_WORD *)v24;
    *(void *)(v23 + 8) = *(void *)(v24 + 8);
    *(void *)(v23 + 16) = v25;
    *(void *)(v23 + 24) = *(void *)(v24 + 24);
    uint64_t v26 = *(void *)(v24 + 40);
    *(void *)(v23 + 32) = *(void *)(v24 + 32);
    *(void *)(v23 + 40) = v26;
    uint64_t v27 = *(void *)(v24 + 56);
    *(void *)(v23 + 48) = *(void *)(v24 + 48);
    *(void *)(v23 + 56) = v27;
    uint64_t v28 = *(void *)(v24 + 72);
    *(void *)(v23 + 64) = *(void *)(v24 + 64);
    *(void *)(v23 + 72) = v28;
    *(unsigned char *)(v23 + 80) = *(unsigned char *)(v24 + 80);
    uint64_t v29 = *(void *)(v24 + 96);
    *(void *)(v23 + 88) = *(void *)(v24 + 88);
    *(void *)(v23 + 96) = v29;
    *(void *)(v23 + 104) = *(void *)(v24 + 104);
    *(unsigned char *)(v23 + 112) = *(unsigned char *)(v24 + 112);
    uint64_t v30 = *(void *)(v24 + 120);
    uint64_t v31 = *(void *)(v24 + 128);
    *(void *)(v23 + 120) = v30;
    *(void *)(v23 + 128) = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v32 = *(_OWORD *)(v24 + 112);
    *(_OWORD *)(v23 + 96) = *(_OWORD *)(v24 + 96);
    *(_OWORD *)(v23 + 112) = v32;
    *(void *)(v23 + 128) = *(void *)(v24 + 128);
    long long v33 = *(_OWORD *)(v24 + 48);
    *(_OWORD *)(v23 + 32) = *(_OWORD *)(v24 + 32);
    *(_OWORD *)(v23 + 48) = v33;
    long long v34 = *(_OWORD *)(v24 + 80);
    *(_OWORD *)(v23 + 64) = *(_OWORD *)(v24 + 64);
    *(_OWORD *)(v23 + 80) = v34;
    long long v35 = *(_OWORD *)(v24 + 16);
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    *(_OWORD *)(v23 + 16) = v35;
  }
  uint64_t v36 = v56[9];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  uint64_t v39 = *(void *)(v38 + 16);
  if (v39 == 1)
  {
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    *(void *)(v37 + 16) = *(void *)(v38 + 16);
  }
  else
  {
    *(unsigned char *)uint64_t v37 = *(unsigned char *)v38;
    *(void *)(v37 + 8) = *(void *)(v38 + 8);
    *(void *)(v37 + 16) = v39;
    swift_bridgeObjectRetain();
  }
  uint64_t v40 = v56[10];
  uint64_t v41 = v56[11];
  uint64_t v42 = a1 + v40;
  uint64_t v43 = a2 + v40;
  *(unsigned char *)uint64_t v42 = *(unsigned char *)v43;
  uint64_t v44 = *(void *)(v43 + 16);
  *(void *)(v42 + 8) = *(void *)(v43 + 8);
  *(void *)(v42 + 16) = v44;
  *(_WORD *)(v42 + 24) = *(_WORD *)(v43 + 24);
  uint64_t v45 = *(void *)(v43 + 40);
  *(void *)(v42 + 32) = *(void *)(v43 + 32);
  *(void *)(v42 + 40) = v45;
  *(unsigned char *)(v42 + 48) = *(unsigned char *)(v43 + 48);
  uint64_t v46 = a1 + v41;
  uint64_t v47 = a2 + v41;
  uint64_t v48 = *(void *)(a2 + v41 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v48)
  {
    *(void *)uint64_t v46 = *(void *)v47;
    *(void *)(v46 + 8) = v48;
    *(_WORD *)(v46 + 16) = *(_WORD *)(v47 + 16);
    *(void *)(v46 + 24) = *(void *)(v47 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v49 = *(_OWORD *)(v47 + 16);
    *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
    *(_OWORD *)(v46 + 16) = v49;
  }
  uint64_t v50 = v56[12];
  uint64_t v51 = v56[13];
  uint64_t v52 = (void *)(a1 + v50);
  uint64_t v53 = (void *)(a2 + v50);
  uint64_t v54 = v53[1];
  *uint64_t v52 = *v53;
  v52[1] = v54;
  *(unsigned char *)(a1 + v51) = *(unsigned char *)(a2 + v51);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ListenSheetEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)uint64_t v12 = *(unsigned char *)(a2 + v11);
  *(_DWORD *)(v12 + 4) = *(_DWORD *)(a2 + v11 + 4);
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(a2 + v11 + 8);
  *(void *)(v12 + 16) = *(void *)(a2 + v11 + 16);
  *(void *)(v12 + 24) = *(void *)(a2 + v11 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 32) = *(unsigned char *)(v13 + 32);
  *(void *)(v12 + 40) = *(void *)(v13 + 40);
  uint64_t v14 = *(void *)(v13 + 48);
  *(unsigned char *)(v12 + 56) = *(unsigned char *)(v13 + 56);
  *(void *)(v12 + 48) = v14;
  *(unsigned char *)(v12 + 57) = *(unsigned char *)(v13 + 57);
  *(void *)(v12 + 64) = *(void *)(v13 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v13 + 72);
  *(unsigned char *)(v12 + 80) = *(unsigned char *)(v13 + 80);
  *(void *)(v12 + 72) = v15;
  *(void *)(v12 + 88) = *(void *)(v13 + 88);
  *(void *)(v12 + 96) = *(void *)(v13 + 96);
  *(void *)(v12 + 104) = *(void *)(v13 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 112) = *(unsigned char *)(v13 + 112);
  *(void *)(v12 + 120) = *(void *)(v13 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 128) = *(unsigned char *)(v13 + 128);
  *(unsigned char *)(v12 + 129) = *(unsigned char *)(v13 + 129);
  *(unsigned char *)(v12 + 130) = *(unsigned char *)(v13 + 130);
  *(unsigned char *)(v12 + 131) = *(unsigned char *)(v13 + 131);
  *(unsigned char *)(v12 + 132) = *(unsigned char *)(v13 + 132);
  *(unsigned char *)(v12 + 133) = *(unsigned char *)(v13 + 133);
  *(unsigned char *)(v12 + 134) = *(unsigned char *)(v13 + 134);
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(void *)uint64_t v17 = *(void *)(a2 + v16);
  *(void *)(v17 + 8) = *(void *)(a2 + v16 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v17 + 16) = *(unsigned char *)(v18 + 16);
  *(unsigned char *)(v17 + 17) = *(unsigned char *)(v18 + 17);
  *(void *)(v17 + 24) = *(void *)(v18 + 24);
  *(void *)(v17 + 32) = *(void *)(v18 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = *(void *)(a1 + v19 + 16);
  uint64_t v23 = *(void *)(a2 + v19 + 16);
  if (v22)
  {
    if (v23)
    {
      *(unsigned char *)uint64_t v20 = *(unsigned char *)v21;
      *(unsigned char *)(v20 + 1) = *(unsigned char *)(v21 + 1);
      *(void *)(v20 + 8) = *(void *)(v21 + 8);
      *(void *)(v20 + 16) = *(void *)(v21 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v20 + 24) = *(_DWORD *)(v21 + 24);
      *(_DWORD *)(v20 + 28) = *(_DWORD *)(v21 + 28);
      *(void *)(v20 + 32) = *(void *)(v21 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v20 + 40) = *(void *)(v21 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v20 + 48) = *(void *)(v21 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v20 + 56) = *(void *)(v21 + 56);
      *(void *)(v20 + 64) = *(void *)(v21 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v20 + 72) = *(void *)(v21 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v20 + 80) = *(unsigned char *)(v21 + 80);
      *(void *)(v20 + 88) = *(void *)(v21 + 88);
      *(void *)(v20 + 96) = *(void *)(v21 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v24 = *(void *)(v21 + 104);
      *(unsigned char *)(v20 + 112) = *(unsigned char *)(v21 + 112);
      *(void *)(v20 + 104) = v24;
      *(void *)(v20 + 120) = *(void *)(v21 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v20 + 128) = *(void *)(v21 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DE069980(v20);
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
      long long v26 = *(_OWORD *)(v21 + 64);
      long long v28 = *(_OWORD *)(v21 + 16);
      long long v27 = *(_OWORD *)(v21 + 32);
      *(_OWORD *)(v20 + 48) = *(_OWORD *)(v21 + 48);
      *(_OWORD *)(v20 + 64) = v26;
      *(_OWORD *)(v20 + 16) = v28;
      *(_OWORD *)(v20 + 32) = v27;
      long long v30 = *(_OWORD *)(v21 + 96);
      long long v29 = *(_OWORD *)(v21 + 112);
      long long v31 = *(_OWORD *)(v21 + 80);
      *(void *)(v20 + 128) = *(void *)(v21 + 128);
      *(_OWORD *)(v20 + 96) = v30;
      *(_OWORD *)(v20 + 112) = v29;
      *(_OWORD *)(v20 + 80) = v31;
    }
  }
  else if (v23)
  {
    *(unsigned char *)uint64_t v20 = *(unsigned char *)v21;
    *(unsigned char *)(v20 + 1) = *(unsigned char *)(v21 + 1);
    *(void *)(v20 + 8) = *(void *)(v21 + 8);
    *(void *)(v20 + 16) = *(void *)(v21 + 16);
    *(_DWORD *)(v20 + 24) = *(_DWORD *)(v21 + 24);
    *(_DWORD *)(v20 + 28) = *(_DWORD *)(v21 + 28);
    *(void *)(v20 + 32) = *(void *)(v21 + 32);
    *(void *)(v20 + 40) = *(void *)(v21 + 40);
    *(void *)(v20 + 48) = *(void *)(v21 + 48);
    *(void *)(v20 + 56) = *(void *)(v21 + 56);
    *(void *)(v20 + 64) = *(void *)(v21 + 64);
    *(void *)(v20 + 72) = *(void *)(v21 + 72);
    *(unsigned char *)(v20 + 80) = *(unsigned char *)(v21 + 80);
    *(void *)(v20 + 88) = *(void *)(v21 + 88);
    *(void *)(v20 + 96) = *(void *)(v21 + 96);
    uint64_t v25 = *(void *)(v21 + 104);
    *(unsigned char *)(v20 + 112) = *(unsigned char *)(v21 + 112);
    *(void *)(v20 + 104) = v25;
    *(void *)(v20 + 120) = *(void *)(v21 + 120);
    *(void *)(v20 + 128) = *(void *)(v21 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    long long v32 = *(_OWORD *)(v21 + 16);
    long long v33 = *(_OWORD *)(v21 + 32);
    long long v34 = *(_OWORD *)(v21 + 64);
    *(_OWORD *)(v20 + 48) = *(_OWORD *)(v21 + 48);
    *(_OWORD *)(v20 + 64) = v34;
    *(_OWORD *)(v20 + 16) = v32;
    *(_OWORD *)(v20 + 32) = v33;
    long long v35 = *(_OWORD *)(v21 + 80);
    long long v36 = *(_OWORD *)(v21 + 96);
    long long v37 = *(_OWORD *)(v21 + 112);
    *(void *)(v20 + 128) = *(void *)(v21 + 128);
    *(_OWORD *)(v20 + 96) = v36;
    *(_OWORD *)(v20 + 112) = v37;
    *(_OWORD *)(v20 + 80) = v35;
  }
  uint64_t v38 = a3[9];
  uint64_t v39 = a1 + v38;
  uint64_t v40 = (long long *)(a2 + v38);
  uint64_t v41 = *(void *)(a1 + v38 + 16);
  uint64_t v42 = *(void *)(a2 + v38 + 16);
  if (v41 == 1)
  {
    if (v42 == 1)
    {
      long long v43 = *v40;
      *(void *)(v39 + 16) = *((void *)v40 + 2);
      *(_OWORD *)uint64_t v39 = v43;
    }
    else
    {
      *(unsigned char *)uint64_t v39 = *(unsigned char *)v40;
      *(void *)(v39 + 8) = *((void *)v40 + 1);
      *(void *)(v39 + 16) = *((void *)v40 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v42 == 1)
  {
    sub_1DE05D370(v39);
    uint64_t v44 = *((void *)v40 + 2);
    *(_OWORD *)uint64_t v39 = *v40;
    *(void *)(v39 + 16) = v44;
  }
  else
  {
    *(unsigned char *)uint64_t v39 = *(unsigned char *)v40;
    *(void *)(v39 + 8) = *((void *)v40 + 1);
    *(void *)(v39 + 16) = *((void *)v40 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v45 = a3[10];
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  *(unsigned char *)uint64_t v46 = *(unsigned char *)(a2 + v45);
  *(void *)(v46 + 8) = *(void *)(a2 + v45 + 8);
  *(void *)(v46 + 16) = *(void *)(a2 + v45 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v46 + 24) = *(unsigned char *)(v47 + 24);
  *(unsigned char *)(v46 + 25) = *(unsigned char *)(v47 + 25);
  *(void *)(v46 + 32) = *(void *)(v47 + 32);
  *(void *)(v46 + 40) = *(void *)(v47 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v46 + 48) = *(unsigned char *)(v47 + 48);
  uint64_t v48 = a3[11];
  uint64_t v49 = a1 + v48;
  uint64_t v50 = a2 + v48;
  uint64_t v51 = *(void *)(a1 + v48 + 8);
  uint64_t v52 = *(void *)(a2 + v48 + 8);
  if (v51)
  {
    if (v52)
    {
      *(void *)uint64_t v49 = *(void *)v50;
      *(void *)(v49 + 8) = *(void *)(v50 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v49 + 16) = *(unsigned char *)(v50 + 16);
      *(unsigned char *)(v49 + 17) = *(unsigned char *)(v50 + 17);
      *(void *)(v49 + 24) = *(void *)(v50 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DE07C4F8(v49);
      long long v53 = *(_OWORD *)(v50 + 16);
      *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
      *(_OWORD *)(v49 + 16) = v53;
    }
  }
  else if (v52)
  {
    *(void *)uint64_t v49 = *(void *)v50;
    *(void *)(v49 + 8) = *(void *)(v50 + 8);
    *(unsigned char *)(v49 + 16) = *(unsigned char *)(v50 + 16);
    *(unsigned char *)(v49 + 17) = *(unsigned char *)(v50 + 17);
    *(void *)(v49 + 24) = *(void *)(v50 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v54 = *(_OWORD *)(v50 + 16);
    *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
    *(_OWORD *)(v49 + 16) = v54;
  }
  uint64_t v55 = a3[12];
  uint64_t v56 = (void *)(a1 + v55);
  uint64_t v57 = (void *)(a2 + v55);
  *uint64_t v56 = *v57;
  v56[1] = v57[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  return a1;
}

uint64_t initializeWithTake for ListenSheetEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  long long v15 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 48) = v15;
  *(void *)(v13 + 127) = *(void *)(v14 + 127);
  long long v16 = *(_OWORD *)(v14 + 112);
  *(_OWORD *)(v13 + 96) = *(_OWORD *)(v14 + 96);
  *(_OWORD *)(v13 + 112) = v16;
  long long v17 = *(_OWORD *)(v14 + 80);
  *(_OWORD *)(v13 + 64) = *(_OWORD *)(v14 + 64);
  *(_OWORD *)(v13 + 80) = v17;
  long long v18 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v18;
  uint64_t v19 = a1 + v12;
  uint64_t v20 = a2 + v12;
  *(void *)(v19 + 32) = *(void *)(v20 + 32);
  long long v21 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v21;
  uint64_t v22 = a3[8];
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(void *)(v24 + 128) = *(void *)(v25 + 128);
  long long v26 = *(_OWORD *)(v25 + 48);
  *(_OWORD *)(v24 + 32) = *(_OWORD *)(v25 + 32);
  *(_OWORD *)(v24 + 48) = v26;
  long long v27 = *(_OWORD *)(v25 + 112);
  *(_OWORD *)(v24 + 96) = *(_OWORD *)(v25 + 96);
  *(_OWORD *)(v24 + 112) = v27;
  long long v28 = *(_OWORD *)(v25 + 80);
  *(_OWORD *)(v24 + 64) = *(_OWORD *)(v25 + 64);
  *(_OWORD *)(v24 + 80) = v28;
  long long v29 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v29;
  uint64_t v30 = a1 + v23;
  uint64_t v31 = a2 + v23;
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  *(void *)(v30 + 16) = *(void *)(v31 + 16);
  uint64_t v32 = a3[10];
  uint64_t v33 = a3[11];
  uint64_t v34 = a1 + v32;
  uint64_t v35 = a2 + v32;
  long long v36 = *(_OWORD *)(v35 + 16);
  *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
  *(_OWORD *)(v34 + 16) = v36;
  *(_OWORD *)(v34 + 32) = *(_OWORD *)(v35 + 32);
  *(unsigned char *)(v34 + 48) = *(unsigned char *)(v35 + 48);
  long long v37 = (_OWORD *)(a1 + v33);
  uint64_t v38 = (_OWORD *)(a2 + v33);
  long long v39 = v38[1];
  *long long v37 = *v38;
  v37[1] = v39;
  uint64_t v40 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v40) = *(unsigned char *)(a2 + v40);
  return a1;
}

uint64_t assignWithTake for ListenSheetEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DE47F330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DE47F350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)uint64_t v12 = *(unsigned char *)(a2 + v11);
  *(_DWORD *)(v12 + 4) = *(_DWORD *)(a2 + v11 + 4);
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(a2 + v11 + 8);
  uint64_t v14 = *(void *)(a2 + v11 + 24);
  *(void *)(v12 + 16) = *(void *)(a2 + v11 + 16);
  *(void *)(v12 + 24) = v14;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 32) = *(unsigned char *)(v13 + 32);
  uint64_t v15 = *(void *)(v13 + 48);
  *(void *)(v12 + 40) = *(void *)(v13 + 40);
  *(void *)(v12 + 48) = v15;
  *(unsigned char *)(v12 + 56) = *(unsigned char *)(v13 + 56);
  *(unsigned char *)(v12 + 57) = *(unsigned char *)(v13 + 57);
  *(void *)(v12 + 64) = *(void *)(v13 + 64);
  swift_bridgeObjectRelease();
  *(void *)(v12 + 72) = *(void *)(v13 + 72);
  *(unsigned char *)(v12 + 80) = *(unsigned char *)(v13 + 80);
  *(_OWORD *)(v12 + 88) = *(_OWORD *)(v13 + 88);
  *(void *)(v12 + 104) = *(void *)(v13 + 104);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 112) = *(unsigned char *)(v13 + 112);
  *(void *)(v12 + 120) = *(void *)(v13 + 120);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 128) = *(unsigned char *)(v13 + 128);
  *(unsigned char *)(v12 + 129) = *(unsigned char *)(v13 + 129);
  *(unsigned char *)(v12 + 130) = *(unsigned char *)(v13 + 130);
  *(unsigned char *)(v12 + 131) = *(unsigned char *)(v13 + 131);
  *(unsigned char *)(v12 + 132) = *(unsigned char *)(v13 + 132);
  *(unsigned char *)(v12 + 133) = *(unsigned char *)(v13 + 133);
  *(unsigned char *)(v12 + 134) = *(unsigned char *)(v13 + 134);
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = *(void *)(a2 + v16 + 8);
  *(void *)uint64_t v17 = *(void *)(a2 + v16);
  *(void *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v17 + 16) = *(unsigned char *)(v18 + 16);
  *(unsigned char *)(v17 + 17) = *(unsigned char *)(v18 + 17);
  uint64_t v20 = *(void *)(v18 + 32);
  *(void *)(v17 + 24) = *(void *)(v18 + 24);
  *(void *)(v17 + 32) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[8];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  if (*(void *)(a1 + v21 + 16))
  {
    uint64_t v24 = *(void *)(v23 + 16);
    if (v24)
    {
      *(_WORD *)uint64_t v22 = *(_WORD *)v23;
      *(void *)(v22 + 8) = *(void *)(v23 + 8);
      *(void *)(v22 + 16) = v24;
      swift_bridgeObjectRelease();
      *(void *)(v22 + 24) = *(void *)(v23 + 24);
      *(void *)(v22 + 32) = *(void *)(v23 + 32);
      swift_bridgeObjectRelease();
      *(void *)(v22 + 40) = *(void *)(v23 + 40);
      swift_bridgeObjectRelease();
      *(void *)(v22 + 48) = *(void *)(v23 + 48);
      swift_bridgeObjectRelease();
      uint64_t v25 = *(void *)(v23 + 64);
      *(void *)(v22 + 56) = *(void *)(v23 + 56);
      *(void *)(v22 + 64) = v25;
      swift_bridgeObjectRelease();
      *(void *)(v22 + 72) = *(void *)(v23 + 72);
      swift_bridgeObjectRelease();
      *(unsigned char *)(v22 + 80) = *(unsigned char *)(v23 + 80);
      uint64_t v26 = *(void *)(v23 + 96);
      *(void *)(v22 + 88) = *(void *)(v23 + 88);
      *(void *)(v22 + 96) = v26;
      swift_bridgeObjectRelease();
      *(void *)(v22 + 104) = *(void *)(v23 + 104);
      *(unsigned char *)(v22 + 112) = *(unsigned char *)(v23 + 112);
      *(void *)(v22 + 120) = *(void *)(v23 + 120);
      swift_bridgeObjectRelease();
      *(void *)(v22 + 128) = *(void *)(v23 + 128);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1DE069980(v22);
  }
  long long v27 = *(_OWORD *)(v23 + 112);
  *(_OWORD *)(v22 + 96) = *(_OWORD *)(v23 + 96);
  *(_OWORD *)(v22 + 112) = v27;
  *(void *)(v22 + 128) = *(void *)(v23 + 128);
  long long v28 = *(_OWORD *)(v23 + 48);
  *(_OWORD *)(v22 + 32) = *(_OWORD *)(v23 + 32);
  *(_OWORD *)(v22 + 48) = v28;
  long long v29 = *(_OWORD *)(v23 + 80);
  *(_OWORD *)(v22 + 64) = *(_OWORD *)(v23 + 64);
  *(_OWORD *)(v22 + 80) = v29;
  long long v30 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v30;
LABEL_6:
  uint64_t v31 = a3[9];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  if (*(void *)(a1 + v31 + 16) == 1)
  {
LABEL_9:
    *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
    *(void *)(v32 + 16) = *(void *)(v33 + 16);
    goto LABEL_11;
  }
  uint64_t v34 = *(void *)(v33 + 16);
  if (v34 == 1)
  {
    sub_1DE05D370(v32);
    goto LABEL_9;
  }
  *(unsigned char *)uint64_t v32 = *(unsigned char *)v33;
  *(void *)(v32 + 8) = *(void *)(v33 + 8);
  *(void *)(v32 + 16) = v34;
  swift_bridgeObjectRelease();
LABEL_11:
  uint64_t v35 = a3[10];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  *(unsigned char *)uint64_t v36 = *(unsigned char *)(a2 + v35);
  uint64_t v38 = *(void *)(a2 + v35 + 16);
  *(void *)(v36 + 8) = *(void *)(a2 + v35 + 8);
  *(void *)(v36 + 16) = v38;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v36 + 24) = *(unsigned char *)(v37 + 24);
  *(unsigned char *)(v36 + 25) = *(unsigned char *)(v37 + 25);
  uint64_t v39 = *(void *)(v37 + 40);
  *(void *)(v36 + 32) = *(void *)(v37 + 32);
  *(void *)(v36 + 40) = v39;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v36 + 48) = *(unsigned char *)(v37 + 48);
  uint64_t v40 = a3[11];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  if (!*(void *)(a1 + v40 + 8))
  {
LABEL_15:
    long long v44 = *(_OWORD *)(v42 + 16);
    *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
    *(_OWORD *)(v41 + 16) = v44;
    goto LABEL_16;
  }
  uint64_t v43 = *(void *)(v42 + 8);
  if (!v43)
  {
    sub_1DE07C4F8(v41);
    goto LABEL_15;
  }
  *(void *)uint64_t v41 = *(void *)v42;
  *(void *)(v41 + 8) = v43;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v41 + 16) = *(unsigned char *)(v42 + 16);
  *(unsigned char *)(v41 + 17) = *(unsigned char *)(v42 + 17);
  *(void *)(v41 + 24) = *(void *)(v42 + 24);
  swift_bridgeObjectRelease();
LABEL_16:
  uint64_t v45 = a3[12];
  uint64_t v46 = (void *)(a1 + v45);
  uint64_t v47 = (uint64_t *)(a2 + v45);
  uint64_t v49 = *v47;
  uint64_t v48 = v47[1];
  *uint64_t v46 = v49;
  v46[1] = v48;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ListenSheetEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DE0F65E4);
}

uint64_t sub_1DE0F65E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DE47F330();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1DE47F350();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 24);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for ListenSheetEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DE0F6710);
}

uint64_t sub_1DE0F6710(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1DE47F330();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_1DE47F350();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_1DE0F6824()
{
  uint64_t result = sub_1DE47F330();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1DE47F350();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ListenSheetEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE0F6A08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListenSheetEvent.Model.CodingKeys()
{
  return &type metadata for ListenSheetEvent.Model.CodingKeys;
}

unint64_t sub_1DE0F6A44()
{
  unint64_t result = qword_1EABA29D8;
  if (!qword_1EABA29D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA29D8);
  }
  return result;
}

unint64_t sub_1DE0F6A9C()
{
  unint64_t result = qword_1EABA29E0;
  if (!qword_1EABA29E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA29E0);
  }
  return result;
}

unint64_t sub_1DE0F6AF4()
{
  unint64_t result = qword_1EABA29E8;
  if (!qword_1EABA29E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA29E8);
  }
  return result;
}

uint64_t sub_1DE0F6B48(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x44656C6369747261 && a2 == 0xEB00000000617461 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001DE4BDDA0 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6569566575737369 && a2 == 0xED00006174614477 || (sub_1DE480660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DE4BEC00)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_1DE480660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t static NewsletterSubscriptionData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void NewsletterSubscriptionData.newsletterSubscription.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *NewsletterSubscriptionData.newsletterSubscription.setter(unsigned char *result)
{
  *unint64_t v1 = *result;
  return result;
}

uint64_t (*NewsletterSubscriptionData.newsletterSubscription.modify())()
{
  return nullsub_1;
}

NewsAnalytics::NewsletterSubscriptionData __swiftcall NewsletterSubscriptionData.init(newsletterSubscription:)(NewsAnalytics::NewsletterSubscriptionData newsletterSubscription)
{
  *unint64_t v1 = *(unsigned char *)newsletterSubscription.newsletterSubscription;
  return newsletterSubscription;
}

unint64_t sub_1DE0F7008()
{
  return 0xD000000000000016;
}

uint64_t sub_1DE0F7024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE0F78DC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DE0F7050(uint64_t a1)
{
  unint64_t v2 = sub_1DE0F7224();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE0F708C(uint64_t a1)
{
  unint64_t v2 = sub_1DE0F7224();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t NewsletterSubscriptionData.encode(to:)(void *a1)
{
  sub_1DE0F7464(0, &qword_1EBEC76A8, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v10 - v6;
  char v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0F7224();
  sub_1DE480790();
  char v11 = v8;
  sub_1DE0F7278();
  sub_1DE4805C0();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DE0F7224()
{
  unint64_t result = qword_1EBEC6358;
  if (!qword_1EBEC6358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC6358);
  }
  return result;
}

unint64_t sub_1DE0F7278()
{
  unint64_t result = qword_1EBEC6380;
  if (!qword_1EBEC6380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC6380);
  }
  return result;
}

uint64_t NewsletterSubscriptionData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_1DE0F7464(0, &qword_1EBEC8D70, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0F7224();
  sub_1DE480770();
  if (!v2)
  {
    sub_1DE0F74C8();
    sub_1DE4804E0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DE0F7464(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE0F7224();
    unint64_t v7 = a3(a1, &type metadata for NewsletterSubscriptionData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1DE0F74C8()
{
  unint64_t result = qword_1EBEC8A60;
  if (!qword_1EBEC8A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC8A60);
  }
  return result;
}

unint64_t sub_1DE0F7520()
{
  unint64_t result = qword_1EBEC6378;
  if (!qword_1EBEC6378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC6378);
  }
  return result;
}

unint64_t sub_1DE0F7578()
{
  unint64_t result = qword_1EBEC6370;
  if (!qword_1EBEC6370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC6370);
  }
  return result;
}

uint64_t sub_1DE0F75CC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return NewsletterSubscriptionData.init(from:)(a1, a2);
}

uint64_t sub_1DE0F75E4(void *a1)
{
  return NewsletterSubscriptionData.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for NewsletterSubscriptionData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE0F76C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NewsletterSubscriptionData()
{
  return &type metadata for NewsletterSubscriptionData;
}

unsigned char *storeEnumTagSinglePayload for NewsletterSubscriptionData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DE0F779CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for NewsletterSubscriptionData.CodingKeys()
{
  return &type metadata for NewsletterSubscriptionData.CodingKeys;
}

unint64_t sub_1DE0F77D8()
{
  unint64_t result = qword_1EABA29F0;
  if (!qword_1EABA29F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA29F0);
  }
  return result;
}

unint64_t sub_1DE0F7830()
{
  unint64_t result = qword_1EBEC6368;
  if (!qword_1EBEC6368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC6368);
  }
  return result;
}

unint64_t sub_1DE0F7888()
{
  unint64_t result = qword_1EBEC6360;
  if (!qword_1EBEC6360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC6360);
  }
  return result;
}

uint64_t sub_1DE0F78DC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000016 && a2 == 0x80000001DE4BEC20)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1DE480660();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t static SearchResponseData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t SearchResponseData.isFeatured.getter()
{
  return *v0;
}

uint64_t SearchResponseData.isFeatured.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

uint64_t (*SearchResponseData.isFeatured.modify())()
{
  return nullsub_1;
}

NewsAnalytics::SearchResponseData __swiftcall SearchResponseData.init(isFeatured:)(NewsAnalytics::SearchResponseData isFeatured)
{
  v1->isFeatured = isFeatured.isFeatured;
  return isFeatured;
}

uint64_t sub_1DE0F79A4()
{
  return 0x7275746165467369;
}

uint64_t sub_1DE0F79C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7275746165467369 && a2 == 0xEA00000000006465)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1DE480660();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DE0F7A64(uint64_t a1)
{
  unint64_t v2 = sub_1DE0F7C24();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE0F7AA0(uint64_t a1)
{
  unint64_t v2 = sub_1DE0F7C24();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SearchResponseData.encode(to:)(void *a1)
{
  sub_1DE0F7DFC(0, &qword_1EABA29F8, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unsigned int v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0F7C24();
  sub_1DE480790();
  sub_1DE480590();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DE0F7C24()
{
  unint64_t result = qword_1EABA2A00;
  if (!qword_1EABA2A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2A00);
  }
  return result;
}

uint64_t SearchResponseData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_1DE0F7DFC(0, &qword_1EABA2A08, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0F7C24();
  sub_1DE480770();
  if (!v2)
  {
    char v10 = sub_1DE4804B0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DE0F7DFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE0F7C24();
    unint64_t v7 = a3(a1, &type metadata for SearchResponseData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1DE0F7E64()
{
  unint64_t result = qword_1EBEC7BE8;
  if (!qword_1EBEC7BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC7BE8);
  }
  return result;
}

unint64_t sub_1DE0F7EBC()
{
  unint64_t result = qword_1EBEC80B0;
  if (!qword_1EBEC80B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC80B0);
  }
  return result;
}

uint64_t sub_1DE0F7F10@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return SearchResponseData.init(from:)(a1, a2);
}

uint64_t sub_1DE0F7F28(void *a1)
{
  sub_1DE0F7DFC(0, &qword_1EABA29F8, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0F7C24();
  sub_1DE480790();
  sub_1DE480590();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unsigned char *storeEnumTagSinglePayload for SearchResponseData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE0F813CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchResponseData()
{
  return &type metadata for SearchResponseData;
}

unsigned char *storeEnumTagSinglePayload for SearchResponseData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DE0F8210);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchResponseData.CodingKeys()
{
  return &type metadata for SearchResponseData.CodingKeys;
}

unint64_t sub_1DE0F824C()
{
  unint64_t result = qword_1EABA2A10;
  if (!qword_1EABA2A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2A10);
  }
  return result;
}

unint64_t sub_1DE0F82A4()
{
  unint64_t result = qword_1EABA2A18;
  if (!qword_1EABA2A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2A18);
  }
  return result;
}

unint64_t sub_1DE0F82FC()
{
  unint64_t result = qword_1EABA2A20;
  if (!qword_1EABA2A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2A20);
  }
  return result;
}

uint64_t static LiveActivityDismissalData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void LiveActivityDismissalData.liveActivityDismissal.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *LiveActivityDismissalData.liveActivityDismissal.setter(unsigned char *result)
{
  *unint64_t v1 = *result;
  return result;
}

uint64_t (*LiveActivityDismissalData.liveActivityDismissal.modify())()
{
  return nullsub_1;
}

NewsAnalytics::LiveActivityDismissalData __swiftcall LiveActivityDismissalData.init(liveActivityDismissal:)(NewsAnalytics::LiveActivityDismissalData liveActivityDismissal)
{
  *unint64_t v1 = *(unsigned char *)liveActivityDismissal.liveActivityDismissal;
  return liveActivityDismissal;
}

unint64_t sub_1DE0F839C()
{
  return 0xD000000000000015;
}

uint64_t sub_1DE0F83B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE0F8BC8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DE0F83E4(uint64_t a1)
{
  unint64_t v2 = sub_1DE0F85B8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE0F8420(uint64_t a1)
{
  unint64_t v2 = sub_1DE0F85B8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t LiveActivityDismissalData.encode(to:)(void *a1)
{
  sub_1DE0F87F8(0, &qword_1EABA2A28, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v7 = (char *)&v10 - v6;
  char v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0F85B8();
  sub_1DE480790();
  char v11 = v8;
  sub_1DE0F860C();
  sub_1DE4805C0();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DE0F85B8()
{
  unint64_t result = qword_1EABA2A30;
  if (!qword_1EABA2A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2A30);
  }
  return result;
}

unint64_t sub_1DE0F860C()
{
  unint64_t result = qword_1EABA2A38;
  if (!qword_1EABA2A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2A38);
  }
  return result;
}

uint64_t LiveActivityDismissalData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_1DE0F87F8(0, &qword_1EABA2A40, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0F85B8();
  sub_1DE480770();
  if (!v2)
  {
    sub_1DE0F885C();
    sub_1DE4804E0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DE0F87F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE0F85B8();
    unint64_t v7 = a3(a1, &type metadata for LiveActivityDismissalData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1DE0F885C()
{
  unint64_t result = qword_1EABA2A48;
  if (!qword_1EABA2A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2A48);
  }
  return result;
}

uint64_t sub_1DE0F88B8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return LiveActivityDismissalData.init(from:)(a1, a2);
}

uint64_t sub_1DE0F88D0(void *a1)
{
  return LiveActivityDismissalData.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for LiveActivityDismissalData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DE0F89B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LiveActivityDismissalData()
{
  return &type metadata for LiveActivityDismissalData;
}

unsigned char *storeEnumTagSinglePayload for LiveActivityDismissalData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DE0F8A88);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LiveActivityDismissalData.CodingKeys()
{
  return &type metadata for LiveActivityDismissalData.CodingKeys;
}

unint64_t sub_1DE0F8AC4()
{
  unint64_t result = qword_1EABA2A50;
  if (!qword_1EABA2A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2A50);
  }
  return result;
}

unint64_t sub_1DE0F8B1C()
{
  unint64_t result = qword_1EABA2A58;
  if (!qword_1EABA2A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2A58);
  }
  return result;
}

unint64_t sub_1DE0F8B74()
{
  unint64_t result = qword_1EABA2A60;
  if (!qword_1EABA2A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2A60);
  }
  return result;
}

uint64_t sub_1DE0F8BC8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x80000001DE4BEC40)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1DE480660();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

double static ScienceData.emptyScienceData.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = 0;
  __asm { FMOV            V0.2D, #1.0 }
  *(_OWORD *)(a1 + 24) = _Q0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 40) = 0;
  double result = 1.0;
  *(_OWORD *)(a1 + 64) = xmmword_1DE4895F0;
  *(void *)(a1 + 80) = 0x3FF0000000000000;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = MEMORY[0x1E4FBC860];
  *(void *)(a1 + 120) = 0;
  *(unsigned char *)(a1 + 128) = 1;
  *(void *)(a1 + 136) = 0;
  *(unsigned char *)(a1 + 144) = 1;
  *(void *)(a1 + 152) = 0;
  *(unsigned char *)(a1 + 160) = 1;
  *(void *)(a1 + 168) = 0;
  *(unsigned char *)(a1 + 176) = 1;
  *(void *)(a1 + 184) = 0;
  *(unsigned char *)(a1 + 192) = 1;
  *(void *)(a1 + 200) = 0;
  *(unsigned char *)(a1 + 208) = 1;
  *(void *)(a1 + 216) = 0;
  *(unsigned char *)(a1 + 224) = 1;
  *(void *)(a1 + 232) = 0;
  *(unsigned char *)(a1 + 240) = 1;
  *(void *)(a1 + 248) = 0;
  *(unsigned char *)(a1 + 256) = 1;
  *(void *)(a1 + 264) = 0;
  *(unsigned char *)(a1 + 272) = 1;
  return result;
}

id ScienceData.feldsparFractionalCohortMemberships.getter()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_1DE0F8DD8(v0);
  swift_bridgeObjectRelease();
  id v1 = objc_allocWithZone(MEMORY[0x1E4F1CA48]);
  char v2 = (void *)sub_1DE480000();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithArray_, v2);

  return v3;
}

id sub_1DE0F8DD8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return (id)v2;
  }
  uint64_t v15 = MEMORY[0x1E4FBC860];
  sub_1DE47B480(0, v1, 0);
  unsigned int v4 = (double *)(a1 + 48);
  uint64_t v2 = v15;
  while (1)
  {
    double v5 = *v4;
    id v6 = objc_allocWithZone(MEMORY[0x1E4F82980]);
    swift_bridgeObjectRetain();
    id result = objc_msgSend(v6, sel_init);
    if (!result) {
      break;
    }
    uint64_t v8 = result;
    uint64_t v9 = (void *)sub_1DE47FE60();
    objc_msgSend(v8, sel_setTagId_, v9);

    *(float *)&double v10 = v5;
    objc_msgSend(v8, sel_setScore_, v10);
    unint64_t v14 = sub_1DE0F8F4C();
    swift_bridgeObjectRelease();
    *(void *)&long long v13 = v8;
    uint64_t v15 = v2;
    unint64_t v12 = *(void *)(v2 + 16);
    unint64_t v11 = *(void *)(v2 + 24);
    if (v12 >= v11 >> 1)
    {
      sub_1DE47B480((char *)(v11 > 1), v12 + 1, 1);
      uint64_t v2 = v15;
    }
    *(void *)(v2 + 16) = v12 + 1;
    sub_1DE0F8F8C(&v13, (_OWORD *)(v2 + 32 * v12 + 32));
    v4 += 3;
    if (!--v1) {
      return (id)v2;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1DE0F8F4C()
{
  unint64_t result = qword_1EABA2A68;
  if (!qword_1EABA2A68)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EABA2A68);
  }
  return result;
}

_OWORD *sub_1DE0F8F8C(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t static PuzzleStatsData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t PuzzleStatsData.playDuration.getter()
{
  return *(void *)v0;
}

uint64_t PuzzleStatsData.playDuration.setter(uint64_t result, char a2)
{
  *(void *)uint64_t v2 = result;
  *(unsigned char *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*PuzzleStatsData.playDuration.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleStatsData.currentStreak.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t PuzzleStatsData.currentStreak.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 16) = result;
  *(unsigned char *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*PuzzleStatsData.currentStreak.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleStatsData.rankId.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleStatsData.rankId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*PuzzleStatsData.rankId.modify())()
{
  return nullsub_1;
}

uint64_t PuzzleStatsData.init(playDuration:currentStreak:rankId:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(void *)a7 = result;
  *(unsigned char *)(a7 + 8) = a2 & 1;
  *(void *)(a7 + 16) = a3;
  *(unsigned char *)(a7 + 24) = a4 & 1;
  *(void *)(a7 + 32) = a5;
  *(void *)(a7 + 40) = a6;
  return result;
}

uint64_t sub_1DE0F90C4()
{
  uint64_t v1 = 0x53746E6572727563;
  if (*v0 != 1) {
    uint64_t v1 = 0x64496B6E6172;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6172754479616C70;
  }
}

uint64_t sub_1DE0F9130@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DE0F9B54(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DE0F9158(uint64_t a1)
{
  unint64_t v2 = sub_1DE0F93A4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DE0F9194(uint64_t a1)
{
  unint64_t v2 = sub_1DE0F93A4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PuzzleStatsData.encode(to:)(void *a1)
{
  sub_1DE0F9628(0, &qword_1EABA2A70, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v7 = (char *)v11 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  int v12 = *(unsigned __int8 *)(v1 + 24);
  v11[1] = *(void *)(v1 + 32);
  void v11[2] = v8;
  v11[0] = *(void *)(v1 + 40);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0F93A4();
  sub_1DE480790();
  char v15 = 0;
  uint64_t v9 = v11[3];
  sub_1DE480570();
  if (!v9)
  {
    char v14 = 1;
    sub_1DE480570();
    char v13 = 2;
    sub_1DE480520();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DE0F93A4()
{
  unint64_t result = qword_1EABA2A78;
  if (!qword_1EABA2A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EABA2A78);
  }
  return result;
}

uint64_t PuzzleStatsData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1DE0F9628(0, &qword_1EABA2A80, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DE0F93A4();
  sub_1DE480770();
  if (!v2)
  {
    char v25 = 0;
    uint64_t v10 = sub_1DE480490();
    char v12 = v11;
    char v24 = 1;
    uint64_t v13 = sub_1DE480490();
    int v22 = v14;
    uint64_t v21 = v13;
    char v23 = 2;
    uint64_t v15 = sub_1DE480440();
    uint64_t v18 = v17;
    uint64_t v19 = *(void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v20 = v15;
    v19(v9, v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)a2 = v10;
    *(unsigned char *)(a2 + 8) = v12 & 1;
    *(void *)(a2 + 16) = v21;
    *(unsigned char *)(a2 + 24) = v22 & 1;
    *(void *)(a2 + 32) = v20;
    *(void *)(a2 + 40) = v18;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1DE0F9628(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DE0F93A4();
    unint64_t v7 = a3(a1, &type metadata for PuzzleStatsData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1DE0F9690()
{
  unint64_t result = qword_1EBEC9810;
  if (!qword_1EBEC9810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC9810);
  }
  return result;
}

unint64_t sub_1DE0F96E8()
{
  unint64_t result = qword_1EBEC9808;
  if (!qword_1EBEC9808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBEC9808);
  }
  return result;
}

uint64_t sub_1DE0F973C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PuzzleStatsData.init(from:)(a1, a2);
}

uint64_t sub_1DE0F9754(void *a1)
{
  return PuzzleStatsData.encode(to:)(a1);
}

uint64_t destroy for PuzzleStatsData()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PuzzleStatsData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PuzzleStatsData(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v3;
  uint64_t v4 = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}