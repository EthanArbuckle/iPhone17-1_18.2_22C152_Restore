uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t objectdestroy_7Tm(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v4 | 7;
  unint64_t v7 = ((*(void *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  swift_release();
  return MEMORY[0x1F4186498](v1, v7, v6);
}

uint64_t objectdestroy_5Tm()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4E30);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t objectdestroy_5Tm_0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE38A8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t objectdestroyTm()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 65, 7);
}

uint64_t objectdestroyTm_0(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 56) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return MEMORY[0x1F4186498](v1, v6, v7);
}

uint64_t objectdestroyTm_1()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t objectdestroyTm_2()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t objectdestroyTm_3()
{
  if (v0[2]) {
    swift_release();
  }
  swift_release();
  swift_release();
  unint64_t v1 = v0[9];
  if (v1 >> 60 != 15) {
    sub_1D5956DF8(v0[8], v1);
  }
  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1Tm(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t objectdestroy_10Tm()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t objectdestroy_16Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 112, 7);
}

uint64_t objectdestroy_10Tm_0()
{
  uint64_t v1 = sub_1D5AB1CE0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 49) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, v6 + 8, v5);
}

uint64_t objectdestroy_263Tm()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t objectdestroy_199Tm(void (*a1)(void))
{
  a1(*(void *)(v1 + 40));
  swift_release();
  return MEMORY[0x1F4186498](v1, 64, 7);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t objectdestroy_115Tm(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));
  return MEMORY[0x1F4186498](v1, 40, 7);
}

uint64_t objectdestroy_222Tm(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));
  swift_release();
  return MEMORY[0x1F4186498](v1, 40, 7);
}

uint64_t objectdestroy_4Tm(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return MEMORY[0x1F4186498](v1, v6, v7);
}

uint64_t objectdestroy_45Tm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t objectdestroy_7Tm_0()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t objectdestroy_30Tm()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 64) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (((*(void *)(v1 + 64) + v3 + 1) & 0xFFFFFFFFFFFFFFFELL) + 9) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  swift_release();
  return MEMORY[0x1F4186498](v0, v5 + 8, v4);
}

uint64_t objectdestroy_2Tm()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, 40, 7);
}

SeymourClient::ExponentialBackoffIntervalProvider __swiftcall ExponentialBackoffIntervalProvider.init(initialBackoffInterval:maxBackoffInterval:factor:)(Swift::Double initialBackoffInterval, Swift::Double_optional maxBackoffInterval, Swift::Double factor)
{
  *(Swift::Double *)uint64_t v4 = initialBackoffInterval;
  *(void *)(v4 + 8) = *(void *)&maxBackoffInterval.is_nil;
  *(unsigned char *)(v4 + 16) = v3 & 1;
  *(Swift::Double *)(v4 + 24) = maxBackoffInterval.value;
  result.maxBackoffInterval.value = maxBackoffInterval.value;
  result.maxBackoffInterval.is_nil = maxBackoffInterval.is_nil;
  result.factor = factor;
  result.currentBackoffInterval = initialBackoffInterval;
  return result;
}

Swift::Double __swiftcall ExponentialBackoffIntervalProvider.nextInterval()()
{
  if (*(unsigned char *)(v0 + 16))
  {
    double v1 = *(double *)v0;
    Swift::Double result = *(double *)v0;
  }
  else
  {
    double v1 = *(double *)v0;
    Swift::Double result = *(double *)(v0 + 8);
    if (*(double *)v0 < result) {
      Swift::Double result = *(double *)v0;
    }
  }
  *(double *)uint64_t v0 = v1 * *(double *)(v0 + 24);
  return result;
}

void sub_1D594AE10()
{
  *uint64_t v0 = *v0 * v0[3];
}

uint64_t dispatch thunk of BackoffIntervalProviding.nextInterval()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t initializeBufferWithCopyOfBuffer for ExponentialBackoffIntervalProvider(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for ExponentialBackoffIntervalProvider(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ExponentialBackoffIntervalProvider(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ExponentialBackoffIntervalProvider()
{
  return &type metadata for ExponentialBackoffIntervalProvider;
}

void type metadata accessor for QualityOfService(uint64_t a1)
{
}

void type metadata accessor for MatchingFlags(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for HKActivityMoveMode(uint64_t a1)
{
}

void type metadata accessor for HKFitnessMode(uint64_t a1)
{
}

void type metadata accessor for CTCellularDataRestrictedState(uint64_t a1)
{
}

uint64_t sub_1D594AF68(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1D594AF88(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for os_activity_scope_state_s(uint64_t a1)
{
}

void sub_1D594AFC4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t ScoreMetric.scale(by:)()
{
  uint64_t v0 = sub_1D5AB2D20();
  MEMORY[0x1F4188790](v0 - 8);
  sub_1D5AB2110();
  sub_1D5AB2120();
  sub_1D5AB2140();
  sub_1D5AB20F0();
  sub_1D5AB3240();
  sub_1D5AB20B0();
  sub_1D5AB3240();
  sub_1D5AB20D0();
  sub_1D5AB3240();
  sub_1D5AB20E0();
  sub_1D5AB3240();
  sub_1D5AB20C0();
  sub_1D5AB3240();
  return sub_1D5AB2100();
}

uint64_t UserBodyMassMetric.applyingTimestampOffset(_:)()
{
  sub_1D5AB3220();
  return sub_1D5AB3230();
}

uint64_t sub_1D594B1C0()
{
  sub_1D5AB3220();
  return sub_1D5AB3230();
}

uint64_t sub_1D594B218()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  double v1 = (void *)sub_1D5AB4DE0();
  id v2 = objc_msgSend(v0, sel_stringArrayForKey_, v1);

  if (v2)
  {
    uint64_t v3 = sub_1D5AB5050();

    uint64_t v4 = *(void *)(v3 + 16);
    if (v4)
    {
      swift_bridgeObjectRetain();
      unint64_t v5 = (uint64_t *)(v3 + 40);
      uint64_t v6 = (char *)MEMORY[0x1E4FBC860];
      do
      {
        uint64_t v7 = *(v5 - 1);
        uint64_t v8 = *v5;
        swift_bridgeObjectRetain();
        char v9 = MEMORY[0x1D94569C0](v7, v8);
        if (v9 != 3)
        {
          char v10 = v9;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v6 = sub_1D5A762F8(0, *((void *)v6 + 2) + 1, 1, v6);
          }
          unint64_t v12 = *((void *)v6 + 2);
          unint64_t v11 = *((void *)v6 + 3);
          if (v12 >= v11 >> 1) {
            uint64_t v6 = sub_1D5A762F8((char *)(v11 > 1), v12 + 1, 1, v6);
          }
          *((void *)v6 + 2) = v12 + 1;
          v6[v12 + 32] = v10;
        }
        v5 += 2;
        --v4;
      }
      while (v4);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v6 = (char *)MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_1D594F32C((uint64_t)v6);
    swift_bridgeObjectRelease();
    return v14;
  }
  else
  {
    return sub_1D5977A2C((uint64_t)&unk_1F2DEB330);
  }
}

void sub_1D594B3F4(uint64_t a1)
{
  id v2 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v3 = v2;
  int64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    id v20 = v2;
    uint64_t v22 = MEMORY[0x1E4FBC860];
    sub_1D594E784(0, v4, 0);
    uint64_t v5 = sub_1D594F1A0(a1);
    uint64_t v7 = v6;
    char v9 = v8 & 1;
    while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(a1 + 32))
    {
      if (((*(void *)(a1 + 56 + (((unint64_t)v5 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
        goto LABEL_15;
      }
      if (*(_DWORD *)(a1 + 36) != v7) {
        goto LABEL_16;
      }
      uint64_t v10 = sub_1D5AB25E0();
      uint64_t v12 = v11;
      unint64_t v14 = *(void *)(v22 + 16);
      unint64_t v13 = *(void *)(v22 + 24);
      if (v14 >= v13 >> 1) {
        sub_1D594E784(v13 > 1, v14 + 1, 1);
      }
      *(void *)(v22 + 16) = v14 + 1;
      uint64_t v15 = v22 + 16 * v14;
      *(void *)(v15 + 32) = v10;
      *(void *)(v15 + 40) = v12;
      uint64_t v16 = sub_1D594F244(v5, v7, v9 & 1, a1);
      uint64_t v5 = v16;
      uint64_t v7 = v17;
      char v9 = v18 & 1;
      if (!--v4)
      {
        sub_1D594B5F8(v16, v17, v18 & 1);
        uint64_t v3 = v20;
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  else
  {
LABEL_11:
    v19 = (void *)sub_1D5AB5040();
    swift_bridgeObjectRelease();
    id v21 = (id)sub_1D5AB4DE0();
    objc_msgSend(v3, sel_setValue_forKey_, v19, v21);
  }
}

uint64_t sub_1D594B5F8(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D594B604(uint64_t a1)
{
  uint64_t result = sub_1D5AB5370();
  int64_t v3 = 0;
  uint64_t v18 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1D5A7B824(&v17, v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1D594B79C(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB3600();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  unint64_t v9 = (char *)&v25 - v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v25 - v10;
  sub_1D5950168((unint64_t *)&unk_1EA728450, MEMORY[0x1E4F9D800]);
  uint64_t result = sub_1D5AB5370();
  int64_t v13 = 0;
  uint64_t v29 = a1;
  uint64_t v30 = result;
  uint64_t v16 = *(void *)(a1 + 64);
  uint64_t v15 = a1 + 64;
  uint64_t v14 = v16;
  uint64_t v17 = 1 << *(unsigned char *)(v15 - 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v14;
  uint64_t v26 = v15;
  int64_t v27 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v28 = v3 + 16;
  while (1)
  {
    if (v19)
    {
      unint64_t v20 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_5;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v22 >= v27) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v26 + 8 * v22);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v27) {
        goto LABEL_23;
      }
      unint64_t v23 = *(void *)(v26 + 8 * v13);
      if (!v23)
      {
        int64_t v13 = v22 + 2;
        if (v22 + 2 >= v27) {
          goto LABEL_23;
        }
        unint64_t v23 = *(void *)(v26 + 8 * v13);
        if (!v23)
        {
          int64_t v13 = v22 + 3;
          if (v22 + 3 >= v27) {
            goto LABEL_23;
          }
          unint64_t v23 = *(void *)(v26 + 8 * v13);
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v19 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_5:
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v11, *(void *)(v29 + 48) + *(void *)(v3 + 72) * v21, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v11, v2);
    sub_1D5A7B9D4((uint64_t)v9, v6);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  }
  int64_t v24 = v22 + 4;
  if (v24 >= v27)
  {
LABEL_23:
    swift_release();
    return v30;
  }
  unint64_t v23 = *(void *)(v26 + 8 * v24);
  if (v23)
  {
    int64_t v13 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v13 >= v27) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v26 + 8 * v13);
    ++v24;
    if (v23) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t Session.applyingTimestampOffset(_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v306 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250D0);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  v312 = (char *)&v277 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  v305 = (char *)&v277 - v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727930);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  v302 = (char *)&v277 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  v304 = (char *)&v277 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250D8);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  v301 = (char *)&v277 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v277 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250E0);
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  v300 = (char *)&v277 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  v313 = (char *)&v277 - v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250E8);
  uint64_t v20 = MEMORY[0x1F4188790](v19 - 8);
  v299 = (char *)&v277 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  unint64_t v23 = (char *)&v277 - v22;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250F0);
  uint64_t v25 = MEMORY[0x1F4188790](v24 - 8);
  v298 = (char *)&v277 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  v311 = (char *)&v277 - v27;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250F8);
  uint64_t v29 = MEMORY[0x1F4188790](v28 - 8);
  v297 = (char *)&v277 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  v32 = (char *)&v277 - v31;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA727900);
  MEMORY[0x1F4188790](v33 - 8);
  v309 = (char *)&v277 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725100);
  uint64_t v36 = MEMORY[0x1F4188790](v35 - 8);
  v296 = (char *)&v277 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v36);
  v308 = (char *)&v277 - v38;
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725108);
  MEMORY[0x1F4188790](v39 - 8);
  v284 = (char *)&v277 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725110);
  uint64_t v42 = MEMORY[0x1F4188790](v41 - 8);
  v295 = (char *)&v277 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v42);
  v45 = (char *)&v277 - v44;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725118);
  uint64_t v47 = MEMORY[0x1F4188790](v46 - 8);
  v294 = (char *)&v277 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v47);
  v50 = (char *)&v277 - v49;
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725120);
  MEMORY[0x1F4188790](v51 - 8);
  uint64_t v318 = (uint64_t)&v277 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725128);
  MEMORY[0x1F4188790](v53 - 8);
  uint64_t v317 = (uint64_t)&v277 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725130);
  MEMORY[0x1F4188790](v55 - 8);
  uint64_t v316 = (uint64_t)&v277 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725138);
  MEMORY[0x1F4188790](v57 - 8);
  uint64_t v315 = (uint64_t)&v277 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725140);
  uint64_t v60 = MEMORY[0x1F4188790](v59 - 8);
  v293 = (char *)&v277 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v60);
  uint64_t v325 = (uint64_t)&v277 - v62;
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725148);
  uint64_t v64 = MEMORY[0x1F4188790](v63 - 8);
  v292 = (char *)&v277 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v64);
  uint64_t v324 = (uint64_t)&v277 - v66;
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725150);
  uint64_t v68 = MEMORY[0x1F4188790](v67 - 8);
  v291 = (char *)&v277 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v68);
  uint64_t v323 = (uint64_t)&v277 - v70;
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725158);
  uint64_t v72 = MEMORY[0x1F4188790](v71 - 8);
  v290 = (char *)&v277 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v72);
  uint64_t v322 = (uint64_t)&v277 - v74;
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725160);
  MEMORY[0x1F4188790](v75 - 8);
  v283 = (char *)&v277 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725168);
  MEMORY[0x1F4188790](v77 - 8);
  v282 = (char *)&v277 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725170);
  MEMORY[0x1F4188790](v79 - 8);
  v281 = (char *)&v277 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725178);
  uint64_t v82 = MEMORY[0x1F4188790](v81 - 8);
  v289 = (char *)&v277 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v82);
  uint64_t v321 = (uint64_t)&v277 - v84;
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725180);
  uint64_t v86 = MEMORY[0x1F4188790](v85 - 8);
  v288 = (char *)&v277 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v86);
  v89 = (char *)&v277 - v88;
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725188);
  uint64_t v91 = MEMORY[0x1F4188790](v90 - 8);
  v307 = (char *)&v277 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v91);
  uint64_t v320 = (uint64_t)&v277 - v93;
  uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725190);
  uint64_t v95 = MEMORY[0x1F4188790](v94 - 8);
  v287 = (char *)&v277 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v95);
  uint64_t v329 = (uint64_t)&v277 - v97;
  uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725198);
  uint64_t v99 = MEMORY[0x1F4188790](v98 - 8);
  v286 = (char *)&v277 - ((v100 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v99);
  uint64_t v319 = (uint64_t)&v277 - v101;
  uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7251A0);
  uint64_t v103 = MEMORY[0x1F4188790](v102 - 8);
  v280 = (char *)&v277 - ((v104 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v103);
  v279 = (char *)&v277 - v105;
  uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7251A8);
  MEMORY[0x1F4188790](v106 - 8);
  v278 = (char *)&v277 - ((v107 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7251B0);
  MEMORY[0x1F4188790](v108 - 8);
  v336 = (char *)&v277 - ((v109 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v343 = sub_1D5AB2150();
  uint64_t v110 = *(void *)(v343 - 8);
  uint64_t v111 = MEMORY[0x1F4188790](v343);
  v335 = (char *)&v277 - ((v112 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = MEMORY[0x1F4188790](v111);
  v334 = (char *)&v277 - v114;
  MEMORY[0x1F4188790](v113);
  v342 = (char *)&v277 - v115;
  uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7251B8);
  uint64_t v117 = MEMORY[0x1F4188790](v116 - 8);
  v285 = (char *)&v277 - ((v118 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v117);
  v120 = (char *)&v277 - v119;
  uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7251C0);
  MEMORY[0x1F4188790](v121 - 8);
  uint64_t v314 = (uint64_t)&v277 - ((v122 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v337 = v1;
  uint64_t v123 = sub_1D5AB4660();
  uint64_t v124 = (uint64_t)v50;
  int64_t v125 = *(void *)(v123 + 16);
  v338 = v45;
  v339 = v23;
  uint64_t v326 = v124;
  v327 = v120;
  v303 = v14;
  v310 = v32;
  v328 = v89;
  if (v125)
  {
    uint64_t v349 = MEMORY[0x1E4FBC860];
    sub_1D594E7A4(0, v125, 0);
    uint64_t result = sub_1D594F1A4(v123);
    int64_t v127 = result;
    int v129 = v128;
    int v131 = v130 & 1;
    uint64_t v332 = v123;
    uint64_t v333 = v123 + 56;
    uint64_t v341 = v110 + 32;
    uint64_t v330 = v110 + 8;
    uint64_t v331 = v110 + 16;
    uint64_t v132 = v110;
    v133 = v335;
    while ((v127 & 0x8000000000000000) == 0 && v127 < 1 << *(unsigned char *)(v123 + 32))
    {
      if (((*(void *)(v333 + (((unint64_t)v127 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v127) & 1) == 0) {
        goto LABEL_76;
      }
      if (*(_DWORD *)(v123 + 36) != v129) {
        goto LABEL_77;
      }
      int v340 = v131;
      uint64_t v134 = *(void *)(v132 + 72);
      v135 = v334;
      uint64_t v136 = v343;
      (*(void (**)(char *, uint64_t, uint64_t))(v132 + 16))(v334, *(void *)(v123 + 48) + v134 * v127, v343);
      v137 = *(void (**)(char *, char *, uint64_t))(v132 + 32);
      v137(v133, v135, v136);
      sub_1D5AB2110();
      uint64_t v138 = sub_1D5AB2D20();
      uint64_t v139 = (uint64_t)v336;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v138 - 8) + 56))(v336, 1, 1, v138);
      char v348 = 1;
      char v347 = 1;
      char v346 = 1;
      char v345 = 1;
      char v344 = 1;
      sub_1D5AB2130();
      sub_1D594F53C(v139, &qword_1EA7251B0);
      (*(void (**)(char *, uint64_t))(v132 + 8))(v133, v136);
      uint64_t v140 = v349;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D594E7A4(0, *(void *)(v140 + 16) + 1, 1);
        uint64_t v140 = v349;
      }
      unint64_t v142 = *(void *)(v140 + 16);
      unint64_t v141 = *(void *)(v140 + 24);
      if (v142 >= v141 >> 1)
      {
        sub_1D594E7A4(v141 > 1, v142 + 1, 1);
        uint64_t v140 = v349;
      }
      *(void *)(v140 + 16) = v142 + 1;
      v137((char *)(v140+ ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80))+ v142 * v134), v342, v343);
      uint64_t v349 = v140;
      uint64_t v123 = v332;
      uint64_t result = sub_1D594F248(v127, v129, v340 & 1, v332);
      int64_t v127 = result;
      int v129 = v143;
      int v131 = v144 & 1;
      --v125;
      v45 = v338;
      unint64_t v23 = v339;
      if (!v125)
      {
        uint64_t v343 = v140;
        sub_1D594B5F8(result, v143, v131);
        swift_bridgeObjectRelease();
        v89 = v328;
        v120 = v327;
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v343 = MEMORY[0x1E4FBC860];
LABEL_14:
    uint64_t v145 = sub_1D5AB2AC0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v145 - 8) + 56))(v314, 1, 1, v145);
    uint64_t v146 = (uint64_t)v285;
    sub_1D5AB4670();
    uint64_t v147 = sub_1D5AB2490();
    uint64_t v148 = *(void *)(v147 - 8);
    int v149 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v148 + 48))(v146, 1, v147);
    uint64_t v150 = v329;
    uint64_t v151 = (uint64_t)v307;
    if (v149 == 1)
    {
      sub_1D594F53C(v146, &qword_1EA7251B8);
      uint64_t v152 = 1;
    }
    else
    {
      uint64_t v153 = sub_1D5AB2ED0();
      v154 = v278;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v153 - 8) + 56))(v278, 1, 1, v153);
      uint64_t v155 = sub_1D5AB2230();
      v156 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v155 - 8) + 56);
      v157 = v279;
      v156(v279, 1, 1, v155);
      v158 = v280;
      v156(v280, 1, 1, v155);
      v120 = v327;
      v45 = v338;
      unint64_t v23 = v339;
      sub_1D5AB2440();
      sub_1D5AB2480();
      uint64_t v159 = (uint64_t)v158;
      v89 = v328;
      sub_1D594F53C(v159, &qword_1EA7251A0);
      uint64_t v160 = (uint64_t)v157;
      uint64_t v150 = v329;
      sub_1D594F53C(v160, &qword_1EA7251A0);
      uint64_t v161 = (uint64_t)v154;
      uint64_t v151 = (uint64_t)v307;
      sub_1D594F53C(v161, &qword_1EA7251A8);
      (*(void (**)(uint64_t, uint64_t))(v148 + 8))(v146, v147);
      uint64_t v152 = 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v148 + 56))(v120, v152, 1, v147);
    uint64_t v162 = (uint64_t)v286;
    sub_1D5AB4750();
    uint64_t v163 = sub_1D5AB3530();
    uint64_t v164 = *(void *)(v163 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v164 + 48))(v162, 1, v163) == 1)
    {
      sub_1D594F53C(v162, &qword_1EA725198);
      uint64_t v165 = 1;
      uint64_t v166 = v319;
    }
    else
    {
      uint64_t v167 = v162;
      sub_1D5AB3510();
      uint64_t v166 = v319;
      sub_1D5AB3520();
      (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v167, v163);
      uint64_t v165 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v164 + 56))(v166, v165, 1, v163);
    uint64_t v168 = (uint64_t)v287;
    sub_1D5AB4680();
    uint64_t v169 = sub_1D5AB2570();
    uint64_t v170 = *(void *)(v169 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v170 + 48))(v168, 1, v169) == 1)
    {
      sub_1D594F53C(v168, &qword_1EA725190);
      uint64_t v171 = 1;
    }
    else
    {
      sub_1D5AB2550();
      sub_1D5AB2560();
      (*(void (**)(uint64_t, uint64_t))(v170 + 8))(v168, v169);
      uint64_t v171 = 0;
    }
    uint64_t v172 = (uint64_t)v288;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v170 + 56))(v150, v171, 1, v169);
    sub_1D5AB47F0();
    uint64_t v173 = sub_1D5AB4A30();
    uint64_t v174 = *(void *)(v173 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v174 + 48))(v151, 1, v173) == 1)
    {
      sub_1D594F53C(v151, &qword_1EA725188);
      uint64_t v175 = 1;
      uint64_t v176 = v320;
    }
    else
    {
      sub_1D5AB4A10();
      uint64_t v176 = v320;
      sub_1D5AB4A20();
      (*(void (**)(uint64_t, uint64_t))(v174 + 8))(v151, v173);
      uint64_t v175 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v174 + 56))(v176, v175, 1, v173);
    sub_1D5AB46D0();
    uint64_t v177 = sub_1D5AB2D60();
    uint64_t v178 = *(void *)(v177 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v178 + 48))(v172, 1, v177) == 1)
    {
      sub_1D594F53C(v172, &qword_1EA725180);
      uint64_t v179 = 1;
    }
    else
    {
      sub_1D5AB2D40();
      sub_1D5AB2D50();
      (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v172, v177);
      uint64_t v179 = 0;
    }
    uint64_t v180 = (uint64_t)v293;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v178 + 56))(v89, v179, 1, v177);
    uint64_t v181 = (uint64_t)v289;
    sub_1D5AB4730();
    uint64_t v182 = sub_1D5AB31E0();
    uint64_t v183 = *(void *)(v182 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v183 + 48))(v181, 1, v182) == 1)
    {
      sub_1D594F53C(v181, &qword_1EA725178);
      uint64_t v184 = 1;
      uint64_t v185 = v321;
    }
    else
    {
      uint64_t v186 = sub_1D5AB3AA0();
      uint64_t v187 = (uint64_t)v281;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v186 - 8) + 56))(v281, 1, 1, v186);
      uint64_t v188 = sub_1D5AB3B00();
      uint64_t v189 = (uint64_t)v282;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v188 - 8) + 56))(v282, 1, 1, v188);
      uint64_t v190 = sub_1D5AB3BF0();
      uint64_t v191 = (uint64_t)v283;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v190 - 8) + 56))(v283, 1, 1, v190);
      uint64_t v192 = v181;
      sub_1D5AB31C0();
      uint64_t v185 = v321;
      sub_1D5AB31D0();
      sub_1D594F53C(v191, &qword_1EA725160);
      sub_1D594F53C(v189, &qword_1EA725168);
      sub_1D594F53C(v187, &qword_1EA725170);
      (*(void (**)(uint64_t, uint64_t))(v183 + 8))(v192, v182);
      uint64_t v184 = 0;
    }
    uint64_t v193 = v324;
    uint64_t v194 = v322;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v183 + 56))(v185, v184, 1, v182);
    uint64_t v195 = (uint64_t)v290;
    sub_1D5AB46A0();
    uint64_t v196 = sub_1D5AB2AF0();
    uint64_t v197 = *(void *)(v196 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v197 + 48))(v195, 1, v196) == 1)
    {
      sub_1D594F53C(v195, &qword_1EA725158);
      uint64_t v198 = 1;
    }
    else
    {
      sub_1D5AB2AD0();
      sub_1D5AB2AE0();
      (*(void (**)(uint64_t, uint64_t))(v197 + 8))(v195, v196);
      uint64_t v198 = 0;
    }
    uint64_t v199 = (uint64_t)v291;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v197 + 56))(v194, v198, 1, v196);
    sub_1D5AB4650();
    uint64_t v200 = sub_1D5AB22E0();
    uint64_t v201 = *(void *)(v200 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v201 + 48))(v199, 1, v200) == 1)
    {
      sub_1D594F53C(v199, &qword_1EA725150);
      uint64_t v202 = 1;
      uint64_t v203 = v323;
    }
    else
    {
      sub_1D5AB22B0();
      uint64_t v203 = v323;
      sub_1D5AB22D0();
      (*(void (**)(uint64_t, uint64_t))(v201 + 8))(v199, v200);
      uint64_t v202 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v201 + 56))(v203, v202, 1, v200);
    uint64_t v204 = (uint64_t)v292;
    sub_1D5AB4710();
    uint64_t v205 = sub_1D5AB2F30();
    uint64_t v206 = *(void *)(v205 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v206 + 48))(v204, 1, v205) == 1)
    {
      sub_1D594F53C(v204, &qword_1EA725148);
      uint64_t v207 = 1;
    }
    else
    {
      sub_1D5AB2F10();
      sub_1D5AB2F20();
      (*(void (**)(uint64_t, uint64_t))(v206 + 8))(v204, v205);
      uint64_t v207 = 0;
    }
    uint64_t v208 = (uint64_t)v300;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v206 + 56))(v193, v207, 1, v205);
    sub_1D5AB46E0();
    uint64_t v209 = sub_1D5AB2DC0();
    uint64_t v210 = *(void *)(v209 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v210 + 48))(v180, 1, v209) == 1)
    {
      sub_1D594F53C(v180, &qword_1EA725140);
      uint64_t v211 = 1;
      uint64_t v212 = v325;
    }
    else
    {
      uint64_t v213 = v180;
      sub_1D5AB2DA0();
      uint64_t v212 = v325;
      sub_1D5AB2DB0();
      (*(void (**)(uint64_t, uint64_t))(v210 + 8))(v213, v209);
      uint64_t v211 = 0;
    }
    uint64_t v214 = (uint64_t)v294;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v210 + 56))(v212, v211, 1, v209);
    uint64_t v215 = sub_1D5AB1E10();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v215 - 8) + 56))(v315, 1, 1, v215);
    uint64_t v216 = sub_1D5AB35D0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v216 - 8) + 56))(v316, 1, 1, v216);
    uint64_t v217 = sub_1D5AB2FC0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v217 - 8) + 56))(v317, 1, 1, v217);
    uint64_t v218 = sub_1D5AB3E90();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v218 - 8) + 56))(v318, 1, 1, v218);
    sub_1D5AB4630();
    uint64_t v219 = sub_1D5AB1E70();
    uint64_t v220 = *(void *)(v219 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v220 + 48))(v214, 1, v219) == 1)
    {
      sub_1D594F53C(v214, &qword_1EA725118);
      uint64_t v221 = 1;
      uint64_t v222 = (uint64_t)v295;
      uint64_t v223 = v326;
    }
    else
    {
      sub_1D5AB1E50();
      uint64_t v223 = v326;
      sub_1D5AB1E60();
      (*(void (**)(uint64_t, uint64_t))(v220 + 8))(v214, v219);
      uint64_t v221 = 0;
      uint64_t v222 = (uint64_t)v295;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v220 + 56))(v223, v221, 1, v219);
    sub_1D5AB47E0();
    uint64_t v224 = sub_1D5AB4970();
    uint64_t v225 = *(void *)(v224 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v225 + 48))(v222, 1, v224) == 1)
    {
      sub_1D594F53C(v222, &qword_1EA725110);
      uint64_t v226 = 1;
    }
    else
    {
      sub_1D5AB4940();
      uint64_t v227 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7251C8);
      uint64_t v228 = (uint64_t)v284;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v227 - 8) + 56))(v284, 1, 1, v227);
      sub_1D5AB4960();
      sub_1D594F53C(v228, &qword_1EA725108);
      (*(void (**)(uint64_t, uint64_t))(v225 + 8))(v222, v224);
      uint64_t v226 = 0;
    }
    uint64_t v229 = (uint64_t)v301;
    uint64_t v230 = (uint64_t)v310;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v225 + 56))(v45, v226, 1, v224);
    uint64_t v231 = (uint64_t)v296;
    sub_1D5AB46B0();
    uint64_t v232 = sub_1D5AB2B30();
    uint64_t v233 = *(void *)(v232 - 8);
    int v234 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v233 + 48))(v231, 1, v232);
    v235 = v308;
    if (v234 == 1)
    {
      sub_1D594F53C(v231, &qword_1EA725100);
      uint64_t v236 = 1;
    }
    else
    {
      sub_1D5AB2B10();
      sub_1D5AB2B20();
      (*(void (**)(uint64_t, uint64_t))(v233 + 8))(v231, v232);
      uint64_t v236 = 0;
    }
    uint64_t v237 = (uint64_t)v297;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v233 + 56))(v235, v236, 1, v232);
    uint64_t v238 = sub_1D5AB2DF0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v238 - 8) + 56))(v309, 1, 1, v238);
    sub_1D5AB4780();
    uint64_t v239 = sub_1D5AB3A00();
    uint64_t v240 = *(void *)(v239 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v240 + 48))(v237, 1, v239) == 1)
    {
      sub_1D594F53C(v237, &qword_1EA7250F8);
      uint64_t v241 = 1;
    }
    else
    {
      sub_1D5AB39E0();
      sub_1D5AB39F0();
      (*(void (**)(uint64_t, uint64_t))(v240 + 8))(v237, v239);
      uint64_t v241 = 0;
    }
    uint64_t v242 = v343;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v240 + 56))(v230, v241, 1, v239);
    uint64_t v343 = sub_1D594F3A0(v242);
    swift_bridgeObjectRelease();
    uint64_t v243 = (uint64_t)v298;
    sub_1D5AB4640();
    uint64_t v244 = sub_1D5AB2180();
    uint64_t v245 = *(void *)(v244 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v245 + 48))(v243, 1, v244) == 1)
    {
      sub_1D594F53C(v243, &qword_1EA7250F0);
      uint64_t v246 = 1;
      v247 = v311;
    }
    else
    {
      sub_1D5AB2160();
      v247 = v311;
      sub_1D5AB2170();
      (*(void (**)(uint64_t, uint64_t))(v245 + 8))(v243, v244);
      uint64_t v246 = 0;
    }
    uint64_t v248 = (uint64_t)v303;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v245 + 56))(v247, v246, 1, v244);
    uint64_t v249 = (uint64_t)v299;
    sub_1D5AB4700();
    uint64_t v250 = sub_1D5AB2E60();
    uint64_t v251 = *(void *)(v250 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v251 + 48))(v249, 1, v250) == 1)
    {
      sub_1D594F53C(v249, &qword_1EA7250E8);
      uint64_t v252 = 1;
    }
    else
    {
      sub_1D5AB2E40();
      sub_1D5AB2E50();
      (*(void (**)(uint64_t, uint64_t))(v251 + 8))(v249, v250);
      uint64_t v252 = 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v251 + 56))(v23, v252, 1, v250);
    sub_1D5AB46C0();
    uint64_t v253 = sub_1D5AB3250();
    uint64_t v254 = *(void *)(v253 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v254 + 48))(v208, 1, v253) == 1)
    {
      sub_1D594F53C(v208, &qword_1EA7250E0);
      uint64_t v255 = 1;
      v256 = v313;
    }
    else
    {
      sub_1D5AB3220();
      v256 = v313;
      sub_1D5AB3230();
      (*(void (**)(uint64_t, uint64_t))(v254 + 8))(v208, v253);
      uint64_t v255 = 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v254 + 56))(v256, v255, 1, v253);
    sub_1D5AB47A0();
    uint64_t v257 = sub_1D5AB3B50();
    uint64_t v258 = *(void *)(v257 - 8);
    int v259 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v258 + 48))(v229, 1, v257);
    uint64_t v260 = (uint64_t)v302;
    if (v259 == 1)
    {
      sub_1D594F53C(v229, &qword_1EA7250D8);
      uint64_t v261 = 1;
    }
    else
    {
      sub_1D5AB3B30();
      sub_1D5AB3B40();
      (*(void (**)(uint64_t, uint64_t))(v258 + 8))(v229, v257);
      uint64_t v261 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v258 + 56))(v248, v261, 1, v257);
    sub_1D5AB47C0();
    uint64_t v262 = sub_1D5AB48E0();
    uint64_t v263 = *(void *)(v262 - 8);
    int v264 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v263 + 48))(v260, 1, v262);
    uint64_t v265 = (uint64_t)v304;
    if (v264 == 1)
    {
      sub_1D594F53C(v260, &qword_1EA727930);
      uint64_t v266 = 1;
    }
    else
    {
      sub_1D5AB48B0();
      sub_1D5AB48D0();
      (*(void (**)(uint64_t, uint64_t))(v263 + 8))(v260, v262);
      uint64_t v266 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v263 + 56))(v265, v266, 1, v262);
    sub_1D5AB4790();
    uint64_t v267 = (uint64_t)v312;
    uint64_t v268 = sub_1D5AB3A50();
    uint64_t v269 = *(void *)(v268 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v269 + 48))(v267, 1, v268) == 1)
    {
      sub_1D594F53C(v267, &qword_1EA7250D0);
      uint64_t v270 = 1;
      uint64_t v271 = (uint64_t)v313;
      uint64_t v272 = (uint64_t)v305;
    }
    else
    {
      sub_1D5AB3A30();
      uint64_t v272 = (uint64_t)v305;
      sub_1D5AB3A40();
      (*(void (**)(uint64_t, uint64_t))(v269 + 8))(v267, v268);
      uint64_t v270 = 0;
      uint64_t v271 = (uint64_t)v313;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v269 + 56))(v272, v270, 1, v268);
    uint64_t v273 = (uint64_t)v311;
    uint64_t v274 = (uint64_t)v309;
    uint64_t v275 = (uint64_t)v308;
    uint64_t v276 = (uint64_t)v338;
    sub_1D5AB47D0();
    swift_bridgeObjectRelease();
    sub_1D594F53C(v272, &qword_1EA7250D0);
    sub_1D594F53C(v265, &qword_1EA727930);
    sub_1D594F53C(v248, &qword_1EA7250D8);
    sub_1D594F53C(v271, &qword_1EA7250E0);
    sub_1D594F53C((uint64_t)v339, &qword_1EA7250E8);
    sub_1D594F53C(v273, &qword_1EA7250F0);
    sub_1D594F53C((uint64_t)v310, &qword_1EA7250F8);
    sub_1D594F53C(v274, (uint64_t *)&unk_1EA727900);
    sub_1D594F53C(v275, &qword_1EA725100);
    sub_1D594F53C(v276, &qword_1EA725110);
    sub_1D594F53C(v326, &qword_1EA725118);
    sub_1D594F53C(v318, &qword_1EA725120);
    sub_1D594F53C(v317, &qword_1EA725128);
    sub_1D594F53C(v316, &qword_1EA725130);
    sub_1D594F53C(v315, &qword_1EA725138);
    sub_1D594F53C(v325, &qword_1EA725140);
    sub_1D594F53C(v324, &qword_1EA725148);
    sub_1D594F53C(v323, &qword_1EA725150);
    sub_1D594F53C(v322, &qword_1EA725158);
    sub_1D594F53C(v321, &qword_1EA725178);
    sub_1D594F53C((uint64_t)v328, &qword_1EA725180);
    sub_1D594F53C(v320, &qword_1EA725188);
    sub_1D594F53C(v329, &qword_1EA725190);
    sub_1D594F53C(v319, &qword_1EA725198);
    sub_1D594F53C((uint64_t)v327, &qword_1EA7251B8);
    return sub_1D594F53C(v314, &qword_1EA7251C0);
  }
  return result;
}

uint64_t sub_1D594E784(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D594E96C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1D594E7A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D594EF58(a1, a2, a3, (void *)*v3, &qword_1EA725210, MEMORY[0x1E4F9C258]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1D594E7E0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D594EAD8(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1D594E800(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D594EF58(a1, a2, a3, (void *)*v3, &qword_1EA725200, MEMORY[0x1E4F9CB40]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1D594E83C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D594EC9C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1D594E85C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D594EE08(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1D594E87C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D594EF58(a1, a2, a3, (void *)*v3, &qword_1EA7251F0, (uint64_t (*)(void))type metadata accessor for RemoteBrowsingJournalEntry);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1D594E8B8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D594EF58(a1, a2, a3, (void *)*v3, &qword_1EA7251E8, MEMORY[0x1E4F9E628]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1D594E8F4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D594EF58(a1, a2, a3, (void *)*v3, &qword_1EA7251E0, MEMORY[0x1E4F9C378]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1D594E930(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D594EF58(a1, a2, a3, (void *)*v3, &qword_1EA7251D8, MEMORY[0x1E4F9E5C0]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1D594E96C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE47C8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1D5AB59C0();
  __break(1u);
  return result;
}

uint64_t sub_1D594EAD8(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4BC8);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4B88);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1D5AB59C0();
  __break(1u);
  return result;
}

uint64_t sub_1D594EC7C(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1D594EF58(a1, a2, a3, a4, &qword_1EA725200, MEMORY[0x1E4F9CB40]);
}

uint64_t sub_1D594EC9C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7251F8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1D5AB59C0();
  __break(1u);
  return result;
}

uint64_t sub_1D594EE08(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE1210);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1D5AB59C0();
  __break(1u);
  return result;
}

uint64_t sub_1D594EF58(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_1D5AB59C0();
  __break(1u);
  return result;
}

uint64_t sub_1D594F1A4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  unint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_1D594F248(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1D594F32C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1D59500C0();
  uint64_t result = sub_1D5AB5370();
  uint64_t v7 = result;
  if (v2)
  {
    unint64_t v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v5 = *v4++;
      sub_1D5A7B2E4(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1D594F3A0(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB2150();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  char v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_1D5950168(&qword_1EA727F90, MEMORY[0x1E4F9C258]);
  uint64_t result = sub_1D5AB5370();
  uint64_t v17 = result;
  if (v9)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v15 = *(void *)(v11 + 56);
    do
    {
      v12(v6, v14, v2);
      sub_1D5A7B500((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v11 - 8))(v8, v2);
      v14 += v15;
      --v9;
    }
    while (v9);
    return v17;
  }
  return result;
}

uint64_t sub_1D594F53C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1D594F598(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1D5AB5370();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1D5A7B824(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1D594F630(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB41C0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_1D5950168(&qword_1EA727FC0, MEMORY[0x1E4F9E868]);
  uint64_t result = sub_1D5AB5370();
  uint64_t v17 = result;
  if (v9)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v15 = *(void *)(v11 + 56);
    do
    {
      v12(v6, v14, v2);
      sub_1D5A7DC60((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v11 - 8))(v8, v2);
      v14 += v15;
      --v9;
    }
    while (v9);
    return v17;
  }
  return result;
}

uint64_t sub_1D594F7CC(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB49D0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_1D5950168(&qword_1EA725208, MEMORY[0x1E4F9EED0]);
  uint64_t result = sub_1D5AB5370();
  uint64_t v17 = result;
  if (v9)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v15 = *(void *)(v11 + 56);
    do
    {
      v12(v6, v14, v2);
      sub_1D5A7D2F4((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v11 - 8))(v8, v2);
      v14 += v15;
      --v9;
    }
    while (v9);
    return v17;
  }
  return result;
}

uint64_t sub_1D594F968(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB3010();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_1D5950168((unint64_t *)&unk_1EA728070, MEMORY[0x1E4F9CE78]);
  uint64_t result = sub_1D5AB5370();
  uint64_t v17 = result;
  if (v9)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v15 = *(void *)(v11 + 56);
    do
    {
      v12(v6, v14, v2);
      sub_1D5A7C988((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v11 - 8))(v8, v2);
      v14 += v15;
      --v9;
    }
    while (v9);
    return v17;
  }
  return result;
}

uint64_t sub_1D594FB04(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB2FF0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_1D5950168(&qword_1EA727FF0, MEMORY[0x1E4F9CE40]);
  uint64_t result = sub_1D5AB5370();
  uint64_t v17 = result;
  if (v9)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v15 = *(void *)(v11 + 56);
    do
    {
      v12(v6, v14, v2);
      sub_1D5A7BCF8((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v11 - 8))(v8, v2);
      v14 += v15;
      --v9;
    }
    while (v9);
    return v17;
  }
  return result;
}

uint64_t sub_1D594FCA0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1D5950114();
  uint64_t result = sub_1D5AB5370();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v5 = *v4++;
      sub_1D5A7E2A8(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1D594FD14(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB22A0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  char v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_1D5950168(&qword_1EA727F30, MEMORY[0x1E4F9C378]);
  uint64_t result = sub_1D5AB5370();
  uint64_t v17 = result;
  if (v9)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v15 = *(void *)(v11 + 56);
    do
    {
      v12(v6, v14, v2);
      sub_1D5A7E4C4((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v11 - 8))(v8, v2);
      v14 += v15;
      --v9;
    }
    while (v9);
    return v17;
  }
  return result;
}

uint64_t sub_1D594FEB0(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB3FE0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  char v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_1D5950168(&qword_1EA7251D0, MEMORY[0x1E4F9E5C0]);
  uint64_t result = sub_1D5AB5370();
  uint64_t v17 = result;
  if (v9)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v15 = *(void *)(v11 + 56);
    do
    {
      v12(v6, v14, v2);
      sub_1D5A7E7E8((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v11 - 8))(v8, v2);
      v14 += v15;
      --v9;
    }
    while (v9);
    return v17;
  }
  return result;
}

uint64_t sub_1D595004C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1D5AB5370();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (unsigned int *)(a1 + 32);
    do
    {
      unsigned int v5 = *v4++;
      sub_1D5A7EB0C(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

unint64_t sub_1D59500C0()
{
  unint64_t result = qword_1EBDE0C50;
  if (!qword_1EBDE0C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE0C50);
  }
  return result;
}

unint64_t sub_1D5950114()
{
  unint64_t result = qword_1EBDE10F8;
  if (!qword_1EBDE10F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE10F8);
  }
  return result;
}

uint64_t sub_1D5950168(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t DisplayPreferences.applyingTimestampOffset(_:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725160);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725168);
  MEMORY[0x1F4188790](v3 - 8);
  unsigned int v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725170);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D5AB3AA0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = sub_1D5AB3B00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 1, 1, v10);
  uint64_t v11 = sub_1D5AB3BF0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v2, 1, 1, v11);
  sub_1D5AB31C0();
  sub_1D5AB31D0();
  sub_1D594F53C((uint64_t)v2, &qword_1EA725160);
  sub_1D594F53C((uint64_t)v5, &qword_1EA725168);
  return sub_1D594F53C((uint64_t)v8, &qword_1EA725170);
}

uint64_t sub_1D59503E4()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725160);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725168);
  MEMORY[0x1F4188790](v3 - 8);
  unsigned int v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725170);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D5AB3AA0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = sub_1D5AB3B00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 1, 1, v10);
  uint64_t v11 = sub_1D5AB3BF0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v2, 1, 1, v11);
  sub_1D5AB31C0();
  sub_1D5AB31D0();
  sub_1D594F53C((uint64_t)v2, &qword_1EA725160);
  sub_1D594F53C((uint64_t)v5, &qword_1EA725168);
  return sub_1D594F53C((uint64_t)v8, &qword_1EA725170);
}

uint64_t BookmarksUpdated.changeset.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB3070();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t BookmarksUpdated.init(changeset:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB3070();
  unsigned int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static BookmarksUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

void sub_1D59506FC(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for BookmarksUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3070();
  unsigned int v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for BookmarksUpdated(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB3070();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for BookmarksUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3070();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for BookmarksUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3070();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for BookmarksUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3070();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for BookmarksUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3070();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for BookmarksUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D5950980);
}

uint64_t sub_1D5950980(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3070();
  unsigned int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for BookmarksUpdated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D5950A00);
}

uint64_t sub_1D5950A00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3070();
  unsigned int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for BookmarksUpdated()
{
  uint64_t result = qword_1EBDE1330;
  if (!qword_1EBDE1330) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D5950ABC()
{
  uint64_t result = sub_1D5AB3070();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t XPCStreamHandler.init(publisher:streams:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_1D5950B78(a1, a3);
  *(void *)(a3 + 40) = a2;
  return result;
}

uint64_t sub_1D5950B78(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

Swift::Void __swiftcall XPCStreamHandler.activate()()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v0;
    sub_1D59513F0();
    swift_bridgeObjectRetain();
    uint64_t v4 = (uint64_t *)(v1 + 56);
    do
    {
      uint64_t v10 = *(v4 - 3);
      unint64_t v11 = *(v4 - 2);
      uint64_t v13 = *(v4 - 1);
      uint64_t v12 = *v4;
      uint64_t v14 = qword_1EBDE5420;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v14 != -1) {
        swift_once();
      }
      uint64_t v15 = sub_1D5AB4B50();
      __swift_project_value_buffer(v15, (uint64_t)qword_1EBDE5400);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_1D5AB4B30();
      os_log_type_t v17 = sub_1D5AB5430();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v23 = v13;
        uint64_t v18 = swift_slowAlloc();
        uint64_t v19 = v3;
        uint64_t v20 = swift_slowAlloc();
        *(void *)&v25[0] = v20;
        *(_DWORD *)uint64_t v18 = 136446210;
        swift_bridgeObjectRetain();
        *(void *)(v18 + 4) = sub_1D5951500(v10, v11, (uint64_t *)v25);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1D5947000, v16, v17, "Registering xpc stream handler: %{public}s", (uint8_t *)v18, 0xCu);
        swift_arrayDestroy();
        uint64_t v21 = v20;
        uint64_t v3 = v19;
        MEMORY[0x1D945AAC0](v21, -1, -1);
        uint64_t v22 = v18;
        uint64_t v13 = v23;
        MEMORY[0x1D945AAC0](v22, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v4 += 4;
      unsigned int v5 = sub_1D5AB54A0();
      sub_1D5951430(v3, (uint64_t)v25);
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = v10;
      *(void *)(v6 + 24) = v11;
      *(void *)(v6 + 32) = v13;
      *(void *)(v6 + 40) = v12;
      long long v7 = v25[1];
      *(_OWORD *)(v6 + 48) = v25[0];
      *(_OWORD *)(v6 + 64) = v7;
      *(_OWORD *)(v6 + 80) = v25[2];
      aBlock[4] = sub_1D59514F0;
      aBlock[5] = v6;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1D5951390;
      aBlock[3] = &block_descriptor_2;
      uint64_t v8 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      uint64_t v9 = sub_1D5AB4E30();
      xpc_set_event_stream_handler((const char *)(v9 + 32), v5, v8);
      swift_release();
      _Block_release(v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
}

void sub_1D5950EC8(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1D5AB4B50();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EBDE5400);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_1D5AB4B30();
  os_log_type_t v12 = sub_1D5AB5430();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v33 = a5;
    uint64_t v13 = a2;
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v35 = v15;
    *(_DWORD *)uint64_t v14 = 136446210;
    swift_bridgeObjectRetain();
    sub_1D5951500(v13, a3, &v35);
    a5 = v33;
    sub_1D5AB5680();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D5947000, v11, v12, "Handling xpc stream event: %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v15, -1, -1);
    MEMORY[0x1D945AAC0](v14, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (xpc_dictionary_get_string(a1, (const char *)*MEMORY[0x1E4F14560]))
  {
    uint64_t v16 = sub_1D5AB4EA0();
    unint64_t v18 = v17;
    swift_bridgeObjectRetain_n();
    uint64_t v19 = sub_1D5AB4B30();
    os_log_type_t v20 = sub_1D5AB5430();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v35 = v22;
      *(_DWORD *)uint64_t v21 = 136446210;
      swift_bridgeObjectRetain();
      sub_1D5951500(v16, v18, &v35);
      sub_1D5AB5680();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D5947000, v19, v20, "Publishing stream event: %{public}s", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v22, -1, -1);
      MEMORY[0x1D945AAC0](v21, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v23 = a6[3];
    uint64_t v24 = a6[4];
    __swift_project_boxed_opaque_existential_1(a6, v23);
    (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v24 + 8))(v16, v18, v23, v24);
    swift_bridgeObjectRelease();
  }
  if (a5 && (uint64_t v25 = sub_1D5AB4E30(), v26 = xpc_dictionary_get_BOOL(a1, (const char *)(v25 + 32)), swift_release(), v26))
  {
    if (xpc_dictionary_create_reply(a1))
    {
      uint64_t v27 = sub_1D5AB4B30();
      os_log_type_t v28 = sub_1D5AB5430();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v29 = 0;
        _os_log_impl(&dword_1D5947000, v27, v28, "Sending xpc stream reply", v29, 2u);
        MEMORY[0x1D945AAC0](v29, -1, -1);
      }

      xpc_dictionary_send_reply();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v30 = sub_1D5AB4B30();
    os_log_type_t v31 = sub_1D5AB5430();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v32 = 0;
      _os_log_impl(&dword_1D5947000, v30, v31, "No reply required", v32, 2u);
      MEMORY[0x1D945AAC0](v32, -1, -1);
    }
  }
}

uint64_t sub_1D5951390(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

unint64_t sub_1D59513F0()
{
  unint64_t result = qword_1EBDE4BC0;
  if (!qword_1EBDE4BC0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBDE4BC0);
  }
  return result;
}

uint64_t sub_1D5951430(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a2, a1);
  *(void *)(a2 + 40) = *(void *)(a1 + 40);
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t sub_1D59514A0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 48);
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 96, 7);
}

void sub_1D59514F0(void *a1)
{
  sub_1D5950EC8(a1, v1[2], v1[3], v1[4], v1[5], v1 + 6);
}

uint64_t sub_1D5951500(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1D59515D4(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1D5951F00((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1D5951F00((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v7;
}

uint64_t sub_1D59515D4(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1D5AB5690();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1D5951790(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1D5AB5870();
  if (!v8)
  {
    sub_1D5AB5910();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1D5AB59C0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1D5951790(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1D5951828(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1D59519A0(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1D59519A0(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1D5951828(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1D5A740EC(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1D5AB5800();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_1D5AB5910();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1D5AB4EB0();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    sub_1D5AB59C0();
    __break(1u);
LABEL_14:
    uint64_t result = sub_1D5AB5910();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1D59519A0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E18);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1D5AB59C0();
  __break(1u);
  return result;
}

uint64_t destroy for XPCStreamHandler(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for XPCStreamHandler(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for XPCStreamHandler(uint64_t *a1, uint64_t *a2)
{
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    unint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *unint64_t v3 = v12;
      }
      else
      {
        size_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for XPCStreamHandler(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCStreamHandler(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCStreamHandler(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCStreamHandler()
{
  return &type metadata for XPCStreamHandler;
}

uint64_t sub_1D5951F00(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t NoticePrivacyPreferenceUpdated.preference.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB39B0();
  long long v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t NoticePrivacyPreferenceUpdated.init(preference:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB39B0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static NoticePrivacyPreferenceUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for NoticePrivacyPreferenceUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB39B0();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for NoticePrivacyPreferenceUpdated(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB39B0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for NoticePrivacyPreferenceUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB39B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for NoticePrivacyPreferenceUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB39B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for NoticePrivacyPreferenceUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB39B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for NoticePrivacyPreferenceUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB39B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for NoticePrivacyPreferenceUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D59522B4);
}

uint64_t sub_1D59522B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB39B0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for NoticePrivacyPreferenceUpdated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D5952334);
}

uint64_t sub_1D5952334(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB39B0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for NoticePrivacyPreferenceUpdated()
{
  uint64_t result = qword_1EBDE3CB8;
  if (!qword_1EBDE3CB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D59523F0()
{
  uint64_t result = sub_1D5AB39B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t EngagementBannerRuleInfo.contextProperties.getter()
{
  uint64_t v0 = sub_1D5AB3AC0();
  return sub_1D594B604(v0);
}

uint64_t EngagementBannerRuleInfo.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v6 = sub_1D5AB3AC0();
  if (*(void *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_1D5952584(a1, a2);
    if (v8)
    {
      sub_1D5951F00(*(void *)(v6 + 56) + 32 * v7, (uint64_t)a3);
    }
    else
    {
      *a3 = 0u;
      a3[1] = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    *a3 = 0u;
    a3[1] = 0u;
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_1D5952540(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB5C10();
  return sub_1D59527F8(a1, v2);
}

unint64_t sub_1D5952584(uint64_t a1, uint64_t a2)
{
  sub_1D5AB5C20();
  sub_1D5AB4E60();
  uint64_t v4 = sub_1D5AB5C60();
  return sub_1D5952894(a1, a2, v4);
}

unint64_t sub_1D59525FC(uint64_t a1)
{
  sub_1D5AB3600();
  sub_1D5952F50((unint64_t *)&unk_1EA728450);
  uint64_t v2 = sub_1D5AB4D90();
  return sub_1D5952978(a1, v2);
}

unint64_t sub_1D5952680(__int16 a1)
{
  sub_1D5AB5C20();
  sub_1D5AB5C30();
  uint64_t v2 = sub_1D5AB5C60();
  return sub_1D5952B24(a1, v2);
}

unint64_t sub_1D59526F8(char a1)
{
  sub_1D5AB5C20();
  sub_1D5AB5C30();
  uint64_t v2 = sub_1D5AB5C60();
  return sub_1D5952BD8(a1, v2);
}

unint64_t sub_1D5952770(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB5770();
  return sub_1D5952C8C(a1, v2);
}

unint64_t sub_1D59527B4(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB55A0();
  return sub_1D5952E04(a1, v2);
}

unint64_t sub_1D59527F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1D5952894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1D5AB5AF0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1D5AB5AF0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1D5952978(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_1D5AB3600();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    BOOL v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_1D5952F50(&qword_1EA728090);
      char v15 = sub_1D5AB4DD0();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_1D5952B24(__int16 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = qword_1D5AB6FC0[a1];
    uint64_t v8 = *(void *)(v2 + 48);
    if (qword_1D5AB6FC0[*(__int16 *)(v8 + 2 * result)] != v7)
    {
      uint64_t v9 = ~v5;
      for (unint64_t result = (result + 1) & v9;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v9)
      {
        if (qword_1D5AB6FC0[*(__int16 *)(v8 + 2 * result)] == v7) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1D5952BD8(char a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = qword_1D5AB7A68[a1];
    uint64_t v8 = *(void *)(v2 + 48);
    if (qword_1D5AB7A68[*(char *)(v8 + result)] != v7)
    {
      uint64_t v9 = ~v5;
      for (unint64_t result = (result + 1) & v9;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v9)
      {
        if (qword_1D5AB7A68[*(char *)(v8 + result)] == v7) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1D5952C8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_1D5952D54(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x1D9459B70](v9, a1);
      sub_1D5952DB0((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_1D5952D54(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1D5952DB0(uint64_t a1)
{
  return a1;
}

unint64_t sub_1D5952E04(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_1D5952F10();
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = sub_1D5AB55B0();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = sub_1D5AB55B0();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_1D5952F10()
{
  unint64_t result = qword_1EBDE32E0;
  if (!qword_1EBDE32E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBDE32E0);
  }
  return result;
}

uint64_t sub_1D5952F50(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1D5AB3600();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL static MachTimer.State.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t MachTimer.State.hash(into:)()
{
  return sub_1D5AB5C30();
}

uint64_t MachTimer.State.hashValue.getter()
{
  return sub_1D5AB5C60();
}

BOOL sub_1D5953020(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1D5953038()
{
  return sub_1D5AB5C60();
}

uint64_t sub_1D5953080()
{
  return sub_1D5AB5C30();
}

uint64_t sub_1D59530AC()
{
  return sub_1D5AB5C60();
}

double sub_1D59530F0()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  double v3 = *(double *)(v0 + 16);
  if (*(unsigned char *)(v0 + 40) == 1)
  {
    sub_1D5AB5300();
    double v3 = v3 + v4 - *(double *)(v0 + 24);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  return v3;
}

uint64_t MachTimer.__allocating_init(state:)(char *a1)
{
  uint64_t v2 = swift_allocObject();
  char v3 = *a1;
  *(void *)(v2 + 16) = 0;
  type metadata accessor for UnfairLock();
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = (_DWORD *)swift_slowAlloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = 0;
  *(void *)(v2 + 32) = v4;
  *(unsigned char *)(v2 + 40) = v3;
  sub_1D5AB5300();
  *(void *)(v2 + 24) = v6;
  return v2;
}

uint64_t MachTimer.init(state:)(char *a1)
{
  char v2 = *a1;
  *(void *)(v1 + 16) = 0;
  type metadata accessor for UnfairLock();
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = (_DWORD *)swift_slowAlloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = 0;
  *(void *)(v1 + 32) = v3;
  *(unsigned char *)(v1 + 40) = v2;
  sub_1D5AB5300();
  *(void *)(v1 + 24) = v5;
  return v1;
}

uint64_t sub_1D5953258(char *a1)
{
  char v2 = *a1;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(void *)(v1 + 32) + 16));
  uint64_t result = sub_1D5AB5300();
  if (*(unsigned char *)(v1 + 40) == 1) {
    *(double *)(v1 + 16) = *(double *)(v1 + 16) + v4 - *(double *)(v1 + 24);
  }
  *(double *)(v1 + 24) = v4;
  *(unsigned char *)(v1 + 40) = v2;
  return result;
}

uint64_t sub_1D59532AC()
{
  return sub_1D59532BC(1);
}

uint64_t sub_1D59532B4()
{
  return sub_1D59532BC(0);
}

uint64_t sub_1D59532BC(char a1)
{
  uint64_t v3 = *(void *)(v1 + 32);
  double v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  char v6 = a1;
  sub_1D5953258(&v6);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  return swift_release();
}

uint64_t MachTimer.deinit()
{
  swift_release();
  return v0;
}

uint64_t MachTimer.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

unint64_t sub_1D5953388()
{
  unint64_t result = qword_1EA725218;
  if (!qword_1EA725218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725218);
  }
  return result;
}

uint64_t type metadata accessor for MachTimer()
{
  return self;
}

uint64_t method lookup function for MachTimer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MachTimer);
}

uint64_t dispatch thunk of MachTimer.time.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of MachTimer.__allocating_init(state:)()
{
  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of MachTimer.start()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of MachTimer.stop()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t getEnumTagSinglePayload for MachTimer.State(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MachTimer.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D59535F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1D595361C(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1D5953628(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for MachTimer.State()
{
  return &type metadata for MachTimer.State;
}

SeymourClient::TransportRequest_optional __swiftcall TransportRequest.init(rawValue:)(Swift::Int rawValue)
{
  __int16 v2 = 0;
  switch(rawValue)
  {
    case 0:
      goto LABEL_131;
    case 1:
      __int16 v2 = 1;
      goto LABEL_131;
    case 2:
      __int16 v2 = 2;
      goto LABEL_131;
    case 3:
      __int16 v2 = 3;
      goto LABEL_131;
    case 4:
      __int16 v2 = 4;
      goto LABEL_131;
    case 6:
      __int16 v2 = 5;
      goto LABEL_131;
    case 7:
      __int16 v2 = 6;
      goto LABEL_131;
    case 8:
      __int16 v2 = 7;
      goto LABEL_131;
    case 9:
      __int16 v2 = 8;
      goto LABEL_131;
    case 10:
      __int16 v2 = 9;
      goto LABEL_131;
    case 100:
      __int16 v2 = 10;
      goto LABEL_131;
    case 101:
      __int16 v2 = 11;
      goto LABEL_131;
    case 102:
      __int16 v2 = 12;
      goto LABEL_131;
    case 103:
      __int16 v2 = 13;
      goto LABEL_131;
    case 104:
      __int16 v2 = 14;
      goto LABEL_131;
    case 105:
      __int16 v2 = 15;
      goto LABEL_131;
    case 106:
      __int16 v2 = 16;
      goto LABEL_131;
    case 107:
      __int16 v2 = 17;
      goto LABEL_131;
    case 108:
      __int16 v2 = 18;
      goto LABEL_131;
    case 109:
      __int16 v2 = 19;
      goto LABEL_131;
    case 110:
      __int16 v2 = 20;
      goto LABEL_131;
    case 111:
      __int16 v2 = 21;
      goto LABEL_131;
    case 112:
      __int16 v2 = 22;
      goto LABEL_131;
    case 113:
      __int16 v2 = 23;
      goto LABEL_131;
    case 114:
      __int16 v2 = 24;
      goto LABEL_131;
    case 115:
      __int16 v2 = 25;
      goto LABEL_131;
    case 116:
      __int16 v2 = 26;
      goto LABEL_131;
    case 117:
      __int16 v2 = 27;
      goto LABEL_131;
    case 118:
      __int16 v2 = 28;
      goto LABEL_131;
    case 119:
      __int16 v2 = 29;
      goto LABEL_131;
    case 120:
      __int16 v2 = 30;
      goto LABEL_131;
    case 121:
      __int16 v2 = 31;
      goto LABEL_131;
    case 122:
      __int16 v2 = 32;
      goto LABEL_131;
    case 123:
      __int16 v2 = 33;
      goto LABEL_131;
    case 124:
      __int16 v2 = 34;
      goto LABEL_131;
    case 125:
      __int16 v2 = 35;
      goto LABEL_131;
    case 126:
      __int16 v2 = 36;
      goto LABEL_131;
    case 127:
      __int16 v2 = 37;
      goto LABEL_131;
    case 128:
      __int16 v2 = 38;
      goto LABEL_131;
    case 129:
      __int16 v2 = 39;
      goto LABEL_131;
    case 130:
      __int16 v2 = 40;
      goto LABEL_131;
    case 131:
      __int16 v2 = 41;
      goto LABEL_131;
    case 200:
      __int16 v2 = 42;
      goto LABEL_131;
    case 201:
      __int16 v2 = 43;
      goto LABEL_131;
    case 202:
      __int16 v2 = 44;
      goto LABEL_131;
    case 203:
      __int16 v2 = 45;
      goto LABEL_131;
    case 204:
      __int16 v2 = 46;
      goto LABEL_131;
    case 205:
      __int16 v2 = 47;
      goto LABEL_131;
    case 206:
      __int16 v2 = 48;
      goto LABEL_131;
    case 207:
      __int16 v2 = 49;
      goto LABEL_131;
    case 208:
      __int16 v2 = 50;
      goto LABEL_131;
    case 209:
      __int16 v2 = 51;
      goto LABEL_131;
    case 210:
      __int16 v2 = 52;
      goto LABEL_131;
    case 211:
      __int16 v2 = 53;
      goto LABEL_131;
    case 212:
      __int16 v2 = 54;
      goto LABEL_131;
    case 213:
      __int16 v2 = 55;
      goto LABEL_131;
    case 214:
      __int16 v2 = 56;
      goto LABEL_131;
    case 215:
      __int16 v2 = 57;
      goto LABEL_131;
    case 216:
      __int16 v2 = 58;
      goto LABEL_131;
    case 217:
      __int16 v2 = 59;
      goto LABEL_131;
    case 300:
      __int16 v2 = 60;
      goto LABEL_131;
    case 301:
      __int16 v2 = 61;
      goto LABEL_131;
    case 302:
      __int16 v2 = 62;
      goto LABEL_131;
    case 303:
      __int16 v2 = 63;
      goto LABEL_131;
    case 304:
      __int16 v2 = 64;
      goto LABEL_131;
    case 305:
      __int16 v2 = 65;
      goto LABEL_131;
    case 306:
      __int16 v2 = 66;
      goto LABEL_131;
    case 307:
      __int16 v2 = 67;
      goto LABEL_131;
    case 308:
      __int16 v2 = 68;
      goto LABEL_131;
    case 309:
      __int16 v2 = 69;
      goto LABEL_131;
    case 310:
      __int16 v2 = 70;
      goto LABEL_131;
    case 311:
      __int16 v2 = 71;
      goto LABEL_131;
    case 312:
      __int16 v2 = 72;
      goto LABEL_131;
    case 313:
      __int16 v2 = 73;
      goto LABEL_131;
    case 314:
      __int16 v2 = 74;
      goto LABEL_131;
    case 315:
      __int16 v2 = 75;
      goto LABEL_131;
    case 316:
      __int16 v2 = 76;
      goto LABEL_131;
    case 317:
      __int16 v2 = 77;
      goto LABEL_131;
    case 318:
      __int16 v2 = 78;
      goto LABEL_131;
    case 319:
      __int16 v2 = 79;
      goto LABEL_131;
    case 320:
      __int16 v2 = 80;
      goto LABEL_131;
    case 321:
      __int16 v2 = 81;
      goto LABEL_131;
    case 322:
      __int16 v2 = 82;
      goto LABEL_131;
    case 323:
      __int16 v2 = 83;
      goto LABEL_131;
    case 324:
      __int16 v2 = 84;
      goto LABEL_131;
    case 325:
      __int16 v2 = 85;
      goto LABEL_131;
    case 326:
      __int16 v2 = 86;
      goto LABEL_131;
    case 327:
      __int16 v2 = 87;
      goto LABEL_131;
    case 328:
      __int16 v2 = 88;
      goto LABEL_131;
    case 329:
      __int16 v2 = 89;
      goto LABEL_131;
    case 330:
      __int16 v2 = 90;
      goto LABEL_131;
    case 331:
      __int16 v2 = 91;
      goto LABEL_131;
    case 332:
      __int16 v2 = 92;
      goto LABEL_131;
    case 333:
      __int16 v2 = 93;
      goto LABEL_131;
    case 334:
      __int16 v2 = 94;
      goto LABEL_131;
    case 335:
      __int16 v2 = 95;
      goto LABEL_131;
    case 336:
      __int16 v2 = 96;
      goto LABEL_131;
    case 337:
      __int16 v2 = 97;
      goto LABEL_131;
    case 338:
      __int16 v2 = 98;
      goto LABEL_131;
    case 339:
      __int16 v2 = 99;
      goto LABEL_131;
    case 340:
      __int16 v2 = 100;
      goto LABEL_131;
    case 341:
      __int16 v2 = 101;
      goto LABEL_131;
    case 342:
      __int16 v2 = 102;
      goto LABEL_131;
    case 343:
      __int16 v2 = 103;
      goto LABEL_131;
    case 344:
      __int16 v2 = 104;
      goto LABEL_131;
    case 345:
      __int16 v2 = 105;
      goto LABEL_131;
    case 346:
      __int16 v2 = 106;
      goto LABEL_131;
    case 347:
      __int16 v2 = 107;
      goto LABEL_131;
    case 400:
      __int16 v2 = 108;
      goto LABEL_131;
    case 401:
      __int16 v2 = 109;
      goto LABEL_131;
    case 402:
      __int16 v2 = 110;
      goto LABEL_131;
    case 500:
      __int16 v2 = 111;
      goto LABEL_131;
    case 501:
      __int16 v2 = 112;
      goto LABEL_131;
    case 502:
      __int16 v2 = 113;
      goto LABEL_131;
    case 503:
      __int16 v2 = 114;
      goto LABEL_131;
    case 504:
      __int16 v2 = 115;
      goto LABEL_131;
    case 505:
      __int16 v2 = 116;
      goto LABEL_131;
    case 700:
      __int16 v2 = 117;
      goto LABEL_131;
    case 701:
      __int16 v2 = 118;
      goto LABEL_131;
    case 702:
      __int16 v2 = 119;
      goto LABEL_131;
    case 703:
      __int16 v2 = 120;
      goto LABEL_131;
    case 704:
      __int16 v2 = 121;
      goto LABEL_131;
    case 705:
      __int16 v2 = 122;
      goto LABEL_131;
    case 706:
      __int16 v2 = 123;
      goto LABEL_131;
    case 707:
      __int16 v2 = 124;
      goto LABEL_131;
    case 708:
      __int16 v2 = 125;
      goto LABEL_131;
    case 709:
      __int16 v2 = 126;
      goto LABEL_131;
    case 710:
      __int16 v2 = 127;
LABEL_131:
      __int16 v3 = v2;
LABEL_132:
      *uint64_t v1 = v3;
      break;
    default:
      __int16 v2 = 128;
      switch(rawValue)
      {
        case 711:
          goto LABEL_131;
        case 800:
          __int16 v2 = 129;
          goto LABEL_131;
        case 801:
          __int16 v2 = 130;
          goto LABEL_131;
        case 802:
          __int16 v2 = 131;
          goto LABEL_131;
        case 803:
          __int16 v2 = 132;
          goto LABEL_131;
        case 804:
          __int16 v2 = 133;
          goto LABEL_131;
        case 805:
          __int16 v2 = 134;
          goto LABEL_131;
        case 806:
          __int16 v2 = 135;
          goto LABEL_131;
        case 807:
          __int16 v2 = 136;
          goto LABEL_131;
        case 808:
          __int16 v2 = 137;
          goto LABEL_131;
        case 900:
          __int16 v2 = 138;
          goto LABEL_131;
        case 901:
          __int16 v2 = 139;
          goto LABEL_131;
        case 902:
          __int16 v2 = 140;
          goto LABEL_131;
        case 904:
          __int16 v2 = 141;
          goto LABEL_131;
        case 1000:
          __int16 v2 = 142;
          goto LABEL_131;
        case 1001:
          __int16 v2 = 143;
          goto LABEL_131;
        case 1002:
          __int16 v2 = 144;
          goto LABEL_131;
        case 1003:
          __int16 v2 = 145;
          goto LABEL_131;
        case 1004:
          __int16 v2 = 146;
          goto LABEL_131;
        case 1005:
          __int16 v2 = 147;
          goto LABEL_131;
        case 1006:
          __int16 v2 = 148;
          goto LABEL_131;
        case 1007:
          __int16 v2 = 149;
          goto LABEL_131;
        case 1008:
          __int16 v2 = 150;
          goto LABEL_131;
        case 1009:
          __int16 v2 = 151;
          goto LABEL_131;
        case 1010:
          __int16 v2 = 152;
          goto LABEL_131;
        case 1100:
          __int16 v2 = 153;
          goto LABEL_131;
        case 1101:
          __int16 v2 = 154;
          goto LABEL_131;
        case 1102:
          __int16 v2 = 155;
          goto LABEL_131;
        case 1104:
          __int16 v2 = 156;
          goto LABEL_131;
        case 1105:
          __int16 v2 = 157;
          goto LABEL_131;
        case 1106:
          __int16 v2 = 158;
          goto LABEL_131;
        case 1107:
          __int16 v2 = 159;
          goto LABEL_131;
        case 1108:
          __int16 v2 = 160;
          goto LABEL_131;
        case 1109:
          __int16 v2 = 161;
          goto LABEL_131;
        case 1110:
          __int16 v2 = 162;
          goto LABEL_131;
        case 1113:
          __int16 v2 = 163;
          goto LABEL_131;
        case 1114:
          __int16 v2 = 164;
          goto LABEL_131;
        case 1116:
          __int16 v2 = 165;
          goto LABEL_131;
        case 1117:
          __int16 v2 = 166;
          goto LABEL_131;
        case 1118:
          __int16 v2 = 167;
          goto LABEL_131;
        case 1200:
          __int16 v2 = 168;
          goto LABEL_131;
        case 1201:
          __int16 v2 = 169;
          goto LABEL_131;
        case 1202:
          __int16 v2 = 170;
          goto LABEL_131;
        case 1203:
          __int16 v2 = 171;
          goto LABEL_131;
        case 1204:
          __int16 v2 = 172;
          goto LABEL_131;
        case 1205:
          __int16 v2 = 173;
          goto LABEL_131;
        case 1206:
          __int16 v2 = 174;
          goto LABEL_131;
        case 1207:
          __int16 v2 = 175;
          goto LABEL_131;
        case 1208:
          __int16 v2 = 176;
          goto LABEL_131;
        case 1209:
          __int16 v2 = 177;
          goto LABEL_131;
        case 1210:
          __int16 v2 = 178;
          goto LABEL_131;
        case 1211:
          __int16 v2 = 179;
          goto LABEL_131;
        case 1212:
          __int16 v2 = 180;
          goto LABEL_131;
        case 1213:
          __int16 v2 = 181;
          goto LABEL_131;
        case 1214:
          __int16 v2 = 182;
          goto LABEL_131;
        case 1215:
          __int16 v2 = 183;
          goto LABEL_131;
        case 1216:
          __int16 v2 = 184;
          goto LABEL_131;
        case 1217:
          __int16 v2 = 185;
          goto LABEL_131;
        case 1218:
          __int16 v2 = 186;
          goto LABEL_131;
        case 1219:
          __int16 v2 = 187;
          goto LABEL_131;
        case 1220:
          __int16 v2 = 188;
          goto LABEL_131;
        case 1221:
          __int16 v2 = 189;
          goto LABEL_131;
        case 1222:
          __int16 v2 = 190;
          goto LABEL_131;
        case 1224:
          __int16 v2 = 191;
          goto LABEL_131;
        default:
          __int16 v2 = 192;
          switch(rawValue)
          {
            case 1226:
              goto LABEL_131;
            case 1227:
              __int16 v2 = 193;
              goto LABEL_131;
            case 1228:
              __int16 v2 = 194;
              goto LABEL_131;
            case 1229:
              __int16 v2 = 195;
              goto LABEL_131;
            case 1230:
              __int16 v2 = 196;
              goto LABEL_131;
            case 1231:
              __int16 v2 = 197;
              goto LABEL_131;
            case 1232:
              __int16 v2 = 198;
              goto LABEL_131;
            case 1233:
              __int16 v2 = 199;
              goto LABEL_131;
            case 1234:
              __int16 v2 = 200;
              goto LABEL_131;
            case 1235:
              __int16 v2 = 201;
              goto LABEL_131;
            case 1236:
              __int16 v2 = 202;
              goto LABEL_131;
            case 1237:
              __int16 v2 = 203;
              goto LABEL_131;
            case 1238:
              __int16 v2 = 204;
              goto LABEL_131;
            case 1239:
              __int16 v2 = 205;
              goto LABEL_131;
            case 1240:
              __int16 v2 = 206;
              goto LABEL_131;
            case 1241:
              __int16 v2 = 207;
              goto LABEL_131;
            case 1242:
              __int16 v2 = 208;
              goto LABEL_131;
            case 1243:
              __int16 v2 = 209;
              goto LABEL_131;
            case 1300:
              __int16 v2 = 210;
              goto LABEL_131;
            case 1301:
              __int16 v2 = 211;
              goto LABEL_131;
            case 1302:
              __int16 v2 = 212;
              goto LABEL_131;
            case 1303:
              __int16 v2 = 213;
              goto LABEL_131;
            case 1304:
              __int16 v2 = 214;
              goto LABEL_131;
            case 1305:
              __int16 v2 = 215;
              goto LABEL_131;
            case 1306:
              __int16 v2 = 216;
              goto LABEL_131;
            case 1400:
              __int16 v2 = 217;
              goto LABEL_131;
            case 1401:
              __int16 v2 = 218;
              goto LABEL_131;
            case 1402:
              __int16 v2 = 219;
              goto LABEL_131;
            case 1403:
              __int16 v2 = 220;
              goto LABEL_131;
            case 1404:
              __int16 v2 = 221;
              goto LABEL_131;
            case 1500:
              __int16 v2 = 222;
              goto LABEL_131;
            case 1501:
              __int16 v2 = 223;
              goto LABEL_131;
            case 1502:
              __int16 v2 = 224;
              goto LABEL_131;
            case 1503:
              __int16 v2 = 225;
              goto LABEL_131;
            case 1504:
              __int16 v2 = 226;
              goto LABEL_131;
            case 1505:
              __int16 v2 = 227;
              goto LABEL_131;
            case 1506:
              __int16 v2 = 228;
              goto LABEL_131;
            case 1507:
              __int16 v2 = 229;
              goto LABEL_131;
            case 1508:
              __int16 v2 = 230;
              goto LABEL_131;
            case 1509:
              __int16 v2 = 231;
              goto LABEL_131;
            case 1510:
              __int16 v2 = 232;
              goto LABEL_131;
            case 1511:
              __int16 v2 = 233;
              goto LABEL_131;
            case 1512:
              __int16 v2 = 234;
              goto LABEL_131;
            case 1513:
              __int16 v2 = 235;
              goto LABEL_131;
            case 1514:
              __int16 v2 = 236;
              goto LABEL_131;
            case 1515:
              __int16 v2 = 237;
              goto LABEL_131;
            case 1516:
              __int16 v2 = 238;
              goto LABEL_131;
            case 1600:
              __int16 v2 = 239;
              goto LABEL_131;
            case 1601:
              __int16 v2 = 240;
              goto LABEL_131;
            case 1602:
              __int16 v2 = 241;
              goto LABEL_131;
            case 1603:
              __int16 v2 = 242;
              goto LABEL_131;
            case 1604:
              __int16 v2 = 243;
              goto LABEL_131;
            case 1605:
              __int16 v2 = 244;
              goto LABEL_131;
            case 1606:
              __int16 v2 = 245;
              goto LABEL_131;
            case 1607:
              __int16 v2 = 246;
              goto LABEL_131;
            case 1700:
              __int16 v2 = 247;
              goto LABEL_131;
            case 1701:
              __int16 v2 = 248;
              goto LABEL_131;
            case 1702:
              __int16 v2 = 249;
              goto LABEL_131;
            case 1703:
              __int16 v2 = 250;
              goto LABEL_131;
            case 1704:
              __int16 v2 = 251;
              goto LABEL_131;
            case 1705:
              __int16 v2 = 252;
              goto LABEL_131;
            case 1709:
              __int16 v2 = 253;
              goto LABEL_131;
            case 1710:
              __int16 v2 = 254;
              goto LABEL_131;
            case 1711:
              __int16 v2 = 255;
              goto LABEL_131;
            default:
              if (rawValue > 1900)
              {
                switch(rawValue)
                {
                  case 2000:
                    __int16 v2 = 260;
                    goto LABEL_131;
                  case 2001:
                    __int16 v2 = 261;
                    goto LABEL_131;
                  case 2002:
                    __int16 v2 = 262;
                    goto LABEL_131;
                  case 2003:
                  case 2004:
                  case 2005:
                  case 2006:
                  case 2007:
                  case 2008:
                  case 2009:
                  case 2010:
                  case 2011:
                  case 2012:
                  case 2013:
                  case 2014:
                  case 2015:
                  case 2016:
                  case 2017:
                  case 2018:
                  case 2019:
                  case 2020:
                  case 2021:
                  case 2022:
                  case 2023:
                  case 2024:
                  case 2025:
                  case 2026:
                  case 2027:
                  case 2028:
                  case 2029:
                  case 2030:
                  case 2031:
                  case 2032:
                  case 2033:
                  case 2034:
                  case 2035:
                  case 2036:
                  case 2037:
                  case 2038:
                  case 2039:
                  case 2040:
                  case 2041:
                  case 2042:
                  case 2043:
                  case 2044:
                  case 2045:
                  case 2046:
                  case 2047:
                  case 2048:
                  case 2049:
                  case 2050:
                  case 2051:
                  case 2052:
                  case 2053:
                  case 2054:
                  case 2055:
                  case 2056:
                  case 2057:
                  case 2058:
                  case 2059:
                  case 2060:
                  case 2061:
                  case 2062:
                  case 2063:
                  case 2064:
                  case 2065:
                  case 2066:
                  case 2067:
                  case 2068:
                  case 2069:
                  case 2070:
                  case 2071:
                  case 2072:
                  case 2073:
                  case 2074:
                  case 2075:
                  case 2076:
                  case 2077:
                  case 2078:
                  case 2079:
                  case 2080:
                  case 2081:
                  case 2082:
                  case 2083:
                  case 2084:
                  case 2085:
                  case 2086:
                  case 2087:
                  case 2088:
                  case 2089:
                  case 2090:
                  case 2091:
                  case 2092:
                  case 2093:
                  case 2094:
                  case 2095:
                  case 2096:
                  case 2097:
                  case 2098:
                  case 2099:
                  case 2100:
                  case 2114:
                  case 2115:
                  case 2116:
                  case 2117:
                  case 2118:
                  case 2119:
                  case 2120:
                  case 2121:
                  case 2122:
                  case 2123:
                  case 2124:
                  case 2125:
                  case 2126:
                  case 2127:
                  case 2128:
                  case 2129:
                  case 2130:
                  case 2131:
                  case 2132:
                  case 2133:
                  case 2134:
                  case 2135:
                  case 2136:
                  case 2137:
                  case 2138:
                  case 2139:
                  case 2140:
                  case 2141:
                  case 2142:
                  case 2143:
                  case 2144:
                  case 2145:
                  case 2146:
                  case 2147:
                  case 2148:
                  case 2149:
                  case 2150:
                  case 2151:
                  case 2152:
                  case 2153:
                  case 2154:
                  case 2155:
                  case 2156:
                  case 2157:
                  case 2158:
                  case 2159:
                  case 2160:
                  case 2161:
                  case 2162:
                  case 2163:
                  case 2164:
                  case 2165:
                  case 2166:
                  case 2167:
                  case 2168:
                  case 2169:
                  case 2170:
                  case 2171:
                  case 2172:
                  case 2173:
                  case 2174:
                  case 2175:
                  case 2176:
                  case 2177:
                  case 2178:
                  case 2179:
                  case 2180:
                  case 2181:
                  case 2182:
                  case 2183:
                  case 2184:
                  case 2185:
                  case 2186:
                  case 2187:
                  case 2188:
                  case 2189:
                  case 2190:
                  case 2191:
                  case 2192:
                  case 2193:
                  case 2194:
                  case 2195:
                  case 2196:
                  case 2197:
                  case 2198:
                  case 2199:
                  case 2200:
                  case 2213:
                  case 2214:
                  case 2215:
                  case 2216:
                  case 2217:
                  case 2218:
                  case 2219:
                  case 2220:
                  case 2221:
                  case 2222:
                  case 2223:
                  case 2224:
                  case 2225:
                  case 2226:
                  case 2227:
                  case 2228:
                  case 2229:
                  case 2230:
                  case 2231:
                  case 2232:
                  case 2233:
                  case 2234:
                  case 2235:
                  case 2236:
                  case 2237:
                  case 2238:
                  case 2239:
                  case 2240:
                  case 2241:
                  case 2242:
                  case 2243:
                  case 2244:
                  case 2245:
                  case 2246:
                  case 2247:
                  case 2248:
                  case 2249:
                  case 2250:
                  case 2251:
                  case 2252:
                  case 2253:
                  case 2254:
                  case 2255:
                  case 2256:
                  case 2257:
                  case 2258:
                  case 2259:
                  case 2260:
                  case 2261:
                  case 2262:
                  case 2263:
                  case 2264:
                  case 2265:
                  case 2266:
                  case 2267:
                  case 2268:
                  case 2269:
                  case 2270:
                  case 2271:
                  case 2272:
                  case 2273:
                  case 2274:
                  case 2275:
                  case 2276:
                  case 2277:
                  case 2278:
                  case 2279:
                  case 2280:
                  case 2281:
                  case 2282:
                  case 2283:
                  case 2284:
                  case 2285:
                  case 2286:
                  case 2287:
                  case 2288:
                  case 2289:
                  case 2290:
                  case 2291:
                  case 2292:
                  case 2293:
                  case 2294:
                  case 2295:
                  case 2296:
                  case 2297:
                  case 2298:
                  case 2299:
                  case 2300:
                  case 2305:
                  case 2306:
                  case 2307:
                  case 2308:
                  case 2309:
                  case 2310:
                  case 2311:
                  case 2312:
                  case 2313:
                  case 2314:
                  case 2315:
                  case 2316:
                  case 2317:
                  case 2318:
                  case 2319:
                  case 2320:
                  case 2321:
                  case 2322:
                  case 2323:
                  case 2324:
                  case 2325:
                  case 2326:
                  case 2327:
                  case 2328:
                  case 2329:
                  case 2330:
                  case 2331:
                  case 2332:
                  case 2333:
                  case 2334:
                  case 2335:
                  case 2336:
                  case 2337:
                  case 2338:
                  case 2339:
                  case 2340:
                  case 2341:
                  case 2342:
                  case 2343:
                  case 2344:
                  case 2345:
                  case 2346:
                  case 2347:
                  case 2348:
                  case 2349:
                  case 2350:
                  case 2351:
                  case 2352:
                  case 2353:
                  case 2354:
                  case 2355:
                  case 2356:
                  case 2357:
                  case 2358:
                  case 2359:
                  case 2360:
                  case 2361:
                  case 2362:
                  case 2363:
                  case 2364:
                  case 2365:
                  case 2366:
                  case 2367:
                  case 2368:
                  case 2369:
                  case 2370:
                  case 2371:
                  case 2372:
                  case 2373:
                  case 2374:
                  case 2375:
                  case 2376:
                  case 2377:
                  case 2378:
                  case 2379:
                  case 2380:
                  case 2381:
                  case 2382:
                  case 2383:
                  case 2384:
                  case 2385:
                  case 2386:
                  case 2387:
                  case 2388:
                  case 2389:
                  case 2390:
                  case 2391:
                  case 2392:
                  case 2393:
                  case 2394:
                  case 2395:
                  case 2396:
                  case 2397:
                  case 2398:
                  case 2399:
                  case 2402:
                  case 2403:
                  case 2404:
                  case 2405:
                  case 2406:
                  case 2407:
                  case 2408:
                  case 2409:
                  case 2410:
                  case 2411:
                  case 2412:
                  case 2413:
                  case 2414:
                  case 2415:
                  case 2416:
                  case 2417:
                  case 2418:
                  case 2419:
                  case 2420:
                  case 2421:
                  case 2422:
                  case 2423:
                  case 2424:
                  case 2425:
                  case 2426:
                  case 2427:
                  case 2428:
                  case 2429:
                  case 2430:
                  case 2431:
                  case 2432:
                  case 2433:
                  case 2434:
                  case 2435:
                  case 2436:
                  case 2437:
                  case 2438:
                  case 2439:
                  case 2440:
                  case 2441:
                  case 2442:
                  case 2443:
                  case 2444:
                  case 2445:
                  case 2446:
                  case 2447:
                  case 2448:
                  case 2449:
                  case 2450:
                  case 2451:
                  case 2452:
                  case 2453:
                  case 2454:
                  case 2455:
                  case 2456:
                  case 2457:
                  case 2458:
                  case 2459:
                  case 2460:
                  case 2461:
                  case 2462:
                  case 2463:
                  case 2464:
                  case 2465:
                  case 2466:
                  case 2467:
                  case 2468:
                  case 2469:
                  case 2470:
                  case 2471:
                  case 2472:
                  case 2473:
                  case 2474:
                  case 2475:
                  case 2476:
                  case 2477:
                  case 2478:
                  case 2479:
                  case 2480:
                  case 2481:
                  case 2482:
                  case 2483:
                  case 2484:
                  case 2485:
                  case 2486:
                  case 2487:
                  case 2488:
                  case 2489:
                  case 2490:
                  case 2491:
                  case 2492:
                  case 2493:
                  case 2494:
                  case 2495:
                  case 2496:
                  case 2497:
                  case 2498:
                  case 2499:
                    goto LABEL_270;
                  case 2101:
                    __int16 v2 = 263;
                    goto LABEL_131;
                  case 2102:
                    __int16 v2 = 264;
                    goto LABEL_131;
                  case 2103:
                    __int16 v2 = 265;
                    goto LABEL_131;
                  case 2104:
                    __int16 v2 = 266;
                    goto LABEL_131;
                  case 2105:
                    __int16 v2 = 267;
                    goto LABEL_131;
                  case 2106:
                    __int16 v2 = 268;
                    goto LABEL_131;
                  case 2107:
                    __int16 v2 = 269;
                    goto LABEL_131;
                  case 2108:
                    __int16 v2 = 270;
                    goto LABEL_131;
                  case 2109:
                    __int16 v2 = 271;
                    goto LABEL_131;
                  case 2110:
                    __int16 v2 = 272;
                    goto LABEL_131;
                  case 2111:
                    __int16 v2 = 273;
                    goto LABEL_131;
                  case 2112:
                    __int16 v2 = 274;
                    goto LABEL_131;
                  case 2113:
                    __int16 v2 = 275;
                    goto LABEL_131;
                  case 2201:
                    __int16 v2 = 276;
                    goto LABEL_131;
                  case 2202:
                    __int16 v2 = 277;
                    goto LABEL_131;
                  case 2203:
                    __int16 v2 = 278;
                    goto LABEL_131;
                  case 2204:
                    __int16 v2 = 279;
                    goto LABEL_131;
                  case 2205:
                    __int16 v2 = 280;
                    goto LABEL_131;
                  case 2206:
                    __int16 v2 = 281;
                    goto LABEL_131;
                  case 2207:
                    __int16 v2 = 282;
                    goto LABEL_131;
                  case 2208:
                    __int16 v2 = 283;
                    goto LABEL_131;
                  case 2209:
                    __int16 v2 = 284;
                    goto LABEL_131;
                  case 2210:
                    __int16 v2 = 285;
                    goto LABEL_131;
                  case 2211:
                    __int16 v2 = 286;
                    goto LABEL_131;
                  case 2212:
                    __int16 v2 = 287;
                    goto LABEL_131;
                  case 2301:
                    __int16 v2 = 288;
                    goto LABEL_131;
                  case 2302:
                    __int16 v2 = 289;
                    goto LABEL_131;
                  case 2303:
                    __int16 v2 = 290;
                    goto LABEL_131;
                  case 2304:
                    __int16 v2 = 291;
                    goto LABEL_131;
                  case 2400:
                    __int16 v2 = 292;
                    goto LABEL_131;
                  case 2401:
                    __int16 v2 = 293;
                    goto LABEL_131;
                  case 2500:
                    __int16 v2 = 294;
                    goto LABEL_131;
                  case 2501:
                    __int16 v2 = 295;
                    goto LABEL_131;
                  case 2502:
                    __int16 v2 = 296;
                    goto LABEL_131;
                  case 2503:
                    __int16 v2 = 297;
                    goto LABEL_131;
                  case 2504:
                    __int16 v2 = 298;
                    goto LABEL_131;
                  case 2505:
                    __int16 v2 = 299;
                    goto LABEL_131;
                  case 2506:
                    __int16 v2 = 300;
                    goto LABEL_131;
                  case 2507:
                    __int16 v2 = 301;
                    goto LABEL_131;
                  case 2508:
                    __int16 v2 = 302;
                    goto LABEL_131;
                  case 2509:
                    __int16 v2 = 303;
                    goto LABEL_131;
                  case 2510:
                    __int16 v2 = 304;
                    goto LABEL_131;
                  case 2511:
                    __int16 v2 = 305;
                    goto LABEL_131;
                  case 2512:
                    __int16 v2 = 306;
                    goto LABEL_131;
                  case 2513:
                    __int16 v2 = 307;
                    goto LABEL_131;
                  case 2514:
                    __int16 v2 = 308;
                    goto LABEL_131;
                  case 2515:
                    __int16 v2 = 309;
                    goto LABEL_131;
                  case 2516:
                    __int16 v2 = 310;
                    goto LABEL_131;
                  case 2517:
                    __int16 v2 = 311;
                    goto LABEL_131;
                  case 2518:
                    __int16 v2 = 312;
                    goto LABEL_131;
                  case 2519:
                    __int16 v2 = 313;
                    goto LABEL_131;
                  case 2520:
                    __int16 v2 = 314;
                    goto LABEL_131;
                  case 2521:
                    __int16 v2 = 315;
                    goto LABEL_131;
                  case 2522:
                    __int16 v2 = 316;
                    goto LABEL_131;
                  case 2523:
                    __int16 v2 = 317;
                    goto LABEL_131;
                  case 2524:
                    __int16 v2 = 318;
                    goto LABEL_131;
                  case 2525:
                    __int16 v2 = 319;
                    goto LABEL_131;
                  default:
                    if (rawValue != 1901) {
                      goto LABEL_270;
                    }
                    __int16 v2 = 259;
                    break;
                }
                goto LABEL_131;
              }
              switch(rawValue)
              {
                case 1712:
                  __int16 v2 = 256;
                  goto LABEL_131;
                case 1800:
                  __int16 v2 = 257;
                  goto LABEL_131;
                case 1900:
                  __int16 v2 = 258;
                  goto LABEL_131;
              }
LABEL_270:
              __int16 v3 = 323;
              __int16 v2 = 320;
              switch(rawValue)
              {
                case 2526:
                  goto LABEL_131;
                case 2527:
                  __int16 v2 = 321;
                  goto LABEL_131;
                case 2528:
                  __int16 v2 = 322;
                  goto LABEL_131;
                case 2529:
                  goto LABEL_132;
                case 2530:
                  *uint64_t v1 = 324;
                  break;
                case 2531:
                  *uint64_t v1 = 325;
                  break;
                case 2532:
                  *uint64_t v1 = 326;
                  break;
                case 2533:
                  *uint64_t v1 = 327;
                  break;
                case 2534:
                  *uint64_t v1 = 328;
                  break;
                case 2535:
                  *uint64_t v1 = 329;
                  break;
                case 2536:
                  *uint64_t v1 = 330;
                  break;
                case 2537:
                  *uint64_t v1 = 331;
                  break;
                case 2539:
                  *uint64_t v1 = 332;
                  break;
                case 2540:
                  *uint64_t v1 = 333;
                  break;
                case 2600:
                  *uint64_t v1 = 334;
                  break;
                case 2601:
                  *uint64_t v1 = 335;
                  break;
                case 2602:
                  *uint64_t v1 = 336;
                  break;
                case 2603:
                  *uint64_t v1 = 337;
                  break;
                case 2604:
                  *uint64_t v1 = 338;
                  break;
                case 2605:
                  *uint64_t v1 = 339;
                  break;
                case 2606:
                  *uint64_t v1 = 340;
                  break;
                default:
                  *uint64_t v1 = 341;
                  break;
              }
              break;
          }
          break;
      }
      break;
  }
  return (SeymourClient::TransportRequest_optional)rawValue;
}

uint64_t TransportRequest.rawValue.getter()
{
  return qword_1D5AB8320[*v0];
}

BOOL sub_1D5956680(__int16 *a1, __int16 *a2)
{
  return qword_1D5AB8320[*a1] == qword_1D5AB8320[*a2];
}

unint64_t sub_1D59566A8()
{
  unint64_t result = qword_1EBDE3978;
  if (!qword_1EBDE3978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE3978);
  }
  return result;
}

uint64_t sub_1D59566FC()
{
  return sub_1D5AB5C60();
}

uint64_t sub_1D595674C()
{
  return sub_1D5AB5C30();
}

uint64_t sub_1D5956784()
{
  return sub_1D5AB5C60();
}

SeymourClient::TransportRequest_optional sub_1D59567D0(Swift::Int *a1)
{
  return TransportRequest.init(rawValue:)(*a1);
}

void sub_1D59567D8(void *a1@<X8>)
{
  *a1 = qword_1D5AB8320[*v1];
}

_WORD *__swift_memcpy2_2(_WORD *result, _WORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for TransportRequest(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFEAC) {
    goto LABEL_17;
  }
  if (a2 + 340 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 340 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 340;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 340;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 340;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x155;
  int v8 = v6 - 341;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TransportRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 340 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 340 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFEAC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFEAB)
  {
    unsigned int v6 = ((a2 - 65196) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 + 340;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D5956964);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(_WORD *)unint64_t result = a2 + 340;
        break;
    }
  }
  return result;
}

uint64_t sub_1D595698C(unsigned __int16 *a1)
{
  return *a1;
}

_WORD *sub_1D5956994(_WORD *result, __int16 a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for TransportRequest()
{
  return &type metadata for TransportRequest;
}

uint64_t static BagConstants.profileName.getter()
{
  return 0x7373656E746946;
}

uint64_t static BagConstants.profileVersion.getter()
{
  return 49;
}

ValueMetadata *type metadata accessor for BagConstants()
{
  return &type metadata for BagConstants;
}

void sub_1D59569E0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    char v10 = (void *)Strong;
    if (a3 >> 60 == 15) {
      BOOL v11 = 0;
    }
    else {
      BOOL v11 = (void *)sub_1D5AB1C10();
    }
    v13[4] = a4;
    v13[5] = a5;
    v13[0] = MEMORY[0x1E4F143A8];
    v13[1] = 1107296256;
    v13[2] = sub_1D5956AFC;
    v13[3] = &block_descriptor_3;
    uint64_t v12 = _Block_copy(v13);
    swift_retain();
    swift_release();
    objc_msgSend(v10, sel_receiveRequest_data_completion_, a1, v11, v12);
    _Block_release(v12);
    swift_release();
  }
}

uint64_t sub_1D5956AFC(uint64_t a1, void *a2, void *a3)
{
  unsigned int v4 = a2;
  uint64_t v5 = *(void (**)(void *, unint64_t, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    id v6 = v4;
    unsigned int v4 = (void *)sub_1D5AB1C20();
    unint64_t v8 = v7;
  }
  else
  {
    swift_retain();
    unint64_t v8 = 0xF000000000000000;
  }
  id v9 = a3;
  v5(v4, v8, a3);

  sub_1D5956DE4((uint64_t)v4, v8);
  return swift_release();
}

uint64_t sub_1D5956D88()
{
  swift_weakDestroy();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for XPCExportProxy()
{
  return self;
}

uint64_t sub_1D5956DE4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1D5956DF8(a1, a2);
  }
  return a1;
}

uint64_t sub_1D5956DF8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1D5956E50()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1D5956E88(uint64_t a1, unint64_t a2, uint64_t a3)
{
  sub_1D5AA8808(a1, a2, a3, *(void *)(v3 + 16));
}

void static ServiceSubscriptionObserverUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for ServiceSubscriptionObserverUpdated()
{
  return &type metadata for ServiceSubscriptionObserverUpdated;
}

void sub_1D5956EB4()
{
  qword_1EA725228 = 0;
  unk_1EA725230 = 0;
  byte_1EA725220 = 19;
}

uint64_t HKActivitySummary.activityRings()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v51 = a1;
  uint64_t v2 = sub_1D5AB2230();
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  v50 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v49 = sub_1D5AB2ED0();
  uint64_t v5 = *(void *)(v49 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v49);
  uint64_t v48 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v48 - v8;
  if (qword_1EA724D70 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_1EA725228;
  uint64_t v11 = unk_1EA725230;
  char v12 = byte_1EA725220;
  swift_bridgeObjectRetain();
  sub_1D595764C(v12, v10, v11);
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  if (v14 && sub_1D5AB2EA0() != 2)
  {
    id v28 = objc_msgSend(v1, sel_activeEnergyBurned);
    id v29 = objc_msgSend(v1, sel_activeEnergyBurned);
    id v30 = objc_msgSend(v29, sel__unit);

    objc_msgSend(v28, sel_doubleValueForUnit_, v30);
    id v31 = objc_msgSend(v1, sel_activeEnergyBurnedGoal);
    id v32 = objc_msgSend(v1, sel_activeEnergyBurnedGoal);
    id v33 = objc_msgSend(v32, sel__unit);

    objc_msgSend(v31, sel_doubleValueForUnit_, v33);
    sub_1D5AB2220();
    goto LABEL_10;
  }
  id v15 = objc_msgSend(v1, sel_activityMoveMode);
  if (v15 == (id)2)
  {
    id v16 = objc_msgSend(v1, sel_appleMoveTime);
    id v17 = objc_msgSend(v1, sel_appleMoveTime);
    id v18 = objc_msgSend(v17, sel__unit);

    objc_msgSend(v16, sel_doubleValueForUnit_, v18);
    id v19 = objc_msgSend(v1, sel_appleMoveTimeGoal);
    id v20 = objc_msgSend(v1, sel_appleMoveTimeGoal);
    id v21 = objc_msgSend(v20, sel__unit);

    objc_msgSend(v19, sel_doubleValueForUnit_, v21);
    sub_1D5AB2220();
LABEL_10:
    sub_1D5AB2EB0();
    id v34 = objc_msgSend(v1, sel_appleExerciseTime);
    id v35 = objc_msgSend(v1, sel_appleExerciseTime);
    id v36 = objc_msgSend(v35, sel__unit);

    objc_msgSend(v34, sel_doubleValueForUnit_, v36);
    id v37 = objc_msgSend(v1, sel_appleExerciseTimeGoal);
    id v38 = objc_msgSend(v1, sel_appleExerciseTimeGoal);
    id v39 = objc_msgSend(v38, sel__unit);

    objc_msgSend(v37, sel_doubleValueForUnit_, v39);
    id v40 = objc_msgSend(v1, sel_appleStandHours);
    id v41 = objc_msgSend(v1, sel_appleStandHours);
    id v42 = objc_msgSend(v41, sel__unit);

    objc_msgSend(v40, sel_doubleValueForUnit_, v42);
    id v43 = objc_msgSend(v1, sel_appleStandHoursGoal);
    id v44 = objc_msgSend(v1, sel_appleStandHoursGoal);
    id v45 = objc_msgSend(v44, sel__unit);

    objc_msgSend(v43, sel_doubleValueForUnit_, v45);
    objc_msgSend(v1, sel__isStandalonePhoneSummary);
    uint64_t v46 = v49;
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v48, v9, v49);
    sub_1D5AB2220();
    sub_1D5AB2220();
    objc_msgSend(v1, sel_paused);
    sub_1D5AB5300();
    sub_1D5AB2460();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v9, v46);
  }
  if (v15 == (id)1)
  {
    id v22 = objc_msgSend(v1, sel_activeEnergyBurned);
    id v23 = objc_msgSend(v1, sel_activeEnergyBurned);
    id v24 = objc_msgSend(v23, sel__unit);

    objc_msgSend(v22, sel_doubleValueForUnit_, v24);
    id v25 = objc_msgSend(v1, sel_activeEnergyBurnedGoal);
    id v26 = objc_msgSend(v1, sel_activeEnergyBurnedGoal);
    id v27 = objc_msgSend(v26, sel__unit);

    objc_msgSend(v25, sel_doubleValueForUnit_, v27);
    sub_1D5AB2220();
    goto LABEL_10;
  }
  uint64_t result = sub_1D5AB5920();
  __break(1u);
  return result;
}

uint64_t sub_1D595764C(char a1, uint64_t a2, uint64_t a3)
{
  if (qword_1EBDE4BD0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if ((Platform.internalInstall.getter() & 1) == 0) {
    goto LABEL_18;
  }
  if (qword_1EBDE4BF8 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)qword_1EBDE4BE8;
  LOBYTE(v22) = a1;
  UserDefaultsKeys.rawValue.getter();
  uint64_t v7 = (void *)sub_1D5AB4DE0();
  id v8 = objc_msgSend(v6, sel_stringForKey_, v7, v22);

  if (v8)
  {
    uint64_t v9 = sub_1D5AB4DF0();
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();

    if (a3 && (v9 == a2 && v11 == a3 || (sub_1D5AB5AF0() & 1) != 0))
    {
      swift_bridgeObjectRelease();
LABEL_18:
      swift_bridgeObjectRetain();
      return a2;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    if (!a3) {
      goto LABEL_18;
    }
    uint64_t v9 = 0;
  }
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1D5AB4B50();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EBDE5400);
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_1D5AB4B30();
  os_log_type_t v14 = sub_1D5AB5430();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v23 = v16;
    *(_DWORD *)uint64_t v15 = 136315394;
    unint64_t v17 = UserDefaultsKeys.rawValue.getter();
    sub_1D5951500(v17, v18, &v23);
    sub_1D5AB5680();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE1030);
    uint64_t v19 = sub_1D5AB4E10();
    sub_1D5951500(v19, v20, &v23);
    sub_1D5AB5680();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D5947000, v13, v14, "Non default value set for %s: %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v16, -1, -1);
    MEMORY[0x1D945AAC0](v15, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return v9;
}

uint64_t sub_1D59579B8(char a1, char a2)
{
  if (qword_1EBDE4BD0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (Platform.internalInstall.getter())
  {
    if (qword_1EBDE4BF8 != -1) {
      swift_once();
    }
    uint64_t v4 = (void *)qword_1EBDE4BE8;
    LOBYTE(v17) = a1;
    UserDefaultsKeys.rawValue.getter();
    char v5 = _sSb13SeymourClientE4read4from3keySbSgSo14NSUserDefaultsC_SStFZ_0(v4);
    swift_bridgeObjectRelease();
    if (v5 != 2 && (v5 & 1) != (a2 & 1))
    {
      if (qword_1EBDE5420 != -1) {
        swift_once();
      }
      uint64_t v7 = sub_1D5AB4B50();
      __swift_project_value_buffer(v7, (uint64_t)qword_1EBDE5400);
      id v8 = sub_1D5AB4B30();
      os_log_type_t v9 = sub_1D5AB5430();
      if (os_log_type_enabled(v8, v9))
      {
        uint64_t v10 = swift_slowAlloc();
        uint64_t v11 = swift_slowAlloc();
        uint64_t v17 = v11;
        *(_DWORD *)uint64_t v10 = 136315394;
        unint64_t v12 = UserDefaultsKeys.rawValue.getter();
        sub_1D5951500(v12, v13, &v17);
        sub_1D5AB5680();
        swift_bridgeObjectRelease();
        *(_WORD *)(v10 + 12) = 2080;
        uint64_t v14 = sub_1D5AB4E10();
        sub_1D5951500(v14, v15, &v17);
        sub_1D5AB5680();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D5947000, v8, v9, "Non default value set for %s: %s", (uint8_t *)v10, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1D945AAC0](v11, -1, -1);
        MEMORY[0x1D945AAC0](v10, -1, -1);
      }

      a2 = v5;
    }
  }
  return a2 & 1;
}

double sub_1D5957C6C(char a1, double a2)
{
  if (qword_1EBDE4BD0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (Platform.internalInstall.getter())
  {
    if (qword_1EBDE4BF8 != -1) {
      swift_once();
    }
    uint64_t v4 = qword_1EBDE4BE8;
    LOBYTE(v19) = a1;
    unint64_t v5 = UserDefaultsKeys.rawValue.getter();
    double v7 = COERCE_DOUBLE(sub_1D5A08A8C((void *)v4, v5, v6));
    LOBYTE(v4) = v8;
    swift_bridgeObjectRelease();
    if ((v4 & 1) == 0 && v7 != a2)
    {
      if (qword_1EBDE5420 != -1) {
        swift_once();
      }
      uint64_t v9 = sub_1D5AB4B50();
      __swift_project_value_buffer(v9, (uint64_t)qword_1EBDE5400);
      uint64_t v10 = sub_1D5AB4B30();
      os_log_type_t v11 = sub_1D5AB5430();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = swift_slowAlloc();
        uint64_t v13 = swift_slowAlloc();
        uint64_t v19 = v13;
        *(_DWORD *)uint64_t v12 = 136315394;
        unint64_t v14 = UserDefaultsKeys.rawValue.getter();
        sub_1D5951500(v14, v15, &v19);
        sub_1D5AB5680();
        swift_bridgeObjectRelease();
        *(_WORD *)(v12 + 12) = 2080;
        uint64_t v16 = sub_1D5AB4E10();
        sub_1D5951500(v16, v17, &v19);
        sub_1D5AB5680();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D5947000, v10, v11, "Non default value set for %s: %s", (uint8_t *)v12, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1D945AAC0](v13, -1, -1);
        MEMORY[0x1D945AAC0](v12, -1, -1);
      }

      return v7;
    }
  }
  return a2;
}

id NSURLSessionConfiguration.forBundleAttribution(bundleIdentifier:)(uint64_t a1, uint64_t a2)
{
  if (a2) {
    uint64_t v2 = (void *)sub_1D5AB4DE0();
  }
  else {
    uint64_t v2 = 0;
  }
  objc_msgSend(v4, sel_set_sourceApplicationBundleIdentifier_, v2);

  return v4;
}

id NSURLSession.forBundleAttribution(bundleIdentifier:)(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  id v7 = v3;
  id v5 = objc_msgSend(v3, sel_configuration);
  if (a2) {
    a2 = (void *)sub_1D5AB4DE0();
  }
  objc_msgSend(v5, sel_set_sourceApplicationBundleIdentifier_, a2);

  return v7;
}

uint64_t ScoreSummary.scale(by:)()
{
  uint64_t v0 = sub_1D5AB2410();
  sub_1D5AB23F0();
  float v2 = v1;
  sub_1D5AB3240();
  *(float *)&double v3 = v3;
  float v4 = v2 * *(float *)&v3;
  sub_1D5AB23B0();
  float v6 = v5;
  sub_1D5AB3240();
  *(float *)&double v7 = v7;
  float v8 = v6 * *(float *)&v7;
  sub_1D5AB23D0();
  float v10 = v9;
  sub_1D5AB3240();
  *(float *)&double v11 = v11;
  float v12 = v10 * *(float *)&v11;
  sub_1D5AB23E0();
  float v14 = v13;
  sub_1D5AB3240();
  *(float *)&double v15 = v15;
  float v16 = v14 * *(float *)&v15;
  sub_1D5AB23C0();
  float v18 = v17;
  sub_1D5AB3240();
  v20.n128_f32[0] = v20.n128_f64[0];
  v19.n128_f32[0] = v18 * v20.n128_f32[0];
  v20.n128_f32[0] = v4;
  v21.n128_f32[0] = v8;
  v22.n128_f32[0] = v12;
  v23.n128_f32[0] = v16;
  return MEMORY[0x1F414C8B0](v0, v20, v21, v22, v23, v19);
}

uint64_t dispatch thunk of SessionPreferenceClientProtocol.queryAudioSelection()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SessionPreferenceClientProtocol.queryBurnBarDisplayPreference(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of SessionPreferenceClientProtocol.queryMetricsDisplayPreference(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of SessionPreferenceClientProtocol.queryProgressDisplayPreference(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of SessionPreferenceClientProtocol.updateAudioFocusSelection(_:)(char a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))(a1 & 1);
}

uint64_t dispatch thunk of SessionPreferenceClientProtocol.updateBurnBarDisplayPreference(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of SessionPreferenceClientProtocol.updateMetricsDisplayPreference(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of SessionPreferenceClientProtocol.updateProgressDisplayPreference(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t SubscriptionToken.__allocating_init(eventHub:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 24) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v4 = MEMORY[0x1E4FBC860];
  *(void *)(v3 + 24) = a2;
  *(void *)(v3 + 32) = v4;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  return v3;
}

uint64_t SubscriptionToken.init(eventHub:)(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = sub_1D5958664(a1, v2, ObjectType, a2);
  swift_unknownObjectRelease();
  return v6;
}

uint64_t SubscriptionToken.deinit()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      if (MEMORY[0x1D945ABB0](v0 + 16))
      {
        uint64_t v4 = *(void *)(v0 + 24);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 56))(v3, ObjectType, v4);
        swift_unknownObjectRelease();
      }
      v3 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  *(void *)(v0 + 32) = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  sub_1D59586BC(v0 + 16);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SubscriptionToken.__deallocating_deinit()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      if (MEMORY[0x1D945ABB0](v0 + 16))
      {
        uint64_t v4 = *(void *)(v0 + 24);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 56))(v3, ObjectType, v4);
        swift_unknownObjectRelease();
      }
      v3 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  *(void *)(v0 + 32) = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  sub_1D59586BC(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D595849C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  long long v12 = *(_OWORD *)(a1 + 1);
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  float v5 = (void *)(v1 + 32);
  swift_beginAccess();
  uint64_t v6 = *(void **)(v1 + 32);
  swift_bridgeObjectRetain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v1 + 32) = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v6 = sub_1D5A763F4(0, v6[2] + 1, 1, v6);
    *float v5 = v6;
  }
  unint64_t v9 = v6[2];
  unint64_t v8 = v6[3];
  if (v9 >= v8 >> 1) {
    *float v5 = sub_1D5A763F4((void *)(v8 > 1), v9 + 1, 1, v6);
  }
  uint64_t v13 = v2;
  long long v14 = v12;
  uint64_t v15 = v4;
  uint64_t v16 = v3;
  uint64_t v10 = type metadata accessor for Subscription();
  sub_1D59585CC(v9, (uint64_t)&v13, (uint64_t *)(v1 + 32), v10, (uint64_t)&protocol witness table for Subscription<A>);
  return swift_endAccess();
}

uint64_t sub_1D59585CC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_1D5950B78(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_1D5958664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a2 + 24) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v6 = MEMORY[0x1E4FBC860];
  *(void *)(a2 + 24) = a4;
  *(void *)(a2 + 32) = v6;
  swift_unknownObjectWeakAssign();
  return a2;
}

uint64_t sub_1D59586BC(uint64_t a1)
{
  return a1;
}

uint64_t type metadata accessor for SubscriptionToken()
{
  return self;
}

uint64_t method lookup function for SubscriptionToken(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SubscriptionToken);
}

uint64_t dispatch thunk of SubscriptionToken.__allocating_init(eventHub:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of NetworkEvaluating.queryNetworkConditions()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t ScoreMetric.applyingTimestampOffset(_:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7251B0);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = &v5[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D5AB2110();
  uint64_t v3 = sub_1D5AB2D20();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v5[28] = 1;
  v5[24] = 1;
  v5[20] = 1;
  v5[16] = 1;
  v5[12] = 1;
  sub_1D5AB2130();
  return sub_1D595888C((uint64_t)v2);
}

uint64_t sub_1D595888C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7251B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D59588EC()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7251B0);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = &v5[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D5AB2110();
  uint64_t v3 = sub_1D5AB2D20();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v5[28] = 1;
  v5[24] = 1;
  v5[20] = 1;
  v5[16] = 1;
  v5[12] = 1;
  sub_1D5AB2130();
  return sub_1D595888C((uint64_t)v2);
}

uint64_t dispatch thunk of RecommendationClientProtocol.deduplicateOnboardingSurveyResults()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RecommendationClientProtocol.deleteAllOnboardingSurveyResults()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of RecommendationClientProtocol.evaluateAllRecommendations()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of RecommendationClientProtocol.evaluateRecommendedGuidedAudioWorkouts()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of RecommendationClientProtocol.fetchRemoteForYouCanvas()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of RecommendationClientProtocol.fetchOnboardingDetail()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of RecommendationClientProtocol.fetchPersonalizationInferenceResponse(options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of RecommendationClientProtocol.fetchPersonalizationAwardProgressReferences()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of RecommendationClientProtocol.makePersonalizationInferenceRequest(options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of RecommendationClientProtocol.queryAllRecommendations()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of RecommendationClientProtocol.queryAllOnboardingSurveyResults()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of RecommendationClientProtocol.queryOnboardingSurveyResult()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of RecommendationClientProtocol.queryRecommendations(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t dispatch thunk of RecommendationClientProtocol.queryRelatedWorkouts(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 112))();
}

uint64_t dispatch thunk of RecommendationClientProtocol.updateOnboardingSurveyResult(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

double MediaPlayerPlaybackStarting.expectedElapsedTime.getter()
{
  return *(double *)v0;
}

SeymourClient::MediaPlayerPlaybackStarting __swiftcall MediaPlayerPlaybackStarting.init(expectedElapsedTime:)(SeymourClient::MediaPlayerPlaybackStarting expectedElapsedTime)
{
  v1->expectedElapsedTime = expectedElapsedTime.expectedElapsedTime;
  return expectedElapsedTime;
}

void static MediaPlayerPlaybackStarting.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for MediaPlayerPlaybackStarting()
{
  return &type metadata for MediaPlayerPlaybackStarting;
}

uint64_t EnergyMetric.applyingTimestampOffset(_:)()
{
  sub_1D5AB22B0();
  return sub_1D5AB22D0();
}

uint64_t sub_1D5958BEC()
{
  sub_1D5AB22B0();
  return sub_1D5AB22D0();
}

uint64_t dispatch thunk of TimestampTransforming.applyingTimestampOffset(_:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t SessionTerminated.termination.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB2180();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t SessionTerminated.init(termination:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB2180();
  float v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static SessionTerminated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for SessionTerminated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2180();
  float v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for SessionTerminated(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB2180();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for SessionTerminated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2180();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for SessionTerminated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2180();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for SessionTerminated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2180();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for SessionTerminated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2180();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionTerminated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D5958FB8);
}

uint64_t sub_1D5958FB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2180();
  float v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SessionTerminated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D5959038);
}

uint64_t sub_1D5959038(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2180();
  float v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SessionTerminated()
{
  uint64_t result = qword_1EBDE4418;
  if (!qword_1EBDE4418) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D59590F4()
{
  uint64_t result = sub_1D5AB2180();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t static Task<>.sleep(seconds:)(double a1)
{
  *(double *)(v1 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1D59591A0, 0, 0);
}

uint64_t sub_1D59591A0(unint64_t a1)
{
  double v2 = *(double *)(v1 + 16) * 1000000000.0;
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v2 <= -1.0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v2 >= 1.84467441e19)
  {
LABEL_9:
    __break(1u);
    return MEMORY[0x1F4187DE0](a1);
  }
  unint64_t v3 = (unint64_t)v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1D5959284;
  a1 = v3;
  return MEMORY[0x1F4187DE0](a1);
}

uint64_t sub_1D5959284()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t dispatch thunk of AchievementClientProtocol.queryEligibleToPresentAwardToast(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of AchievementClientProtocol.fetchCurrentStreakNotification()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AchievementClientProtocol.fetchProgressUpdates(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of AchievementClientProtocol.fetchSeymourAchievement(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of AchievementClientProtocol.fetchSeymourAchievementProgress(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of AchievementClientProtocol.populateAchievementProgressUpdates(forTemplateNames:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of AchievementClientProtocol.queryTemplates()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of AchievementClientProtocol.queryAchievementEnvironmentCache()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of AchievementClientProtocol.runHistoricalEvaluation()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of AchievementClientProtocol.journalAchievementNotificationRecord(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of AchievementClientProtocol.deleteAchievementNotificationRecord(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

void *MetricClient.__allocating_init(queue:)(void *a1)
{
  id v2 = objc_allocWithZone(MEMORY[0x1E4F29268]);
  id v3 = a1;
  uint64_t v4 = (void *)sub_1D5AB4DE0();
  id v5 = objc_msgSend(v2, sel_initWithMachServiceName_options_, v4, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  uint64_t v6 = sub_1D59968E8(v5, v3);
  uint64_t v7 = *(void *)(v6 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 16));
  if (*(unsigned char *)(v6 + 48) == 1)
  {
    *(unsigned char *)(v6 + 48) = 2;
    objc_msgSend(*(id *)(v6 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));

  type metadata accessor for MetricClient();
  uint64_t result = (void *)swift_allocObject();
  result[2] = v6;
  result[3] = &protocol witness table for XPCClient;
  result[4] = &protocol witness table for XPCClient;
  return result;
}

void *MetricClient.__allocating_init(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  return sub_1D595A068(a1, v3, ObjectType, a2, a3);
}

void *MetricClient.init(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  return sub_1D595A0B0(a1, v3, ObjectType, a2, a3);
}

uint64_t MetricClient.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t MetricClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t MetricClient.recordMetricClickStream(_:)(uint64_t a1)
{
  if (qword_1EBDE3B70 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE3B50);
  v4._countAndFlagsBits = 0xD000000000000065;
  v4._object = (void *)0x80000001D5AC5670;
  v5._object = (void *)0x80000001D5AC56E0;
  v5._countAndFlagsBits = 0xD00000000000001BLL;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 142;
  unint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, void, void, uint64_t, uint64_t))(v6 + 16);
  uint64_t v9 = sub_1D5AB30C0();
  return v8(&v11, a1, v9, MEMORY[0x1E4F9D0A8], MEMORY[0x1E4F9D0B0], ObjectType, v6);
}

uint64_t MetricClient.recordMetricPerformanceStream(_:)(uint64_t a1)
{
  if (qword_1EBDE3B70 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE3B50);
  v4._countAndFlagsBits = 0xD000000000000065;
  v4._object = (void *)0x80000001D5AC5670;
  v5._object = (void *)0x80000001D5AC5700;
  v5._countAndFlagsBits = 0xD000000000000021;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 149;
  unint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, void, void, uint64_t, uint64_t))(v6 + 16);
  uint64_t v9 = sub_1D5AB3990();
  return v8(&v11, a1, v9, MEMORY[0x1E4F9DF30], MEMORY[0x1E4F9DF38], ObjectType, v6);
}

uint64_t MetricClient.recordMetricPlayStream(_:)(uint64_t a1)
{
  if (qword_1EBDE3B70 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE3B50);
  v4._countAndFlagsBits = 0xD000000000000065;
  v4._object = (void *)0x80000001D5AC5670;
  v5._object = (void *)0x80000001D5AC5730;
  v5._countAndFlagsBits = 0xD00000000000001ALL;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 143;
  unint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, void, void, uint64_t, uint64_t))(v6 + 16);
  uint64_t v9 = sub_1D5AB2F90();
  return v8(&v11, a1, v9, MEMORY[0x1E4F9CD50], MEMORY[0x1E4F9CD58], ObjectType, v6);
}

uint64_t MetricClient.flushMetrics()()
{
  return sub_1D5959D04(0x74654D6873756C66, (void *)0xEE00292873636972, 144);
}

uint64_t MetricClient.queryUserIdentifier(for:)(char a1)
{
  return sub_1D5959A44(a1, 0xD000000000000019, (void *)0x80000001D5AC5750, 145);
}

uint64_t MetricClient.queryClientIdentifier(for:)(char a1)
{
  return sub_1D5959A44(a1, 0xD00000000000001BLL, (void *)0x80000001D5AC5770, 146);
}

uint64_t sub_1D5959A44(char a1, uint64_t a2, void *a3, __int16 a4)
{
  if (qword_1EBDE3B70 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1D5AB4B50();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EBDE3B50);
  v10._object = (void *)0x80000001D5AC5670;
  v10._countAndFlagsBits = 0xD000000000000065;
  v11._countAndFlagsBits = a2;
  v11._object = a3;
  Logger.trace(file:function:)(v10, v11);
  uint64_t v12 = *(void *)(v4 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v16 = a4;
  char v15 = a1;
  return (*(uint64_t (**)(__int16 *, char *, void, void, void, void, void, void, uint64_t, uint64_t))(v12 + 32))(&v16, &v15, MEMORY[0x1E4F9C248], MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F9C238], MEMORY[0x1E4F9C240], MEMORY[0x1E4F9F0B8], MEMORY[0x1E4F9F0C0], ObjectType, v12);
}

uint64_t MetricClient.updateMetricIdentifiers()()
{
  return sub_1D5959D04(0xD000000000000019, (void *)0x80000001D5AC5790, 147);
}

uint64_t MetricClient.resetMetricIdentifiers()()
{
  return sub_1D5959D04(0xD000000000000018, (void *)0x80000001D5AC57B0, 148);
}

uint64_t MetricClient.queryLastBackgroundAccountEvent()()
{
  if (qword_1EBDE3B70 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE3B50);
  v2._countAndFlagsBits = 0xD000000000000065;
  v2._object = (void *)0x80000001D5AC5670;
  v3._object = (void *)0x80000001D5AC57D0;
  v3._countAndFlagsBits = 0xD000000000000021;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v9 = 152;
  uint64_t v6 = *(uint64_t (**)(__int16 *, uint64_t, void, void, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = sub_1D5AB40C0();
  return v6(&v9, v7, MEMORY[0x1E4F9E6C8], MEMORY[0x1E4F9E6D0], ObjectType, v4);
}

uint64_t MetricClient.recordBackgroundAccountEvent()()
{
  return sub_1D5959D04(0xD00000000000001ELL, (void *)0x80000001D5AC5800, 150);
}

uint64_t MetricClient.resetBackgroundAccountEvent()()
{
  return sub_1D5959D04(0xD00000000000001DLL, (void *)0x80000001D5AC5820, 151);
}

uint64_t sub_1D5959D04(uint64_t a1, void *a2, __int16 a3)
{
  if (qword_1EBDE3B70 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1D5AB4B50();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBDE3B50);
  v8._object = (void *)0x80000001D5AC5670;
  v8._countAndFlagsBits = 0xD000000000000065;
  v9._countAndFlagsBits = a1;
  v9._object = a2;
  Logger.trace(file:function:)(v8, v9);
  uint64_t v10 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v13 = a3;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v10 + 8))(&v13, ObjectType, v10);
}

uint64_t sub_1D5959DEC(uint64_t a1)
{
  return MetricClient.recordMetricClickStream(_:)(a1);
}

uint64_t sub_1D5959E10(uint64_t a1)
{
  return MetricClient.recordMetricPerformanceStream(_:)(a1);
}

uint64_t sub_1D5959E34(uint64_t a1)
{
  return MetricClient.recordMetricPlayStream(_:)(a1);
}

uint64_t sub_1D5959E58()
{
  uint64_t v1 = *v0;
  if (qword_1EBDE3B70 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE3B50);
  v3._object = (void *)0x80000001D5AC5670;
  v3._countAndFlagsBits = 0xD000000000000065;
  v4._countAndFlagsBits = 0x74654D6873756C66;
  v4._object = (void *)0xEE00292873636972;
  Logger.trace(file:function:)(v3, v4);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v8 = 144;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v5 + 8))(&v8, ObjectType, v5);
}

uint64_t sub_1D5959F48(char a1)
{
  return MetricClient.queryClientIdentifier(for:)(a1);
}

uint64_t sub_1D5959F6C(char a1)
{
  return MetricClient.queryUserIdentifier(for:)(a1);
}

uint64_t sub_1D5959F90()
{
  return MetricClient.updateMetricIdentifiers()();
}

uint64_t sub_1D5959FB4()
{
  return MetricClient.resetMetricIdentifiers()();
}

uint64_t sub_1D5959FD8()
{
  return MetricClient.queryLastBackgroundAccountEvent()();
}

uint64_t sub_1D5959FFC()
{
  return MetricClient.recordBackgroundAccountEvent()();
}

uint64_t sub_1D595A020()
{
  return MetricClient.resetBackgroundAccountEvent()();
}

uint64_t type metadata accessor for MetricClient()
{
  return self;
}

void *sub_1D595A068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for MetricClient();
  uint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a4;
  result[4] = a5;
  return result;
}

void *sub_1D595A0B0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  a2[2] = a1;
  a2[3] = a4;
  a2[4] = a5;
  return a2;
}

uint64_t method lookup function for MetricClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MetricClient);
}

uint64_t dispatch thunk of MetricClient.__allocating_init(connection:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

void *RemoteBrowsingClient.__allocating_init(eventHub:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = objc_allocWithZone(MEMORY[0x1E4F29268]);
  id v7 = a3;
  __int16 v8 = (void *)sub_1D5AB4DE0();
  id v9 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v8, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  uint64_t v10 = sub_1D59968E8(v9, v7);
  uint64_t v11 = *(void *)(v10 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 16));
  if (*(unsigned char *)(v10 + 48) == 1)
  {
    *(unsigned char *)(v10 + 48) = 2;
    objc_msgSend(*(id *)(v10 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  uint64_t v12 = (void *)swift_allocObject();
  uint64_t v13 = swift_retain();
  uint64_t v14 = sub_1D596D88C(v13, a1, a2, v12);

  swift_release_n();
  return v14;
}

uint64_t RemoteBrowsingClient.__allocating_init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D595A254(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D596DD78);
}

uint64_t RemoteBrowsingClient.init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D595A254(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D596DB08);
}

uint64_t sub_1D595A254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = a6(a1, a4, a5, v6, ObjectType, a2, a3);
  swift_unknownObjectRelease();
  return v14;
}

uint64_t sub_1D595A2D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t a5, uint64_t (*a6)(void))
{
  uint64_t v10 = a3(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v17 - v11;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v14 = *(void *)(result + 48);
    swift_unknownObjectRetain();
    swift_release();
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v16 = a4(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v12, a1, v16);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 8))(v12, v10, a5, ObjectType, v14);
    swift_unknownObjectRelease();
    return sub_1D596EB6C((uint64_t)v12, a6);
  }
  return result;
}

uint64_t sub_1D595A444()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(void *)(result + 48);
    swift_unknownObjectRetain();
    swift_release();
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v1 + 8))(ObjectType, &type metadata for RemoteBrowsingGuestVerificationCompleted, &protocol witness table for RemoteBrowsingGuestVerificationCompleted, ObjectType, v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t RemoteBrowsingClient.deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t RemoteBrowsingClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t RemoteBrowsingClient.insertConnectionRecord(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v23 = *(void *)(v4 - 8);
  uint64_t v24 = v4;
  MEMORY[0x1F4188790](v4);
  __n128 v21 = (void (*)(uint64_t, char *, uint64_t))((char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1D5AB41F0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v10, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v13, (uint64_t)v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  uint64_t v14 = *(void *)(v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v25 = 168;
  __n128 v20 = v12;
  uint64_t v16 = *(void (**)(__int16 *, char *, uint64_t, void, void, uint64_t, uint64_t))(v14 + 16);
  swift_retain();
  uint64_t v17 = v21;
  v16(&v25, v9, v6, MEMORY[0x1E4F9E8B8], MEMORY[0x1E4F9E8C0], ObjectType, v14);
  uint64_t v18 = (uint64_t)v20;
  sub_1D5962628("RemoteBrowsingClient::insertConnectionRecord", 44, 2, &dword_1D5947000, 0, v17, v22);
  (*(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v23 + 8))(v17, v24);
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return sub_1D596EB6C(v18, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.queryConnectionRecord()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v16 = a1;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725240);
  uint64_t v3 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBDE1488 != -1) {
    swift_once();
  }
  uint64_t v9 = __swift_project_value_buffer(v6, (uint64_t)qword_1EBDE1468);
  sub_1D596DDF8(v9, (uint64_t)v8);
  uint64_t v10 = *(void *)(v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v18 = 182;
  uint64_t v12 = *(void (**)(__int16 *, uint64_t, void, void, uint64_t, uint64_t))(v10 + 24);
  uint64_t v13 = sub_1D5AB41F0();
  swift_retain();
  v12(&v18, v13, MEMORY[0x1E4F9E8B8], MEMORY[0x1E4F9E8C0], ObjectType, v10);
  sub_1D5962EA4("RemoteBrowsingClient::queryConnectionRecord", 43, 2, &dword_1D5947000, 0, (uint64_t)v5, v16);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v17);
  swift_release();
  return sub_1D596EB6C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.requestEnvironment(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v25 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725248);
  uint64_t v26 = *(void *)(v5 - 8);
  uint64_t v27 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v24 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D5AB3190();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v14 = __swift_project_value_buffer(v11, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v14, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  uint64_t v23 = v13;
  uint64_t v15 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v28 = 170;
  uint64_t v17 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, void, void, void, void, uint64_t, uint64_t))(v15 + 32);
  uint64_t v18 = sub_1D5AB3E10();
  swift_retain();
  uint64_t v22 = v15;
  uint64_t v19 = (uint64_t)v24;
  v17(&v28, v10, v7, v18, MEMORY[0x1E4F9D168], MEMORY[0x1E4F9D170], MEMORY[0x1E4F9E3A8], MEMORY[0x1E4F9E3B0], ObjectType, v22);
  uint64_t v20 = (uint64_t)v23;
  sub_1D59637A0("RemoteBrowsingClient::requestEnvironment", 40, 2, &dword_1D5947000, 0, v19, v25);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v19, v27);
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return sub_1D596EB6C(v20, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.requestEnvironmentWithConfirmation(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v25 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725248);
  uint64_t v26 = *(void *)(v5 - 8);
  uint64_t v27 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v24 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D5AB3190();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v14 = __swift_project_value_buffer(v11, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v14, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  uint64_t v23 = v13;
  uint64_t v15 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v28 = 169;
  uint64_t v17 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, void, void, void, void, uint64_t, uint64_t))(v15 + 32);
  uint64_t v18 = sub_1D5AB3E10();
  swift_retain();
  uint64_t v22 = v15;
  uint64_t v19 = (uint64_t)v24;
  v17(&v28, v10, v7, v18, MEMORY[0x1E4F9D168], MEMORY[0x1E4F9D170], MEMORY[0x1E4F9E3A8], MEMORY[0x1E4F9E3B0], ObjectType, v22);
  uint64_t v20 = (uint64_t)v23;
  sub_1D59637A0("RemoteBrowsingClient::requestEnvironmentWithConfirmation", 56, 2, &dword_1D5947000, 0, v19, v25);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v19, v27);
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return sub_1D596EB6C(v20, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.cancelRemoteBrowsingEnvironmentRequest(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v23 = *(void *)(v4 - 8);
  uint64_t v24 = v4;
  MEMORY[0x1F4188790](v4);
  __n128 v21 = (void (*)(uint64_t, char *, uint64_t))((char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1D5AB3190();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v10, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v13, (uint64_t)v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  uint64_t v14 = *(void *)(v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v25 = 187;
  uint64_t v20 = v12;
  uint64_t v16 = *(void (**)(__int16 *, char *, uint64_t, void, void, uint64_t, uint64_t))(v14 + 16);
  swift_retain();
  uint64_t v17 = v21;
  v16(&v25, v9, v6, MEMORY[0x1E4F9D168], MEMORY[0x1E4F9D170], ObjectType, v14);
  uint64_t v18 = (uint64_t)v20;
  sub_1D5962628("RemoteBrowsingClient::cancelRemoteBrowsingEnvironmentRequest", 60, 2, &dword_1D5947000, 0, v17, v22);
  (*(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v23 + 8))(v17, v24);
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return sub_1D596EB6C(v18, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.requestServiceSubscription(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v25 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725250);
  uint64_t v26 = *(void *)(v5 - 8);
  uint64_t v27 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v24 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D5AB3190();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v14 = __swift_project_value_buffer(v11, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v14, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  uint64_t v23 = v13;
  uint64_t v15 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v28 = 172;
  uint64_t v17 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, void, void, void, void, uint64_t, uint64_t))(v15 + 32);
  uint64_t v18 = sub_1D5AB34D0();
  swift_retain();
  uint64_t v22 = v15;
  uint64_t v19 = (uint64_t)v24;
  v17(&v28, v10, v7, v18, MEMORY[0x1E4F9D168], MEMORY[0x1E4F9D170], MEMORY[0x1E4F9D528], MEMORY[0x1E4F9D530], ObjectType, v22);
  uint64_t v20 = (uint64_t)v23;
  sub_1D596409C("RemoteBrowsingClient::requestServiceSubscription", 48, 2, &dword_1D5947000, 0, v19, v25);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v19, v27);
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return sub_1D596EB6C(v20, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.requestGuestAuthentication(to:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v23 = *(void *)(v4 - 8);
  uint64_t v24 = v4;
  MEMORY[0x1F4188790](v4);
  __n128 v21 = (void (*)(uint64_t, char *, uint64_t))((char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1D5AB3190();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v10, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v13, (uint64_t)v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  uint64_t v14 = *(void *)(v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v25 = 175;
  uint64_t v20 = v12;
  uint64_t v16 = *(void (**)(__int16 *, char *, uint64_t, void, void, uint64_t, uint64_t))(v14 + 16);
  swift_retain();
  uint64_t v17 = v21;
  v16(&v25, v9, v6, MEMORY[0x1E4F9D168], MEMORY[0x1E4F9D170], ObjectType, v14);
  uint64_t v18 = (uint64_t)v20;
  sub_1D5962628("RemoteBrowsingClient::requestGuestAuthentication", 48, 2, &dword_1D5947000, 0, v17, v22);
  (*(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v23 + 8))(v17, v24);
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return sub_1D596EB6C(v18, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.allowPendingConfirmationRequest()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v15 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (void (*)(uint64_t, char *, uint64_t))((char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v10 = __swift_project_value_buffer(v7, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v10, (uint64_t)v9);
  uint64_t v11 = *(void *)(v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v16 = 173;
  uint64_t v13 = *(void (**)(__int16 *, uint64_t, uint64_t))(v11 + 8);
  swift_retain();
  v13(&v16, ObjectType, v11);
  sub_1D5962628("RemoteBrowsingClient::allowPendingConfirmationRequest", 53, 2, &dword_1D5947000, 0, v6, v15);
  (*(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v4 + 8))(v6, v3);
  swift_release();
  return sub_1D596EB6C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.denyPendingConfirmationRequest()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v15 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (void (*)(uint64_t, char *, uint64_t))((char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v10 = __swift_project_value_buffer(v7, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v10, (uint64_t)v9);
  uint64_t v11 = *(void *)(v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v16 = 174;
  uint64_t v13 = *(void (**)(__int16 *, uint64_t, uint64_t))(v11 + 8);
  swift_retain();
  v13(&v16, ObjectType, v11);
  sub_1D5962628("RemoteBrowsingClient::denyPendingConfirmationRequest", 52, 2, &dword_1D5947000, 0, v6, v15);
  (*(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v4 + 8))(v6, v3);
  swift_release();
  return sub_1D596EB6C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.tryPassword(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v18 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v19 = *(void *)(v7 - 8);
  uint64_t v20 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (void (*)(uint64_t, char *, uint64_t))((char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v10, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v13, (uint64_t)v12);
  uint64_t v14 = *(void *)(v4 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v22 = 215;
  v21[0] = a1;
  v21[1] = a2;
  __int16 v16 = *(void (**)(__int16 *, void *, void, void, void, uint64_t, uint64_t))(v14 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  v16(&v22, v21, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F9F0B8], MEMORY[0x1E4F9F0C0], ObjectType, v14);
  sub_1D5962628("RemoteBrowsingClient::tryPassword", 33, 2, &dword_1D5947000, 0, v9, v18);
  (*(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v19 + 8))(v9, v20);
  swift_bridgeObjectRelease();
  swift_release();
  return sub_1D596EB6C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.updateAudioFocusSelection(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v26 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (void (*)(uint64_t, char *, uint64_t))((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725258);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  __int16 v25 = v14;
  uint64_t v16 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v29 = 203;
  uint64_t v23 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 16);
  uint64_t v24 = ObjectType;
  uint64_t v18 = sub_1D596DF9C(&qword_1EA725260, &qword_1EA725258);
  uint64_t v19 = sub_1D596DF9C(&qword_1EA725268, &qword_1EA725258);
  swift_retain();
  v23(&v29, v11, v8, v18, v19, v24, v16);
  uint64_t v20 = (uint64_t)v25;
  sub_1D5962628("RemoteBrowsingClient::updateAudioFocusSelection", 47, 2, &dword_1D5947000, 0, v7, v26);
  (*(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v27 + 8))(v7, v28);
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return sub_1D596EB6C(v20, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.updateBurnBarDisplayPreference(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v26 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (void (*)(uint64_t, char *, uint64_t))((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725270);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  __int16 v25 = v14;
  uint64_t v16 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v29 = 177;
  uint64_t v23 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 16);
  uint64_t v24 = ObjectType;
  uint64_t v18 = sub_1D596DF9C(&qword_1EA725278, &qword_1EA725270);
  uint64_t v19 = sub_1D596DF9C(&qword_1EA725280, &qword_1EA725270);
  swift_retain();
  v23(&v29, v11, v8, v18, v19, v24, v16);
  uint64_t v20 = (uint64_t)v25;
  sub_1D5962628("RemoteBrowsingClient::updateBurnBarDisplayPreference", 52, 2, &dword_1D5947000, 0, v7, v26);
  (*(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v27 + 8))(v7, v28);
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return sub_1D596EB6C(v20, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.updateMetricsDisplayPreference(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v26 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (void (*)(uint64_t, char *, uint64_t))((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725288);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  __int16 v25 = v14;
  uint64_t v16 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v29 = 178;
  uint64_t v23 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 16);
  uint64_t v24 = ObjectType;
  uint64_t v18 = sub_1D596DF9C(&qword_1EA725290, &qword_1EA725288);
  uint64_t v19 = sub_1D596DF9C(&qword_1EA725298, &qword_1EA725288);
  swift_retain();
  v23(&v29, v11, v8, v18, v19, v24, v16);
  uint64_t v20 = (uint64_t)v25;
  sub_1D5962628("RemoteBrowsingClient::updateMetricsDisplayPreference", 52, 2, &dword_1D5947000, 0, v7, v26);
  (*(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v27 + 8))(v7, v28);
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return sub_1D596EB6C(v20, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.updateProgressDisplayPreference(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v26 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (void (*)(uint64_t, char *, uint64_t))((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7252A0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  __int16 v25 = v14;
  uint64_t v16 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v29 = 181;
  uint64_t v23 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 16);
  uint64_t v24 = ObjectType;
  uint64_t v18 = sub_1D596DF9C(&qword_1EA7252A8, &qword_1EA7252A0);
  uint64_t v19 = sub_1D596DF9C(&qword_1EA7252B0, &qword_1EA7252A0);
  swift_retain();
  v23(&v29, v11, v8, v18, v19, v24, v16);
  uint64_t v20 = (uint64_t)v25;
  sub_1D5962628("RemoteBrowsingClient::updateProgressDisplayPreference", 53, 2, &dword_1D5947000, 0, v7, v26);
  (*(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v27 + 8))(v7, v28);
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return sub_1D596EB6C(v20, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.updateNoticePrivacyPreference(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v26 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (void (*)(uint64_t, char *, uint64_t))((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7252B8);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  __int16 v25 = v14;
  uint64_t v16 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v29 = 179;
  uint64_t v23 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 16);
  uint64_t v24 = ObjectType;
  uint64_t v18 = sub_1D596DF9C(&qword_1EA7252C0, &qword_1EA7252B8);
  uint64_t v19 = sub_1D596DF9C(&qword_1EA7252C8, &qword_1EA7252B8);
  swift_retain();
  v23(&v29, v11, v8, v18, v19, v24, v16);
  uint64_t v20 = (uint64_t)v25;
  sub_1D5962628("RemoteBrowsingClient::updateNoticePrivacyPreference", 51, 2, &dword_1D5947000, 0, v7, v26);
  (*(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v27 + 8))(v7, v28);
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return sub_1D596EB6C(v20, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.updateOptInPrivacyPreference(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v26 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (void (*)(uint64_t, char *, uint64_t))((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7252D0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  __int16 v25 = v14;
  uint64_t v16 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v29 = 180;
  uint64_t v23 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 16);
  uint64_t v24 = ObjectType;
  uint64_t v18 = sub_1D596DF9C(&qword_1EA7252D8, &qword_1EA7252D0);
  uint64_t v19 = sub_1D596DF9C(&qword_1EA7252E0, &qword_1EA7252D0);
  swift_retain();
  v23(&v29, v11, v8, v18, v19, v24, v16);
  uint64_t v20 = (uint64_t)v25;
  sub_1D5962628("RemoteBrowsingClient::updateOptInPrivacyPreference", 50, 2, &dword_1D5947000, 0, v7, v26);
  (*(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v27 + 8))(v7, v28);
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return sub_1D596EB6C(v20, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.queryAllPrivacyAcknowledgements()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v17 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7252E8);
  uint64_t v18 = *(void *)(v3 - 8);
  uint64_t v19 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v9 = __swift_project_value_buffer(v6, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v9, (uint64_t)v8);
  uint64_t v10 = *(void *)(v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v20 = 253;
  uint64_t v12 = *(void (**)(__int16 *, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v10 + 24);
  swift_retain();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7252F0);
  unint64_t v14 = sub_1D596DE5C();
  unint64_t v15 = sub_1D596DED0();
  v12(&v20, v13, v14, v15, ObjectType, v10);
  sub_1D5964998("RemoteBrowsingClient::queryAllPrivacyAcknowledgements", 53, 2, &dword_1D5947000, 0, (uint64_t)v5, v17);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v19);
  swift_release();
  return sub_1D596EB6C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.insertPrivacyAcknowledgement(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v26 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (void (*)(uint64_t, char *, uint64_t))((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725310);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v12);
  unint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  __int16 v25 = v14;
  uint64_t v16 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v29 = 183;
  uint64_t v23 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 16);
  uint64_t v24 = ObjectType;
  uint64_t v18 = sub_1D596DF9C(&qword_1EA725318, &qword_1EA725310);
  uint64_t v19 = sub_1D596DF9C(&qword_1EA725320, &qword_1EA725310);
  swift_retain();
  v23(&v29, v11, v8, v18, v19, v24, v16);
  uint64_t v20 = (uint64_t)v25;
  sub_1D5962628("RemoteBrowsingClient::insertPrivacyAcknowledgement", 50, 2, &dword_1D5947000, 0, v7, v26);
  (*(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v27 + 8))(v7, v28);
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return sub_1D596EB6C(v20, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.insertBookmarks(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v26 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (void (*)(uint64_t, char *, uint64_t))((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725328);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v12);
  unint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  __int16 v25 = v14;
  uint64_t v16 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v29 = 184;
  uint64_t v23 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 16);
  uint64_t v24 = ObjectType;
  uint64_t v18 = sub_1D596DF9C(&qword_1EA725330, &qword_1EA725328);
  uint64_t v19 = sub_1D596DF9C(&qword_1EA725338, &qword_1EA725328);
  swift_retain();
  v23(&v29, v11, v8, v18, v19, v24, v16);
  uint64_t v20 = (uint64_t)v25;
  sub_1D5962628("RemoteBrowsingClient::insertBookmarks", 37, 2, &dword_1D5947000, 0, v7, v26);
  (*(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v27 + 8))(v7, v28);
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return sub_1D596EB6C(v20, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.removeBookmarks(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v26 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (void (*)(uint64_t, char *, uint64_t))((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725328);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v12);
  unint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  __int16 v25 = v14;
  uint64_t v16 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v29 = 185;
  uint64_t v23 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 16);
  uint64_t v24 = ObjectType;
  uint64_t v18 = sub_1D596DF9C(&qword_1EA725330, &qword_1EA725328);
  uint64_t v19 = sub_1D596DF9C(&qword_1EA725338, &qword_1EA725328);
  swift_retain();
  v23(&v29, v11, v8, v18, v19, v24, v16);
  uint64_t v20 = (uint64_t)v25;
  sub_1D5962628("RemoteBrowsingClient::removeBookmark", 36, 2, &dword_1D5947000, 0, v7, v26);
  (*(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v27 + 8))(v7, v28);
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return sub_1D596EB6C(v20, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.insertPlaylist(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v26 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (void (*)(uint64_t, char *, uint64_t))((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725340);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v12);
  unint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  __int16 v25 = v14;
  uint64_t v16 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v29 = 189;
  uint64_t v23 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 16);
  uint64_t v24 = ObjectType;
  uint64_t v18 = sub_1D596DF9C(&qword_1EA725348, &qword_1EA725340);
  uint64_t v19 = sub_1D596DF9C(&qword_1EA725350, &qword_1EA725340);
  swift_retain();
  v23(&v29, v11, v8, v18, v19, v24, v16);
  uint64_t v20 = (uint64_t)v25;
  sub_1D5962628("RemoteBrowsingClient::insertPlaylist", 36, 2, &dword_1D5947000, 0, v7, v26);
  (*(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v27 + 8))(v7, v28);
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return sub_1D596EB6C(v20, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.deletePlaylist(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v26 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (void (*)(uint64_t, char *, uint64_t))((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725340);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v12);
  unint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  __int16 v25 = v14;
  uint64_t v16 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v29 = 190;
  uint64_t v23 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 16);
  uint64_t v24 = ObjectType;
  uint64_t v18 = sub_1D596DF9C(&qword_1EA725348, &qword_1EA725340);
  uint64_t v19 = sub_1D596DF9C(&qword_1EA725350, &qword_1EA725340);
  swift_retain();
  v23(&v29, v11, v8, v18, v19, v24, v16);
  uint64_t v20 = (uint64_t)v25;
  sub_1D5962628("RemoteBrowsingClient::deletePlaylist", 36, 2, &dword_1D5947000, 0, v7, v26);
  (*(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v27 + 8))(v7, v28);
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return sub_1D596EB6C(v20, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.insertArchivedSession(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v26 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (void (*)(uint64_t, char *, uint64_t))((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725358);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v12);
  unint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  __int16 v25 = v14;
  uint64_t v16 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v29 = 188;
  uint64_t v23 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 16);
  uint64_t v24 = ObjectType;
  uint64_t v18 = sub_1D596DF9C(&qword_1EA725360, &qword_1EA725358);
  uint64_t v19 = sub_1D596DF9C(&qword_1EA725368, &qword_1EA725358);
  swift_retain();
  v23(&v29, v11, v8, v18, v19, v24, v16);
  uint64_t v20 = (uint64_t)v25;
  sub_1D5962628("RemoteBrowsingClient::insertArchivedSession", 43, 2, &dword_1D5947000, 0, v7, v26);
  (*(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v27 + 8))(v7, v28);
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return sub_1D596EB6C(v20, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.insertCatalogTipJournal(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v26 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (void (*)(uint64_t, char *, uint64_t))((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725370);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v12);
  unint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  __int16 v25 = v14;
  uint64_t v16 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v29 = 193;
  uint64_t v23 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 16);
  uint64_t v24 = ObjectType;
  uint64_t v18 = sub_1D596DF9C(&qword_1EA725378, &qword_1EA725370);
  uint64_t v19 = sub_1D596DF9C(&qword_1EA725380, &qword_1EA725370);
  swift_retain();
  v23(&v29, v11, v8, v18, v19, v24, v16);
  uint64_t v20 = (uint64_t)v25;
  sub_1D5962628("RemoteBrowsingClient::insertCatalogTipJournal", 45, 2, &dword_1D5947000, 0, v7, v26);
  (*(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v27 + 8))(v7, v28);
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return sub_1D596EB6C(v20, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.insertCompletedMarketingVideo(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v26 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (void (*)(uint64_t, char *, uint64_t))((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725388);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v12);
  unint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  __int16 v25 = v14;
  uint64_t v16 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v29 = 186;
  uint64_t v23 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 16);
  uint64_t v24 = ObjectType;
  uint64_t v18 = sub_1D596DF9C(&qword_1EA725390, &qword_1EA725388);
  uint64_t v19 = sub_1D596DF9C(&qword_1EA725398, &qword_1EA725388);
  swift_retain();
  v23(&v29, v11, v8, v18, v19, v24, v16);
  uint64_t v20 = (uint64_t)v25;
  sub_1D5962628("RemoteBrowsingClient::insertCompletedMarketingVideo", 51, 2, &dword_1D5947000, 0, v7, v26);
  (*(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v27 + 8))(v7, v28);
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return sub_1D596EB6C(v20, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.processUpNextQueueUpdates(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v26 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (void (*)(uint64_t, char *, uint64_t))((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7253A0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v12);
  unint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  __int16 v25 = v14;
  uint64_t v16 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v29 = 201;
  uint64_t v23 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 16);
  uint64_t v24 = ObjectType;
  uint64_t v18 = sub_1D596DF9C(&qword_1EA7253A8, &qword_1EA7253A0);
  uint64_t v19 = sub_1D596DF9C(&qword_1EA7253B0, &qword_1EA7253A0);
  swift_retain();
  v23(&v29, v11, v8, v18, v19, v24, v16);
  uint64_t v20 = (uint64_t)v25;
  sub_1D5962628("RemoteBrowsingClient::processUpNextQueueUpdates", 47, 2, &dword_1D5947000, 0, v7, v26);
  (*(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v27 + 8))(v7, v28);
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return sub_1D596EB6C(v20, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.repeatWorkoutPlan(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7253B8);
  uint64_t v30 = *(void *)(v4 - 8);
  uint64_t v31 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v28 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7253C0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v10, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v13, (uint64_t)v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  uint64_t v27 = v12;
  uint64_t v14 = *(void *)(v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v32 = 320;
  uint64_t v16 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t))(v14 + 32);
  uint64_t v25 = ObjectType;
  uint64_t v26 = v16;
  uint64_t v17 = sub_1D5AB2210();
  uint64_t v18 = v6;
  uint64_t v19 = sub_1D596DF9C(&qword_1EA7253C8, &qword_1EA7253C0);
  uint64_t v20 = sub_1D596DF9C(&qword_1EA7253D0, &qword_1EA7253C0);
  swift_retain();
  uint64_t v24 = v14;
  uint64_t v21 = (uint64_t)v28;
  v26(&v32, v9, v18, v17, v19, v20, MEMORY[0x1E4F9C2A0], MEMORY[0x1E4F9C2A8], v25, v24);
  uint64_t v22 = (uint64_t)v27;
  sub_1D5965298("RemoteBrowsingClient::repeatWorkoutPlan", 39, 2, &dword_1D5947000, 0, v21, v29);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v21, v31);
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v18);
  return sub_1D596EB6C(v22, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.updateWorkoutPlan(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7253B8);
  uint64_t v30 = *(void *)(v4 - 8);
  uint64_t v31 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v28 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7253D8);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v10, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v13, (uint64_t)v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  uint64_t v27 = v12;
  uint64_t v14 = *(void *)(v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v32 = 200;
  uint64_t v16 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t))(v14 + 32);
  uint64_t v25 = ObjectType;
  uint64_t v26 = v16;
  uint64_t v17 = sub_1D5AB2210();
  uint64_t v18 = v6;
  uint64_t v19 = sub_1D596DF9C(&qword_1EA7253E0, &qword_1EA7253D8);
  uint64_t v20 = sub_1D596DF9C(&qword_1EA7253E8, &qword_1EA7253D8);
  swift_retain();
  uint64_t v24 = v14;
  uint64_t v21 = (uint64_t)v28;
  v26(&v32, v9, v18, v17, v19, v20, MEMORY[0x1E4F9C2A0], MEMORY[0x1E4F9C2A8], v25, v24);
  uint64_t v22 = (uint64_t)v27;
  sub_1D5965298("RemoteBrowsingClient::updateWorkoutPlan", 39, 2, &dword_1D5947000, 0, v21, v29);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v21, v31);
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v18);
  return sub_1D596EB6C(v22, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.requestWorkoutPlanAlternatives(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v25 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7253F0);
  uint64_t v26 = *(void *)(v5 - 8);
  uint64_t v27 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v24 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D5AB4220();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v14 = __swift_project_value_buffer(v11, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v14, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  uint64_t v23 = v13;
  uint64_t v15 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v28 = 307;
  uint64_t v17 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, void, void, void, void, uint64_t, uint64_t))(v15 + 32);
  uint64_t v18 = sub_1D5AB3A60();
  swift_retain();
  uint64_t v22 = v15;
  uint64_t v19 = (uint64_t)v24;
  v17(&v28, v10, v7, v18, MEMORY[0x1E4F9E8E8], MEMORY[0x1E4F9E8F0], MEMORY[0x1E4F9E038], MEMORY[0x1E4F9E040], ObjectType, v22);
  uint64_t v20 = (uint64_t)v23;
  sub_1D5965B94("RemoteBrowsingClient::requestWorkoutPlanAlternatives", 52, 2, &dword_1D5947000, 0, v19, v25);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v19, v27);
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return sub_1D596EB6C(v20, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.showWorkoutPlanCreationPrompt(on:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v23 = *(void *)(v4 - 8);
  uint64_t v24 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v21 = (void (*)(uint64_t, char *, uint64_t))((char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1D5AB3190();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v10, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v13, (uint64_t)v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  uint64_t v14 = *(void *)(v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v25 = 308;
  uint64_t v20 = v12;
  uint64_t v16 = *(void (**)(__int16 *, char *, uint64_t, void, void, uint64_t, uint64_t))(v14 + 16);
  swift_retain();
  uint64_t v17 = v21;
  v16(&v25, v9, v6, MEMORY[0x1E4F9D168], MEMORY[0x1E4F9D170], ObjectType, v14);
  uint64_t v18 = (uint64_t)v20;
  sub_1D5962628("RemoteBrowsingClient::showWorkoutPlanCreationPrompt", 51, 2, &dword_1D5947000, 0, v17, v22);
  (*(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v23 + 8))(v17, v24);
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return sub_1D596EB6C(v18, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.requireActiveWorkoutPlan(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v25 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7253F8);
  uint64_t v26 = *(void *)(v5 - 8);
  uint64_t v27 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v24 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D5AB3190();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v14 = __swift_project_value_buffer(v11, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v14, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  uint64_t v23 = v13;
  uint64_t v15 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v28 = 192;
  uint64_t v17 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, void, void, void, void, uint64_t, uint64_t))(v15 + 32);
  uint64_t v18 = sub_1D5AB3A70();
  swift_retain();
  uint64_t v22 = v15;
  uint64_t v19 = (uint64_t)v24;
  v17(&v28, v10, v7, v18, MEMORY[0x1E4F9D168], MEMORY[0x1E4F9D170], MEMORY[0x1E4F9E048], MEMORY[0x1E4F9E050], ObjectType, v22);
  uint64_t v20 = (uint64_t)v23;
  sub_1D5966490("RemoteBrowsingClient::requireActiveWorkoutPlan", 46, 2, &dword_1D5947000, 0, v19, v25);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v19, v27);
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return sub_1D596EB6C(v20, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.insertWorkoutPlanSummaryViewed(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v26 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (void (*)(uint64_t, char *, uint64_t))((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725400);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  uint64_t v25 = v14;
  uint64_t v16 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v29 = 199;
  uint64_t v23 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 16);
  uint64_t v24 = ObjectType;
  uint64_t v18 = sub_1D596DF9C(&qword_1EA725408, &qword_1EA725400);
  uint64_t v19 = sub_1D596DF9C(&qword_1EA725410, &qword_1EA725400);
  swift_retain();
  v23(&v29, v11, v8, v18, v19, v24, v16);
  uint64_t v20 = (uint64_t)v25;
  sub_1D5962628("RemoteBrowsingClient::insertWorkoutPlanSummaryViewed", 52, 2, &dword_1D5947000, 0, v7, v26);
  (*(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v27 + 8))(v7, v28);
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return sub_1D596EB6C(v20, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.insertArchivedWorkoutPlanSession(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v26 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (void (*)(uint64_t, char *, uint64_t))((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725418);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  uint64_t v25 = v14;
  uint64_t v16 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v29 = 202;
  uint64_t v23 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 16);
  uint64_t v24 = ObjectType;
  uint64_t v18 = sub_1D596DF9C(&qword_1EA725420, &qword_1EA725418);
  uint64_t v19 = sub_1D596DF9C(&qword_1EA725428, &qword_1EA725418);
  swift_retain();
  v23(&v29, v11, v8, v18, v19, v24, v16);
  uint64_t v20 = (uint64_t)v25;
  sub_1D5962628("RemoteBrowsingClient::insertArchivedWorkoutPlanSession", 54, 2, &dword_1D5947000, 0, v7, v26);
  (*(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v27 + 8))(v7, v28);
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return sub_1D596EB6C(v20, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.requestWorkoutPlanTemplateUpdate(request:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v26 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (void (*)(uint64_t, char *, uint64_t))((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725430);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  uint64_t v25 = v14;
  uint64_t v16 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v29 = 195;
  uint64_t v23 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 16);
  uint64_t v24 = ObjectType;
  uint64_t v18 = sub_1D596DF9C(&qword_1EA725438, &qword_1EA725430);
  uint64_t v19 = sub_1D596DF9C(&qword_1EA725440, &qword_1EA725430);
  swift_retain();
  v23(&v29, v11, v8, v18, v19, v24, v16);
  uint64_t v20 = (uint64_t)v25;
  sub_1D5962628("RemoteBrowsingClient::requestWorkoutPlanTemplateUpdate", 54, 2, &dword_1D5947000, 0, v7, v26);
  (*(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v27 + 8))(v7, v28);
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return sub_1D596EB6C(v20, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.requestEndWorkoutPlan(request:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v26 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (void (*)(uint64_t, char *, uint64_t))((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725448);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  uint64_t v25 = v14;
  uint64_t v16 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v29 = 194;
  uint64_t v23 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 16);
  uint64_t v24 = ObjectType;
  uint64_t v18 = sub_1D596DF9C(&qword_1EA725450, &qword_1EA725448);
  uint64_t v19 = sub_1D596DF9C(&qword_1EA725458, &qword_1EA725448);
  swift_retain();
  v23(&v29, v11, v8, v18, v19, v24, v16);
  uint64_t v20 = (uint64_t)v25;
  sub_1D5962628("RemoteBrowsingClient::requestEndWorkoutPlan", 43, 2, &dword_1D5947000, 0, v7, v26);
  (*(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v27 + 8))(v7, v28);
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return sub_1D596EB6C(v20, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.updateOnboardingSurveyResult(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v26 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (void (*)(uint64_t, char *, uint64_t))((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725460);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  uint64_t v25 = v14;
  uint64_t v16 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v29 = 207;
  uint64_t v23 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 16);
  uint64_t v24 = ObjectType;
  uint64_t v18 = sub_1D596DF9C(&qword_1EA725468, &qword_1EA725460);
  uint64_t v19 = sub_1D596DF9C(&qword_1EA725470, &qword_1EA725460);
  swift_retain();
  v23(&v29, v11, v8, v18, v19, v24, v16);
  uint64_t v20 = (uint64_t)v25;
  sub_1D5962628("RemoteBrowsingClient::updateOnboardingSurveyResult", 50, 2, &dword_1D5947000, 0, v7, v26);
  (*(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v27 + 8))(v7, v28);
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return sub_1D596EB6C(v20, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.insertRecentSearchTerm(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v26 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (void (*)(uint64_t, char *, uint64_t))((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725478);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  uint64_t v25 = v14;
  uint64_t v16 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v29 = 204;
  uint64_t v23 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 16);
  uint64_t v24 = ObjectType;
  uint64_t v18 = sub_1D596DF9C(&qword_1EA725480, &qword_1EA725478);
  uint64_t v19 = sub_1D596DF9C(&qword_1EA725488, &qword_1EA725478);
  swift_retain();
  v23(&v29, v11, v8, v18, v19, v24, v16);
  uint64_t v20 = (uint64_t)v25;
  sub_1D5962628("RemoteBrowsingClient::insertRecentSearchTerm", 44, 2, &dword_1D5947000, 0, v7, v26);
  (*(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v27 + 8))(v7, v28);
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return sub_1D596EB6C(v20, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.deleteRecentSearchTerms(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v26 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (void (*)(uint64_t, char *, uint64_t))((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725490);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  uint64_t v25 = v14;
  uint64_t v16 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v29 = 205;
  uint64_t v23 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 16);
  uint64_t v24 = ObjectType;
  uint64_t v18 = sub_1D596DF9C(&qword_1EA725498, &qword_1EA725490);
  uint64_t v19 = sub_1D596DF9C(&qword_1EA7254A0, &qword_1EA725490);
  swift_retain();
  v23(&v29, v11, v8, v18, v19, v24, v16);
  uint64_t v20 = (uint64_t)v25;
  sub_1D5962628("RemoteBrowsingClient::deleteRecentSearchTerm", 44, 2, &dword_1D5947000, 0, v7, v26);
  (*(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v27 + 8))(v7, v28);
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return sub_1D596EB6C(v20, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.insertAchievementNotificationRecord(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v26 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (void (*)(uint64_t, char *, uint64_t))((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7254A8);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  uint64_t v25 = v14;
  uint64_t v16 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v29 = 206;
  uint64_t v23 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 16);
  uint64_t v24 = ObjectType;
  uint64_t v18 = sub_1D596DF9C(&qword_1EA7254B0, &qword_1EA7254A8);
  uint64_t v19 = sub_1D596DF9C(&qword_1EA7254B8, &qword_1EA7254A8);
  swift_retain();
  v23(&v29, v11, v8, v18, v19, v24, v16);
  uint64_t v20 = (uint64_t)v25;
  sub_1D5962628("RemoteBrowsingClient::insertAchievementNotificationRecord", 57, 2, &dword_1D5947000, 0, v7, v26);
  (*(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v27 + 8))(v7, v28);
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return sub_1D596EB6C(v20, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.insertPersonalizationPrivacyPreference(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v26 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (void (*)(uint64_t, char *, uint64_t))((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7254C0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  uint64_t v25 = v14;
  uint64_t v16 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v29 = 208;
  uint64_t v23 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 16);
  uint64_t v24 = ObjectType;
  uint64_t v18 = sub_1D596DF9C(&qword_1EA7254C8, &qword_1EA7254C0);
  uint64_t v19 = sub_1D596DF9C(&qword_1EA7254D0, &qword_1EA7254C0);
  swift_retain();
  v23(&v29, v11, v8, v18, v19, v24, v16);
  uint64_t v20 = (uint64_t)v25;
  sub_1D5962628("RemoteBrowsingClient::insertPersonalizationPrivacyPreference", 60, 2, &dword_1D5947000, 0, v7, v26);
  (*(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v27 + 8))(v7, v28);
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return sub_1D596EB6C(v20, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.requestRemoteSyncableCounts(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7254D8);
  uint64_t v30 = *(void *)(v4 - 8);
  uint64_t v31 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v28 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7254E0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724D90 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v10, (uint64_t)qword_1EA725AE8);
  sub_1D596DDF8(v13, (uint64_t)v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  uint64_t v27 = v12;
  uint64_t v14 = *(void *)(v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v32 = 209;
  uint64_t v16 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t))(v14 + 32);
  uint64_t v25 = ObjectType;
  uint64_t v26 = v16;
  uint64_t v17 = sub_1D5AB2B80();
  uint64_t v18 = v6;
  uint64_t v19 = sub_1D596DF9C(&qword_1EA7254E8, &qword_1EA7254E0);
  uint64_t v20 = sub_1D596DF9C(&qword_1EA7254F0, &qword_1EA7254E0);
  swift_retain();
  uint64_t v24 = v14;
  uint64_t v21 = (uint64_t)v28;
  v26(&v32, v9, v18, v17, v19, v20, MEMORY[0x1E4F9C818], MEMORY[0x1E4F9C820], v25, v24);
  uint64_t v22 = (uint64_t)v27;
  sub_1D5966D8C("RemoteBrowsingClient::requestRemoteSyncableCounts", 49, 2, &dword_1D5947000, 0, v21, v29);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v21, v31);
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v18);
  return sub_1D596EB6C(v22, (uint64_t (*)(void))type metadata accessor for ActivityTracer);
}

uint64_t sub_1D5962064@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.insertConnectionRecord(_:)(a1, a2);
}

uint64_t sub_1D5962088@<X0>(uint64_t a1@<X8>)
{
  return RemoteBrowsingClient.queryConnectionRecord()(a1);
}

uint64_t sub_1D59620AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.requestEnvironment(from:)(a1, a2);
}

uint64_t sub_1D59620D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.requestEnvironmentWithConfirmation(from:)(a1, a2);
}

uint64_t sub_1D59620F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.cancelRemoteBrowsingEnvironmentRequest(for:)(a1, a2);
}

uint64_t sub_1D5962118@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.requestServiceSubscription(from:)(a1, a2);
}

uint64_t sub_1D596213C@<X0>(uint64_t a1@<X8>)
{
  return RemoteBrowsingClient.allowPendingConfirmationRequest()(a1);
}

uint64_t sub_1D5962160@<X0>(uint64_t a1@<X8>)
{
  return RemoteBrowsingClient.denyPendingConfirmationRequest()(a1);
}

uint64_t sub_1D5962184@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.requestGuestAuthentication(to:)(a1, a2);
}

uint64_t sub_1D59621A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return RemoteBrowsingClient.tryPassword(_:)(a1, a2, a3);
}

uint64_t sub_1D59621CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.updateAudioFocusSelection(_:)(a1, a2);
}

uint64_t sub_1D59621F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.updateBurnBarDisplayPreference(_:)(a1, a2);
}

uint64_t sub_1D5962214@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.updateMetricsDisplayPreference(_:)(a1, a2);
}

uint64_t sub_1D5962238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.updateProgressDisplayPreference(_:)(a1, a2);
}

uint64_t sub_1D596225C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.updateNoticePrivacyPreference(_:)(a1, a2);
}

uint64_t sub_1D5962280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.updateOptInPrivacyPreference(_:)(a1, a2);
}

uint64_t sub_1D59622A4@<X0>(uint64_t a1@<X8>)
{
  return RemoteBrowsingClient.queryAllPrivacyAcknowledgements()(a1);
}

uint64_t sub_1D59622C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.insertPrivacyAcknowledgement(_:)(a1, a2);
}

uint64_t sub_1D59622EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.insertBookmarks(_:)(a1, a2);
}

uint64_t sub_1D5962310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.removeBookmarks(_:)(a1, a2);
}

uint64_t sub_1D5962334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.insertArchivedSession(_:)(a1, a2);
}

uint64_t sub_1D5962358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.insertCatalogTipJournal(_:)(a1, a2);
}

uint64_t sub_1D596237C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.insertPlaylist(_:)(a1, a2);
}

uint64_t sub_1D59623A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.deletePlaylist(_:)(a1, a2);
}

uint64_t sub_1D59623C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.insertCompletedMarketingVideo(_:)(a1, a2);
}

uint64_t sub_1D59623E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.processUpNextQueueUpdates(_:)(a1, a2);
}

uint64_t sub_1D596240C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.repeatWorkoutPlan(_:)(a1, a2);
}

uint64_t sub_1D5962430@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.updateWorkoutPlan(_:)(a1, a2);
}

uint64_t sub_1D5962454@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.requestEndWorkoutPlan(request:)(a1, a2);
}

uint64_t sub_1D5962478@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.requestWorkoutPlanTemplateUpdate(request:)(a1, a2);
}

uint64_t sub_1D596249C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.requestWorkoutPlanAlternatives(_:)(a1, a2);
}

uint64_t sub_1D59624C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.showWorkoutPlanCreationPrompt(on:)(a1, a2);
}

uint64_t sub_1D59624E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.requireActiveWorkoutPlan(from:)(a1, a2);
}

uint64_t sub_1D5962508@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.insertWorkoutPlanSummaryViewed(_:)(a1, a2);
}

uint64_t sub_1D596252C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.insertArchivedWorkoutPlanSession(_:)(a1, a2);
}

uint64_t sub_1D5962550@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.updateOnboardingSurveyResult(_:)(a1, a2);
}

uint64_t sub_1D5962574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.insertRecentSearchTerm(_:)(a1, a2);
}

uint64_t sub_1D5962598@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.deleteRecentSearchTerms(_:)(a1, a2);
}

uint64_t sub_1D59625BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.insertAchievementNotificationRecord(_:)(a1, a2);
}

uint64_t sub_1D59625E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.insertPersonalizationPrivacyPreference(_:)(a1, a2);
}

uint64_t sub_1D5962604@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.requestRemoteSyncableCounts(_:)(a1, a2);
}

uint64_t sub_1D5962628@<X0>(char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X3>, int a5@<W4>, void (*a6)(uint64_t, char *, uint64_t)@<X5>, uint64_t a7@<X8>)
{
  uint64_t v8 = v7;
  uint64_t v90 = a6;
  LODWORD(v95) = a5;
  uint64_t v94 = a7;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v101 = *(void **)(v13 - 8);
  uint64_t v102 = v13;
  uint64_t v87 = v101[8];
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  v89 = (char *)v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v100 = (char *)v76 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v93 = (char *)v76 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v99 = (char *)v76 - v20;
  uint64_t v103 = sub_1D5AB1CE0();
  uint64_t v92 = *(void *)(v103 - 8);
  uint64_t v91 = *(void *)(v92 + 64);
  uint64_t v21 = MEMORY[0x1F4188790](v103);
  uint64_t v88 = (char *)v76 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v104 = (char *)v76 - v23;
  uint64_t v83 = sub_1D5AB4AD0();
  uint64_t v82 = *(void **)(v83 - 8);
  uint64_t v24 = v82;
  MEMORY[0x1F4188790](v83);
  uint64_t v26 = (char *)v76 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_1D5AB4AA0();
  uint64_t v27 = *(void *)(v84 - 8);
  MEMORY[0x1F4188790](v84);
  uint64_t v29 = (char *)v76 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActivityTrace();
  swift_allocObject();
  uint64_t v98 = a1;
  uint64_t v96 = a2;
  uint64_t v97 = sub_1D5A0DFE0(a1, a2, a3, a4);
  swift_retain();
  sub_1D5AB4AC0();
  sub_1D5AB4A80();
  uint64_t v81 = (void (*)(char *, uint64_t, uint64_t))v24[2];
  uint64_t v30 = v26;
  uint64_t v31 = v26;
  uint64_t v32 = v83;
  v81(v31, v8, v83);
  type metadata accessor for Signpost();
  uint64_t v33 = swift_allocObject();
  uint64_t v34 = v33 + OBJC_IVAR____TtC13SeymourClient8Signpost_identifier;
  *(void *)uint64_t v34 = a1;
  *(void *)(v34 + 8) = a2;
  *(unsigned char *)(v34 + 16) = a3;
  int v85 = a3;
  uint64_t v35 = v84;
  (*(void (**)(uint64_t, char *, uint64_t))(v27 + 16))(v33 + OBJC_IVAR____TtC13SeymourClient8Signpost_signpostID, v29, v84);
  *(unsigned char *)(v33 + OBJC_IVAR____TtC13SeymourClient8Signpost_telemetryEnabled) = v95;
  v81((char *)(v33 + OBJC_IVAR____TtC13SeymourClient8Signpost_poster), (uint64_t)v30, v32);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE3DB0);
  uint64_t v36 = swift_allocObject();
  *(_DWORD *)(v36 + 24) = 0;
  *(void *)(v36 + 16) = 0;
  ((void (*)(char *, uint64_t))v82[1])(v30, v32);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v35);
  *(void *)(v33 + OBJC_IVAR____TtC13SeymourClient8Signpost_state) = v36;
  uint64_t v37 = v97;
  uint64_t v105 = v97;
  uint64_t v38 = sub_1D5AB4E10();
  uint64_t v84 = v38;
  uint64_t v40 = v39;
  sub_1D5AB1CC0();
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = v37;
  *(void *)(v41 + 24) = v33;
  uint64_t v86 = v33;
  *(void *)(v41 + 32) = v38;
  *(void *)(v41 + 40) = v40;
  uint64_t v83 = v40;
  uint64_t v42 = v96;
  *(void *)(v41 + 48) = v98;
  *(void *)(v41 + 56) = v42;
  *(unsigned char *)(v41 + 64) = a3;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v95 = MEMORY[0x1E4FBC848] + 8;
  id v43 = v99;
  sub_1D5AB4540();
  id v45 = v100;
  id v44 = v101;
  uint64_t v47 = v101 + 2;
  uint64_t v46 = (void (*)(char *, char *, uint64_t))v101[2];
  uint64_t v48 = v102;
  v46(v100, (char *)v90, v102);
  uint64_t v82 = v47;
  uint64_t v49 = v46;
  uint64_t v81 = (void (*)(char *, uint64_t, uint64_t))v46;
  uint64_t v50 = *((unsigned __int8 *)v44 + 80);
  uint64_t v51 = (v50 + 16) & ~v50;
  uint64_t v52 = v51 + v87;
  uint64_t v87 = v50 | 7;
  uint64_t v77 = swift_allocObject();
  uint64_t v80 = v51;
  uint64_t v53 = (void (*)(uint64_t, char *, uint64_t))v44[4];
  v76[1] = v44 + 4;
  uint64_t v54 = v45;
  uint64_t v55 = v48;
  uint64_t v56 = v53;
  uint64_t v90 = v53;
  v53(v77 + v51, v54, v48);
  uint64_t v57 = v89;
  v49(v89, v43, v55);
  unint64_t v78 = ((v52 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v79 = (v52 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v58 = swift_allocObject();
  v56(v58 + v51, v57, v55);
  uint64_t v59 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v58 + ((v52 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v60 = v77;
  *uint64_t v59 = sub_1D596E774;
  v59[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v60;
  uint64_t v61 = v93;
  sub_1D5AB4540();
  uint64_t v62 = v92;
  uint64_t v63 = v88;
  uint64_t v64 = v103;
  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v88, v104, v103);
  unint64_t v65 = (*(unsigned __int8 *)(v62 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
  unint64_t v66 = (v91 + v65 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v67 = swift_allocObject();
  uint64_t v68 = v83;
  *(void *)(v67 + 16) = v84;
  *(void *)(v67 + 24) = v68;
  uint64_t v69 = v96;
  *(void *)(v67 + 32) = v98;
  *(void *)(v67 + 40) = v69;
  *(unsigned char *)(v67 + 48) = v85;
  (*(void (**)(unint64_t, char *, uint64_t))(v62 + 32))(v67 + v65, v63, v64);
  *(void *)(v67 + v66) = v86;
  *(void *)(v67 + ((v66 + 15) & 0xFFFFFFFFFFFFFFF8)) = v97;
  uint64_t v70 = v100;
  uint64_t v71 = v102;
  v81(v100, (uint64_t)v61, v102);
  uint64_t v72 = swift_allocObject();
  v90(v72 + v80, v70, v71);
  uint64_t v73 = (uint64_t (**)(uint64_t))(v72 + v79);
  *uint64_t v73 = sub_1D596E824;
  v73[1] = (uint64_t (*)(uint64_t))v67;
  swift_retain();
  sub_1D5AB4540();
  uint64_t v74 = (void (*)(char *, uint64_t))v101[1];
  v74(v61, v71);
  v74(v99, v71);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v104, v103);
  return swift_release();
}

uint64_t sub_1D5962EA4@<X0>(char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v84 = a6;
  LODWORD(v79) = a5;
  uint64_t v88 = a7;
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725240);
  uint64_t v94 = *(void *)(v96 - 8);
  uint64_t v81 = *(void *)(v94 + 64);
  uint64_t v11 = MEMORY[0x1F4188790](v96);
  uint64_t v93 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v87 = (char *)&v72 - v13;
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v95 = *(void *)(v97 - 8);
  uint64_t v82 = *(void *)(v95 + 64);
  uint64_t v14 = MEMORY[0x1F4188790](v97);
  uint64_t v80 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v92 = (char *)&v72 - v16;
  uint64_t v98 = sub_1D5AB1CE0();
  uint64_t v86 = *(void *)(v98 - 8);
  uint64_t v85 = *(void *)(v86 + 64);
  uint64_t v17 = MEMORY[0x1F4188790](v98);
  uint64_t v83 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v99 = (char *)&v72 - v19;
  uint64_t v75 = sub_1D5AB4AD0();
  uint64_t v74 = *(void *)(v75 - 8);
  uint64_t v20 = v74;
  MEMORY[0x1F4188790](v75);
  uint64_t v22 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = v22;
  uint64_t v76 = (void *)sub_1D5AB4AA0();
  uint64_t v73 = *(v76 - 1);
  uint64_t v23 = v73;
  MEMORY[0x1F4188790](v76);
  uint64_t v25 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActivityTrace();
  swift_allocObject();
  uint64_t v90 = a2;
  uint64_t v91 = a1;
  int v89 = a3;
  uint64_t v26 = sub_1D5A0DFE0(a1, a2, a3, a4);
  swift_retain();
  uint64_t v27 = v77;
  sub_1D5AB4AC0();
  sub_1D5AB4A80();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  uint64_t v29 = v22;
  uint64_t v30 = v75;
  v28(v29, v27, v75);
  type metadata accessor for Signpost();
  uint64_t v31 = swift_allocObject();
  uint64_t v32 = v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_identifier;
  *(void *)uint64_t v32 = a1;
  *(void *)(v32 + 8) = a2;
  *(unsigned char *)(v32 + 16) = a3;
  uint64_t v33 = *(void (**)(uint64_t, char *, void *))(v23 + 16);
  uint64_t v34 = v76;
  v33(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_signpostID, v25, v76);
  *(unsigned char *)(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_telemetryEnabled) = v79;
  uint64_t v35 = v72;
  v28((char *)(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_poster), (uint64_t)v72, v30);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE3DB0);
  uint64_t v36 = swift_allocObject();
  *(_DWORD *)(v36 + 24) = 0;
  *(void *)(v36 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v74 + 8))(v35, v30);
  (*(void (**)(char *, void *))(v73 + 8))(v25, v34);
  *(void *)(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_state) = v36;
  uint64_t v100 = v26;
  uint64_t v37 = sub_1D5AB4E10();
  uint64_t v79 = v37;
  uint64_t v39 = v38;
  sub_1D5AB1CC0();
  uint64_t v40 = swift_allocObject();
  uint64_t v78 = v26;
  *(void *)(v40 + 16) = v26;
  *(void *)(v40 + 24) = v31;
  *(void *)(v40 + 32) = v37;
  *(void *)(v40 + 40) = v39;
  uint64_t v77 = v39;
  uint64_t v41 = v90;
  *(void *)(v40 + 48) = v91;
  *(void *)(v40 + 56) = v41;
  *(unsigned char *)(v40 + 64) = v89;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v42 = v92;
  sub_1D5AB4540();
  uint64_t v43 = v94;
  id v44 = *(void **)(v94 + 16);
  uint64_t v75 = v94 + 16;
  uint64_t v76 = v44;
  id v45 = v93;
  uint64_t v46 = v96;
  ((void (*)(char *, uint64_t, uint64_t))v44)(v93, v84, v96);
  uint64_t v47 = *(unsigned __int8 *)(v43 + 80);
  uint64_t v73 = ((v47 + 16) & ~v47) + v81;
  uint64_t v48 = (v47 + 16) & ~v47;
  uint64_t v84 = v48;
  uint64_t v81 = v47 | 7;
  uint64_t v49 = swift_allocObject();
  uint64_t v74 = *(void *)(v43 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v74)(v49 + v48, v45, v46);
  uint64_t v50 = v95;
  uint64_t v51 = v80;
  uint64_t v52 = v97;
  (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v80, v42, v97);
  unint64_t v53 = (*(unsigned __int8 *)(v50 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  unint64_t v54 = (v82 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v55 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v50 + 32))(v55 + v53, v51, v52);
  uint64_t v56 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v55 + v54);
  *uint64_t v56 = sub_1D596E588;
  v56[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v49;
  uint64_t v82 = sub_1D5AB41F0();
  uint64_t v57 = v87;
  sub_1D5AB4540();
  uint64_t v58 = v86;
  uint64_t v59 = v83;
  uint64_t v60 = v98;
  (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v83, v99, v98);
  unint64_t v61 = (*(unsigned __int8 *)(v58 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  unint64_t v62 = (v85 + v61 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v63 = swift_allocObject();
  uint64_t v64 = v77;
  *(void *)(v63 + 16) = v79;
  *(void *)(v63 + 24) = v64;
  uint64_t v65 = v90;
  *(void *)(v63 + 32) = v91;
  *(void *)(v63 + 40) = v65;
  *(unsigned char *)(v63 + 48) = v89;
  (*(void (**)(unint64_t, char *, uint64_t))(v58 + 32))(v63 + v61, v59, v60);
  *(void *)(v63 + v62) = v31;
  *(void *)(v63 + ((v62 + 15) & 0xFFFFFFFFFFFFFFF8)) = v78;
  unint64_t v66 = v93;
  uint64_t v67 = v96;
  ((void (*)(char *, char *, uint64_t))v76)(v93, v57, v96);
  unint64_t v68 = (v73 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v69 = swift_allocObject();
  ((void (*)(uint64_t, char *, uint64_t))v74)(v69 + v84, v66, v67);
  uint64_t v70 = (uint64_t (**)(uint64_t))(v69 + v68);
  *uint64_t v70 = sub_1D596E5C4;
  v70[1] = (uint64_t (*)(uint64_t))v63;
  swift_retain();
  sub_1D5AB4540();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v57, v67);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v92, v97);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v99, v98);
  return swift_release();
}

uint64_t sub_1D59637A0@<X0>(char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v84 = a6;
  LODWORD(v79) = a5;
  uint64_t v88 = a7;
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725248);
  uint64_t v94 = *(void *)(v96 - 8);
  uint64_t v81 = *(void *)(v94 + 64);
  uint64_t v11 = MEMORY[0x1F4188790](v96);
  uint64_t v93 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v87 = (char *)&v72 - v13;
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v95 = *(void *)(v97 - 8);
  uint64_t v82 = *(void *)(v95 + 64);
  uint64_t v14 = MEMORY[0x1F4188790](v97);
  uint64_t v80 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v92 = (char *)&v72 - v16;
  uint64_t v98 = sub_1D5AB1CE0();
  uint64_t v86 = *(void *)(v98 - 8);
  uint64_t v85 = *(void *)(v86 + 64);
  uint64_t v17 = MEMORY[0x1F4188790](v98);
  uint64_t v83 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v99 = (char *)&v72 - v19;
  uint64_t v75 = sub_1D5AB4AD0();
  uint64_t v74 = *(void *)(v75 - 8);
  uint64_t v20 = v74;
  MEMORY[0x1F4188790](v75);
  uint64_t v22 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = v22;
  uint64_t v76 = (void *)sub_1D5AB4AA0();
  uint64_t v73 = *(v76 - 1);
  uint64_t v23 = v73;
  MEMORY[0x1F4188790](v76);
  uint64_t v25 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActivityTrace();
  swift_allocObject();
  uint64_t v90 = a2;
  uint64_t v91 = a1;
  int v89 = a3;
  uint64_t v26 = sub_1D5A0DFE0(a1, a2, a3, a4);
  swift_retain();
  uint64_t v27 = v77;
  sub_1D5AB4AC0();
  sub_1D5AB4A80();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  uint64_t v29 = v22;
  uint64_t v30 = v75;
  v28(v29, v27, v75);
  type metadata accessor for Signpost();
  uint64_t v31 = swift_allocObject();
  uint64_t v32 = v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_identifier;
  *(void *)uint64_t v32 = a1;
  *(void *)(v32 + 8) = a2;
  *(unsigned char *)(v32 + 16) = a3;
  uint64_t v33 = *(void (**)(uint64_t, char *, void *))(v23 + 16);
  uint64_t v34 = v76;
  v33(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_signpostID, v25, v76);
  *(unsigned char *)(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_telemetryEnabled) = v79;
  uint64_t v35 = v72;
  v28((char *)(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_poster), (uint64_t)v72, v30);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE3DB0);
  uint64_t v36 = swift_allocObject();
  *(_DWORD *)(v36 + 24) = 0;
  *(void *)(v36 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v74 + 8))(v35, v30);
  (*(void (**)(char *, void *))(v73 + 8))(v25, v34);
  *(void *)(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_state) = v36;
  uint64_t v100 = v26;
  uint64_t v37 = sub_1D5AB4E10();
  uint64_t v79 = v37;
  uint64_t v39 = v38;
  sub_1D5AB1CC0();
  uint64_t v40 = swift_allocObject();
  uint64_t v78 = v26;
  *(void *)(v40 + 16) = v26;
  *(void *)(v40 + 24) = v31;
  *(void *)(v40 + 32) = v37;
  *(void *)(v40 + 40) = v39;
  uint64_t v77 = v39;
  uint64_t v41 = v90;
  *(void *)(v40 + 48) = v91;
  *(void *)(v40 + 56) = v41;
  *(unsigned char *)(v40 + 64) = v89;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v42 = v92;
  sub_1D5AB4540();
  uint64_t v43 = v94;
  id v44 = *(void **)(v94 + 16);
  uint64_t v75 = v94 + 16;
  uint64_t v76 = v44;
  id v45 = v93;
  uint64_t v46 = v96;
  ((void (*)(char *, uint64_t, uint64_t))v44)(v93, v84, v96);
  uint64_t v47 = *(unsigned __int8 *)(v43 + 80);
  uint64_t v73 = ((v47 + 16) & ~v47) + v81;
  uint64_t v48 = (v47 + 16) & ~v47;
  uint64_t v84 = v48;
  uint64_t v81 = v47 | 7;
  uint64_t v49 = swift_allocObject();
  uint64_t v74 = *(void *)(v43 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v74)(v49 + v48, v45, v46);
  uint64_t v50 = v95;
  uint64_t v51 = v80;
  uint64_t v52 = v97;
  (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v80, v42, v97);
  unint64_t v53 = (*(unsigned __int8 *)(v50 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  unint64_t v54 = (v82 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v55 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v50 + 32))(v55 + v53, v51, v52);
  uint64_t v56 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v55 + v54);
  *uint64_t v56 = sub_1D596E4F8;
  v56[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v49;
  uint64_t v82 = sub_1D5AB3E10();
  uint64_t v57 = v87;
  sub_1D5AB4540();
  uint64_t v58 = v86;
  uint64_t v59 = v83;
  uint64_t v60 = v98;
  (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v83, v99, v98);
  unint64_t v61 = (*(unsigned __int8 *)(v58 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  unint64_t v62 = (v85 + v61 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v63 = swift_allocObject();
  uint64_t v64 = v77;
  *(void *)(v63 + 16) = v79;
  *(void *)(v63 + 24) = v64;
  uint64_t v65 = v90;
  *(void *)(v63 + 32) = v91;
  *(void *)(v63 + 40) = v65;
  *(unsigned char *)(v63 + 48) = v89;
  (*(void (**)(unint64_t, char *, uint64_t))(v58 + 32))(v63 + v61, v59, v60);
  *(void *)(v63 + v62) = v31;
  *(void *)(v63 + ((v62 + 15) & 0xFFFFFFFFFFFFFFF8)) = v78;
  unint64_t v66 = v93;
  uint64_t v67 = v96;
  ((void (*)(char *, char *, uint64_t))v76)(v93, v57, v96);
  unint64_t v68 = (v73 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v69 = swift_allocObject();
  ((void (*)(uint64_t, char *, uint64_t))v74)(v69 + v84, v66, v67);
  uint64_t v70 = (uint64_t (**)(uint64_t))(v69 + v68);
  *uint64_t v70 = sub_1D596E534;
  v70[1] = (uint64_t (*)(uint64_t))v63;
  swift_retain();
  sub_1D5AB4540();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v57, v67);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v92, v97);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v99, v98);
  return swift_release();
}

uint64_t sub_1D596409C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v84 = a6;
  LODWORD(v79) = a5;
  uint64_t v88 = a7;
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725250);
  uint64_t v94 = *(void *)(v96 - 8);
  uint64_t v81 = *(void *)(v94 + 64);
  uint64_t v11 = MEMORY[0x1F4188790](v96);
  uint64_t v93 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v87 = (char *)&v72 - v13;
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v95 = *(void *)(v97 - 8);
  uint64_t v82 = *(void *)(v95 + 64);
  uint64_t v14 = MEMORY[0x1F4188790](v97);
  uint64_t v80 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v92 = (char *)&v72 - v16;
  uint64_t v98 = sub_1D5AB1CE0();
  uint64_t v86 = *(void *)(v98 - 8);
  uint64_t v85 = *(void *)(v86 + 64);
  uint64_t v17 = MEMORY[0x1F4188790](v98);
  uint64_t v83 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v99 = (char *)&v72 - v19;
  uint64_t v75 = sub_1D5AB4AD0();
  uint64_t v74 = *(void *)(v75 - 8);
  uint64_t v20 = v74;
  MEMORY[0x1F4188790](v75);
  uint64_t v22 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = v22;
  uint64_t v76 = (void *)sub_1D5AB4AA0();
  uint64_t v73 = *(v76 - 1);
  uint64_t v23 = v73;
  MEMORY[0x1F4188790](v76);
  uint64_t v25 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActivityTrace();
  swift_allocObject();
  uint64_t v90 = a2;
  uint64_t v91 = a1;
  int v89 = a3;
  uint64_t v26 = sub_1D5A0DFE0(a1, a2, a3, a4);
  swift_retain();
  uint64_t v27 = v77;
  sub_1D5AB4AC0();
  sub_1D5AB4A80();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  uint64_t v29 = v22;
  uint64_t v30 = v75;
  v28(v29, v27, v75);
  type metadata accessor for Signpost();
  uint64_t v31 = swift_allocObject();
  uint64_t v32 = v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_identifier;
  *(void *)uint64_t v32 = a1;
  *(void *)(v32 + 8) = a2;
  *(unsigned char *)(v32 + 16) = a3;
  uint64_t v33 = *(void (**)(uint64_t, char *, void *))(v23 + 16);
  uint64_t v34 = v76;
  v33(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_signpostID, v25, v76);
  *(unsigned char *)(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_telemetryEnabled) = v79;
  uint64_t v35 = v72;
  v28((char *)(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_poster), (uint64_t)v72, v30);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE3DB0);
  uint64_t v36 = swift_allocObject();
  *(_DWORD *)(v36 + 24) = 0;
  *(void *)(v36 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v74 + 8))(v35, v30);
  (*(void (**)(char *, void *))(v73 + 8))(v25, v34);
  *(void *)(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_state) = v36;
  uint64_t v100 = v26;
  uint64_t v37 = sub_1D5AB4E10();
  uint64_t v79 = v37;
  uint64_t v39 = v38;
  sub_1D5AB1CC0();
  uint64_t v40 = swift_allocObject();
  uint64_t v78 = v26;
  *(void *)(v40 + 16) = v26;
  *(void *)(v40 + 24) = v31;
  *(void *)(v40 + 32) = v37;
  *(void *)(v40 + 40) = v39;
  uint64_t v77 = v39;
  uint64_t v41 = v90;
  *(void *)(v40 + 48) = v91;
  *(void *)(v40 + 56) = v41;
  *(unsigned char *)(v40 + 64) = v89;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v42 = v92;
  sub_1D5AB4540();
  uint64_t v43 = v94;
  id v44 = *(void **)(v94 + 16);
  uint64_t v75 = v94 + 16;
  uint64_t v76 = v44;
  id v45 = v93;
  uint64_t v46 = v96;
  ((void (*)(char *, uint64_t, uint64_t))v44)(v93, v84, v96);
  uint64_t v47 = *(unsigned __int8 *)(v43 + 80);
  uint64_t v73 = ((v47 + 16) & ~v47) + v81;
  uint64_t v48 = (v47 + 16) & ~v47;
  uint64_t v84 = v48;
  uint64_t v81 = v47 | 7;
  uint64_t v49 = swift_allocObject();
  uint64_t v74 = *(void *)(v43 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v74)(v49 + v48, v45, v46);
  uint64_t v50 = v95;
  uint64_t v51 = v80;
  uint64_t v52 = v97;
  (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v80, v42, v97);
  unint64_t v53 = (*(unsigned __int8 *)(v50 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  unint64_t v54 = (v82 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v55 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v50 + 32))(v55 + v53, v51, v52);
  uint64_t v56 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v55 + v54);
  *uint64_t v56 = sub_1D596E468;
  v56[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v49;
  uint64_t v82 = sub_1D5AB34D0();
  uint64_t v57 = v87;
  sub_1D5AB4540();
  uint64_t v58 = v86;
  uint64_t v59 = v83;
  uint64_t v60 = v98;
  (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v83, v99, v98);
  unint64_t v61 = (*(unsigned __int8 *)(v58 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  unint64_t v62 = (v85 + v61 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v63 = swift_allocObject();
  uint64_t v64 = v77;
  *(void *)(v63 + 16) = v79;
  *(void *)(v63 + 24) = v64;
  uint64_t v65 = v90;
  *(void *)(v63 + 32) = v91;
  *(void *)(v63 + 40) = v65;
  *(unsigned char *)(v63 + 48) = v89;
  (*(void (**)(unint64_t, char *, uint64_t))(v58 + 32))(v63 + v61, v59, v60);
  *(void *)(v63 + v62) = v31;
  *(void *)(v63 + ((v62 + 15) & 0xFFFFFFFFFFFFFFF8)) = v78;
  unint64_t v66 = v93;
  uint64_t v67 = v96;
  ((void (*)(char *, char *, uint64_t))v76)(v93, v57, v96);
  unint64_t v68 = (v73 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v69 = swift_allocObject();
  ((void (*)(uint64_t, char *, uint64_t))v74)(v69 + v84, v66, v67);
  uint64_t v70 = (uint64_t (**)(uint64_t))(v69 + v68);
  *uint64_t v70 = sub_1D596E4A4;
  v70[1] = (uint64_t (*)(uint64_t))v63;
  swift_retain();
  sub_1D5AB4540();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v57, v67);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v92, v97);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v99, v98);
  return swift_release();
}

uint64_t sub_1D5964998@<X0>(char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v84 = a6;
  LODWORD(v79) = a5;
  uint64_t v88 = a7;
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7252E8);
  uint64_t v94 = *(void *)(v96 - 8);
  uint64_t v81 = *(void *)(v94 + 64);
  uint64_t v11 = MEMORY[0x1F4188790](v96);
  uint64_t v93 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v87 = (char *)&v72 - v13;
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v95 = *(void *)(v97 - 8);
  uint64_t v82 = *(void *)(v95 + 64);
  uint64_t v14 = MEMORY[0x1F4188790](v97);
  uint64_t v80 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v92 = (char *)&v72 - v16;
  uint64_t v98 = sub_1D5AB1CE0();
  uint64_t v86 = *(void *)(v98 - 8);
  uint64_t v85 = *(void *)(v86 + 64);
  uint64_t v17 = MEMORY[0x1F4188790](v98);
  uint64_t v83 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v99 = (char *)&v72 - v19;
  uint64_t v75 = sub_1D5AB4AD0();
  uint64_t v74 = *(void *)(v75 - 8);
  uint64_t v20 = v74;
  MEMORY[0x1F4188790](v75);
  uint64_t v22 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = v22;
  uint64_t v76 = (void *)sub_1D5AB4AA0();
  uint64_t v73 = *(v76 - 1);
  uint64_t v23 = v73;
  MEMORY[0x1F4188790](v76);
  uint64_t v25 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActivityTrace();
  swift_allocObject();
  uint64_t v90 = a2;
  uint64_t v91 = a1;
  int v89 = a3;
  uint64_t v26 = sub_1D5A0DFE0(a1, a2, a3, a4);
  swift_retain();
  uint64_t v27 = v77;
  sub_1D5AB4AC0();
  sub_1D5AB4A80();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  uint64_t v29 = v22;
  uint64_t v30 = v75;
  v28(v29, v27, v75);
  type metadata accessor for Signpost();
  uint64_t v31 = swift_allocObject();
  uint64_t v32 = v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_identifier;
  *(void *)uint64_t v32 = a1;
  *(void *)(v32 + 8) = a2;
  *(unsigned char *)(v32 + 16) = a3;
  uint64_t v33 = *(void (**)(uint64_t, char *, void *))(v23 + 16);
  uint64_t v34 = v76;
  v33(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_signpostID, v25, v76);
  *(unsigned char *)(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_telemetryEnabled) = v79;
  uint64_t v35 = v72;
  v28((char *)(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_poster), (uint64_t)v72, v30);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE3DB0);
  uint64_t v36 = swift_allocObject();
  *(_DWORD *)(v36 + 24) = 0;
  *(void *)(v36 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v74 + 8))(v35, v30);
  (*(void (**)(char *, void *))(v73 + 8))(v25, v34);
  *(void *)(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_state) = v36;
  uint64_t v100 = v26;
  uint64_t v37 = sub_1D5AB4E10();
  uint64_t v79 = v37;
  uint64_t v39 = v38;
  sub_1D5AB1CC0();
  uint64_t v40 = swift_allocObject();
  uint64_t v78 = v26;
  *(void *)(v40 + 16) = v26;
  *(void *)(v40 + 24) = v31;
  *(void *)(v40 + 32) = v37;
  *(void *)(v40 + 40) = v39;
  uint64_t v77 = v39;
  uint64_t v41 = v90;
  *(void *)(v40 + 48) = v91;
  *(void *)(v40 + 56) = v41;
  *(unsigned char *)(v40 + 64) = v89;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v42 = v92;
  sub_1D5AB4540();
  uint64_t v43 = v94;
  id v44 = *(void **)(v94 + 16);
  uint64_t v75 = v94 + 16;
  uint64_t v76 = v44;
  id v45 = v93;
  uint64_t v46 = v96;
  ((void (*)(char *, uint64_t, uint64_t))v44)(v93, v84, v96);
  uint64_t v47 = *(unsigned __int8 *)(v43 + 80);
  uint64_t v73 = ((v47 + 16) & ~v47) + v81;
  uint64_t v48 = (v47 + 16) & ~v47;
  uint64_t v84 = v48;
  uint64_t v81 = v47 | 7;
  uint64_t v49 = swift_allocObject();
  uint64_t v74 = *(void *)(v43 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v74)(v49 + v48, v45, v46);
  uint64_t v50 = v95;
  uint64_t v51 = v80;
  uint64_t v52 = v97;
  (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v80, v42, v97);
  unint64_t v53 = (*(unsigned __int8 *)(v50 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  unint64_t v54 = (v82 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v55 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v50 + 32))(v55 + v53, v51, v52);
  uint64_t v56 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v55 + v54);
  *uint64_t v56 = sub_1D596E3C0;
  v56[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v49;
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7252F0);
  uint64_t v57 = v87;
  sub_1D5AB4540();
  uint64_t v58 = v86;
  uint64_t v59 = v83;
  uint64_t v60 = v98;
  (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v83, v99, v98);
  unint64_t v61 = (*(unsigned __int8 *)(v58 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  unint64_t v62 = (v85 + v61 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v63 = swift_allocObject();
  uint64_t v64 = v77;
  *(void *)(v63 + 16) = v79;
  *(void *)(v63 + 24) = v64;
  uint64_t v65 = v90;
  *(void *)(v63 + 32) = v91;
  *(void *)(v63 + 40) = v65;
  *(unsigned char *)(v63 + 48) = v89;
  (*(void (**)(unint64_t, char *, uint64_t))(v58 + 32))(v63 + v61, v59, v60);
  *(void *)(v63 + v62) = v31;
  *(void *)(v63 + ((v62 + 15) & 0xFFFFFFFFFFFFFFF8)) = v78;
  unint64_t v66 = v93;
  uint64_t v67 = v96;
  ((void (*)(char *, char *, uint64_t))v76)(v93, v57, v96);
  unint64_t v68 = (v73 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v69 = swift_allocObject();
  ((void (*)(uint64_t, char *, uint64_t))v74)(v69 + v84, v66, v67);
  uint64_t v70 = (uint64_t (**)(uint64_t))(v69 + v68);
  *uint64_t v70 = sub_1D596E3FC;
  v70[1] = (uint64_t (*)(uint64_t))v63;
  swift_retain();
  sub_1D5AB4540();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v57, v67);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v92, v97);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v99, v98);
  return swift_release();
}

uint64_t sub_1D5965298@<X0>(char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v84 = a6;
  LODWORD(v79) = a5;
  uint64_t v88 = a7;
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7253B8);
  uint64_t v94 = *(void *)(v96 - 8);
  uint64_t v81 = *(void *)(v94 + 64);
  uint64_t v11 = MEMORY[0x1F4188790](v96);
  uint64_t v93 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v87 = (char *)&v72 - v13;
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v95 = *(void *)(v97 - 8);
  uint64_t v82 = *(void *)(v95 + 64);
  uint64_t v14 = MEMORY[0x1F4188790](v97);
  uint64_t v80 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v92 = (char *)&v72 - v16;
  uint64_t v98 = sub_1D5AB1CE0();
  uint64_t v86 = *(void *)(v98 - 8);
  uint64_t v85 = *(void *)(v86 + 64);
  uint64_t v17 = MEMORY[0x1F4188790](v98);
  uint64_t v83 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v99 = (char *)&v72 - v19;
  uint64_t v75 = sub_1D5AB4AD0();
  uint64_t v74 = *(void *)(v75 - 8);
  uint64_t v20 = v74;
  MEMORY[0x1F4188790](v75);
  uint64_t v22 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = v22;
  uint64_t v76 = (void *)sub_1D5AB4AA0();
  uint64_t v73 = *(v76 - 1);
  uint64_t v23 = v73;
  MEMORY[0x1F4188790](v76);
  uint64_t v25 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActivityTrace();
  swift_allocObject();
  uint64_t v90 = a2;
  uint64_t v91 = a1;
  int v89 = a3;
  uint64_t v26 = sub_1D5A0DFE0(a1, a2, a3, a4);
  swift_retain();
  uint64_t v27 = v77;
  sub_1D5AB4AC0();
  sub_1D5AB4A80();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  uint64_t v29 = v22;
  uint64_t v30 = v75;
  v28(v29, v27, v75);
  type metadata accessor for Signpost();
  uint64_t v31 = swift_allocObject();
  uint64_t v32 = v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_identifier;
  *(void *)uint64_t v32 = a1;
  *(void *)(v32 + 8) = a2;
  *(unsigned char *)(v32 + 16) = a3;
  uint64_t v33 = *(void (**)(uint64_t, char *, void *))(v23 + 16);
  uint64_t v34 = v76;
  v33(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_signpostID, v25, v76);
  *(unsigned char *)(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_telemetryEnabled) = v79;
  uint64_t v35 = v72;
  v28((char *)(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_poster), (uint64_t)v72, v30);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE3DB0);
  uint64_t v36 = swift_allocObject();
  *(_DWORD *)(v36 + 24) = 0;
  *(void *)(v36 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v74 + 8))(v35, v30);
  (*(void (**)(char *, void *))(v73 + 8))(v25, v34);
  *(void *)(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_state) = v36;
  uint64_t v100 = v26;
  uint64_t v37 = sub_1D5AB4E10();
  uint64_t v79 = v37;
  uint64_t v39 = v38;
  sub_1D5AB1CC0();
  uint64_t v40 = swift_allocObject();
  uint64_t v78 = v26;
  *(void *)(v40 + 16) = v26;
  *(void *)(v40 + 24) = v31;
  *(void *)(v40 + 32) = v37;
  *(void *)(v40 + 40) = v39;
  uint64_t v77 = v39;
  uint64_t v41 = v90;
  *(void *)(v40 + 48) = v91;
  *(void *)(v40 + 56) = v41;
  *(unsigned char *)(v40 + 64) = v89;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v42 = v92;
  sub_1D5AB4540();
  uint64_t v43 = v94;
  id v44 = *(void **)(v94 + 16);
  uint64_t v75 = v94 + 16;
  uint64_t v76 = v44;
  id v45 = v93;
  uint64_t v46 = v96;
  ((void (*)(char *, uint64_t, uint64_t))v44)(v93, v84, v96);
  uint64_t v47 = *(unsigned __int8 *)(v43 + 80);
  uint64_t v73 = ((v47 + 16) & ~v47) + v81;
  uint64_t v48 = (v47 + 16) & ~v47;
  uint64_t v84 = v48;
  uint64_t v81 = v47 | 7;
  uint64_t v49 = swift_allocObject();
  uint64_t v74 = *(void *)(v43 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v74)(v49 + v48, v45, v46);
  uint64_t v50 = v95;
  uint64_t v51 = v80;
  uint64_t v52 = v97;
  (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v80, v42, v97);
  unint64_t v53 = (*(unsigned __int8 *)(v50 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  unint64_t v54 = (v82 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v55 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v50 + 32))(v55 + v53, v51, v52);
  uint64_t v56 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v55 + v54);
  *uint64_t v56 = sub_1D596E330;
  v56[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v49;
  uint64_t v82 = sub_1D5AB2210();
  uint64_t v57 = v87;
  sub_1D5AB4540();
  uint64_t v58 = v86;
  uint64_t v59 = v83;
  uint64_t v60 = v98;
  (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v83, v99, v98);
  unint64_t v61 = (*(unsigned __int8 *)(v58 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  unint64_t v62 = (v85 + v61 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v63 = swift_allocObject();
  uint64_t v64 = v77;
  *(void *)(v63 + 16) = v79;
  *(void *)(v63 + 24) = v64;
  uint64_t v65 = v90;
  *(void *)(v63 + 32) = v91;
  *(void *)(v63 + 40) = v65;
  *(unsigned char *)(v63 + 48) = v89;
  (*(void (**)(unint64_t, char *, uint64_t))(v58 + 32))(v63 + v61, v59, v60);
  *(void *)(v63 + v62) = v31;
  *(void *)(v63 + ((v62 + 15) & 0xFFFFFFFFFFFFFFF8)) = v78;
  unint64_t v66 = v93;
  uint64_t v67 = v96;
  ((void (*)(char *, char *, uint64_t))v76)(v93, v57, v96);
  unint64_t v68 = (v73 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v69 = swift_allocObject();
  ((void (*)(uint64_t, char *, uint64_t))v74)(v69 + v84, v66, v67);
  uint64_t v70 = (uint64_t (**)(uint64_t))(v69 + v68);
  *uint64_t v70 = sub_1D596E36C;
  v70[1] = (uint64_t (*)(uint64_t))v63;
  swift_retain();
  sub_1D5AB4540();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v57, v67);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v92, v97);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v99, v98);
  return swift_release();
}

uint64_t sub_1D5965B94@<X0>(char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v84 = a6;
  LODWORD(v79) = a5;
  uint64_t v88 = a7;
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7253F0);
  uint64_t v94 = *(void *)(v96 - 8);
  uint64_t v81 = *(void *)(v94 + 64);
  uint64_t v11 = MEMORY[0x1F4188790](v96);
  uint64_t v93 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v87 = (char *)&v72 - v13;
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v95 = *(void *)(v97 - 8);
  uint64_t v82 = *(void *)(v95 + 64);
  uint64_t v14 = MEMORY[0x1F4188790](v97);
  uint64_t v80 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v92 = (char *)&v72 - v16;
  uint64_t v98 = sub_1D5AB1CE0();
  uint64_t v86 = *(void *)(v98 - 8);
  uint64_t v85 = *(void *)(v86 + 64);
  uint64_t v17 = MEMORY[0x1F4188790](v98);
  uint64_t v83 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v99 = (char *)&v72 - v19;
  uint64_t v75 = sub_1D5AB4AD0();
  uint64_t v74 = *(void *)(v75 - 8);
  uint64_t v20 = v74;
  MEMORY[0x1F4188790](v75);
  uint64_t v22 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = v22;
  uint64_t v76 = (void *)sub_1D5AB4AA0();
  uint64_t v73 = *(v76 - 1);
  uint64_t v23 = v73;
  MEMORY[0x1F4188790](v76);
  uint64_t v25 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActivityTrace();
  swift_allocObject();
  uint64_t v90 = a2;
  uint64_t v91 = a1;
  int v89 = a3;
  uint64_t v26 = sub_1D5A0DFE0(a1, a2, a3, a4);
  swift_retain();
  uint64_t v27 = v77;
  sub_1D5AB4AC0();
  sub_1D5AB4A80();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  uint64_t v29 = v22;
  uint64_t v30 = v75;
  v28(v29, v27, v75);
  type metadata accessor for Signpost();
  uint64_t v31 = swift_allocObject();
  uint64_t v32 = v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_identifier;
  *(void *)uint64_t v32 = a1;
  *(void *)(v32 + 8) = a2;
  *(unsigned char *)(v32 + 16) = a3;
  uint64_t v33 = *(void (**)(uint64_t, char *, void *))(v23 + 16);
  uint64_t v34 = v76;
  v33(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_signpostID, v25, v76);
  *(unsigned char *)(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_telemetryEnabled) = v79;
  uint64_t v35 = v72;
  v28((char *)(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_poster), (uint64_t)v72, v30);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE3DB0);
  uint64_t v36 = swift_allocObject();
  *(_DWORD *)(v36 + 24) = 0;
  *(void *)(v36 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v74 + 8))(v35, v30);
  (*(void (**)(char *, void *))(v73 + 8))(v25, v34);
  *(void *)(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_state) = v36;
  uint64_t v100 = v26;
  uint64_t v37 = sub_1D5AB4E10();
  uint64_t v79 = v37;
  uint64_t v39 = v38;
  sub_1D5AB1CC0();
  uint64_t v40 = swift_allocObject();
  uint64_t v78 = v26;
  *(void *)(v40 + 16) = v26;
  *(void *)(v40 + 24) = v31;
  *(void *)(v40 + 32) = v37;
  *(void *)(v40 + 40) = v39;
  uint64_t v77 = v39;
  uint64_t v41 = v90;
  *(void *)(v40 + 48) = v91;
  *(void *)(v40 + 56) = v41;
  *(unsigned char *)(v40 + 64) = v89;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v42 = v92;
  sub_1D5AB4540();
  uint64_t v43 = v94;
  id v44 = *(void **)(v94 + 16);
  uint64_t v75 = v94 + 16;
  uint64_t v76 = v44;
  id v45 = v93;
  uint64_t v46 = v96;
  ((void (*)(char *, uint64_t, uint64_t))v44)(v93, v84, v96);
  uint64_t v47 = *(unsigned __int8 *)(v43 + 80);
  uint64_t v73 = ((v47 + 16) & ~v47) + v81;
  uint64_t v48 = (v47 + 16) & ~v47;
  uint64_t v84 = v48;
  uint64_t v81 = v47 | 7;
  uint64_t v49 = swift_allocObject();
  uint64_t v74 = *(void *)(v43 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v74)(v49 + v48, v45, v46);
  uint64_t v50 = v95;
  uint64_t v51 = v80;
  uint64_t v52 = v97;
  (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v80, v42, v97);
  unint64_t v53 = (*(unsigned __int8 *)(v50 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  unint64_t v54 = (v82 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v55 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v50 + 32))(v55 + v53, v51, v52);
  uint64_t v56 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v55 + v54);
  *uint64_t v56 = sub_1D596E2A0;
  v56[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v49;
  uint64_t v82 = sub_1D5AB3A60();
  uint64_t v57 = v87;
  sub_1D5AB4540();
  uint64_t v58 = v86;
  uint64_t v59 = v83;
  uint64_t v60 = v98;
  (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v83, v99, v98);
  unint64_t v61 = (*(unsigned __int8 *)(v58 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  unint64_t v62 = (v85 + v61 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v63 = swift_allocObject();
  uint64_t v64 = v77;
  *(void *)(v63 + 16) = v79;
  *(void *)(v63 + 24) = v64;
  uint64_t v65 = v90;
  *(void *)(v63 + 32) = v91;
  *(void *)(v63 + 40) = v65;
  *(unsigned char *)(v63 + 48) = v89;
  (*(void (**)(unint64_t, char *, uint64_t))(v58 + 32))(v63 + v61, v59, v60);
  *(void *)(v63 + v62) = v31;
  *(void *)(v63 + ((v62 + 15) & 0xFFFFFFFFFFFFFFF8)) = v78;
  unint64_t v66 = v93;
  uint64_t v67 = v96;
  ((void (*)(char *, char *, uint64_t))v76)(v93, v57, v96);
  unint64_t v68 = (v73 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v69 = swift_allocObject();
  ((void (*)(uint64_t, char *, uint64_t))v74)(v69 + v84, v66, v67);
  uint64_t v70 = (uint64_t (**)(uint64_t))(v69 + v68);
  *uint64_t v70 = sub_1D596E2DC;
  v70[1] = (uint64_t (*)(uint64_t))v63;
  swift_retain();
  sub_1D5AB4540();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v57, v67);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v92, v97);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v99, v98);
  return swift_release();
}

uint64_t sub_1D5966490@<X0>(char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v84 = a6;
  LODWORD(v79) = a5;
  uint64_t v88 = a7;
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7253F8);
  uint64_t v94 = *(void *)(v96 - 8);
  uint64_t v81 = *(void *)(v94 + 64);
  uint64_t v11 = MEMORY[0x1F4188790](v96);
  uint64_t v93 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v87 = (char *)&v72 - v13;
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v95 = *(void *)(v97 - 8);
  uint64_t v82 = *(void *)(v95 + 64);
  uint64_t v14 = MEMORY[0x1F4188790](v97);
  uint64_t v80 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v92 = (char *)&v72 - v16;
  uint64_t v98 = sub_1D5AB1CE0();
  uint64_t v86 = *(void *)(v98 - 8);
  uint64_t v85 = *(void *)(v86 + 64);
  uint64_t v17 = MEMORY[0x1F4188790](v98);
  uint64_t v83 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v99 = (char *)&v72 - v19;
  uint64_t v75 = sub_1D5AB4AD0();
  uint64_t v74 = *(void *)(v75 - 8);
  uint64_t v20 = v74;
  MEMORY[0x1F4188790](v75);
  uint64_t v22 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = v22;
  uint64_t v76 = (void *)sub_1D5AB4AA0();
  uint64_t v73 = *(v76 - 1);
  uint64_t v23 = v73;
  MEMORY[0x1F4188790](v76);
  uint64_t v25 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActivityTrace();
  swift_allocObject();
  uint64_t v90 = a2;
  uint64_t v91 = a1;
  int v89 = a3;
  uint64_t v26 = sub_1D5A0DFE0(a1, a2, a3, a4);
  swift_retain();
  uint64_t v27 = v77;
  sub_1D5AB4AC0();
  sub_1D5AB4A80();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  uint64_t v29 = v22;
  uint64_t v30 = v75;
  v28(v29, v27, v75);
  type metadata accessor for Signpost();
  uint64_t v31 = swift_allocObject();
  uint64_t v32 = v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_identifier;
  *(void *)uint64_t v32 = a1;
  *(void *)(v32 + 8) = a2;
  *(unsigned char *)(v32 + 16) = a3;
  uint64_t v33 = *(void (**)(uint64_t, char *, void *))(v23 + 16);
  uint64_t v34 = v76;
  v33(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_signpostID, v25, v76);
  *(unsigned char *)(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_telemetryEnabled) = v79;
  uint64_t v35 = v72;
  v28((char *)(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_poster), (uint64_t)v72, v30);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE3DB0);
  uint64_t v36 = swift_allocObject();
  *(_DWORD *)(v36 + 24) = 0;
  *(void *)(v36 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v74 + 8))(v35, v30);
  (*(void (**)(char *, void *))(v73 + 8))(v25, v34);
  *(void *)(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_state) = v36;
  uint64_t v100 = v26;
  uint64_t v37 = sub_1D5AB4E10();
  uint64_t v79 = v37;
  uint64_t v39 = v38;
  sub_1D5AB1CC0();
  uint64_t v40 = swift_allocObject();
  uint64_t v78 = v26;
  *(void *)(v40 + 16) = v26;
  *(void *)(v40 + 24) = v31;
  *(void *)(v40 + 32) = v37;
  *(void *)(v40 + 40) = v39;
  uint64_t v77 = v39;
  uint64_t v41 = v90;
  *(void *)(v40 + 48) = v91;
  *(void *)(v40 + 56) = v41;
  *(unsigned char *)(v40 + 64) = v89;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v42 = v92;
  sub_1D5AB4540();
  uint64_t v43 = v94;
  id v44 = *(void **)(v94 + 16);
  uint64_t v75 = v94 + 16;
  uint64_t v76 = v44;
  id v45 = v93;
  uint64_t v46 = v96;
  ((void (*)(char *, uint64_t, uint64_t))v44)(v93, v84, v96);
  uint64_t v47 = *(unsigned __int8 *)(v43 + 80);
  uint64_t v73 = ((v47 + 16) & ~v47) + v81;
  uint64_t v48 = (v47 + 16) & ~v47;
  uint64_t v84 = v48;
  uint64_t v81 = v47 | 7;
  uint64_t v49 = swift_allocObject();
  uint64_t v74 = *(void *)(v43 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v74)(v49 + v48, v45, v46);
  uint64_t v50 = v95;
  uint64_t v51 = v80;
  uint64_t v52 = v97;
  (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v80, v42, v97);
  unint64_t v53 = (*(unsigned __int8 *)(v50 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  unint64_t v54 = (v82 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v55 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v50 + 32))(v55 + v53, v51, v52);
  uint64_t v56 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v55 + v54);
  *uint64_t v56 = sub_1D596E210;
  v56[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v49;
  uint64_t v82 = sub_1D5AB3A70();
  uint64_t v57 = v87;
  sub_1D5AB4540();
  uint64_t v58 = v86;
  uint64_t v59 = v83;
  uint64_t v60 = v98;
  (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v83, v99, v98);
  unint64_t v61 = (*(unsigned __int8 *)(v58 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  unint64_t v62 = (v85 + v61 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v63 = swift_allocObject();
  uint64_t v64 = v77;
  *(void *)(v63 + 16) = v79;
  *(void *)(v63 + 24) = v64;
  uint64_t v65 = v90;
  *(void *)(v63 + 32) = v91;
  *(void *)(v63 + 40) = v65;
  *(unsigned char *)(v63 + 48) = v89;
  (*(void (**)(unint64_t, char *, uint64_t))(v58 + 32))(v63 + v61, v59, v60);
  *(void *)(v63 + v62) = v31;
  *(void *)(v63 + ((v62 + 15) & 0xFFFFFFFFFFFFFFF8)) = v78;
  unint64_t v66 = v93;
  uint64_t v67 = v96;
  ((void (*)(char *, char *, uint64_t))v76)(v93, v57, v96);
  unint64_t v68 = (v73 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v69 = swift_allocObject();
  ((void (*)(uint64_t, char *, uint64_t))v74)(v69 + v84, v66, v67);
  uint64_t v70 = (uint64_t (**)(uint64_t))(v69 + v68);
  *uint64_t v70 = sub_1D596E24C;
  v70[1] = (uint64_t (*)(uint64_t))v63;
  swift_retain();
  sub_1D5AB4540();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v57, v67);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v92, v97);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v99, v98);
  return swift_release();
}

uint64_t sub_1D5966D8C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v84 = a6;
  LODWORD(v79) = a5;
  uint64_t v88 = a7;
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7254D8);
  uint64_t v94 = *(void *)(v96 - 8);
  uint64_t v81 = *(void *)(v94 + 64);
  uint64_t v11 = MEMORY[0x1F4188790](v96);
  uint64_t v93 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v87 = (char *)&v72 - v13;
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v95 = *(void *)(v97 - 8);
  uint64_t v82 = *(void *)(v95 + 64);
  uint64_t v14 = MEMORY[0x1F4188790](v97);
  uint64_t v80 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v92 = (char *)&v72 - v16;
  uint64_t v98 = sub_1D5AB1CE0();
  uint64_t v86 = *(void *)(v98 - 8);
  uint64_t v85 = *(void *)(v86 + 64);
  uint64_t v17 = MEMORY[0x1F4188790](v98);
  uint64_t v83 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v99 = (char *)&v72 - v19;
  uint64_t v75 = sub_1D5AB4AD0();
  uint64_t v74 = *(void *)(v75 - 8);
  uint64_t v20 = v74;
  MEMORY[0x1F4188790](v75);
  uint64_t v22 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = v22;
  uint64_t v76 = (void *)sub_1D5AB4AA0();
  uint64_t v73 = *(v76 - 1);
  uint64_t v23 = v73;
  MEMORY[0x1F4188790](v76);
  uint64_t v25 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActivityTrace();
  swift_allocObject();
  uint64_t v90 = a2;
  uint64_t v91 = a1;
  int v89 = a3;
  uint64_t v26 = sub_1D5A0DFE0(a1, a2, a3, a4);
  swift_retain();
  uint64_t v27 = v77;
  sub_1D5AB4AC0();
  sub_1D5AB4A80();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  uint64_t v29 = v22;
  uint64_t v30 = v75;
  v28(v29, v27, v75);
  type metadata accessor for Signpost();
  uint64_t v31 = swift_allocObject();
  uint64_t v32 = v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_identifier;
  *(void *)uint64_t v32 = a1;
  *(void *)(v32 + 8) = a2;
  *(unsigned char *)(v32 + 16) = a3;
  uint64_t v33 = *(void (**)(uint64_t, char *, void *))(v23 + 16);
  uint64_t v34 = v76;
  v33(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_signpostID, v25, v76);
  *(unsigned char *)(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_telemetryEnabled) = v79;
  uint64_t v35 = v72;
  v28((char *)(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_poster), (uint64_t)v72, v30);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE3DB0);
  uint64_t v36 = swift_allocObject();
  *(_DWORD *)(v36 + 24) = 0;
  *(void *)(v36 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v74 + 8))(v35, v30);
  (*(void (**)(char *, void *))(v73 + 8))(v25, v34);
  *(void *)(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_state) = v36;
  uint64_t v100 = v26;
  uint64_t v37 = sub_1D5AB4E10();
  uint64_t v79 = v37;
  uint64_t v39 = v38;
  sub_1D5AB1CC0();
  uint64_t v40 = swift_allocObject();
  uint64_t v78 = v26;
  *(void *)(v40 + 16) = v26;
  *(void *)(v40 + 24) = v31;
  *(void *)(v40 + 32) = v37;
  *(void *)(v40 + 40) = v39;
  uint64_t v77 = v39;
  uint64_t v41 = v90;
  *(void *)(v40 + 48) = v91;
  *(void *)(v40 + 56) = v41;
  *(unsigned char *)(v40 + 64) = v89;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v42 = v92;
  sub_1D5AB4540();
  uint64_t v43 = v94;
  id v44 = *(void **)(v94 + 16);
  uint64_t v75 = v94 + 16;
  uint64_t v76 = v44;
  id v45 = v93;
  uint64_t v46 = v96;
  ((void (*)(char *, uint64_t, uint64_t))v44)(v93, v84, v96);
  uint64_t v47 = *(unsigned __int8 *)(v43 + 80);
  uint64_t v73 = ((v47 + 16) & ~v47) + v81;
  uint64_t v48 = (v47 + 16) & ~v47;
  uint64_t v84 = v48;
  uint64_t v81 = v47 | 7;
  uint64_t v49 = swift_allocObject();
  uint64_t v74 = *(void *)(v43 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v74)(v49 + v48, v45, v46);
  uint64_t v50 = v95;
  uint64_t v51 = v80;
  uint64_t v52 = v97;
  (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v80, v42, v97);
  unint64_t v53 = (*(unsigned __int8 *)(v50 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  unint64_t v54 = (v82 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v55 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v50 + 32))(v55 + v53, v51, v52);
  uint64_t v56 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v55 + v54);
  *uint64_t v56 = sub_1D596E180;
  v56[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v49;
  uint64_t v82 = sub_1D5AB2B80();
  uint64_t v57 = v87;
  sub_1D5AB4540();
  uint64_t v58 = v86;
  uint64_t v59 = v83;
  uint64_t v60 = v98;
  (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v83, v99, v98);
  unint64_t v61 = (*(unsigned __int8 *)(v58 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  unint64_t v62 = (v85 + v61 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v63 = swift_allocObject();
  uint64_t v64 = v77;
  *(void *)(v63 + 16) = v79;
  *(void *)(v63 + 24) = v64;
  uint64_t v65 = v90;
  *(void *)(v63 + 32) = v91;
  *(void *)(v63 + 40) = v65;
  *(unsigned char *)(v63 + 48) = v89;
  (*(void (**)(unint64_t, char *, uint64_t))(v58 + 32))(v63 + v61, v59, v60);
  *(void *)(v63 + v62) = v31;
  *(void *)(v63 + ((v62 + 15) & 0xFFFFFFFFFFFFFFF8)) = v78;
  unint64_t v66 = v93;
  uint64_t v67 = v96;
  ((void (*)(char *, char *, uint64_t))v76)(v93, v57, v96);
  unint64_t v68 = (v73 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v69 = swift_allocObject();
  ((void (*)(uint64_t, char *, uint64_t))v74)(v69 + v84, v66, v67);
  uint64_t v70 = (uint64_t (**)(uint64_t))(v69 + v68);
  *uint64_t v70 = sub_1D596E1BC;
  v70[1] = (uint64_t (*)(uint64_t))v63;
  swift_retain();
  sub_1D5AB4540();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v57, v67);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v92, v97);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v99, v98);
  return swift_release();
}

uint64_t sub_1D5967688@<X0>(char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v84 = a6;
  LODWORD(v79) = a5;
  uint64_t v88 = a7;
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725508);
  uint64_t v94 = *(void *)(v96 - 8);
  uint64_t v81 = *(void *)(v94 + 64);
  uint64_t v11 = MEMORY[0x1F4188790](v96);
  uint64_t v93 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v87 = (char *)&v72 - v13;
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v95 = *(void *)(v97 - 8);
  uint64_t v82 = *(void *)(v95 + 64);
  uint64_t v14 = MEMORY[0x1F4188790](v97);
  uint64_t v80 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v92 = (char *)&v72 - v16;
  uint64_t v98 = sub_1D5AB1CE0();
  uint64_t v86 = *(void *)(v98 - 8);
  uint64_t v85 = *(void *)(v86 + 64);
  uint64_t v17 = MEMORY[0x1F4188790](v98);
  uint64_t v83 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v99 = (char *)&v72 - v19;
  uint64_t v75 = sub_1D5AB4AD0();
  uint64_t v74 = *(void *)(v75 - 8);
  uint64_t v20 = v74;
  MEMORY[0x1F4188790](v75);
  uint64_t v22 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = v22;
  uint64_t v76 = (void *)sub_1D5AB4AA0();
  uint64_t v73 = *(v76 - 1);
  uint64_t v23 = v73;
  MEMORY[0x1F4188790](v76);
  uint64_t v25 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActivityTrace();
  swift_allocObject();
  uint64_t v90 = a2;
  uint64_t v91 = a1;
  int v89 = a3;
  uint64_t v26 = sub_1D5A0DFE0(a1, a2, a3, a4);
  swift_retain();
  uint64_t v27 = v77;
  sub_1D5AB4AC0();
  sub_1D5AB4A80();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  uint64_t v29 = v22;
  uint64_t v30 = v75;
  v28(v29, v27, v75);
  type metadata accessor for Signpost();
  uint64_t v31 = swift_allocObject();
  uint64_t v32 = v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_identifier;
  *(void *)uint64_t v32 = a1;
  *(void *)(v32 + 8) = a2;
  *(unsigned char *)(v32 + 16) = a3;
  uint64_t v33 = *(void (**)(uint64_t, char *, void *))(v23 + 16);
  uint64_t v34 = v76;
  v33(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_signpostID, v25, v76);
  *(unsigned char *)(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_telemetryEnabled) = v79;
  uint64_t v35 = v72;
  v28((char *)(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_poster), (uint64_t)v72, v30);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE3DB0);
  uint64_t v36 = swift_allocObject();
  *(_DWORD *)(v36 + 24) = 0;
  *(void *)(v36 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v74 + 8))(v35, v30);
  (*(void (**)(char *, void *))(v73 + 8))(v25, v34);
  *(void *)(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_state) = v36;
  uint64_t v100 = v26;
  uint64_t v37 = sub_1D5AB4E10();
  uint64_t v79 = v37;
  uint64_t v39 = v38;
  sub_1D5AB1CC0();
  uint64_t v40 = swift_allocObject();
  uint64_t v78 = v26;
  *(void *)(v40 + 16) = v26;
  *(void *)(v40 + 24) = v31;
  *(void *)(v40 + 32) = v37;
  *(void *)(v40 + 40) = v39;
  uint64_t v77 = v39;
  uint64_t v41 = v90;
  *(void *)(v40 + 48) = v91;
  *(void *)(v40 + 56) = v41;
  *(unsigned char *)(v40 + 64) = v89;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v42 = v92;
  sub_1D5AB4540();
  uint64_t v43 = v94;
  id v44 = *(void **)(v94 + 16);
  uint64_t v75 = v94 + 16;
  uint64_t v76 = v44;
  id v45 = v93;
  uint64_t v46 = v96;
  ((void (*)(char *, uint64_t, uint64_t))v44)(v93, v84, v96);
  uint64_t v47 = *(unsigned __int8 *)(v43 + 80);
  uint64_t v73 = ((v47 + 16) & ~v47) + v81;
  uint64_t v48 = (v47 + 16) & ~v47;
  uint64_t v84 = v48;
  uint64_t v81 = v47 | 7;
  uint64_t v49 = swift_allocObject();
  uint64_t v74 = *(void *)(v43 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v74)(v49 + v48, v45, v46);
  uint64_t v50 = v95;
  uint64_t v51 = v80;
  uint64_t v52 = v97;
  (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v80, v42, v97);
  unint64_t v53 = (*(unsigned __int8 *)(v50 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  unint64_t v54 = (v82 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v55 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v50 + 32))(v55 + v53, v51, v52);
  uint64_t v56 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v55 + v54);
  *uint64_t v56 = sub_1D596E0F0;
  v56[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v49;
  uint64_t v82 = sub_1D5AB3620();
  uint64_t v57 = v87;
  sub_1D5AB4540();
  uint64_t v58 = v86;
  uint64_t v59 = v83;
  uint64_t v60 = v98;
  (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v83, v99, v98);
  unint64_t v61 = (*(unsigned __int8 *)(v58 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  unint64_t v62 = (v85 + v61 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v63 = swift_allocObject();
  uint64_t v64 = v77;
  *(void *)(v63 + 16) = v79;
  *(void *)(v63 + 24) = v64;
  uint64_t v65 = v90;
  *(void *)(v63 + 32) = v91;
  *(void *)(v63 + 40) = v65;
  *(unsigned char *)(v63 + 48) = v89;
  (*(void (**)(unint64_t, char *, uint64_t))(v58 + 32))(v63 + v61, v59, v60);
  *(void *)(v63 + v62) = v31;
  *(void *)(v63 + ((v62 + 15) & 0xFFFFFFFFFFFFFFF8)) = v78;
  unint64_t v66 = v93;
  uint64_t v67 = v96;
  ((void (*)(char *, char *, uint64_t))v76)(v93, v57, v96);
  unint64_t v68 = (v73 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v69 = swift_allocObject();
  ((void (*)(uint64_t, char *, uint64_t))v74)(v69 + v84, v66, v67);
  uint64_t v70 = (uint64_t (**)(uint64_t))(v69 + v68);
  *uint64_t v70 = sub_1D596E12C;
  v70[1] = (uint64_t (*)(uint64_t))v63;
  swift_retain();
  sub_1D5AB4540();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v57, v67);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v92, v97);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v99, v98);
  return swift_release();
}

uint64_t sub_1D5967F84@<X0>(char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v84 = a6;
  LODWORD(v79) = a5;
  uint64_t v88 = a7;
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7254F8);
  uint64_t v94 = *(void *)(v96 - 8);
  uint64_t v81 = *(void *)(v94 + 64);
  uint64_t v11 = MEMORY[0x1F4188790](v96);
  uint64_t v93 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v87 = (char *)&v72 - v13;
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v95 = *(void *)(v97 - 8);
  uint64_t v82 = *(void *)(v95 + 64);
  uint64_t v14 = MEMORY[0x1F4188790](v97);
  uint64_t v80 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v92 = (char *)&v72 - v16;
  uint64_t v98 = sub_1D5AB1CE0();
  uint64_t v86 = *(void *)(v98 - 8);
  uint64_t v85 = *(void *)(v86 + 64);
  uint64_t v17 = MEMORY[0x1F4188790](v98);
  uint64_t v83 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v99 = (char *)&v72 - v19;
  uint64_t v75 = sub_1D5AB4AD0();
  uint64_t v74 = *(void *)(v75 - 8);
  uint64_t v20 = v74;
  MEMORY[0x1F4188790](v75);
  uint64_t v22 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = v22;
  uint64_t v76 = (void *)sub_1D5AB4AA0();
  uint64_t v73 = *(v76 - 1);
  uint64_t v23 = v73;
  MEMORY[0x1F4188790](v76);
  uint64_t v25 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActivityTrace();
  swift_allocObject();
  uint64_t v90 = a2;
  uint64_t v91 = a1;
  int v89 = a3;
  uint64_t v26 = sub_1D5A0DFE0(a1, a2, a3, a4);
  swift_retain();
  uint64_t v27 = v77;
  sub_1D5AB4AC0();
  sub_1D5AB4A80();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  uint64_t v29 = v22;
  uint64_t v30 = v75;
  v28(v29, v27, v75);
  type metadata accessor for Signpost();
  uint64_t v31 = swift_allocObject();
  uint64_t v32 = v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_identifier;
  *(void *)uint64_t v32 = a1;
  *(void *)(v32 + 8) = a2;
  *(unsigned char *)(v32 + 16) = a3;
  uint64_t v33 = *(void (**)(uint64_t, char *, void *))(v23 + 16);
  uint64_t v34 = v76;
  v33(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_signpostID, v25, v76);
  *(unsigned char *)(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_telemetryEnabled) = v79;
  uint64_t v35 = v72;
  v28((char *)(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_poster), (uint64_t)v72, v30);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE3DB0);
  uint64_t v36 = swift_allocObject();
  *(_DWORD *)(v36 + 24) = 0;
  *(void *)(v36 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v74 + 8))(v35, v30);
  (*(void (**)(char *, void *))(v73 + 8))(v25, v34);
  *(void *)(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_state) = v36;
  uint64_t v100 = v26;
  uint64_t v37 = sub_1D5AB4E10();
  uint64_t v79 = v37;
  uint64_t v39 = v38;
  sub_1D5AB1CC0();
  uint64_t v40 = swift_allocObject();
  uint64_t v78 = v26;
  *(void *)(v40 + 16) = v26;
  *(void *)(v40 + 24) = v31;
  *(void *)(v40 + 32) = v37;
  *(void *)(v40 + 40) = v39;
  uint64_t v77 = v39;
  uint64_t v41 = v90;
  *(void *)(v40 + 48) = v91;
  *(void *)(v40 + 56) = v41;
  *(unsigned char *)(v40 + 64) = v89;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v42 = v92;
  sub_1D5AB4540();
  uint64_t v43 = v94;
  id v44 = *(void **)(v94 + 16);
  uint64_t v75 = v94 + 16;
  uint64_t v76 = v44;
  id v45 = v93;
  uint64_t v46 = v96;
  ((void (*)(char *, uint64_t, uint64_t))v44)(v93, v84, v96);
  uint64_t v47 = *(unsigned __int8 *)(v43 + 80);
  uint64_t v73 = ((v47 + 16) & ~v47) + v81;
  uint64_t v48 = (v47 + 16) & ~v47;
  uint64_t v84 = v48;
  uint64_t v81 = v47 | 7;
  uint64_t v49 = swift_allocObject();
  uint64_t v74 = *(void *)(v43 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v74)(v49 + v48, v45, v46);
  uint64_t v50 = v95;
  uint64_t v51 = v80;
  uint64_t v52 = v97;
  (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v80, v42, v97);
  unint64_t v53 = (*(unsigned __int8 *)(v50 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  unint64_t v54 = (v82 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v55 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v50 + 32))(v55 + v53, v51, v52);
  uint64_t v56 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v55 + v54);
  *uint64_t v56 = sub_1D596E044;
  v56[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v49;
  uint64_t v82 = sub_1D5AB1DE0();
  uint64_t v57 = v87;
  sub_1D5AB4540();
  uint64_t v58 = v86;
  uint64_t v59 = v83;
  uint64_t v60 = v98;
  (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v83, v99, v98);
  unint64_t v61 = (*(unsigned __int8 *)(v58 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  unint64_t v62 = (v85 + v61 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v63 = swift_allocObject();
  uint64_t v64 = v77;
  *(void *)(v63 + 16) = v79;
  *(void *)(v63 + 24) = v64;
  uint64_t v65 = v90;
  *(void *)(v63 + 32) = v91;
  *(void *)(v63 + 40) = v65;
  *(unsigned char *)(v63 + 48) = v89;
  (*(void (**)(unint64_t, char *, uint64_t))(v58 + 32))(v63 + v61, v59, v60);
  *(void *)(v63 + v62) = v31;
  *(void *)(v63 + ((v62 + 15) & 0xFFFFFFFFFFFFFFF8)) = v78;
  unint64_t v66 = v93;
  uint64_t v67 = v96;
  ((void (*)(char *, char *, uint64_t))v76)(v93, v57, v96);
  unint64_t v68 = (v73 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v69 = swift_allocObject();
  ((void (*)(uint64_t, char *, uint64_t))v74)(v69 + v84, v66, v67);
  uint64_t v70 = (uint64_t (**)(uint64_t))(v69 + v68);
  *uint64_t v70 = sub_1D596E080;
  v70[1] = (uint64_t (*)(uint64_t))v63;
  swift_retain();
  sub_1D5AB4540();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v57, v67);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v92, v97);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v99, v98);
  return swift_release();
}

void sub_1D5968880(void *a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v64 = a7;
  uint64_t v62 = a5;
  uint64_t v63 = a6;
  uint64_t v15 = a10;
  uint64_t v66 = a9;
  uint64_t v16 = sub_1D5AB1CE0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v65 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v60 - v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v60 - v23;
  if (a2)
  {
    id v36 = a1;
    if (qword_1EBDE4100 != -1) {
      swift_once();
    }
    uint64_t v37 = sub_1D5AB4B50();
    __swift_project_value_buffer(v37, (uint64_t)qword_1EBDE5DB8);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v22, a8, v16);
    swift_bridgeObjectRetain();
    sub_1D596E9F4(a1, 1);
    swift_bridgeObjectRetain();
    sub_1D596E9F4(a1, 1);
    uint64_t v38 = sub_1D5AB4B30();
    os_log_type_t v39 = sub_1D5AB5410();
    int v40 = v39;
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v41 = swift_slowAlloc();
      uint64_t v61 = a10;
      uint64_t v42 = v41;
      uint64_t v60 = swift_slowAlloc();
      v68[0] = v60;
      *(_DWORD *)uint64_t v42 = 136446978;
      swift_bridgeObjectRetain();
      uint64_t v67 = sub_1D5951500(a3, a4, v68);
      sub_1D5AB5680();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v42 + 12) = 2082;
      uint64_t v43 = sub_1D5AB5810();
      uint64_t v67 = sub_1D5951500(v43, v44, v68);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      *(_WORD *)(v42 + 22) = 2048;
      id v45 = v65;
      sub_1D5AB1CC0();
      sub_1D5AB1C70();
      uint64_t v47 = v46;
      int v64 = v40;
      uint64_t v48 = *(void (**)(char *, uint64_t))(v17 + 8);
      v48(v45, v16);
      uint64_t v67 = v47;
      sub_1D5AB5680();
      v48(v22, v16);
      *(_WORD *)(v42 + 32) = 2082;
      uint64_t v67 = (uint64_t)a1;
      id v49 = a1;
      __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE5130);
      uint64_t v50 = sub_1D5AB4E10();
      uint64_t v67 = sub_1D5951500(v50, v51, v68);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      sub_1D596EA00(a1, 1);
      sub_1D596EA00(a1, 1);
      _os_log_impl(&dword_1D5947000, v38, (os_log_type_t)v64, "[%{public}s] %{public}s ended in %fs -> %{public}s", (uint8_t *)v42, 0x2Au);
      uint64_t v52 = v60;
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v52, -1, -1);
      uint64_t v53 = v42;
      uint64_t v15 = v61;
      MEMORY[0x1D945AAC0](v53, -1, -1);

      sub_1D596EA00(a1, 1);
    }
    else
    {
      sub_1D596EA00(a1, 1);
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
      sub_1D596EA00(a1, 1);
      sub_1D596EA00(a1, 1);
    }
  }
  else
  {
    if (qword_1EBDE4100 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1D5AB4B50();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EBDE5DB8);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v24, a8, v16);
    swift_bridgeObjectRetain_n();
    uint64_t v26 = sub_1D5AB4B30();
    os_log_type_t v27 = sub_1D5AB5430();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc();
      uint64_t v60 = swift_slowAlloc();
      uint64_t v61 = a10;
      v68[0] = v60;
      *(_DWORD *)uint64_t v28 = 136446722;
      swift_bridgeObjectRetain();
      uint64_t v67 = sub_1D5951500(a3, a4, v68);
      sub_1D5AB5680();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v28 + 12) = 2082;
      uint64_t v29 = sub_1D5AB5810();
      uint64_t v67 = sub_1D5951500(v29, v30, v68);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 22) = 2048;
      uint64_t v31 = v65;
      sub_1D5AB1CC0();
      sub_1D5AB1C70();
      uint64_t v33 = v32;
      uint64_t v34 = *(void (**)(char *, uint64_t))(v17 + 8);
      v34(v31, v16);
      uint64_t v67 = v33;
      sub_1D5AB5680();
      v34(v24, v16);
      _os_log_impl(&dword_1D5947000, v26, v27, "[%{public}s] %{public}s ended in %fs", (uint8_t *)v28, 0x20u);
      uint64_t v35 = v60;
      swift_arrayDestroy();
      uint64_t v15 = v61;
      MEMORY[0x1D945AAC0](v35, -1, -1);
      MEMORY[0x1D945AAC0](v28, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v24, v16);
    }
  }
  unint64_t v54 = *(os_unfair_lock_s **)(v66 + OBJC_IVAR____TtC13SeymourClient8Signpost_state);
  uint64_t v55 = v54 + 4;
  uint64_t v56 = v54 + 6;
  os_unfair_lock_lock(v54 + 6);
  sub_1D596E0C4(v55);
  os_unfair_lock_unlock(v56);
  uint64_t v57 = *(os_unfair_lock_s **)(v15 + 40);
  uint64_t v58 = (uint64_t *)&v57[4];
  uint64_t v59 = v57 + 11;
  os_unfair_lock_lock(v57 + 11);
  sub_1D5A0E484(v58);
  os_unfair_lock_unlock(v59);
}

void sub_1D5968F7C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v67 = a6;
  uint64_t v65 = a4;
  uint64_t v66 = a5;
  uint64_t v64 = a2;
  uint64_t v69 = a8;
  uint64_t v70 = a9;
  uint64_t v12 = sub_1D5AB1CE0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  unint64_t v68 = &v61[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = &v61[-v17];
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = &v61[-v19];
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725548);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (void **)&v61[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D596E6CC(a1, (uint64_t)v23, &qword_1EA725548);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = *v23;
    if (qword_1EBDE4100 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1D5AB4B50();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EBDE5DB8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v18, a7, v12);
    swift_bridgeObjectRetain();
    id v26 = v24;
    swift_bridgeObjectRetain();
    id v27 = v24;
    uint64_t v28 = sub_1D5AB4B30();
    os_log_type_t v29 = sub_1D5AB5410();
    int v30 = v29;
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v63 = swift_slowAlloc();
      v72[0] = v63;
      *(_DWORD *)uint64_t v31 = 136446978;
      swift_bridgeObjectRetain();
      uint64_t v71 = sub_1D5951500(v64, a3, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v31 + 12) = 2082;
      uint64_t v32 = sub_1D5AB5810();
      uint64_t v71 = sub_1D5951500(v32, v33, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 22) = 2048;
      uint64_t v34 = v68;
      sub_1D5AB1CC0();
      sub_1D5AB1C70();
      uint64_t v36 = v35;
      int v67 = v30;
      uint64_t v37 = *(void (**)(unsigned char *, uint64_t))(v13 + 8);
      v37(v34, v12);
      uint64_t v71 = v36;
      sub_1D5AB5680();
      v37(v18, v12);
      *(_WORD *)(v31 + 32) = 2082;
      uint64_t v71 = (uint64_t)v24;
      id v38 = v24;
      __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE5130);
      uint64_t v39 = sub_1D5AB4E10();
      uint64_t v71 = sub_1D5951500(v39, v40, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D5947000, v28, (os_log_type_t)v67, "[%{public}s] %{public}s ended in %fs -> %{public}s", (uint8_t *)v31, 0x2Au);
      uint64_t v41 = v63;
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v41, -1, -1);
      MEMORY[0x1D945AAC0](v31, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v18, v12);
    }
  }
  else
  {
    if (qword_1EBDE4100 != -1) {
      swift_once();
    }
    uint64_t v42 = sub_1D5AB4B50();
    __swift_project_value_buffer(v42, (uint64_t)qword_1EBDE5DB8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v20, a7, v12);
    swift_bridgeObjectRetain_n();
    uint64_t v43 = sub_1D5AB4B30();
    os_log_type_t v44 = sub_1D5AB5430();
    int v45 = v44;
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v46 = swift_slowAlloc();
      int v62 = v45;
      uint64_t v47 = v46;
      uint64_t v63 = swift_slowAlloc();
      v72[0] = v63;
      *(_DWORD *)uint64_t v47 = 136446722;
      swift_bridgeObjectRetain();
      uint64_t v71 = sub_1D5951500(v64, a3, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v47 + 12) = 2082;
      uint64_t v48 = sub_1D5AB5810();
      uint64_t v71 = sub_1D5951500(v48, v49, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 22) = 2048;
      uint64_t v50 = v68;
      sub_1D5AB1CC0();
      sub_1D5AB1C70();
      uint64_t v52 = v51;
      uint64_t v53 = *(void (**)(unsigned char *, uint64_t))(v13 + 8);
      v53(v50, v12);
      uint64_t v71 = v52;
      sub_1D5AB5680();
      v53(v20, v12);
      _os_log_impl(&dword_1D5947000, v43, (os_log_type_t)v62, "[%{public}s] %{public}s ended in %fs", (uint8_t *)v47, 0x20u);
      uint64_t v54 = v63;
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v54, -1, -1);
      MEMORY[0x1D945AAC0](v47, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v20, v12);
    }

    sub_1D594F53C((uint64_t)v23, &qword_1EA725548);
  }
  uint64_t v55 = *(os_unfair_lock_s **)(v69 + OBJC_IVAR____TtC13SeymourClient8Signpost_state);
  uint64_t v56 = v55 + 4;
  uint64_t v57 = v55 + 6;
  os_unfair_lock_lock(v55 + 6);
  sub_1D596E0C4(v56);
  os_unfair_lock_unlock(v57);
  uint64_t v58 = *(os_unfair_lock_s **)(v70 + 40);
  uint64_t v59 = (uint64_t *)&v58[4];
  uint64_t v60 = v58 + 11;
  os_unfair_lock_lock(v58 + 11);
  sub_1D5A0E484(v59);
  os_unfair_lock_unlock(v60);
}

void sub_1D59696D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v67 = a6;
  uint64_t v65 = a4;
  uint64_t v66 = a5;
  uint64_t v64 = a2;
  uint64_t v69 = a8;
  uint64_t v70 = a9;
  uint64_t v12 = sub_1D5AB1CE0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  unint64_t v68 = &v61[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = &v61[-v17];
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = &v61[-v19];
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725540);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (void **)&v61[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D596E6CC(a1, (uint64_t)v23, &qword_1EA725540);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = *v23;
    if (qword_1EBDE4100 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1D5AB4B50();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EBDE5DB8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v18, a7, v12);
    swift_bridgeObjectRetain();
    id v26 = v24;
    swift_bridgeObjectRetain();
    id v27 = v24;
    uint64_t v28 = sub_1D5AB4B30();
    os_log_type_t v29 = sub_1D5AB5410();
    int v30 = v29;
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v63 = swift_slowAlloc();
      v72[0] = v63;
      *(_DWORD *)uint64_t v31 = 136446978;
      swift_bridgeObjectRetain();
      uint64_t v71 = sub_1D5951500(v64, a3, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v31 + 12) = 2082;
      uint64_t v32 = sub_1D5AB5810();
      uint64_t v71 = sub_1D5951500(v32, v33, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 22) = 2048;
      uint64_t v34 = v68;
      sub_1D5AB1CC0();
      sub_1D5AB1C70();
      uint64_t v36 = v35;
      int v67 = v30;
      uint64_t v37 = *(void (**)(unsigned char *, uint64_t))(v13 + 8);
      v37(v34, v12);
      uint64_t v71 = v36;
      sub_1D5AB5680();
      v37(v18, v12);
      *(_WORD *)(v31 + 32) = 2082;
      uint64_t v71 = (uint64_t)v24;
      id v38 = v24;
      __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE5130);
      uint64_t v39 = sub_1D5AB4E10();
      uint64_t v71 = sub_1D5951500(v39, v40, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D5947000, v28, (os_log_type_t)v67, "[%{public}s] %{public}s ended in %fs -> %{public}s", (uint8_t *)v31, 0x2Au);
      uint64_t v41 = v63;
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v41, -1, -1);
      MEMORY[0x1D945AAC0](v31, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v18, v12);
    }
  }
  else
  {
    if (qword_1EBDE4100 != -1) {
      swift_once();
    }
    uint64_t v42 = sub_1D5AB4B50();
    __swift_project_value_buffer(v42, (uint64_t)qword_1EBDE5DB8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v20, a7, v12);
    swift_bridgeObjectRetain_n();
    uint64_t v43 = sub_1D5AB4B30();
    os_log_type_t v44 = sub_1D5AB5430();
    int v45 = v44;
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v46 = swift_slowAlloc();
      int v62 = v45;
      uint64_t v47 = v46;
      uint64_t v63 = swift_slowAlloc();
      v72[0] = v63;
      *(_DWORD *)uint64_t v47 = 136446722;
      swift_bridgeObjectRetain();
      uint64_t v71 = sub_1D5951500(v64, a3, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v47 + 12) = 2082;
      uint64_t v48 = sub_1D5AB5810();
      uint64_t v71 = sub_1D5951500(v48, v49, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 22) = 2048;
      uint64_t v50 = v68;
      sub_1D5AB1CC0();
      sub_1D5AB1C70();
      uint64_t v52 = v51;
      uint64_t v53 = *(void (**)(unsigned char *, uint64_t))(v13 + 8);
      v53(v50, v12);
      uint64_t v71 = v52;
      sub_1D5AB5680();
      v53(v20, v12);
      _os_log_impl(&dword_1D5947000, v43, (os_log_type_t)v62, "[%{public}s] %{public}s ended in %fs", (uint8_t *)v47, 0x20u);
      uint64_t v54 = v63;
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v54, -1, -1);
      MEMORY[0x1D945AAC0](v47, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v20, v12);
    }

    sub_1D594F53C((uint64_t)v23, &qword_1EA725540);
  }
  uint64_t v55 = *(os_unfair_lock_s **)(v69 + OBJC_IVAR____TtC13SeymourClient8Signpost_state);
  uint64_t v56 = v55 + 4;
  uint64_t v57 = v55 + 6;
  os_unfair_lock_lock(v55 + 6);
  sub_1D596E0C4(v56);
  os_unfair_lock_unlock(v57);
  uint64_t v58 = *(os_unfair_lock_s **)(v70 + 40);
  uint64_t v59 = (uint64_t *)&v58[4];
  uint64_t v60 = v58 + 11;
  os_unfair_lock_lock(v58 + 11);
  sub_1D5A0E484(v59);
  os_unfair_lock_unlock(v60);
}

void sub_1D5969E24(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v67 = a6;
  uint64_t v65 = a4;
  uint64_t v66 = a5;
  uint64_t v64 = a2;
  uint64_t v69 = a8;
  uint64_t v70 = a9;
  uint64_t v12 = sub_1D5AB1CE0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  unint64_t v68 = &v61[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = &v61[-v17];
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = &v61[-v19];
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725538);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (void **)&v61[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D596E6CC(a1, (uint64_t)v23, &qword_1EA725538);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = *v23;
    if (qword_1EBDE4100 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1D5AB4B50();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EBDE5DB8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v18, a7, v12);
    swift_bridgeObjectRetain();
    id v26 = v24;
    swift_bridgeObjectRetain();
    id v27 = v24;
    uint64_t v28 = sub_1D5AB4B30();
    os_log_type_t v29 = sub_1D5AB5410();
    int v30 = v29;
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v63 = swift_slowAlloc();
      v72[0] = v63;
      *(_DWORD *)uint64_t v31 = 136446978;
      swift_bridgeObjectRetain();
      uint64_t v71 = sub_1D5951500(v64, a3, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v31 + 12) = 2082;
      uint64_t v32 = sub_1D5AB5810();
      uint64_t v71 = sub_1D5951500(v32, v33, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 22) = 2048;
      uint64_t v34 = v68;
      sub_1D5AB1CC0();
      sub_1D5AB1C70();
      uint64_t v36 = v35;
      int v67 = v30;
      uint64_t v37 = *(void (**)(unsigned char *, uint64_t))(v13 + 8);
      v37(v34, v12);
      uint64_t v71 = v36;
      sub_1D5AB5680();
      v37(v18, v12);
      *(_WORD *)(v31 + 32) = 2082;
      uint64_t v71 = (uint64_t)v24;
      id v38 = v24;
      __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE5130);
      uint64_t v39 = sub_1D5AB4E10();
      uint64_t v71 = sub_1D5951500(v39, v40, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D5947000, v28, (os_log_type_t)v67, "[%{public}s] %{public}s ended in %fs -> %{public}s", (uint8_t *)v31, 0x2Au);
      uint64_t v41 = v63;
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v41, -1, -1);
      MEMORY[0x1D945AAC0](v31, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v18, v12);
    }
  }
  else
  {
    if (qword_1EBDE4100 != -1) {
      swift_once();
    }
    uint64_t v42 = sub_1D5AB4B50();
    __swift_project_value_buffer(v42, (uint64_t)qword_1EBDE5DB8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v20, a7, v12);
    swift_bridgeObjectRetain_n();
    uint64_t v43 = sub_1D5AB4B30();
    os_log_type_t v44 = sub_1D5AB5430();
    int v45 = v44;
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v46 = swift_slowAlloc();
      int v62 = v45;
      uint64_t v47 = v46;
      uint64_t v63 = swift_slowAlloc();
      v72[0] = v63;
      *(_DWORD *)uint64_t v47 = 136446722;
      swift_bridgeObjectRetain();
      uint64_t v71 = sub_1D5951500(v64, a3, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v47 + 12) = 2082;
      uint64_t v48 = sub_1D5AB5810();
      uint64_t v71 = sub_1D5951500(v48, v49, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 22) = 2048;
      uint64_t v50 = v68;
      sub_1D5AB1CC0();
      sub_1D5AB1C70();
      uint64_t v52 = v51;
      uint64_t v53 = *(void (**)(unsigned char *, uint64_t))(v13 + 8);
      v53(v50, v12);
      uint64_t v71 = v52;
      sub_1D5AB5680();
      v53(v20, v12);
      _os_log_impl(&dword_1D5947000, v43, (os_log_type_t)v62, "[%{public}s] %{public}s ended in %fs", (uint8_t *)v47, 0x20u);
      uint64_t v54 = v63;
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v54, -1, -1);
      MEMORY[0x1D945AAC0](v47, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v20, v12);
    }

    sub_1D594F53C((uint64_t)v23, &qword_1EA725538);
  }
  uint64_t v55 = *(os_unfair_lock_s **)(v69 + OBJC_IVAR____TtC13SeymourClient8Signpost_state);
  uint64_t v56 = v55 + 4;
  uint64_t v57 = v55 + 6;
  os_unfair_lock_lock(v55 + 6);
  sub_1D596E0C4(v56);
  os_unfair_lock_unlock(v57);
  uint64_t v58 = *(os_unfair_lock_s **)(v70 + 40);
  uint64_t v59 = (uint64_t *)&v58[4];
  uint64_t v60 = v58 + 11;
  os_unfair_lock_lock(v58 + 11);
  sub_1D5A0E484(v59);
  os_unfair_lock_unlock(v60);
}

void sub_1D596A578(void *a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v65 = a7;
  uint64_t v63 = a5;
  uint64_t v64 = a6;
  uint64_t v62 = a3;
  uint64_t v14 = a9;
  uint64_t v67 = a10;
  uint64_t v15 = sub_1D5AB1CE0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v22 = (char *)&v59 - v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v59 - v23;
  if (a2)
  {
    id v36 = a1;
    if (qword_1EBDE4100 != -1) {
      swift_once();
    }
    uint64_t v37 = sub_1D5AB4B50();
    __swift_project_value_buffer(v37, (uint64_t)qword_1EBDE5DB8);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v22, a8, v15);
    sub_1D596E440(a1, 1);
    swift_bridgeObjectRetain();
    sub_1D596E440(a1, 1);
    swift_bridgeObjectRetain();
    id v38 = sub_1D5AB4B30();
    os_log_type_t v39 = sub_1D5AB5410();
    int v40 = v39;
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v41 = swift_slowAlloc();
      uint64_t v66 = a9;
      uint64_t v42 = v41;
      id v61 = (id)swift_slowAlloc();
      v69[0] = (uint64_t)v61;
      *(_DWORD *)uint64_t v42 = 136446978;
      LODWORD(v60) = v40;
      swift_bridgeObjectRetain();
      uint64_t v68 = sub_1D5951500(v62, a4, v69);
      sub_1D5AB5680();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v42 + 12) = 2082;
      uint64_t v43 = sub_1D5AB5810();
      uint64_t v68 = sub_1D5951500(v43, v44, v69);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      *(_WORD *)(v42 + 22) = 2048;
      sub_1D5AB1CC0();
      sub_1D5AB1C70();
      uint64_t v46 = v45;
      uint64_t v47 = *(void (**)(char *, uint64_t))(v16 + 8);
      v47(v19, v15);
      uint64_t v68 = v46;
      sub_1D5AB5680();
      v47(v22, v15);
      *(_WORD *)(v42 + 32) = 2082;
      uint64_t v68 = (uint64_t)a1;
      id v48 = a1;
      __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE5130);
      uint64_t v49 = sub_1D5AB4E10();
      uint64_t v68 = sub_1D5951500(v49, v50, v69);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      sub_1D596E44C(a1, 1);
      sub_1D596E44C(a1, 1);
      _os_log_impl(&dword_1D5947000, v38, (os_log_type_t)v60, "[%{public}s] %{public}s ended in %fs -> %{public}s", (uint8_t *)v42, 0x2Au);
      id v51 = v61;
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v51, -1, -1);
      uint64_t v52 = v42;
      uint64_t v14 = v66;
      MEMORY[0x1D945AAC0](v52, -1, -1);

      sub_1D596E44C(a1, 1);
    }
    else
    {
      sub_1D596E44C(a1, 1);
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v22, v15);
      sub_1D596E44C(a1, 1);
      sub_1D596E44C(a1, 1);
    }
  }
  else
  {
    uint64_t v66 = a9;
    uint64_t v25 = qword_1EBDE4100;
    id v61 = a1;
    swift_bridgeObjectRetain();
    if (v25 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_1D5AB4B50();
    __swift_project_value_buffer(v26, (uint64_t)qword_1EBDE5DB8);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v24, a8, v15);
    swift_bridgeObjectRetain_n();
    id v27 = sub_1D5AB4B30();
    os_log_type_t v28 = sub_1D5AB5430();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v60 = swift_slowAlloc();
      v69[0] = v60;
      *(_DWORD *)uint64_t v29 = 136446722;
      swift_bridgeObjectRetain();
      uint64_t v68 = sub_1D5951500(v62, a4, v69);
      sub_1D5AB5680();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v29 + 12) = 2082;
      uint64_t v30 = sub_1D5AB5810();
      uint64_t v68 = sub_1D5951500(v30, v31, v69);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 22) = 2048;
      sub_1D5AB1CC0();
      sub_1D5AB1C70();
      uint64_t v33 = v32;
      uint64_t v34 = *(void (**)(char *, uint64_t))(v16 + 8);
      v34(v19, v15);
      uint64_t v68 = v33;
      sub_1D5AB5680();
      v34(v24, v15);
      _os_log_impl(&dword_1D5947000, v27, v28, "[%{public}s] %{public}s ended in %fs", (uint8_t *)v29, 0x20u);
      uint64_t v35 = v60;
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v35, -1, -1);
      MEMORY[0x1D945AAC0](v29, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v24, v15);
    }

    sub_1D596E44C(v61, 0);
    uint64_t v14 = v66;
  }
  uint64_t v53 = *(os_unfair_lock_s **)(v14 + OBJC_IVAR____TtC13SeymourClient8Signpost_state);
  uint64_t v54 = v53 + 4;
  uint64_t v55 = v53 + 6;
  os_unfair_lock_lock(v53 + 6);
  sub_1D596E0C4(v54);
  os_unfair_lock_unlock(v55);
  uint64_t v56 = *(os_unfair_lock_s **)(v67 + 40);
  uint64_t v57 = (uint64_t *)&v56[4];
  uint64_t v58 = v56 + 11;
  os_unfair_lock_lock(v56 + 11);
  sub_1D5A0E484(v57);
  os_unfair_lock_unlock(v58);
}

void sub_1D596AC94(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v67 = a6;
  uint64_t v65 = a4;
  uint64_t v66 = a5;
  uint64_t v64 = a2;
  uint64_t v69 = a8;
  uint64_t v70 = a9;
  uint64_t v12 = sub_1D5AB1CE0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v68 = &v61[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = &v61[-v17];
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = &v61[-v19];
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725530);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (void **)&v61[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D596E6CC(a1, (uint64_t)v23, &qword_1EA725530);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = *v23;
    if (qword_1EBDE4100 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1D5AB4B50();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EBDE5DB8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v18, a7, v12);
    swift_bridgeObjectRetain();
    id v26 = v24;
    swift_bridgeObjectRetain();
    id v27 = v24;
    os_log_type_t v28 = sub_1D5AB4B30();
    os_log_type_t v29 = sub_1D5AB5410();
    int v30 = v29;
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v63 = swift_slowAlloc();
      v72[0] = v63;
      *(_DWORD *)uint64_t v31 = 136446978;
      swift_bridgeObjectRetain();
      uint64_t v71 = sub_1D5951500(v64, a3, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v31 + 12) = 2082;
      uint64_t v32 = sub_1D5AB5810();
      uint64_t v71 = sub_1D5951500(v32, v33, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 22) = 2048;
      uint64_t v34 = v68;
      sub_1D5AB1CC0();
      sub_1D5AB1C70();
      uint64_t v36 = v35;
      int v67 = v30;
      uint64_t v37 = *(void (**)(unsigned char *, uint64_t))(v13 + 8);
      v37(v34, v12);
      uint64_t v71 = v36;
      sub_1D5AB5680();
      v37(v18, v12);
      *(_WORD *)(v31 + 32) = 2082;
      uint64_t v71 = (uint64_t)v24;
      id v38 = v24;
      __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE5130);
      uint64_t v39 = sub_1D5AB4E10();
      uint64_t v71 = sub_1D5951500(v39, v40, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D5947000, v28, (os_log_type_t)v67, "[%{public}s] %{public}s ended in %fs -> %{public}s", (uint8_t *)v31, 0x2Au);
      uint64_t v41 = v63;
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v41, -1, -1);
      MEMORY[0x1D945AAC0](v31, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v18, v12);
    }
  }
  else
  {
    if (qword_1EBDE4100 != -1) {
      swift_once();
    }
    uint64_t v42 = sub_1D5AB4B50();
    __swift_project_value_buffer(v42, (uint64_t)qword_1EBDE5DB8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v20, a7, v12);
    swift_bridgeObjectRetain_n();
    uint64_t v43 = sub_1D5AB4B30();
    os_log_type_t v44 = sub_1D5AB5430();
    int v45 = v44;
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v46 = swift_slowAlloc();
      int v62 = v45;
      uint64_t v47 = v46;
      uint64_t v63 = swift_slowAlloc();
      v72[0] = v63;
      *(_DWORD *)uint64_t v47 = 136446722;
      swift_bridgeObjectRetain();
      uint64_t v71 = sub_1D5951500(v64, a3, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v47 + 12) = 2082;
      uint64_t v48 = sub_1D5AB5810();
      uint64_t v71 = sub_1D5951500(v48, v49, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 22) = 2048;
      unint64_t v50 = v68;
      sub_1D5AB1CC0();
      sub_1D5AB1C70();
      uint64_t v52 = v51;
      uint64_t v53 = *(void (**)(unsigned char *, uint64_t))(v13 + 8);
      v53(v50, v12);
      uint64_t v71 = v52;
      sub_1D5AB5680();
      v53(v20, v12);
      _os_log_impl(&dword_1D5947000, v43, (os_log_type_t)v62, "[%{public}s] %{public}s ended in %fs", (uint8_t *)v47, 0x20u);
      uint64_t v54 = v63;
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v54, -1, -1);
      MEMORY[0x1D945AAC0](v47, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v20, v12);
    }

    sub_1D594F53C((uint64_t)v23, &qword_1EA725530);
  }
  uint64_t v55 = *(os_unfair_lock_s **)(v69 + OBJC_IVAR____TtC13SeymourClient8Signpost_state);
  uint64_t v56 = v55 + 4;
  uint64_t v57 = v55 + 6;
  os_unfair_lock_lock(v55 + 6);
  sub_1D596E0C4(v56);
  os_unfair_lock_unlock(v57);
  uint64_t v58 = *(os_unfair_lock_s **)(v70 + 40);
  uint64_t v59 = (uint64_t *)&v58[4];
  uint64_t v60 = v58 + 11;
  os_unfair_lock_lock(v58 + 11);
  sub_1D5A0E484(v59);
  os_unfair_lock_unlock(v60);
}

void sub_1D596B3E8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v67 = a6;
  uint64_t v65 = a4;
  uint64_t v66 = a5;
  uint64_t v64 = a2;
  uint64_t v69 = a8;
  uint64_t v70 = a9;
  uint64_t v12 = sub_1D5AB1CE0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v68 = &v61[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = &v61[-v17];
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = &v61[-v19];
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725528);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (void **)&v61[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D596E6CC(a1, (uint64_t)v23, &qword_1EA725528);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = *v23;
    if (qword_1EBDE4100 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1D5AB4B50();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EBDE5DB8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v18, a7, v12);
    swift_bridgeObjectRetain();
    id v26 = v24;
    swift_bridgeObjectRetain();
    id v27 = v24;
    os_log_type_t v28 = sub_1D5AB4B30();
    os_log_type_t v29 = sub_1D5AB5410();
    int v30 = v29;
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v63 = swift_slowAlloc();
      v72[0] = v63;
      *(_DWORD *)uint64_t v31 = 136446978;
      swift_bridgeObjectRetain();
      uint64_t v71 = sub_1D5951500(v64, a3, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v31 + 12) = 2082;
      uint64_t v32 = sub_1D5AB5810();
      uint64_t v71 = sub_1D5951500(v32, v33, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 22) = 2048;
      uint64_t v34 = v68;
      sub_1D5AB1CC0();
      sub_1D5AB1C70();
      uint64_t v36 = v35;
      int v67 = v30;
      uint64_t v37 = *(void (**)(unsigned char *, uint64_t))(v13 + 8);
      v37(v34, v12);
      uint64_t v71 = v36;
      sub_1D5AB5680();
      v37(v18, v12);
      *(_WORD *)(v31 + 32) = 2082;
      uint64_t v71 = (uint64_t)v24;
      id v38 = v24;
      __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE5130);
      uint64_t v39 = sub_1D5AB4E10();
      uint64_t v71 = sub_1D5951500(v39, v40, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D5947000, v28, (os_log_type_t)v67, "[%{public}s] %{public}s ended in %fs -> %{public}s", (uint8_t *)v31, 0x2Au);
      uint64_t v41 = v63;
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v41, -1, -1);
      MEMORY[0x1D945AAC0](v31, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v18, v12);
    }
  }
  else
  {
    if (qword_1EBDE4100 != -1) {
      swift_once();
    }
    uint64_t v42 = sub_1D5AB4B50();
    __swift_project_value_buffer(v42, (uint64_t)qword_1EBDE5DB8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v20, a7, v12);
    swift_bridgeObjectRetain_n();
    uint64_t v43 = sub_1D5AB4B30();
    os_log_type_t v44 = sub_1D5AB5430();
    int v45 = v44;
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v46 = swift_slowAlloc();
      int v62 = v45;
      uint64_t v47 = v46;
      uint64_t v63 = swift_slowAlloc();
      v72[0] = v63;
      *(_DWORD *)uint64_t v47 = 136446722;
      swift_bridgeObjectRetain();
      uint64_t v71 = sub_1D5951500(v64, a3, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v47 + 12) = 2082;
      uint64_t v48 = sub_1D5AB5810();
      uint64_t v71 = sub_1D5951500(v48, v49, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 22) = 2048;
      unint64_t v50 = v68;
      sub_1D5AB1CC0();
      sub_1D5AB1C70();
      uint64_t v52 = v51;
      uint64_t v53 = *(void (**)(unsigned char *, uint64_t))(v13 + 8);
      v53(v50, v12);
      uint64_t v71 = v52;
      sub_1D5AB5680();
      v53(v20, v12);
      _os_log_impl(&dword_1D5947000, v43, (os_log_type_t)v62, "[%{public}s] %{public}s ended in %fs", (uint8_t *)v47, 0x20u);
      uint64_t v54 = v63;
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v54, -1, -1);
      MEMORY[0x1D945AAC0](v47, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v20, v12);
    }

    sub_1D594F53C((uint64_t)v23, &qword_1EA725528);
  }
  uint64_t v55 = *(os_unfair_lock_s **)(v69 + OBJC_IVAR____TtC13SeymourClient8Signpost_state);
  uint64_t v56 = v55 + 4;
  uint64_t v57 = v55 + 6;
  os_unfair_lock_lock(v55 + 6);
  sub_1D596E0C4(v56);
  os_unfair_lock_unlock(v57);
  uint64_t v58 = *(os_unfair_lock_s **)(v70 + 40);
  uint64_t v59 = (uint64_t *)&v58[4];
  uint64_t v60 = v58 + 11;
  os_unfair_lock_lock(v58 + 11);
  sub_1D5A0E484(v59);
  os_unfair_lock_unlock(v60);
}

void sub_1D596BB3C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v67 = a6;
  uint64_t v65 = a4;
  uint64_t v66 = a5;
  uint64_t v64 = a2;
  uint64_t v69 = a8;
  uint64_t v70 = a9;
  uint64_t v12 = sub_1D5AB1CE0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v68 = &v61[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = &v61[-v17];
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = &v61[-v19];
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725520);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (void **)&v61[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D596E6CC(a1, (uint64_t)v23, &qword_1EA725520);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = *v23;
    if (qword_1EBDE4100 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1D5AB4B50();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EBDE5DB8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v18, a7, v12);
    swift_bridgeObjectRetain();
    id v26 = v24;
    swift_bridgeObjectRetain();
    id v27 = v24;
    os_log_type_t v28 = sub_1D5AB4B30();
    os_log_type_t v29 = sub_1D5AB5410();
    int v30 = v29;
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v63 = swift_slowAlloc();
      v72[0] = v63;
      *(_DWORD *)uint64_t v31 = 136446978;
      swift_bridgeObjectRetain();
      uint64_t v71 = sub_1D5951500(v64, a3, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v31 + 12) = 2082;
      uint64_t v32 = sub_1D5AB5810();
      uint64_t v71 = sub_1D5951500(v32, v33, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 22) = 2048;
      uint64_t v34 = v68;
      sub_1D5AB1CC0();
      sub_1D5AB1C70();
      uint64_t v36 = v35;
      int v67 = v30;
      uint64_t v37 = *(void (**)(unsigned char *, uint64_t))(v13 + 8);
      v37(v34, v12);
      uint64_t v71 = v36;
      sub_1D5AB5680();
      v37(v18, v12);
      *(_WORD *)(v31 + 32) = 2082;
      uint64_t v71 = (uint64_t)v24;
      id v38 = v24;
      __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE5130);
      uint64_t v39 = sub_1D5AB4E10();
      uint64_t v71 = sub_1D5951500(v39, v40, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D5947000, v28, (os_log_type_t)v67, "[%{public}s] %{public}s ended in %fs -> %{public}s", (uint8_t *)v31, 0x2Au);
      uint64_t v41 = v63;
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v41, -1, -1);
      MEMORY[0x1D945AAC0](v31, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v18, v12);
    }
  }
  else
  {
    if (qword_1EBDE4100 != -1) {
      swift_once();
    }
    uint64_t v42 = sub_1D5AB4B50();
    __swift_project_value_buffer(v42, (uint64_t)qword_1EBDE5DB8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v20, a7, v12);
    swift_bridgeObjectRetain_n();
    uint64_t v43 = sub_1D5AB4B30();
    os_log_type_t v44 = sub_1D5AB5430();
    int v45 = v44;
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v46 = swift_slowAlloc();
      int v62 = v45;
      uint64_t v47 = v46;
      uint64_t v63 = swift_slowAlloc();
      v72[0] = v63;
      *(_DWORD *)uint64_t v47 = 136446722;
      swift_bridgeObjectRetain();
      uint64_t v71 = sub_1D5951500(v64, a3, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v47 + 12) = 2082;
      uint64_t v48 = sub_1D5AB5810();
      uint64_t v71 = sub_1D5951500(v48, v49, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 22) = 2048;
      unint64_t v50 = v68;
      sub_1D5AB1CC0();
      sub_1D5AB1C70();
      uint64_t v52 = v51;
      uint64_t v53 = *(void (**)(unsigned char *, uint64_t))(v13 + 8);
      v53(v50, v12);
      uint64_t v71 = v52;
      sub_1D5AB5680();
      v53(v20, v12);
      _os_log_impl(&dword_1D5947000, v43, (os_log_type_t)v62, "[%{public}s] %{public}s ended in %fs", (uint8_t *)v47, 0x20u);
      uint64_t v54 = v63;
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v54, -1, -1);
      MEMORY[0x1D945AAC0](v47, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v20, v12);
    }

    sub_1D594F53C((uint64_t)v23, &qword_1EA725520);
  }
  uint64_t v55 = *(os_unfair_lock_s **)(v69 + OBJC_IVAR____TtC13SeymourClient8Signpost_state);
  uint64_t v56 = v55 + 4;
  uint64_t v57 = v55 + 6;
  os_unfair_lock_lock(v55 + 6);
  sub_1D596E0C4(v56);
  os_unfair_lock_unlock(v57);
  uint64_t v58 = *(os_unfair_lock_s **)(v70 + 40);
  uint64_t v59 = (uint64_t *)&v58[4];
  uint64_t v60 = v58 + 11;
  os_unfair_lock_lock(v58 + 11);
  sub_1D5A0E484(v59);
  os_unfair_lock_unlock(v60);
}

void sub_1D596C290(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v67 = a6;
  uint64_t v65 = a4;
  uint64_t v66 = a5;
  uint64_t v64 = a2;
  uint64_t v69 = a8;
  uint64_t v70 = a9;
  uint64_t v12 = sub_1D5AB1CE0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v68 = &v61[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = &v61[-v17];
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = &v61[-v19];
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725518);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (void **)&v61[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D596E6CC(a1, (uint64_t)v23, &qword_1EA725518);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = *v23;
    if (qword_1EBDE4100 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1D5AB4B50();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EBDE5DB8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v18, a7, v12);
    swift_bridgeObjectRetain();
    id v26 = v24;
    swift_bridgeObjectRetain();
    id v27 = v24;
    os_log_type_t v28 = sub_1D5AB4B30();
    os_log_type_t v29 = sub_1D5AB5410();
    int v30 = v29;
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v63 = swift_slowAlloc();
      v72[0] = v63;
      *(_DWORD *)uint64_t v31 = 136446978;
      swift_bridgeObjectRetain();
      uint64_t v71 = sub_1D5951500(v64, a3, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v31 + 12) = 2082;
      uint64_t v32 = sub_1D5AB5810();
      uint64_t v71 = sub_1D5951500(v32, v33, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 22) = 2048;
      uint64_t v34 = v68;
      sub_1D5AB1CC0();
      sub_1D5AB1C70();
      uint64_t v36 = v35;
      int v67 = v30;
      uint64_t v37 = *(void (**)(unsigned char *, uint64_t))(v13 + 8);
      v37(v34, v12);
      uint64_t v71 = v36;
      sub_1D5AB5680();
      v37(v18, v12);
      *(_WORD *)(v31 + 32) = 2082;
      uint64_t v71 = (uint64_t)v24;
      id v38 = v24;
      __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE5130);
      uint64_t v39 = sub_1D5AB4E10();
      uint64_t v71 = sub_1D5951500(v39, v40, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D5947000, v28, (os_log_type_t)v67, "[%{public}s] %{public}s ended in %fs -> %{public}s", (uint8_t *)v31, 0x2Au);
      uint64_t v41 = v63;
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v41, -1, -1);
      MEMORY[0x1D945AAC0](v31, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v18, v12);
    }
  }
  else
  {
    if (qword_1EBDE4100 != -1) {
      swift_once();
    }
    uint64_t v42 = sub_1D5AB4B50();
    __swift_project_value_buffer(v42, (uint64_t)qword_1EBDE5DB8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v20, a7, v12);
    swift_bridgeObjectRetain_n();
    uint64_t v43 = sub_1D5AB4B30();
    os_log_type_t v44 = sub_1D5AB5430();
    int v45 = v44;
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v46 = swift_slowAlloc();
      int v62 = v45;
      uint64_t v47 = v46;
      uint64_t v63 = swift_slowAlloc();
      v72[0] = v63;
      *(_DWORD *)uint64_t v47 = 136446722;
      swift_bridgeObjectRetain();
      uint64_t v71 = sub_1D5951500(v64, a3, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v47 + 12) = 2082;
      uint64_t v48 = sub_1D5AB5810();
      uint64_t v71 = sub_1D5951500(v48, v49, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 22) = 2048;
      unint64_t v50 = v68;
      sub_1D5AB1CC0();
      sub_1D5AB1C70();
      uint64_t v52 = v51;
      uint64_t v53 = *(void (**)(unsigned char *, uint64_t))(v13 + 8);
      v53(v50, v12);
      uint64_t v71 = v52;
      sub_1D5AB5680();
      v53(v20, v12);
      _os_log_impl(&dword_1D5947000, v43, (os_log_type_t)v62, "[%{public}s] %{public}s ended in %fs", (uint8_t *)v47, 0x20u);
      uint64_t v54 = v63;
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v54, -1, -1);
      MEMORY[0x1D945AAC0](v47, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v20, v12);
    }

    sub_1D594F53C((uint64_t)v23, &qword_1EA725518);
  }
  uint64_t v55 = *(os_unfair_lock_s **)(v69 + OBJC_IVAR____TtC13SeymourClient8Signpost_state);
  uint64_t v56 = v55 + 4;
  uint64_t v57 = v55 + 6;
  os_unfair_lock_lock(v55 + 6);
  sub_1D596E0C4(v56);
  os_unfair_lock_unlock(v57);
  uint64_t v58 = *(os_unfair_lock_s **)(v70 + 40);
  uint64_t v59 = (uint64_t *)&v58[4];
  uint64_t v60 = v58 + 11;
  os_unfair_lock_lock(v58 + 11);
  sub_1D5A0E484(v59);
  os_unfair_lock_unlock(v60);
}

void sub_1D596C9E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v67 = a6;
  uint64_t v65 = a4;
  uint64_t v66 = a5;
  uint64_t v64 = a2;
  uint64_t v69 = a8;
  uint64_t v70 = a9;
  uint64_t v12 = sub_1D5AB1CE0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v68 = &v61[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = &v61[-v17];
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = &v61[-v19];
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725510);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (void **)&v61[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D596E6CC(a1, (uint64_t)v23, &qword_1EA725510);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = *v23;
    if (qword_1EBDE4100 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1D5AB4B50();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EBDE5DB8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v18, a7, v12);
    swift_bridgeObjectRetain();
    id v26 = v24;
    swift_bridgeObjectRetain();
    id v27 = v24;
    os_log_type_t v28 = sub_1D5AB4B30();
    os_log_type_t v29 = sub_1D5AB5410();
    int v30 = v29;
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v63 = swift_slowAlloc();
      v72[0] = v63;
      *(_DWORD *)uint64_t v31 = 136446978;
      swift_bridgeObjectRetain();
      uint64_t v71 = sub_1D5951500(v64, a3, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v31 + 12) = 2082;
      uint64_t v32 = sub_1D5AB5810();
      uint64_t v71 = sub_1D5951500(v32, v33, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 22) = 2048;
      uint64_t v34 = v68;
      sub_1D5AB1CC0();
      sub_1D5AB1C70();
      uint64_t v36 = v35;
      int v67 = v30;
      uint64_t v37 = *(void (**)(unsigned char *, uint64_t))(v13 + 8);
      v37(v34, v12);
      uint64_t v71 = v36;
      sub_1D5AB5680();
      v37(v18, v12);
      *(_WORD *)(v31 + 32) = 2082;
      uint64_t v71 = (uint64_t)v24;
      id v38 = v24;
      __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE5130);
      uint64_t v39 = sub_1D5AB4E10();
      uint64_t v71 = sub_1D5951500(v39, v40, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D5947000, v28, (os_log_type_t)v67, "[%{public}s] %{public}s ended in %fs -> %{public}s", (uint8_t *)v31, 0x2Au);
      uint64_t v41 = v63;
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v41, -1, -1);
      MEMORY[0x1D945AAC0](v31, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v18, v12);
    }
  }
  else
  {
    if (qword_1EBDE4100 != -1) {
      swift_once();
    }
    uint64_t v42 = sub_1D5AB4B50();
    __swift_project_value_buffer(v42, (uint64_t)qword_1EBDE5DB8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v20, a7, v12);
    swift_bridgeObjectRetain_n();
    uint64_t v43 = sub_1D5AB4B30();
    os_log_type_t v44 = sub_1D5AB5430();
    int v45 = v44;
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v46 = swift_slowAlloc();
      int v62 = v45;
      uint64_t v47 = v46;
      uint64_t v63 = swift_slowAlloc();
      v72[0] = v63;
      *(_DWORD *)uint64_t v47 = 136446722;
      swift_bridgeObjectRetain();
      uint64_t v71 = sub_1D5951500(v64, a3, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v47 + 12) = 2082;
      uint64_t v48 = sub_1D5AB5810();
      uint64_t v71 = sub_1D5951500(v48, v49, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 22) = 2048;
      unint64_t v50 = v68;
      sub_1D5AB1CC0();
      sub_1D5AB1C70();
      uint64_t v52 = v51;
      uint64_t v53 = *(void (**)(unsigned char *, uint64_t))(v13 + 8);
      v53(v50, v12);
      uint64_t v71 = v52;
      sub_1D5AB5680();
      v53(v20, v12);
      _os_log_impl(&dword_1D5947000, v43, (os_log_type_t)v62, "[%{public}s] %{public}s ended in %fs", (uint8_t *)v47, 0x20u);
      uint64_t v54 = v63;
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v54, -1, -1);
      MEMORY[0x1D945AAC0](v47, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v20, v12);
    }

    sub_1D594F53C((uint64_t)v23, &qword_1EA725510);
  }
  uint64_t v55 = *(os_unfair_lock_s **)(v69 + OBJC_IVAR____TtC13SeymourClient8Signpost_state);
  uint64_t v56 = v55 + 4;
  uint64_t v57 = v55 + 6;
  os_unfair_lock_lock(v55 + 6);
  sub_1D596E0C4(v56);
  os_unfair_lock_unlock(v57);
  uint64_t v58 = *(os_unfair_lock_s **)(v70 + 40);
  uint64_t v59 = (uint64_t *)&v58[4];
  uint64_t v60 = v58 + 11;
  os_unfair_lock_lock(v58 + 11);
  sub_1D5A0E484(v59);
  os_unfair_lock_unlock(v60);
}

void sub_1D596D138(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v67 = a6;
  uint64_t v65 = a4;
  uint64_t v66 = a5;
  uint64_t v64 = a2;
  uint64_t v69 = a8;
  uint64_t v70 = a9;
  uint64_t v12 = sub_1D5AB1CE0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v68 = &v61[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = &v61[-v17];
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = &v61[-v19];
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725500);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (void **)&v61[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D596E6CC(a1, (uint64_t)v23, &qword_1EA725500);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = *v23;
    if (qword_1EBDE4100 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1D5AB4B50();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EBDE5DB8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v18, a7, v12);
    swift_bridgeObjectRetain();
    id v26 = v24;
    swift_bridgeObjectRetain();
    id v27 = v24;
    os_log_type_t v28 = sub_1D5AB4B30();
    os_log_type_t v29 = sub_1D5AB5410();
    int v30 = v29;
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v63 = swift_slowAlloc();
      v72[0] = v63;
      *(_DWORD *)uint64_t v31 = 136446978;
      swift_bridgeObjectRetain();
      uint64_t v71 = sub_1D5951500(v64, a3, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v31 + 12) = 2082;
      uint64_t v32 = sub_1D5AB5810();
      uint64_t v71 = sub_1D5951500(v32, v33, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 22) = 2048;
      uint64_t v34 = v68;
      sub_1D5AB1CC0();
      sub_1D5AB1C70();
      uint64_t v36 = v35;
      int v67 = v30;
      uint64_t v37 = *(void (**)(unsigned char *, uint64_t))(v13 + 8);
      v37(v34, v12);
      uint64_t v71 = v36;
      sub_1D5AB5680();
      v37(v18, v12);
      *(_WORD *)(v31 + 32) = 2082;
      uint64_t v71 = (uint64_t)v24;
      id v38 = v24;
      __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE5130);
      uint64_t v39 = sub_1D5AB4E10();
      uint64_t v71 = sub_1D5951500(v39, v40, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D5947000, v28, (os_log_type_t)v67, "[%{public}s] %{public}s ended in %fs -> %{public}s", (uint8_t *)v31, 0x2Au);
      uint64_t v41 = v63;
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v41, -1, -1);
      MEMORY[0x1D945AAC0](v31, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v18, v12);
    }
  }
  else
  {
    if (qword_1EBDE4100 != -1) {
      swift_once();
    }
    uint64_t v42 = sub_1D5AB4B50();
    __swift_project_value_buffer(v42, (uint64_t)qword_1EBDE5DB8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v20, a7, v12);
    swift_bridgeObjectRetain_n();
    uint64_t v43 = sub_1D5AB4B30();
    os_log_type_t v44 = sub_1D5AB5430();
    int v45 = v44;
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v46 = swift_slowAlloc();
      int v62 = v45;
      uint64_t v47 = v46;
      uint64_t v63 = swift_slowAlloc();
      v72[0] = v63;
      *(_DWORD *)uint64_t v47 = 136446722;
      swift_bridgeObjectRetain();
      uint64_t v71 = sub_1D5951500(v64, a3, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v47 + 12) = 2082;
      uint64_t v48 = sub_1D5AB5810();
      uint64_t v71 = sub_1D5951500(v48, v49, v72);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 22) = 2048;
      unint64_t v50 = v68;
      sub_1D5AB1CC0();
      sub_1D5AB1C70();
      uint64_t v52 = v51;
      uint64_t v53 = *(void (**)(unsigned char *, uint64_t))(v13 + 8);
      v53(v50, v12);
      uint64_t v71 = v52;
      sub_1D5AB5680();
      v53(v20, v12);
      _os_log_impl(&dword_1D5947000, v43, (os_log_type_t)v62, "[%{public}s] %{public}s ended in %fs", (uint8_t *)v47, 0x20u);
      uint64_t v54 = v63;
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v54, -1, -1);
      MEMORY[0x1D945AAC0](v47, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v20, v12);
    }

    sub_1D594F53C((uint64_t)v23, &qword_1EA725500);
  }
  uint64_t v55 = *(os_unfair_lock_s **)(v69 + OBJC_IVAR____TtC13SeymourClient8Signpost_state);
  uint64_t v56 = v55 + 4;
  uint64_t v57 = v55 + 6;
  os_unfair_lock_lock(v55 + 6);
  sub_1D596E0C4(v56);
  os_unfair_lock_unlock(v57);
  uint64_t v58 = *(os_unfair_lock_s **)(v70 + 40);
  uint64_t v59 = (uint64_t *)&v58[4];
  uint64_t v60 = v58 + 11;
  os_unfair_lock_lock(v58 + 11);
  sub_1D5A0E484(v59);
  os_unfair_lock_unlock(v60);
}

void *sub_1D596D88C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[2] = a1;
  a4[3] = &protocol witness table for XPCClient;
  a4[4] = &protocol witness table for XPCClient;
  a4[5] = a2;
  a4[6] = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v16 = a1;
  char v15 = 17;
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  uint64_t v8 = sub_1D5AB43F0();
  swift_retain();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v15, (uint64_t)sub_1D596EA44, v7, ObjectType, v8, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E4F9EAC0], MEMORY[0x1E4F9EAC8]);
  swift_release();
  uint64_t v16 = a1;
  char v15 = 18;
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  uint64_t v10 = sub_1D5AB4200();
  TransportDispatching.register<A>(event:handler:)(&v15, (uint64_t)sub_1D596EAA4, v9, ObjectType, v10, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E4F9E8D0], MEMORY[0x1E4F9E8D8]);
  swift_release();
  uint64_t v16 = a1;
  char v15 = 25;
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  uint64_t v12 = sub_1D5AB4420();
  TransportDispatching.register<A>(event:handler:)(&v15, (uint64_t)sub_1D596EB04, v11, ObjectType, v12, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E4F9EB28], MEMORY[0x1E4F9EB30]);
  swift_release();
  uint64_t v16 = a1;
  char v15 = 19;
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v15, (uint64_t)sub_1D596EB64, v13, ObjectType, (uint64_t)&protocol witness table for XPCClient);
  swift_release_n();
  swift_unknownObjectRelease();
  return a4;
}

void *sub_1D596DB08(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  a4[2] = a1;
  a4[3] = a6;
  a4[4] = a7;
  a4[5] = a2;
  a4[6] = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v20 = a1;
  char v19 = 17;
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  uint64_t v12 = sub_1D5AB43F0();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v19, (uint64_t)sub_1D596EA44, v11, ObjectType, v12, a7, MEMORY[0x1E4F9EAC0], MEMORY[0x1E4F9EAC8]);
  swift_release();
  uint64_t v20 = a1;
  char v19 = 18;
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  uint64_t v14 = sub_1D5AB4200();
  TransportDispatching.register<A>(event:handler:)(&v19, (uint64_t)sub_1D596EAA4, v13, ObjectType, v14, a7, MEMORY[0x1E4F9E8D0], MEMORY[0x1E4F9E8D8]);
  swift_release();
  uint64_t v20 = a1;
  char v19 = 25;
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  uint64_t v16 = sub_1D5AB4420();
  TransportDispatching.register<A>(event:handler:)(&v19, (uint64_t)sub_1D596EB04, v15, ObjectType, v16, a7, MEMORY[0x1E4F9EB28], MEMORY[0x1E4F9EB30]);
  swift_release();
  uint64_t v20 = a1;
  char v19 = 19;
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v19, (uint64_t)sub_1D596EB64, v17, ObjectType, a7);
  swift_release_n();
  swift_unknownObjectRelease();
  return a4;
}

void *sub_1D596DD78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = (void *)swift_allocObject();
  return sub_1D596DB08(a1, a2, a3, v13, a5, a6, a7);
}

uint64_t sub_1D596DDF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActivityTracer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D596DE5C()
{
  unint64_t result = qword_1EA7252F8;
  if (!qword_1EA7252F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA7252F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7252F8);
  }
  return result;
}

unint64_t sub_1D596DED0()
{
  unint64_t result = qword_1EA725300;
  if (!qword_1EA725300)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA7252F0);
    sub_1D596DF44();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725300);
  }
  return result;
}

unint64_t sub_1D596DF44()
{
  unint64_t result = qword_1EA725308;
  if (!qword_1EA725308)
  {
    sub_1D5AB37B0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725308);
  }
  return result;
}

uint64_t sub_1D596DF9C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for RemoteBrowsingClient()
{
  return self;
}

uint64_t method lookup function for RemoteBrowsingClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RemoteBrowsingClient);
}

uint64_t dispatch thunk of RemoteBrowsingClient.__allocating_init(connection:eventHub:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1D596E038()
{
  return objectdestroy_4Tm(&qword_1EA7254F8);
}

uint64_t sub_1D596E044@<X0>(uint64_t a1@<X8>)
{
  return sub_1D596E780(&qword_1EA7254F8, a1);
}

uint64_t sub_1D596E050()
{
  return objectdestroy_7Tm(&qword_1EBDE4E10);
}

uint64_t sub_1D596E05C(uint64_t a1, uint64_t a2)
{
  return sub_1D596E930(a1, a2, &qword_1EBDE4E10, sub_1D5986F30);
}

uint64_t sub_1D596E080(uint64_t a1)
{
  return sub_1D596E5DC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, unint64_t, void, void))sub_1D596D138);
}

uint64_t sub_1D596E098()
{
  return objectdestroy_7Tm(&qword_1EA7254F8);
}

uint64_t sub_1D596E0A4(uint64_t a1, uint64_t a2)
{
  return sub_1D596E930(a1, a2, &qword_1EA7254F8, sub_1D5A99FDC);
}

uint64_t sub_1D596E0C4(void *a1)
{
  return sub_1D5A06C14(a1, v1);
}

uint64_t sub_1D596E0E4()
{
  return objectdestroy_4Tm(&qword_1EA725508);
}

uint64_t sub_1D596E0F0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D596E780(&qword_1EA725508, a1);
}

uint64_t sub_1D596E0FC()
{
  return objectdestroy_7Tm(&qword_1EBDE4E10);
}

uint64_t sub_1D596E108(uint64_t a1, uint64_t a2)
{
  return sub_1D596E930(a1, a2, &qword_1EBDE4E10, sub_1D5986F08);
}

uint64_t sub_1D596E12C(uint64_t a1)
{
  return sub_1D596E5DC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, unint64_t, void, void))sub_1D596C9E4);
}

uint64_t sub_1D596E144()
{
  return objectdestroy_7Tm(&qword_1EA725508);
}

uint64_t sub_1D596E150(uint64_t a1, uint64_t a2)
{
  return sub_1D596E930(a1, a2, &qword_1EA725508, sub_1D5A99FB4);
}

uint64_t sub_1D596E174()
{
  return objectdestroy_4Tm(&qword_1EA7254D8);
}

uint64_t sub_1D596E180@<X0>(uint64_t a1@<X8>)
{
  return sub_1D596E780(&qword_1EA7254D8, a1);
}

uint64_t sub_1D596E18C()
{
  return objectdestroy_7Tm(&qword_1EBDE4E10);
}

uint64_t sub_1D596E198(uint64_t a1, uint64_t a2)
{
  return sub_1D596E930(a1, a2, &qword_1EBDE4E10, sub_1D5986DF0);
}

uint64_t sub_1D596E1BC(uint64_t a1)
{
  return sub_1D596E5DC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, unint64_t, void, void))sub_1D596C290);
}

uint64_t sub_1D596E1D4()
{
  return objectdestroy_7Tm(&qword_1EA7254D8);
}

uint64_t sub_1D596E1E0(uint64_t a1, uint64_t a2)
{
  return sub_1D596E930(a1, a2, &qword_1EA7254D8, sub_1D5A99F8C);
}

uint64_t sub_1D596E204()
{
  return objectdestroy_4Tm(&qword_1EA7253F8);
}

uint64_t sub_1D596E210@<X0>(uint64_t a1@<X8>)
{
  return sub_1D596E780(&qword_1EA7253F8, a1);
}

uint64_t sub_1D596E21C()
{
  return objectdestroy_7Tm(&qword_1EBDE4E10);
}

uint64_t sub_1D596E228(uint64_t a1, uint64_t a2)
{
  return sub_1D596E930(a1, a2, &qword_1EBDE4E10, sub_1D5986DC8);
}

uint64_t sub_1D596E24C(uint64_t a1)
{
  return sub_1D596E5DC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, unint64_t, void, void))sub_1D596BB3C);
}

uint64_t sub_1D596E264()
{
  return objectdestroy_7Tm(&qword_1EA7253F8);
}

uint64_t sub_1D596E270(uint64_t a1, uint64_t a2)
{
  return sub_1D596E930(a1, a2, &qword_1EA7253F8, sub_1D5A99F64);
}

uint64_t sub_1D596E294()
{
  return objectdestroy_4Tm(&qword_1EA7253F0);
}

uint64_t sub_1D596E2A0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D596E780(&qword_1EA7253F0, a1);
}

uint64_t sub_1D596E2AC()
{
  return objectdestroy_7Tm(&qword_1EBDE4E10);
}

uint64_t sub_1D596E2B8(uint64_t a1, uint64_t a2)
{
  return sub_1D596E930(a1, a2, &qword_1EBDE4E10, sub_1D5986DA0);
}

uint64_t sub_1D596E2DC(uint64_t a1)
{
  return sub_1D596E5DC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, unint64_t, void, void))sub_1D596B3E8);
}

uint64_t sub_1D596E2F4()
{
  return objectdestroy_7Tm(&qword_1EA7253F0);
}

uint64_t sub_1D596E300(uint64_t a1, uint64_t a2)
{
  return sub_1D596E930(a1, a2, &qword_1EA7253F0, sub_1D5A99F3C);
}

uint64_t sub_1D596E324()
{
  return objectdestroy_4Tm(&qword_1EA7253B8);
}

uint64_t sub_1D596E330@<X0>(uint64_t a1@<X8>)
{
  return sub_1D596E780(&qword_1EA7253B8, a1);
}

uint64_t sub_1D596E33C()
{
  return objectdestroy_7Tm(&qword_1EBDE4E10);
}

uint64_t sub_1D596E348(uint64_t a1, uint64_t a2)
{
  return sub_1D596E930(a1, a2, &qword_1EBDE4E10, sub_1D5986D78);
}

uint64_t sub_1D596E36C(uint64_t a1)
{
  return sub_1D596E5DC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, unint64_t, void, void))sub_1D596AC94);
}

uint64_t sub_1D596E384()
{
  return objectdestroy_7Tm(&qword_1EA7253B8);
}

uint64_t sub_1D596E390(uint64_t a1, uint64_t a2)
{
  return sub_1D596E930(a1, a2, &qword_1EA7253B8, sub_1D5A99F14);
}

uint64_t sub_1D596E3B4()
{
  return objectdestroy_4Tm(&qword_1EA7252E8);
}

uint64_t sub_1D596E3C0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D596E780(&qword_1EA7252E8, a1);
}

uint64_t sub_1D596E3CC()
{
  return objectdestroy_7Tm(&qword_1EBDE4E10);
}

uint64_t sub_1D596E3D8(uint64_t a1, uint64_t a2)
{
  return sub_1D596E930(a1, a2, &qword_1EBDE4E10, sub_1D5986D50);
}

uint64_t sub_1D596E3FC(uint64_t a1)
{
  return sub_1D596E83C(a1, (uint64_t (*)(void, void, void, void, void, void, void, unint64_t, void, void))sub_1D596A578);
}

uint64_t sub_1D596E414()
{
  return objectdestroy_7Tm(&qword_1EA7252E8);
}

uint64_t sub_1D596E420(uint64_t a1, uint64_t a2)
{
  return sub_1D596E930(a1, a2, &qword_1EA7252E8, sub_1D5A99EEC);
}

id sub_1D596E440(id a1, char a2)
{
  if (a2) {
    return a1;
  }
  else {
    return (id)swift_bridgeObjectRetain();
  }
}

void sub_1D596E44C(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1D596E45C()
{
  return objectdestroy_4Tm(&qword_1EA725250);
}

uint64_t sub_1D596E468@<X0>(uint64_t a1@<X8>)
{
  return sub_1D596E780(&qword_1EA725250, a1);
}

uint64_t sub_1D596E474()
{
  return objectdestroy_7Tm(&qword_1EBDE4E10);
}

uint64_t sub_1D596E480(uint64_t a1, uint64_t a2)
{
  return sub_1D596E930(a1, a2, &qword_1EBDE4E10, sub_1D5986D28);
}

uint64_t sub_1D596E4A4(uint64_t a1)
{
  return sub_1D596E5DC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, unint64_t, void, void))sub_1D5969E24);
}

uint64_t sub_1D596E4BC()
{
  return objectdestroy_7Tm(&qword_1EA725250);
}

uint64_t sub_1D596E4C8(uint64_t a1, uint64_t a2)
{
  return sub_1D596E930(a1, a2, &qword_1EA725250, sub_1D5A99EC4);
}

uint64_t sub_1D596E4EC()
{
  return objectdestroy_4Tm(&qword_1EA725248);
}

uint64_t sub_1D596E4F8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D596E780(&qword_1EA725248, a1);
}

uint64_t sub_1D596E504()
{
  return objectdestroy_7Tm(&qword_1EBDE4E10);
}

uint64_t sub_1D596E510(uint64_t a1, uint64_t a2)
{
  return sub_1D596E930(a1, a2, &qword_1EBDE4E10, sub_1D5986D00);
}

uint64_t sub_1D596E534(uint64_t a1)
{
  return sub_1D596E5DC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, unint64_t, void, void))sub_1D59696D0);
}

uint64_t sub_1D596E54C()
{
  return objectdestroy_7Tm(&qword_1EA725248);
}

uint64_t sub_1D596E558(uint64_t a1, uint64_t a2)
{
  return sub_1D596E930(a1, a2, &qword_1EA725248, sub_1D5A99E9C);
}

uint64_t sub_1D596E57C()
{
  return objectdestroy_4Tm(&qword_1EA725240);
}

uint64_t sub_1D596E588@<X0>(uint64_t a1@<X8>)
{
  return sub_1D596E780(&qword_1EA725240, a1);
}

uint64_t sub_1D596E594()
{
  return objectdestroy_7Tm(&qword_1EBDE4E10);
}

uint64_t sub_1D596E5A0(uint64_t a1, uint64_t a2)
{
  return sub_1D596E930(a1, a2, &qword_1EBDE4E10, sub_1D5986CD8);
}

uint64_t sub_1D596E5C4(uint64_t a1)
{
  return sub_1D596E5DC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, unint64_t, void, void))sub_1D5968F7C);
}

uint64_t sub_1D596E5DC(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, unint64_t, void, void))
{
  uint64_t v5 = *(void *)(sub_1D5AB1CE0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return a2(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(unsigned __int8 *)(v2 + 48), v2 + v6, *(void *)(v2 + v7), *(void *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1D596E6A0()
{
  return objectdestroy_7Tm(&qword_1EA725240);
}

uint64_t sub_1D596E6AC(uint64_t a1, uint64_t a2)
{
  return sub_1D596E930(a1, a2, &qword_1EA725240, sub_1D5A99E74);
}

uint64_t sub_1D596E6CC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1D596E734(void (*a1)(uint64_t *), uint64_t a2)
{
  sub_1D5A9D1B0(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1D596E768()
{
  return objectdestroy_4Tm(&qword_1EBDE4E10);
}

uint64_t sub_1D596E774@<X0>(uint64_t a1@<X8>)
{
  return sub_1D596E780(&qword_1EBDE4E10, a1);
}

uint64_t sub_1D596E780@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return v6(a2, v7, v4);
}

uint64_t sub_1D596E7F4()
{
  return objectdestroy_7Tm(&qword_1EBDE4E10);
}

uint64_t sub_1D596E800(uint64_t a1, uint64_t a2)
{
  return sub_1D596E930(a1, a2, &qword_1EBDE4E10, sub_1D5986CB0);
}

uint64_t sub_1D596E824(uint64_t a1)
{
  return sub_1D596E83C(a1, (uint64_t (*)(void, void, void, void, void, void, void, unint64_t, void, void))sub_1D5968880);
}

uint64_t sub_1D596E83C(uint64_t a1, uint64_t (*a2)(void, void, void, void, void, void, void, unint64_t, void, void))
{
  uint64_t v5 = *(void *)(sub_1D5AB1CE0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return a2(*(void *)a1, *(unsigned __int8 *)(a1 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(unsigned __int8 *)(v2 + 48), v2 + v6, *(void *)(v2 + v7), *(void *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1D596E904()
{
  return objectdestroy_7Tm(&qword_1EBDE4E10);
}

uint64_t sub_1D596E910(uint64_t a1, uint64_t a2)
{
  return sub_1D596E930(a1, a2, &qword_1EBDE4E10, sub_1D5A99E4C);
}

uint64_t sub_1D596E930(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v4 + v8;
  uint64_t v10 = (uint64_t *)(v4 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  return a4(a1, a2, v9, v11, v12);
}

id sub_1D596E9F4(id result, char a2)
{
  if (a2) {
    return result;
  }
  return result;
}

void sub_1D596EA00(id a1, char a2)
{
  if (a2) {
}
  }

uint64_t sub_1D596EA0C()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D596EA44(uint64_t a1)
{
  return sub_1D595A2D8(a1, v1, (uint64_t (*)(void))type metadata accessor for RemoteBrowsingGuestAuthenticationCompleted, MEMORY[0x1E4F9EAD0], (uint64_t)&protocol witness table for RemoteBrowsingGuestAuthenticationCompleted, (uint64_t (*)(void))type metadata accessor for RemoteBrowsingGuestAuthenticationCompleted);
}

uint64_t sub_1D596EAA4(uint64_t a1)
{
  return sub_1D595A2D8(a1, v1, (uint64_t (*)(void))type metadata accessor for RemoteBrowsingGuestEnvironmentReceived, MEMORY[0x1E4F9E8E0], (uint64_t)&protocol witness table for RemoteBrowsingGuestEnvironmentReceived, (uint64_t (*)(void))type metadata accessor for RemoteBrowsingGuestEnvironmentReceived);
}

uint64_t sub_1D596EB04(uint64_t a1)
{
  return sub_1D595A2D8(a1, v1, (uint64_t (*)(void))type metadata accessor for RemoteParticipantPasswordRequired, MEMORY[0x1E4F9EB38], (uint64_t)&protocol witness table for RemoteParticipantPasswordRequired, (uint64_t (*)(void))type metadata accessor for RemoteParticipantPasswordRequired);
}

uint64_t sub_1D596EB64()
{
  return sub_1D595A444();
}

uint64_t sub_1D596EB6C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void static ManagedProfileEffectiveSettingsChanged.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for ManagedProfileEffectiveSettingsChanged()
{
  return &type metadata for ManagedProfileEffectiveSettingsChanged;
}

ValueMetadata *type metadata accessor for NullAnalyticsReporter()
{
  return &type metadata for NullAnalyticsReporter;
}

uint64_t sub_1D596EC08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_1D596ECDC;
  return WorkoutPlanScheduleConflictQuerying.queryExistingModalityReferences(for:workout:on:)(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1D596ECDC(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t WorkoutPlanScheduleConflictQuerying.queryExistingModalityReferences(for:workout:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[30] = a6;
  v7[31] = v6;
  v7[28] = a4;
  v7[29] = a5;
  v7[26] = a2;
  v7[27] = a3;
  v7[25] = a1;
  v7[32] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725558);
  v7[33] = swift_task_alloc();
  v7[34] = swift_task_alloc();
  v7[35] = swift_task_alloc();
  v7[36] = swift_task_alloc();
  uint64_t v8 = sub_1D5AB3800();
  v7[37] = v8;
  v7[38] = *(void *)(v8 - 8);
  v7[39] = swift_task_alloc();
  v7[40] = swift_task_alloc();
  uint64_t v9 = sub_1D5AB3600();
  v7[41] = v9;
  v7[42] = *(void *)(v9 - 8);
  v7[43] = swift_task_alloc();
  uint64_t v10 = sub_1D5AB4050();
  v7[44] = v10;
  v7[45] = *(void *)(v10 - 8);
  v7[46] = swift_task_alloc();
  v7[47] = swift_task_alloc();
  uint64_t v11 = sub_1D5AB1D60();
  v7[48] = v11;
  v7[49] = *(void *)(v11 - 8);
  v7[50] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725560);
  v7[51] = swift_task_alloc();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3778);
  v7[52] = v12;
  v7[53] = *(void *)(v12 - 8);
  v7[54] = swift_task_alloc();
  v7[55] = swift_task_alloc();
  uint64_t v13 = sub_1D5AB3960();
  v7[56] = v13;
  v7[57] = *(void *)(v13 - 8);
  v7[58] = swift_task_alloc();
  v7[59] = swift_task_alloc();
  v7[60] = swift_task_alloc();
  v7[61] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D596F15C, 0, 0);
}

uint64_t sub_1D596F15C()
{
  uint64_t v1 = v0[55];
  uint64_t v2 = v0[29];
  uint64_t v4 = v0[26];
  uint64_t v3 = v0[27];
  uint64_t v5 = v0[30];
  uint64_t v6 = *(void (**)(uint64_t))(v5 + 16);
  v0[62] = v6;
  v0[63] = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0xAB2E000000000000;
  v6(v2);
  uint64_t v7 = v0[11];
  uint64_t v8 = v0[12];
  __swift_project_boxed_opaque_existential_1(v0 + 8, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE47C8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D5AB90F0;
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v3;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1D5977C44(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 216))(v10, v7, v8);
  swift_bridgeObjectRelease();
  uint64_t v11 = swift_task_alloc();
  v0[64] = v11;
  *(void *)(v11 + 16) = "/Library/Caches/com.apple.xbs/Sources/FitCore_clients/SeymourMedia/Workout Plans/Querying/Work"
                          "outPlanScheduleConflictQuerying.swift";
  *(void *)(v11 + 24) = 131;
  *(unsigned char *)(v11 + 32) = 2;
  *(void *)(v11 + 40) = 24;
  *(void *)(v11 + 48) = v1;
  uint64_t v12 = (void *)swift_task_alloc();
  v0[65] = v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3798);
  v0[66] = v13;
  *uint64_t v12 = v0;
  v12[1] = sub_1D596F374;
  return MEMORY[0x1F4188160](v0 + 23, 0, 0, 0xD000000000000013, 0x80000001D5AC6250, sub_1D5977DE8, v11, v13);
}

uint64_t sub_1D596F374()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 536) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1D596FA4C;
  }
  else
  {
    uint64_t v4 = v2[55];
    uint64_t v5 = v2[52];
    uint64_t v6 = v2[53];
    v2[68] = v2[23];
    swift_task_dealloc();
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v2[69] = v7;
    v2[70] = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v7(v4, v5);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v2 + 8));
    uint64_t v3 = sub_1D596F4E4;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1D596F4E4()
{
  uint64_t v1 = v0[56];
  uint64_t v2 = v0[57];
  uint64_t v3 = v0[51];
  sub_1D5971144(v0[68], sub_1D594F1A0, MEMORY[0x1E4F9DEA0], MEMORY[0x1E4F9DEA0], v3);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1D594F53C(v0[51], &qword_1EA725560);
    uint64_t v4 = sub_1D5AB2280();
    sub_1D597A270((unint64_t *)&qword_1EA725568, MEMORY[0x1E4F9C338]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v4 - 8) + 104))(v5, *MEMORY[0x1E4F9C318], v4);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  else
  {
    uint64_t v8 = v0[61];
    uint64_t v9 = v0[56];
    uint64_t v10 = v0[57];
    uint64_t v12 = v0[50];
    uint64_t v11 = v0[51];
    uint64_t v13 = v0[48];
    uint64_t v14 = v0[49];
    uint64_t v15 = v0[27];
    uint64_t v16 = v0[26];
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
    v0[71] = v17;
    v0[72] = (v10 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v17(v8, v11, v9);
    (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v12, *MEMORY[0x1E4F27BF0], v13);
    uint64_t v18 = sub_1D5AB21B0();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1D5978384(v18, v16, v15);
    v0[73] = v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v19 + 16))
    {
      (*(void (**)(void))(v0[30] + 8))(v0[29]);
      uint64_t v20 = v0[16];
      uint64_t v21 = v0[17];
      __swift_project_boxed_opaque_existential_1(v0 + 13, v20);
      uint64_t v25 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v21 + 256) + **(int **)(v21 + 256));
      uint64_t v22 = (void *)swift_task_alloc();
      v0[74] = v22;
      *uint64_t v22 = v0;
      v22[1] = sub_1D596FBC8;
      return v25(v20, v21);
    }
    else
    {
      swift_release();
      (*(void (**)(void, void))(v0[57] + 8))(v0[61], v0[56]);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v23 = (uint64_t (*)(uint64_t))v0[1];
      uint64_t v24 = MEMORY[0x1E4FBC870];
      return v23(v24);
    }
  }
}

uint64_t sub_1D596FA4C()
{
  uint64_t v1 = v0[55];
  uint64_t v2 = v0[52];
  uint64_t v3 = v0[53];
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 8));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1D596FBC8(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 600) = a1;
  *(void *)(v3 + 608) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_release();
    uint64_t v4 = sub_1D5970F98;
  }
  else
  {
    uint64_t v4 = sub_1D596FCE8;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1D596FCE8()
{
  uint64_t v1 = v0[75];
  uint64_t v2 = v0[45];
  uint64_t v3 = v0[42];
  uint64_t v4 = v0[38];
  uint64_t v5 = (void *)sub_1D59712C8(MEMORY[0x1E4FBC860]);
  uint64_t v93 = v1 + 56;
  uint64_t v6 = -1;
  uint64_t v7 = -1 << *(unsigned char *)(v1 + 32);
  if (-v7 < 64) {
    uint64_t v6 = ~(-1 << -(char)v7);
  }
  unint64_t v8 = v6 & *(void *)(v1 + 56);
  int64_t v95 = (unint64_t)(63 - v7) >> 6;
  uint64_t v109 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  uint64_t v107 = v3;
  uint64_t v108 = (void (**)(uint64_t, uint64_t))(v3 + 8);
  uint64_t v103 = v2;
  uint64_t v105 = v1;
  uint64_t v98 = (uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
  uint64_t v100 = v4;
  uint64_t isUniquelyReferenced_nonNull_native = swift_bridgeObjectRetain();
  for (int64_t i = 0; ; int64_t i = v113)
  {
    if (v8)
    {
      uint64_t v111 = (v8 - 1) & v8;
      int64_t v113 = i;
      unint64_t v22 = __clz(__rbit64(v8)) | (i << 6);
      goto LABEL_26;
    }
    int64_t v23 = i + 1;
    if (__OFADD__(i, 1)) {
      goto LABEL_71;
    }
    if (v23 >= v95)
    {
LABEL_37:
      uint64_t v50 = v0[73];
      swift_release();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 13));
      swift_bridgeObjectRetain();
      uint64_t v51 = sub_1D5978C88(v50, (uint64_t)v5);
      v0[77] = v51;
      swift_bridgeObjectRelease_n();
      swift_release();
      int64_t v52 = *(void *)(v51 + 16);
      uint64_t v53 = MEMORY[0x1E4FBC860];
      if (!v52)
      {
LABEL_63:
        uint64_t v83 = v0[54];
        ((void (*)(void, void))v0[62])(v0[29], v0[30]);
        uint64_t v84 = v0[21];
        uint64_t v85 = v0[22];
        __swift_project_boxed_opaque_existential_1(v0 + 18, v84);
        uint64_t v86 = sub_1D594F598(v53);
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v85 + 216))(v86, v84, v85);
        swift_bridgeObjectRelease();
        uint64_t v87 = swift_task_alloc();
        v0[78] = v87;
        *(void *)(v87 + 16) = "/Library/Caches/com.apple.xbs/Sources/FitCore_clients/SeymourMedia/Workout Plans/Queryin"
                                "g/WorkoutPlanScheduleConflictQuerying.swift";
        *(void *)(v87 + 24) = 131;
        *(unsigned char *)(v87 + 32) = 2;
        *(void *)(v87 + 40) = 46;
        *(void *)(v87 + 48) = v83;
        uint64_t v88 = (void *)swift_task_alloc();
        v0[79] = v88;
        *uint64_t v88 = v0;
        v88[1] = sub_1D59706C8;
        uint64_t v16 = v0[66];
        unint64_t v13 = 0x80000001D5AC6250;
        uint64_t v14 = sub_1D5977DE8;
        uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)(v0 + 24);
        uint64_t v10 = 0;
        uint64_t v11 = 0;
        unint64_t v12 = 0xD000000000000013;
        uint64_t v15 = v87;
        return MEMORY[0x1F4188160](isUniquelyReferenced_nonNull_native, v10, v11, v12, v13, v14, v15, v16);
      }
      uint64_t v112 = v0[32];
      uint64_t v115 = MEMORY[0x1E4FBC860];
      sub_1D594E784(0, v52, 0);
      uint64_t isUniquelyReferenced_nonNull_native = sub_1D59779A4(v51);
      if (isUniquelyReferenced_nonNull_native < 0
        || (unint64_t v54 = isUniquelyReferenced_nonNull_native, isUniquelyReferenced_nonNull_native >= 1 << *(unsigned char *)(v51 + 32)))
      {
LABEL_77:
        __break(1u);
        goto LABEL_78;
      }
      uint64_t v55 = 0;
      uint64_t v56 = v51 + 64;
      uint64_t v94 = v51;
      uint64_t v96 = v51 + 80;
      int64_t v90 = v52;
      uint64_t v91 = v10;
      uint64_t v92 = v51 + 64;
      uint64_t v97 = v0;
      while (1)
      {
        unint64_t v57 = v54 >> 6;
        if ((*(void *)(v56 + 8 * (v54 >> 6)) & (1 << v54)) == 0) {
          goto LABEL_72;
        }
        if (*(_DWORD *)(v51 + 36) != v10) {
          goto LABEL_73;
        }
        uint64_t v99 = v55;
        uint64_t v101 = 1 << v54;
        uint64_t v58 = v97[35];
        uint64_t v59 = v97[36];
        uint64_t v60 = v59 + *(int *)(v112 + 48);
        uint64_t v104 = v97[41];
        uint64_t v106 = v97[34];
        uint64_t v114 = v97[33];
        id v61 = *(void (**)(void))(v107 + 16);
        ((void (*)(uint64_t, unint64_t))v61)(v59, *(void *)(v51 + 48) + *(void *)(v107 + 72) * v54);
        uint64_t v102 = v61;
        uint64_t v62 = *(void *)(v51 + 56);
        uint64_t v63 = sub_1D5AB3B70();
        uint64_t v64 = *(void *)(v63 - 8);
        int64_t v110 = v54;
        uint64_t v65 = v62 + *(void *)(v64 + 72) * v54;
        uint64_t v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 16);
        v66(v60, v65, v63);
        ((void (*)(uint64_t, uint64_t, uint64_t))v61)(v58, v59, v104);
        v66(v58 + *(int *)(v112 + 48), v60, v63);
        sub_1D59799AC(v58, v106, &qword_1EA725558);
        sub_1D594F53C(v59, &qword_1EA725558);
        uint64_t v67 = *(int *)(v112 + 48);
        uint64_t v68 = v114 + v67;
        uint64_t v69 = v106 + v67;
        v102();
        v66(v68, v69, v63);
        uint64_t v70 = sub_1D5AB3B60();
        uint64_t v72 = v71;
        (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v68, v63);
        (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v114, v104);
        sub_1D594F53C(v106, &qword_1EA725558);
        uint64_t v53 = v115;
        uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t isUniquelyReferenced_nonNull_native = sub_1D594E784(0, *(void *)(v115 + 16) + 1, 1);
          uint64_t v53 = v115;
        }
        unint64_t v74 = *(void *)(v53 + 16);
        unint64_t v73 = *(void *)(v53 + 24);
        if (v74 >= v73 >> 1)
        {
          uint64_t isUniquelyReferenced_nonNull_native = sub_1D594E784(v73 > 1, v74 + 1, 1);
          uint64_t v53 = v115;
        }
        *(void *)(v53 + 16) = v74 + 1;
        uint64_t v75 = v53 + 16 * v74;
        *(void *)(v75 + 32) = v70;
        *(void *)(v75 + 40) = v72;
        uint64_t v51 = v94;
        uint64_t v76 = 1 << *(unsigned char *)(v94 + 32);
        if (v110 >= v76) {
          goto LABEL_74;
        }
        uint64_t v56 = v92;
        uint64_t v77 = *(void *)(v92 + 8 * v57);
        if ((v77 & v101) == 0) {
          goto LABEL_75;
        }
        uint64_t v10 = v91;
        if (*(_DWORD *)(v94 + 36) != v91) {
          goto LABEL_76;
        }
        unint64_t v78 = v77 & (-2 << (v110 & 0x3F));
        if (v78)
        {
          unint64_t v54 = __clz(__rbit64(v78)) | v110 & 0xFFFFFFFFFFFFFFC0;
          int64_t v79 = v90;
        }
        else
        {
          unint64_t v80 = v57 + 1;
          unint64_t v81 = (unint64_t)(v76 + 63) >> 6;
          int64_t v79 = v90;
          if (v57 + 1 >= v81) {
            goto LABEL_58;
          }
          unint64_t v82 = *(void *)(v92 + 8 * v80);
          if (!v82)
          {
            while (v81 - 2 != v57)
            {
              unint64_t v82 = *(void *)(v96 + 8 * v57++);
              if (v82)
              {
                unint64_t v80 = v57 + 1;
                goto LABEL_57;
              }
            }
LABEL_58:
            unint64_t v54 = 1 << *(unsigned char *)(v94 + 32);
            goto LABEL_59;
          }
LABEL_57:
          unint64_t v54 = __clz(__rbit64(v82)) + (v80 << 6);
        }
LABEL_59:
        uint64_t v0 = v97;
        uint64_t v55 = v99 + 1;
        if (v99 + 1 == v79) {
          goto LABEL_63;
        }
        if ((v54 & 0x8000000000000000) != 0 || (uint64_t)v54 >= v76) {
          goto LABEL_77;
        }
      }
    }
    unint64_t v24 = *(void *)(v93 + 8 * v23);
    int64_t v25 = i + 1;
    if (v24) {
      goto LABEL_25;
    }
    int64_t v25 = i + 2;
    if (i + 2 >= v95) {
      goto LABEL_37;
    }
    unint64_t v24 = *(void *)(v93 + 8 * v25);
    if (v24) {
      goto LABEL_25;
    }
    int64_t v25 = i + 3;
    if (i + 3 >= v95) {
      goto LABEL_37;
    }
    unint64_t v24 = *(void *)(v93 + 8 * v25);
    if (v24) {
      goto LABEL_25;
    }
    int64_t v25 = i + 4;
    if (i + 4 >= v95) {
      goto LABEL_37;
    }
    unint64_t v24 = *(void *)(v93 + 8 * v25);
    if (v24) {
      goto LABEL_25;
    }
    int64_t v25 = i + 5;
    if (i + 5 >= v95) {
      goto LABEL_37;
    }
    unint64_t v24 = *(void *)(v93 + 8 * v25);
    if (v24) {
      goto LABEL_25;
    }
    uint64_t v26 = i + 6;
    if (i + 6 >= v95) {
      goto LABEL_37;
    }
    unint64_t v24 = *(void *)(v93 + 8 * v26);
    if (!v24) {
      break;
    }
    int64_t v25 = i + 6;
LABEL_25:
    uint64_t v111 = (v24 - 1) & v24;
    int64_t v113 = v25;
    unint64_t v22 = __clz(__rbit64(v24)) + (v25 << 6);
LABEL_26:
    uint64_t v27 = v0[46];
    uint64_t v28 = v0[47];
    uint64_t v30 = v0[43];
    uint64_t v29 = v0[44];
    uint64_t v32 = v0[39];
    uint64_t v31 = v0[40];
    uint64_t v33 = v0[37];
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v103 + 16))(v28, *(void *)(v105 + 48) + *(void *)(v103 + 72) * v22, v29);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v103 + 32))(v27, v28, v29);
    sub_1D5AB4030();
    sub_1D5AB4020();
    uint64_t v34 = *v109;
    (*v109)(v32, v31, v33);
    int v35 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v36 = sub_1D59525FC(v30);
    uint64_t v37 = v5[2];
    BOOL v38 = (v10 & 1) == 0;
    uint64_t isUniquelyReferenced_nonNull_native = v37 + v38;
    if (__OFADD__(v37, v38))
    {
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
      goto LABEL_77;
    }
    char v39 = v10;
    if (v5[3] >= isUniquelyReferenced_nonNull_native)
    {
      if (v35)
      {
        if (v10) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_1D59767B4();
        if (v39) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      uint64_t v40 = v0[43];
      sub_1D59730A4(isUniquelyReferenced_nonNull_native, v35);
      unint64_t v41 = sub_1D59525FC(v40);
      if ((v39 & 1) != (v42 & 1))
      {
        return sub_1D5AB5B50();
      }
      unint64_t v36 = v41;
      if (v39)
      {
LABEL_4:
        (*(void (**)(unint64_t, void, void))(v100 + 40))(v5[7] + *(void *)(v100 + 72) * v36, v0[39], v0[37]);
        goto LABEL_5;
      }
    }
    uint64_t v43 = v0[43];
    uint64_t v44 = v0[41];
    uint64_t v45 = v0[39];
    uint64_t v46 = v0[37];
    v5[(v36 >> 6) + 8] |= 1 << v36;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v107 + 16))(v5[6] + *(void *)(v107 + 72) * v36, v43, v44);
    uint64_t isUniquelyReferenced_nonNull_native = v34(v5[7] + *(void *)(v100 + 72) * v36, v45, v46);
    uint64_t v47 = v5[2];
    BOOL v48 = __OFADD__(v47, 1);
    uint64_t v49 = v47 + 1;
    if (v48) {
      goto LABEL_70;
    }
    v5[2] = v49;
LABEL_5:
    uint64_t v18 = v0[46];
    uint64_t v20 = v0[43];
    uint64_t v19 = v0[44];
    uint64_t v21 = v0[41];
    swift_bridgeObjectRelease();
    (*v108)(v20, v21);
    uint64_t isUniquelyReferenced_nonNull_native = (*v98)(v18, v19);
    unint64_t v8 = v111;
  }
  while (1)
  {
    int64_t v25 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v25 >= v95) {
      goto LABEL_37;
    }
    unint64_t v24 = *(void *)(v93 + 8 * v25);
    ++v26;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_78:
  __break(1u);
  return MEMORY[0x1F4188160](isUniquelyReferenced_nonNull_native, v10, v11, v12, v13, v14, v15, v16);
}

uint64_t sub_1D59706C8()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 640) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1D5970824;
  }
  else
  {
    uint64_t v4 = (void (*)(uint64_t, uint64_t))v2[69];
    uint64_t v5 = v2[54];
    uint64_t v6 = v2[52];
    v2[81] = v2[24];
    swift_task_dealloc();
    v4(v5, v6);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v2 + 18));
    uint64_t v3 = sub_1D59709C8;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1D5970824()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[69];
  uint64_t v2 = v0[61];
  uint64_t v3 = v0[56];
  uint64_t v4 = v0[57];
  uint64_t v5 = v0[54];
  uint64_t v6 = v0[52];
  swift_task_dealloc();
  v1(v5, v6);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 18));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1D59709C8()
{
  uint64_t v1 = v0[81];
  uint64_t v2 = v0[57];
  uint64_t v3 = (void *)sub_1D59714FC(MEMORY[0x1E4FBC860]);
  uint64_t v49 = v1 + 56;
  uint64_t v4 = -1;
  uint64_t v5 = -1 << *(unsigned char *)(v1 + 32);
  if (-v5 < 64) {
    uint64_t v4 = ~(-1 << -(char)v5);
  }
  unint64_t v6 = v4 & *(void *)(v1 + 56);
  uint64_t v53 = v2;
  BOOL v48 = (void (**)(unint64_t, void, void))(v2 + 40);
  int64_t v50 = (unint64_t)(63 - v5) >> 6;
  uint64_t v51 = (uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
  uint64_t v54 = v1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  int64_t v52 = v0;
  while (1)
  {
    unint64_t v57 = v3;
    if (v6)
    {
      uint64_t v55 = (v6 - 1) & v6;
      int64_t v56 = v8;
      unint64_t v11 = __clz(__rbit64(v6)) | (v8 << 6);
      goto LABEL_26;
    }
    int64_t v12 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_45;
    }
    if (v12 >= v50) {
      break;
    }
    unint64_t v13 = *(void *)(v49 + 8 * v12);
    int64_t v14 = v8 + 1;
    if (!v13)
    {
      int64_t v14 = v8 + 2;
      if (v8 + 2 >= v50) {
        break;
      }
      unint64_t v13 = *(void *)(v49 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = v8 + 3;
        if (v8 + 3 >= v50) {
          break;
        }
        unint64_t v13 = *(void *)(v49 + 8 * v14);
        if (!v13)
        {
          int64_t v14 = v8 + 4;
          if (v8 + 4 >= v50) {
            break;
          }
          unint64_t v13 = *(void *)(v49 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v8 + 5;
            if (v8 + 5 >= v50) {
              break;
            }
            unint64_t v13 = *(void *)(v49 + 8 * v14);
            if (!v13)
            {
              uint64_t v15 = v8 + 6;
              if (v8 + 6 >= v50) {
                break;
              }
              unint64_t v13 = *(void *)(v49 + 8 * v15);
              if (!v13)
              {
                while (1)
                {
                  int64_t v14 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    goto LABEL_46;
                  }
                  if (v14 >= v50) {
                    goto LABEL_37;
                  }
                  unint64_t v13 = *(void *)(v49 + 8 * v14);
                  ++v15;
                  if (v13) {
                    goto LABEL_25;
                  }
                }
              }
              int64_t v14 = v8 + 6;
            }
          }
        }
      }
    }
LABEL_25:
    uint64_t v55 = (v13 - 1) & v13;
    int64_t v56 = v14;
    unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
LABEL_26:
    uint64_t v16 = (void (*)(uint64_t, uint64_t, uint64_t))v0[71];
    unint64_t v18 = v0[59];
    uint64_t v17 = v0[60];
    uint64_t v19 = v0[58];
    uint64_t v20 = v0[56];
    uint64_t v21 = *(void *)(v53 + 72);
    unint64_t v22 = *(void (**)(uint64_t, unint64_t, uint64_t))(v53 + 16);
    v22(v17, *(void *)(v54 + 48) + v21 * v11, v20);
    v16(v18, v17, v20);
    uint64_t v23 = sub_1D5AB3870();
    uint64_t v25 = v24;
    v22(v19, v18, v20);
    uint64_t v3 = v57;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v28 = sub_1D5952584(v23, v25);
    uint64_t v29 = v57[2];
    BOOL v30 = (v27 & 1) == 0;
    uint64_t result = v29 + v30;
    if (__OFADD__(v29, v30))
    {
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return result;
    }
    char v31 = v27;
    if (v57[3] >= result)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v0 = v52;
        if (v27) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_1D59764F8();
        uint64_t v3 = v57;
        uint64_t v0 = v52;
        if (v31) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_1D5972CBC(result, isUniquelyReferenced_nonNull_native);
      uint64_t v3 = v57;
      unint64_t v32 = sub_1D5952584(v23, v25);
      if ((v31 & 1) != (v33 & 1))
      {
        return sub_1D5AB5B50();
      }
      unint64_t v28 = v32;
      uint64_t v0 = v52;
      if (v31)
      {
LABEL_4:
        (*v48)(v3[7] + v28 * v21, v0[58], v0[56]);
        goto LABEL_5;
      }
    }
    uint64_t v34 = (uint64_t (*)(unint64_t, uint64_t, uint64_t))v0[71];
    uint64_t v35 = v0[58];
    uint64_t v36 = v0[56];
    v3[(v28 >> 6) + 8] |= 1 << v28;
    uint64_t v37 = (uint64_t *)(v3[6] + 16 * v28);
    *uint64_t v37 = v23;
    v37[1] = v25;
    uint64_t result = v34(v3[7] + v28 * v21, v35, v36);
    uint64_t v38 = v3[2];
    BOOL v39 = __OFADD__(v38, 1);
    uint64_t v40 = v38 + 1;
    if (v39) {
      goto LABEL_44;
    }
    v3[2] = v40;
    swift_bridgeObjectRetain();
LABEL_5:
    uint64_t v9 = v0[59];
    uint64_t v10 = v0[56];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = (*v51)(v9, v10);
    unint64_t v6 = v55;
    int64_t v8 = v56;
  }
LABEL_37:
  uint64_t v41 = v0[77];
  uint64_t v42 = v0[61];
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v43 = sub_1D59716FC(MEMORY[0x1E4FBC860]);
  swift_bridgeObjectRetain();
  uint64_t v44 = sub_1D5978E54(v43, v41, (uint64_t)v3);
  swift_bridgeObjectRelease_n();
  swift_release();
  uint64_t v45 = swift_task_alloc();
  *(void *)(v45 + 16) = v42;
  uint64_t v46 = sub_1D5974BA0((uint64_t)sub_1D59796E0, v45, v44);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v58 = sub_1D594B79C(v46);
  (*(void (**)(void, void))(v0[57] + 8))(v0[61], v0[56]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v47 = (uint64_t (*)(uint64_t))v0[1];
  return v47(v58);
}

uint64_t sub_1D5970F98()
{
  (*(void (**)(void, void))(v0[57] + 8))(v0[61], v0[56]);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 13));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1D5971104@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D5971144(a1, sub_1D594F1A0, MEMORY[0x1E4F9DC50], MEMORY[0x1E4F9DC50], a2);
}

uint64_t sub_1D5971144@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t result = a2();
  if (v11) {
    goto LABEL_10;
  }
  if (*(_DWORD *)(a1 + 36) != v10)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32))
  {
    uint64_t v12 = a3(0);
    unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a5;
    uint64_t v16 = 1;
  }
  else
  {
    sub_1D59778E0(result, v10, a1, a4, a5);
    uint64_t v17 = a3(0);
    unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
    uint64_t v14 = v17;
    uint64_t v15 = a5;
    uint64_t v16 = 0;
  }
  return v13(v15, v16, 1, v14);
}

uint64_t sub_1D5971248@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D5971144(a1, (uint64_t (*)(void))sub_1D594F1A0, MEMORY[0x1E4F9D5D0], MEMORY[0x1E4F9D5D0], a2);
}

uint64_t sub_1D5971288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D5971144(a1, (uint64_t (*)(void))sub_1D594F1A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4F276F0], a2);
}

unint64_t sub_1D59712C8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725608);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725600);
  uint64_t v6 = sub_1D5AB59B0();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1D596E6CC(v12, (uint64_t)v5, &qword_1EA725608);
    unint64_t result = sub_1D59525FC((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_1D5AB3600();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    uint64_t v19 = v7[7];
    uint64_t v20 = sub_1D5AB3800();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v19 + *(void *)(*(void *)(v20 - 8) + 72) * v16, v9, v20);
    uint64_t v21 = v7[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D59714FC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7255F0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7255E8);
  uint64_t v6 = sub_1D5AB59B0();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (char *)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1D596E6CC(v12, (uint64_t)v5, &qword_1EA7255F0);
    uint64_t v14 = *v5;
    uint64_t v15 = v5[1];
    unint64_t result = sub_1D5952584(*v5, v15);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v19 = (uint64_t *)(v7[6] + 16 * result);
    uint64_t *v19 = v14;
    v19[1] = v15;
    uint64_t v20 = v7[7];
    uint64_t v21 = sub_1D5AB3960();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, v9, v21);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D59716FC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7255E0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7255D0);
  uint64_t v6 = sub_1D5AB59B0();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1D596E6CC(v12, (uint64_t)v5, &qword_1EA7255E0);
    unint64_t result = sub_1D59525FC((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_1D5AB3600();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    uint64_t v19 = (void *)(v7[7] + 16 * v16);
    uint64_t v20 = *((void *)v9 + 1);
    void *v19 = *(void *)v9;
    v19[1] = v20;
    uint64_t v21 = v7[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D59718F8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE43A8);
  uint64_t v2 = sub_1D5AB59B0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1D596E6CC(v6, (uint64_t)v15, &qword_1EA7255C8);
    unint64_t result = sub_1D5952770((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_1D5979A10(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D5971A3C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725590);
  uint64_t v2 = sub_1D5AB59B0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1D596E6CC(v6, (uint64_t)&v15, &qword_1EA725598);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1D5952584(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    long long v11 = (uint64_t *)(v3[6] + 16 * result);
    *long long v11 = v7;
    v11[1] = v8;
    unint64_t result = sub_1D59799AC((uint64_t)&v17, v3[7] + 32 * result, &qword_1EBDE4E20);
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1D5971B88(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725610);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D5AB3800();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_1D594F53C(a1, &qword_1EA725610);
    sub_1D5AAF7C8(a2, v8);
    uint64_t v13 = sub_1D5AB3600();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a2, v13);
    return sub_1D594F53C((uint64_t)v8, &qword_1EA725610);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1D59758F4((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v18;
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_1D5AB3600();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_1D5971DB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_1D5950B78((long long *)a1, (uint64_t)v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1D5975AF8(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D594F53C(a1, &qword_1EA725580);
    sub_1D5AAF9EC(a2, a3, (uint64_t)v9);
    swift_bridgeObjectRelease();
    return sub_1D594F53C((uint64_t)v9, &qword_1EA725580);
  }
}

uint64_t sub_1D5971E8C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7255D8);
  uint64_t v5 = v4 - 8;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v10 = sub_1D5AB3600();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v7, a1, v10);
  uint64_t v11 = &v7[*(int *)(v5 + 56)];
  *(void *)uint64_t v11 = v9;
  *((void *)v11 + 1) = v8;
  swift_bridgeObjectRetain();
  if (v9 == sub_1D5AB38B0() && v8 == v12) {
    char v13 = 1;
  }
  else {
    char v13 = sub_1D5AB5AF0();
  }
  swift_bridgeObjectRelease();
  sub_1D594F53C((uint64_t)v7, &qword_1EA7255D8);
  return v13 & 1;
}

uint64_t sub_1D5971FD4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v38 = a1;
  uint64_t v39 = a3;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE3730);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v37 = v12;
  char v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1D5A3D25C(101);
  if (qword_1EBDE4BB8 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1D5AB4B50();
  __swift_project_value_buffer(v15, (uint64_t)qword_1EBDE49B8);
  uint64_t v16 = sub_1D5AB4B30();
  os_log_type_t v17 = sub_1D5AB5430();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v36 = a2;
    uint64_t v19 = v18;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v35 = a6;
    uint64_t v33 = v20;
    uint64_t v40 = v14;
    uint64_t v41 = v20;
    *(_DWORD *)uint64_t v19 = 134218498;
    uint64_t v34 = v10;
    sub_1D5AB5680();
    *(_WORD *)(v19 + 12) = 2080;
    uint64_t v21 = sub_1D5AB5810();
    HIDWORD(v32) = a4;
    uint64_t v40 = sub_1D5951500(v21, v22, &v41);
    sub_1D5AB5680();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 22) = 2048;
    uint64_t v40 = a5;
    uint64_t v10 = v34;
    sub_1D5AB5680();
    os_log_type_t v23 = v17;
    char v24 = BYTE4(v32);
    _os_log_impl(&dword_1D5947000, v16, v23, "Converting from Promise to Async-Await. Created at: %ld:%s:%lu", (uint8_t *)v19, 0x20u);
    uint64_t v25 = v33;
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v25, -1, -1);
    uint64_t v26 = v19;
    a2 = v36;
    MEMORY[0x1D945AAC0](v26, -1, -1);
  }
  else
  {

    char v24 = a4;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v38, v10);
  unint64_t v27 = (*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v14;
  *(void *)(v28 + 24) = a2;
  *(void *)(v28 + 32) = v39;
  *(unsigned char *)(v28 + 40) = v24;
  *(void *)(v28 + 48) = a5;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v28 + v27, v13, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3778);
  uint64_t v29 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_1D5AB45B0();
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = sub_1D597A2C4;
  *(void *)(v30 + 24) = v28;
  swift_retain();
  v29(sub_1D597A350, v30);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1D5972374(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v38 = a1;
  uint64_t v39 = a3;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7255A8);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v37 = v12;
  char v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1D5A3D25C(101);
  if (qword_1EBDE4BB8 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1D5AB4B50();
  __swift_project_value_buffer(v15, (uint64_t)qword_1EBDE49B8);
  uint64_t v16 = sub_1D5AB4B30();
  os_log_type_t v17 = sub_1D5AB5430();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v36 = a2;
    uint64_t v19 = v18;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v35 = a6;
    uint64_t v33 = v20;
    uint64_t v40 = v14;
    uint64_t v41 = v20;
    *(_DWORD *)uint64_t v19 = 134218498;
    uint64_t v34 = v10;
    sub_1D5AB5680();
    *(_WORD *)(v19 + 12) = 2080;
    uint64_t v21 = sub_1D5AB5810();
    HIDWORD(v32) = a4;
    uint64_t v40 = sub_1D5951500(v21, v22, &v41);
    sub_1D5AB5680();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 22) = 2048;
    uint64_t v40 = a5;
    uint64_t v10 = v34;
    sub_1D5AB5680();
    os_log_type_t v23 = v17;
    char v24 = BYTE4(v32);
    _os_log_impl(&dword_1D5947000, v16, v23, "Converting from Promise to Async-Await. Created at: %ld:%s:%lu", (uint8_t *)v19, 0x20u);
    uint64_t v25 = v33;
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v25, -1, -1);
    uint64_t v26 = v19;
    a2 = v36;
    MEMORY[0x1D945AAC0](v26, -1, -1);
  }
  else
  {

    char v24 = a4;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v38, v10);
  unint64_t v27 = (*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v14;
  *(void *)(v28 + 24) = a2;
  *(void *)(v28 + 32) = v39;
  *(unsigned char *)(v28 + 40) = v24;
  *(void *)(v28 + 48) = a5;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v28 + v27, v13, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7253B8);
  uint64_t v29 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_1D5AB45B0();
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = sub_1D5979A2C;
  *(void *)(v30 + 24) = v28;
  swift_retain();
  v29(sub_1D5979AB4, v30);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1D5972714(void *a1, char a2)
{
  if (qword_1EBDE4BB8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1D5AB4B50();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EBDE49B8);
  uint64_t v5 = sub_1D5AB4B30();
  os_log_type_t v6 = sub_1D5AB5430();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v13 = v8;
    *(_DWORD *)uint64_t v7 = 134218498;
    sub_1D5AB5680();
    *(_WORD *)(v7 + 12) = 2080;
    uint64_t v9 = sub_1D5AB5810();
    sub_1D5951500(v9, v10, &v13);
    sub_1D5AB5680();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 22) = 2048;
    sub_1D5AB5680();
    _os_log_impl(&dword_1D5947000, v5, v6, "Finished P->A conversion: %ld:%s:%lu", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v8, -1, -1);
    MEMORY[0x1D945AAC0](v7, -1, -1);
  }

  uint64_t v13 = (uint64_t)a1;
  if (a2)
  {
    id v12 = a1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE3730);
    return sub_1D5AB5140();
  }
  else
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE3730);
    return sub_1D5AB5150();
  }
}

uint64_t sub_1D5972964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v34 = a7;
  LODWORD(v33) = a5;
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  uint64_t v10 = sub_1D5AB2210();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725530);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (uint64_t *)((char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1EBDE4BB8 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1D5AB4B50();
  __swift_project_value_buffer(v17, (uint64_t)qword_1EBDE49B8);
  uint64_t v18 = sub_1D5AB4B30();
  os_log_type_t v19 = sub_1D5AB5430();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v30 = v13;
    uint64_t v21 = v20;
    uint64_t v28 = swift_slowAlloc();
    uint64_t v35 = a2;
    uint64_t v36 = v28;
    *(_DWORD *)uint64_t v21 = 134218498;
    sub_1D5AB5680();
    *(_WORD *)(v21 + 12) = 2080;
    uint64_t v29 = v11;
    uint64_t v22 = sub_1D5AB5810();
    uint64_t v33 = a6;
    uint64_t v35 = sub_1D5951500(v22, v23, &v36);
    uint64_t v11 = v29;
    sub_1D5AB5680();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 22) = 2048;
    uint64_t v35 = v33;
    sub_1D5AB5680();
    _os_log_impl(&dword_1D5947000, v18, v19, "Finished P->A conversion: %ld:%s:%lu", (uint8_t *)v21, 0x20u);
    uint64_t v24 = v28;
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v24, -1, -1);
    uint64_t v25 = v21;
    uint64_t v13 = v30;
    MEMORY[0x1D945AAC0](v25, -1, -1);
  }

  sub_1D596E6CC(a1, (uint64_t)v16, &qword_1EA725530);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v36 = *v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7255A8);
    return sub_1D5AB5140();
  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v11 + 32))(v13, v16, v10);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7255A8);
    return sub_1D5AB5150();
  }
}

uint64_t sub_1D5972CBC(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v49 = sub_1D5AB3960();
  uint64_t v5 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  BOOL v48 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7255E8);
  int v47 = a2;
  uint64_t v8 = sub_1D5AB59A0();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_41;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 64);
  uint64_t v44 = (void *)(v7 + 64);
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  uint64_t v42 = v2;
  int64_t v43 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v45 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v46 = v5;
  uint64_t v14 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v15 = v8 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v43) {
      break;
    }
    unint64_t v23 = v44;
    unint64_t v24 = v44[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v24 = v44[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v42;
          if ((v47 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v44[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v43) {
              goto LABEL_34;
            }
            unint64_t v24 = v44[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    uint64_t v26 = *(void *)(v7 + 56);
    uint64_t v27 = v7;
    uint64_t v28 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v21);
    uint64_t v29 = *v28;
    uint64_t v30 = v28[1];
    uint64_t v31 = *(void *)(v46 + 72);
    uint64_t v32 = v26 + v31 * v21;
    if (v47)
    {
      (*v14)(v48, v32, v49);
    }
    else
    {
      (*v45)(v48, v32, v49);
      swift_bridgeObjectRetain();
    }
    sub_1D5AB5C20();
    sub_1D5AB4E60();
    uint64_t result = sub_1D5AB5C60();
    uint64_t v33 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v15 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v18 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    os_log_type_t v19 = (void *)(*(void *)(v9 + 48) + 16 * v18);
    void *v19 = v29;
    v19[1] = v30;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v14)(*(void *)(v9 + 56) + v31 * v18, v48, v49);
    ++*(void *)(v9 + 16);
    uint64_t v7 = v27;
  }
  swift_release();
  uint64_t v3 = v42;
  unint64_t v23 = v44;
  if ((v47 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v7 + 32);
  if (v40 >= 64) {
    bzero(v23, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v40;
  }
  *(void *)(v7 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v9;
  return result;
}

uint64_t sub_1D59730A4(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v53 = sub_1D5AB3800();
  uint64_t v5 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  int64_t v52 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D5AB3600();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725600);
  int v50 = a2;
  uint64_t v12 = sub_1D5AB59A0();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  uint64_t v44 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  uint64_t v42 = v2;
  int64_t v43 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v45 = v5 + 16;
  uint64_t v46 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v48 = v5;
  uint64_t v49 = v8;
  unint64_t v18 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  uint64_t v51 = (uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32);
  uint64_t v19 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v21 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v21 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v43) {
      break;
    }
    uint64_t v26 = v44;
    unint64_t v27 = v44[v25];
    ++v21;
    if (!v27)
    {
      int64_t v21 = v25 + 1;
      if (v25 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v27 = v44[v21];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v42;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v44[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v21 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v21 >= v43) {
              goto LABEL_34;
            }
            unint64_t v27 = v44[v21];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v21 = v28;
      }
    }
LABEL_21:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v21 << 6);
LABEL_22:
    uint64_t v29 = *(void *)(v49 + 72);
    unint64_t v30 = *(void *)(v11 + 48) + v29 * v24;
    if (v50)
    {
      (*v18)(v10, v30, v7);
      uint64_t v31 = *(void *)(v11 + 56);
      uint64_t v32 = *(void *)(v48 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v48 + 32))(v52, v31 + v32 * v24, v53);
    }
    else
    {
      (*v46)(v10, v30, v7);
      uint64_t v33 = *(void *)(v11 + 56);
      uint64_t v32 = *(void *)(v48 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v48 + 16))(v52, v33 + v32 * v24, v53);
    }
    sub_1D597A270((unint64_t *)&unk_1EA728450, MEMORY[0x1E4F9D800]);
    uint64_t result = sub_1D5AB4D90();
    uint64_t v34 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v35 = result & ~v34;
    unint64_t v36 = v35 >> 6;
    if (((-1 << v35) & ~*(void *)(v19 + 8 * (v35 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v35) & ~*(void *)(v19 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v37 = 0;
      unint64_t v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v39 = v36 == v38;
        if (v36 == v38) {
          unint64_t v36 = 0;
        }
        v37 |= v39;
        uint64_t v40 = *(void *)(v19 + 8 * v36);
      }
      while (v40 == -1);
      unint64_t v22 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(void *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*v18)((char *)(*(void *)(v13 + 48) + v29 * v22), (unint64_t)v10, v7);
    uint64_t result = (*v51)(*(void *)(v13 + 56) + v32 * v22, v52, v53);
    ++*(void *)(v13 + 16);
  }
  swift_release();
  uint64_t v3 = v42;
  uint64_t v26 = v44;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v41 = 1 << *(unsigned char *)(v11 + 32);
  if (v41 >= 64) {
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v26 = -1 << v41;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v13;
  return result;
}

uint64_t sub_1D59735A0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1D5AB3600();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7255D0);
  int v47 = a2;
  uint64_t v10 = sub_1D5AB59A0();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_41;
  }
  uint64_t v49 = v8;
  uint64_t v50 = v5;
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 64);
  int64_t v43 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  uint64_t v41 = v2;
  int64_t v42 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v44 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v48 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v16 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v18 = 0;
  uint64_t v45 = v9;
  uint64_t v46 = v6;
  while (1)
  {
    if (v15)
    {
      unint64_t v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v42) {
      break;
    }
    unint64_t v24 = v43;
    unint64_t v25 = v43[v23];
    ++v18;
    if (!v25)
    {
      int64_t v18 = v23 + 1;
      if (v23 + 1 >= v42) {
        goto LABEL_34;
      }
      unint64_t v25 = v43[v18];
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v42)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v41;
          if ((v47 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v25 = v43[v26];
        if (!v25)
        {
          while (1)
          {
            int64_t v18 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_43;
            }
            if (v18 >= v42) {
              goto LABEL_34;
            }
            unint64_t v25 = v43[v18];
            ++v26;
            if (v25) {
              goto LABEL_21;
            }
          }
        }
        int64_t v18 = v26;
      }
    }
LABEL_21:
    unint64_t v15 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    uint64_t v27 = *(void *)(v6 + 72);
    unint64_t v28 = *(void *)(v9 + 48) + v27 * v22;
    if (v47)
    {
      (*v48)(v49, v28, v50);
      uint64_t v29 = (uint64_t *)(*(void *)(v9 + 56) + 16 * v22);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
    }
    else
    {
      (*v44)(v49, v28, v50);
      uint64_t v32 = (uint64_t *)(*(void *)(v9 + 56) + 16 * v22);
      uint64_t v31 = *v32;
      uint64_t v30 = v32[1];
      swift_bridgeObjectRetain();
    }
    sub_1D597A270((unint64_t *)&unk_1EA728450, MEMORY[0x1E4F9D800]);
    uint64_t result = sub_1D5AB4D90();
    uint64_t v33 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v6 = v46;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      uint64_t v6 = v46;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v16 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v19 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v48)(*(void *)(v11 + 48) + v27 * v19, v49, v50);
    unint64_t v20 = (void *)(*(void *)(v11 + 56) + 16 * v19);
    *unint64_t v20 = v31;
    v20[1] = v30;
    ++*(void *)(v11 + 16);
    uint64_t v9 = v45;
  }
  swift_release();
  uint64_t v3 = v41;
  unint64_t v24 = v43;
  if ((v47 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v9 + 32);
  if (v40 >= 64) {
    bzero(v24, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v24 = -1 << v40;
  }
  *(void *)(v9 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_1D59739E0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725588);
  char v37 = a2;
  uint64_t v6 = sub_1D5AB59A0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v35) {
      break;
    }
    unint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v36 + 8 * v18);
    ++v13;
    if (!v20)
    {
      int64_t v13 = v18 + 1;
      if (v18 + 1 >= v35) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v36 + 8 * v13);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v35)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v36 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v13 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v35) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v36 + 8 * v13);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    unint64_t v22 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    unint64_t v25 = (long long *)(*(void *)(v5 + 56) + 40 * v17);
    if (v37)
    {
      sub_1D5950B78(v25, (uint64_t)v38);
    }
    else
    {
      sub_1D5979948((uint64_t)v25, (uint64_t)v38);
      swift_bridgeObjectRetain();
    }
    sub_1D5AB5C20();
    sub_1D5AB4E60();
    uint64_t result = sub_1D5AB5C60();
    uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
    *unint64_t v15 = v24;
    v15[1] = v23;
    uint64_t result = sub_1D5950B78(v38, *(void *)(v7 + 56) + 40 * v14);
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  unint64_t v19 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v19 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1D5973D08(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE4930);
  uint64_t result = sub_1D5AB59A0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v10;
    uint64_t v32 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if (a2)
              {
                if (v32 >= 64) {
                  bzero((void *)(v5 + 64), 8 * v33);
                }
                else {
                  *uint64_t v9 = v31;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = 8 * v20;
      uint64_t v29 = *(void *)(*(void *)(v5 + 48) + v28);
      uint64_t v30 = *(void *)(*(void *)(v5 + 56) + v28);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_1D5AB5C10();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 8 * v17;
      *(void *)(*(void *)(v7 + 48) + v18) = v29;
      *(void *)(*(void *)(v7 + 56) + v18) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1D5973FC0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE43A8);
  uint64_t v6 = sub_1D5AB59A0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_21:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v5 + 48) + 40 * v20;
    if (a2)
    {
      long long v26 = *(_OWORD *)v25;
      long long v27 = *(_OWORD *)(v25 + 16);
      uint64_t v40 = *(void *)(v25 + 32);
      long long v38 = v26;
      long long v39 = v27;
      sub_1D5979A10((_OWORD *)(*(void *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_1D5952D54(v25, (uint64_t)&v38);
      sub_1D5951F00(*(void *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    uint64_t result = sub_1D5AB5770();
    uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = *(void *)(v7 + 48) + 40 * v15;
    long long v17 = v38;
    long long v18 = v39;
    *(void *)(v16 + 32) = v40;
    *(_OWORD *)uint64_t v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    uint64_t result = (uint64_t)sub_1D5979A10(v37, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v22 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1D59742D8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3B78);
  uint64_t result = sub_1D5AB59A0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    unint64_t v29 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v12) {
          goto LABEL_33;
        }
        unint64_t v21 = v29[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v21 = v29[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v12)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *unint64_t v29 = -1 << v28;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v29[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v12) {
                  goto LABEL_33;
                }
                unint64_t v21 = v29[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      __int16 v27 = *(_WORD *)(*(void *)(v5 + 48) + 2 * v19);
      long long v30 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v19);
      if ((a2 & 1) == 0) {
        swift_retain();
      }
      sub_1D5AB5C20();
      sub_1D5AB5C30();
      uint64_t result = sub_1D5AB5C60();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v16 == v24;
          if (v16 == v24) {
            unint64_t v16 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v13 + 8 * v16);
        }
        while (v26 == -1);
        unint64_t v17 = __clz(__rbit64(~v26)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_WORD *)(*(void *)(v7 + 48) + 2 * v17) = v27;
      *(_OWORD *)(*(void *)(v7 + 56) + 16 * v17) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1D59745BC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE5120);
  uint64_t result = sub_1D5AB59A0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    unint64_t v29 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v12) {
          goto LABEL_33;
        }
        unint64_t v21 = v29[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v21 = v29[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v12)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *unint64_t v29 = -1 << v28;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v29[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v12) {
                  goto LABEL_33;
                }
                unint64_t v21 = v29[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      char v27 = *(unsigned char *)(*(void *)(v5 + 48) + v19);
      long long v30 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v19);
      if ((a2 & 1) == 0) {
        swift_retain();
      }
      sub_1D5AB5C20();
      sub_1D5AB5C30();
      uint64_t result = sub_1D5AB5C60();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v16 == v24;
          if (v16 == v24) {
            unint64_t v16 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v13 + 8 * v16);
        }
        while (v26 == -1);
        unint64_t v17 = __clz(__rbit64(~v26)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(unsigned char *)(*(void *)(v7 + 48) + v17) = v27;
      *(_OWORD *)(*(void *)(v7 + 56) + 16 * v17) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1D59748A0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7255A0);
  uint64_t v6 = sub_1D5AB59A0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      unint64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      unint64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_1D5979A10(v24, v35);
      }
      else
      {
        sub_1D5951F00((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_1D5AB5C20();
      sub_1D5AB4E60();
      uint64_t result = sub_1D5AB5C60();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *unint64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_1D5979A10(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1D5974BA0(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (uint64_t (*)(char *, void *))isStackAllocationSafe;
  v13[1] = *MEMORY[0x1E4F143B8];
  char v7 = *(unsigned char *)(a3 + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    uint64_t v10 = sub_1D5974D18((void *)((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, a3, v6);
    if (v3) {
      swift_willThrow();
    }
    else {
      return v10;
    }
  }
  else
  {
    uint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a2 = sub_1D5974D18((unint64_t *)v11, v8, a3, v6);
    MEMORY[0x1D945AAC0](v11, -1, -1);
  }
  return a2;
}

uint64_t sub_1D5974D18(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, void *))
{
  uint64_t v34 = a4;
  uint64_t v26 = a2;
  unint64_t v27 = a1;
  uint64_t v35 = sub_1D5AB3600();
  uint64_t result = MEMORY[0x1F4188790](v35);
  size_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = 0;
  char v37 = (void *)a3;
  uint64_t v11 = *(void *)(a3 + 64);
  uint64_t v28 = 0;
  uint64_t v29 = a3 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  int64_t v30 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v31 = v7 + 16;
  uint64_t v32 = (uint64_t (**)(char *, uint64_t))(v7 + 8);
  uint64_t v33 = v7;
  while (v14)
  {
    unint64_t v15 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    unint64_t v16 = v15 | (v10 << 6);
LABEL_17:
    uint64_t v20 = v35;
    unint64_t v21 = v37;
    (*(void (**)(char *, unint64_t, uint64_t))(v33 + 16))(v9, v37[6] + *(void *)(v33 + 72) * v16, v35);
    uint64_t v22 = (void *)(v21[7] + 16 * v16);
    uint64_t v23 = v22[1];
    v36[0] = *v22;
    v36[1] = v23;
    swift_bridgeObjectRetain();
    char v24 = v34(v9, v36);
    if (v4)
    {
      swift_bridgeObjectRelease();
      return (*v32)(v9, v20);
    }
    char v25 = v24;
    swift_bridgeObjectRelease();
    uint64_t result = (*v32)(v9, v20);
    if (v25)
    {
      *(unint64_t *)((char *)v27 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      BOOL v17 = __OFADD__(v28++, 1);
      if (v17) {
        goto LABEL_30;
      }
    }
  }
  BOOL v17 = __OFADD__(v10++, 1);
  if (v17)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v10 >= v30) {
    return sub_1D5975014(v27, v26, v28, v37);
  }
  unint64_t v18 = *(void *)(v29 + 8 * v10);
  if (v18)
  {
LABEL_16:
    unint64_t v14 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
    goto LABEL_17;
  }
  int64_t v19 = v10 + 1;
  if (v10 + 1 >= v30) {
    return sub_1D5975014(v27, v26, v28, v37);
  }
  unint64_t v18 = *(void *)(v29 + 8 * v19);
  if (v18) {
    goto LABEL_15;
  }
  int64_t v19 = v10 + 2;
  if (v10 + 2 >= v30) {
    return sub_1D5975014(v27, v26, v28, v37);
  }
  unint64_t v18 = *(void *)(v29 + 8 * v19);
  if (v18) {
    goto LABEL_15;
  }
  int64_t v19 = v10 + 3;
  if (v10 + 3 >= v30) {
    return sub_1D5975014(v27, v26, v28, v37);
  }
  unint64_t v18 = *(void *)(v29 + 8 * v19);
  if (v18)
  {
LABEL_15:
    int64_t v10 = v19;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v30) {
      return sub_1D5975014(v27, v26, v28, v37);
    }
    unint64_t v18 = *(void *)(v29 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1D5975014(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v49 = sub_1D5AB3600();
  uint64_t v43 = *(void *)(v49 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v49);
  uint64_t v48 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  int64_t v42 = (char *)&v38 - v10;
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7255D0);
  uint64_t result = sub_1D5AB59B0();
  uint64_t v12 = result;
  long long v38 = a1;
  uint64_t v39 = a2;
  if (a2 < 1) {
    unint64_t v13 = 0;
  }
  else {
    unint64_t v13 = *a1;
  }
  uint64_t v14 = 0;
  uint64_t v40 = a4;
  uint64_t v41 = v43 + 16;
  uint64_t v47 = v43 + 32;
  uint64_t v15 = result + 64;
  uint64_t v16 = v49;
  while (1)
  {
    if (v13)
    {
      uint64_t v44 = (v13 - 1) & v13;
      uint64_t v45 = v14;
      unint64_t v17 = __clz(__rbit64(v13)) | (v14 << 6);
    }
    else
    {
      uint64_t v18 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        goto LABEL_40;
      }
      if (v18 >= v39) {
        return v12;
      }
      unint64_t v19 = v38[v18];
      uint64_t v20 = v14 + 1;
      if (!v19)
      {
        uint64_t v20 = v14 + 2;
        if (v14 + 2 >= v39) {
          return v12;
        }
        unint64_t v19 = v38[v20];
        if (!v19)
        {
          uint64_t v20 = v14 + 3;
          if (v14 + 3 >= v39) {
            return v12;
          }
          unint64_t v19 = v38[v20];
          if (!v19)
          {
            uint64_t v21 = v14 + 4;
            if (v14 + 4 >= v39) {
              return v12;
            }
            unint64_t v19 = v38[v21];
            if (!v19)
            {
              while (1)
              {
                uint64_t v20 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_41;
                }
                if (v20 >= v39) {
                  return v12;
                }
                unint64_t v19 = v38[v20];
                ++v21;
                if (v19) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v20 = v14 + 4;
          }
        }
      }
LABEL_24:
      uint64_t v44 = (v19 - 1) & v19;
      uint64_t v45 = v20;
      unint64_t v17 = __clz(__rbit64(v19)) + (v20 << 6);
    }
    uint64_t v23 = v42;
    uint64_t v22 = v43;
    uint64_t v24 = *(void *)(v43 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v43 + 16))(v42, a4[6] + v24 * v17, v16);
    char v25 = (uint64_t *)(a4[7] + 16 * v17);
    uint64_t v26 = v25[1];
    uint64_t v46 = *v25;
    unint64_t v27 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
    v27(v48, v23, v16);
    sub_1D597A270((unint64_t *)&unk_1EA728450, MEMORY[0x1E4F9D800]);
    swift_bridgeObjectRetain();
    uint64_t result = sub_1D5AB4D90();
    uint64_t v28 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v31 = __clz(__rbit64((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v32 = 0;
      unint64_t v33 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v34 = v30 == v33;
        if (v30 == v33) {
          unint64_t v30 = 0;
        }
        v32 |= v34;
        uint64_t v35 = *(void *)(v15 + 8 * v30);
      }
      while (v35 == -1);
      unint64_t v31 = __clz(__rbit64(~v35)) + (v30 << 6);
    }
    *(void *)(v15 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v27)(*(void *)(v12 + 48) + v31 * v24, v48, v49);
    uint64_t v36 = (void *)(*(void *)(v12 + 56) + 16 * v31);
    *uint64_t v36 = v46;
    v36[1] = v26;
    ++*(void *)(v12 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v40;
    unint64_t v13 = v44;
    uint64_t v14 = v45;
    if (!a3) {
      return v12;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1D59753FC(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v64 = sub_1D5AB3B70();
  uint64_t v56 = *(void *)(v64 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v64);
  uint64_t v63 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v54 = (char *)&v47 - v10;
  uint64_t v11 = sub_1D5AB3600();
  uint64_t v55 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v62 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v53 = (char *)&v47 - v14;
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7255F8);
  uint64_t result = sub_1D5AB59B0();
  uint64_t v16 = result;
  uint64_t v47 = a1;
  uint64_t v48 = a2;
  if (a2 < 1) {
    unint64_t v17 = 0;
  }
  else {
    unint64_t v17 = *a1;
  }
  uint64_t v18 = 0;
  uint64_t v51 = v55 + 16;
  uint64_t v52 = result;
  uint64_t v49 = a4;
  uint64_t v50 = v56 + 16;
  uint64_t v60 = v56 + 32;
  uint64_t v61 = v55 + 32;
  uint64_t v19 = result + 64;
  uint64_t v20 = v62;
  while (1)
  {
    uint64_t v59 = a3;
    if (v17)
    {
      uint64_t v57 = (v17 - 1) & v17;
      uint64_t v58 = v18;
      unint64_t v21 = __clz(__rbit64(v17)) | (v18 << 6);
    }
    else
    {
      uint64_t v22 = v18 + 1;
      if (__OFADD__(v18, 1)) {
        goto LABEL_40;
      }
      if (v22 >= v48) {
        return v16;
      }
      unint64_t v23 = v47[v22];
      uint64_t v24 = v18 + 1;
      if (!v23)
      {
        uint64_t v24 = v18 + 2;
        if (v18 + 2 >= v48) {
          return v16;
        }
        unint64_t v23 = v47[v24];
        if (!v23)
        {
          uint64_t v24 = v18 + 3;
          if (v18 + 3 >= v48) {
            return v16;
          }
          unint64_t v23 = v47[v24];
          if (!v23)
          {
            uint64_t v25 = v18 + 4;
            if (v18 + 4 >= v48) {
              return v16;
            }
            unint64_t v23 = v47[v25];
            if (!v23)
            {
              while (1)
              {
                uint64_t v24 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_41;
                }
                if (v24 >= v48) {
                  return v16;
                }
                unint64_t v23 = v47[v24];
                ++v25;
                if (v23) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v24 = v18 + 4;
          }
        }
      }
LABEL_24:
      uint64_t v57 = (v23 - 1) & v23;
      uint64_t v58 = v24;
      unint64_t v21 = __clz(__rbit64(v23)) + (v24 << 6);
    }
    uint64_t v26 = v55;
    uint64_t v27 = *(void *)(v55 + 72);
    uint64_t v28 = v53;
    (*(void (**)(char *, unint64_t, uint64_t))(v55 + 16))(v53, a4[6] + v27 * v21, v11);
    uint64_t v29 = a4[7];
    uint64_t v30 = v56;
    uint64_t v31 = *(void *)(v56 + 72);
    uint64_t v32 = v29 + v31 * v21;
    uint64_t v33 = v11;
    BOOL v34 = v54;
    uint64_t v35 = v64;
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v54, v32, v64);
    uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
    v36(v20, v28, v33);
    char v37 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
    long long v38 = v34;
    uint64_t v11 = v33;
    v37(v63, v38, v35);
    uint64_t v16 = v52;
    sub_1D597A270((unint64_t *)&unk_1EA728450, MEMORY[0x1E4F9D800]);
    uint64_t result = sub_1D5AB4D90();
    uint64_t v39 = -1 << *(unsigned char *)(v16 + 32);
    unint64_t v40 = result & ~v39;
    unint64_t v41 = v40 >> 6;
    if (((-1 << v40) & ~*(void *)(v19 + 8 * (v40 >> 6))) != 0)
    {
      unint64_t v42 = __clz(__rbit64((-1 << v40) & ~*(void *)(v19 + 8 * (v40 >> 6)))) | v40 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v43 = 0;
      unint64_t v44 = (unint64_t)(63 - v39) >> 6;
      do
      {
        if (++v41 == v44 && (v43 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v45 = v41 == v44;
        if (v41 == v44) {
          unint64_t v41 = 0;
        }
        v43 |= v45;
        uint64_t v46 = *(void *)(v19 + 8 * v41);
      }
      while (v46 == -1);
      unint64_t v42 = __clz(__rbit64(~v46)) + (v41 << 6);
    }
    *(void *)(v19 + ((v42 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v42;
    v36((char *)(*(void *)(v16 + 48) + v42 * v27), v62, v11);
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v37)(*(void *)(v16 + 56) + v42 * v31, v63, v64);
    ++*(void *)(v16 + 16);
    a3 = v59 - 1;
    if (__OFSUB__(v59, 1)) {
      break;
    }
    a4 = v49;
    unint64_t v17 = v57;
    uint64_t v18 = v58;
    if (v59 == 1) {
      return v16;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1D59758F4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1D5AB3600();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1D59525FC(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a3 & 1) == 0)
  {
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1D59767B4();
      goto LABEL_7;
    }
    sub_1D59730A4(v17, a3 & 1);
    unint64_t v28 = sub_1D59525FC(a2);
    if ((v18 & 1) == (v29 & 1))
    {
      unint64_t v14 = v28;
      uint64_t v20 = *v4;
      if (v18) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1D59762AC(v14, (uint64_t)v11, a1, v20);
    }
LABEL_15:
    uint64_t result = sub_1D5AB5B50();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v20 = *v4;
  if ((v18 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v21 = v20[7];
  uint64_t v22 = sub_1D5AB3800();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 40);
  uint64_t v25 = v22;
  uint64_t v26 = v21 + *(void *)(v23 + 72) * v14;
  return v24(v26, a1, v25);
}

uint64_t sub_1D5975AF8(long long *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1D5952584(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1D5976E2C();
      goto LABEL_7;
    }
    sub_1D59739E0(v15, a4 & 1);
    unint64_t v21 = sub_1D5952584(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      char v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_1D5AB5B50();
    __break(1u);
    return result;
  }
LABEL_7:
  char v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7] + 40 * v12;
    __swift_destroy_boxed_opaque_existential_1Tm(v19);
    return sub_1D5950B78(a1, v19);
  }
LABEL_13:
  sub_1D59763A0(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D5975C50(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1D5952540(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1D5977018();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    uint64_t v19 = 8 * v10;
    *(void *)(v16[6] + v19) = a2;
    *(void *)(v16[7] + v19) = a1;
    uint64_t v20 = v16[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_1D5973D08(result, a3 & 1);
  uint64_t result = sub_1D5952540(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    char v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1D5AB5B50();
  __break(1u);
  return result;
}

_OWORD *sub_1D5975D8C(_OWORD *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_1D5952770(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1D59771BC();
      goto LABEL_7;
    }
    sub_1D5973FC0(v13, a3 & 1);
    unint64_t v19 = sub_1D5952770(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      char v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
LABEL_13:
      sub_1D5952D54(a2, (uint64_t)v21);
      return sub_1D5976410(v10, (uint64_t)v21, a1, v16);
    }
LABEL_15:
    uint64_t result = (_OWORD *)sub_1D5AB5B50();
    __break(1u);
    return result;
  }
LABEL_7:
  char v16 = *v4;
  if ((v14 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v17 = (_OWORD *)(v16[7] + 32 * v10);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
  return sub_1D5979A10(a1, v17);
}

_OWORD *sub_1D5975ED8(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1D5952584(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1D59776F8();
      goto LABEL_7;
    }
    sub_1D59748A0(v15, a4 & 1);
    unint64_t v21 = sub_1D5952584(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      char v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_1D5AB5B50();
    __break(1u);
    return result;
  }
LABEL_7:
  char v18 = *v5;
  if (v16)
  {
LABEL_8:
    unint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
    return sub_1D5979A10(a1, v19);
  }
LABEL_13:
  sub_1D597648C(v12, a2, a3, a1, v18);
  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_1D597602C(uint64_t a1, uint64_t a2, __int16 a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1D5952680(a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1D59773A4();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      unint64_t v19 = (void *)(v18[7] + 16 * v12);
      uint64_t result = swift_release();
      void *v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_WORD *)(v18[6] + 2 * v12) = a3;
    unint64_t v21 = (void *)(v18[7] + 16 * v12);
    *unint64_t v21 = a1;
    v21[1] = a2;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_1D59742D8(result, a4 & 1);
  uint64_t result = sub_1D5952680(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v12 = result;
    char v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1D5AB5B50();
  __break(1u);
  return result;
}

uint64_t sub_1D597616C(uint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1D59526F8(a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1D5977550();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      unint64_t v19 = (void *)(v18[7] + 16 * v12);
      uint64_t result = swift_release();
      void *v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(unsigned char *)(v18[6] + v12) = a3;
    unint64_t v21 = (void *)(v18[7] + 16 * v12);
    *unint64_t v21 = a1;
    v21[1] = a2;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_1D59745BC(result, a4 & 1);
  uint64_t result = sub_1D59526F8(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v12 = result;
    char v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1D5AB5B50();
  __break(1u);
  return result;
}

uint64_t sub_1D59762AC(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1D5AB3600();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t v10 = a4[7];
  uint64_t v11 = sub_1D5AB3800();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a3, v11);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

uint64_t sub_1D59763A0(unint64_t a1, uint64_t a2, uint64_t a3, long long *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_1D5950B78(a4, a5[7] + 40 * a1);
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

_OWORD *sub_1D5976410(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = a4[6] + 40 * a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  uint64_t result = sub_1D5979A10(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

_OWORD *sub_1D597648C(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  long long v6 = (void *)(a5[6] + 16 * a1);
  *long long v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_1D5979A10(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

void *sub_1D59764F8()
{
  uint64_t v1 = v0;
  uint64_t v34 = sub_1D5AB3960();
  uint64_t v2 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v33 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7255E8);
  uint64_t v4 = *v0;
  uint64_t v5 = sub_1D5AB5990();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v6;
    return result;
  }
  unint64_t v28 = v1;
  uint64_t result = (void *)(v5 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v4 || (unint64_t)result >= v4 + 64 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v4 + 64), 8 * v8);
  }
  uint64_t v29 = v4 + 64;
  int64_t v9 = 0;
  uint64_t v10 = *(void *)(v4 + 16);
  uint64_t v35 = v6;
  *(void *)(v6 + 16) = v10;
  uint64_t v11 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v4 + 64);
  uint64_t v32 = v2 + 16;
  int64_t v30 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v31 = v2 + 32;
  uint64_t v14 = v34;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v9 << 6);
      goto LABEL_9;
    }
    if (__OFADD__(v9++, 1)) {
      goto LABEL_27;
    }
    if (v9 >= v30)
    {
LABEL_24:
      uint64_t result = (void *)swift_release();
      uint64_t v1 = v28;
      uint64_t v6 = v35;
      goto LABEL_25;
    }
    unint64_t v26 = *(void *)(v29 + 8 * v9);
    if (!v26) {
      break;
    }
LABEL_21:
    unint64_t v13 = (v26 - 1) & v26;
    unint64_t v16 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    char v18 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v16);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    unint64_t v21 = *(void *)(v2 + 72) * v16;
    uint64_t v22 = v33;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v33, *(void *)(v4 + 56) + v21, v14);
    uint64_t v23 = v35;
    uint64_t v24 = (void *)(*(void *)(v35 + 48) + v17);
    *uint64_t v24 = v20;
    v24[1] = v19;
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v23 + 56) + v21, v22, v14);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v9 + 1;
  if (v9 + 1 >= v30) {
    goto LABEL_24;
  }
  unint64_t v26 = *(void *)(v29 + 8 * v27);
  if (v26)
  {
    ++v9;
    goto LABEL_21;
  }
  uint64_t v6 = v35;
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v30)
    {
      uint64_t result = (void *)swift_release();
      uint64_t v1 = v28;
      goto LABEL_25;
    }
    unint64_t v26 = *(void *)(v29 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

char *sub_1D59767B4()
{
  uint64_t v1 = v0;
  uint64_t v39 = sub_1D5AB3800();
  uint64_t v43 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  long long v38 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1D5AB3600();
  uint64_t v42 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v36 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725600);
  uint64_t v4 = *v0;
  uint64_t v5 = sub_1D5AB5990();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = (char *)swift_release();
LABEL_25:
    *uint64_t v1 = v6;
    return result;
  }
  uint64_t result = (char *)(v5 + 64);
  unint64_t v8 = (char *)(v4 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  int64_t v30 = v1;
  uint64_t v31 = v4 + 64;
  if (v6 != v4 || result >= &v8[8 * v9]) {
    uint64_t result = (char *)memmove(result, v8, 8 * v9);
  }
  int64_t v10 = 0;
  uint64_t v11 = *(void *)(v4 + 16);
  uint64_t v40 = v4;
  uint64_t v41 = v6;
  *(void *)(v6 + 16) = v11;
  uint64_t v12 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v4 + 64);
  int64_t v44 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v15 = v43;
  uint64_t v35 = v42 + 16;
  uint64_t v16 = v42;
  uint64_t v33 = v42 + 32;
  uint64_t v34 = v43 + 16;
  uint64_t v32 = v43 + 32;
  uint64_t v17 = v36;
  char v18 = v38;
  uint64_t v19 = v41;
  while (1)
  {
    if (v14)
    {
      uint64_t v45 = (v14 - 1) & v14;
      unint64_t v20 = __clz(__rbit64(v14)) | (v10 << 6);
      uint64_t v21 = v40;
      goto LABEL_9;
    }
    BOOL v27 = __OFADD__(v10++, 1);
    uint64_t v21 = v40;
    if (v27) {
      goto LABEL_27;
    }
    if (v10 >= v44)
    {
LABEL_24:
      uint64_t result = (char *)swift_release();
      uint64_t v1 = v30;
      uint64_t v6 = v41;
      goto LABEL_25;
    }
    unint64_t v28 = *(void *)(v31 + 8 * v10);
    if (!v28) {
      break;
    }
LABEL_21:
    uint64_t v45 = (v28 - 1) & v28;
    unint64_t v20 = __clz(__rbit64(v28)) + (v10 << 6);
LABEL_9:
    unint64_t v22 = *(void *)(v16 + 72) * v20;
    uint64_t v23 = v37;
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v17, *(void *)(v21 + 48) + v22, v37);
    unint64_t v24 = *(void *)(v15 + 72) * v20;
    unint64_t v25 = *(void *)(v21 + 56) + v24;
    uint64_t v26 = v39;
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v18, v25, v39);
    (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(*(void *)(v19 + 48) + v22, v17, v23);
    uint64_t result = (char *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v15 + 32))(*(void *)(v19 + 56) + v24, v18, v26);
    unint64_t v14 = v45;
  }
  int64_t v29 = v10 + 1;
  if (v10 + 1 >= v44) {
    goto LABEL_24;
  }
  unint64_t v28 = *(void *)(v31 + 8 * v29);
  if (v28)
  {
    ++v10;
    goto LABEL_21;
  }
  uint64_t v6 = v41;
  while (1)
  {
    int64_t v10 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v10 >= v44)
    {
      uint64_t result = (char *)swift_release();
      uint64_t v1 = v30;
      goto LABEL_25;
    }
    unint64_t v28 = *(void *)(v31 + 8 * v10);
    ++v29;
    if (v28) {
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1D5976B54()
{
  uint64_t v38 = sub_1D5AB3600();
  uint64_t v1 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  uint64_t v37 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7255D0);
  uint64_t v32 = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = sub_1D5AB5990();
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v40 = v4;
  if (!v5)
  {
    uint64_t result = (void *)swift_release();
    uint64_t v30 = v40;
    int64_t v29 = v32;
LABEL_25:
    *int64_t v29 = v30;
    return result;
  }
  uint64_t v6 = v4;
  uint64_t result = (void *)(v4 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    uint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
    uint64_t v6 = v40;
  }
  int64_t v9 = 0;
  *(void *)(v6 + 16) = *(void *)(v3 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v39 = v3;
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v3 + 64);
  uint64_t v33 = v3 + 64;
  int64_t v34 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v35 = v1 + 32;
  uint64_t v36 = v1 + 16;
  unint64_t v14 = v37;
  uint64_t v13 = v38;
  uint64_t v15 = v40;
  while (1)
  {
    if (v12)
    {
      unint64_t v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v17 = v16 | (v9 << 6);
      uint64_t v18 = v39;
      goto LABEL_9;
    }
    int64_t v26 = v9 + 1;
    uint64_t v18 = v39;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v26 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v34) {
        goto LABEL_23;
      }
      unint64_t v27 = *(void *)(v33 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_22:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v17 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v1 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v14, *(void *)(v18 + 48) + v19, v13);
    uint64_t v20 = *(void *)(v18 + 56);
    uint64_t v21 = 16 * v17;
    unint64_t v22 = (uint64_t *)(v20 + 16 * v17);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v15 + 48) + v19, v14, v13);
    unint64_t v25 = (void *)(*(void *)(v15 + 56) + v21);
    *unint64_t v25 = v23;
    v25[1] = v24;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v34)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    int64_t v29 = v32;
    uint64_t v30 = v40;
    goto LABEL_25;
  }
  unint64_t v27 = *(void *)(v33 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1D5976E2C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725588);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D5AB5990();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t v25 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 40 * v15;
    sub_1D5979948(*(void *)(v2 + 56) + 40 * v15, (uint64_t)v26);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = v19;
    v21[1] = v18;
    sub_1D5950B78(v26, *(void *)(v4 + 56) + v20);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D5977018()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE4930);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D5AB5990();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D59771BC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE43A8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D5AB5990();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    sub_1D5952D54(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    uint64_t v17 = 32 * v15;
    sub_1D5951F00(*(void *)(v2 + 56) + v17, (uint64_t)v24);
    uint64_t v18 = *(void *)(v4 + 48) + v16;
    long long v19 = v25[0];
    long long v20 = v25[1];
    *(void *)(v18 + 32) = v26;
    *(_OWORD *)uint64_t v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    uint64_t result = sub_1D5979A10(v24, (_OWORD *)(*(void *)(v4 + 56) + v17));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D59773A4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3B78);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D5AB5990();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 2 * v15;
    __int16 v17 = *(_WORD *)(*(void *)(v2 + 48) + 2 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 56) + v18);
    *(_WORD *)(*(void *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v18) = v19;
    uint64_t result = (void *)swift_retain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D5977550()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE5120);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D5AB5990();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    long long v16 = *(_OWORD *)(*(void *)(v2 + 56) + 16 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(_OWORD *)(*(void *)(v4 + 56) + 16 * v15) = v16;
    uint64_t result = (void *)swift_retain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D59776F8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7255A0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D5AB5990();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t v25 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_1D5951F00(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = v19;
    v21[1] = v18;
    sub_1D5979A10(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1D59778E0@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t (*a4)(void)@<X4>, uint64_t a5@<X8>)
{
  if (result < 0 || (uint64_t v5 = result, 1 << *(unsigned char *)(a3 + 32) <= result))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (((*(void *)(a3 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (*(_DWORD *)(a3 + 36) != a2)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v7 = *(void *)(a3 + 48);
  uint64_t v8 = a4(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  uint64_t v11 = v7 + *(void *)(v9 + 72) * v5;
  return v10(a5, v11, v8);
}

uint64_t sub_1D59779A4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1D5977A2C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE1040);
    uint64_t v3 = sub_1D5AB57D0();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v29 = v1;
    uint64_t v30 = a1 + 32;
    while (1)
    {
      char v6 = *(unsigned char *)(v30 + v4);
      sub_1D5AB5C20();
      sub_1D5AB25E0();
      sub_1D5AB4E60();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1D5AB5C60();
      uint64_t v8 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v9 = result & ~v8;
      unint64_t v10 = v9 >> 6;
      uint64_t v11 = *(void *)(v5 + 8 * (v9 >> 6));
      uint64_t v12 = 1 << v9;
      if (((1 << v9) & v11) != 0)
      {
        uint64_t v13 = sub_1D5AB25E0();
        uint64_t v15 = v14;
        if (v13 == sub_1D5AB25E0() && v15 == v16)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
          goto LABEL_4;
        }
        char v18 = sub_1D5AB5AF0();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v18) {
          goto LABEL_4;
        }
        uint64_t v19 = ~v8;
        while (1)
        {
          unint64_t v9 = (v9 + 1) & v19;
          unint64_t v10 = v9 >> 6;
          uint64_t v11 = *(void *)(v5 + 8 * (v9 >> 6));
          uint64_t v12 = 1 << v9;
          if ((v11 & (1 << v9)) == 0) {
            break;
          }
          uint64_t v20 = sub_1D5AB25E0();
          uint64_t v22 = v21;
          if (v20 == sub_1D5AB25E0() && v22 == v23) {
            goto LABEL_3;
          }
          char v25 = sub_1D5AB5AF0();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if (v25) {
            goto LABEL_4;
          }
        }
      }
      *(void *)(v5 + 8 * v10) = v12 | v11;
      *(unsigned char *)(*(void *)(v3 + 48) + v9) = v6;
      uint64_t v26 = *(void *)(v3 + 16);
      BOOL v27 = __OFADD__(v26, 1);
      uint64_t v28 = v26 + 1;
      if (v27)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v28;
LABEL_4:
      if (++v4 == v29) {
        return v3;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1D5977C44(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA728020);
    uint64_t v3 = sub_1D5AB57D0();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      char v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_1D5AB5C20();
      swift_bridgeObjectRetain();
      sub_1D5AB4E60();
      uint64_t result = sub_1D5AB5C60();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (uint64_t result = sub_1D5AB5AF0(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            uint64_t result = sub_1D5AB5AF0();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      uint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      *uint64_t v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1D5977DEC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v59 = a5;
  uint64_t v61 = a4;
  uint64_t v47 = a2;
  uint64_t v48 = a1;
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725558);
  uint64_t v6 = MEMORY[0x1F4188790](v58);
  uint64_t v69 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v68 = (uint64_t)&v46 - v8;
  uint64_t v9 = sub_1D5AB3B70();
  uint64_t v10 = *(void **)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v67 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1D5AB3600();
  uint64_t result = MEMORY[0x1F4188790](v12);
  uint64_t v66 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v16 = 0;
  uint64_t v60 = (void *)a3;
  uint64_t v17 = *(void *)(a3 + 64);
  uint64_t v49 = 0;
  uint64_t v50 = a3 + 64;
  uint64_t v18 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v17;
  int64_t v51 = (unint64_t)(v18 + 63) >> 6;
  uint64_t v55 = v10 + 2;
  uint64_t v56 = v14 + 16;
  uint64_t v70 = v10;
  uint64_t v57 = v14;
  uint64_t v53 = (void (**)(char *, uint64_t))(v14 + 8);
  uint64_t v54 = v10 + 1;
  while (1)
  {
    if (v20)
    {
      uint64_t v62 = (v20 - 1) & v20;
      int64_t v63 = v16;
      unint64_t v23 = __clz(__rbit64(v20)) | (v16 << 6);
      goto LABEL_18;
    }
    BOOL v24 = __OFADD__(v16, 1);
    int64_t v25 = v16 + 1;
    if (v24)
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v51) {
      return sub_1D59753FC(v48, v47, v49, v60);
    }
    unint64_t v26 = *(void *)(v50 + 8 * v25);
    if (!v26) {
      break;
    }
LABEL_17:
    uint64_t v62 = (v26 - 1) & v26;
    int64_t v63 = v25;
    unint64_t v23 = __clz(__rbit64(v26)) + (v25 << 6);
LABEL_18:
    uint64_t v28 = v60;
    unint64_t v29 = v60[6] + *(void *)(v57 + 72) * v23;
    uint64_t v65 = *(void (**)(void))(v57 + 16);
    uint64_t v30 = v66;
    ((void (*)(char *, unint64_t, uint64_t))v65)(v66, v29, v12);
    uint64_t v31 = v28[7];
    uint64_t v32 = v70[9];
    unint64_t v52 = v23;
    uint64_t v64 = (void (*)(char *, unint64_t, uint64_t))v70[2];
    uint64_t v33 = v67;
    v64(v67, v31 + v32 * v23, v9);
    uint64_t v34 = v58;
    uint64_t v35 = (char *)(v68 + *(int *)(v58 + 48));
    uint64_t v36 = v30;
    uint64_t v37 = v65;
    ((void (*)(uint64_t, char *, uint64_t))v65)(v68, v36, v12);
    uint64_t v38 = v33;
    uint64_t v39 = (void (*)(char *, uint64_t, uint64_t))v64;
    v64(v35, (unint64_t)v38, v9);
    uint64_t v40 = &v69[*(int *)(v34 + 48)];
    v37();
    v39(v40, (uint64_t)v35, v9);
    uint64_t v41 = sub_1D5AB3B60();
    uint64_t v43 = v42;
    int64_t v44 = (void (*)(char *, uint64_t))v70[1];
    v44(v40, v9);
    if (v41 == v61 && v43 == v59)
    {
      swift_bridgeObjectRelease();
      sub_1D594F53C(v68, &qword_1EA725558);
      uint64_t v45 = *v53;
      (*v53)(v69, v12);
      v44(v67, v9);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v45)(v66, v12);
      unint64_t v20 = v62;
      int64_t v16 = v63;
    }
    else
    {
      char v21 = sub_1D5AB5AF0();
      swift_bridgeObjectRelease();
      sub_1D594F53C(v68, &qword_1EA725558);
      uint64_t v22 = *v53;
      (*v53)(v69, v12);
      v44(v67, v9);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v22)(v66, v12);
      unint64_t v20 = v62;
      int64_t v16 = v63;
      if ((v21 & 1) == 0)
      {
        *(unint64_t *)((char *)v48 + ((v52 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v52;
        BOOL v24 = __OFADD__(v49++, 1);
        if (v24)
        {
          __break(1u);
          return sub_1D59753FC(v48, v47, v49, v60);
        }
      }
    }
  }
  int64_t v27 = v25 + 1;
  if (v25 + 1 >= v51) {
    return sub_1D59753FC(v48, v47, v49, v60);
  }
  unint64_t v26 = *(void *)(v50 + 8 * v27);
  if (v26) {
    goto LABEL_16;
  }
  int64_t v27 = v25 + 2;
  if (v25 + 2 >= v51) {
    return sub_1D59753FC(v48, v47, v49, v60);
  }
  unint64_t v26 = *(void *)(v50 + 8 * v27);
  if (v26) {
    goto LABEL_16;
  }
  int64_t v27 = v25 + 3;
  if (v25 + 3 >= v51) {
    return sub_1D59753FC(v48, v47, v49, v60);
  }
  unint64_t v26 = *(void *)(v50 + 8 * v27);
  if (v26)
  {
LABEL_16:
    int64_t v25 = v27;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v25 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v25 >= v51) {
      return sub_1D59753FC(v48, v47, v49, v60);
    }
    unint64_t v26 = *(void *)(v50 + 8 * v25);
    ++v27;
    if (v26) {
      goto LABEL_17;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1D5978384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v15[1] = *MEMORY[0x1E4F143B8];
  char v7 = *(unsigned char *)(a1 + 32);
  unsigned int v8 = v7 & 0x3F;
  unint64_t v9 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v10 = 8 * v9;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v8 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1D5977DEC((void *)((char *)v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0)), v9, a1, a2, a3);
    swift_bridgeObjectRelease();
    if (v3) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v13 = (void *)swift_slowAlloc();
    bzero(v13, v10);
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1D5977DEC((unint64_t *)v13, v9, a1, a2, a3);
    swift_bridgeObjectRelease();
    MEMORY[0x1D945AAC0](v13, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v12;
}

uint64_t sub_1D597854C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v84 = a4;
  v64[0] = a2;
  uint64_t v65 = a1;
  uint64_t v75 = sub_1D5AB3800();
  uint64_t v5 = *(void *)(v75 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v75);
  unint64_t v73 = (char *)v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v72 = (char *)v64 - v8;
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725558);
  uint64_t v9 = MEMORY[0x1F4188790](v83);
  unint64_t v82 = (char *)v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v96 = (uint64_t)v64 - v11;
  uint64_t v95 = sub_1D5AB3B70();
  uint64_t v12 = *(void *)(v95 - 8);
  MEMORY[0x1F4188790](v95);
  uint64_t v94 = (char *)v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_1D5AB3600();
  uint64_t result = MEMORY[0x1F4188790](v93);
  uint64_t v92 = (char *)v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = 0;
  int64_t v17 = 0;
  uint64_t v85 = (void *)a3;
  uint64_t v18 = *(void *)(a3 + 64);
  uint64_t v67 = a3 + 64;
  uint64_t v19 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v18;
  int64_t v68 = (unint64_t)(v19 + 63) >> 6;
  uint64_t v78 = v12 + 16;
  uint64_t v79 = v15 + 16;
  uint64_t v71 = v5 + 16;
  uint64_t v70 = v5 + 32;
  uint64_t v80 = v15;
  uint64_t v81 = v12;
  uint64_t v76 = (void (**)(uint64_t, uint64_t))(v15 + 8);
  uint64_t v77 = (void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v74 = v5;
  uint64_t v69 = v5 + 8;
  while (1)
  {
    if (v21)
    {
      uint64_t v87 = (v21 - 1) & v21;
      int64_t v88 = v17;
      unint64_t v28 = __clz(__rbit64(v21)) | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v29 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v68) {
      return sub_1D59753FC(v65, v64[0], v66, v85);
    }
    unint64_t v30 = *(void *)(v67 + 8 * v29);
    int64_t v31 = v17 + 1;
    if (!v30)
    {
      int64_t v31 = v17 + 2;
      if (v17 + 2 >= v68) {
        return sub_1D59753FC(v65, v64[0], v66, v85);
      }
      unint64_t v30 = *(void *)(v67 + 8 * v31);
      if (!v30)
      {
        int64_t v31 = v17 + 3;
        if (v17 + 3 >= v68) {
          return sub_1D59753FC(v65, v64[0], v66, v85);
        }
        unint64_t v30 = *(void *)(v67 + 8 * v31);
        if (!v30) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v87 = (v30 - 1) & v30;
    int64_t v88 = v31;
    unint64_t v28 = __clz(__rbit64(v30)) + (v31 << 6);
LABEL_22:
    uint64_t v33 = v85;
    unint64_t v34 = v85[6] + *(void *)(v80 + 72) * v28;
    uint64_t v91 = *(void (**)(char *, uint64_t))(v80 + 16);
    uint64_t v35 = v92;
    uint64_t v36 = v93;
    ((void (*)(char *, unint64_t, uint64_t))v91)(v92, v34, v93);
    uint64_t v37 = v33[7];
    uint64_t v38 = *(void *)(v81 + 72);
    unint64_t v86 = v28;
    uint64_t v39 = v37 + v38 * v28;
    int v89 = *(void (**)(char *, uint64_t, uint64_t))(v81 + 16);
    uint64_t v40 = v94;
    uint64_t v41 = v95;
    v89(v94, v39, v95);
    uint64_t v42 = v83;
    uint64_t v43 = v96;
    int64_t v90 = (char *)(v96 + *(int *)(v83 + 48));
    int64_t v44 = v90;
    uint64_t v45 = v35;
    uint64_t v46 = v91;
    ((void (*)(uint64_t, char *, uint64_t))v91)(v96, v45, v36);
    uint64_t v47 = v44;
    uint64_t v48 = v89;
    v89(v47, (uint64_t)v40, v41);
    uint64_t v49 = (uint64_t)v82;
    uint64_t v50 = &v82[*(int *)(v42 + 48)];
    ((void (*)(char *, uint64_t, uint64_t))v46)(v82, v43, v36);
    v48(v50, (uint64_t)v90, v41);
    uint64_t v51 = v84;
    if (*(void *)(v84 + 16) && (unint64_t v52 = sub_1D59525FC(v49), (v53 & 1) != 0))
    {
      uint64_t v54 = v49;
      uint64_t v55 = v74;
      unint64_t v56 = *(void *)(v51 + 56) + *(void *)(v74 + 72) * v52;
      uint64_t v57 = v73;
      uint64_t v58 = v75;
      (*(void (**)(char *, unint64_t, uint64_t))(v74 + 16))(v73, v56, v75);
      uint64_t v59 = v72;
      (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v72, v57, v58);
      uint64_t v91 = *v77;
      uint64_t v60 = v95;
      v91(v50, v95);
      uint64_t v61 = *v76;
      uint64_t v62 = v54;
      uint64_t v63 = v93;
      (*v76)(v62, v93);
      LOBYTE(v57) = sub_1D5AB37F0();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v59, v58);
      sub_1D594F53C(v96, &qword_1EA725558);
      v91(v94, v60);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v61)(v92, v63);
      unint64_t v21 = v87;
      int64_t v17 = v88;
      if ((v57 & 1) == 0) {
        goto LABEL_5;
      }
    }
    else
    {
      sub_1D594F53C(v96, &qword_1EA725558);
      uint64_t v22 = *v77;
      uint64_t v23 = v95;
      (*v77)(v50, v95);
      BOOL v24 = *v76;
      uint64_t v25 = v49;
      uint64_t v26 = v93;
      (*v76)(v25, v93);
      v22(v94, v23);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v24)(v92, v26);
      unint64_t v21 = v87;
      int64_t v17 = v88;
LABEL_5:
      *(unint64_t *)((char *)v65 + ((v86 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v86;
      if (__OFADD__(v66++, 1)) {
        goto LABEL_29;
      }
    }
  }
  uint64_t v32 = v17 + 4;
  if (v17 + 4 >= v68) {
    return sub_1D59753FC(v65, v64[0], v66, v85);
  }
  unint64_t v30 = *(void *)(v67 + 8 * v32);
  if (v30)
  {
    int64_t v31 = v17 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v31 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v31 >= v68) {
      return sub_1D59753FC(v65, v64[0], v66, v85);
    }
    unint64_t v30 = *(void *)(v67 + 8 * v31);
    ++v32;
    if (v30) {
      goto LABEL_21;
    }
  }
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1D5978C88(uint64_t a1, uint64_t a2)
{
  v13[1] = *MEMORY[0x1E4F143B8];
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v8 = 8 * v7;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1D597854C((void *)((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    swift_bridgeObjectRelease();
    if (v2) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v8);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1D597854C((unint64_t *)v11, v7, a1, a2);
    swift_bridgeObjectRelease();
    MEMORY[0x1D945AAC0](v11, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v10;
}

uint64_t sub_1D5978E44(uint64_t a1)
{
  return sub_1D5971FD4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_1D5978E54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v88 = a3;
  uint64_t v98 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725560);
  MEMORY[0x1F4188790](v4 - 8);
  int64_t v90 = (char *)v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_1D5AB3960();
  uint64_t v6 = *(void *)(v89 - 8);
  MEMORY[0x1F4188790](v89 - 8);
  uint64_t v84 = (char *)v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725558);
  uint64_t v8 = MEMORY[0x1F4188790](v97);
  uint64_t v96 = (char *)v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v102 = (char *)v76 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v103 = (uint64_t)v76 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v87 = (char *)v76 - v14;
  uint64_t v15 = *(void *)(a2 + 64);
  uint64_t v80 = a2 + 64;
  uint64_t v16 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v15;
  int64_t v81 = (unint64_t)(v16 + 63) >> 6;
  unint64_t v86 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
  void v76[2] = v6 + 16;
  uint64_t v85 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  uint64_t v79 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
  uint64_t v77 = v6;
  uint64_t v78 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v91 = a2;
  swift_bridgeObjectRetain();
  int64_t v19 = 0;
  while (v18)
  {
    uint64_t v99 = (v18 - 1) & v18;
    int64_t v100 = v19;
    unint64_t v20 = __clz(__rbit64(v18)) | (v19 << 6);
LABEL_24:
    uint64_t v25 = v91;
    uint64_t v26 = *(void *)(v91 + 48);
    uint64_t v27 = sub_1D5AB3600();
    uint64_t v101 = *(char **)(v27 - 8);
    uint64_t v92 = *((void *)v101 + 9);
    unint64_t v28 = (void (*)(void))*((void *)v101 + 2);
    uint64_t v105 = v101 + 16;
    uint64_t v106 = v28;
    uint64_t v29 = (uint64_t)v87;
    ((void (*)(char *, unint64_t, uint64_t))v28)(v87, v26 + v92 * v20, v27);
    uint64_t v30 = *(void *)(v25 + 56);
    uint64_t v31 = sub_1D5AB3B70();
    uint64_t v32 = *(void **)(v31 - 8);
    uint64_t v33 = v30 + v32[9] * v20;
    uint64_t v34 = v97;
    uint64_t v35 = (void (*)(uint64_t, uint64_t, uint64_t))v32[2];
    v35(v29 + *(int *)(v97 + 48), v33, v31);
    uint64_t v36 = v103;
    sub_1D59799AC(v29, v103, &qword_1EA725558);
    uint64_t v37 = *(int *)(v34 + 48);
    uint64_t v38 = &v102[v37];
    uint64_t v39 = v36 + v37;
    uint64_t v104 = v27;
    v106();
    uint64_t v94 = v39;
    uint64_t v95 = v32 + 2;
    v35((uint64_t)v38, v39, v31);
    uint64_t v40 = (void (*)(char *, uint64_t, uint64_t))v35;
    uint64_t v41 = sub_1D5AB3B60();
    uint64_t v43 = v42;
    int64_t v44 = (void (*)(char *, uint64_t))v32[1];
    uint64_t v93 = v32 + 1;
    v44(v38, v31);
    uint64_t v45 = v88;
    if (*(void *)(v88 + 16) && (unint64_t v46 = sub_1D5952584(v41, v43), (v47 & 1) != 0))
    {
      unint64_t v48 = *(void *)(v45 + 56) + *(void *)(v77 + 72) * v46;
      uint64_t v50 = v89;
      uint64_t v49 = (uint64_t)v90;
      (*(void (**)(char *, unint64_t, uint64_t))(v77 + 16))(v90, v48, v89);
      uint64_t v51 = 0;
    }
    else
    {
      uint64_t v51 = 1;
      uint64_t v50 = v89;
      uint64_t v49 = (uint64_t)v90;
    }
    unint64_t v52 = (void (**)(char *, uint64_t))v101;
    (*v86)(v49, v51, 1, v50);
    swift_bridgeObjectRelease();
    if ((*v85)(v49, 1, v50) == 1)
    {
      sub_1D594F53C(v49, &qword_1EA725560);
      v52[1](v102, v104);
    }
    else
    {
      uint64_t v101 = (char *)v44;
      (*v79)(v84, v49, v50);
      uint64_t v53 = v104;
      uint64_t v83 = v52[1];
      v83(v102, v104);
      uint64_t v54 = (uint64_t)v96;
      uint64_t v55 = &v96[*(int *)(v97 + 48)];
      ((void (*)(char *, uint64_t, uint64_t))v106)(v96, v103, v53);
      unint64_t v82 = v55;
      v40(v55, v94, v31);
      uint64_t v56 = sub_1D5AB38B0();
      uint64_t v58 = v57;
      uint64_t v59 = v98;
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v107 = v59;
      unint64_t v62 = sub_1D59525FC(v54);
      uint64_t v63 = *(void *)(v59 + 16);
      BOOL v64 = (v61 & 1) == 0;
      uint64_t v65 = v63 + v64;
      if (__OFADD__(v63, v64))
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
      char v66 = v61;
      if (*(void *)(v59 + 24) >= v65)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1D5976B54();
        }
      }
      else
      {
        sub_1D59735A0(v65, isUniquelyReferenced_nonNull_native);
        unint64_t v67 = sub_1D59525FC((uint64_t)v96);
        if ((v66 & 1) != (v68 & 1)) {
          goto LABEL_45;
        }
        unint64_t v62 = v67;
      }
      uint64_t v98 = v107;
      if (v66)
      {
        uint64_t v69 = (uint64_t *)(*(void *)(v107 + 56) + 16 * v62);
        swift_bridgeObjectRelease();
        *uint64_t v69 = v56;
        v69[1] = v58;
      }
      else
      {
        *(void *)(v107 + 8 * (v62 >> 6) + 64) |= 1 << v62;
        ((void (*)(unint64_t, char *, uint64_t))v106)(*(void *)(v98 + 48) + v62 * v92, v96, v104);
        uint64_t v70 = v98;
        uint64_t v71 = (uint64_t *)(*(void *)(v98 + 56) + 16 * v62);
        *uint64_t v71 = v56;
        v71[1] = v58;
        uint64_t v72 = *(void *)(v70 + 16);
        BOOL v73 = __OFADD__(v72, 1);
        uint64_t v74 = v72 + 1;
        if (v73) {
          goto LABEL_43;
        }
        *(void *)(v70 + 16) = v74;
      }
      swift_bridgeObjectRelease();
      v83(v96, v104);
      (*v78)(v84, v50);
      ((void (*)(char *, uint64_t))v101)(v82, v31);
    }
    unint64_t v18 = v99;
    int64_t v19 = v100;
    sub_1D594F53C(v103, &qword_1EA725558);
  }
  int64_t v21 = v19 + 1;
  if (__OFADD__(v19, 1)) {
    goto LABEL_42;
  }
  if (v21 >= v81)
  {
LABEL_40:
    swift_release();
    return v98;
  }
  unint64_t v22 = *(void *)(v80 + 8 * v21);
  int64_t v23 = v19 + 1;
  if (v22) {
    goto LABEL_23;
  }
  int64_t v23 = v19 + 2;
  if (v19 + 2 >= v81) {
    goto LABEL_40;
  }
  unint64_t v22 = *(void *)(v80 + 8 * v23);
  if (v22) {
    goto LABEL_23;
  }
  int64_t v23 = v19 + 3;
  if (v19 + 3 >= v81) {
    goto LABEL_40;
  }
  unint64_t v22 = *(void *)(v80 + 8 * v23);
  if (v22) {
    goto LABEL_23;
  }
  int64_t v23 = v19 + 4;
  if (v19 + 4 >= v81) {
    goto LABEL_40;
  }
  unint64_t v22 = *(void *)(v80 + 8 * v23);
  if (v22)
  {
LABEL_23:
    uint64_t v99 = (v22 - 1) & v22;
    int64_t v100 = v23;
    unint64_t v20 = __clz(__rbit64(v22)) + (v23 << 6);
    goto LABEL_24;
  }
  uint64_t v24 = v19 + 5;
  if (v19 + 5 >= v81) {
    goto LABEL_40;
  }
  unint64_t v22 = *(void *)(v80 + 8 * v24);
  if (v22)
  {
    int64_t v23 = v19 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v23 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v23 >= v81) {
      goto LABEL_40;
    }
    unint64_t v22 = *(void *)(v80 + 8 * v23);
    ++v24;
    if (v22) {
      goto LABEL_23;
    }
  }
LABEL_44:
  __break(1u);
LABEL_45:
  uint64_t result = sub_1D5AB5B50();
  __break(1u);
  return result;
}

uint64_t sub_1D59796E0(uint64_t a1, uint64_t *a2)
{
  return sub_1D5971E8C(a1, a2) & 1;
}

uint64_t dispatch thunk of WorkoutPlanScheduleConflictQuerying.workoutPlanClient.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of WorkoutPlanScheduleConflictQuerying.catalogClient.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of WorkoutPlanScheduleConflictQuerying.queryExistingModalityReferences(for:workout:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 24)
                                                                                     + **(int **)(a6 + 24));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_1D597984C;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1D597984C(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_1D5979948(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1D59799AC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

_OWORD *sub_1D5979A10(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1D5979A20()
{
  return objectdestroyTm_0(&qword_1EA7255A8);
}

uint64_t sub_1D5979A2C(uint64_t a1)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA7255A8) - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v8 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  int v9 = *(unsigned __int8 *)(v1 + 40);
  return sub_1D5972964(a1, v4, v5, v6, v9, v7, v8);
}

uint64_t sub_1D5979AB4(uint64_t a1)
{
  return sub_1D5988CF4(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1D5979ABC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4BE0);
    uint64_t v3 = sub_1D5AB57D0();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    while (1)
    {
      int v7 = *(unsigned __int8 *)(v6 + v4);
      sub_1D5AB5C20();
      sub_1D5AB5C30();
      uint64_t result = sub_1D5AB5C60();
      uint64_t v9 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v10 = result & ~v9;
      unint64_t v11 = v10 >> 6;
      uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
      uint64_t v13 = 1 << v10;
      uint64_t v14 = *(void *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(unsigned __int8 *)(v14 + v10) == v7) {
          goto LABEL_3;
        }
        uint64_t v15 = ~v9;
        while (1)
        {
          unint64_t v10 = (v10 + 1) & v15;
          unint64_t v11 = v10 >> 6;
          uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
          uint64_t v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0) {
            break;
          }
          if (*(unsigned __int8 *)(v14 + v10) == v7) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v5 + 8 * v11) = v13 | v12;
      *(unsigned char *)(v14 + v10) = v7;
      uint64_t v16 = *(void *)(v3 + 16);
      BOOL v17 = __OFADD__(v16, 1);
      uint64_t v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

void sub_1D5979C00(unint64_t a1)
{
  unint64_t v1 = a1;
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1D5AB5980();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3300);
      uint64_t v3 = sub_1D5AB57D0();
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1D5AB5980();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = MEMORY[0x1E4FBC870];
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = v3 + 56;
  uint64_t v42 = v5;
  if ((v1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = 0;
    unint64_t v40 = v1;
    while (1)
    {
      uint64_t v9 = MEMORY[0x1D9459C10](v8, v1);
      BOOL v10 = __OFADD__(v8++, 1);
      if (v10)
      {
        __break(1u);
        goto LABEL_37;
      }
      uint64_t v11 = v9;
      uint64_t v12 = sub_1D5AB55A0();
      uint64_t v13 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v14 = v12 & ~v13;
      unint64_t v15 = v14 >> 6;
      uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
      uint64_t v17 = 1 << v14;
      if (((1 << v14) & v16) != 0)
      {
        sub_1D5952F10();
        id v18 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
        char v19 = sub_1D5AB55B0();

        if (v19)
        {
LABEL_11:
          swift_unknownObjectRelease();
          unint64_t v1 = v40;
          goto LABEL_12;
        }
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
          char v22 = sub_1D5AB55B0();

          if (v22) {
            goto LABEL_11;
          }
        }
        unint64_t v1 = v40;
      }
      *(void *)(v7 + 8 * v15) = v17 | v16;
      *(void *)(*(void *)(v3 + 48) + 8 * v14) = v11;
      uint64_t v23 = *(void *)(v3 + 16);
      BOOL v10 = __OFADD__(v23, 1);
      uint64_t v24 = v23 + 1;
      if (v10) {
        goto LABEL_38;
      }
      *(void *)(v3 + 16) = v24;
LABEL_12:
      if (v8 == v42) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  uint64_t v41 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v41)
  {
    id v26 = *(id *)(v1 + 32 + 8 * v25);
    uint64_t v27 = sub_1D5AB55A0();
    uint64_t v28 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v29 = v27 & ~v28;
    unint64_t v30 = v29 >> 6;
    uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
    uint64_t v32 = 1 << v29;
    if (((1 << v29) & v31) != 0)
    {
      sub_1D5952F10();
      id v33 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
      char v34 = sub_1D5AB55B0();

      if (v34) {
        goto LABEL_24;
      }
      uint64_t v35 = ~v28;
      unint64_t v29 = (v29 + 1) & v35;
      unint64_t v30 = v29 >> 6;
      uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
      uint64_t v32 = 1 << v29;
      if ((v31 & (1 << v29)) != 0)
      {
        while (1)
        {
          id v36 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
          char v37 = sub_1D5AB55B0();

          if (v37) {
            break;
          }
          unint64_t v29 = (v29 + 1) & v35;
          unint64_t v30 = v29 >> 6;
          uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
          uint64_t v32 = 1 << v29;
          if ((v31 & (1 << v29)) == 0) {
            goto LABEL_32;
          }
        }
LABEL_24:

        uint64_t v5 = v42;
        goto LABEL_25;
      }
LABEL_32:
      uint64_t v5 = v42;
    }
    *(void *)(v7 + 8 * v30) = v32 | v31;
    *(void *)(*(void *)(v3 + 48) + 8 * v29) = v26;
    uint64_t v38 = *(void *)(v3 + 16);
    BOOL v10 = __OFADD__(v38, 1);
    uint64_t v39 = v38 + 1;
    if (v10) {
      goto LABEL_39;
    }
    *(void *)(v3 + 16) = v39;
LABEL_25:
    if (++v25 == v5) {
      return;
    }
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

uint64_t sub_1D5979F58(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB1D20();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  char v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7255B0);
    uint64_t v9 = sub_1D5AB57D0();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1D597A270(&qword_1EA7255B8, MEMORY[0x1E4F27990]);
      uint64_t v16 = sub_1D5AB4D90();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1D597A270(&qword_1EA7255C0, MEMORY[0x1E4F27990]);
          char v23 = sub_1D5AB4DD0();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1D597A270(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D597A2B8()
{
  return objectdestroyTm_0((uint64_t *)&unk_1EBDE3730);
}

uint64_t sub_1D597A2C4(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE3730);
  uint64_t v2 = *(void **)a1;
  char v3 = *(unsigned char *)(a1 + 8);
  return sub_1D5972714(v2, v3);
}

uint64_t sub_1D597A350(uint64_t result)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  char v3 = *(unsigned char *)(result + 8);
  uint64_t v4 = *(void *)result;
  char v5 = v3;
  if (v2) {
    return v2(&v4);
  }
  return result;
}

uint64_t sub_1D597A398@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_1D5AB4B70();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v8 = *(void (**)(char *, void, uint64_t))(v5 + 104);
  v8(v7, *MEMORY[0x1E4F389B8], v4);
  char v9 = sub_1D5AB4C00();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v5 + 8);
  v10(v7, v4);
  if (v9)
  {
    char v11 = 0;
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v8(v7, *MEMORY[0x1E4F389A0], v4);
    char v12 = sub_1D5AB4C00();
    v10(v7, v4);
    if (v12)
    {
      char v11 = 2;
    }
    else
    {
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      v8(v7, *MEMORY[0x1E4F38998], v4);
      char v13 = sub_1D5AB4C00();
      v10(v7, v4);
      if (v13) {
        char v11 = 1;
      }
      else {
        char v11 = 3;
      }
    }
  }
  *a2 = v11;
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

BOOL static NetworkInterfaceType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t NetworkInterfaceType.hash(into:)()
{
  return sub_1D5AB5C30();
}

uint64_t NetworkInterfaceType.hashValue.getter()
{
  return sub_1D5AB5C60();
}

BOOL sub_1D597A60C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unint64_t sub_1D597A624()
{
  unint64_t result = qword_1EA725618;
  if (!qword_1EA725618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725618);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for NetworkInterfaceType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for NetworkInterfaceType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D597A7D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

unsigned char *sub_1D597A7FC(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for NetworkInterfaceType()
{
  return &type metadata for NetworkInterfaceType;
}

void static ActiveWorkoutPlanUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for ActiveWorkoutPlanUpdated()
{
  return &type metadata for ActiveWorkoutPlanUpdated;
}

uint64_t PlaylistsUpdated.changeset.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB3150();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t PlaylistsUpdated.init(changeset:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB3150();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static PlaylistsUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for PlaylistsUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3150();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for PlaylistsUpdated(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB3150();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for PlaylistsUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3150();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for PlaylistsUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3150();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for PlaylistsUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3150();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for PlaylistsUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3150();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaylistsUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D597AB90);
}

uint64_t sub_1D597AB90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3150();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for PlaylistsUpdated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D597AC10);
}

uint64_t sub_1D597AC10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3150();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for PlaylistsUpdated()
{
  uint64_t result = qword_1EBDE4108;
  if (!qword_1EBDE4108) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D597ACCC()
{
  uint64_t result = sub_1D5AB3150();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *UpNextQueueClient.__allocating_init(eventHub:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = objc_allocWithZone(MEMORY[0x1E4F29268]);
  id v7 = a3;
  int v8 = (void *)sub_1D5AB4DE0();
  id v9 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v8, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  uint64_t v10 = sub_1D59968E8(v9, v7);
  uint64_t v11 = *(void *)(v10 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 16));
  if (*(unsigned char *)(v10 + 48) == 1)
  {
    *(unsigned char *)(v10 + 48) = 2;
    objc_msgSend(*(id *)(v10 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  type metadata accessor for UpNextQueueClient();
  char v12 = (void *)swift_allocObject();
  uint64_t v13 = swift_retain();
  uint64_t v14 = sub_1D597B3B4(v13, a1, a2, v12);

  swift_release_n();
  return v14;
}

uint64_t UpNextQueueClient.__allocating_init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D597AEBC(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D597B588);
}

uint64_t UpNextQueueClient.init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D597AEBC(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D597B4A4);
}

uint64_t sub_1D597AEBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = a6(a1, a4, a5, v6, ObjectType, a2, a3);
  swift_unknownObjectRelease();
  return v14;
}

uint64_t sub_1D597AF40()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    if (qword_1EBDE5420 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_1D5AB4B50();
    __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE5400);
    v3._countAndFlagsBits = 0xD000000000000070;
    v3._object = (void *)0x80000001D5AC6270;
    v4._object = (void *)0x80000001D5AC6360;
    v4._countAndFlagsBits = 0xD00000000000001FLL;
    Logger.trace(file:function:)(v3, v4);
    uint64_t v5 = *(void *)(v1 + 48);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v5 + 8))(ObjectType, &type metadata for UpNextQueueItemsUpdated, &protocol witness table for UpNextQueueItemsUpdated, ObjectType, v5);
    return swift_release();
  }
  return result;
}

uint64_t UpNextQueueClient.deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t UpNextQueueClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t UpNextQueueClient.queryUpNextQueue()()
{
  if (qword_1EBDE30F8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE1648);
  v2._countAndFlagsBits = 0xD000000000000070;
  v2._object = (void *)0x80000001D5AC6270;
  v3._object = (void *)0x80000001D5AC62F0;
  v3._countAndFlagsBits = 0xD000000000000012;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 292;
  uint64_t v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3190);
  uint64_t v8 = sub_1D597B6AC(&qword_1EBDE3198, &qword_1EBDE3190);
  unint64_t v9 = sub_1D597B608();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t UpNextQueueClient.processUpNextQueueUpdates(_:)(uint64_t a1)
{
  if (qword_1EBDE30F8 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE1648);
  v4._countAndFlagsBits = 0xD000000000000070;
  v4._object = (void *)0x80000001D5AC6270;
  v5._object = (void *)0x80000001D5AC6310;
  v5._countAndFlagsBits = 0xD00000000000001DLL;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v14 = 293;
  uint64_t v13 = a1;
  uint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v6 + 16);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725620);
  uint64_t v10 = sub_1D597B6AC(&qword_1EA725628, &qword_1EA725620);
  unint64_t v11 = sub_1D597B710();
  return v8(&v14, &v13, v9, v10, v11, ObjectType, v6);
}

uint64_t sub_1D597B348()
{
  return UpNextQueueClient.queryUpNextQueue()();
}

uint64_t sub_1D597B36C(uint64_t a1)
{
  return UpNextQueueClient.processUpNextQueueUpdates(_:)(a1);
}

uint64_t type metadata accessor for UpNextQueueClient()
{
  return self;
}

void *sub_1D597B3B4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[2] = a1;
  a4[3] = &protocol witness table for XPCClient;
  a4[4] = &protocol witness table for XPCClient;
  a4[5] = a2;
  a4[6] = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = a1;
  char v9 = 46;
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v9, (uint64_t)sub_1D597B860, v7, ObjectType, (uint64_t)&protocol witness table for XPCClient);
  swift_release_n();
  swift_unknownObjectRelease();
  return a4;
}

void *sub_1D597B4A4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  a4[2] = a1;
  a4[3] = a6;
  a4[4] = a7;
  a4[5] = a2;
  a4[6] = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = a1;
  char v13 = 46;
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v13, (uint64_t)sub_1D597B860, v11, ObjectType, a7);
  swift_release_n();
  swift_unknownObjectRelease();
  return a4;
}

void *sub_1D597B588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  type metadata accessor for UpNextQueueClient();
  char v13 = (void *)swift_allocObject();
  return sub_1D597B4A4(a1, a2, a3, v13, a5, a6, a7);
}

unint64_t sub_1D597B608()
{
  unint64_t result = qword_1EBDE31A0;
  if (!qword_1EBDE31A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBDE3190);
    sub_1D597B7B4(&qword_1EBDE2FA0, MEMORY[0x1E4F9CB40]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE31A0);
  }
  return result;
}

uint64_t sub_1D597B6AC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D597B710()
{
  unint64_t result = qword_1EA725630;
  if (!qword_1EA725630)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA725620);
    sub_1D597B7B4(&qword_1EA725638, MEMORY[0x1E4F9D1B8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725630);
  }
  return result;
}

uint64_t sub_1D597B7B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for UpNextQueueClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for UpNextQueueClient);
}

uint64_t dispatch thunk of UpNextQueueClient.__allocating_init(connection:eventHub:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1D597B828()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D597B860()
{
  return sub_1D597AF40();
}

unint64_t static AchievementConstants.templateSourceName.getter()
{
  return 0xD000000000000011;
}

uint64_t static AchievementConstants.maxNumberOfArchivedSessionForIncrementalEvaluation.getter()
{
  return 3;
}

double static AchievementConstants.minimumDurationThreshold.getter()
{
  return 300.0;
}

double static AchievementConstants.minimumPercentComplete.getter()
{
  return 0.5;
}

unint64_t static AchievementConstants.weeklyStreakAwardName.getter()
{
  return 0xD00000000000001CLL;
}

unint64_t static AchievementConstants.longestWeeklyStreakAwardName.getter()
{
  return 0xD000000000000023;
}

unint64_t static AchievementConstants.modalityAwardPrefix.getter()
{
  return 0xD000000000000027;
}

unint64_t static AchievementConstants.lifetimeAwardPrefix.getter()
{
  return 0xD00000000000001FLL;
}

unint64_t static AchievementConstants.firstOfModalityAwardPrefix.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t static AchievementConstants.weeklyStreakMinimumNotificationPresentationInterval.getter()
{
  return 90;
}

uint64_t static AchievementConstants.guidedString.getter()
{
  return 0x646564697547;
}

void sub_1D597B94C()
{
  qword_1EBDE3370 = (uint64_t)&unk_1F2DEB358;
}

uint64_t static AchievementConstants.personalizationIneligibleAwardNames.getter()
{
  if (qword_1EBDE3378 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t AchievementConstants.deinit()
{
  return v0;
}

uint64_t AchievementConstants.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AchievementConstants()
{
  return self;
}

uint64_t method lookup function for AchievementConstants(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AchievementConstants);
}

uint64_t RemoteBrowsingJournalProperty.hash(into:)(long long *a1)
{
  uint64_t v104 = a1;
  uint64_t v1 = sub_1D5AB3F80();
  uint64_t v102 = *(void *)(v1 - 8);
  uint64_t v103 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v101 = (char *)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1D5AB4050();
  uint64_t v99 = *(void *)(v3 - 8);
  uint64_t v100 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v98 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D5AB3B90();
  uint64_t v96 = *(void *)(v5 - 8);
  uint64_t v97 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v95 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D5AB2210();
  uint64_t v93 = *(void *)(v7 - 8);
  uint64_t v94 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v92 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D5AB2E90();
  uint64_t v90 = *(void *)(v9 - 8);
  uint64_t v91 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v89 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D5AB34D0();
  uint64_t v87 = *(void *)(v11 - 8);
  uint64_t v88 = v11;
  MEMORY[0x1F4188790](v11);
  unint64_t v86 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_1D5AB3010();
  uint64_t v84 = *(void *)(v85 - 8);
  MEMORY[0x1F4188790](v85);
  uint64_t v83 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_1D5AB2FF0();
  uint64_t v81 = *(void *)(v82 - 8);
  MEMORY[0x1F4188790](v82);
  uint64_t v80 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_1D5AB3BF0();
  uint64_t v78 = *(void *)(v79 - 8);
  MEMORY[0x1F4188790](v79);
  uint64_t v77 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_1D5AB49D0();
  uint64_t v75 = *(void *)(v76 - 8);
  MEMORY[0x1F4188790](v76);
  uint64_t v74 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_1D5AB4350();
  uint64_t v72 = *(void *)(v73 - 8);
  MEMORY[0x1F4188790](v73);
  uint64_t v71 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_1D5AB3770();
  uint64_t v69 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  char v68 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_1D5AB3750();
  uint64_t v66 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  uint64_t v65 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1D5AB39B0();
  uint64_t v63 = *(void *)(v64 - 8);
  MEMORY[0x1F4188790](v64);
  unint64_t v62 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1D5AB35D0();
  uint64_t v60 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  uint64_t v59 = (char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_1D5AB3B00();
  uint64_t v58 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  char v23 = (char *)&v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1D5AB3AA0();
  uint64_t v57 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  id v26 = (char *)&v55 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1D5AB2BE0();
  uint64_t v56 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)&v55 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1D5AB2490();
  uint64_t v31 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v33 = (char *)&v55 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for RemoteBrowsingJournalProperty();
  MEMORY[0x1F4188790](v34);
  uint64_t v36 = (uint64_t *)((char *)&v55 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D597CFFC(v105, (uint64_t)v36);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v38 = v56;
      (*(void (**)(char *, uint64_t *, uint64_t))(v56 + 32))(v29, v36, v27);
      sub_1D5AB5C30();
      sub_1D5981DB0(&qword_1EA7256A8, MEMORY[0x1E4F9C8B0]);
      sub_1D5AB4DA0();
      return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v29, v27);
    case 2u:
      sub_1D5AB5C30();
      sub_1D5AB32F0();
      sub_1D5AB4E60();
      goto LABEL_30;
    case 3u:
      uint64_t v39 = *v36;
      unint64_t v40 = v104;
      sub_1D5AB5C30();
      uint64_t v41 = (unint64_t *)&unk_1EA7256C8;
      uint64_t v42 = (uint64_t (*)(void))MEMORY[0x1E4F9EDF8];
      uint64_t v43 = (void (*)(uint64_t))MEMORY[0x1E4F9EDF8];
      uint64_t v44 = MEMORY[0x1E4F9EE00];
      goto LABEL_29;
    case 4u:
      uint64_t v45 = v57;
      (*(void (**)(char *, uint64_t *, uint64_t))(v57 + 32))(v26, v36, v24);
      sub_1D5AB5C30();
      sub_1D5981DB0(&qword_1EA7256A0, MEMORY[0x1E4F9E0A0]);
      sub_1D5AB4DA0();
      return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v26, v24);
    case 5u:
      uint64_t v39 = *v36;
      goto LABEL_9;
    case 6u:
      uint64_t v39 = *v36;
LABEL_9:
      unint64_t v40 = v104;
      sub_1D5AB5C30();
      uint64_t v41 = (unint64_t *)&unk_1EA727F60;
      uint64_t v42 = (uint64_t (*)(void))MEMORY[0x1E4F9E708];
      uint64_t v43 = (void (*)(uint64_t))MEMORY[0x1E4F9E708];
      uint64_t v44 = MEMORY[0x1E4F9E710];
      goto LABEL_29;
    case 7u:
      uint64_t v46 = *v36;
      uint64_t v47 = (uint64_t)v104;
      sub_1D5AB5C30();
      sub_1D597D378(v47, v46);
      goto LABEL_30;
    case 8u:
      uint64_t v48 = v58;
      uint64_t v49 = v55;
      (*(void (**)(char *, uint64_t *, uint64_t))(v58 + 32))(v23, v36, v55);
      sub_1D5AB5C30();
      sub_1D5981DB0(&qword_1EA728040, MEMORY[0x1E4F9E170]);
      sub_1D5AB4DA0();
      return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v23, v49);
    case 9u:
      uint64_t v50 = v60;
      uint64_t v51 = v59;
      uint64_t v52 = v61;
      (*(void (**)(char *, uint64_t *, uint64_t))(v60 + 32))(v59, v36, v61);
      sub_1D5AB5C30();
      uint64_t v53 = (unint64_t *)&unk_1EA725698;
      uint64_t v54 = (void (*)(uint64_t))MEMORY[0x1E4F9D770];
      goto LABEL_32;
    case 0xAu:
      uint64_t v50 = v63;
      uint64_t v51 = v62;
      uint64_t v52 = v64;
      (*(void (**)(char *, uint64_t *, uint64_t))(v63 + 32))(v62, v36, v64);
      sub_1D5AB5C30();
      uint64_t v53 = (unint64_t *)&unk_1EA725690;
      uint64_t v54 = (void (*)(uint64_t))MEMORY[0x1E4F9DF70];
      goto LABEL_32;
    case 0xBu:
      uint64_t v50 = v66;
      uint64_t v51 = v65;
      uint64_t v52 = v67;
      (*(void (**)(char *, uint64_t *, uint64_t))(v66 + 32))(v65, v36, v67);
      sub_1D5AB5C30();
      uint64_t v53 = (unint64_t *)&unk_1EA725688;
      uint64_t v54 = (void (*)(uint64_t))MEMORY[0x1E4F9DB88];
      goto LABEL_32;
    case 0xCu:
      uint64_t v50 = v69;
      uint64_t v51 = v68;
      uint64_t v52 = v70;
      (*(void (**)(char *, uint64_t *, uint64_t))(v69 + 32))(v68, v36, v70);
      sub_1D5AB5C30();
      uint64_t v53 = (unint64_t *)&unk_1EA725680;
      uint64_t v54 = (void (*)(uint64_t))MEMORY[0x1E4F9DBD0];
      goto LABEL_32;
    case 0xDu:
      uint64_t v50 = v72;
      uint64_t v51 = v71;
      uint64_t v52 = v73;
      (*(void (**)(char *, uint64_t *, uint64_t))(v72 + 32))(v71, v36, v73);
      sub_1D5AB5C30();
      uint64_t v53 = (unint64_t *)&unk_1EA725678;
      uint64_t v54 = (void (*)(uint64_t))MEMORY[0x1E4F9EA50];
      goto LABEL_32;
    case 0xEu:
      uint64_t v50 = v75;
      uint64_t v51 = v74;
      uint64_t v52 = v76;
      (*(void (**)(char *, uint64_t *, uint64_t))(v75 + 32))(v74, v36, v76);
      sub_1D5AB5C30();
      uint64_t v53 = (unint64_t *)&unk_1EA725208;
      uint64_t v54 = (void (*)(uint64_t))MEMORY[0x1E4F9EED0];
      goto LABEL_32;
    case 0xFu:
      uint64_t v39 = *v36;
      unint64_t v40 = v104;
      sub_1D5AB5C30();
      uint64_t v41 = (unint64_t *)&unk_1EA7256D0;
      uint64_t v42 = (uint64_t (*)(void))MEMORY[0x1E4F9DC50];
      uint64_t v43 = (void (*)(uint64_t))MEMORY[0x1E4F9DC50];
      uint64_t v44 = MEMORY[0x1E4F9DC58];
      goto LABEL_29;
    case 0x10u:
      uint64_t v50 = v78;
      uint64_t v51 = v77;
      uint64_t v52 = v79;
      (*(void (**)(char *, uint64_t *, uint64_t))(v78 + 32))(v77, v36, v79);
      sub_1D5AB5C30();
      uint64_t v53 = (unint64_t *)&unk_1EA725670;
      uint64_t v54 = (void (*)(uint64_t))MEMORY[0x1E4F9E380];
      goto LABEL_32;
    case 0x11u:
      uint64_t v50 = v81;
      uint64_t v51 = v80;
      uint64_t v52 = v82;
      (*(void (**)(char *, uint64_t *, uint64_t))(v81 + 32))(v80, v36, v82);
      sub_1D5AB5C30();
      uint64_t v53 = (unint64_t *)&unk_1EA727FF0;
      uint64_t v54 = (void (*)(uint64_t))MEMORY[0x1E4F9CE40];
      goto LABEL_32;
    case 0x12u:
      uint64_t v50 = v84;
      uint64_t v51 = v83;
      uint64_t v52 = v85;
      (*(void (**)(char *, uint64_t *, uint64_t))(v84 + 32))(v83, v36, v85);
      sub_1D5AB5C30();
      uint64_t v53 = (unint64_t *)&unk_1EA728070;
      uint64_t v54 = (void (*)(uint64_t))MEMORY[0x1E4F9CE78];
      goto LABEL_32;
    case 0x13u:
      uint64_t v51 = v86;
      uint64_t v50 = v87;
      uint64_t v52 = v88;
      (*(void (**)(char *, uint64_t *, uint64_t))(v87 + 32))(v86, v36, v88);
      sub_1D5AB5C30();
      uint64_t v53 = (unint64_t *)&unk_1EA725668;
      uint64_t v54 = (void (*)(uint64_t))MEMORY[0x1E4F9D538];
      goto LABEL_32;
    case 0x14u:
      sub_1D5AB5C30();
      sub_1D5AB4E60();
      return swift_bridgeObjectRelease();
    case 0x15u:
      uint64_t v51 = v89;
      uint64_t v50 = v90;
      uint64_t v52 = v91;
      (*(void (**)(char *, uint64_t *, uint64_t))(v90 + 32))(v89, v36, v91);
      sub_1D5AB5C30();
      uint64_t v53 = (unint64_t *)&unk_1EA725660;
      uint64_t v54 = (void (*)(uint64_t))MEMORY[0x1E4F9CB40];
      goto LABEL_32;
    case 0x16u:
      uint64_t v51 = v92;
      uint64_t v50 = v93;
      uint64_t v52 = v94;
      (*(void (**)(char *, uint64_t *, uint64_t))(v93 + 32))(v92, v36, v94);
      sub_1D5AB5C30();
      uint64_t v53 = (unint64_t *)&unk_1EA725658;
      uint64_t v54 = (void (*)(uint64_t))MEMORY[0x1E4F9C2B8];
      goto LABEL_32;
    case 0x17u:
      uint64_t v51 = v95;
      uint64_t v50 = v96;
      uint64_t v52 = v97;
      (*(void (**)(char *, uint64_t *, uint64_t))(v96 + 32))(v95, v36, v97);
      sub_1D5AB5C30();
      uint64_t v53 = (unint64_t *)&unk_1EA725650;
      uint64_t v54 = (void (*)(uint64_t))MEMORY[0x1E4F9E268];
      goto LABEL_32;
    case 0x18u:
      uint64_t v51 = v98;
      uint64_t v50 = v99;
      uint64_t v52 = v100;
      (*(void (**)(char *, uint64_t *, uint64_t))(v99 + 32))(v98, v36, v100);
      sub_1D5AB5C30();
      uint64_t v53 = (unint64_t *)&unk_1EA725648;
      uint64_t v54 = (void (*)(uint64_t))MEMORY[0x1E4F9E658];
      goto LABEL_32;
    case 0x19u:
      uint64_t v39 = *v36;
      unint64_t v40 = v104;
      sub_1D5AB5C30();
      uint64_t v41 = (unint64_t *)&unk_1EA7256D8;
      uint64_t v42 = (uint64_t (*)(void))MEMORY[0x1E4F9E7B8];
      uint64_t v43 = (void (*)(uint64_t))MEMORY[0x1E4F9E7B8];
      uint64_t v44 = MEMORY[0x1E4F9E7C0];
LABEL_29:
      sub_1D597D128(v40, v39, v42, v41, v43, v44);
LABEL_30:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 0x1Au:
      uint64_t v51 = v101;
      uint64_t v50 = v102;
      uint64_t v52 = v103;
      (*(void (**)(char *, uint64_t *, uint64_t))(v102 + 32))(v101, v36, v103);
      sub_1D5AB5C30();
      uint64_t v53 = (unint64_t *)&unk_1EA725640;
      uint64_t v54 = (void (*)(uint64_t))MEMORY[0x1E4F9E508];
LABEL_32:
      sub_1D5981DB0(v53, v54);
      sub_1D5AB4DA0();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v51, v52);
      break;
    default:
      (*(void (**)(char *, uint64_t *, uint64_t))(v31 + 32))(v33, v36, v30);
      sub_1D5AB5C30();
      sub_1D5981DB0(&qword_1EA7256B0, MEMORY[0x1E4F9C4B0]);
      sub_1D5AB4DA0();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v33, v30);
      break;
  }
  return result;
}

uint64_t type metadata accessor for RemoteBrowsingJournalProperty()
{
  uint64_t result = qword_1EBDE30B0;
  if (!qword_1EBDE30B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D597CFFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RemoteBrowsingJournalProperty();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t RemoteBrowsingJournalProperty.hashValue.getter()
{
  sub_1D5AB5C20();
  RemoteBrowsingJournalProperty.hash(into:)(v1);
  return sub_1D5AB5C60();
}

uint64_t sub_1D597D0A4()
{
  sub_1D5AB5C20();
  RemoteBrowsingJournalProperty.hash(into:)(v1);
  return sub_1D5AB5C60();
}

uint64_t sub_1D597D0E8()
{
  sub_1D5AB5C20();
  RemoteBrowsingJournalProperty.hash(into:)(v1);
  return sub_1D5AB5C60();
}

uint64_t sub_1D597D128(long long *a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v34 = a5;
  uint64_t v35 = a6;
  uint64_t v33 = a4;
  uint64_t v8 = a3(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v32 - v10;
  uint64_t v12 = *((void *)a1 + 8);
  long long v13 = a1[1];
  long long v36 = *a1;
  long long v37 = v13;
  long long v14 = a1[2];
  long long v15 = a1[3];
  v32[1] = a1;
  long long v38 = v14;
  long long v39 = v15;
  uint64_t v40 = v12;
  uint64_t v16 = sub_1D5AB5C60();
  uint64_t v17 = a2 + 56;
  uint64_t v18 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & *(void *)(a2 + 56);
  int64_t v21 = (unint64_t)(v18 + 63) >> 6;
  v32[3] = v9 + 16;
  v32[4] = v16;
  v32[2] = v9 + 8;
  uint64_t v22 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v24 = 0;
  int64_t v25 = 0;
  while (1)
  {
    if (v20)
    {
      unint64_t v26 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v27 = v26 | (v25 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v25++, 1)) {
      goto LABEL_19;
    }
    if (v25 >= v21)
    {
LABEL_17:
      swift_release();
      return sub_1D5AB5C30();
    }
    unint64_t v30 = *(void *)(v17 + 8 * v25);
    if (!v30) {
      break;
    }
LABEL_16:
    unint64_t v20 = (v30 - 1) & v30;
    unint64_t v27 = __clz(__rbit64(v30)) + (v25 << 6);
LABEL_5:
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v11, *(void *)(v22 + 48) + *(void *)(v9 + 72) * v27, v8);
    sub_1D5981DB0(v33, v34);
    uint64_t v28 = sub_1D5AB4D90();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v24 ^= v28;
  }
  int64_t v31 = v25 + 1;
  if (v25 + 1 >= v21) {
    goto LABEL_17;
  }
  unint64_t v30 = *(void *)(v17 + 8 * v31);
  if (v30)
  {
    ++v25;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v25 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v25 >= v21) {
      goto LABEL_17;
    }
    unint64_t v30 = *(void *)(v17 + 8 * v25);
    ++v31;
    if (v30) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_1D597D378(uint64_t a1, uint64_t a2)
{
  sub_1D5AB5C60();
  uint64_t v3 = a2 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v5 & *(void *)(a2 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  int64_t v10 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v10++, 1)) {
      goto LABEL_19;
    }
    if (v10 >= v7)
    {
LABEL_17:
      swift_release();
      return sub_1D5AB5C30();
    }
    uint64_t v13 = *(void *)(v3 + 8 * v10);
    if (!v13) {
      break;
    }
LABEL_16:
    uint64_t v6 = (v13 - 1) & v13;
LABEL_5:
    sub_1D5AB5C20();
    swift_bridgeObjectRetain();
    sub_1D5AB4E60();
    uint64_t v11 = sub_1D5AB5C60();
    uint64_t result = swift_bridgeObjectRelease();
    v9 ^= v11;
  }
  int64_t v14 = v10 + 1;
  if (v10 + 1 >= v7) {
    goto LABEL_17;
  }
  uint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13)
  {
    ++v10;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v10 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v10 >= v7) {
      goto LABEL_17;
    }
    uint64_t v13 = *(void *)(v3 + 8 * v10);
    ++v14;
    if (v13) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t _s13SeymourClient29RemoteBrowsingJournalPropertyO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v234 = a2;
  v235 = (uint64_t *)a1;
  uint64_t v193 = sub_1D5AB3F80();
  uint64_t v192 = *(void *)(v193 - 8);
  MEMORY[0x1F4188790](v193);
  uint64_t v166 = (char *)&v157 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1D5AB4050();
  uint64_t v231 = *(void *)(v3 - 8);
  uint64_t v232 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v175 = (char *)&v157 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v191 = sub_1D5AB3B90();
  uint64_t v190 = *(void *)(v191 - 8);
  MEMORY[0x1F4188790](v191);
  uint64_t v165 = (char *)&v157 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = sub_1D5AB2210();
  uint64_t v188 = *(void *)(v189 - 8);
  MEMORY[0x1F4188790](v189);
  uint64_t v164 = (char *)&v157 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v187 = sub_1D5AB2E90();
  uint64_t v186 = *(void *)(v187 - 8);
  MEMORY[0x1F4188790](v187);
  uint64_t v163 = (char *)&v157 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = sub_1D5AB34D0();
  uint64_t v184 = *(void *)(v185 - 8);
  MEMORY[0x1F4188790](v185);
  uint64_t v162 = (char *)&v157 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v183 = sub_1D5AB3010();
  uint64_t v182 = *(void *)(v183 - 8);
  MEMORY[0x1F4188790](v183);
  uint64_t v161 = (char *)&v157 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D5AB2FF0();
  uint64_t v229 = *(void *)(v10 - 8);
  uint64_t v230 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v174 = (char *)&v157 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1D5AB3BF0();
  uint64_t v227 = *(void *)(v12 - 8);
  uint64_t v228 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v173 = (char *)&v157 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1D5AB49D0();
  uint64_t v225 = *(void *)(v14 - 8);
  uint64_t v226 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v172 = (char *)&v157 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = sub_1D5AB4350();
  uint64_t v180 = *(void *)(v181 - 8);
  MEMORY[0x1F4188790](v181);
  uint64_t v160 = (char *)&v157 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1D5AB3770();
  uint64_t v223 = *(void *)(v17 - 8);
  uint64_t v224 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v171 = (char *)&v157 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1D5AB3750();
  uint64_t v221 = *(void *)(v19 - 8);
  uint64_t v222 = v19;
  MEMORY[0x1F4188790](v19);
  uint64_t v170 = (char *)&v157 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = sub_1D5AB39B0();
  uint64_t v178 = *(void *)(v179 - 8);
  MEMORY[0x1F4188790](v179);
  uint64_t v159 = (char *)&v157 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1D5AB35D0();
  uint64_t v219 = *(void *)(v22 - 8);
  uint64_t v220 = v22;
  MEMORY[0x1F4188790](v22);
  uint64_t v169 = (char *)&v157 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v177 = sub_1D5AB3B00();
  uint64_t v176 = *(void *)(v177 - 8);
  MEMORY[0x1F4188790](v177);
  v158 = (char *)&v157 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1D5AB3AA0();
  uint64_t v217 = *(void *)(v25 - 8);
  uint64_t v218 = v25;
  MEMORY[0x1F4188790](v25);
  uint64_t v168 = (char *)&v157 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1D5AB2BE0();
  uint64_t v215 = *(void *)(v27 - 8);
  uint64_t v216 = v27;
  MEMORY[0x1F4188790](v27);
  uint64_t v167 = (char *)&v157 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v214 = sub_1D5AB2490();
  uint64_t v213 = *(void *)(v214 - 8);
  MEMORY[0x1F4188790](v214);
  v157 = (char *)&v157 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v233 = type metadata accessor for RemoteBrowsingJournalProperty();
  uint64_t v30 = MEMORY[0x1F4188790](v233);
  uint64_t v203 = (char *)&v157 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x1F4188790](v30);
  uint64_t v211 = (uint64_t *)((char *)&v157 - v33);
  uint64_t v34 = MEMORY[0x1F4188790](v32);
  uint64_t v212 = (char *)&v157 - v35;
  uint64_t v36 = MEMORY[0x1F4188790](v34);
  uint64_t v202 = (char *)&v157 - v37;
  uint64_t v38 = MEMORY[0x1F4188790](v36);
  uint64_t v201 = (char *)&v157 - v39;
  uint64_t v40 = MEMORY[0x1F4188790](v38);
  uint64_t v200 = (char *)&v157 - v41;
  uint64_t v42 = MEMORY[0x1F4188790](v40);
  uint64_t v197 = (uint64_t *)((char *)&v157 - v43);
  uint64_t v44 = MEMORY[0x1F4188790](v42);
  uint64_t v199 = (char *)&v157 - v45;
  uint64_t v46 = MEMORY[0x1F4188790](v44);
  uint64_t v198 = (char *)&v157 - v47;
  uint64_t v48 = MEMORY[0x1F4188790](v46);
  uint64_t v210 = (char *)&v157 - v49;
  uint64_t v50 = MEMORY[0x1F4188790](v48);
  uint64_t v209 = (char *)&v157 - v51;
  uint64_t v52 = MEMORY[0x1F4188790](v50);
  uint64_t v205 = (uint64_t *)((char *)&v157 - v53);
  uint64_t v54 = MEMORY[0x1F4188790](v52);
  uint64_t v208 = (char *)&v157 - v55;
  uint64_t v56 = MEMORY[0x1F4188790](v54);
  uint64_t v196 = (char *)&v157 - v57;
  uint64_t v58 = MEMORY[0x1F4188790](v56);
  uint64_t v207 = (char *)&v157 - v59;
  uint64_t v60 = MEMORY[0x1F4188790](v58);
  uint64_t v206 = (char *)&v157 - v61;
  uint64_t v62 = MEMORY[0x1F4188790](v60);
  uint64_t v195 = (char *)&v157 - v63;
  uint64_t v64 = MEMORY[0x1F4188790](v62);
  uint64_t v204 = (char *)&v157 - v65;
  uint64_t v66 = MEMORY[0x1F4188790](v64);
  uint64_t v194 = (char *)&v157 - v67;
  uint64_t v68 = MEMORY[0x1F4188790](v66);
  uint64_t v70 = (uint64_t *)((char *)&v157 - v69);
  uint64_t v71 = MEMORY[0x1F4188790](v68);
  uint64_t v73 = (uint64_t *)((char *)&v157 - v72);
  uint64_t v74 = MEMORY[0x1F4188790](v71);
  uint64_t v76 = (uint64_t *)((char *)&v157 - v75);
  uint64_t v77 = MEMORY[0x1F4188790](v74);
  uint64_t v79 = (char *)&v157 - v78;
  uint64_t v80 = MEMORY[0x1F4188790](v77);
  uint64_t v82 = (uint64_t *)((char *)&v157 - v81);
  uint64_t v83 = MEMORY[0x1F4188790](v80);
  uint64_t v85 = (char *)&v157 - v84;
  uint64_t v86 = MEMORY[0x1F4188790](v83);
  uint64_t v88 = (char *)&v157 - v87;
  MEMORY[0x1F4188790](v86);
  uint64_t v90 = (char *)&v157 - v89;
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7256C0);
  uint64_t v92 = MEMORY[0x1F4188790](v91 - 8);
  uint64_t v94 = (char *)&v157 - ((v93 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = (uint64_t)&v94[*(int *)(v92 + 56)];
  sub_1D597CFFC((uint64_t)v235, (uint64_t)v94);
  v235 = (uint64_t *)v95;
  sub_1D597CFFC(v234, v95);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1D597CFFC((uint64_t)v94, (uint64_t)v88);
      uint64_t v97 = (uint64_t)v235;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v99 = v215;
        uint64_t v98 = v216;
        uint64_t v100 = v167;
        (*(void (**)(char *, uint64_t, uint64_t))(v215 + 32))(v167, v97, v216);
        char v101 = MEMORY[0x1D9456FB0](v88, v100);
        uint64_t v102 = *(void (**)(char *, uint64_t))(v99 + 8);
        v102(v100, v98);
        v102(v88, v98);
        goto LABEL_86;
      }
      (*(void (**)(char *, uint64_t))(v215 + 8))(v88, v216);
      goto LABEL_82;
    case 2u:
      sub_1D597CFFC((uint64_t)v94, (uint64_t)v85);
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_82;
      }
      uint64_t v103 = sub_1D5AB32F0();
      uint64_t v105 = v104;
      if (v103 == sub_1D5AB32F0() && v105 == v106) {
        goto LABEL_53;
      }
      char v107 = sub_1D5AB5AF0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v107 & 1) == 0) {
        goto LABEL_90;
      }
      goto LABEL_89;
    case 3u:
      sub_1D597CFFC((uint64_t)v94, (uint64_t)v82);
      uint64_t v108 = *v82;
      uint64_t v109 = v235;
      if (swift_getEnumCaseMultiPayload() != 3) {
        goto LABEL_54;
      }
      char v110 = sub_1D5A0F4F0(v108, *v109);
      goto LABEL_39;
    case 4u:
      sub_1D597CFFC((uint64_t)v94, (uint64_t)v79);
      uint64_t v111 = (uint64_t)v235;
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v113 = v217;
        uint64_t v112 = v218;
        uint64_t v114 = v168;
        (*(void (**)(char *, uint64_t, uint64_t))(v217 + 32))(v168, v111, v218);
        char v101 = MEMORY[0x1D9457E70](v79, v114);
        uint64_t v115 = *(void (**)(char *, uint64_t))(v113 + 8);
        v115(v114, v112);
        v115(v79, v112);
        goto LABEL_86;
      }
      (*(void (**)(char *, uint64_t))(v217 + 8))(v79, v218);
      goto LABEL_82;
    case 5u:
      sub_1D597CFFC((uint64_t)v94, (uint64_t)v76);
      uint64_t v135 = *v76;
      uint64_t v136 = v235;
      if (swift_getEnumCaseMultiPayload() != 5) {
        goto LABEL_54;
      }
      goto LABEL_38;
    case 6u:
      sub_1D597CFFC((uint64_t)v94, (uint64_t)v73);
      uint64_t v135 = *v73;
      uint64_t v136 = v235;
      if (swift_getEnumCaseMultiPayload() != 6) {
        goto LABEL_54;
      }
LABEL_38:
      char v110 = sub_1D5A0F934(v135, *v136);
      goto LABEL_39;
    case 7u:
      sub_1D597CFFC((uint64_t)v94, (uint64_t)v70);
      uint64_t v116 = *v70;
      uint64_t v117 = v235;
      if (swift_getEnumCaseMultiPayload() != 7) {
        goto LABEL_54;
      }
      char v110 = sub_1D5A0FD78(v116, *v117);
      goto LABEL_39;
    case 8u:
      uint64_t v90 = v194;
      sub_1D597CFFC((uint64_t)v94, (uint64_t)v194);
      uint64_t v137 = (uint64_t)v235;
      if (swift_getEnumCaseMultiPayload() == 8)
      {
        uint64_t v120 = v176;
        uint64_t v121 = v158;
        uint64_t v119 = v177;
        (*(void (**)(char *, uint64_t, uint64_t))(v176 + 32))(v158, v137, v177);
        char v122 = MEMORY[0x1D9457ED0](v90, v121);
        goto LABEL_85;
      }
      (*(void (**)(char *, uint64_t))(v176 + 8))(v90, v177);
      goto LABEL_82;
    case 9u:
      uint64_t v90 = v204;
      sub_1D597CFFC((uint64_t)v94, (uint64_t)v204);
      uint64_t v118 = (uint64_t)v235;
      if (swift_getEnumCaseMultiPayload() == 9)
      {
        uint64_t v120 = v219;
        uint64_t v119 = v220;
        uint64_t v121 = v169;
        (*(void (**)(char *, uint64_t, uint64_t))(v219 + 32))(v169, v118, v220);
        char v122 = sub_1D5AB35B0();
        goto LABEL_85;
      }
      uint64_t v153 = v219;
      uint64_t v152 = v220;
      goto LABEL_72;
    case 0xAu:
      uint64_t v90 = v195;
      sub_1D597CFFC((uint64_t)v94, (uint64_t)v195);
      uint64_t v138 = (uint64_t)v235;
      if (swift_getEnumCaseMultiPayload() == 10)
      {
        uint64_t v120 = v178;
        uint64_t v121 = v159;
        uint64_t v119 = v179;
        (*(void (**)(char *, uint64_t, uint64_t))(v178 + 32))(v159, v138, v179);
        char v122 = MEMORY[0x1D9457D90](v90, v121);
        goto LABEL_85;
      }
      (*(void (**)(char *, uint64_t))(v178 + 8))(v90, v179);
      goto LABEL_82;
    case 0xBu:
      uint64_t v90 = v206;
      sub_1D597CFFC((uint64_t)v94, (uint64_t)v206);
      uint64_t v123 = (uint64_t)v235;
      if (swift_getEnumCaseMultiPayload() == 11)
      {
        uint64_t v120 = v221;
        uint64_t v119 = v222;
        uint64_t v121 = v170;
        (*(void (**)(char *, uint64_t, uint64_t))(v221 + 32))(v170, v123, v222);
        char v122 = MEMORY[0x1D9457B30](v90, v121);
        goto LABEL_85;
      }
      uint64_t v153 = v221;
      uint64_t v152 = v222;
      goto LABEL_72;
    case 0xCu:
      uint64_t v90 = v207;
      sub_1D597CFFC((uint64_t)v94, (uint64_t)v207);
      uint64_t v124 = (uint64_t)v235;
      if (swift_getEnumCaseMultiPayload() == 12)
      {
        uint64_t v120 = v223;
        uint64_t v119 = v224;
        uint64_t v121 = v171;
        (*(void (**)(char *, uint64_t, uint64_t))(v223 + 32))(v171, v124, v224);
        char v122 = MEMORY[0x1D9457B50](v90, v121);
        goto LABEL_85;
      }
      uint64_t v153 = v223;
      uint64_t v152 = v224;
      goto LABEL_72;
    case 0xDu:
      uint64_t v90 = v196;
      sub_1D597CFFC((uint64_t)v94, (uint64_t)v196);
      uint64_t v139 = (uint64_t)v235;
      if (swift_getEnumCaseMultiPayload() == 13)
      {
        uint64_t v120 = v180;
        uint64_t v121 = v160;
        uint64_t v119 = v181;
        (*(void (**)(char *, uint64_t, uint64_t))(v180 + 32))(v160, v139, v181);
        char v122 = MEMORY[0x1D9458730](v90, v121);
        goto LABEL_85;
      }
      (*(void (**)(char *, uint64_t))(v180 + 8))(v90, v181);
      goto LABEL_82;
    case 0xEu:
      uint64_t v90 = v208;
      sub_1D597CFFC((uint64_t)v94, (uint64_t)v208);
      uint64_t v125 = (uint64_t)v235;
      if (swift_getEnumCaseMultiPayload() == 14)
      {
        uint64_t v120 = v225;
        uint64_t v119 = v226;
        uint64_t v121 = v172;
        (*(void (**)(char *, uint64_t, uint64_t))(v225 + 32))(v172, v125, v226);
        char v122 = MEMORY[0x1D9458D90](v90, v121);
        goto LABEL_85;
      }
      uint64_t v153 = v225;
      uint64_t v152 = v226;
      goto LABEL_72;
    case 0xFu:
      v126 = v205;
      sub_1D597CFFC((uint64_t)v94, (uint64_t)v205);
      uint64_t v127 = *v126;
      int v128 = v235;
      if (swift_getEnumCaseMultiPayload() != 15) {
        goto LABEL_54;
      }
      char v110 = sub_1D5A1001C(v127, *v128);
      goto LABEL_39;
    case 0x10u:
      uint64_t v90 = v209;
      sub_1D597CFFC((uint64_t)v94, (uint64_t)v209);
      uint64_t v129 = (uint64_t)v235;
      if (swift_getEnumCaseMultiPayload() == 16)
      {
        uint64_t v120 = v227;
        uint64_t v119 = v228;
        uint64_t v121 = v173;
        (*(void (**)(char *, uint64_t, uint64_t))(v227 + 32))(v173, v129, v228);
        char v122 = MEMORY[0x1D9457FC0](v90, v121);
        goto LABEL_85;
      }
      uint64_t v153 = v227;
      uint64_t v152 = v228;
      goto LABEL_72;
    case 0x11u:
      uint64_t v90 = v210;
      sub_1D597CFFC((uint64_t)v94, (uint64_t)v210);
      uint64_t v130 = (uint64_t)v235;
      if (swift_getEnumCaseMultiPayload() == 17)
      {
        uint64_t v120 = v229;
        uint64_t v119 = v230;
        uint64_t v121 = v174;
        (*(void (**)(char *, uint64_t, uint64_t))(v229 + 32))(v174, v130, v230);
        char v122 = MEMORY[0x1D94573D0](v90, v121);
        goto LABEL_85;
      }
      uint64_t v153 = v229;
      uint64_t v152 = v230;
      goto LABEL_72;
    case 0x12u:
      uint64_t v90 = v198;
      sub_1D597CFFC((uint64_t)v94, (uint64_t)v198);
      uint64_t v140 = (uint64_t)v235;
      if (swift_getEnumCaseMultiPayload() == 18)
      {
        uint64_t v120 = v182;
        uint64_t v121 = v161;
        uint64_t v119 = v183;
        (*(void (**)(char *, uint64_t, uint64_t))(v182 + 32))(v161, v140, v183);
        char v122 = MEMORY[0x1D94573F0](v90, v121);
        goto LABEL_85;
      }
      (*(void (**)(char *, uint64_t))(v182 + 8))(v90, v183);
      goto LABEL_82;
    case 0x13u:
      uint64_t v90 = v199;
      sub_1D597CFFC((uint64_t)v94, (uint64_t)v199);
      uint64_t v141 = (uint64_t)v235;
      if (swift_getEnumCaseMultiPayload() == 19)
      {
        uint64_t v120 = v184;
        uint64_t v121 = v162;
        uint64_t v119 = v185;
        (*(void (**)(char *, uint64_t, uint64_t))(v184 + 32))(v162, v141, v185);
        char v122 = MEMORY[0x1D9457880](v90, v121);
        goto LABEL_85;
      }
      (*(void (**)(char *, uint64_t))(v184 + 8))(v90, v185);
      goto LABEL_82;
    case 0x14u:
      unint64_t v142 = v197;
      sub_1D597CFFC((uint64_t)v94, (uint64_t)v197);
      uint64_t v144 = *v142;
      uint64_t v143 = v142[1];
      uint64_t v145 = v235;
      if (swift_getEnumCaseMultiPayload() != 20) {
        goto LABEL_54;
      }
      uint64_t v146 = *v145;
      uint64_t v147 = v145[1];
      if (v144 == v146 && v143 == v147)
      {
LABEL_53:
        swift_bridgeObjectRelease_n();
LABEL_89:
        sub_1D5980A04((uint64_t)v94);
        char v101 = 1;
        return v101 & 1;
      }
      char v156 = sub_1D5AB5AF0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v156) {
        goto LABEL_89;
      }
LABEL_90:
      sub_1D5980A04((uint64_t)v94);
LABEL_83:
      char v101 = 0;
      return v101 & 1;
    case 0x15u:
      uint64_t v90 = v200;
      sub_1D597CFFC((uint64_t)v94, (uint64_t)v200);
      uint64_t v148 = (uint64_t)v235;
      if (swift_getEnumCaseMultiPayload() == 21)
      {
        uint64_t v120 = v186;
        uint64_t v121 = v163;
        uint64_t v119 = v187;
        (*(void (**)(char *, uint64_t, uint64_t))(v186 + 32))(v163, v148, v187);
        char v122 = MEMORY[0x1D9457260](v90, v121);
        goto LABEL_85;
      }
      (*(void (**)(char *, uint64_t))(v186 + 8))(v90, v187);
      goto LABEL_82;
    case 0x16u:
      uint64_t v90 = v201;
      sub_1D597CFFC((uint64_t)v94, (uint64_t)v201);
      uint64_t v149 = (uint64_t)v235;
      if (swift_getEnumCaseMultiPayload() == 22)
      {
        uint64_t v120 = v188;
        uint64_t v121 = v164;
        uint64_t v119 = v189;
        (*(void (**)(char *, uint64_t, uint64_t))(v188 + 32))(v164, v149, v189);
        char v122 = MEMORY[0x1D94565C0](v90, v121);
        goto LABEL_85;
      }
      (*(void (**)(char *, uint64_t))(v188 + 8))(v90, v189);
      goto LABEL_82;
    case 0x17u:
      uint64_t v90 = v202;
      sub_1D597CFFC((uint64_t)v94, (uint64_t)v202);
      uint64_t v150 = (uint64_t)v235;
      if (swift_getEnumCaseMultiPayload() == 23)
      {
        uint64_t v120 = v190;
        uint64_t v121 = v165;
        uint64_t v119 = v191;
        (*(void (**)(char *, uint64_t, uint64_t))(v190 + 32))(v165, v150, v191);
        char v122 = sub_1D5AB3B80();
        goto LABEL_85;
      }
      (*(void (**)(char *, uint64_t))(v190 + 8))(v90, v191);
      goto LABEL_82;
    case 0x18u:
      uint64_t v90 = v212;
      sub_1D597CFFC((uint64_t)v94, (uint64_t)v212);
      uint64_t v131 = (uint64_t)v235;
      if (swift_getEnumCaseMultiPayload() == 24)
      {
        uint64_t v120 = v231;
        uint64_t v119 = v232;
        uint64_t v121 = v175;
        (*(void (**)(char *, uint64_t, uint64_t))(v231 + 32))(v175, v131, v232);
        char v122 = MEMORY[0x1D9458430](v90, v121);
        goto LABEL_85;
      }
      uint64_t v153 = v231;
      uint64_t v152 = v232;
LABEL_72:
      (*(void (**)(char *, uint64_t))(v153 + 8))(v90, v152);
      goto LABEL_82;
    case 0x19u:
      uint64_t v132 = v211;
      sub_1D597CFFC((uint64_t)v94, (uint64_t)v211);
      uint64_t v133 = *v132;
      uint64_t v134 = v235;
      if (swift_getEnumCaseMultiPayload() != 25)
      {
LABEL_54:
        swift_bridgeObjectRelease();
        goto LABEL_82;
      }
      char v110 = sub_1D5A10460(v133, *v134);
LABEL_39:
      char v101 = v110;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_86;
    case 0x1Au:
      uint64_t v90 = v203;
      sub_1D597CFFC((uint64_t)v94, (uint64_t)v203);
      uint64_t v151 = (uint64_t)v235;
      if (swift_getEnumCaseMultiPayload() == 26)
      {
        uint64_t v120 = v192;
        uint64_t v121 = v166;
        uint64_t v119 = v193;
        (*(void (**)(char *, uint64_t, uint64_t))(v192 + 32))(v166, v151, v193);
        char v122 = MEMORY[0x1D9458330](v90, v121);
        goto LABEL_85;
      }
      (*(void (**)(char *, uint64_t))(v192 + 8))(v90, v193);
      goto LABEL_82;
    default:
      sub_1D597CFFC((uint64_t)v94, (uint64_t)v90);
      uint64_t v96 = (uint64_t)v235;
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v120 = v213;
        uint64_t v121 = v157;
        uint64_t v119 = v214;
        (*(void (**)(char *, uint64_t, uint64_t))(v213 + 32))(v157, v96, v214);
        char v122 = MEMORY[0x1D9456840](v90, v121);
LABEL_85:
        char v101 = v122;
        v154 = *(void (**)(char *, uint64_t))(v120 + 8);
        v154(v121, v119);
        v154(v90, v119);
LABEL_86:
        sub_1D5980A04((uint64_t)v94);
        return v101 & 1;
      }
      (*(void (**)(char *, uint64_t))(v213 + 8))(v90, v214);
LABEL_82:
      sub_1D5981D50((uint64_t)v94);
      goto LABEL_83;
  }
}

uint64_t sub_1D597F0C4()
{
  return sub_1D5981DB0(&qword_1EA7256B8, (void (*)(uint64_t))type metadata accessor for RemoteBrowsingJournalProperty);
}

uint64_t *initializeBufferWithCopyOfBuffer for RemoteBrowsingJournalProperty(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = sub_1D5AB2490();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        uint64_t v10 = sub_1D5AB2BE0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
      case 5u:
      case 6u:
      case 7u:
      case 0xFu:
      case 0x19u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v11 = sub_1D5AB3AA0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
        uint64_t v12 = sub_1D5AB3B00();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        uint64_t v13 = sub_1D5AB35D0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xAu:
        uint64_t v14 = sub_1D5AB39B0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xBu:
        uint64_t v15 = sub_1D5AB3750();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xCu:
        uint64_t v16 = sub_1D5AB3770();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xDu:
        uint64_t v17 = sub_1D5AB4350();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xEu:
        uint64_t v18 = sub_1D5AB49D0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x10u:
        uint64_t v19 = sub_1D5AB3BF0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x11u:
        uint64_t v20 = sub_1D5AB2FF0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x12u:
        uint64_t v21 = sub_1D5AB3010();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x13u:
        uint64_t v22 = sub_1D5AB34D0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x14u:
        uint64_t v23 = a2[1];
        *a1 = *a2;
        a1[1] = v23;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0x15u:
        uint64_t v24 = sub_1D5AB2E90();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x16u:
        uint64_t v25 = sub_1D5AB2210();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x17u:
        uint64_t v26 = sub_1D5AB3B90();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v26 - 8) + 16))(a1, a2, v26);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x18u:
        uint64_t v27 = sub_1D5AB4050();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x1Au:
        uint64_t v28 = sub_1D5AB3F80();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v28 - 8) + 16))(a1, a2, v28);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for RemoteBrowsingJournalProperty(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = sub_1D5AB2490();
      goto LABEL_24;
    case 1:
      uint64_t v3 = sub_1D5AB2BE0();
      goto LABEL_24;
    case 3:
    case 5:
    case 6:
    case 7:
    case 15:
    case 20:
    case 25:
      return swift_bridgeObjectRelease();
    case 4:
      uint64_t v3 = sub_1D5AB3AA0();
      goto LABEL_24;
    case 8:
      uint64_t v3 = sub_1D5AB3B00();
      goto LABEL_24;
    case 9:
      uint64_t v3 = sub_1D5AB35D0();
      goto LABEL_24;
    case 10:
      uint64_t v3 = sub_1D5AB39B0();
      goto LABEL_24;
    case 11:
      uint64_t v3 = sub_1D5AB3750();
      goto LABEL_24;
    case 12:
      uint64_t v3 = sub_1D5AB3770();
      goto LABEL_24;
    case 13:
      uint64_t v3 = sub_1D5AB4350();
      goto LABEL_24;
    case 14:
      uint64_t v3 = sub_1D5AB49D0();
      goto LABEL_24;
    case 16:
      uint64_t v3 = sub_1D5AB3BF0();
      goto LABEL_24;
    case 17:
      uint64_t v3 = sub_1D5AB2FF0();
      goto LABEL_24;
    case 18:
      uint64_t v3 = sub_1D5AB3010();
      goto LABEL_24;
    case 19:
      uint64_t v3 = sub_1D5AB34D0();
      goto LABEL_24;
    case 21:
      uint64_t v3 = sub_1D5AB2E90();
      goto LABEL_24;
    case 22:
      uint64_t v3 = sub_1D5AB2210();
      goto LABEL_24;
    case 23:
      uint64_t v3 = sub_1D5AB3B90();
      goto LABEL_24;
    case 24:
      uint64_t v3 = sub_1D5AB4050();
      goto LABEL_24;
    case 26:
      uint64_t v3 = sub_1D5AB3F80();
LABEL_24:
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for RemoteBrowsingJournalProperty(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = sub_1D5AB2490();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_24;
    case 1u:
      uint64_t v7 = sub_1D5AB2BE0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      goto LABEL_24;
    case 3u:
    case 5u:
    case 6u:
    case 7u:
    case 0xFu:
    case 0x19u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      goto LABEL_24;
    case 4u:
      uint64_t v8 = sub_1D5AB3AA0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      goto LABEL_24;
    case 8u:
      uint64_t v9 = sub_1D5AB3B00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      goto LABEL_24;
    case 9u:
      uint64_t v10 = sub_1D5AB35D0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      goto LABEL_24;
    case 0xAu:
      uint64_t v11 = sub_1D5AB39B0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      goto LABEL_24;
    case 0xBu:
      uint64_t v12 = sub_1D5AB3750();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
      goto LABEL_24;
    case 0xCu:
      uint64_t v13 = sub_1D5AB3770();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
      goto LABEL_24;
    case 0xDu:
      uint64_t v14 = sub_1D5AB4350();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
      goto LABEL_24;
    case 0xEu:
      uint64_t v15 = sub_1D5AB49D0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
      goto LABEL_24;
    case 0x10u:
      uint64_t v16 = sub_1D5AB3BF0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
      goto LABEL_24;
    case 0x11u:
      uint64_t v17 = sub_1D5AB2FF0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
      goto LABEL_24;
    case 0x12u:
      uint64_t v18 = sub_1D5AB3010();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
      goto LABEL_24;
    case 0x13u:
      uint64_t v19 = sub_1D5AB34D0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
      goto LABEL_24;
    case 0x14u:
      uint64_t v20 = a2[1];
      *a1 = *a2;
      a1[1] = v20;
      swift_bridgeObjectRetain();
      goto LABEL_24;
    case 0x15u:
      uint64_t v21 = sub_1D5AB2E90();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
      goto LABEL_24;
    case 0x16u:
      uint64_t v22 = sub_1D5AB2210();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
      goto LABEL_24;
    case 0x17u:
      uint64_t v23 = sub_1D5AB3B90();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
      goto LABEL_24;
    case 0x18u:
      uint64_t v24 = sub_1D5AB4050();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
      goto LABEL_24;
    case 0x1Au:
      uint64_t v25 = sub_1D5AB3F80();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
LABEL_24:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithCopy for RemoteBrowsingJournalProperty(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1D5980A04((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = sub_1D5AB2490();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_25;
      case 1u:
        uint64_t v7 = sub_1D5AB2BE0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        goto LABEL_25;
      case 3u:
      case 5u:
      case 6u:
      case 7u:
      case 0xFu:
      case 0x19u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        goto LABEL_25;
      case 4u:
        uint64_t v8 = sub_1D5AB3AA0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        goto LABEL_25;
      case 8u:
        uint64_t v9 = sub_1D5AB3B00();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        goto LABEL_25;
      case 9u:
        uint64_t v10 = sub_1D5AB35D0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        goto LABEL_25;
      case 0xAu:
        uint64_t v11 = sub_1D5AB39B0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        goto LABEL_25;
      case 0xBu:
        uint64_t v12 = sub_1D5AB3750();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
        goto LABEL_25;
      case 0xCu:
        uint64_t v13 = sub_1D5AB3770();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        goto LABEL_25;
      case 0xDu:
        uint64_t v14 = sub_1D5AB4350();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
        goto LABEL_25;
      case 0xEu:
        uint64_t v15 = sub_1D5AB49D0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
        goto LABEL_25;
      case 0x10u:
        uint64_t v16 = sub_1D5AB3BF0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
        goto LABEL_25;
      case 0x11u:
        uint64_t v17 = sub_1D5AB2FF0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
        goto LABEL_25;
      case 0x12u:
        uint64_t v18 = sub_1D5AB3010();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
        goto LABEL_25;
      case 0x13u:
        uint64_t v19 = sub_1D5AB34D0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
        goto LABEL_25;
      case 0x14u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_25;
      case 0x15u:
        uint64_t v20 = sub_1D5AB2E90();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
        goto LABEL_25;
      case 0x16u:
        uint64_t v21 = sub_1D5AB2210();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
        goto LABEL_25;
      case 0x17u:
        uint64_t v22 = sub_1D5AB3B90();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
        goto LABEL_25;
      case 0x18u:
        uint64_t v23 = sub_1D5AB4050();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
        goto LABEL_25;
      case 0x1Au:
        uint64_t v24 = sub_1D5AB3F80();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
LABEL_25:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1D5980A04(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RemoteBrowsingJournalProperty();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for RemoteBrowsingJournalProperty(void *a1, const void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = sub_1D5AB2490();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      goto LABEL_22;
    case 1u:
      uint64_t v7 = sub_1D5AB2BE0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      goto LABEL_22;
    case 4u:
      uint64_t v8 = sub_1D5AB3AA0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      goto LABEL_22;
    case 8u:
      uint64_t v9 = sub_1D5AB3B00();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      goto LABEL_22;
    case 9u:
      uint64_t v10 = sub_1D5AB35D0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      goto LABEL_22;
    case 0xAu:
      uint64_t v11 = sub_1D5AB39B0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
      goto LABEL_22;
    case 0xBu:
      uint64_t v12 = sub_1D5AB3750();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
      goto LABEL_22;
    case 0xCu:
      uint64_t v13 = sub_1D5AB3770();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
      goto LABEL_22;
    case 0xDu:
      uint64_t v14 = sub_1D5AB4350();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
      goto LABEL_22;
    case 0xEu:
      uint64_t v15 = sub_1D5AB49D0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
      goto LABEL_22;
    case 0x10u:
      uint64_t v16 = sub_1D5AB3BF0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(a1, a2, v16);
      goto LABEL_22;
    case 0x11u:
      uint64_t v17 = sub_1D5AB2FF0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
      goto LABEL_22;
    case 0x12u:
      uint64_t v18 = sub_1D5AB3010();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, a2, v18);
      goto LABEL_22;
    case 0x13u:
      uint64_t v19 = sub_1D5AB34D0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v19 - 8) + 32))(a1, a2, v19);
      goto LABEL_22;
    case 0x15u:
      uint64_t v20 = sub_1D5AB2E90();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
      goto LABEL_22;
    case 0x16u:
      uint64_t v21 = sub_1D5AB2210();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
      goto LABEL_22;
    case 0x17u:
      uint64_t v22 = sub_1D5AB3B90();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 32))(a1, a2, v22);
      goto LABEL_22;
    case 0x18u:
      uint64_t v23 = sub_1D5AB4050();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 32))(a1, a2, v23);
      goto LABEL_22;
    case 0x1Au:
      uint64_t v24 = sub_1D5AB3F80();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(a1, a2, v24);
LABEL_22:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithTake for RemoteBrowsingJournalProperty(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1D5980A04((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = sub_1D5AB2490();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        uint64_t v7 = sub_1D5AB2BE0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v8 = sub_1D5AB3AA0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
        uint64_t v9 = sub_1D5AB3B00();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        uint64_t v10 = sub_1D5AB35D0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xAu:
        uint64_t v11 = sub_1D5AB39B0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xBu:
        uint64_t v12 = sub_1D5AB3750();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xCu:
        uint64_t v13 = sub_1D5AB3770();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xDu:
        uint64_t v14 = sub_1D5AB4350();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xEu:
        uint64_t v15 = sub_1D5AB49D0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x10u:
        uint64_t v16 = sub_1D5AB3BF0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(a1, a2, v16);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x11u:
        uint64_t v17 = sub_1D5AB2FF0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x12u:
        uint64_t v18 = sub_1D5AB3010();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, a2, v18);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x13u:
        uint64_t v19 = sub_1D5AB34D0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v19 - 8) + 32))(a1, a2, v19);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x15u:
        uint64_t v20 = sub_1D5AB2E90();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x16u:
        uint64_t v21 = sub_1D5AB2210();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x17u:
        uint64_t v22 = sub_1D5AB3B90();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 32))(a1, a2, v22);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x18u:
        uint64_t v23 = sub_1D5AB4050();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 32))(a1, a2, v23);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x1Au:
        uint64_t v24 = sub_1D5AB3F80();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(a1, a2, v24);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteBrowsingJournalProperty(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for RemoteBrowsingJournalProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_1D598184C()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1D598185C()
{
  uint64_t result = sub_1D5AB2490();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1D5AB2BE0();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_1D5AB3AA0();
      if (v3 <= 0x3F)
      {
        uint64_t result = sub_1D5AB3B00();
        if (v4 <= 0x3F)
        {
          uint64_t result = sub_1D5AB35D0();
          if (v5 <= 0x3F)
          {
            uint64_t result = sub_1D5AB39B0();
            if (v6 <= 0x3F)
            {
              uint64_t result = sub_1D5AB3750();
              if (v7 <= 0x3F)
              {
                uint64_t result = sub_1D5AB3770();
                if (v8 <= 0x3F)
                {
                  uint64_t result = sub_1D5AB4350();
                  if (v9 <= 0x3F)
                  {
                    uint64_t result = sub_1D5AB49D0();
                    if (v10 <= 0x3F)
                    {
                      uint64_t result = sub_1D5AB3BF0();
                      if (v11 <= 0x3F)
                      {
                        uint64_t result = sub_1D5AB2FF0();
                        if (v12 <= 0x3F)
                        {
                          uint64_t result = sub_1D5AB3010();
                          if (v13 <= 0x3F)
                          {
                            uint64_t result = sub_1D5AB34D0();
                            if (v14 <= 0x3F)
                            {
                              uint64_t result = sub_1D5AB2E90();
                              if (v15 <= 0x3F)
                              {
                                uint64_t result = sub_1D5AB2210();
                                if (v16 <= 0x3F)
                                {
                                  uint64_t result = sub_1D5AB3B90();
                                  if (v17 <= 0x3F)
                                  {
                                    uint64_t result = sub_1D5AB4050();
                                    if (v18 <= 0x3F)
                                    {
                                      uint64_t result = sub_1D5AB3F80();
                                      if (v19 <= 0x3F)
                                      {
                                        swift_initEnumMetadataMultiPayload();
                                        return 0;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1D5981D50(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7256C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5981DB0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t MusicTrackEnded.musicTrack.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB1E40();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t MusicTrackEnded.init(musicTrack:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB1E40();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static MusicTrackEnded.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for MusicTrackEnded(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB1E40();
  unint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for MusicTrackEnded(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB1E40();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for MusicTrackEnded(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB1E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for MusicTrackEnded(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB1E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for MusicTrackEnded(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB1E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for MusicTrackEnded(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB1E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for MusicTrackEnded(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D5982150);
}

uint64_t sub_1D5982150(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB1E40();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MusicTrackEnded(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D59821D0);
}

uint64_t sub_1D59821D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB1E40();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MusicTrackEnded()
{
  uint64_t result = qword_1EA7256E0;
  if (!qword_1EA7256E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D598228C()
{
  uint64_t result = sub_1D5AB1E40();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t RecentSearchTermsUpdated.changeset.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB3C00();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t RecentSearchTermsUpdated.init(changeset:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB3C00();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static RecentSearchTermsUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for RecentSearchTermsUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3C00();
  unint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for RecentSearchTermsUpdated(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB3C00();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for RecentSearchTermsUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3C00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for RecentSearchTermsUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3C00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for RecentSearchTermsUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3C00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for RecentSearchTermsUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3C00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for RecentSearchTermsUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D5982670);
}

uint64_t sub_1D5982670(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3C00();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for RecentSearchTermsUpdated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D59826F0);
}

uint64_t sub_1D59826F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3C00();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for RecentSearchTermsUpdated()
{
  uint64_t result = qword_1EBDE10E0;
  if (!qword_1EBDE10E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D59827AC()
{
  uint64_t result = sub_1D5AB3C00();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t GatedResource.__allocating_init(logger:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  GatedResource.init(logger:)(a1);
  return v2;
}

uint64_t GatedResource.init(logger:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for GatedResource.State();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v6 = (uint64_t *)((char *)&v12 - v5);
  uint64_t v7 = v1 + qword_1EBDE5EC0;
  uint64_t v8 = sub_1D5AB4B50();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, a1, v8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  sub_1D5AB5160();
  *unint64_t v6 = sub_1D5AB50B0();
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = sub_1D59845BC();
  (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  *(void *)(v1 + qword_1EBDE5EB8) = v10;
  return v1;
}

uint64_t type metadata accessor for GatedResource.State()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t GatedResource.deinit()
{
  uint64_t v1 = v0 + qword_1EBDE5EC0;
  uint64_t v2 = sub_1D5AB4B50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t GatedResource.__deallocating_deinit()
{
  GatedResource.deinit();
  return swift_deallocClassInstance();
}

uint64_t GatedResource.queueCount.getter()
{
  uint64_t v1 = *(void *)(v0 + qword_1EBDE5EB8);
  uint64_t v2 = v1 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v1 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_1D598463C(v2, (uint64_t)&v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_1D5982BEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for GatedResource.State();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v13 - v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v13 - v6, a1, v4);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v11 = *v7;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
    uint64_t v12 = sub_1D5AB5160();
    uint64_t v10 = MEMORY[0x1D94594D0](v11, v12);
    uint64_t result = swift_bridgeObjectRelease();
  }
  *(void *)a2 = v10;
  *(unsigned char *)(a2 + 8) = EnumCaseMultiPayload != 0;
  return result;
}

void sub_1D5982D50(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)a3 + 16);
  uint64_t v5 = (os_unfair_lock_s *)(a3 + ((*(unsigned int *)(*(void *)a3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  a1(v4);
  os_unfair_lock_unlock(v5);
}

void GatedResource.query()(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + qword_1EBDE5EB8);
  uint64_t v4 = v3 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v3 + 16);
  uint64_t v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_1D5984658(v4, a1);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_1D5982EDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for GatedResource.State();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v13 - v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)v13 - v8, a1, v6);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_1D5985730();
    swift_allocError();
    *uint64_t v11 = 0;
    return swift_willThrow();
  }
  if (EnumCaseMultiPayload == 1) {
    return swift_willThrow();
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(a2 - 8) + 32))(a3, v9, a2);
}

uint64_t GatedResource.fetch()(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  return MEMORY[0x1F4188298](sub_1D59830A0, 0, 0);
}

uint64_t sub_1D59830A0()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = v2;
  uint64_t v3 = *(void *)(v1 + 80);
  *uint64_t v2 = v0;
  v2[1] = sub_1D5983170;
  uint64_t v4 = v0[2];
  uint64_t v5 = v0[3];
  return MEMORY[0x1F4188160](v4, 0, 0, 0x29286863746566, 0xE700000000000000, sub_1D5984674, v5, v3);
}

uint64_t sub_1D5983170()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D59832A4, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1D59832A4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1D59832BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + qword_1EBDE5EB8);
  uint64_t v3 = (uint64_t *)(v2 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v2 + 16));
  uint64_t v4 = (os_unfair_lock_s *)(v2 + ((*(unsigned int *)(*(void *)v2 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v4);
  sub_1D5985714(v3);
  os_unfair_lock_unlock(v4);
}

void sub_1D5983364(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v33 = a2;
  uint64_t v5 = *(void *)(*(void *)a3 + 80);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v32 - v10;
  uint64_t v12 = type metadata accessor for GatedResource.State();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v15 = (uint64_t *)((char *)&v32 - v14);
  (*(void (**)(char *, uint64_t *, uint64_t))(v13 + 16))((char *)&v32 - v14, a1, v12);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v35 = *v15;
      __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
      sub_1D5AB5160();
      sub_1D5AB5140();
    }
    else
    {
      (*(void (**)(char *, uint64_t *, uint64_t))(v6 + 32))(v11, v15, v5);
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
      __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
      sub_1D5AB5160();
      sub_1D5AB5150();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    }
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(a1, v12);
    uint64_t v17 = *v15;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
    uint64_t v18 = sub_1D5AB5160();
    sub_1D5AB5AC0();
    uint64_t v19 = *(void *)(v18 - 8);
    swift_allocObject();
    sub_1D5AB5070();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v20, v33, v18);
    sub_1D5AB5100();
    uint64_t v21 = sub_1D5AB50A0();
    swift_bridgeObjectRelease();
    *a1 = v21;
    swift_storeEnumTagMultiPayload();
    uint64_t v35 = a3;
    uint64_t v22 = sub_1D5AB4E10();
    unint64_t v24 = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_1D5AB4B30();
    os_log_type_t v26 = sub_1D5AB5430();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v35 = v33;
      *(_DWORD *)uint64_t v27 = 136446722;
      swift_bridgeObjectRetain();
      uint64_t v34 = sub_1D5951500(v22, v24, &v35);
      sub_1D5AB5680();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v27 + 12) = 2082;
      uint64_t v34 = v5;
      swift_getMetatypeMetadata();
      uint64_t v28 = sub_1D5AB4E10();
      uint64_t v34 = sub_1D5951500(v28, v29, &v35);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 22) = 2048;
      uint64_t v30 = MEMORY[0x1D94594D0](v17, v18);
      swift_bridgeObjectRelease();
      if (__OFADD__(v30, 1))
      {
        __break(1u);
      }
      else
      {
        uint64_t v34 = v30 + 1;
        sub_1D5AB5680();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D5947000, v25, v26, "[%{public}s] GatedResource<%{public}s> is now at %ld", (uint8_t *)v27, 0x20u);
        uint64_t v31 = v33;
        swift_arrayDestroy();
        MEMORY[0x1D945AAC0](v31, -1, -1);
        MEMORY[0x1D945AAC0](v27, -1, -1);
      }
    }
    else
    {
      swift_bridgeObjectRelease_n();

      swift_bridgeObjectRelease_n();
    }
  }
}

void GatedResource.release(with:)()
{
  uint64_t v1 = *(void *)(v0 + qword_1EBDE5EB8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  sub_1D5AB5160();
  sub_1D5AB5100();
  sub_1D5AB5620();
  uint64_t v2 = (void *)(v1 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v1 + 16));
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_1D598467C(v2, &v5);
  os_unfair_lock_unlock(v3);
  if (v5)
  {
    MEMORY[0x1F4188790](v4);
    swift_getWitnessTable();
    sub_1D5AB4FA0();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1D5983A74@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v58 = a4;
  uint64_t v54 = a3;
  uint64_t v6 = *(void *)(*(void *)a2 + 80);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v8 = sub_1D5AB5CB0();
  uint64_t v56 = *(void *)(v8 - 8);
  uint64_t v57 = v8;
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v45 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v55 = (char *)&v45 - v15;
  uint64_t v16 = type metadata accessor for GatedResource.State();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (uint64_t *)((char *)&v45 - v18);
  (*(void (**)(char *, void *, uint64_t))(v17 + 16))((char *)&v45 - v18, a1, v16);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v21 = *(uint64_t (**)(uint64_t *, uint64_t))(v17 + 8);
  if (EnumCaseMultiPayload)
  {
    uint64_t result = v21(v19, v16);
    uint64_t v23 = 0;
    unint64_t v24 = v58;
  }
  else
  {
    uint64_t v48 = v7;
    uint64_t v49 = v14;
    uint64_t v51 = a1;
    uint64_t v52 = v11;
    v21(a1, v16);
    uint64_t v23 = *v19;
    uint64_t v60 = a2;
    uint64_t v47 = sub_1D5AB4E10();
    unint64_t v26 = v25;
    uint64_t v27 = v54;
    uint64_t v28 = v57;
    uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t))(v56 + 16);
    v53(v55, v54, v57);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    unint64_t v29 = sub_1D5AB4B30();
    os_log_type_t v30 = sub_1D5AB5430();
    int v31 = v30;
    BOOL v32 = os_log_type_enabled(v29, v30);
    uint64_t v50 = v6;
    if (v32)
    {
      uint64_t v33 = swift_slowAlloc();
      int v46 = v31;
      uint64_t v34 = v33;
      uint64_t v45 = swift_slowAlloc();
      uint64_t v60 = v45;
      *(_DWORD *)uint64_t v34 = 136447234;
      swift_bridgeObjectRetain();
      uint64_t v59 = sub_1D5951500(v47, v26, &v60);
      sub_1D5AB5680();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v34 + 12) = 2082;
      uint64_t v47 = v34 + 14;
      uint64_t v59 = v6;
      swift_getMetatypeMetadata();
      uint64_t v35 = sub_1D5AB4E10();
      uint64_t v59 = sub_1D5951500(v35, v36, &v60);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 22) = 2048;
      uint64_t v47 = v34 + 24;
      uint64_t v37 = sub_1D5AB5160();
      uint64_t v38 = MEMORY[0x1D94594D0](v23, v37);
      swift_bridgeObjectRelease();
      uint64_t v59 = v38;
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 32) = 2160;
      uint64_t v59 = 1752392040;
      sub_1D5AB5680();
      *(_WORD *)(v34 + 42) = 2080;
      uint64_t v48 = v16;
      uint64_t v39 = v29;
      uint64_t v40 = v55;
      v53(v49, (uint64_t)v55, v57);
      uint64_t v41 = sub_1D5AB4E10();
      uint64_t v59 = sub_1D5951500(v41, v42, &v60);
      uint64_t v28 = v57;
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v40, v28);
      _os_log_impl(&dword_1D5947000, v29, (os_log_type_t)v46, "[%{public}s] GatedResource<%{public}s> (%ld) released with %{mask.hash}s", (uint8_t *)v34, 0x34u);
      uint64_t v43 = v45;
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v43, -1, -1);
      MEMORY[0x1D945AAC0](v34, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v55, v28);
    }
    uint64_t v44 = v52;
    v53((char *)v52, v27, v28);
    if (swift_getEnumCaseMultiPayload() == 1) {
      *uint64_t v51 = *v44;
    }
    else {
      (*(void (**)(void *, void *))(*(void *)(v50 - 8) + 32))(v51, v44);
    }
    uint64_t result = swift_storeEnumTagMultiPayload();
    unint64_t v24 = v58;
  }
  *unint64_t v24 = v23;
  return result;
}

uint64_t sub_1D598405C(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v3 = sub_1D5AB5160();
  return sub_1D59966A4(a2, v3);
}

Swift::Void __swiftcall GatedResource.reset()()
{
  uint64_t v1 = *(void *)(v0 + qword_1EBDE5EB8);
  uint64_t v2 = (uint64_t *)(v1 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v1 + 16));
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_1D59846B4(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_1D5984174(uint64_t *a1)
{
  uint64_t v2 = type metadata accessor for GatedResource.State();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (id *)((char *)&v11 - v4);
  v6._object = (void *)0x80000001D5AC64A0;
  v6._countAndFlagsBits = 0xD000000000000070;
  v7._countAndFlagsBits = 0x29287465736572;
  v7._object = (void *)0xE700000000000000;
  Logger.trace(file:function:)(v6, v7);
  (*(void (**)(id *, uint64_t *, uint64_t))(v3 + 16))(v5, a1, v2);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload) {
    return swift_bridgeObjectRelease();
  }
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(a1, v2);
  }
  else
  {
    uint64_t v10 = *(void (**)(uint64_t *, uint64_t))(v3 + 8);
    v10(a1, v2);
    v10((uint64_t *)v5, v2);
  }
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  sub_1D5AB5160();
  *a1 = sub_1D5AB50B0();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1D598435C()
{
  return GatedResource.queueCount.getter();
}

void sub_1D5984384(uint64_t a1@<X8>)
{
}

uint64_t sub_1D59843A8(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_1D5984480;
  v5[4] = *v4;
  return MEMORY[0x1F4188298](sub_1D59830A0, 0, 0);
}

uint64_t sub_1D5984480()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void sub_1D5984574()
{
}

void sub_1D5984598()
{
}

uint64_t sub_1D59845BC()
{
  return sub_1D5AB5850();
}

uint64_t sub_1D598463C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D5982BEC(a1, a2);
}

uint64_t sub_1D5984658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D5982EDC(a1, *(void *)(v2 + 16), a2);
}

void sub_1D5984674(uint64_t a1)
{
  sub_1D59832BC(a1, v1);
}

uint64_t sub_1D598467C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1D5983A74(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1D5984698(uint64_t a1)
{
  return sub_1D598405C(a1, *(void *)(v1 + 24));
}

uint64_t sub_1D59846B4(uint64_t *a1)
{
  return sub_1D5984174(a1);
}

uint64_t sub_1D59846D4()
{
  uint64_t result = sub_1D5AB4B50();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for GatedResource()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for GatedResource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for GatedResource);
}

uint64_t dispatch thunk of GatedResource.__allocating_init(logger:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1D59847B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 16);
}

uint64_t sub_1D59847BC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

char *sub_1D5984860(char *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(char **)a2;
    *(void *)uint64_t v3 = *(void *)a2;
    uint64_t v3 = &v8[(unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    unsigned int v9 = a2[v5];
    unsigned int v10 = v9 - 3;
    if (v9 >= 3)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_19;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_19:
          int v13 = (v12 | (v10 << (8 * v5))) + 3;
          unsigned int v9 = v12 + 3;
          if (v5 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 2)
    {
      (*(void (**)(char *))(v4 + 16))(a1);
      v3[v5] = 2;
    }
    else if (v9 == 1)
    {
      uint64_t v14 = *(void *)a2;
      id v15 = *(id *)a2;
      *(void *)uint64_t v3 = v14;
      v3[v5] = 1;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      a1[v5] = 0;
      swift_bridgeObjectRetain();
    }
  }
  return v3;
}

void sub_1D5984A08(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 8) {
    unint64_t v2 = 8;
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 3;
  if (v3 >= 3)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 3;
        unsigned int v3 = v6 + 3;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 2)
  {
    (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
  else if (v3 == 1)
  {
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

void *sub_1D5984B18(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 3;
  if (v5 >= 3)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 3;
        unsigned int v5 = v8 + 3;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 2)
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    char v12 = 2;
  }
  else
  {
    if (v5 != 1)
    {
      *a1 = *(void *)a2;
      *((unsigned char *)a1 + v4) = 0;
      swift_bridgeObjectRetain();
      return a1;
    }
    uint64_t v10 = *(void *)a2;
    id v11 = *(id *)a2;
    *a1 = v10;
    char v12 = 1;
  }
  *((unsigned char *)a1 + v4) = v12;
  return a1;
}

unsigned __int8 *sub_1D5984C7C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 3;
    if (v8 >= 3)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 3;
          unsigned int v8 = v11 + 3;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 2)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    else if (v8 == 1)
    {
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 3;
    if (v13 >= 3)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_30;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_30;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_30;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_30:
          int v17 = (v16 | (v14 << (8 * v7))) + 3;
          unsigned int v13 = v16 + 3;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 2)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      char v20 = 2;
    }
    else
    {
      if (v13 != 1)
      {
        *(void *)a1 = *(void *)a2;
        a1[v7] = 0;
        swift_bridgeObjectRetain();
        return a1;
      }
      uint64_t v18 = *(void **)a2;
      id v19 = v18;
      *(void *)a1 = v18;
      char v20 = 1;
    }
    a1[v7] = v20;
  }
  return a1;
}

void *sub_1D5984ECC(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 3;
  if (v5 >= 3)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 3;
        unsigned int v5 = v8 + 3;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 2)
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v10 = 2;
  }
  else if (v5 == 1)
  {
    *a1 = *(void *)a2;
    char v10 = 1;
  }
  else
  {
    char v10 = 0;
    *a1 = *(void *)a2;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_1D598501C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 3;
    if (v8 >= 3)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 3;
          unsigned int v8 = v11 + 3;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 2)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    else if (v8 == 1)
    {
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 3;
    if (v13 >= 3)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_30;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_30;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_30;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_30:
          int v17 = (v16 | (v14 << (8 * v7))) + 3;
          unsigned int v13 = v16 + 3;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 2)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 2;
    }
    else if (v13 == 1)
    {
      *(void *)a1 = *(void *)a2;
      char v18 = 1;
    }
    else
    {
      char v18 = 0;
      *(void *)a1 = *(void *)a2;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_1D5985260(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 8;
  if (*(void *)(v3 + 64) > 8uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 253) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 3) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 254;
}

void sub_1D5985394(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v8 = a2 - 254;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1D598555CLL);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1D5985584(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 8;
  if (*(void *)(v2 + 64) > 8uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 3;
  if (v4 >= 3)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 3;
        LODWORD(v4) = v7 + 3;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_1D598563C(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    size_t v4 = 8;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 2)
  {
    unsigned int v5 = a2 - 3;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 3;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 3;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

void sub_1D5985714(uint64_t *a1)
{
  sub_1D5983364(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_1D5985730()
{
  unint64_t result = qword_1EA725700;
  if (!qword_1EA725700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725700);
  }
  return result;
}

uint64_t sub_1D5985784@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(v4 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v4 + *MEMORY[0x1E4FBBAB0]) - 8) + 16))(a2, v3);
}

void *PrivacyPreferenceClient.__allocating_init(eventHub:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = objc_allocWithZone(MEMORY[0x1E4F29268]);
  id v7 = a3;
  unsigned int v8 = (void *)sub_1D5AB4DE0();
  id v9 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v8, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  uint64_t v10 = sub_1D59968E8(v9, v7);
  uint64_t v11 = *(void *)(v10 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 16));
  if (*(unsigned char *)(v10 + 48) == 1)
  {
    *(unsigned char *)(v10 + 48) = 2;
    objc_msgSend(*(id *)(v10 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  type metadata accessor for PrivacyPreferenceClient();
  int v12 = (void *)swift_allocObject();
  uint64_t v13 = swift_retain();
  unsigned int v14 = sub_1D5988D24(v13, a1, a2, v12);

  swift_release_n();
  return v14;
}

uint64_t PrivacyPreferenceClient.__allocating_init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5985980(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D5989140);
}

uint64_t PrivacyPreferenceClient.init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5985980(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D5988F38);
}

uint64_t sub_1D5985980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = a6(a1, a4, a5, v6, ObjectType, a2, a3);
  swift_unknownObjectRelease();
  return v14;
}

uint64_t sub_1D5985A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t a6, uint64_t (*a7)(void))
{
  uint64_t v12 = a4(0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v18 - v13;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v16 = a5(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, a1, v16);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 8))(v14, v12, a6, ObjectType, a3);
  return sub_1D5989F48((uint64_t)v14, a7);
}

uint64_t PrivacyPreferenceClient.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t PrivacyPreferenceClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PrivacyPreferenceClient.queryNoticePrivacyPreference()()
{
  return sub_1D5986698(247, MEMORY[0x1E4F9DF70], MEMORY[0x1E4F9DF60], MEMORY[0x1E4F9DF68]);
}

uint64_t PrivacyPreferenceClient.fetchNoticePrivacyPreference(ignoreCaches:)(char a1)
{
  return sub_1D5985C60(a1, 249, MEMORY[0x1E4F9DF70], MEMORY[0x1E4F9DF60], MEMORY[0x1E4F9DF68]);
}

uint64_t PrivacyPreferenceClient.updateNoticePrivacyPreference(_:)(uint64_t a1)
{
  return sub_1D59865B8(a1, 251, MEMORY[0x1E4F9DF70], MEMORY[0x1E4F9DF60], MEMORY[0x1E4F9DF68]);
}

uint64_t PrivacyPreferenceClient.queryOptInPrivacyPreference()()
{
  return sub_1D5986698(248, MEMORY[0x1E4F9DBD0], MEMORY[0x1E4F9DBC0], MEMORY[0x1E4F9DBC8]);
}

uint64_t PrivacyPreferenceClient.fetchOptInPrivacyPreference(ignoreCaches:)(char a1)
{
  return sub_1D5985C60(a1, 250, MEMORY[0x1E4F9DBD0], MEMORY[0x1E4F9DBC0], MEMORY[0x1E4F9DBC8]);
}

uint64_t sub_1D5985C60(char a1, __int16 a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5)
{
  uint64_t v11 = *(void *)(v5 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v17 = a2;
  char v16 = a1;
  uint64_t v13 = *(uint64_t (**)(__int16 *, char *, void, uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 32);
  uint64_t v14 = a3(0);
  return v13(&v17, &v16, MEMORY[0x1E4FBB390], v14, MEMORY[0x1E4F9F0E8], MEMORY[0x1E4F9F0F0], a4, a5, ObjectType, v11);
}

uint64_t PrivacyPreferenceClient.updateOptInPrivacyPreference(_:)(uint64_t a1)
{
  return sub_1D59865B8(a1, 252, MEMORY[0x1E4F9DBD0], MEMORY[0x1E4F9DBC0], MEMORY[0x1E4F9DBC8]);
}

uint64_t PrivacyPreferenceClient.queryAllPrivacyAcknowledgements()()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v8 = 253;
  uint64_t v3 = *(uint64_t (**)(__int16 *, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v1 + 24);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7252F0);
  unint64_t v5 = sub_1D596DE5C();
  unint64_t v6 = sub_1D596DED0();
  return v3(&v8, v4, v5, v6, ObjectType, v1);
}

uint64_t PrivacyPreferenceClient.queryPrivacyAcknowledgement(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v33 = a3;
  uint64_t v32 = a2;
  uint64_t v34 = a4;
  uint64_t v35 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7252E8);
  uint64_t v30 = *(void *)(v5 - 8);
  uint64_t v31 = v5;
  uint64_t v6 = *(void *)(v30 + 64);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  unint64_t v29 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  id v9 = (char *)&v27 - v8;
  uint64_t v10 = *(void *)(v4 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v36 = 253;
  uint64_t v12 = *(void (**)(__int16 *, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v10 + 24);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7252F0);
  unint64_t v14 = sub_1D596DE5C();
  unint64_t v15 = sub_1D596DED0();
  uint64_t v28 = v9;
  v12(&v36, v13, v14, v15, ObjectType, v10);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v35;
  uint64_t v17 = v32;
  *(void *)(v16 + 24) = v32;
  char v18 = v33 & 1;
  *(unsigned char *)(v16 + 32) = v33 & 1;
  id v19 = v29;
  uint64_t v20 = v30;
  uint64_t v21 = v9;
  uint64_t v22 = v31;
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v29, v21, v31);
  unint64_t v23 = (*(unsigned __int8 *)(v20 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v24 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v24 + v23, v19, v22);
  unint64_t v25 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v24 + ((v6 + v23 + 7) & 0xFFFFFFFFFFFFFFF8));
  *unint64_t v25 = sub_1D598920C;
  v25[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v16;
  sub_1D5989390(v35, v17, v18);
  sub_1D5AB37B0();
  sub_1D5AB4540();
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v28, v22);
}

uint64_t sub_1D5986070@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, char a3@<W3>, uint64_t a4@<X8>)
{
  uint64_t v35 = a4;
  char v6 = a3 & 1;
  uint64_t v7 = sub_1D5AB37B0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  int v33 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v31 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v32 = (char *)&v31 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725740);
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  char v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v31 - v19;
  sub_1D5989390(a1, a2, v6);
  uint64_t v21 = swift_bridgeObjectRetain();
  uint64_t v22 = sub_1D59899D0(v21, a1, a2, v6);
  sub_1D59891FC(a1, a2, v6);
  sub_1D5971104(v22, (uint64_t)v20);
  swift_release();
  uint64_t v34 = v20;
  sub_1D596E6CC((uint64_t)v20, (uint64_t)v18, &qword_1EA725740);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v18, 1, v7) == 1)
  {
    sub_1D594F53C((uint64_t)v18, &qword_1EA725740);
    sub_1D5989390(a1, a2, v6);
    sub_1D5AB3790();
    unint64_t v23 = v33;
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v33, v13, v7);
    unint64_t v24 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v25 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v25 + v24, v23, v7);
    sub_1D5AB4550();
  }
  else
  {
    unint64_t v26 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    uint64_t v27 = v32;
    v26(v32, v18, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v27, v7);
    unint64_t v28 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v29 = swift_allocObject();
    v26((char *)(v29 + v28), v13, v7);
    sub_1D5AB4550();
    uint64_t v13 = v27;
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  return sub_1D594F53C((uint64_t)v34, &qword_1EA725740);
}

uint64_t PrivacyPreferenceClient.insertPrivacyAcknowledgement(for:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = sub_1D5AB37B0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5989390(a1, a2, a3 & 1);
  sub_1D5AB3790();
  uint64_t v11 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v15 = 254;
  (*(void (**)(__int16 *, char *, uint64_t, void, void, uint64_t, uint64_t))(v11 + 16))(&v15, v10, v7, MEMORY[0x1E4F9DC38], MEMORY[0x1E4F9DC40], ObjectType, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t PrivacyPreferenceClient.insertPersonalizationPrivacyPreference(_:)(uint64_t a1)
{
  return sub_1D59865B8(a1, 255, MEMORY[0x1E4F9EA50], MEMORY[0x1E4F9EA40], MEMORY[0x1E4F9EA48]);
}

uint64_t sub_1D59865B8(uint64_t a1, __int16 a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *(void *)(v5 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v16 = a2;
  uint64_t v12 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 16);
  uint64_t v13 = a3(0);
  return v12(&v16, a1, v13, a4, a5, ObjectType, v10);
}

uint64_t PrivacyPreferenceClient.queryPersonalizationPrivacyPreference()()
{
  return sub_1D5986698(256, MEMORY[0x1E4F9EA50], MEMORY[0x1E4F9EA40], MEMORY[0x1E4F9EA48]);
}

uint64_t sub_1D5986698(__int16 a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(v4 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v14 = a1;
  uint64_t v11 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 24);
  uint64_t v12 = a2(0);
  return v11(&v14, v12, a3, a4, ObjectType, v9);
}

uint64_t sub_1D5986744(uint64_t a1, uint64_t a2)
{
  return sub_1D5986BB8(a1, a2, 247, MEMORY[0x1E4F9DF70], MEMORY[0x1E4F9DF60], MEMORY[0x1E4F9DF68]);
}

uint64_t sub_1D5986770(char a1, uint64_t a2, uint64_t a3)
{
  return sub_1D5986820(a1, a2, a3, 249, MEMORY[0x1E4F9DF70], MEMORY[0x1E4F9DF60], MEMORY[0x1E4F9DF68]);
}

uint64_t sub_1D598679C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D5986AD8(a1, a2, a3, 251, MEMORY[0x1E4F9DF70], MEMORY[0x1E4F9DF60], MEMORY[0x1E4F9DF68]);
}

uint64_t sub_1D59867C8(uint64_t a1, uint64_t a2)
{
  return sub_1D5986BB8(a1, a2, 248, MEMORY[0x1E4F9DBD0], MEMORY[0x1E4F9DBC0], MEMORY[0x1E4F9DBC8]);
}

uint64_t sub_1D59867F4(char a1, uint64_t a2, uint64_t a3)
{
  return sub_1D5986820(a1, a2, a3, 250, MEMORY[0x1E4F9DBD0], MEMORY[0x1E4F9DBC0], MEMORY[0x1E4F9DBC8]);
}

uint64_t sub_1D5986820(char a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t (*a5)(void), uint64_t a6, uint64_t a7)
{
  uint64_t v13 = *(void *)(*(void *)v7 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v19 = a4;
  char v18 = a1;
  __int16 v15 = *(uint64_t (**)(__int16 *, char *, void, uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 32);
  uint64_t v16 = a5(0);
  return v15(&v19, &v18, MEMORY[0x1E4FBB390], v16, MEMORY[0x1E4F9F0E8], MEMORY[0x1E4F9F0F0], a6, a7, ObjectType, v13);
}

uint64_t sub_1D59868EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D5986AD8(a1, a2, a3, 252, MEMORY[0x1E4F9DBD0], MEMORY[0x1E4F9DBC0], MEMORY[0x1E4F9DBC8]);
}

uint64_t sub_1D5986918@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  return PrivacyPreferenceClient.queryPrivacyAcknowledgement(for:)(a1, a2, a3 & 1, a4);
}

uint64_t sub_1D5986940(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = sub_1D5AB37B0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v3;
  sub_1D5989390(a1, a2, a3 & 1);
  sub_1D5AB3790();
  uint64_t v12 = *(void *)(v11 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v16 = 254;
  (*(void (**)(__int16 *, char *, uint64_t, void, void, uint64_t, uint64_t))(v12 + 16))(&v16, v10, v7, MEMORY[0x1E4F9DC38], MEMORY[0x1E4F9DC40], ObjectType, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1D5986AAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D5986AD8(a1, a2, a3, 255, MEMORY[0x1E4F9EA50], MEMORY[0x1E4F9EA40], MEMORY[0x1E4F9EA48]);
}

uint64_t sub_1D5986AD8(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t (*a5)(void), uint64_t a6, uint64_t a7)
{
  uint64_t v13 = *(void *)(*(void *)v7 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v18 = a4;
  uint64_t v15 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 16);
  uint64_t v16 = a5(0);
  return v15(&v18, a1, v16, a6, a7, ObjectType, v13);
}

uint64_t sub_1D5986B8C(uint64_t a1, uint64_t a2)
{
  return sub_1D5986BB8(a1, a2, 256, MEMORY[0x1E4F9EA50], MEMORY[0x1E4F9EA40], MEMORY[0x1E4F9EA48]);
}

uint64_t sub_1D5986BB8(uint64_t a1, uint64_t a2, __int16 a3, uint64_t (*a4)(void), uint64_t a5, uint64_t a6)
{
  uint64_t v11 = *(void *)(*(void *)v6 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v16 = a3;
  uint64_t v13 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 24);
  uint64_t v14 = a4(0);
  return v13(&v16, v14, a5, a6, ObjectType, v11);
}

uint64_t type metadata accessor for PrivacyPreferenceClient()
{
  return self;
}

uint64_t sub_1D5986C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5987020(a1, a2, a3, a4, a5, (uint64_t *)&unk_1EBDE4E30, (uint64_t)&unk_1F2DEDBF8, (uint64_t)sub_1D5989658);
}

uint64_t sub_1D5986CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5987020(a1, a2, a3, a4, a5, &qword_1EBDE4E10, (uint64_t)&unk_1F2DEDBA8, (uint64_t)sub_1D5989638);
}

uint64_t sub_1D5986CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5987020(a1, a2, a3, a4, a5, &qword_1EBDE4E10, (uint64_t)&unk_1F2DEE008, (uint64_t)sub_1D598A13C);
}

uint64_t sub_1D5986D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5987020(a1, a2, a3, a4, a5, &qword_1EBDE4E10, (uint64_t)&unk_1F2DEDFB8, (uint64_t)sub_1D598A104);
}

uint64_t sub_1D5986D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5987020(a1, a2, a3, a4, a5, &qword_1EBDE4E10, (uint64_t)&unk_1F2DEDF68, (uint64_t)sub_1D598A0CC);
}

uint64_t sub_1D5986D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5987020(a1, a2, a3, a4, a5, &qword_1EBDE4E10, (uint64_t)&unk_1F2DEDF18, (uint64_t)sub_1D598A08C);
}

uint64_t sub_1D5986D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5987020(a1, a2, a3, a4, a5, &qword_1EBDE4E10, (uint64_t)&unk_1F2DEDEC8, (uint64_t)sub_1D598A054);
}

uint64_t sub_1D5986DA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5987020(a1, a2, a3, a4, a5, &qword_1EBDE4E10, (uint64_t)&unk_1F2DEDE78, (uint64_t)sub_1D598A01C);
}

uint64_t sub_1D5986DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5987020(a1, a2, a3, a4, a5, &qword_1EBDE4E10, (uint64_t)&unk_1F2DEDE28, (uint64_t)sub_1D5989FE4);
}

uint64_t sub_1D5986DF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5987020(a1, a2, a3, a4, a5, &qword_1EBDE4E10, (uint64_t)&unk_1F2DEDDD8, (uint64_t)sub_1D5989FAC);
}

uint64_t sub_1D5986E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5987020(a1, a2, a3, a4, a5, (uint64_t *)&unk_1EBDE2FC0, (uint64_t)&unk_1F2DEDB08, (uint64_t)sub_1D59895D4);
}

uint64_t sub_1D5986E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5987020(a1, a2, a3, a4, a5, &qword_1EBDE4E10, (uint64_t)&unk_1F2DEDB58, (uint64_t)sub_1D59895E8);
}

uint64_t sub_1D5986E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5987020(a1, a2, a3, a4, a5, (uint64_t *)&unk_1EBDE2FE0, (uint64_t)&unk_1F2DED838, (uint64_t)sub_1D598940C);
}

uint64_t sub_1D5986E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5987020(a1, a2, a3, a4, a5, (uint64_t *)&unk_1EBDE2FE0, (uint64_t)&unk_1F2DEDAB8, (uint64_t)sub_1D598959C);
}

uint64_t sub_1D5986EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5987020(a1, a2, a3, a4, a5, (uint64_t *)&unk_1EBDE2FD0, (uint64_t)&unk_1F2DED7E8, (uint64_t)sub_1D59893EC);
}

uint64_t sub_1D5986EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5987020(a1, a2, a3, a4, a5, &qword_1EBDE38A8, (uint64_t)&unk_1F2DEDA68, (uint64_t)sub_1D598957C);
}

uint64_t sub_1D5986F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5987020(a1, a2, a3, a4, a5, &qword_1EBDE4E10, (uint64_t)&unk_1F2DEDA18, (uint64_t)sub_1D5989544);
}

uint64_t sub_1D5986F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5987020(a1, a2, a3, a4, a5, &qword_1EBDE4E10, (uint64_t)&unk_1F2DED9C8, (uint64_t)sub_1D598950C);
}

uint64_t sub_1D5986F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5987020(a1, a2, a3, a4, a5, &qword_1EBDE4E10, (uint64_t)&unk_1F2DED978, (uint64_t)sub_1D59894D4);
}

uint64_t sub_1D5986F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5987020(a1, a2, a3, a4, a5, &qword_1EA725250, (uint64_t)&unk_1F2DED798, (uint64_t)sub_1D59893D0);
}

uint64_t sub_1D5986FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5987020(a1, a2, a3, a4, a5, &qword_1EBDE2FF8, (uint64_t)&unk_1F2DED8D8, (uint64_t)sub_1D59894A8);
}

uint64_t sub_1D5986FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5987020(a1, a2, a3, a4, a5, &qword_1EBDE2FF8, (uint64_t)&unk_1F2DED928, (uint64_t)sub_1D59894BC);
}

uint64_t sub_1D5986FF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5987020(a1, a2, a3, a4, a5, &qword_1EA725708, (uint64_t)&unk_1F2DED888, (uint64_t)sub_1D5989480);
}

uint64_t sub_1D5987020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8)
{
  __swift_instantiateConcreteTypeFromMangledName(a6);
  uint64_t v13 = (void (*)(uint64_t, void *))sub_1D5AB45B0();
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a4;
  v14[3] = a5;
  v14[4] = a1;
  v14[5] = a2;
  swift_retain();
  swift_retain();
  v13(a8, v14);
  swift_release();
  return swift_release();
}

void sub_1D59870DC(void *a1, char a2, void (*a3)(void **), uint64_t a4, void (*a5)(void **), uint64_t a6)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __int16 v18 = a1;
  if (a2)
  {
    char v19 = 1;
    id v17 = a1;
    a5(&v18);
    sub_1D5989670(a1, 1, MEMORY[0x1E4FBC8F8]);
  }
  else
  {
    swift_unknownObjectRetain();
    a3(&v18);
    uint64_t v15 = (void (*)(uint64_t (*)(), uint64_t))sub_1D5AB45B0();
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = a5;
    *(void *)(v16 + 24) = a6;
    swift_retain();
    v15(sub_1D598A1CC, v16);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    swift_unknownObjectRelease();
  }
}

void sub_1D59872A4(void *a1, char a2, void (*a3)(uint64_t), uint64_t a4, void (*a5)(void **), uint64_t a6)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    char v19 = a1;
    char v20 = 1;
    id v18 = a1;
    a5(&v19);
    sub_1D596EA00(a1, 1);
  }
  else
  {
    a3(v13);
    uint64_t v16 = (void (*)(uint64_t (*)(), uint64_t))sub_1D5AB45B0();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a5;
    *(void *)(v17 + 24) = a6;
    swift_retain();
    v16(sub_1D598A1CC, v17);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  }
}

uint64_t sub_1D5987440(void *a1, char a2, void (*a3)(uint64_t), uint64_t a4, void (*a5)(void *), uint64_t a6, uint64_t *a7, uint64_t *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(a7);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (void (**)(void *))((char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(a8);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v27 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    *uint64_t v17 = a1;
    swift_storeEnumTagMultiPayload();
    id v26 = a1;
    v27(v17);
    return sub_1D594F53C((uint64_t)v17, a7);
  }
  else
  {
    a3(v20);
    unint64_t v23 = (void (*)(uint64_t, uint64_t))sub_1D5AB45B0();
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v27;
    *(void *)(v24 + 24) = v28;
    swift_retain();
    v23(a10, v24);
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v22, v18);
  }
}

void sub_1D5987628(void *a1, char a2, void (*a3)(uint64_t), uint64_t a4, void (*a5)(void **), uint64_t a6)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7252E8);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v19 = a1;
    char v20 = 1;
    id v18 = a1;
    a5(&v19);
    sub_1D596EA00(a1, 1);
  }
  else
  {
    a3(v13);
    uint64_t v16 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_1D5AB45B0();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a5;
    *(void *)(v17 + 24) = a6;
    swift_retain();
    v16(sub_1D597A350, v17);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  }
}

uint64_t sub_1D59877C4(void *a1, char a2, void (*a3)(void **), uint64_t a4, void (*a5)(void *), uint64_t a6)
{
  uint64_t v21 = a5;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725730);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (void (**)(void *))((char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725738);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    *uint64_t v12 = a1;
    swift_storeEnumTagMultiPayload();
    id v20 = a1;
    v21(v12);
    return sub_1D594F53C((uint64_t)v12, &qword_1EA725730);
  }
  else
  {
    uint64_t v22 = a1;
    swift_bridgeObjectRetain();
    a3(&v22);
    uint64_t v17 = (void (*)(uint64_t (*)(), uint64_t))sub_1D5AB45B0();
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v21;
    *(void *)(v18 + 24) = a6;
    swift_retain();
    v17(sub_1D59894CC, v18);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    return swift_bridgeObjectRelease();
  }
}

void sub_1D59879E0(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, void (*a4)(uint64_t *), uint64_t a5)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE2FE0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D596E6CC(a1, (uint64_t)v20, &qword_1EBDE3310);
  if (v21)
  {
    uint64_t v13 = *(void **)&v20[0];
    uint64_t v18 = *(void *)&v20[0];
    char v19 = 1;
    id v14 = *(id *)&v20[0];
    a4(&v18);
  }
  else
  {
    sub_1D5950B78(v20, (uint64_t)&v18);
    a2(&v18);
    uint64_t v15 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_1D5AB45B0();
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = a4;
    *(void *)(v16 + 24) = a5;
    swift_retain();
    v15(sub_1D59895C8, v16);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v18);
  }
}

uint64_t sub_1D5987BA8(void *a1, char a2, void (*a3)(uint64_t), uint64_t a4, void (*a5)(void *), uint64_t a6)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE2FC0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v20[0] = a1;
    char v21 = 1;
    id v19 = a1;
    a5(v20);
    return sub_1D594F53C((uint64_t)v20, &qword_1EBDE3310);
  }
  else
  {
    a3(v13);
    uint64_t v16 = (void (*)(uint64_t (*)(), uint64_t))sub_1D5AB45B0();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a5;
    *(void *)(v17 + 24) = a6;
    swift_retain();
    v16(sub_1D5989604, v17);
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  }
}

void sub_1D5987D48(void *a1, char a2, void (*a3)(__int16 *), uint64_t a4, void (*a5)(void **), uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(a7);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v25 = a1;
    char v26 = 1;
    id v20 = a1;
    a5(&v25);
    sub_1D596EA00(a1, 1);
  }
  else
  {
    __int16 v22 = (unsigned __int16)a1 & 0x1FF;
    char v23 = BYTE2(a1) & 1;
    char v24 = BYTE3(a1);
    a3(&v22);
    uint64_t v18 = (void (*)(uint64_t, uint64_t))sub_1D5AB45B0();
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = a5;
    *(void *)(v19 + 24) = a6;
    swift_retain();
    v18(a9, v19);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
}

void sub_1D5987EF4(void *a1, char a2, void (*a3)(char *), uint64_t a4, void (*a5)(void **), uint64_t a6)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v20 = a1;
    char v21 = 1;
    id v17 = a1;
    a5(&v20);
    sub_1D596EA00(a1, 1);
  }
  else
  {
    char v19 = a1 & 1;
    a3(&v19);
    uint64_t v15 = (void (*)(uint64_t (*)(), uint64_t))sub_1D5AB45B0();
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = a5;
    *(void *)(v16 + 24) = a6;
    swift_retain();
    v15(sub_1D598A1CC, v16);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

void sub_1D598809C(void *a1, char a2, void (*a3)(void **), uint64_t a4, void (*a5)(void **), uint64_t a6)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1;
  if (a2)
  {
    char v19 = 1;
    id v17 = a1;
    a5(&v18);
    sub_1D5989670(a1, 1, MEMORY[0x1E4FBC898]);
  }
  else
  {
    swift_bridgeObjectRetain();
    a3(&v18);
    uint64_t v15 = (void (*)(uint64_t (*)(), uint64_t))sub_1D5AB45B0();
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = a5;
    *(void *)(v16 + 24) = a6;
    swift_retain();
    v15(sub_1D598A1CC, v16);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    swift_bridgeObjectRelease();
  }
}

void sub_1D5988264(uint64_t a1, void (*a2)(char *), uint64_t a3, void (*a4)(id *), uint64_t a5)
{
  char v23 = a4;
  uint64_t v24 = a5;
  uint64_t v21 = a3;
  __int16 v22 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D5AB34D0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725538);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (id *)((char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D596E6CC(a1, (uint64_t)v16, &qword_1EA725538);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    id v25 = *v16;
    id v17 = v25;
    char v26 = 1;
    id v18 = v25;
    v23(&v25);
  }
  else
  {
    (*(void (**)(char *, id *, uint64_t))(v11 + 32))(v13, v16, v10);
    v22(v13);
    char v19 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_1D5AB45B0();
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v23;
    *(void *)(v20 + 24) = v24;
    swift_retain();
    v19(sub_1D59893E0, v20);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

void sub_1D5988530(uint64_t a1, void (*a2)(char *), uint64_t a3, void (*a4)(id *), uint64_t a5)
{
  char v23 = a4;
  uint64_t v24 = a5;
  v21[1] = a3;
  __int16 v22 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE2FF0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D5AB24D0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3308);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (id *)((char *)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D596E6CC(a1, (uint64_t)v16, &qword_1EBDE3308);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v25[0] = *v16;
    id v17 = v25[0];
    v25[1] = 0;
    char v26 = 1;
    id v18 = v25[0];
    v23(v25);
  }
  else
  {
    (*(void (**)(char *, id *, uint64_t))(v11 + 32))(v13, v16, v10);
    v22(v13);
    char v19 = (void (*)(uint64_t (*)(), uint64_t))sub_1D5AB45B0();
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v23;
    *(void *)(v20 + 24) = v24;
    swift_retain();
    v19(sub_1D598A1D0, v20);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t sub_1D59887FC(uint64_t a1, void (*a2)(char *), uint64_t a3, void (*a4)(void **), uint64_t a5)
{
  uint64_t v29 = a4;
  uint64_t v30 = a5;
  uint64_t v25 = a3;
  char v26 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725710);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (void **)((char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725718);
  uint64_t v27 = *(void *)(v9 - 8);
  uint64_t v28 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1D5AB24D0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3308);
  MEMORY[0x1F4188790](v16);
  id v18 = (void **)((char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D596E6CC(a1, (uint64_t)v18, &qword_1EBDE3308);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    char v19 = *v18;
    *uint64_t v8 = *v18;
    swift_storeEnumTagMultiPayload();
    id v20 = v19;
    v29(v8);

    return sub_1D594F53C((uint64_t)v8, &qword_1EA725710);
  }
  else
  {
    (*(void (**)(char *, void **, uint64_t))(v13 + 32))(v15, v18, v12);
    v26(v15);
    uint64_t v22 = v28;
    char v23 = (void (*)(uint64_t (*)(), uint64_t))sub_1D5AB45B0();
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v29;
    *(void *)(v24 + 24) = v30;
    swift_retain();
    v23(sub_1D59894CC, v24);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v22);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
}

void sub_1D5988B2C(void *a1, char a2, void (*a3)(void *), uint64_t a4, void (*a5)(void *), uint64_t a6)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE2FF0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v19[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = a1;
  if (a2)
  {
    v19[1] = 0;
    char v20 = 1;
    id v17 = a1;
    a5(v19);
    sub_1D5989670(a1, 1, MEMORY[0x1E4FBC898]);
  }
  else
  {
    swift_bridgeObjectRetain();
    a3(v19);
    uint64_t v15 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_1D5AB45B0();
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = a5;
    *(void *)(v16 + 24) = a6;
    swift_retain();
    v15(sub_1D598949C, v16);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1D5988CF4(uint64_t a1, uint64_t (*a2)(void))
{
  if (a2) {
    return a2();
  }
  return result;
}

void *sub_1D5988D24(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[2] = a1;
  a4[3] = &protocol witness table for XPCClient;
  a4[4] = &protocol witness table for XPCClient;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v17 = a1;
  char v16 = 50;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a2;
  *(void *)(v9 + 24) = a3;
  uint64_t v10 = sub_1D5AB39B0();
  swift_retain();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v16, (uint64_t)sub_1D598A1D4, v9, ObjectType, v10, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E4F9DF60], MEMORY[0x1E4F9DF68]);
  swift_release();
  uint64_t v17 = a1;
  char v16 = 51;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  uint64_t v12 = sub_1D5AB3770();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v16, (uint64_t)sub_1D598A1D8, v11, ObjectType, v12, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E4F9DBC0], MEMORY[0x1E4F9DBC8]);
  swift_release();
  uint64_t v17 = a1;
  char v16 = 52;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a2;
  *(void *)(v13 + 24) = a3;
  uint64_t v14 = sub_1D5AB4350();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v16, (uint64_t)sub_1D598A1DC, v13, ObjectType, v14, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E4F9EA40], MEMORY[0x1E4F9EA48]);
  swift_release();
  swift_unknownObjectRelease();
  return a4;
}

void *sub_1D5988F38(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  a4[2] = a1;
  a4[3] = a6;
  a4[4] = a7;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v21 = a1;
  char v20 = 50;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a2;
  *(void *)(v13 + 24) = a3;
  uint64_t v14 = sub_1D5AB39B0();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v20, (uint64_t)sub_1D5989E28, v13, ObjectType, v14, a7, MEMORY[0x1E4F9DF60], MEMORY[0x1E4F9DF68]);
  swift_release();
  uint64_t v21 = a1;
  char v20 = 51;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  *(void *)(v15 + 24) = a3;
  uint64_t v16 = sub_1D5AB3770();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v20, (uint64_t)sub_1D5989E88, v15, ObjectType, v16, a7, MEMORY[0x1E4F9DBC0], MEMORY[0x1E4F9DBC8]);
  swift_release();
  uint64_t v21 = a1;
  char v20 = 52;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a2;
  *(void *)(v17 + 24) = a3;
  uint64_t v18 = sub_1D5AB4350();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v20, (uint64_t)sub_1D5989EE8, v17, ObjectType, v18, a7, MEMORY[0x1E4F9EA40], MEMORY[0x1E4F9EA48]);
  swift_release();
  swift_unknownObjectRelease();
  return a4;
}

void *sub_1D5989140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  type metadata accessor for PrivacyPreferenceClient();
  uint64_t v13 = (void *)swift_allocObject();
  return sub_1D5988F38(a1, a2, a3, v13, a5, a6, a7);
}

uint64_t sub_1D59891C0()
{
  sub_1D59891FC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  return MEMORY[0x1F4186498](v0, 33, 7);
}

uint64_t sub_1D59891FC(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D598920C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5986070(*(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), a1);
}

uint64_t sub_1D5989218()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7252E8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1D59892C4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA7252E8) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1D5987020(a1, a2, v2 + v6, *(void *)(v2 + v7), *(void *)(v2 + v7 + 8), &qword_1EA7252E8, (uint64_t)&unk_1F2DEDC48, (uint64_t)sub_1D5989688);
}

uint64_t sub_1D5989390(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t method lookup function for PrivacyPreferenceClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PrivacyPreferenceClient);
}

uint64_t dispatch thunk of PrivacyPreferenceClient.__allocating_init(connection:eventHub:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

void sub_1D59893D0(uint64_t a1)
{
  sub_1D5988264(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), *(void (**)(id *))(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1D59893E0(uint64_t a1)
{
  return sub_1D599F434(a1, *(uint64_t (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_1D59893EC(uint64_t a1)
{
  return sub_1D598A0A4(a1, (uint64_t (*)(void, void, void, void, void, void))sub_1D5987EF4);
}

void sub_1D598940C(uint64_t a1)
{
}

void sub_1D5989434(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  sub_1D5987D48(*(void **)a1, *(unsigned char *)(a1 + 8), *(void (**)(__int16 *))(v4 + 16), *(void *)(v4 + 24), *(void (**)(void **))(v4 + 32), *(void *)(v4 + 40), a2, a3, a4);
}

uint64_t sub_1D5989480(uint64_t a1)
{
  return sub_1D598A0A4(a1, (uint64_t (*)(void, void, void, void, void, void))sub_1D5988B2C);
}

uint64_t sub_1D598949C(uint64_t a1)
{
  return sub_1D5A2BB88(a1, *(uint64_t (**)(long long *))(v1 + 16));
}

void sub_1D59894A8(uint64_t a1)
{
  sub_1D5988530(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), *(void (**)(id *))(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1D59894BC(uint64_t a1)
{
  return sub_1D59887FC(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), *(void (**)(void **))(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1D59894D4(uint64_t a1)
{
  return sub_1D598A16C(a1, &qword_1EA725720, &qword_1EA725728, (uint64_t)&unk_1F2DED9A0, (uint64_t)sub_1D59894CC);
}

uint64_t sub_1D598950C(uint64_t a1)
{
  return sub_1D598A16C(a1, &qword_1EA725500, &qword_1EA7254F8, (uint64_t)&unk_1F2DED9F0, (uint64_t)sub_1D59894CC);
}

uint64_t sub_1D5989544(uint64_t a1)
{
  return sub_1D598A16C(a1, &qword_1EA725510, &qword_1EA725508, (uint64_t)&unk_1F2DEDA40, (uint64_t)sub_1D59894CC);
}

uint64_t sub_1D598957C(uint64_t a1)
{
  return sub_1D598A0A4(a1, (uint64_t (*)(void, void, void, void, void, void))sub_1D598809C);
}

void sub_1D598959C(uint64_t a1)
{
}

uint64_t sub_1D59895C8(uint64_t a1)
{
  return sub_1D5A2BB84(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1D59895D4(uint64_t a1)
{
  sub_1D59879E0(a1, *(void (**)(uint64_t *))(v1 + 16), *(void *)(v1 + 24), *(void (**)(uint64_t *))(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1D59895E8(uint64_t a1)
{
  return sub_1D598A0A4(a1, (uint64_t (*)(void, void, void, void, void, void))sub_1D5987BA8);
}

uint64_t sub_1D5989604()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t sub_1D5989638(uint64_t a1)
{
  return sub_1D598A0A4(a1, (uint64_t (*)(void, void, void, void, void, void))sub_1D59872A4);
}

uint64_t sub_1D5989658(uint64_t a1)
{
  return sub_1D598A0A4(a1, (uint64_t (*)(void, void, void, void, void, void))sub_1D59870DC);
}

void sub_1D5989670(id a1, char a2, void (*a3)(id))
{
  if (a2) {

  }
  else {
    a3(a1);
  }
}

uint64_t sub_1D5989688(uint64_t a1)
{
  return sub_1D598A0A4(a1, (uint64_t (*)(void, void, void, void, void, void))sub_1D59877C4);
}

uint64_t sub_1D59896A4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v35 = a2;
  uint64_t v45 = a4;
  uint64_t v46 = a5;
  __int16 v36 = a1;
  uint64_t v44 = sub_1D5AB37B0();
  uint64_t result = MEMORY[0x1F4188790](v44);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v12 = 0;
  uint64_t v47 = a3;
  uint64_t v13 = *(void *)(a3 + 56);
  uint64_t v37 = 0;
  uint64_t v38 = a3 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v39 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v42 = v9 + 16;
  uint64_t v43 = v9;
  uint64_t v41 = v9 + 8;
  int v40 = a6 & 1;
  uint64_t v17 = v9;
  uint64_t v18 = v44;
  while (1)
  {
    if (v16)
    {
      unint64_t v19 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      int64_t v54 = v12;
      unint64_t v20 = v19 | (v12 << 6);
      goto LABEL_5;
    }
    int64_t v28 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v28 >= v39) {
      goto LABEL_24;
    }
    unint64_t v29 = *(void *)(v38 + 8 * v28);
    int64_t v30 = v12 + 1;
    if (!v29)
    {
      int64_t v30 = v12 + 2;
      if (v12 + 2 >= v39) {
        goto LABEL_24;
      }
      unint64_t v29 = *(void *)(v38 + 8 * v30);
      if (!v29)
      {
        int64_t v30 = v12 + 3;
        if (v12 + 3 >= v39) {
          goto LABEL_24;
        }
        unint64_t v29 = *(void *)(v38 + 8 * v30);
        if (!v29) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v16 = (v29 - 1) & v29;
    int64_t v54 = v30;
    unint64_t v20 = __clz(__rbit64(v29)) + (v30 << 6);
LABEL_5:
    unint64_t v21 = v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v11, *(void *)(v47 + 48) + *(void *)(v17 + 72) * v20, v18);
    uint64_t v22 = sub_1D5AB37A0();
    uint64_t v24 = v23;
    uint64_t v51 = v22;
    uint64_t v52 = v23;
    char v26 = v25 & 1;
    char v53 = v25 & 1;
    uint64_t v48 = v45;
    uint64_t v49 = v46;
    char v50 = v40;
    sub_1D5989D48();
    sub_1D5989D9C();
    char v27 = sub_1D5AB2370();
    sub_1D59891FC(v22, v24, v26);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v11, v18);
    int64_t v12 = v54;
    if (v27)
    {
      *(unint64_t *)((char *)v36 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      if (__OFADD__(v37++, 1))
      {
        __break(1u);
LABEL_24:
        uint64_t v33 = v47;
        swift_retain();
        return sub_1D5A18EC0(v36, v35, v37, v33);
      }
    }
  }
  uint64_t v31 = v12 + 4;
  if (v12 + 4 >= v39) {
    goto LABEL_24;
  }
  unint64_t v29 = *(void *)(v38 + 8 * v31);
  if (v29)
  {
    int64_t v30 = v12 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v30 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v30 >= v39) {
      goto LABEL_24;
    }
    unint64_t v29 = *(void *)(v38 + 8 * v30);
    ++v31;
    if (v29) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1D59899D0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  v17[1] = *MEMORY[0x1E4F143B8];
  char v8 = a4 & 1;
  char v9 = *(unsigned char *)(a1 + 32);
  unsigned int v10 = v9 & 0x3F;
  unint64_t v11 = (unint64_t)((1 << v9) + 63) >> 6;
  size_t v12 = 8 * v11;
  sub_1D5989390(a2, a3, a4 & 1);
  uint64_t isStackAllocationSafe = sub_1D5989390(a2, a3, v8);
  if (v10 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v17 - ((v12 + 15) & 0x3FFFFFFFFFFFFFF0), v12);
    sub_1D5989390(a2, a3, v8);
    uint64_t v14 = sub_1D59896A4((void *)((char *)v17 - ((v12 + 15) & 0x3FFFFFFFFFFFFFF0)), v11, a1, a2, a3, v8);
    sub_1D59891FC(a2, a3, v8);
    swift_release();
    if (v4) {
      swift_willThrow();
    }
    sub_1D59891FC(a2, a3, v8);
    sub_1D59891FC(a2, a3, v8);
  }
  else
  {
    uint64_t v15 = (void *)swift_slowAlloc();
    bzero(v15, v12);
    sub_1D5989390(a2, a3, v8);
    uint64_t v14 = sub_1D59896A4((unint64_t *)v15, v11, a1, a2, a3, v8);
    sub_1D59891FC(a2, a3, v8);
    swift_release();
    MEMORY[0x1D945AAC0](v15, -1, -1);
    sub_1D59891FC(a2, a3, v8);
    sub_1D59891FC(a2, a3, v8);
  }
  return v14;
}

uint64_t sub_1D5989C30@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5989CDC(a1);
}

uint64_t objectdestroy_109Tm()
{
  uint64_t v1 = sub_1D5AB37B0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D5989CDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_1D5AB37B0() - 8);
  return sub_1D5A433A4(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

unint64_t sub_1D5989D48()
{
  unint64_t result = qword_1EA725748;
  if (!qword_1EA725748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725748);
  }
  return result;
}

unint64_t sub_1D5989D9C()
{
  unint64_t result = qword_1EA725750;
  if (!qword_1EA725750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725750);
  }
  return result;
}

uint64_t sub_1D5989DF0()
{
  swift_unknownObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D5989E28(uint64_t a1)
{
  return sub_1D5985A04(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t (*)(void))type metadata accessor for NoticePrivacyPreferenceUpdated, MEMORY[0x1E4F9DF70], (uint64_t)&protocol witness table for NoticePrivacyPreferenceUpdated, (uint64_t (*)(void))type metadata accessor for NoticePrivacyPreferenceUpdated);
}

uint64_t sub_1D5989E88(uint64_t a1)
{
  return sub_1D5985A04(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t (*)(void))type metadata accessor for OptInPrivacyPreferenceUpdated, MEMORY[0x1E4F9DBD0], (uint64_t)&protocol witness table for OptInPrivacyPreferenceUpdated, (uint64_t (*)(void))type metadata accessor for OptInPrivacyPreferenceUpdated);
}

uint64_t sub_1D5989EE8(uint64_t a1)
{
  return sub_1D5985A04(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t (*)(void))type metadata accessor for PersonalizationPrivacyPreferenceUpdated, MEMORY[0x1E4F9EA50], (uint64_t)&protocol witness table for PersonalizationPrivacyPreferenceUpdated, (uint64_t (*)(void))type metadata accessor for PersonalizationPrivacyPreferenceUpdated);
}

uint64_t sub_1D5989F48(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1D5989FAC(uint64_t a1)
{
  return sub_1D598A16C(a1, &qword_1EA725518, &qword_1EA7254D8, (uint64_t)&unk_1F2DEDE00, (uint64_t)sub_1D59894CC);
}

uint64_t sub_1D5989FE4(uint64_t a1)
{
  return sub_1D598A16C(a1, &qword_1EA725520, &qword_1EA7253F8, (uint64_t)&unk_1F2DEDE50, (uint64_t)sub_1D59894CC);
}

uint64_t sub_1D598A01C(uint64_t a1)
{
  return sub_1D598A16C(a1, &qword_1EA725528, &qword_1EA7253F0, (uint64_t)&unk_1F2DEDEA0, (uint64_t)sub_1D59894CC);
}

uint64_t sub_1D598A054(uint64_t a1)
{
  return sub_1D598A16C(a1, &qword_1EA725530, &qword_1EA7253B8, (uint64_t)&unk_1F2DEDEF0, (uint64_t)sub_1D59894CC);
}

uint64_t sub_1D598A08C(uint64_t a1)
{
  return sub_1D598A0A4(a1, (uint64_t (*)(void, void, void, void, void, void))sub_1D5987628);
}

uint64_t sub_1D598A0A4(uint64_t a1, uint64_t (*a2)(void, void, void, void, void, void))
{
  return a2(*(void *)a1, *(unsigned __int8 *)(a1 + 8), v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_1D598A0CC(uint64_t a1)
{
  return sub_1D598A16C(a1, &qword_1EA725538, &qword_1EA725250, (uint64_t)&unk_1F2DEDF90, (uint64_t)sub_1D59894CC);
}

uint64_t sub_1D598A104(uint64_t a1)
{
  return sub_1D598A16C(a1, &qword_1EA725540, &qword_1EA725248, (uint64_t)&unk_1F2DEDFE0, (uint64_t)sub_1D59894CC);
}

uint64_t sub_1D598A13C(uint64_t a1)
{
  return sub_1D598A16C(a1, &qword_1EA725548, &qword_1EA725240, (uint64_t)&unk_1F2DEE030, (uint64_t)sub_1D59894CC);
}

uint64_t sub_1D598A16C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5987440(*(void **)a1, *(unsigned char *)(a1 + 8), *(void (**)(uint64_t))(v5 + 16), *(void *)(v5 + 24), *(void (**)(void *))(v5 + 32), *(void *)(v5 + 40), a2, a3, a4, a5);
}

uint64_t HealthKitStandaloneWorkoutJobProcessed.healthKitStandaloneWorkoutJob.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB4110();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t HealthKitStandaloneWorkoutJobProcessed.init(healthKitStandaloneWorkoutJob:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB4110();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static HealthKitStandaloneWorkoutJobProcessed.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for HealthKitStandaloneWorkoutJobProcessed(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4110();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for HealthKitStandaloneWorkoutJobProcessed(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB4110();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for HealthKitStandaloneWorkoutJobProcessed(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for HealthKitStandaloneWorkoutJobProcessed(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for HealthKitStandaloneWorkoutJobProcessed(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for HealthKitStandaloneWorkoutJobProcessed(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for HealthKitStandaloneWorkoutJobProcessed(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D598A538);
}

uint64_t sub_1D598A538(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4110();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for HealthKitStandaloneWorkoutJobProcessed(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D598A5B8);
}

uint64_t sub_1D598A5B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4110();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for HealthKitStandaloneWorkoutJobProcessed()
{
  uint64_t result = qword_1EBDE15B0;
  if (!qword_1EBDE15B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D598A674()
{
  uint64_t result = sub_1D5AB4110();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D598A700(uint64_t a1, uint64_t a2)
{
  return CatalogClientProtocol.fetchRemoteNavigationEditorialContent()(a1, a2);
}

uint64_t CatalogClientProtocol.fetchRemoteNavigationEditorialContent()(uint64_t a1, uint64_t a2)
{
  return sub_1D598A7F0(a1, a2, (uint64_t)&unk_1F2DEE078, MEMORY[0x1E4F9E498]);
}

unint64_t sub_1D598A74C()
{
  unint64_t result = qword_1EA725568;
  if (!qword_1EA725568)
  {
    sub_1D5AB2280();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725568);
  }
  return result;
}

uint64_t sub_1D598A7A4(uint64_t a1, uint64_t a2)
{
  return CatalogClientProtocol.fetchRemoteExploreTrainerTipShelfLockupDescriptor()(a1, a2);
}

uint64_t CatalogClientProtocol.fetchRemoteExploreTrainerTipShelfLockupDescriptor()(uint64_t a1, uint64_t a2)
{
  return sub_1D598A7F0(a1, a2, (uint64_t)&unk_1F2DEE0A0, MEMORY[0x1E4F9D9C8]);
}

uint64_t sub_1D598A7F0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v5 = sub_1D5AB2280();
  sub_1D598A74C();
  uint64_t v6 = swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v5 - 8) + 104))(v7, *MEMORY[0x1E4F9C310], v5);
  *(void *)(swift_allocObject() + 16) = v6;
  a4(0);
  return sub_1D5AB4550();
}

uint64_t CatalogClientProtocol.fetchRemoteCatalogWorkoutDetail(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))(a4 + 56))(a1, a2, 0, 1, a3, a4);
}

uint64_t CatalogClientProtocol.queryCachedCatalogWorkoutDetail(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))(a4 + 288))(a1, a2, 0, 1, a3, a4);
}

uint64_t CatalogClientProtocol.queryCachedCatalogWorkoutLockups(inclusion:displayStyle:sortMode:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))(a6 + 280))(a1, a2 & 1, a3, a4, 0, 1, a5, a6);
}

id sub_1D598A944(void *a1)
{
  return a1;
}

uint64_t sub_1D598A978()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

id sub_1D598A9B0()
{
  return sub_1D598A9C8();
}

id sub_1D598A9C8()
{
  unint64_t v1 = *(void **)(v0 + 16);
  swift_willThrow();
  return v1;
}

uint64_t dispatch thunk of CatalogClientProtocol.deleteAllCatalogTipJournals()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CatalogClientProtocol.deleteCatalog()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CatalogClientProtocol.deleteCatalogSyncAnchor()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CatalogClientProtocol.fetchRemoteCatalogEditorialCollectionDetail(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of CatalogClientProtocol.fetchRemoteCatalogModalityDetail(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of CatalogClientProtocol.fetchRemoteCatalogProgramDetail(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of CatalogClientProtocol.fetchRemoteCatalogWorkoutDetail(_:completedCountOverride:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(a6 + 56))(a1, a2, a3, a4 & 1);
}

uint64_t dispatch thunk of CatalogClientProtocol.fetchRemoteCatalogWorkouts(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of CatalogClientProtocol.fetchRemoteNavigationEditorialContent()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of CatalogClientProtocol.fetchRemoteTipShelfLockupDescriptors()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of CatalogClientProtocol.fetchRemoteTrainerDetail(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

uint64_t dispatch thunk of CatalogClientProtocol.fetchRemoteCatalogLockups(displayStyle:placeholders:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

uint64_t dispatch thunk of CatalogClientProtocol.fetchRemoteGalleryLockups(displayStyle:identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 104))();
}

uint64_t dispatch thunk of CatalogClientProtocol.fetchRemoteExploreShelfLockupDescriptors()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of CatalogClientProtocol.fetchRemoteShelfLockupDescriptors()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of CatalogClientProtocol.fetchRemoteShowcaseLockupContent()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of CatalogClientProtocol.fetchRemoteTopShelfCatalogWorkoutDetails()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of CatalogClientProtocol.fetchRemoteTrainerTipGalleryDetail()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of CatalogClientProtocol.fetchRemoteExploreTrainerTipShelfLockupDescriptor()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of CatalogClientProtocol.filterCatalog(filter:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 160))();
}

uint64_t dispatch thunk of CatalogClientProtocol.insertCatalogTipJournal(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 168))();
}

uint64_t dispatch thunk of CatalogClientProtocol.insertChangeset(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 176))();
}

uint64_t dispatch thunk of CatalogClientProtocol.queryAllBodyFocuses()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 184))();
}

uint64_t dispatch thunk of CatalogClientProtocol.queryAllCatalogModalityReferences()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 192))();
}

uint64_t dispatch thunk of CatalogClientProtocol.queryAllCatalogProgramReferences()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 200))();
}

uint64_t dispatch thunk of CatalogClientProtocol.queryCatalogWorkoutReferenceCount()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 208))();
}

uint64_t dispatch thunk of CatalogClientProtocol.queryCatalogWorkoutReferences(workoutIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 216))();
}

uint64_t dispatch thunk of CatalogClientProtocol.filterCatalogWorkoutReferenceIdentifiers(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 224))();
}

uint64_t dispatch thunk of CatalogClientProtocol.queryAllCatalogThemeCategories()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 232))();
}

uint64_t dispatch thunk of CatalogClientProtocol.queryAllCatalogThemes()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 240))();
}

uint64_t dispatch thunk of CatalogClientProtocol.queryAllEquipment()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 248))();
}

uint64_t dispatch thunk of CatalogClientProtocol.queryAllMusicGenres()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 256))();
}

uint64_t dispatch thunk of CatalogClientProtocol.queryAllSkillLevels()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 264))();
}

uint64_t dispatch thunk of CatalogClientProtocol.queryAllTrainerReferences()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 272))();
}

uint64_t dispatch thunk of CatalogClientProtocol.queryCachedCatalogWorkoutLockups(inclusion:displayStyle:sortMode:limit:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, void))(a8 + 280))(a1, a2 & 1, a3, a4, a5, a6 & 1);
}

uint64_t dispatch thunk of CatalogClientProtocol.queryCachedCatalogWorkoutDetail(_:completedCountOverride:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(a6 + 288))(a1, a2, a3, a4 & 1);
}

uint64_t dispatch thunk of CatalogClientProtocol.queryFilterOptions(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 296))();
}

uint64_t dispatch thunk of CatalogClientProtocol.requestCatalogLockupPlaceholderBackfill(request:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 304))();
}

uint64_t dispatch thunk of CatalogClientProtocol.refreshRemoteCatalogWorkoutMetadata(mediaTypes:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 312))();
}

uint64_t dispatch thunk of CatalogClientProtocol.queryCatalogSyncAnchor()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 320) + **(int **)(a3 + 320));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D5984480;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of CatalogClientProtocol.requestCatalogSync(mode:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 328))();
}

uint64_t dispatch thunk of CatalogClientProtocol.enumerateCatalogWorkoutReferences(handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 336) + **(int **)(a4 + 336));
  char v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *char v9 = v4;
  v9[1] = sub_1D598AF68;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of CatalogClientProtocol.queryCatalogWorkoutReferences(releasedSince:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 344))();
}

uint64_t dispatch thunk of CatalogClientProtocol.queryLatestCatalogWorkoutReferences(limit:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 352))();
}

uint64_t MultiUserSessionUpdated.multiUserSession.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB2FC0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t MultiUserSessionUpdated.init(multiUserSession:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB2FC0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static MultiUserSessionUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for MultiUserSessionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2FC0();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for MultiUserSessionUpdated(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB2FC0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for MultiUserSessionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for MultiUserSessionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for MultiUserSessionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for MultiUserSessionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for MultiUserSessionUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D598B2C8);
}

uint64_t sub_1D598B2C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2FC0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MultiUserSessionUpdated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D598B348);
}

uint64_t sub_1D598B348(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2FC0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MultiUserSessionUpdated()
{
  uint64_t result = qword_1EBDE4768;
  if (!qword_1EBDE4768) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D598B404()
{
  uint64_t result = sub_1D5AB2FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

id sub_1D598B490(char *a1)
{
  uint64_t v40 = sub_1D5AB4800();
  uint64_t v38 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  uint64_t v35 = (char *)v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1D5AB2AC0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  int64_t v39 = a1;
  objc_msgSend(v7, sel_setActivityType_, sub_1D5AB4740());
  sub_1D5AB4690();
  uint64_t v8 = sub_1D5AB2AB0();
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v14 = v4 + 8;
  uint64_t v13 = v15;
  uint64_t v37 = v3;
  v15(v6, v3);
  uint64_t v41 = v8;
  uint64_t v42 = v10;
  char v43 = v12;
  char v44 = 0;
  unint64_t v16 = sub_1D598B874();
  v34[2] = sub_1D598B8C8();
  v34[3] = v16;
  LOBYTE(a1) = sub_1D5AB2380();
  uint64_t v17 = v10;
  uint64_t v18 = v38;
  sub_1D59891FC(v8, v17, v12);
  unint64_t v19 = v35;
  (*(void (**)(void))(v18 + 16))();
  __int16 v36 = v15;
  if (a1)
  {
    unint64_t v20 = *(void (**)(char *, uint64_t))(v18 + 8);
    v20(v19, v40);
    uint64_t v21 = v37;
  }
  else
  {
    sub_1D5AB4690();
    uint64_t v22 = sub_1D5AB2AB0();
    uint64_t v24 = v23;
    char v26 = v25 & 1;
    v34[1] = v14;
    v13(v6, v37);
    uint64_t v41 = v22;
    uint64_t v42 = v24;
    char v43 = v26;
    char v44 = 1;
    char v27 = sub_1D5AB2380();
    char v28 = v26;
    uint64_t v29 = v38;
    sub_1D59891FC(v22, v24, v28);
    unint64_t v20 = *(void (**)(char *, uint64_t))(v29 + 8);
    v20(v19, v40);
    if ((v27 & 1) == 0)
    {
      uint64_t v30 = 2;
      objc_msgSend(v7, sel_setLocationType_, 2);
      uint64_t v21 = v37;
      goto LABEL_7;
    }
    uint64_t v21 = v37;
  }
  objc_msgSend(v7, sel_setLocationType_, 3);
  uint64_t v30 = 1;
  objc_msgSend(v7, sel_setShouldDisambiguateLocation_, 1);
LABEL_7:
  objc_msgSend(v7, sel_setFitnessPlusMediaType_, v30);
  uint64_t v31 = v39;
  sub_1D5AB4690();
  sub_1D5AB28C0();
  v36(v6, v21);
  uint64_t v32 = (void *)sub_1D5AB4DE0();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setFitnessPlusCatalogWorkoutId_, v32);

  v20(v31, v40);
  return v7;
}

unint64_t sub_1D598B874()
{
  unint64_t result = qword_1EA725768;
  if (!qword_1EA725768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725768);
  }
  return result;
}

unint64_t sub_1D598B8C8()
{
  unint64_t result = qword_1EA725770;
  if (!qword_1EA725770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725770);
  }
  return result;
}

uint64_t MetricTopicRoutingBehavior.clickStreamTopic(isSubscribed:platform:)(char a1, char a2, uint64_t a3)
{
  switch((char)a3)
  {
    case 1:
      return a3;
    case 2:
      a3 = 3;
      break;
    case 3:
      uint64_t v4 = Platform.supportedFeatures.getter(a2);
      BOOL v5 = sub_1D598B9D0(0x22u, v4);
      swift_bridgeObjectRelease();
      if (a1) {
        unsigned int v6 = 0;
      }
      else {
        unsigned int v6 = 2;
      }
      if (v5) {
        a3 = 4;
      }
      else {
        a3 = v6;
      }
      break;
    default:
      if (a1) {
        a3 = 0;
      }
      else {
        a3 = 2;
      }
      break;
  }
  return a3;
}

BOOL sub_1D598B9D0(unsigned __int8 a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  int v3 = a1;
  sub_1D5AB5C20();
  sub_1D5AB5C30();
  uint64_t v4 = sub_1D5AB5C60();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(unsigned __int8 *)(v8 + v6) == v3) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    int v12 = *(unsigned __int8 *)(v8 + v11);
    BOOL result = v12 == v3;
    if (v12 == v3) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_1D598BAC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_1D5AB5C20();
    sub_1D5AB4E60();
    uint64_t v6 = sub_1D5AB5C60();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      unint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1D5AB5AF0() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          unint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1D5AB5AF0() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t dispatch thunk of UpNextQueueClientProtocol.queryUpNextQueue()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of UpNextQueueClientProtocol.processUpNextQueueUpdates(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t CommentaryEventStarted.commentaryEvent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB2CD0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t CommentaryEventStarted.init(commentaryEvent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB2CD0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static CommentaryEventStarted.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for CommentaryEventStarted(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2CD0();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for CommentaryEventStarted(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB2CD0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for CommentaryEventStarted(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2CD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for CommentaryEventStarted(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2CD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for CommentaryEventStarted(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2CD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for CommentaryEventStarted(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2CD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for CommentaryEventStarted(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D598BF78);
}

uint64_t sub_1D598BF78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2CD0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for CommentaryEventStarted(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D598BFF8);
}

uint64_t sub_1D598BFF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2CD0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for CommentaryEventStarted()
{
  uint64_t result = qword_1EA725778;
  if (!qword_1EA725778) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D598C0B4()
{
  uint64_t result = sub_1D5AB2CD0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t static CatalogTipConstants.lastPostTipUpsellViewedDateDefaultKey.getter()
{
  return 0xD00000000000001BLL;
}

ValueMetadata *type metadata accessor for CatalogTipConstants()
{
  return &type metadata for CatalogTipConstants;
}

uint64_t AssetRequest.ExpirationPolicy.interval.getter(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0 && !a1) {
    return sub_1D5AB5320();
  }
  else {
    return sub_1D5AB5310();
  }
}

uint64_t BlockingPromise.init(_:timeout:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6 = sub_1D5AB45D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  uint64_t result = type metadata accessor for BlockingPromise();
  *(double *)(a2 + *(int *)(result + 28)) = a3;
  return result;
}

uint64_t type metadata accessor for BlockingPromise()
{
  return __swift_instantiateGenericMetadata();
}

void BlockingPromise.resolve()(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v42 = a1;
  uint64_t v2 = *(void *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v43 = v2;
  uint64_t v3 = sub_1D5AB5CB0();
  uint64_t v4 = sub_1D5AB5620();
  uint64_t v33 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v37 = (char *)&v31 - v5;
  uint64_t v6 = sub_1D5AB4C90();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  unint64_t v11 = (char *)&v31 - v10;
  uint64_t v12 = sub_1D5AB45D0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v15 = (char *)&v31 - v14;
  dispatch_semaphore_t v16 = dispatch_semaphore_create(0);
  uint64_t v34 = v4;
  uint64_t v17 = swift_allocBox();
  uint64_t v18 = *(void *)(v3 - 8);
  uint64_t v31 = v19;
  uint64_t v32 = v18;
  unint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
  uint64_t v36 = v3;
  v20(v19, 1, 1, v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v39, v12);
  uint64_t v21 = (void *)swift_allocObject();
  void v21[2] = v43;
  v21[3] = v17;
  v21[4] = v16;
  uint64_t v38 = v17;
  swift_retain();
  uint64_t v22 = v16;
  sub_1D5AB45A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_1D5AB4C80();
  sub_1D5AB5330();
  MEMORY[0x1D94590A0](v9);
  uint64_t v23 = v41;
  uint64_t v24 = *(void (**)(char *, uint64_t))(v40 + 8);
  v24(v9, v41);
  LOBYTE(v12) = sub_1D5AB5560();
  v24(v11, v23);
  if (v12)
  {
    sub_1D598C8D8();
    swift_allocError();
    *uint64_t v30 = 0;
    swift_willThrow();
  }
  else
  {
    uint64_t v25 = v35;
    uint64_t v26 = v43;
    uint64_t v27 = v31;
    swift_beginAccess();
    char v28 = v37;
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v37, v27, v34);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v28, 1, v36) == 1)
    {
      sub_1D598C8D8();
      swift_allocError();
      *uint64_t v29 = 1;
LABEL_6:
      swift_willThrow();
      swift_release();

      return;
    }
    if (swift_getEnumCaseMultiPayload() == 1) {
      goto LABEL_6;
    }

    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v25, v28, v26);
  }
  swift_release();
}

uint64_t sub_1D598C6F4(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v2 = sub_1D5AB5CB0();
  uint64_t v3 = sub_1D5AB5620();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v10 - v5;
  uint64_t v7 = swift_projectBox();
  uint64_t v8 = *(void *)(v2 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v2);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 40))(v7, v6, v3);
  return sub_1D5AB5570();
}

uint64_t sub_1D598C88C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D598C8CC(uint64_t a1)
{
  return sub_1D598C6F4(a1);
}

unint64_t sub_1D598C8D8()
{
  unint64_t result = qword_1EA725788;
  if (!qword_1EA725788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725788);
  }
  return result;
}

uint64_t sub_1D598C92C()
{
  uint64_t result = sub_1D5AB45D0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1D598C9C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1D5AB45D0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
  }
  return a1;
}

uint64_t sub_1D598CA98(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB45D0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t sub_1D598CB00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB45D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1D598CB80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB45D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1D598CC00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB45D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1D598CC80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB45D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1D598CD00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D598CD14);
}

uint64_t sub_1D598CD14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB45D0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1D598CD84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D598CD98);
}

uint64_t sub_1D598CD98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB45D0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t ActivityRingsUpdated.activityRings.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB2490();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t ActivityRingsUpdated.sessionIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ActivityRingsUpdated() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for ActivityRingsUpdated()
{
  uint64_t result = qword_1EA725790;
  if (!qword_1EA725790) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ActivityRingsUpdated.init(activityRings:sessionIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1D5AB2490();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t result = type metadata accessor for ActivityRingsUpdated();
  uint64_t v10 = (void *)(a4 + *(int *)(result + 20));
  *uint64_t v10 = a2;
  v10[1] = a3;
  return result;
}

void static ActivityRingsUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t *initializeBufferWithCopyOfBuffer for ActivityRingsUpdated(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1D5AB2490();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ActivityRingsUpdated(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB2490();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ActivityRingsUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB2490();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ActivityRingsUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB2490();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ActivityRingsUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB2490();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for ActivityRingsUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB2490();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityRingsUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D598D324);
}

uint64_t sub_1D598D324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB2490();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ActivityRingsUpdated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D598D3FC);
}

uint64_t sub_1D598D3FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1D5AB2490();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1D598D4BC()
{
  uint64_t result = sub_1D5AB2490();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of PrivacyPreferenceClientProtocol.queryNoticePrivacyPreference()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PrivacyPreferenceClientProtocol.fetchNoticePrivacyPreference(ignoreCaches:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of PrivacyPreferenceClientProtocol.updateNoticePrivacyPreference(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of PrivacyPreferenceClientProtocol.queryOptInPrivacyPreference()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of PrivacyPreferenceClientProtocol.fetchOptInPrivacyPreference(ignoreCaches:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of PrivacyPreferenceClientProtocol.updateOptInPrivacyPreference(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of PrivacyPreferenceClientProtocol.queryPrivacyAcknowledgement(for:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(a5 + 56))(a1, a2, a3 & 1);
}

uint64_t dispatch thunk of PrivacyPreferenceClientProtocol.insertPrivacyAcknowledgement(for:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(a5 + 64))(a1, a2, a3 & 1);
}

uint64_t dispatch thunk of PrivacyPreferenceClientProtocol.insertPersonalizationPrivacyPreference(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of PrivacyPreferenceClientProtocol.queryPersonalizationPrivacyPreference()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t EventHub.__allocating_init(queue:dispatchStrategy:timerProvider:)(uint64_t a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(a3 + 32);
  uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1(a3, v7);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v12 + 16))(v11);
  uint64_t v13 = sub_1D59901D8(a1, a2, (uint64_t)v11, v6, v7, v8);
  __swift_destroy_boxed_opaque_existential_1Tm(a3);
  return v13;
}

uint64_t EventHub.init(queue:dispatchStrategy:timerProvider:)(uint64_t a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(a3 + 32);
  uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1(a3, v7);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v12 + 16))(v11);
  uint64_t v13 = sub_1D59901D8(a1, a2, (uint64_t)v11, v3, v7, v8);
  __swift_destroy_boxed_opaque_existential_1Tm(a3);
  return v13;
}

uint64_t sub_1D598D844(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void, void), double a6)
{
  uint64_t v12 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1D5AB5620();
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  uint64_t v21 = (char *)&v33 - v20;
  uint64_t v37 = a4;
  uint64_t v38 = a5;
  uint64_t v34 = a2;
  uint64_t v35 = (uint64_t (*)(char *, uint64_t))a5;
  uint64_t v23 = v22;
  uint64_t v39 = v6;
  uint64_t v40 = a2;
  uint64_t v24 = v19;
  unint64_t v36 = a3;
  unint64_t v41 = a3;
  double v42 = a6;
  sub_1D59F2B10((void (*)(void))sub_1D5990778);
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v18, v21, v24);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v18, 1, a4) == 1)
  {
    uint64_t v25 = *(void (**)(char *, uint64_t))(v23 + 8);
    v25(v18, v24);
    if (qword_1EBDE5420 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_1D5AB4B50();
    __swift_project_value_buffer(v26, (uint64_t)qword_1EBDE5400);
    unint64_t v27 = v36;
    swift_bridgeObjectRetain_n();
    char v28 = sub_1D5AB4B30();
    os_log_type_t v29 = sub_1D5AB5410();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v44 = v31;
      uint64_t v35 = (uint64_t (*)(char *, uint64_t))v25;
      *(_DWORD *)uint64_t v30 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v43 = sub_1D5951500(v34, v27, &v44);
      sub_1D5AB5680();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D5947000, v28, v29, "Attempted to deliver %{public}s, but found no queued event", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v31, -1, -1);
      MEMORY[0x1D945AAC0](v30, -1, -1);

      return v35(v21, v24);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      return ((uint64_t (*)(char *, uint64_t))v25)(v21, v24);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v18, a4);
    sub_1D598E210((uint64_t)v14, a4, (uint64_t)v35);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, a4);
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v21, v24);
  }
}

uint64_t sub_1D598DC58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>, double a6@<D0>)
{
  uint64_t v49 = a5;
  uint64_t v11 = sub_1D5AB5620();
  uint64_t v47 = *(void *)(v11 - 8);
  uint64_t v48 = v11;
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  double v42 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v46 = (char *)&v41 - v14;
  uint64_t v15 = type metadata accessor for PublishRecord();
  uint64_t v16 = sub_1D5AB5620();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v41 - v21;
  uint64_t v41 = a1 + 88;
  swift_beginAccess();
  uint64_t v23 = *(void *)(a1 + 88);
  uint64_t v24 = *(void *)(v23 + 16);
  uint64_t v43 = a2;
  uint64_t v44 = a3;
  if (v24)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v25 = sub_1D5952584(a2, a3);
    if (v26)
    {
      sub_1D5979948(*(void *)(v23 + 56) + 40 * v25, (uint64_t)&v50);
    }
    else
    {
      uint64_t v52 = 0;
      long long v50 = 0u;
      long long v51 = 0u;
    }
    uint64_t v27 = v16;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v28 = v47;
    if (*((void *)&v51 + 1))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7257B0);
      int v29 = swift_dynamicCast();
      uint64_t v30 = *(void *)(v15 - 8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v22, v29 ^ 1u, 1, v15);
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v52 = 0;
    long long v50 = 0u;
    long long v51 = 0u;
    uint64_t v27 = v16;
    uint64_t v28 = v47;
  }
  sub_1D59907A0((uint64_t)&v50);
  uint64_t v30 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v22, 1, 1, v15);
LABEL_9:
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v20, v22, v27);
  uint64_t v31 = v30;
  int v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48))(v20, 1, v15);
  uint64_t v45 = v27;
  if (v32 == 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v27);
    uint64_t v33 = *(void *)(a4 - 8);
    uint64_t v34 = v46;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56))(v46, 1, 1, a4);
    uint64_t v35 = v48;
  }
  else
  {
    uint64_t v34 = v46;
    uint64_t v35 = v48;
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v46, &v20[*(int *)(v15 + 28)], v48);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v20, v15);
    uint64_t v33 = *(void *)(a4 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v34, 1, a4) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v49, v34, a4);
      unint64_t v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56);
      uint64_t v37 = (uint64_t)v42;
      v36(v42, 1, 1, a4);
      *((void *)&v51 + 1) = v15;
      uint64_t v52 = &protocol witness table for PublishRecord<A>;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v50);
      PublishRecord.init(lastDelivery:queuedEvent:timer:)(v37, 0, (double *)boxed_opaque_existential_1, a6);
      swift_beginAccess();
      uint64_t v39 = v44;
      swift_bridgeObjectRetain();
      sub_1D5971DB4((uint64_t)&v50, v43, v39);
      swift_endAccess();
      v36(v49, 0, 1, a4);
      return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v22, v45);
    }
  }
  (*(void (**)(char *, uint64_t))(v28 + 8))(v34, v35);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56))(v49, 1, 1, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v22, v45);
}

uint64_t sub_1D598E210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  uint64_t v6 = *(void *)(v3 + 24);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v6 + 16));
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 80);
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1D5952540(v5), (v9 & 1) != 0))
  {
    uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v12 = v10 + 32;
    uint64_t v22 = a1;
    do
    {
      sub_1D5979948(v12, (uint64_t)v24);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4B88);
      type metadata accessor for Subscription();
      if (swift_dynamicCast())
      {
        v23(a1);
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        if (qword_1EBDE5420 != -1) {
          swift_once();
        }
        uint64_t v13 = sub_1D5AB4B50();
        __swift_project_value_buffer(v13, (uint64_t)qword_1EBDE5400);
        uint64_t v14 = sub_1D5AB4B30();
        os_log_type_t v15 = sub_1D5AB5410();
        if (os_log_type_enabled(v14, v15))
        {
          uint64_t v16 = swift_slowAlloc();
          uint64_t v17 = swift_slowAlloc();
          v24[0] = v17;
          *(_DWORD *)uint64_t v16 = 136446210;
          uint64_t v18 = sub_1D5AB4DC0();
          *(void *)(v16 + 4) = sub_1D5951500(v18, v19, v24);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1D5947000, v14, v15, "Invalid subscription for event: %{public}s", (uint8_t *)v16, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1D945AAC0](v17, -1, -1);
          uint64_t v20 = v16;
          a1 = v22;
          MEMORY[0x1D945AAC0](v20, -1, -1);
        }
      }
      v12 += 40;
      --v11;
    }
    while (v11);
  }
  return swift_bridgeObjectRelease();
}

uint64_t EventHub.deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t EventHub.__deallocating_deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t EventHub.publish<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D5AB1C40();
  return EventHub.publish<A>(_:atTime:)(a1, a2, a3, v6);
}

uint64_t EventHub.publish<A>(_:atTime:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v39 = sub_1D5AB4C50();
  uint64_t v36 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  char v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D5AB4C70();
  uint64_t v35 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = *(void *)(a2 - 8);
  uint64_t v14 = *(void *)(v38 + 64);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = a1;
  uint64_t v37 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  uint64_t v17 = v16;
  (*(void (**)(double *__return_ptr, uint64_t, uint64_t))(a3 + 8))(&v43, a2, a3);
  if (v44)
  {
    uint64_t v33 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v34 = v13;
    uint64_t v18 = v38;
    uint64_t v19 = v39;
    uint64_t v37 = v10;
    swift_bridgeObjectRelease();
    uint64_t v20 = v40;
    uint64_t v21 = v15;
    if (*(unsigned char *)(v40 + 32))
    {
      return sub_1D598E210(v15, a2, a3);
    }
    else
    {
      uint64_t v32 = *(void *)(v40 + 16);
      uint64_t v26 = v18;
      uint64_t v27 = v33;
      (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v33, v21, a2);
      unint64_t v28 = (*(unsigned __int8 *)(v18 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
      int v29 = (char *)swift_allocObject();
      *((void *)v29 + 2) = a2;
      *((void *)v29 + 3) = a3;
      *((void *)v29 + 4) = v20;
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v29[v28], v27, a2);
      aBlock[4] = sub_1D5990384;
      aBlock[5] = v29;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1D598EA50;
      aBlock[3] = &block_descriptor_4;
      uint64_t v30 = _Block_copy(aBlock);
      swift_retain();
      uint64_t v31 = v34;
      sub_1D5AB4C60();
      uint64_t v41 = MEMORY[0x1E4FBC860];
      sub_1D59903E8();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE5100);
      sub_1D5990440();
      sub_1D5AB56F0();
      MEMORY[0x1D94598A0](0, v31, v9, v30);
      _Block_release(v30);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v19);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v31, v37);
      return swift_release();
    }
  }
  else
  {
    double v23 = v43;
    uint64_t v24 = (void *)v40;
    uint64_t v25 = *(void *)(v40 + 24);
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v25 + 16));
    sub_1D598EA94(v24, v37, v17, v15, a2, a3, a4, v23);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v25 + 16));
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1D598EA50(uint64_t a1)
{
  unint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_1D598EA94(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8)
{
  uint64_t v51 = a6;
  uint64_t v57 = a4;
  uint64_t v62 = a3;
  uint64_t v56 = sub_1D5AB1CE0();
  uint64_t v55 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1D5AB5620();
  uint64_t v59 = *(void *)(v15 - 8);
  uint64_t v60 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v50 - v16;
  uint64_t v18 = type metadata accessor for PublishRecord();
  uint64_t v54 = sub_1D5AB5620();
  uint64_t v53 = *(void *)(v54 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v54);
  uint64_t v21 = (char *)&v50 - v20;
  uint64_t v22 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v24 = (double *)((char *)&v50 - v23);
  uint64_t v58 = a1 + 11;
  swift_beginAccess();
  uint64_t v52 = a1;
  uint64_t v25 = a1[11];
  uint64_t v26 = *(void *)(v25 + 16);
  uint64_t v61 = a2;
  if (!v26)
  {
    uint64_t v65 = 0;
    long long v63 = 0u;
    long long v64 = 0u;
LABEL_9:
    sub_1D59907A0((uint64_t)&v63);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v21, 1, 1, v18);
    goto LABEL_10;
  }
  uint64_t v27 = v62;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v28 = sub_1D5952584(a2, v27);
  if (v29)
  {
    sub_1D5979948(*(void *)(v25 + 56) + 40 * v28, (uint64_t)&v63);
  }
  else
  {
    uint64_t v65 = 0;
    long long v63 = 0u;
    long long v64 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v64 + 1)) {
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7257B0);
  int v30 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v21, v30 ^ 1u, 1, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v21, 1, v18) != 1)
  {
    (*(void (**)(double *, char *, uint64_t))(v22 + 32))(v24, v21, v18);
    goto LABEL_11;
  }
LABEL_10:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 56))(v17, 1, 1, a5);
  sub_1D5AB1C60();
  sub_1D5AB1C30();
  double v32 = v31;
  (*(void (**)(char *, uint64_t))(v55 + 8))(v14, v56);
  PublishRecord.init(lastDelivery:queuedEvent:timer:)((uint64_t)v17, 0, v24, v32);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v21, v54);
LABEL_11:
  uint64_t v33 = v61;
  if (*(void *)((char *)v24 + *(int *)(v18 + 32)))
  {
    uint64_t v34 = *(void *)(a5 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v17, v57, a5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v17, 0, 1, a5);
    *((void *)&v64 + 1) = v18;
    uint64_t v65 = &protocol witness table for PublishRecord<A>;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v63);
    uint64_t v36 = v62;
    swift_bridgeObjectRetain();
    sub_1D5A2DD5C(0.0, 1, (uint64_t)v17, 0, v18, (double *)boxed_opaque_existential_1);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v17, v60);
    swift_beginAccess();
    sub_1D5971DB4((uint64_t)&v63, v33, v36);
    swift_endAccess();
    return (*(uint64_t (**)(double *, uint64_t))(v22 + 8))(v24, v18);
  }
  else
  {
    if (a8 - (a7 - *v24) < 0.0) {
      double v38 = 0.0;
    }
    else {
      double v38 = a8 - (a7 - *v24);
    }
    uint64_t v39 = v52;
    uint64_t v40 = v52[9];
    uint64_t v55 = v52[8];
    uint64_t v54 = (uint64_t)__swift_project_boxed_opaque_existential_1(v52 + 5, v55);
    uint64_t v53 = v39[2];
    uint64_t v41 = swift_allocObject();
    uint64_t v42 = v51;
    *(void *)(v41 + 16) = a5;
    *(void *)(v41 + 24) = v42;
    *(void *)(v41 + 32) = v39;
    *(void *)(v41 + 40) = v33;
    *(void *)(v41 + 48) = v62;
    *(double *)(v41 + 56) = v38 + a7;
    uint64_t v56 = (uint64_t)v24;
    uint64_t v43 = v22;
    char v44 = *(uint64_t (**)(uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t, double))(v40 + 8);
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v45 = v44(v53, sub_1D5990B00, v41, v55, v40, v38);
    swift_release();
    uint64_t v46 = *(void *)(a5 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v17, v57, a5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v17, 0, 1, a5);
    *((void *)&v64 + 1) = v18;
    uint64_t v65 = &protocol witness table for PublishRecord<A>;
    uint64_t v47 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v63);
    uint64_t v48 = v62;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    uint64_t v49 = v56;
    sub_1D5A2DD5C(0.0, 1, (uint64_t)v17, v45, v18, (double *)v47);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v17, v60);
    swift_beginAccess();
    sub_1D5971DB4((uint64_t)&v63, v61, v48);
    swift_endAccess();
    swift_unknownObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 8))(v49, v18);
  }
}

uint64_t EventHub.subscribe<A>(_:subscriptionToken:handler:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t *a5@<X8>)
{
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a3;
  v10[3] = a4;
  v10[4] = a1;
  v10[5] = a2;
  swift_retain();
  EventHub.subscribe<A>(_:subscriptionToken:handler:)((uint64_t)sub_1D59904D4, (uint64_t)v10, a3, a4, a5);
  return swift_release();
}

double EventHub.subscribe<A>(_:subscriptionToken:handler:)@<D0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t *a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  swift_retain();
  Subscription.init(handler:)(a1, a2, a3, a4, (uint64_t *)v17);
  uint64_t v13 = *(void *)(v6 + 24);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v13 + 16));
  sub_1D598F424(v6, v12, (uint64_t)v17);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 16));
  a5[3] = type metadata accessor for Subscription();
  a5[4] = (uint64_t)&protocol witness table for Subscription<A>;
  uint64_t v14 = swift_allocObject();
  *a5 = v14;
  double result = *(double *)v17;
  long long v16 = v17[1];
  *(_OWORD *)(v14 + 16) = v17[0];
  *(_OWORD *)(v14 + 32) = v16;
  *(void *)(v14 + 48) = v18;
  return result;
}

uint64_t sub_1D598F424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = (uint64_t *)(a1 + 80);
  swift_beginAccess();
  uint64_t v7 = *(void *)(a1 + 80);
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1D5952540(a2), (v9 & 1) != 0))
  {
    uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4BC8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D5AB90F0;
  *(void *)(inited + 56) = type metadata accessor for Subscription();
  *(void *)(inited + 64) = &protocol witness table for Subscription<A>;
  uint64_t v12 = swift_allocObject();
  *(void *)(inited + 32) = v12;
  long long v13 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v12 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v12 + 32) = v13;
  *(void *)(v12 + 48) = *(void *)(a3 + 32);
  *(void *)&v18[0] = v10;
  sub_1D5990A88(a3);
  sub_1D5A54088(inited);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v17 = *v6;
  *uint64_t v6 = 0x8000000000000000;
  sub_1D5975C50(v10, a2, isUniquelyReferenced_nonNull_native);
  *uint64_t v6 = v17;
  swift_bridgeObjectRelease();
  swift_endAccess();
  long long v15 = *(_OWORD *)(a3 + 16);
  v18[0] = *(_OWORD *)a3;
  v18[1] = v15;
  uint64_t v19 = *(void *)(a3 + 32);
  return sub_1D595849C((uint64_t *)v18);
}

uint64_t EventHub.subscribe<A>(_:subscriptionToken:handler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a4;
  uint64_t v12[3] = a5;
  v12[4] = a2;
  v12[5] = a3;
  swift_retain();
  EventHub.subscribe<A>(_:subscriptionToken:handler:)(a1, (uint64_t)&unk_1EA7257A8, (uint64_t)v12, a4, a5, a6);
  return swift_release();
}

{
  void *v12;
  uint64_t vars8;

  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a4;
  uint64_t v12[3] = a5;
  v12[4] = a2;
  v12[5] = a3;
  v12[6] = a1;
  swift_retain();
  EventHub.subscribe<A>(_:subscriptionToken:handler:)((uint64_t)sub_1D599068C, (uint64_t)v12, a4, a5, a6);
  return swift_release();
}

uint64_t sub_1D598F6C4(uint64_t a1, int *a2)
{
  uint64_t v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1D5984480;
  return v5();
}

uint64_t sub_1D598F854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v23 = a4;
  uint64_t v11 = *(void *)(a5 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](a1);
  long long v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4C10);
  MEMORY[0x1F4188790](v14 - 8);
  long long v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1D5AB51C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, a5);
  unint64_t v18 = (*(unsigned __int8 *)(v11 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v19 = (v12 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = (char *)swift_allocObject();
  *((void *)v20 + 2) = 0;
  *((void *)v20 + 3) = 0;
  *((void *)v20 + 4) = a5;
  *((void *)v20 + 5) = a6;
  *((void *)v20 + 6) = a2;
  *((void *)v20 + 7) = a3;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v20[v18], v13, a5);
  *(void *)&v20[v19] = v23;
  swift_retain();
  sub_1D59F48C8((uint64_t)v16, (uint64_t)&unk_1EA7257C0, (uint64_t)v20);
  return swift_release();
}

uint64_t sub_1D598FA50(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 64) = a7;
  uint64_t v11 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  char v9 = (void *)swift_task_alloc();
  *(void *)(v7 + 72) = v9;
  *char v9 = v7;
  v9[1] = sub_1D598FB34;
  return v11(a6);
}

uint64_t sub_1D598FB34()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D598FC68, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1D598FC68()
{
  unint64_t v18 = v0;
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  unint64_t v1 = (void *)v0[10];
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE5400);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_1D5AB4B30();
  os_log_type_t v6 = sub_1D5AB5410();
  BOOL v7 = os_log_type_enabled(v5, v6);
  unint64_t v8 = (void *)v0[10];
  if (v7)
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v17 = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v11 = sub_1D5AB5D20();
    v0[5] = sub_1D5951500(v11, v12, &v17);
    sub_1D5AB5680();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v13 = MEMORY[0x1D9459FA0](v0[3], v0[4]);
    v0[7] = sub_1D5951500(v13, v14, &v17);
    sub_1D5AB5680();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D5947000, v5, v6, "Caught error while executing %s: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v10, -1, -1);
    MEMORY[0x1D945AAC0](v9, -1, -1);
  }
  else
  {
  }
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

void EventHub.unsubscribe(_:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  uint64_t v7 = *(void *)(v2 + 24);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 16));
  sub_1D598FF7C(v2, v6, (uint64_t)a1);
  unint64_t v8 = *(os_unfair_lock_s **)(v7 + 16);
  os_unfair_lock_unlock(v8);
}

uint64_t sub_1D598FF7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (uint64_t *)(a1 + 80);
  unint64_t v7 = swift_beginAccess();
  uint64_t v8 = *(void *)(a1 + 80);
  if (*(void *)(v8 + 16) && (unint64_t v7 = sub_1D5952540(a2), (v9 & 1) != 0))
  {
    uint64_t v10 = *(void *)(*(void *)(v8 + 56) + 8 * v7);
    unint64_t v7 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
  }
  MEMORY[0x1F4188790](v7);
  v14[2] = a3;
  uint64_t v11 = sub_1D5A12C98((uint64_t)sub_1D5990800, (uint64_t)v14, v10);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = *v6;
  *uint64_t v6 = 0x8000000000000000;
  sub_1D5975C50(v11, a2, isUniquelyReferenced_nonNull_native);
  *uint64_t v6 = v15;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_1D59900BC(void *a1, void *a2)
{
  uint64_t v3 = a2[3];
  uint64_t v4 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v3);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  uint64_t v7 = v6;
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  if (v5 == (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9) && v7 == v10)
  {
    swift_bridgeObjectRelease_n();
    char v13 = 0;
  }
  else
  {
    char v12 = sub_1D5AB5AF0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v13 = v12 ^ 1;
  }
  return v13 & 1;
}

uint64_t sub_1D59901D8(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = a5;
  v16[3] = a5;
  v16[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v16);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(boxed_opaque_existential_1, a3, v6);
  LOBYTE(v6) = *a2;
  sub_1D5979948((uint64_t)v16, a4 + 40);
  *(void *)(a4 + 16) = a1;
  *(unsigned char *)(a4 + 32) = v6;
  type metadata accessor for UnfairLock();
  uint64_t v12 = swift_allocObject();
  char v13 = (_DWORD *)swift_slowAlloc();
  *(void *)(v12 + 16) = v13;
  *char v13 = 0;
  *(void *)(a4 + 24) = v12;
  uint64_t v14 = MEMORY[0x1E4FBC868];
  *(void *)(a4 + 80) = MEMORY[0x1E4FBC868];
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
  *(void *)(a4 + 88) = v14;
  return a4;
}

uint64_t sub_1D59902C0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D5990384()
{
  return sub_1D598E210(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)), *(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_1D59903E8()
{
  unint64_t result = qword_1EBDE50F0;
  if (!qword_1EBDE50F0)
  {
    sub_1D5AB4C50();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE50F0);
  }
  return result;
}

unint64_t sub_1D5990440()
{
  unint64_t result = qword_1EBDE5110;
  if (!qword_1EBDE5110)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBDE5100);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE5110);
  }
  return result;
}

uint64_t sub_1D599049C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1D59904D4()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_1D59904FC()
{
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1D599053C()
{
  uint64_t v2 = *(int **)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1D5984480;
  uint64_t v6 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v4 = (void *)swift_task_alloc();
  v3[2] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_1D5984480;
  return v6();
}

uint64_t sub_1D5990654()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1D599068C(uint64_t a1)
{
  return sub_1D598F854(a1, v1[4], v1[5], v1[6], v1[2], v1[3]);
}

uint64_t dispatch thunk of EventHubProtocol.publish<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of EventHubProtocol.publish<A>(_:atTime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 24))();
}

{
  return (*(uint64_t (**)(void))(a8 + 32))();
}

{
  return (*(uint64_t (**)(void))(a8 + 40))();
}

{
  return (*(uint64_t (**)(void))(a8 + 48))();
}

uint64_t dispatch thunk of EventHubProtocol.unsubscribe(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t type metadata accessor for EventHub()
{
  return self;
}

uint64_t method lookup function for EventHub(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EventHub);
}

uint64_t dispatch thunk of EventHub.__allocating_init(queue:dispatchStrategy:timerProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t sub_1D5990778@<X0>(char *a1@<X8>)
{
  return sub_1D598DC58(*(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 16), a1, *(double *)(v1 + 56));
}

uint64_t sub_1D59907A0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725580);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5990800(void *a1)
{
  return sub_1D59900BC(a1, *(void **)(v1 + 16)) & 1;
}

uint64_t sub_1D5990820()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 64) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1D59908F8()
{
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 32) - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 32) - 8) + 80);
  uint64_t v3 = *(int **)(v0 + 48);
  uint64_t v4 = v0 + v2;
  uint64_t v5 = *(void *)(v0 + ((*(void *)(*(void *)(*(void *)(v0 + 32) - 8) + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *unint64_t v6 = v1;
  v6[1] = sub_1D5984480;
  v6[8] = v5;
  uint64_t v9 = (uint64_t (*)(uint64_t))((char *)v3 + *v3);
  uint64_t v7 = (void *)swift_task_alloc();
  v6[9] = v7;
  *uint64_t v7 = v6;
  v7[1] = sub_1D598FB34;
  return v9(v4);
}

uint64_t sub_1D5990A88(uint64_t a1)
{
  return a1;
}

uint64_t sub_1D5990AC0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1D5990B00(uint64_t a1)
{
  return sub_1D598D844(a1, *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 16), *(uint64_t (**)(void, void))(v1 + 24), *(double *)(v1 + 56));
}

uint64_t static BurnBarDisplayPreference.default()()
{
  uint64_t v0 = sub_1D5AB4450();
  MEMORY[0x1F4188790](v0);
  (*(void (**)(char *, void))(v2 + 104))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F9EB70]);
  return sub_1D5AB3A90();
}

uint64_t Session.token.getter()
{
  uint64_t v0 = sub_1D5AB4610();
  uint64_t v2 = v1;
  type metadata accessor for SessionToken();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v0;
  *(void *)(result + 24) = v2;
  *(unsigned char *)(result + 32) = 0;
  return result;
}

uint64_t CatalogWorkout.metadata()@<X0>(uint64_t a1@<X8>)
{
  v13[15] = a1;
  uint64_t v1 = sub_1D5AB1BB0();
  uint64_t v2 = MEMORY[0x1F4188790](v1 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7257C8);
  MEMORY[0x1F4188790](v3 - 8);
  v13[0] = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4740);
  MEMORY[0x1F4188790](v5 - 8);
  v13[14] = sub_1D5AB29C0();
  v13[13] = sub_1D5AB2A20();
  v13[12] = sub_1D5AB2980();
  v13[11] = sub_1D5AB2990();
  v13[10] = sub_1D5AB2920();
  uint64_t v6 = sub_1D5AB28C0();
  v13[8] = v7;
  v13[9] = v6;
  v13[7] = sub_1D5AB29B0();
  uint64_t v8 = sub_1D5AB2A70();
  v13[5] = v9;
  void v13[6] = v8;
  v13[4] = sub_1D5AB2940();
  uint64_t v10 = sub_1D5AB29D0();
  void v13[2] = v11;
  v13[3] = v10;
  sub_1D5AB29A0();
  v13[1] = sub_1D5AB2900();
  sub_1D5AB2A40();
  sub_1D5AB28D0();
  sub_1D5AB29E0();
  sub_1D5AB2950();
  sub_1D5AB2A50();
  sub_1D5AB29F0();
  sub_1D5AB2970();
  return sub_1D5AB3670();
}

uint64_t Termination.applyingTimestampOffset(_:)()
{
  sub_1D5AB2160();
  return sub_1D5AB2170();
}

uint64_t sub_1D5990EF0()
{
  sub_1D5AB2160();
  return sub_1D5AB2170();
}

uint64_t CadenceMetric.applyingTimestampOffset(_:)()
{
  sub_1D5AB2550();
  return sub_1D5AB2560();
}

uint64_t sub_1D5990FA8()
{
  sub_1D5AB2550();
  return sub_1D5AB2560();
}

uint64_t ResourceGating.release(throwing:)(void *a1, uint64_t a2, uint64_t a3)
{
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v6 = sub_1D5AB5CB0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v13 - v8;
  *(uint64_t *)((char *)&v13 - v8) = (uint64_t)a1;
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(a3 + 48);
  id v11 = a1;
  v10(v9, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t ResourceGating.release(returning:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v7 = sub_1D5AB5CB0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v12 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))((char *)&v12 - v9, a1, AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, uint64_t, uint64_t))(a3 + 48))(v10, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t dispatch thunk of ResourceGating.queueCount.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ResourceGating.query()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ResourceGating.fetch()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 32) + **(int **)(a3 + 32));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D5984480;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of ResourceGating.reset()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ResourceGating.release(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

void static RemoteParticipantDiscoveryExpired.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for RemoteParticipantDiscoveryExpired()
{
  return &type metadata for RemoteParticipantDiscoveryExpired;
}

uint64_t SessionUpdate.applyingTimestampOffset(_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v325 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727930);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  char v348 = (char *)&v289 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  v327 = (char *)&v289 - v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250D8);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v324 = (char *)&v289 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v326 = (char *)&v289 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250D0);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v323 = (char *)&v289 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  char v347 = (char *)&v289 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250E0);
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  uint64_t v322 = (char *)&v289 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  char v346 = (char *)&v289 - v17;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250E8);
  uint64_t v19 = MEMORY[0x1F4188790](v18 - 8);
  uint64_t v321 = (char *)&v289 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  char v345 = (char *)&v289 - v21;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250F0);
  uint64_t v23 = MEMORY[0x1F4188790](v22 - 8);
  uint64_t v320 = (char *)&v289 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  v305 = (char *)&v289 - v25;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7251B0);
  MEMORY[0x1F4188790](v26 - 8);
  v297 = (char *)&v289 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7257D8);
  uint64_t v29 = MEMORY[0x1F4188790](v28 - 8);
  uint64_t v319 = (char *)&v289 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  char v344 = (char *)&v289 - v31;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250F8);
  uint64_t v33 = MEMORY[0x1F4188790](v32 - 8);
  uint64_t v315 = (char *)&v289 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v33);
  uint64_t v36 = (char *)&v289 - v35;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725108);
  MEMORY[0x1F4188790](v37 - 8);
  v296 = (char *)&v289 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725110);
  uint64_t v40 = MEMORY[0x1F4188790](v39 - 8);
  uint64_t v314 = (char *)&v289 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v40);
  uint64_t v343 = (char *)&v289 - v42;
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725100);
  uint64_t v44 = MEMORY[0x1F4188790](v43 - 8);
  v313 = (char *)&v289 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v44);
  v342 = (char *)&v289 - v46;
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725118);
  uint64_t v48 = MEMORY[0x1F4188790](v47 - 8);
  v312 = (char *)&v289 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v48);
  uint64_t v341 = (char *)&v289 - v50;
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725120);
  uint64_t v52 = MEMORY[0x1F4188790](v51 - 8);
  v311 = (char *)&v289 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v52);
  int v340 = (char *)&v289 - v54;
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7257E0);
  MEMORY[0x1F4188790](v55 - 8);
  v295 = (char *)&v289 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7257E8);
  MEMORY[0x1F4188790](v57 - 8);
  v294 = (char *)&v289 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725128);
  uint64_t v60 = MEMORY[0x1F4188790](v59 - 8);
  v309 = (char *)&v289 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v60);
  v339 = (char *)&v289 - v62;
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725130);
  uint64_t v64 = MEMORY[0x1F4188790](v63 - 8);
  v308 = (char *)&v289 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v64);
  v338 = (char *)&v289 - v66;
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725138);
  uint64_t v68 = MEMORY[0x1F4188790](v67 - 8);
  v307 = (char *)&v289 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v68);
  uint64_t v337 = (char *)&v289 - v70;
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725140);
  uint64_t v72 = MEMORY[0x1F4188790](v71 - 8);
  uint64_t v306 = (char *)&v289 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v72);
  v336 = (char *)&v289 - v74;
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725148);
  uint64_t v76 = MEMORY[0x1F4188790](v75 - 8);
  v304 = (char *)&v289 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v76);
  v335 = (char *)&v289 - v78;
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725150);
  uint64_t v80 = MEMORY[0x1F4188790](v79 - 8);
  v303 = (char *)&v289 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v80);
  uint64_t v349 = (char *)&v289 - v82;
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725158);
  uint64_t v84 = MEMORY[0x1F4188790](v83 - 8);
  v302 = (char *)&v289 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v84);
  v334 = (char *)&v289 - v86;
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725160);
  MEMORY[0x1F4188790](v87 - 8);
  v293 = (char *)&v289 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725168);
  MEMORY[0x1F4188790](v89 - 8);
  v292 = (char *)&v289 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725170);
  MEMORY[0x1F4188790](v91 - 8);
  v291 = (char *)&v289 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725178);
  uint64_t v94 = MEMORY[0x1F4188790](v93 - 8);
  v299 = (char *)&v289 - ((v95 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v94);
  uint64_t v333 = (char *)&v289 - v96;
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725188);
  uint64_t v98 = MEMORY[0x1F4188790](v97 - 8);
  v301 = (char *)&v289 - ((v99 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v98);
  uint64_t v332 = (char *)&v289 - v100;
  uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725180);
  uint64_t v102 = MEMORY[0x1F4188790](v101 - 8);
  v310 = (char *)&v289 - ((v103 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v102);
  uint64_t v105 = (char *)&v289 - v104;
  uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725190);
  uint64_t v107 = MEMORY[0x1F4188790](v106 - 8);
  v300 = (char *)&v289 - ((v108 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v107);
  uint64_t v331 = (char *)&v289 - v109;
  uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725198);
  uint64_t v111 = MEMORY[0x1F4188790](v110 - 8);
  v298 = (char *)&v289 - ((v112 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v111);
  uint64_t v330 = (char *)&v289 - v113;
  uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7251A0);
  uint64_t v115 = MEMORY[0x1F4188790](v114 - 8);
  uint64_t v117 = (char *)&v289 - ((v116 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v115);
  uint64_t v119 = (char *)&v289 - v118;
  uint64_t v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7251A8);
  MEMORY[0x1F4188790](v120 - 8);
  char v122 = (char *)&v289 - ((v121 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7251B8);
  uint64_t v124 = MEMORY[0x1F4188790](v123 - 8);
  v126 = (char *)&v289 - ((v125 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v124);
  uint64_t v329 = (char *)&v289 - v127;
  int v318 = sub_1D5AB2730();
  uint64_t v317 = sub_1D5AB2740();
  uint64_t v316 = v128;
  uint64_t v350 = v1;
  sub_1D5AB2680();
  uint64_t v129 = sub_1D5AB2490();
  uint64_t v130 = *(void *)(v129 - 8);
  int v131 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v130 + 48))(v126, 1, v129);
  v328 = v36;
  if (v131 == 1)
  {
    sub_1D594F53C((uint64_t)v126, &qword_1EA7251B8);
    uint64_t v132 = 1;
    uint64_t v133 = v329;
  }
  else
  {
    uint64_t v134 = sub_1D5AB2ED0();
    uint64_t v135 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v134 - 8) + 56);
    v290 = v122;
    v135(v122, 1, 1, v134);
    uint64_t v136 = sub_1D5AB2230();
    uint64_t v137 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v136 - 8) + 56);
    v137(v119, 1, 1, v136);
    v137(v117, 1, 1, v136);
    sub_1D5AB2440();
    uint64_t v138 = v329;
    uint64_t v139 = (uint64_t)v290;
    sub_1D5AB2480();
    sub_1D594F53C((uint64_t)v117, &qword_1EA7251A0);
    sub_1D594F53C((uint64_t)v119, &qword_1EA7251A0);
    sub_1D594F53C(v139, &qword_1EA7251A8);
    (*(void (**)(char *, uint64_t))(v130 + 8))(v126, v129);
    uint64_t v132 = 0;
    uint64_t v133 = v138;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v130 + 56))(v133, v132, 1, v129);
  uint64_t v140 = (uint64_t)v298;
  sub_1D5AB2760();
  uint64_t v141 = sub_1D5AB3530();
  uint64_t v142 = *(void *)(v141 - 8);
  int v143 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v142 + 48))(v140, 1, v141);
  uint64_t v144 = (uint64_t)v299;
  if (v143 == 1)
  {
    sub_1D594F53C(v140, &qword_1EA725198);
    uint64_t v145 = 1;
    uint64_t v146 = v331;
    uint64_t v147 = v330;
  }
  else
  {
    sub_1D5AB3510();
    uint64_t v147 = v330;
    sub_1D5AB3520();
    (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v140, v141);
    uint64_t v145 = 0;
    uint64_t v146 = v331;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v142 + 56))(v147, v145, 1, v141);
  uint64_t v148 = (uint64_t)v300;
  sub_1D5AB2690();
  uint64_t v149 = sub_1D5AB2570();
  uint64_t v150 = *(void *)(v149 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v150 + 48))(v148, 1, v149) == 1)
  {
    sub_1D594F53C(v148, &qword_1EA725190);
    uint64_t v151 = 1;
  }
  else
  {
    sub_1D5AB2550();
    sub_1D5AB2560();
    (*(void (**)(uint64_t, uint64_t))(v150 + 8))(v148, v149);
    uint64_t v151 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v150 + 56))(v146, v151, 1, v149);
  uint64_t v152 = (uint64_t)v310;
  sub_1D5AB26E0();
  uint64_t v153 = sub_1D5AB2D60();
  uint64_t v154 = *(void *)(v153 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v154 + 48))(v152, 1, v153) == 1)
  {
    sub_1D594F53C(v152, &qword_1EA725180);
    uint64_t v155 = 1;
  }
  else
  {
    sub_1D5AB2D40();
    sub_1D5AB2D50();
    (*(void (**)(uint64_t, uint64_t))(v154 + 8))(v152, v153);
    uint64_t v155 = 0;
  }
  char v156 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v154 + 56);
  v310 = v105;
  v156(v105, v155, 1, v153);
  uint64_t v157 = (uint64_t)v301;
  sub_1D5AB27D0();
  uint64_t v158 = sub_1D5AB4A30();
  uint64_t v159 = *(void *)(v158 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v159 + 48))(v157, 1, v158) == 1)
  {
    sub_1D594F53C(v157, &qword_1EA725188);
    uint64_t v160 = 1;
    uint64_t v161 = v332;
  }
  else
  {
    uint64_t v162 = v157;
    sub_1D5AB4A10();
    uint64_t v161 = v332;
    sub_1D5AB4A20();
    (*(void (**)(uint64_t, uint64_t))(v159 + 8))(v162, v158);
    uint64_t v160 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v159 + 56))(v161, v160, 1, v158);
  sub_1D5AB2750();
  uint64_t v163 = sub_1D5AB31E0();
  uint64_t v164 = *(void *)(v163 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v164 + 48))(v144, 1, v163) == 1)
  {
    sub_1D594F53C(v144, &qword_1EA725178);
    uint64_t v165 = 1;
    uint64_t v166 = (uint64_t)v312;
    uint64_t v167 = v336;
    uint64_t v168 = v333;
  }
  else
  {
    uint64_t v169 = sub_1D5AB3AA0();
    uint64_t v170 = (uint64_t)v291;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v169 - 8) + 56))(v291, 1, 1, v169);
    uint64_t v171 = sub_1D5AB3B00();
    uint64_t v172 = (uint64_t)v292;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v171 - 8) + 56))(v292, 1, 1, v171);
    uint64_t v173 = sub_1D5AB3BF0();
    uint64_t v174 = (uint64_t)v293;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v173 - 8) + 56))(v293, 1, 1, v173);
    sub_1D5AB31C0();
    uint64_t v168 = v333;
    sub_1D5AB31D0();
    sub_1D594F53C(v174, &qword_1EA725160);
    sub_1D594F53C(v172, &qword_1EA725168);
    sub_1D594F53C(v170, &qword_1EA725170);
    (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v144, v163);
    uint64_t v165 = 0;
    uint64_t v166 = (uint64_t)v312;
    uint64_t v167 = v336;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v164 + 56))(v168, v165, 1, v163);
  uint64_t v175 = (uint64_t)v302;
  sub_1D5AB26B0();
  uint64_t v176 = sub_1D5AB2AF0();
  uint64_t v177 = *(void *)(v176 - 8);
  int v178 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v177 + 48))(v175, 1, v176);
  uint64_t v179 = (uint64_t)v308;
  if (v178 == 1)
  {
    sub_1D594F53C(v175, &qword_1EA725158);
    uint64_t v180 = 1;
    uint64_t v181 = v334;
  }
  else
  {
    uint64_t v182 = v175;
    sub_1D5AB2AD0();
    uint64_t v181 = v334;
    sub_1D5AB2AE0();
    (*(void (**)(uint64_t, uint64_t))(v177 + 8))(v182, v176);
    uint64_t v180 = 0;
  }
  uint64_t v183 = (uint64_t)v309;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v177 + 56))(v181, v180, 1, v176);
  uint64_t v184 = (uint64_t)v303;
  sub_1D5AB2670();
  uint64_t v185 = sub_1D5AB22E0();
  uint64_t v186 = *(void *)(v185 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v186 + 48))(v184, 1, v185) == 1)
  {
    sub_1D594F53C(v184, &qword_1EA725150);
    uint64_t v187 = 1;
  }
  else
  {
    sub_1D5AB22B0();
    sub_1D5AB22D0();
    (*(void (**)(uint64_t, uint64_t))(v186 + 8))(v184, v185);
    uint64_t v187 = 0;
  }
  uint64_t v188 = (uint64_t)v311;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v186 + 56))(v349, v187, 1, v185);
  uint64_t v189 = (uint64_t)v304;
  sub_1D5AB2710();
  uint64_t v190 = sub_1D5AB2F30();
  uint64_t v191 = *(void *)(v190 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v191 + 48))(v189, 1, v190) == 1)
  {
    sub_1D594F53C(v189, &qword_1EA725148);
    uint64_t v192 = 1;
    uint64_t v193 = v335;
  }
  else
  {
    uint64_t v194 = v189;
    sub_1D5AB2F10();
    uint64_t v193 = v335;
    sub_1D5AB2F20();
    (*(void (**)(uint64_t, uint64_t))(v191 + 8))(v194, v190);
    uint64_t v192 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v191 + 56))(v193, v192, 1, v190);
  uint64_t v195 = (uint64_t)v306;
  sub_1D5AB26F0();
  uint64_t v196 = sub_1D5AB2DC0();
  uint64_t v197 = *(void *)(v196 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v197 + 48))(v195, 1, v196) == 1)
  {
    sub_1D594F53C(v195, &qword_1EA725140);
    uint64_t v198 = 1;
  }
  else
  {
    sub_1D5AB2DA0();
    sub_1D5AB2DB0();
    (*(void (**)(uint64_t, uint64_t))(v197 + 8))(v195, v196);
    uint64_t v198 = 0;
  }
  uint64_t v199 = (uint64_t)v315;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v197 + 56))(v167, v198, 1, v196);
  uint64_t v200 = (uint64_t)v307;
  sub_1D5AB2630();
  uint64_t v201 = sub_1D5AB1E10();
  uint64_t v202 = *(void *)(v201 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v202 + 48))(v200, 1, v201) == 1)
  {
    sub_1D594F53C(v200, &qword_1EA725138);
    uint64_t v203 = 1;
    uint64_t v204 = v337;
  }
  else
  {
    uint64_t v205 = v200;
    sub_1D5AB1DF0();
    uint64_t v204 = v337;
    sub_1D5AB1E00();
    (*(void (**)(uint64_t, uint64_t))(v202 + 8))(v205, v201);
    uint64_t v203 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v202 + 56))(v204, v203, 1, v201);
  sub_1D5AB2770();
  uint64_t v206 = sub_1D5AB35D0();
  uint64_t v207 = *(void *)(v206 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v207 + 48))(v179, 1, v206) == 1)
  {
    sub_1D594F53C(v179, &qword_1EA725130);
    uint64_t v208 = 1;
    uint64_t v209 = v338;
  }
  else
  {
    sub_1D5AB35A0();
    uint64_t v209 = v338;
    sub_1D5AB35C0();
    (*(void (**)(uint64_t, uint64_t))(v207 + 8))(v179, v206);
    uint64_t v208 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v207 + 56))(v209, v208, 1, v206);
  sub_1D5AB2610();
  uint64_t v210 = sub_1D5AB2FC0();
  uint64_t v211 = *(void *)(v210 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v211 + 48))(v183, 1, v210) == 1)
  {
    sub_1D594F53C(v183, &qword_1EA725128);
    uint64_t v212 = 1;
    uint64_t v213 = v339;
  }
  else
  {
    uint64_t v214 = sub_1D5AB3110();
    uint64_t v215 = (uint64_t)v294;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v214 - 8) + 56))(v294, 1, 1, v214);
    uint64_t v216 = sub_1D5AB3100();
    uint64_t v217 = (uint64_t)v295;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v216 - 8) + 56))(v295, 1, 1, v216);
    uint64_t v218 = v183;
    sub_1D5AB2FA0();
    uint64_t v213 = v339;
    sub_1D5AB2FB0();
    sub_1D594F53C(v217, &qword_1EA7257E0);
    sub_1D594F53C(v215, &qword_1EA7257E8);
    (*(void (**)(uint64_t, uint64_t))(v211 + 8))(v218, v210);
    uint64_t v212 = 0;
  }
  uint64_t v219 = v343;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v211 + 56))(v213, v212, 1, v210);
  sub_1D5AB2620();
  uint64_t v220 = sub_1D5AB3E90();
  uint64_t v221 = *(void *)(v220 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v221 + 48))(v188, 1, v220) == 1)
  {
    sub_1D594F53C(v188, &qword_1EA725120);
    uint64_t v222 = 1;
    uint64_t v223 = (uint64_t)v314;
    uint64_t v224 = v340;
  }
  else
  {
    sub_1D5AB3E70();
    uint64_t v224 = v340;
    sub_1D5AB3E80();
    (*(void (**)(uint64_t, uint64_t))(v221 + 8))(v188, v220);
    uint64_t v222 = 0;
    uint64_t v223 = (uint64_t)v314;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v221 + 56))(v224, v222, 1, v220);
  sub_1D5AB2640();
  uint64_t v225 = sub_1D5AB1E70();
  uint64_t v226 = *(void *)(v225 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v226 + 48))(v166, 1, v225) == 1)
  {
    sub_1D594F53C(v166, &qword_1EA725118);
    uint64_t v227 = 1;
    uint64_t v228 = v341;
  }
  else
  {
    sub_1D5AB1E50();
    uint64_t v228 = v341;
    sub_1D5AB1E60();
    (*(void (**)(uint64_t, uint64_t))(v226 + 8))(v166, v225);
    uint64_t v227 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v226 + 56))(v228, v227, 1, v225);
  uint64_t v229 = (uint64_t)v313;
  sub_1D5AB26C0();
  uint64_t v230 = sub_1D5AB2B30();
  uint64_t v231 = *(void *)(v230 - 8);
  int v232 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v231 + 48))(v229, 1, v230);
  uint64_t v233 = v342;
  if (v232 == 1)
  {
    sub_1D594F53C(v229, &qword_1EA725100);
    uint64_t v234 = 1;
  }
  else
  {
    sub_1D5AB2B10();
    sub_1D5AB2B20();
    (*(void (**)(uint64_t, uint64_t))(v231 + 8))(v229, v230);
    uint64_t v234 = 0;
  }
  uint64_t v235 = (uint64_t)v320;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v231 + 56))(v233, v234, 1, v230);
  sub_1D5AB27C0();
  uint64_t v236 = sub_1D5AB4970();
  uint64_t v237 = *(void *)(v236 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v237 + 48))(v223, 1, v236) == 1)
  {
    sub_1D594F53C(v223, &qword_1EA725110);
    uint64_t v238 = 1;
  }
  else
  {
    uint64_t v239 = v223;
    sub_1D5AB4940();
    uint64_t v240 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7251C8);
    uint64_t v241 = (uint64_t)v296;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v240 - 8) + 56))(v296, 1, 1, v240);
    sub_1D5AB4960();
    sub_1D594F53C(v241, &qword_1EA725108);
    (*(void (**)(uint64_t, uint64_t))(v237 + 8))(v239, v236);
    uint64_t v238 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v237 + 56))(v219, v238, 1, v236);
  sub_1D5AB2780();
  uint64_t v242 = sub_1D5AB3A00();
  uint64_t v243 = *(void *)(v242 - 8);
  int v244 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v243 + 48))(v199, 1, v242);
  uint64_t v245 = v346;
  if (v244 == 1)
  {
    sub_1D594F53C(v199, &qword_1EA7250F8);
    uint64_t v246 = 1;
    v247 = v328;
  }
  else
  {
    sub_1D5AB39E0();
    uint64_t v248 = v328;
    sub_1D5AB39F0();
    (*(void (**)(uint64_t, uint64_t))(v243 + 8))(v199, v242);
    uint64_t v246 = 0;
    v247 = v248;
  }
  uint64_t v249 = (uint64_t)v319;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v243 + 56))(v247, v246, 1, v242);
  sub_1D5AB2650();
  uint64_t v250 = sub_1D5AB2150();
  uint64_t v251 = *(void *)(v250 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v251 + 48))(v249, 1, v250) == 1)
  {
    sub_1D594F53C(v249, &qword_1EA7257D8);
    uint64_t v252 = 1;
    uint64_t v253 = v327;
    uint64_t v254 = v305;
    uint64_t v255 = v344;
  }
  else
  {
    uint64_t v256 = v249;
    sub_1D5AB2110();
    uint64_t v257 = sub_1D5AB2D20();
    uint64_t v258 = (uint64_t)v297;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v257 - 8) + 56))(v297, 1, 1, v257);
    char v355 = 1;
    char v354 = 1;
    char v353 = 1;
    char v352 = 1;
    char v351 = 1;
    uint64_t v255 = v344;
    sub_1D5AB2130();
    sub_1D594F53C(v258, &qword_1EA7251B0);
    (*(void (**)(uint64_t, uint64_t))(v251 + 8))(v256, v250);
    uint64_t v252 = 0;
    uint64_t v253 = v327;
    uint64_t v254 = v305;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v251 + 56))(v255, v252, 1, v250);
  sub_1D5AB2660();
  uint64_t v259 = sub_1D5AB2180();
  uint64_t v260 = *(void *)(v259 - 8);
  int v261 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v260 + 48))(v235, 1, v259);
  uint64_t v262 = v326;
  if (v261 == 1)
  {
    sub_1D594F53C(v235, &qword_1EA7250F0);
    uint64_t v263 = 1;
  }
  else
  {
    sub_1D5AB2160();
    sub_1D5AB2170();
    (*(void (**)(uint64_t, uint64_t))(v260 + 8))(v235, v259);
    uint64_t v263 = 0;
  }
  int v264 = v245;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v260 + 56))(v254, v263, 1, v259);
  uint64_t v265 = (uint64_t)v321;
  sub_1D5AB2700();
  uint64_t v266 = sub_1D5AB2E60();
  uint64_t v267 = *(void *)(v266 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v267 + 48))(v265, 1, v266) == 1)
  {
    sub_1D594F53C(v265, &qword_1EA7250E8);
    uint64_t v268 = 1;
    uint64_t v269 = v345;
  }
  else
  {
    sub_1D5AB2E40();
    uint64_t v269 = v345;
    sub_1D5AB2E50();
    (*(void (**)(uint64_t, uint64_t))(v267 + 8))(v265, v266);
    uint64_t v268 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v267 + 56))(v269, v268, 1, v266);
  uint64_t v270 = (uint64_t)v322;
  sub_1D5AB26D0();
  uint64_t v271 = sub_1D5AB3250();
  uint64_t v272 = *(void *)(v271 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v272 + 48))(v270, 1, v271) == 1)
  {
    sub_1D594F53C(v270, &qword_1EA7250E0);
    uint64_t v273 = 1;
  }
  else
  {
    sub_1D5AB3220();
    sub_1D5AB3230();
    (*(void (**)(uint64_t, uint64_t))(v272 + 8))(v270, v271);
    uint64_t v273 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v272 + 56))(v264, v273, 1, v271);
  uint64_t v274 = (uint64_t)v323;
  sub_1D5AB2790();
  uint64_t v275 = sub_1D5AB3A50();
  uint64_t v276 = *(void *)(v275 - 8);
  int v277 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v276 + 48))(v274, 1, v275);
  uint64_t v278 = (uint64_t)v324;
  if (v277 == 1)
  {
    sub_1D594F53C(v274, &qword_1EA7250D0);
    uint64_t v279 = 1;
    v280 = v347;
  }
  else
  {
    sub_1D5AB3A30();
    v280 = v347;
    sub_1D5AB3A40();
    (*(void (**)(uint64_t, uint64_t))(v276 + 8))(v274, v275);
    uint64_t v279 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v276 + 56))(v280, v279, 1, v275);
  sub_1D5AB27A0();
  uint64_t v281 = sub_1D5AB3B50();
  uint64_t v282 = *(void *)(v281 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v282 + 48))(v278, 1, v281) == 1)
  {
    sub_1D594F53C(v278, &qword_1EA7250D8);
    uint64_t v283 = 1;
  }
  else
  {
    sub_1D5AB3B30();
    sub_1D5AB3B40();
    (*(void (**)(uint64_t, uint64_t))(v282 + 8))(v278, v281);
    uint64_t v283 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v282 + 56))(v262, v283, 1, v281);
  sub_1D5AB27B0();
  uint64_t v284 = (uint64_t)v348;
  uint64_t v285 = sub_1D5AB48E0();
  uint64_t v286 = *(void *)(v285 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v286 + 48))(v284, 1, v285) == 1)
  {
    sub_1D594F53C(v284, &qword_1EA727930);
    uint64_t v287 = 1;
  }
  else
  {
    sub_1D5AB48B0();
    sub_1D5AB48D0();
    (*(void (**)(uint64_t, uint64_t))(v286 + 8))(v284, v285);
    uint64_t v287 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v286 + 56))(v253, v287, 1, v285);
  sub_1D5AB26A0();
  return sub_1D5AB2720();
}

uint64_t RemoteBrowsingGuestEnvironmentReceived.environment.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB4200();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

void static RemoteBrowsingGuestEnvironmentReceived.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for RemoteBrowsingGuestEnvironmentReceived(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4200();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for RemoteBrowsingGuestEnvironmentReceived(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB4200();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for RemoteBrowsingGuestEnvironmentReceived(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4200();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for RemoteBrowsingGuestEnvironmentReceived(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4200();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for RemoteBrowsingGuestEnvironmentReceived(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4200();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for RemoteBrowsingGuestEnvironmentReceived(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4200();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteBrowsingGuestEnvironmentReceived(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D59943B0);
}

uint64_t sub_1D59943B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4200();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for RemoteBrowsingGuestEnvironmentReceived(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D5994430);
}

uint64_t sub_1D5994430(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4200();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for RemoteBrowsingGuestEnvironmentReceived()
{
  uint64_t result = qword_1EA7257F0;
  if (!qword_1EA7257F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D59944EC()
{
  uint64_t result = sub_1D5AB4200();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void static DistributedSessionCancelled.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for DistributedSessionCancelled()
{
  return &type metadata for DistributedSessionCancelled;
}

uint64_t dispatch thunk of AdminClientProtocol.executeScoresTasks()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AdminClientProtocol.deleteLocalScores()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AdminClientProtocol.requestPersistentStoreStatistics(requiredDataProtection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of AdminClientProtocol.forceServerSyncBootstrap()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of NetworkMonitoring.cellularDataRestrictedState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of NetworkMonitoring.isAirplaneModeEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of NetworkMonitoring.isCellularDataEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of NetworkMonitoring.isRoaming.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of NetworkMonitoring.isWiFiEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of NetworkMonitoring.queryCurrentNetwork()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of NetworkMonitoring.queryInterfaceAvailability()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t RemoteBrowsingGuestAuthenticationCompleted.handshake.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB43F0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

void static RemoteBrowsingGuestAuthenticationCompleted.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for RemoteBrowsingGuestAuthenticationCompleted(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB43F0();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for RemoteBrowsingGuestAuthenticationCompleted(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB43F0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for RemoteBrowsingGuestAuthenticationCompleted(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB43F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for RemoteBrowsingGuestAuthenticationCompleted(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB43F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for RemoteBrowsingGuestAuthenticationCompleted(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB43F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for RemoteBrowsingGuestAuthenticationCompleted(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB43F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteBrowsingGuestAuthenticationCompleted(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D5994964);
}

uint64_t sub_1D5994964(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB43F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for RemoteBrowsingGuestAuthenticationCompleted(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D59949E4);
}

uint64_t sub_1D59949E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB43F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for RemoteBrowsingGuestAuthenticationCompleted()
{
  uint64_t result = qword_1EA725800;
  if (!qword_1EA725800) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D5994AA0()
{
  uint64_t result = sub_1D5AB43F0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

Swift::Void __swiftcall TextOutputStreamLog.write(_:)(Swift::String a1)
{
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE5400);
  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_1D5AB4B30();
  os_log_type_t v5 = sub_1D5AB5430();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = v7;
    *(_DWORD *)uint64_t v6 = 136446210;
    swift_bridgeObjectRetain();
    sub_1D5951500(countAndFlagsBits, (unint64_t)object, &v8);
    sub_1D5AB5680();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D5947000, v4, v5, "%{public}s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v7, -1, -1);
    MEMORY[0x1D945AAC0](v6, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_1D5994CE0(uint64_t a1, uint64_t a2)
{
}

ValueMetadata *type metadata accessor for TextOutputStreamLog()
{
  return &type metadata for TextOutputStreamLog;
}

uint64_t dispatch thunk of TransportClient.sendRequest(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

{
  uint64_t v3;
  void *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 40) + **(int **)(a3 + 40));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D598AF68;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of TransportClient.sendRequest<A>(_:payload:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 16))();
}

{
  uint64_t v7;
  void *v15;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;

  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a7 + 48)
                                                                                              + **(int **)(a7 + 48));
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *uint64_t v15 = v7;
  v15[1] = sub_1D598AF68;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of TransportClient.sendRequest<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t dispatch thunk of TransportClient.sendRequest<A, B>(_:payload:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(void))(a10 + 32))();
}

uint64_t dispatch thunk of TransportClient.sendRequest<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a7 + 56)
                                                                                              + **(int **)(a7 + 56));
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *uint64_t v15 = v7;
  v15[1] = sub_1D598AF68;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of TransportClient.sendRequest<A, B>(_:payload:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a11 + 64) + **(int **)(a11 + 64));
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v11 + 16) = v18;
  *uint64_t v18 = v11;
  v18[1] = sub_1D5984480;
  return v20(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

uint64_t dispatch thunk of TransportClient.broadcastEvent(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of TransportClient.broadcastEvent<A>(_:payload:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 80))();
}

void sub_1D599524C()
{
  id v0 = (id)MobileGestalt_get_current_device();
  if (v0)
  {
    unint64_t v1 = v0;
    int deviceClassNumber = MobileGestalt_get_deviceClassNumber();

    byte_1EBDE10D8 = deviceClassNumber == 3;
  }
  else
  {
    __break(1u);
  }
}

uint64_t static Platform.current.getter()
{
  if (qword_1EBDE4BD0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return byte_1EBDE10D8;
}

uint64_t static Platform.current.setter(char a1)
{
  if (qword_1EBDE4BD0 != -1) {
    swift_once();
  }
  uint64_t result = swift_beginAccess();
  byte_1EBDE10D8 = a1;
  return result;
}

uint64_t (*static Platform.current.modify())()
{
  if (qword_1EBDE4BD0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

void Platform.systemVersion.getter()
{
  id v0 = (id)MobileGestalt_get_current_device();
  if (v0)
  {
    unint64_t v1 = v0;
    id v2 = (id)MobileGestalt_copy_buildVersion_obj();

    if (v2)
    {
      sub_1D5AB4DF0();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id Platform.internalInstall.getter()
{
  id v0 = self;
  uint64_t v1 = sub_1D5AB4E30();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_isInternal_, v1 + 32);
  swift_release();
  return v2;
}

BOOL Platform.storeDemoMode.getter()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  Boolean keyExistsAndHasValidFormat = 0;
  id v0 = (__CFString *)sub_1D5AB4DE0();
  uint64_t v1 = (__CFString *)sub_1D5AB4DE0();
  int AppBooleanValue = CFPreferencesGetAppBooleanValue(v0, v1, &keyExistsAndHasValidFormat);

  if (AppBooleanValue) {
    BOOL v3 = keyExistsAndHasValidFormat == 0;
  }
  else {
    BOOL v3 = 1;
  }
  return !v3;
}

SeymourClient::UserDefaultsKeys_optional __swiftcall UserDefaultsKeys.init(rawValue:)(Swift::String rawValue)
{
  id v2 = v1;
  uint64_t v3 = sub_1D5AB5B20();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 69;
  switch(v3)
  {
    case 0:
      goto LABEL_71;
    case 1:
      char v5 = 1;
      goto LABEL_71;
    case 2:
      char v5 = 2;
      goto LABEL_71;
    case 3:
      char v5 = 3;
      goto LABEL_71;
    case 4:
      char v5 = 4;
      goto LABEL_71;
    case 5:
      char v5 = 5;
      goto LABEL_71;
    case 6:
      char v5 = 6;
      goto LABEL_71;
    case 7:
      char v5 = 7;
      goto LABEL_71;
    case 8:
      char v5 = 8;
      goto LABEL_71;
    case 9:
      char v5 = 9;
      goto LABEL_71;
    case 10:
      char v5 = 10;
      goto LABEL_71;
    case 11:
      char v5 = 11;
      goto LABEL_71;
    case 12:
      char v5 = 12;
      goto LABEL_71;
    case 13:
      char v5 = 13;
      goto LABEL_71;
    case 14:
      char v5 = 14;
      goto LABEL_71;
    case 15:
      char v5 = 15;
      goto LABEL_71;
    case 16:
      char v5 = 16;
      goto LABEL_71;
    case 17:
      char v5 = 17;
      goto LABEL_71;
    case 18:
      char v5 = 18;
      goto LABEL_71;
    case 19:
      char v5 = 19;
      goto LABEL_71;
    case 20:
      char v5 = 20;
      goto LABEL_71;
    case 21:
      char v5 = 21;
      goto LABEL_71;
    case 22:
      char v5 = 22;
      goto LABEL_71;
    case 23:
      char v5 = 23;
      goto LABEL_71;
    case 24:
      char v5 = 24;
      goto LABEL_71;
    case 25:
      char v5 = 25;
      goto LABEL_71;
    case 26:
      char v5 = 26;
      goto LABEL_71;
    case 27:
      char v5 = 27;
      goto LABEL_71;
    case 28:
      char v5 = 28;
      goto LABEL_71;
    case 29:
      char v5 = 29;
      goto LABEL_71;
    case 30:
      char v5 = 30;
      goto LABEL_71;
    case 31:
      char v5 = 31;
      goto LABEL_71;
    case 32:
      char v5 = 32;
      goto LABEL_71;
    case 33:
      char v5 = 33;
      goto LABEL_71;
    case 34:
      char v5 = 34;
      goto LABEL_71;
    case 35:
      char v5 = 35;
      goto LABEL_71;
    case 36:
      char v5 = 36;
      goto LABEL_71;
    case 37:
      char v5 = 37;
      goto LABEL_71;
    case 38:
      char v5 = 38;
      goto LABEL_71;
    case 39:
      char v5 = 39;
      goto LABEL_71;
    case 40:
      char v5 = 40;
      goto LABEL_71;
    case 41:
      char v5 = 41;
      goto LABEL_71;
    case 42:
      char v5 = 42;
      goto LABEL_71;
    case 43:
      char v5 = 43;
      goto LABEL_71;
    case 44:
      char v5 = 44;
      goto LABEL_71;
    case 45:
      char v5 = 45;
      goto LABEL_71;
    case 46:
      char v5 = 46;
      goto LABEL_71;
    case 47:
      char v5 = 47;
      goto LABEL_71;
    case 48:
      char v5 = 48;
      goto LABEL_71;
    case 49:
      char v5 = 49;
      goto LABEL_71;
    case 50:
      char v5 = 50;
      goto LABEL_71;
    case 51:
      char v5 = 51;
      goto LABEL_71;
    case 52:
      char v5 = 52;
      goto LABEL_71;
    case 53:
      char v5 = 53;
      goto LABEL_71;
    case 54:
      char v5 = 54;
      goto LABEL_71;
    case 55:
      char v5 = 55;
      goto LABEL_71;
    case 56:
      char v5 = 56;
      goto LABEL_71;
    case 57:
      char v5 = 57;
      goto LABEL_71;
    case 58:
      char v5 = 58;
      goto LABEL_71;
    case 59:
      char v5 = 59;
      goto LABEL_71;
    case 60:
      char v5 = 60;
      goto LABEL_71;
    case 61:
      char v5 = 61;
      goto LABEL_71;
    case 62:
      char v5 = 62;
      goto LABEL_71;
    case 63:
      char v5 = 63;
      goto LABEL_71;
    case 64:
      char v5 = 64;
      goto LABEL_71;
    case 65:
      char v5 = 65;
      goto LABEL_71;
    case 66:
      char v5 = 66;
      goto LABEL_71;
    case 67:
      char v5 = 67;
      goto LABEL_71;
    case 68:
      char v5 = 68;
LABEL_71:
      char v6 = v5;
      break;
    case 69:
      break;
    case 70:
      char v6 = 70;
      break;
    case 71:
      char v6 = 71;
      break;
    case 72:
      char v6 = 72;
      break;
    case 73:
      char v6 = 73;
      break;
    case 74:
      char v6 = 74;
      break;
    case 75:
      char v6 = 75;
      break;
    case 76:
      char v6 = 76;
      break;
    case 77:
      char v6 = 77;
      break;
    case 78:
      char v6 = 78;
      break;
    case 79:
      char v6 = 79;
      break;
    case 80:
      char v6 = 80;
      break;
    case 81:
      char v6 = 81;
      break;
    case 82:
      char v6 = 82;
      break;
    case 83:
      char v6 = 83;
      break;
    case 84:
      char v6 = 84;
      break;
    case 85:
      char v6 = 85;
      break;
    case 86:
      char v6 = 86;
      break;
    default:
      char v6 = 87;
      break;
  }
  *id v2 = v6;
  return result;
}

unint64_t UserDefaultsKeys.rawValue.getter()
{
  unint64_t result = 0xD00000000000001ALL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000019;
      break;
    case 2:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 3:
    case 0x2A:
    case 0x36:
    case 0x38:
    case 0x3D:
    case 0x3F:
    case 0x46:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    case 6:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 7:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 8:
      unint64_t result = 0xD000000000000016;
      break;
    case 9:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 0xA:
      unint64_t result = 0xD000000000000017;
      break;
    case 0xB:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 0xC:
      unint64_t result = 0xD000000000000012;
      break;
    case 0xD:
      unint64_t result = 0xD000000000000010;
      break;
    case 0xE:
      unint64_t result = 0xD000000000000010;
      break;
    case 0xF:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 0x10:
      unint64_t result = 0xD000000000000019;
      break;
    case 0x11:
      unint64_t result = 0x726F4D656C696D53;
      break;
    case 0x12:
      unint64_t result = 0x7055654D6D616542;
      break;
    case 0x13:
      unint64_t result = 0xD000000000000014;
      break;
    case 0x14:
      unint64_t result = 0xD000000000000013;
      break;
    case 0x15:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 0x16:
      unint64_t result = 0x6E746946656B6146;
      break;
    case 0x17:
      unint64_t result = 0x43706954656B6146;
      break;
    case 0x18:
      unint64_t result = 0x73627553656B6146;
      break;
    case 0x19:
      unint64_t result = 0xD000000000000017;
      break;
    case 0x1A:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 0x1B:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 0x1C:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 0x1D:
      unint64_t result = 0xD000000000000010;
      break;
    case 0x1E:
      unint64_t result = 0xD000000000000026;
      break;
    case 0x1F:
      unint64_t result = 0xD000000000000023;
      break;
    case 0x20:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 0x21:
      unint64_t result = 0xD000000000000013;
      break;
    case 0x22:
      unint64_t result = 0xD000000000000023;
      break;
    case 0x23:
      unint64_t result = 0xD000000000000016;
      break;
    case 0x24:
      unint64_t result = 0xD000000000000026;
      break;
    case 0x25:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 0x26:
      unint64_t result = 0xD000000000000031;
      break;
    case 0x27:
      unint64_t result = 0xD000000000000019;
      break;
    case 0x28:
      unint64_t result = 0x7069546563726F46;
      break;
    case 0x29:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 0x2B:
      unint64_t result = 0x795365726F6E6749;
      break;
    case 0x2C:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 0x2D:
      unint64_t result = 0xD000000000000023;
      break;
    case 0x2E:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 0x2F:
      unint64_t result = 0xD000000000000027;
      break;
    case 0x30:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 0x31:
      unint64_t result = 0xD000000000000018;
      break;
    case 0x32:
      unint64_t result = 0xD000000000000016;
      break;
    case 0x33:
      unint64_t result = 0xD000000000000022;
      break;
    case 0x34:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 0x35:
      unint64_t result = 0xD000000000000021;
      break;
    case 0x37:
      unint64_t result = 0x6557656E4F646441;
      break;
    case 0x39:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case 0x3A:
      unint64_t result = 0xD000000000000018;
      break;
    case 0x3B:
      unint64_t result = 0xD000000000000020;
      break;
    case 0x3C:
      unint64_t result = 0xD000000000000019;
      break;
    case 0x3E:
      unint64_t result = 0xD000000000000016;
      break;
    case 0x40:
      unint64_t result = 0xD000000000000010;
      break;
    case 0x41:
      unint64_t result = 0xD000000000000016;
      break;
    case 0x42:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 0x43:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 0x44:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 0x45:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 0x47:
      unint64_t result = 0xD000000000000017;
      break;
    case 0x48:
      unint64_t result = 0x68747541776F6853;
      break;
    case 0x49:
      unint64_t result = 0xD000000000000018;
      break;
    case 0x4A:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 0x4B:
      unint64_t result = 0xD000000000000018;
      break;
    case 0x4C:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 0x4D:
      unint64_t result = 0xD000000000000018;
      break;
    case 0x4E:
      unint64_t result = 0x5474417472617453;
      break;
    case 0x4F:
      unint64_t result = 0xD000000000000028;
      break;
    case 0x50:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 0x51:
      unint64_t result = 0xD000000000000016;
      break;
    case 0x52:
      unint64_t result = 0xD000000000000010;
      break;
    case 0x53:
      unint64_t result = 0xD000000000000024;
      break;
    case 0x54:
      unint64_t result = 0x65655368746F6F53;
      break;
    case 0x55:
      unint64_t result = 0x616C6544636E7953;
      break;
    case 0x56:
      unint64_t result = 0x44636E795378614DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D5996284()
{
  return sub_1D59B2B58();
}

unint64_t sub_1D5996294()
{
  unint64_t result = qword_1EA725830;
  if (!qword_1EA725830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725830);
  }
  return result;
}

uint64_t sub_1D59962E8()
{
  return sub_1D5AB5C60();
}

uint64_t sub_1D5996350()
{
  UserDefaultsKeys.rawValue.getter();
  sub_1D5AB4E60();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D59963B4()
{
  return sub_1D5AB5C60();
}

SeymourClient::UserDefaultsKeys_optional sub_1D5996418(Swift::String *a1)
{
  return UserDefaultsKeys.init(rawValue:)(*a1);
}

unint64_t sub_1D5996424@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = UserDefaultsKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for UserDefaultsKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xAA) {
    goto LABEL_17;
  }
  if (a2 + 86 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 86) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 86;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 86;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 86;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x57;
  int v8 = v6 - 87;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for UserDefaultsKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 86 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 86) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xAA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xA9)
  {
    unsigned int v6 = ((a2 - 170) >> 8) + 1;
    *unint64_t result = a2 + 86;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D59965A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 86;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserDefaultsKeys()
{
  return &type metadata for UserDefaultsKeys;
}

uint64_t XPCClient.__allocating_init(machServiceName:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = objc_allocWithZone(MEMORY[0x1E4F29268]);
  uint64_t v5 = (void *)sub_1D5AB4DE0();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithMachServiceName_options_, v5, 0);

  type metadata accessor for XPCClient();
  uint64_t v7 = swift_allocObject();
  sub_1D59968E8(v6, a3);
  return v7;
}

uint64_t type metadata accessor for XPCClient()
{
  return self;
}

uint64_t sub_1D59966A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v8 + 24);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1D5AB5CB0();
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v18 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v18 - v14, a1, v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
    return sub_1D5AB5140();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v15, v3);
    return sub_1D5AB5150();
  }
}

uint64_t XPCClient.dispatchService.getter()
{
  return swift_retain();
}

uint64_t sub_1D59968E8(void *a1, void *a2)
{
  uint64_t v3 = v2;
  type metadata accessor for UnfairLock();
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = (_DWORD *)swift_slowAlloc();
  *(void *)(v6 + 16) = v7;
  *uint64_t v7 = 0;
  *(void *)(v3 + 32) = v6;
  *(void *)(v3 + 40) = 0;
  *(unsigned char *)(v3 + 48) = 1;
  uint64_t v34 = 0x6E65696C43435058;
  unint64_t v35 = 0xEB00000000203A74;
  id v8 = objc_msgSend(a1, sel_serviceName);
  if (v8)
  {
    uint64_t v9 = v8;
    sub_1D5AB4DF0();
  }
  sub_1D5AB4E90();
  swift_bridgeObjectRelease();
  uint64_t v10 = v34;
  unint64_t v11 = v35;
  type metadata accessor for TransportDispatchService();
  uint64_t v12 = (void *)swift_allocObject();
  uint64_t v13 = MEMORY[0x1E4FBC868];
  v12[6] = MEMORY[0x1E4FBC868];
  v12[7] = v13;
  v12[2] = a2;
  v12[4] = v10;
  v12[5] = v11;
  uint64_t v14 = swift_allocObject();
  id v15 = a2;
  uint64_t v16 = (_DWORD *)swift_slowAlloc();
  *(void *)(v14 + 16) = v16;
  *uint64_t v16 = 0;
  uint64_t v12[3] = v14;
  *(void *)(v3 + 16) = v12;
  *(void *)(v3 + 24) = a1;
  uint64_t v17 = self;
  id v18 = a1;
  id v19 = objc_msgSend(v17, sel_interfaceWithProtocol_, &unk_1F2DFCE60);
  objc_msgSend(v18, sel_setRemoteObjectInterface_, v19);

  id v20 = *(id *)(v3 + 24);
  id v21 = objc_msgSend(v17, sel_interfaceWithProtocol_, &unk_1F2DFCE60);
  objc_msgSend(v20, sel_setExportedInterface_, v21);

  uint64_t v22 = *(void **)(v3 + 24);
  type metadata accessor for XPCExportProxy();
  uint64_t v23 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  id v24 = v22;
  objc_msgSend(v24, sel_setExportedObject_, v23);

  swift_release();
  uint64_t v25 = *(void **)(v3 + 24);
  uint64_t v26 = swift_allocObject();
  swift_weakInit();
  uint64_t v38 = sub_1D59A1040;
  uint64_t v39 = v26;
  uint64_t v34 = MEMORY[0x1E4F143A8];
  unint64_t v35 = 1107296256;
  uint64_t v36 = sub_1D598EA50;
  uint64_t v37 = &block_descriptor_291;
  uint64_t v27 = _Block_copy(&v34);
  id v28 = v25;
  swift_release();
  objc_msgSend(v28, sel_setInterruptionHandler_, v27);
  _Block_release(v27);

  uint64_t v29 = *(void **)(v3 + 24);
  uint64_t v30 = swift_allocObject();
  swift_weakInit();
  uint64_t v38 = sub_1D59A1070;
  uint64_t v39 = v30;
  uint64_t v34 = MEMORY[0x1E4F143A8];
  unint64_t v35 = 1107296256;
  uint64_t v36 = sub_1D598EA50;
  uint64_t v37 = &block_descriptor_295;
  uint64_t v31 = _Block_copy(&v34);
  id v32 = v29;
  swift_release();
  objc_msgSend(v32, sel_setInvalidationHandler_, v31);

  _Block_release(v31);
  return v3;
}

uint64_t sub_1D5996CE4(uint64_t a1, void (*a2)(void))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a2();
    return swift_release();
  }
  return result;
}

void sub_1D5996D44()
{
  uint64_t v1 = *(void *)(v0 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  if (*(unsigned char *)(v0 + 48) == 1)
  {
    *(unsigned char *)(v0 + 48) = 2;
    objc_msgSend(*(id *)(v0 + 24), sel_resume);
  }
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  os_unfair_lock_unlock(v2);
}

void sub_1D5996DA4()
{
  uint64_t v1 = *(void *)(v0 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  if (*(unsigned char *)(v0 + 48) == 2)
  {
    *(unsigned char *)(v0 + 48) = 1;
    objc_msgSend(*(id *)(v0 + 24), sel_suspend);
  }
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  os_unfair_lock_unlock(v2);
}

void sub_1D5996E04()
{
  uint64_t v1 = *(void *)(v0 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  sub_1D5996E5C((unsigned char *)v0);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  os_unfair_lock_unlock(v2);
}

unsigned char *sub_1D5996E5C(unsigned char *result)
{
  if (result[48])
  {
    uint64_t v1 = result;
    result[48] = 0;
    uint64_t v2 = (void *)*((void *)result + 2);
    uint64_t v3 = v2[3];
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v3 + 16));
    swift_beginAccess();
    uint64_t v4 = MEMORY[0x1E4FBC868];
    v2[6] = MEMORY[0x1E4FBC868];
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v2[7] = v4;
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
    uint64_t v5 = (void *)*((void *)v1 + 3);
    objc_msgSend(v5, sel_setInterruptionHandler_, 0);
    objc_msgSend(v5, sel_setInvalidationHandler_, 0);
    return objc_msgSend(v5, sel_invalidate);
  }
  return result;
}

void sub_1D5996F44()
{
  uint64_t v1 = v0;
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE5400);
  swift_retain_n();
  uint64_t v3 = sub_1D5AB4B30();
  os_log_type_t v4 = sub_1D5AB5410();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v12 = v6;
    *(_DWORD *)uint64_t v5 = 136446210;
    id v7 = objc_msgSend(*(id *)(v1 + 24), sel_serviceName);
    if (v7)
    {
      id v8 = v7;
      uint64_t v9 = sub_1D5AB4DF0();
      unint64_t v11 = v10;
    }
    else
    {
      unint64_t v11 = 0xEB00000000646569;
      uint64_t v9 = 0x6669636570736E75;
    }
    sub_1D5951500(v9, v11, &v12);
    sub_1D5AB5680();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D5947000, v3, v4, "XPC connection (%{public}s) interrupted", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v6, -1, -1);
    MEMORY[0x1D945AAC0](v5, -1, -1);
  }
  else
  {

    swift_release_n();
  }
}

void sub_1D5997130()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v2 + 16));
  *(unsigned char *)(v1 + 48) = 0;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 16));
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE5400);
  swift_retain_n();
  os_log_type_t v4 = sub_1D5AB4B30();
  os_log_type_t v5 = sub_1D5AB5410();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v13 = v7;
    *(_DWORD *)uint64_t v6 = 136446210;
    id v8 = objc_msgSend(*(id *)(v1 + 24), sel_serviceName);
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = sub_1D5AB4DF0();
      unint64_t v12 = v11;
    }
    else
    {
      unint64_t v12 = 0xEB00000000646569;
      uint64_t v10 = 0x6669636570736E75;
    }
    sub_1D5951500(v10, v12, &v13);
    sub_1D5AB5680();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D5947000, v4, v5, "XPC connection (%{public}s) invalidated", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v7, -1, -1);
    MEMORY[0x1D945AAC0](v6, -1, -1);
  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_1D5997334(uint64_t a1, int a2, void (*a3)(uint64_t *), uint64_t a4)
{
  LODWORD(v41) = a2;
  uint64_t v7 = sub_1D5AB4C50();
  uint64_t v40 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D5AB4C70();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a3;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = a4;
  if (*(void *)(a1 + 40))
  {
    uint64_t aBlock = *(void *)(a1 + 40);
    LOBYTE(v43) = 0;
    swift_retain();
    swift_unknownObjectRetain();
    v14(&aBlock);
    swift_release();
    swift_release();
    return swift_unknownObjectRelease();
  }
  char v17 = v41;
  uint64_t v38 = v9;
  uint64_t v39 = v13;
  uint64_t v37 = v11;
  if (*(unsigned char *)(a1 + 48) != 2)
  {
    swift_retain();
    uint64_t v23 = v7;
    uint64_t v20 = v15;
LABEL_8:
    uint64_t v41 = v10;
    id v24 = v39;
    if (qword_1EBDE5420 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1D5AB4B50();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EBDE5400);
    uint64_t v26 = sub_1D5AB4B30();
    os_log_type_t v27 = sub_1D5AB5410();
    BOOL v28 = os_log_type_enabled(v26, v27);
    uint64_t v29 = v38;
    if (v28)
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v30 = 0;
      _os_log_impl(&dword_1D5947000, v26, v27, "TransportServer unavailable", v30, 2u);
      id v24 = v39;
      MEMORY[0x1D945AAC0](v30, -1, -1);
    }

    uint64_t v31 = *(void **)(*(void *)(a1 + 16) + 16);
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = sub_1D59A0F94;
    *(void *)(v32 + 24) = v20;
    uint64_t v46 = sub_1D59A0FD4;
    uint64_t v47 = v32;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v43 = 1107296256;
    uint64_t v44 = sub_1D598EA50;
    uint64_t v45 = &block_descriptor_261;
    uint64_t v33 = _Block_copy(&aBlock);
    swift_retain();
    id v34 = v31;
    sub_1D5AB4C60();
    uint64_t v48 = MEMORY[0x1E4FBC860];
    sub_1D59A019C((unint64_t *)&qword_1EBDE50F0, 255, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE5100);
    sub_1D5990440();
    sub_1D5AB56F0();
    MEMORY[0x1D94598A0](0, v24, v29, v33);
    _Block_release(v33);

    (*(void (**)(char *, uint64_t))(v40 + 8))(v29, v23);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v24, v41);
    swift_release();
    swift_release();
    return swift_release();
  }
  id v18 = *(void **)(a1 + 24);
  unint64_t v35 = v14;
  id v36 = v18;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a1;
  *(unsigned char *)(v19 + 24) = v17 & 1;
  *(void *)(v19 + 32) = sub_1D59A0F94;
  *(void *)(v19 + 40) = v15;
  uint64_t v20 = v15;
  uint64_t v46 = sub_1D59A0FE0;
  uint64_t v47 = v19;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v43 = 1107296256;
  uint64_t v44 = sub_1D5998414;
  uint64_t v45 = &block_descriptor_267;
  id v21 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  id v22 = objc_msgSend(v36, sel_remoteObjectProxyWithErrorHandler_, v21);
  _Block_release(v21);
  sub_1D5AB56E0();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE5240);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v23 = v7;
    goto LABEL_8;
  }
  uint64_t aBlock = v48;
  LOBYTE(v43) = 0;
  swift_unknownObjectRetain();
  v35(&aBlock);
  swift_release();
  swift_unknownObjectRelease_n();
  return swift_release();
}

uint64_t sub_1D59978F4(uint64_t a1, void (*a2)(uint64_t, void), uint64_t a3, char a4)
{
  uint64_t v8 = sub_1D5AB4C50();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1D5AB4C70();
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 40))
  {
    uint64_t v17 = swift_unknownObjectRetain();
    a2(v17, 0);
    return swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v32 = v14;
    uint64_t v33 = v13;
    uint64_t v34 = v9;
    if (*(unsigned char *)(a1 + 48) != 2) {
      goto LABEL_6;
    }
    uint64_t v19 = *(void **)(a1 + 24);
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = a1;
    *(unsigned char *)(v20 + 24) = a4 & 1;
    *(void *)(v20 + 32) = a2;
    *(void *)(v20 + 40) = a3;
    uint64_t v39 = (void (*)())sub_1D59A10A4;
    uint64_t v40 = v20;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v36 = 1107296256;
    uint64_t v37 = sub_1D5998414;
    uint64_t v38 = &block_descriptor_287;
    id v21 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    id v22 = objc_msgSend(v19, sel_remoteObjectProxyWithErrorHandler_, v21);
    _Block_release(v21);
    sub_1D5AB56E0();
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE5240);
    if (swift_dynamicCast())
    {
      uint64_t v23 = swift_unknownObjectRetain();
      a2(v23, 0);
      return swift_unknownObjectRelease_n();
    }
    else
    {
LABEL_6:
      if (qword_1EBDE5420 != -1) {
        swift_once();
      }
      uint64_t v24 = sub_1D5AB4B50();
      __swift_project_value_buffer(v24, (uint64_t)qword_1EBDE5400);
      uint64_t v25 = sub_1D5AB4B30();
      os_log_type_t v26 = sub_1D5AB5410();
      if (os_log_type_enabled(v25, v26))
      {
        os_log_type_t v27 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v27 = 0;
        _os_log_impl(&dword_1D5947000, v25, v26, "TransportServer unavailable", v27, 2u);
        MEMORY[0x1D945AAC0](v27, -1, -1);
      }

      BOOL v28 = *(void **)(*(void *)(a1 + 16) + 16);
      uint64_t v29 = swift_allocObject();
      *(void *)(v29 + 16) = a2;
      *(void *)(v29 + 24) = a3;
      uint64_t v39 = sub_1D59A10A0;
      uint64_t v40 = v29;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v36 = 1107296256;
      uint64_t v37 = sub_1D598EA50;
      uint64_t v38 = &block_descriptor_280;
      uint64_t v30 = _Block_copy(&aBlock);
      swift_retain();
      id v31 = v28;
      sub_1D5AB4C60();
      uint64_t v41 = MEMORY[0x1E4FBC860];
      sub_1D59A019C((unint64_t *)&qword_1EBDE50F0, 255, MEMORY[0x1E4FBCB00]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE5100);
      sub_1D5990440();
      sub_1D5AB56F0();
      MEMORY[0x1D94598A0](0, v16, v11, v30);
      _Block_release(v30);

      (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v8);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v33);
      return swift_release();
    }
  }
}

void sub_1D5997DE8(void *a1, uint64_t a2, int a3, void (*a4)(uint64_t, void), uint64_t a5)
{
  int v49 = a3;
  uint64_t v9 = sub_1D5AB4C50();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v47 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1D5AB4C70();
  uint64_t v46 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1D5AB4B50();
  uint64_t v15 = __swift_project_value_buffer(v14, (uint64_t)qword_1EBDE5400);
  swift_retain();
  id v16 = a1;
  swift_retain();
  id v17 = a1;
  uint64_t v45 = v15;
  id v18 = sub_1D5AB4B30();
  os_log_type_t v19 = sub_1D5AB5410();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v41 = a4;
    uint64_t v42 = v10;
    uint64_t v43 = v9;
    uint64_t v44 = a5;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    aBlock[0] = v21;
    *(_DWORD *)uint64_t v20 = 136446466;
    id v22 = objc_msgSend(*(id *)(a2 + 24), sel_serviceName);
    if (v22)
    {
      uint64_t v23 = v22;
      uint64_t v24 = sub_1D5AB4DF0();
      unint64_t v26 = v25;
    }
    else
    {
      unint64_t v26 = 0xE900000000000029;
      uint64_t v24 = 0x6E776F6E6B6E7528;
    }
    uint64_t v52 = sub_1D5951500(v24, v26, aBlock);
    sub_1D5AB5680();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2082;
    swift_getErrorValue();
    uint64_t v27 = MEMORY[0x1D9459FA0](v50, v51);
    uint64_t v52 = sub_1D5951500(v27, v28, aBlock);
    sub_1D5AB5680();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D5947000, v18, v19, "Error getting remoteObjectProxy from %{public}s: %{public}s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v21, -1, -1);
    MEMORY[0x1D945AAC0](v20, -1, -1);

    a5 = v44;
    uint64_t v9 = v43;
    uint64_t v10 = v42;
    a4 = v41;
    if ((v49 & 1) == 0) {
      goto LABEL_14;
    }
  }
  else
  {
    swift_release_n();

    if ((v49 & 1) == 0) {
      goto LABEL_14;
    }
  }
  swift_getErrorValue();
  if (sub_1D5AB5B80() != 4097)
  {
LABEL_14:
    unint64_t v35 = *(void **)(*(void *)(a2 + 16) + 16);
    uint64_t v36 = (void *)swift_allocObject();
    void v36[2] = a4;
    v36[3] = a5;
    v36[4] = a1;
    aBlock[4] = (uint64_t)sub_1D59A1008;
    aBlock[5] = (uint64_t)v36;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1D598EA50;
    aBlock[3] = (uint64_t)&block_descriptor_273;
    uint64_t v37 = _Block_copy(aBlock);
    id v38 = a1;
    id v39 = v35;
    swift_retain();
    sub_1D5AB4C60();
    uint64_t v52 = MEMORY[0x1E4FBC860];
    sub_1D59A019C((unint64_t *)&qword_1EBDE50F0, 255, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE5100);
    sub_1D5990440();
    uint64_t v40 = v47;
    sub_1D5AB56F0();
    MEMORY[0x1D94598A0](0, v13, v40, v37);
    _Block_release(v37);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v40, v9);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v13, v48);
    swift_release();
    return;
  }
  uint64_t v29 = sub_1D5AB4B30();
  os_log_type_t v30 = sub_1D5AB5410();
  if (os_log_type_enabled(v29, v30))
  {
    id v31 = a4;
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v32 = 0;
    _os_log_impl(&dword_1D5947000, v29, v30, "Retrying remoteObjectProxy, previous connection was interrupted", v32, 2u);
    uint64_t v33 = v32;
    a4 = v31;
    MEMORY[0x1D945AAC0](v33, -1, -1);
  }

  uint64_t v34 = *(void *)(a2 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v34 + 16));
  sub_1D59978F4(a2, a4, a5, 0);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v34 + 16));
}

void sub_1D5998414(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_1D599847C(void (*a1)(void *, uint64_t))
{
  uint64_t v2 = sub_1D5AB2B90();
  sub_1D59A019C((unint64_t *)&qword_1EA727E10, 255, MEMORY[0x1E4F9C878]);
  uint64_t v3 = (void *)swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v2 - 8) + 104))(v4, *MEMORY[0x1E4F9C830], v2);
  a1(v3, 1);
}

uint64_t sub_1D5998564(char a1, uint64_t a2, void (*a3)(uint64_t, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *(void *)(v6 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v12 + 16));
  sub_1D59991D4(v6, a1, a2, (uint64_t)a3, a4, a5, &v14);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 16));
  a3(v14, a2);
  return swift_unknownObjectRelease();
}

uint64_t sub_1D5998678(void *a1, uint64_t a2, char a3, uint64_t a4, void (*a5)(void, void), uint64_t a6)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1D5AB4B50();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EBDE5400);
  swift_retain();
  id v13 = a1;
  swift_retain();
  id v14 = a1;
  uint64_t v15 = sub_1D5AB4B30();
  os_log_type_t v16 = sub_1D5AB5410();
  if (os_log_type_enabled(v15, v16))
  {
    char v33 = a3;
    uint64_t v34 = a6;
    unint64_t v35 = a5;
    uint64_t v36 = a4;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v37 = v18;
    *(_DWORD *)uint64_t v17 = 136446466;
    id v19 = objc_msgSend(*(id *)(a2 + 24), sel_serviceName);
    if (v19)
    {
      uint64_t v20 = v19;
      uint64_t v21 = sub_1D5AB4DF0();
      unint64_t v23 = v22;
    }
    else
    {
      unint64_t v23 = 0xE900000000000029;
      uint64_t v21 = 0x6E776F6E6B6E7528;
    }
    sub_1D5951500(v21, v23, &v37);
    sub_1D5AB5680();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2082;
    swift_getErrorValue();
    uint64_t v24 = MEMORY[0x1D9459FA0]();
    sub_1D5951500(v24, v25, &v37);
    sub_1D5AB5680();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D5947000, v15, v16, "Error getting remoteObjectProxy from %{public}s: %{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v18, -1, -1);
    MEMORY[0x1D945AAC0](v17, -1, -1);

    a5 = v35;
    a4 = v36;
    a6 = v34;
    if ((v33 & 1) == 0) {
      goto LABEL_14;
    }
  }
  else
  {
    swift_release_n();

    if ((a3 & 1) == 0) {
      goto LABEL_14;
    }
  }
  swift_getErrorValue();
  if (sub_1D5AB5B80() != 4097)
  {
LABEL_14:
    uint64_t v37 = (uint64_t)a1;
    id v31 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE31D0);
    return sub_1D5AB5140();
  }
  unint64_t v26 = sub_1D5AB4B30();
  os_log_type_t v27 = sub_1D5AB5410();
  if (os_log_type_enabled(v26, v27))
  {
    unint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v28 = 0;
    _os_log_impl(&dword_1D5947000, v26, v27, "Retrying remoteObjectProxy, previous connection was interrupted", v28, 2u);
    MEMORY[0x1D945AAC0](v28, -1, -1);
  }

  uint64_t v29 = *(void *)(a2 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v29 + 16));
  uint64_t v30 = sub_1D5998DEC(a2, 0, a4, a5, a6);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v29 + 16));
  a5(v30, a4);
  return swift_unknownObjectRelease();
}

uint64_t sub_1D5998A4C(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1D5AB4B50();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EBDE5400);
  swift_retain();
  id v13 = a1;
  swift_retain();
  id v14 = a1;
  uint64_t v15 = sub_1D5AB4B30();
  os_log_type_t v16 = sub_1D5AB5410();
  if (os_log_type_enabled(v15, v16))
  {
    char v31 = a3;
    uint64_t v32 = a7;
    uint64_t v33 = a4;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v36 = v18;
    *(_DWORD *)uint64_t v17 = 136446466;
    id v19 = objc_msgSend(*(id *)(a2 + 24), sel_serviceName);
    if (v19)
    {
      uint64_t v20 = v19;
      uint64_t v21 = sub_1D5AB4DF0();
      unint64_t v23 = v22;
    }
    else
    {
      unint64_t v23 = 0xE900000000000029;
      uint64_t v21 = 0x6E776F6E6B6E7528;
    }
    sub_1D5951500(v21, v23, &v36);
    sub_1D5AB5680();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2082;
    swift_getErrorValue();
    uint64_t v24 = MEMORY[0x1D9459FA0]();
    sub_1D5951500(v24, v25, &v36);
    sub_1D5AB5680();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D5947000, v15, v16, "Error getting remoteObjectProxy from %{public}s: %{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v18, -1, -1);
    MEMORY[0x1D945AAC0](v17, -1, -1);

    a7 = v32;
    a4 = v33;
    if ((v31 & 1) == 0) {
      goto LABEL_14;
    }
  }
  else
  {
    swift_release_n();

    if ((a3 & 1) == 0) {
      goto LABEL_14;
    }
  }
  swift_getErrorValue();
  if (sub_1D5AB5B80() != 4097)
  {
LABEL_14:
    uint64_t v36 = (uint64_t)a1;
    id v30 = a1;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
    sub_1D5AB5160();
    return sub_1D5AB5140();
  }
  unint64_t v26 = sub_1D5AB4B30();
  os_log_type_t v27 = sub_1D5AB5410();
  if (os_log_type_enabled(v26, v27))
  {
    unint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v28 = 0;
    _os_log_impl(&dword_1D5947000, v26, v27, "Retrying remoteObjectProxy, previous connection was interrupted", v28, 2u);
    MEMORY[0x1D945AAC0](v28, -1, -1);
  }

  return sub_1D5998564(0, a4, a5, a6, a7);
}

uint64_t sub_1D5998DEC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE31D0);
  uint64_t v12 = *(void *)(*(void *)(v11 - 8) + 64);
  MEMORY[0x1F4188790](v11);
  id v14 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 40))
  {
    uint64_t v15 = *(void *)(a1 + 40);
    swift_unknownObjectRetain();
  }
  else
  {
    int v35 = a2;
    if (*(unsigned char *)(a1 + 48) != 2) {
      goto LABEL_6;
    }
    os_log_type_t v16 = *(void **)(a1 + 24);
    v33[1] = v5;
    id v34 = v16;
    uint64_t v17 = a3;
    uint64_t v18 = v13;
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v17, v11);
    unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    unint64_t v20 = (v12 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = a1;
    *(unsigned char *)(v21 + 24) = v35 & 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(v21 + v19, v14, v11);
    unint64_t v22 = (void *)(v21 + v20);
    *unint64_t v22 = a4;
    v22[1] = a5;
    aBlock[4] = sub_1D59A079C;
    aBlock[5] = v21;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D5998414;
    aBlock[3] = &block_descriptor_159;
    unint64_t v23 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    id v24 = objc_msgSend(v34, sel_remoteObjectProxyWithErrorHandler_, v23);
    _Block_release(v23);
    sub_1D5AB56E0();
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE5240);
    if (swift_dynamicCast())
    {
      uint64_t v15 = aBlock[7];
      swift_unknownObjectRetain();
    }
    else
    {
LABEL_6:
      if (qword_1EBDE5420 != -1) {
        swift_once();
      }
      uint64_t v25 = sub_1D5AB4B50();
      __swift_project_value_buffer(v25, (uint64_t)qword_1EBDE5400);
      unint64_t v26 = sub_1D5AB4B30();
      os_log_type_t v27 = sub_1D5AB5410();
      if (os_log_type_enabled(v26, v27))
      {
        unint64_t v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v28 = 0;
        _os_log_impl(&dword_1D5947000, v26, v27, "TransportServer unavailable", v28, 2u);
        MEMORY[0x1D945AAC0](v28, -1, -1);
      }

      uint64_t v29 = sub_1D5AB2B90();
      sub_1D59A019C((unint64_t *)&qword_1EA727E10, 255, MEMORY[0x1E4F9C878]);
      uint64_t v30 = swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v29 - 8) + 104))(v31, *MEMORY[0x1E4F9C830], v29);
      uint64_t v15 = v30;
      swift_willThrow();
    }
  }
  return v15;
}

uint64_t sub_1D59991D4@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v35 = a5;
  uint64_t v36 = a4;
  uint64_t v37 = a7;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v12 = sub_1D5AB5160();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x1F4188790](v12);
  os_log_type_t v16 = (char *)v33 - v15;
  if (*(void *)(a1 + 40))
  {
    uint64_t v17 = *(void *)(a1 + 40);
LABEL_3:
    *uint64_t v37 = v17;
    return swift_unknownObjectRetain();
  }
  if (*(unsigned char *)(a1 + 48) == 2)
  {
    unint64_t v19 = *(void **)(a1 + 24);
    v33[1] = v7;
    id v34 = v19;
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a3, v12);
    unint64_t v20 = (*(unsigned __int8 *)(v13 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    unint64_t v21 = (v14 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = a6;
    *(void *)(v22 + 24) = a1;
    *(unsigned char *)(v22 + 32) = a2 & 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v22 + v20, v16, v12);
    unint64_t v23 = (void *)(v22 + v21);
    uint64_t v24 = v35;
    *unint64_t v23 = v36;
    v23[1] = v24;
    aBlock[4] = sub_1D599FAC0;
    aBlock[5] = v22;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D5998414;
    aBlock[3] = &block_descriptor_5;
    uint64_t v25 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    id v26 = objc_msgSend(v34, sel_remoteObjectProxyWithErrorHandler_, v25);
    _Block_release(v25);
    sub_1D5AB56E0();
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE5240);
    if (swift_dynamicCast())
    {
      uint64_t v17 = aBlock[7];
      goto LABEL_3;
    }
  }
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_1D5AB4B50();
  __swift_project_value_buffer(v27, (uint64_t)qword_1EBDE5400);
  unint64_t v28 = sub_1D5AB4B30();
  os_log_type_t v29 = sub_1D5AB5410();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v30 = 0;
    _os_log_impl(&dword_1D5947000, v28, v29, "TransportServer unavailable", v30, 2u);
    MEMORY[0x1D945AAC0](v30, -1, -1);
  }

  uint64_t v31 = sub_1D5AB2B90();
  sub_1D59A019C((unint64_t *)&qword_1EA727E10, 255, MEMORY[0x1E4F9C878]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v31 - 8) + 104))(v32, *MEMORY[0x1E4F9C830], v31);
  return swift_willThrow();
}

void sub_1D59995D0(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8 = *(void *)(a3 + 32);
  uint64_t v9 = *(os_unfair_lock_s **)(v8 + 16);
  swift_retain();
  os_unfair_lock_lock(v9);
  sub_1D5997334(a3, a4, a1, a2);
  uint64_t v10 = *(os_unfair_lock_s **)(v8 + 16);
  os_unfair_lock_unlock(v10);
}

uint64_t XPCClient.deinit()
{
  swift_release();

  swift_release();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t XPCClient.__deallocating_deinit()
{
  swift_release();

  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t XPCClient.sendRequest(_:)(__int16 *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4E30);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v18 - v8;
  __int16 v10 = *a1;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(unsigned char *)(v11 + 24) = 1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE5240);
  sub_1D5AB4540();
  uint64_t v12 = swift_allocObject();
  *(_WORD *)(v12 + 16) = v10;
  *(void *)(v12 + 24) = v1;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  unint64_t v13 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v14 = (v5 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v15 + v13, v7, v3);
  os_log_type_t v16 = (uint64_t (**)(uint64_t *))(v15 + v14);
  *os_log_type_t v16 = sub_1D599F1B8;
  v16[1] = (uint64_t (*)(uint64_t *))v12;
  swift_retain();
  sub_1D5AB4540();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
}

uint64_t sub_1D599991C(uint64_t *a1, __int16 a2, uint64_t a3)
{
  uint64_t v5 = *a1;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(_WORD *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = a3;
  swift_unknownObjectRetain();
  swift_retain();
  return sub_1D5AB4540();
}

void sub_1D59999C4(uint64_t a1, uint64_t a2, void *a3, __int16 a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  uint64_t v9 = qword_1D5ABA960[a4];
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = v10;
  v11[3] = sub_1D59A1144;
  v11[4] = v8;
  v13[4] = sub_1D59A0F2C;
  v13[5] = v11;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  void v13[2] = sub_1D5956AFC;
  v13[3] = &block_descriptor_246;
  uint64_t v12 = _Block_copy(v13);
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_receiveRequest_data_completion_, v9, 0, v12);
  _Block_release(v12);
}

uint64_t XPCClient.sendRequest<A>(_:payload:)@<X0>(unsigned __int16 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v34 = a4;
  uint64_t v35 = a5;
  uint64_t v36 = a6;
  uint64_t v10 = *(void *)(a3 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4E30);
  uint64_t v13 = *(void *)(v33 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = MEMORY[0x1F4188790](v33);
  uint64_t v32 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v29 - v16;
  int v31 = *a1;
  uint64_t v18 = swift_allocObject();
  uint64_t v30 = v6;
  *(void *)(v18 + 16) = v6;
  *(unsigned char *)(v18 + 24) = 1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE5240);
  sub_1D5AB4540();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, a3);
  unint64_t v19 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v20 = (v11 + v19 + 1) & 0xFFFFFFFFFFFFFFFELL;
  unint64_t v21 = (char *)swift_allocObject();
  uint64_t v22 = v34;
  *((void *)v21 + 2) = a3;
  *((void *)v21 + 3) = v22;
  *((void *)v21 + 4) = v35;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v21[v19], v12, a3);
  *(_WORD *)&v21[v20] = v31;
  *(void *)&v21[(v20 + 9) & 0xFFFFFFFFFFFFFFF8] = v30;
  unint64_t v23 = v32;
  uint64_t v24 = v33;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v32, v17, v33);
  unint64_t v25 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v26 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v26 + v25, v23, v24);
  uint64_t v27 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))(v26 + ((v14 + v25 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v27 = sub_1D599F270;
  v27[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v21;
  swift_retain();
  sub_1D5AB4540();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v17, v24);
}

uint64_t sub_1D5999E68@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v19 = a5;
  uint64_t v20 = a6;
  int v21 = a2;
  uint64_t v22 = a7;
  uint64_t v9 = *(void *)(a4 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)MEMORY[0x1F4188790](a1);
  (*(void (**)(char *))(v9 + 16))(v11);
  unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v14 = (v10 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v14 + 9) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = (char *)swift_allocObject();
  uint64_t v17 = v19;
  *((void *)v16 + 2) = a4;
  *((void *)v16 + 3) = v17;
  *((void *)v16 + 4) = v20;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v16[v13], v11, a4);
  *(void *)&v16[v14] = v12;
  *(_WORD *)&v16[v15] = v21;
  *(void *)&v16[(v15 + 9) & 0xFFFFFFFFFFFFFFF8] = a3;
  swift_unknownObjectRetain();
  swift_retain();
  return sub_1D5AB4540();
}

uint64_t sub_1D599A004(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, __int16 a5)
{
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  swift_retain();
  uint64_t v10 = sub_1D5AB3E40();
  unint64_t v12 = v11;
  sub_1D599FF54(v10, v11);
  unint64_t v13 = (void *)sub_1D5AB1C10();
  sub_1D5956DF8(v10, v12);
  uint64_t v14 = qword_1D5ABA960[a5];
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = v15;
  v16[3] = sub_1D59A0E40;
  v16[4] = v9;
  aBlock[4] = sub_1D59A0E64;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D5956AFC;
  aBlock[3] = &block_descriptor_226;
  uint64_t v17 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a4, sel_receiveRequest_data_completion_, v14, v13, v17);
  _Block_release(v17);

  return sub_1D5956DE4(v10, v12);
}

uint64_t sub_1D599A1E0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v28 = a7;
  uint64_t v29 = a5;
  uint64_t v12 = sub_1D5AB4C50();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1D5AB4C70();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v26 = v17;
    uint64_t v27 = v16;
    uint64_t v21 = *(void *)(result + 16);
    swift_retain();
    swift_release();
    id v22 = *(id *)(v21 + 16);
    swift_release();
    unint64_t v23 = (void *)swift_allocObject();
    v23[2] = v29;
    v23[3] = a6;
    v23[4] = a3;
    aBlock[4] = a8;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D598EA50;
    aBlock[3] = a9;
    uint64_t v24 = _Block_copy(aBlock);
    swift_retain();
    id v25 = a3;
    sub_1D5AB4C60();
    uint64_t v30 = MEMORY[0x1E4FBC860];
    sub_1D59A019C((unint64_t *)&qword_1EBDE50F0, 255, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE5100);
    sub_1D5990440();
    sub_1D5AB56F0();
    MEMORY[0x1D94598A0](0, v19, v15, v24);
    _Block_release(v24);

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v19, v27);
    return swift_release();
  }
  return result;
}

void sub_1D599A4D8(void (*a1)(void *, void), int a2, id a3)
{
  id v4 = a3;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE5130);
  sub_1D5AB5C90();
  a1(v5, v6);
  sub_1D596EA00(v5, v6);
}

uint64_t XPCClient.sendRequest<A>(_:)(__int16 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4E30);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __int16 v14 = *a1;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v5;
  *(unsigned char *)(v15 + 24) = 1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE5240);
  sub_1D5AB4540();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a2;
  *(void *)(v16 + 24) = a3;
  *(void *)(v16 + 32) = a4;
  *(_WORD *)(v16 + 40) = v14;
  *(void *)(v16 + 48) = v5;
  swift_retain();
  sub_1D5AB4590();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_1D599A710(uint64_t *a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = *a1;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a4;
  *(void *)(v12 + 24) = a5;
  *(void *)(v12 + 32) = a6;
  *(void *)(v12 + 40) = v11;
  *(_WORD *)(v12 + 48) = a2;
  *(void *)(v12 + 56) = a3;
  swift_unknownObjectRetain();
  swift_retain();
  return sub_1D5AB4540();
}

void sub_1D599A7C8(uint64_t a1, uint64_t a2, void *a3, __int16 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = qword_1D5ABA960[a4];
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a6;
  v16[3] = a7;
  v16[4] = a8;
  uint64_t v16[5] = v15;
  v16[6] = a1;
  v16[7] = a2;
  v18[4] = sub_1D59A0C44;
  v18[5] = v16;
  v18[0] = MEMORY[0x1E4F143A8];
  v18[1] = 1107296256;
  _OWORD v18[2] = sub_1D5956AFC;
  v18[3] = &block_descriptor_207;
  uint64_t v17 = _Block_copy(v18);
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_receiveRequest_data_completion_, v14, 0, v17);
  _Block_release(v17);
}

uint64_t sub_1D599A918(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v33 = a5;
  uint64_t v34 = a8;
  uint64_t v32 = a7;
  uint64_t v35 = a1;
  uint64_t v12 = sub_1D5AB4C50();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1D5AB4C70();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v30 = v17;
    uint64_t v31 = v16;
    uint64_t v21 = v12;
    uint64_t v22 = *(void *)(result + 16);
    swift_retain();
    swift_release();
    id v23 = *(id *)(v22 + 16);
    swift_release();
    uint64_t v24 = (void *)swift_allocObject();
    uint64_t v25 = v34;
    uint64_t v26 = v35;
    _OWORD v24[2] = v32;
    v24[3] = v25;
    uint64_t v27 = v33;
    v24[4] = a9;
    uint64_t v24[5] = v27;
    v24[6] = a6;
    v24[7] = v26;
    v24[8] = a2;
    v24[9] = a3;
    aBlock[4] = sub_1D59A0CCC;
    aBlock[5] = v24;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D598EA50;
    aBlock[3] = &block_descriptor_213;
    uint64_t v28 = _Block_copy(aBlock);
    swift_retain();
    sub_1D59A0188(v26, a2);
    id v29 = a3;
    sub_1D5AB4C60();
    uint64_t v36 = MEMORY[0x1E4FBC860];
    sub_1D59A019C((unint64_t *)&qword_1EBDE50F0, 255, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE5100);
    sub_1D5990440();
    sub_1D5AB56F0();
    MEMORY[0x1D94598A0](0, v19, v15, v28);
    _Block_release(v28);

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v21);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v19, v31);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D599AC54(void (*a1)(char *), uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v15 = a1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v8 = sub_1D5AB5CB0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v14 - v10;
  sub_1D59A0188(a3, a4);
  id v12 = a5;
  sub_1D5AB5C70();
  v15(v11);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t XPCClient.sendRequest<A, B>(_:payload:)@<X0>(unsigned __int16 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v33 = a7;
  uint64_t v34 = a8;
  uint64_t v30 = a5;
  uint64_t v31 = a6;
  uint64_t v35 = a9;
  uint64_t v14 = *(void *)(a3 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v16 = &v27[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4E30);
  uint64_t v32 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v18 = &v27[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v28 = *a1;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v9;
  *(unsigned char *)(v19 + 24) = 1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE5240);
  sub_1D5AB4540();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v14 + 16))(v16, a2, a3);
  unint64_t v20 = (*(unsigned __int8 *)(v14 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v21 = (v15 + v20 + 1) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v22 = (char *)swift_allocObject();
  *((void *)v22 + 2) = a3;
  *((void *)v22 + 3) = a4;
  uint64_t v23 = v31;
  *((void *)v22 + 4) = v30;
  *((void *)v22 + 5) = v23;
  uint64_t v24 = v34;
  *((void *)v22 + 6) = v33;
  *((void *)v22 + 7) = v24;
  (*(void (**)(char *, unsigned char *, uint64_t))(v14 + 32))(&v22[v20], v16, a3);
  *(_WORD *)&v22[v21] = v28;
  *(void *)&v22[(v21 + 9) & 0xFFFFFFFFFFFFFFF8] = v9;
  swift_retain();
  uint64_t v25 = v29;
  sub_1D5AB4590();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v32 + 8))(v18, v25);
}

uint64_t sub_1D599B04C@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10)
{
  uint64_t v26 = a6;
  uint64_t v27 = a7;
  uint64_t v29 = a3;
  uint64_t v30 = a8;
  int v28 = a2;
  uint64_t v12 = *(void *)(a4 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v24 = a9;
  uint64_t v25 = a10;
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)MEMORY[0x1F4188790](a1);
  (*(void (**)(char *))(v12 + 16))(v14);
  unint64_t v16 = (*(unsigned __int8 *)(v12 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v17 = (v13 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (v17 + 9) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = (char *)swift_allocObject();
  *((void *)v19 + 2) = a4;
  *((void *)v19 + 3) = a5;
  uint64_t v20 = v27;
  *((void *)v19 + 4) = v26;
  *((void *)v19 + 5) = v20;
  uint64_t v21 = v25;
  *((void *)v19 + 6) = v24;
  *((void *)v19 + 7) = v21;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v19[v16], v14, a4);
  *(void *)&v19[v17] = v15;
  *(_WORD *)&v19[v18] = v28;
  *(void *)&v19[(v18 + 9) & 0xFFFFFFFFFFFFFFF8] = v29;
  swift_unknownObjectRetain();
  swift_retain();
  return sub_1D5AB4540();
}

uint64_t sub_1D599B1FC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, __int16 a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v15 = sub_1D5AB3E40();
  unint64_t v17 = v16;
  sub_1D599FF54(v15, v16);
  unint64_t v18 = (void *)sub_1D5AB1C10();
  sub_1D5956DF8(v15, v17);
  uint64_t v19 = qword_1D5ABA960[a5];
  uint64_t v20 = swift_allocObject();
  swift_weakInit();
  uint64_t v21 = (void *)swift_allocObject();
  void v21[2] = a7;
  v21[3] = a8;
  v21[4] = a9;
  v21[5] = a10;
  v21[6] = a11;
  v21[7] = a12;
  v21[8] = v20;
  v21[9] = a1;
  v21[10] = a2;
  aBlock[4] = sub_1D59A0B2C;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D5956AFC;
  aBlock[3] = &block_descriptor_191;
  uint64_t v22 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a4, sel_receiveRequest_data_completion_, v19, v18, v22);
  _Block_release(v22);

  return sub_1D5956DE4(v15, v17);
}

uint64_t sub_1D599B3DC(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v38 = a7;
  uint64_t v39 = a8;
  uint64_t v40 = a5;
  uint64_t v41 = a1;
  uint64_t v15 = sub_1D5AB4C50();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  unint64_t v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1D5AB4C70();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v33 = v15;
    uint64_t v34 = v18;
    uint64_t v36 = v16;
    uint64_t v37 = v19;
    uint64_t v35 = v20;
    uint64_t v24 = *(void *)(result + 16);
    swift_retain();
    swift_release();
    id v25 = *(id *)(v24 + 16);
    swift_release();
    uint64_t v26 = (void *)swift_allocObject();
    uint64_t v27 = v39;
    _OWORD v26[2] = v38;
    v26[3] = v27;
    v26[4] = a9;
    v26[5] = a10;
    v26[6] = a11;
    v26[7] = a12;
    uint64_t v28 = v41;
    v26[8] = v40;
    v26[9] = a6;
    v26[10] = v28;
    v26[11] = a2;
    v26[12] = a3;
    aBlock[4] = sub_1D59A0BC0;
    aBlock[5] = v26;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D598EA50;
    aBlock[3] = &block_descriptor_197;
    uint64_t v29 = _Block_copy(aBlock);
    swift_retain();
    sub_1D59A0188(v28, a2);
    id v30 = a3;
    sub_1D5AB4C60();
    uint64_t v42 = MEMORY[0x1E4FBC860];
    sub_1D59A019C((unint64_t *)&qword_1EBDE50F0, 255, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE5100);
    sub_1D5990440();
    uint64_t v31 = v33;
    uint64_t v32 = v34;
    sub_1D5AB56F0();
    MEMORY[0x1D94598A0](0, v22, v32, v29);
    _Block_release(v29);

    (*(void (**)(char *, uint64_t))(v36 + 8))(v32, v31);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v22, v37);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D599B734(void (*a1)(char *), uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v15 = a1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v8 = sub_1D5AB5CB0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v14 - v10;
  sub_1D59A0188(a3, a4);
  id v12 = a5;
  sub_1D5AB5C70();
  v15(v11);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t XPCClient.sendRequest(_:)(_WORD *a1)
{
  *(void *)(v2 + 16) = v1;
  *(_WORD *)(v2 + 48) = *a1;
  return MEMORY[0x1F4188298](sub_1D599B8AC, 0, 0);
}

uint64_t sub_1D599B8AC()
{
  __int16 v1 = *(_WORD *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 24) = v3;
  *(void *)(v3 + 16) = v2;
  *(_WORD *)(v3 + 24) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1D599B9B0;
  uint64_t v5 = MEMORY[0x1E4FBC848] + 8;
  return MEMORY[0x1F4188160](v4, 0, 0, 0x75716552646E6573, 0xEF293A5F28747365, sub_1D599F3A0, v3, v5);
}

uint64_t sub_1D599B9B0()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1D599BAE4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1D599BACC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D599BACC()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D599BAE4()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D599BB48(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE31D0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = swift_allocObject();
  *(_WORD *)(v9 + 16) = a3;
  uint64_t v10 = *(void *)(a2 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v10 + 16));
  uint64_t v11 = (void *)sub_1D5998DEC(a2, 1, a1, (uint64_t)sub_1D59A0860, v9);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 16));
  uint64_t v12 = qword_1D5ABA960[a3];
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v13 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v14 + v13, (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_1D59A084C;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D5956AFC;
  aBlock[3] = &block_descriptor_174;
  uint64_t v15 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v11, sel_receiveRequest_data_completion_, v12, 0, v15);
  _Block_release(v15);
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_1D599BDA8(void *a1, uint64_t a2, __int16 a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE31D0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = qword_1D5ABA960[a3];
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v6);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_1D59A084C;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D5956AFC;
  aBlock[3] = &block_descriptor_181;
  uint64_t v12 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a1, sel_receiveRequest_data_completion_, v9, 0, v12);
  _Block_release(v12);
}

uint64_t XPCClient.sendRequest<A>(_:payload:)(_WORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 + 40) = a5;
  *(void *)(v6 + 48) = v5;
  *(void *)(v6 + 24) = a3;
  *(void *)(v6 + 32) = a4;
  *(void *)(v6 + 16) = a2;
  *(_WORD *)(v6 + 80) = *a1;
  return MEMORY[0x1F4188298](sub_1D599BF9C, 0, 0);
}

uint64_t sub_1D599BF9C()
{
  __int16 v1 = *(_WORD *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  long long v4 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v3 + 32) = v4;
  *(void *)(v3 + 48) = v2;
  *(_WORD *)(v3 + 56) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v5;
  *uint64_t v5 = v0;
  uint64_t v6 = MEMORY[0x1E4FBC848];
  v5[1] = sub_1D599C0A4;
  return MEMORY[0x1F4188160](v5, 0, 0, 0xD000000000000017, 0x80000001D5AC6640, sub_1D599F3AC, v3, v6 + 8);
}

uint64_t sub_1D599C0A4()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1D599C1C0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1D599BACC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D599C1C0()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D599C224(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v29 = a4;
  uint64_t v28 = a1;
  uint64_t v11 = *(void *)(a5 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = MEMORY[0x1F4188790](a1);
  uint64_t v14 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v27 - v15;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v17((char *)v27 - v15, v18, v19);
  v17(v14, (uint64_t)v16, a5);
  unint64_t v20 = (*(unsigned __int8 *)(v11 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v21 = (v12 + v20 + 1) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v22 = (char *)swift_allocObject();
  *((void *)v22 + 2) = a5;
  *((void *)v22 + 3) = a6;
  v27[0] = a6;
  v27[1] = a7;
  uint64_t v23 = v28;
  *((void *)v22 + 4) = a7;
  LOWORD(a7) = v29;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v22[v20], v16, a5);
  *(_WORD *)&v22[v21] = a7;
  uint64_t v24 = *(void *)(a2 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v24 + 16));
  id v25 = (void *)sub_1D5998DEC(a2, 1, v23, (uint64_t)sub_1D59A0640, (uint64_t)v22);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v24 + 16));
  sub_1D599C460(v25, v23, (uint64_t)v14, a7);
  swift_release();
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, a5);
}

uint64_t sub_1D599C460(void *a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  id v18 = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE31D0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = sub_1D5AB3E40();
  unint64_t v11 = v10;
  sub_1D599FF54(v9, v10);
  uint64_t v12 = (void *)sub_1D5AB1C10();
  sub_1D5956DF8(v9, v11);
  uint64_t v13 = qword_1D5ABA960[a4];
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v6);
  unint64_t v14 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v15 + v14, (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_1D59A084C;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D5956AFC;
  aBlock[3] = &block_descriptor_165;
  uint64_t v16 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v18, sel_receiveRequest_data_completion_, v13, v12, v16);
  _Block_release(v16);

  return sub_1D5956DE4(v9, v11);
}

uint64_t sub_1D599C69C(int a1, int a2, id a3)
{
  id v3 = a3;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE5130);
  sub_1D5AB5C90();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE31D0);
  if (v5) {
    return sub_1D5AB5140();
  }
  else {
    return sub_1D5AB5150();
  }
}

uint64_t XPCClient.sendRequest<A>(_:)(uint64_t a1, _WORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 + 40) = a5;
  *(void *)(v6 + 48) = v5;
  *(void *)(v6 + 24) = a3;
  *(void *)(v6 + 32) = a4;
  *(void *)(v6 + 16) = a1;
  *(_WORD *)(v6 + 80) = *a2;
  return MEMORY[0x1F4188298](sub_1D599C764, 0, 0);
}

uint64_t sub_1D599C764()
{
  __int16 v1 = *(_WORD *)(v0 + 80);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 56) = v2;
  long long v3 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v2 + 32) = v3;
  *(_WORD *)(v2 + 48) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1D599C860;
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = *(void *)(v0 + 24);
  return MEMORY[0x1F4188160](v5, 0, 0, 0x75716552646E6573, 0xEF293A5F28747365, sub_1D599F3C0, v2, v6);
}

uint64_t sub_1D599C860()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D599C1C0, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    long long v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1D599C99C(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a4;
  *(void *)(v12 + 24) = a5;
  *(void *)(v12 + 32) = a6;
  *(_WORD *)(v12 + 40) = a3;
  *(void *)(v12 + 48) = a2;
  swift_retain();
  sub_1D5998564(1, a1, (void (*)(uint64_t, uint64_t))sub_1D59A021C, v12, a4);
  return swift_release();
}

void sub_1D599CA58(void *a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v20 = a7;
  id v21 = a1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v11 = sub_1D5AB5160();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v14 = (char *)&v20 - v13;
  uint64_t v15 = qword_1D5ABA960[a3];
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
  unint64_t v17 = (*(unsigned __int8 *)(v12 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  id v18 = (char *)swift_allocObject();
  *((void *)v18 + 2) = a5;
  *((void *)v18 + 3) = a6;
  *((void *)v18 + 4) = v20;
  *((void *)v18 + 5) = v16;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v18[v17], v14, v11);
  aBlock[4] = sub_1D59A031C;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D5956AFC;
  aBlock[3] = &block_descriptor_144;
  uint64_t v19 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v21, sel_receiveRequest_data_completion_, v15, 0, v19);
  _Block_release(v19);
}

uint64_t sub_1D599CC78(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v39 = a7;
  uint64_t v40 = a8;
  uint64_t v37 = a5;
  unint64_t v42 = a2;
  uint64_t v43 = a3;
  uint64_t v41 = a1;
  uint64_t v9 = sub_1D5AB4C50();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1D5AB4C70();
  uint64_t v44 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v38 = a6;
  uint64_t v16 = sub_1D5AB5160();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v34 - v19;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v36 = v10;
    uint64_t v22 = *(void *)(result + 16);
    swift_retain();
    swift_release();
    id v35 = *(id *)(v22 + 16);
    swift_release();
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v20, v37, v16);
    unint64_t v23 = (*(unsigned __int8 *)(v17 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    unint64_t v24 = (v18 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v37 = v13;
    id v25 = (char *)swift_allocObject();
    uint64_t v26 = v39;
    *((void *)v25 + 2) = v38;
    *((void *)v25 + 3) = v26;
    *((void *)v25 + 4) = v40;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v25[v23], v20, v16);
    uint64_t v27 = (uint64_t *)&v25[v24];
    uint64_t v29 = v41;
    unint64_t v28 = v42;
    *uint64_t v27 = v41;
    v27[1] = v28;
    id v30 = v43;
    *(void *)&v25[(v24 + 23) & 0xFFFFFFFFFFFFFFF8] = v43;
    aBlock[4] = sub_1D59A04D0;
    aBlock[5] = v25;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D598EA50;
    aBlock[3] = &block_descriptor_150;
    uint64_t v31 = _Block_copy(aBlock);
    sub_1D59A0188(v29, v28);
    id v32 = v30;
    sub_1D5AB4C60();
    uint64_t v45 = MEMORY[0x1E4FBC860];
    sub_1D59A019C((unint64_t *)&qword_1EBDE50F0, 255, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE5100);
    sub_1D5990440();
    sub_1D5AB56F0();
    uint64_t v33 = v35;
    MEMORY[0x1D94598A0](0, v15, v12, v31);
    _Block_release(v31);

    (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v9);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v37);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D599D0B4(uint64_t a1, uint64_t a2, unint64_t a3, void *a4)
{
  v14[1] = a1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v7 = sub_1D5AB5CB0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v14 - v9;
  sub_1D59A0188(a2, a3);
  id v11 = a4;
  sub_1D5AB5C70();
  uint64_t v12 = sub_1D5AB5160();
  sub_1D59966A4((uint64_t)v10, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t XPCClient.sendRequest<A, B>(_:payload:)(uint64_t a1, _WORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v9 + 72) = v11;
  *(void *)(v9 + 80) = v8;
  *(void *)(v9 + 56) = a7;
  *(void *)(v9 + 64) = a8;
  *(void *)(v9 + 40) = a5;
  *(void *)(v9 + 48) = a6;
  *(void *)(v9 + 24) = a3;
  *(void *)(v9 + 32) = a4;
  *(void *)(v9 + 16) = a1;
  *(_WORD *)(v9 + 112) = *a2;
  return MEMORY[0x1F4188298](sub_1D599D25C, 0, 0);
}

uint64_t sub_1D599D25C()
{
  __int16 v1 = *(_WORD *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 88) = v4;
  long long v5 = *(_OWORD *)(v0 + 48);
  long long v6 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v4 + 32) = v5;
  *(_OWORD *)(v4 + 48) = v6;
  *(void *)(v4 + 64) = v2;
  *(void *)(v4 + 72) = v3;
  *(_WORD *)(v4 + 80) = v1;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1D599D36C;
  uint64_t v8 = *(void *)(v0 + 40);
  uint64_t v9 = *(void *)(v0 + 16);
  return MEMORY[0x1F4188160](v9, 0, 0, 0xD000000000000017, 0x80000001D5AC6640, sub_1D599F3D0, v4, v8);
}

uint64_t sub_1D599D36C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D599D4A8, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1D599D4A8()
{
  swift_task_dealloc();
  __int16 v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D599D50C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  int v28 = a4;
  uint64_t v29 = a1;
  uint64_t v13 = *(void *)(a5 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v25 = a10;
  MEMORY[0x1F4188790](a1);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v17);
  unint64_t v18 = (*(unsigned __int8 *)(v13 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v19 = (v14 + v18 + 1) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v20 = (char *)swift_allocObject();
  *((void *)v20 + 2) = a5;
  *((void *)v20 + 3) = a6;
  uint64_t v21 = v27;
  *((void *)v20 + 4) = v26;
  *((void *)v20 + 5) = v21;
  uint64_t v22 = v25;
  *((void *)v20 + 6) = a9;
  *((void *)v20 + 7) = v22;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v20[v18], v15, a5);
  *(_WORD *)&v20[v19] = v28;
  *(void *)&v20[(v19 + 9) & 0xFFFFFFFFFFFFFFF8] = a2;
  swift_retain();
  sub_1D5998564(1, v29, (void (*)(uint64_t, uint64_t))sub_1D599FCAC, (uint64_t)v20, a6);
  return swift_release();
}

uint64_t sub_1D599D6AC(void *a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  v31[1] = a5;
  uint64_t v32 = a2;
  id v38 = a1;
  uint64_t v34 = a10;
  uint64_t v35 = a11;
  uint64_t v33 = a9;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v36 = a7;
  uint64_t v15 = sub_1D5AB5160();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  unint64_t v18 = (char *)v31 - v17;
  uint64_t v37 = a8;
  uint64_t v19 = sub_1D5AB3E40();
  unint64_t v21 = v20;
  sub_1D599FF54(v19, v20);
  uint64_t v22 = (void *)sub_1D5AB1C10();
  sub_1D5956DF8(v19, v21);
  v31[0] = qword_1D5ABA960[a4];
  uint64_t v23 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v32, v15);
  unint64_t v24 = (*(unsigned __int8 *)(v16 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v25 = (char *)swift_allocObject();
  uint64_t v26 = v36;
  *((void *)v25 + 2) = a6;
  *((void *)v25 + 3) = v26;
  uint64_t v27 = v33;
  *((void *)v25 + 4) = v37;
  *((void *)v25 + 5) = v27;
  uint64_t v28 = v35;
  *((void *)v25 + 6) = v34;
  *((void *)v25 + 7) = v28;
  *((void *)v25 + 8) = v23;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v25[v24], v18, v15);
  aBlock[4] = sub_1D599FE74;
  aBlock[5] = v25;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D5956AFC;
  aBlock[3] = &block_descriptor_128;
  uint64_t v29 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v38, sel_receiveRequest_data_completion_, v31[0], v22, v29);
  _Block_release(v29);

  return sub_1D5956DE4(v19, v21);
}

uint64_t sub_1D599D96C(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v49 = a8;
  uint64_t v50 = a1;
  uint64_t v46 = a5;
  uint64_t v47 = a6;
  unint64_t v51 = a2;
  uint64_t v52 = a3;
  uint64_t v12 = sub_1D5AB4C50();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1D5AB4C70();
  uint64_t v53 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  unint64_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v48 = a7;
  uint64_t v19 = sub_1D5AB5160();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void *)(v20 + 64);
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v41 - v22;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v42 = a11;
    uint64_t v41 = a10;
    uint64_t v44 = v15;
    uint64_t v45 = v12;
    uint64_t v25 = *(void *)(result + 16);
    swift_retain();
    swift_release();
    id v43 = *(id *)(v25 + 16);
    swift_release();
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v23, v46, v19);
    unint64_t v26 = (*(unsigned __int8 *)(v20 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    unint64_t v27 = (v21 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v46 = v16;
    uint64_t v28 = v13;
    uint64_t v29 = (char *)swift_allocObject();
    uint64_t v30 = v48;
    *((void *)v29 + 2) = v47;
    *((void *)v29 + 3) = v30;
    *((void *)v29 + 4) = v49;
    *((void *)v29 + 5) = a9;
    uint64_t v31 = v42;
    *((void *)v29 + 6) = v41;
    *((void *)v29 + 7) = v31;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(&v29[v26], v23, v19);
    uint64_t v32 = (uint64_t *)&v29[v27];
    uint64_t v34 = v50;
    unint64_t v33 = v51;
    uint64_t *v32 = v50;
    v32[1] = v33;
    uint64_t v35 = v52;
    *(void *)&v29[(v27 + 23) & 0xFFFFFFFFFFFFFFF8] = v52;
    aBlock[4] = sub_1D59A0094;
    aBlock[5] = v29;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D598EA50;
    aBlock[3] = &block_descriptor_134;
    uint64_t v36 = _Block_copy(aBlock);
    sub_1D59A0188(v34, v33);
    id v37 = v35;
    sub_1D5AB4C60();
    uint64_t v54 = MEMORY[0x1E4FBC860];
    sub_1D59A019C((unint64_t *)&qword_1EBDE50F0, 255, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE5100);
    sub_1D5990440();
    uint64_t v39 = v44;
    uint64_t v38 = v45;
    sub_1D5AB56F0();
    uint64_t v40 = v43;
    MEMORY[0x1D94598A0](0, v18, v39, v36);
    _Block_release(v36);

    (*(void (**)(char *, uint64_t))(v28 + 8))(v39, v38);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v18, v46);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D599DDD4(uint64_t a1, uint64_t a2, unint64_t a3, void *a4)
{
  v14[1] = a1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v7 = sub_1D5AB5CB0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v14 - v9;
  sub_1D59A0188(a2, a3);
  id v11 = a4;
  sub_1D5AB5C70();
  uint64_t v12 = sub_1D5AB5160();
  sub_1D59966A4((uint64_t)v10, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

Swift::Void __swiftcall XPCClient.broadcastEvent(_:)(SeymourClient::TransportEvent a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = (char *)a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4E30);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v25 - v9;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v11 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v14 = *v3;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v2;
  *(unsigned char *)(v15 + 24) = 1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE5240);
  sub_1D5AB4540();
  uint64_t v16 = swift_allocObject();
  *(unsigned char *)(v16 + 16) = v14;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1D599F418;
  *(void *)(v17 + 24) = v16;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  unint64_t v18 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v19 = (v6 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v20 + v18, v8, v4);
  uint64_t v21 = (uint64_t (**)(uint64_t *))(v20 + v19);
  *uint64_t v21 = sub_1D599F520;
  v21[1] = (uint64_t (*)(uint64_t *))v17;
  sub_1D5AB4540();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  uint64_t v22 = v26;
  uint64_t v23 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_1D5AB45B0();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = 0;
  *(void *)(v24 + 24) = 0;
  v23(sub_1D599F530, v24);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v22);
}

id sub_1D599E28C(id *a1, char a2)
{
  return objc_msgSend(*a1, sel_receiveEvent_data_, qword_1D5ABB408[a2], 0);
}

uint64_t XPCClient.broadcastEvent<A>(_:payload:)(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v37 = a4;
  uint64_t v38 = a5;
  uint64_t v35 = a2;
  uint64_t v8 = *(void *)(a3 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4E30);
  uint64_t v10 = *(void *)(v39 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x1F4188790](v39);
  uint64_t v36 = &v33[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v12);
  char v14 = &v33[-v13];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v40 = v15;
  uint64_t v41 = v16;
  MEMORY[0x1F4188790](v15);
  unint64_t v18 = &v33[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v34 = *a1;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v5;
  *(unsigned char *)(v19 + 24) = 1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE5240);
  sub_1D5AB4540();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(&v33[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], v35, a3);
  unint64_t v20 = (*(unsigned __int8 *)(v8 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v37;
  *(void *)(v21 + 16) = a3;
  *(void *)(v21 + 24) = v22;
  *(void *)(v21 + 32) = v38;
  *(unsigned char *)(v21 + 40) = v34;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v8 + 32))(v21 + v20, &v33[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], a3);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = sub_1D599F5BC;
  *(void *)(v23 + 24) = v21;
  uint64_t v24 = v36;
  uint64_t v25 = v39;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v36, v14, v39);
  unint64_t v26 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v27 = swift_allocObject();
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v10 + 32))(v27 + v26, v24, v25);
  uint64_t v28 = (uint64_t (**)(uint64_t *))(v27 + ((v11 + v26 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v28 = sub_1D59A1138;
  v28[1] = (uint64_t (*)(uint64_t *))v23;
  sub_1D5AB4540();
  (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v14, v25);
  uint64_t v29 = v40;
  uint64_t v30 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_1D5AB45B0();
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = 0;
  *(void *)(v31 + 24) = 0;
  v30(sub_1D599F530, v31);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v41 + 8))(v18, v29);
}

void sub_1D599E708(void **a1, char a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = sub_1D5AB3E40();
  if (v2)
  {

    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v8 = v5;
    unint64_t v9 = v6;
    uint64_t v7 = (void *)sub_1D5AB1C10();
    sub_1D5956DF8(v8, v9);
  }
  objc_msgSend(v4, sel_receiveEvent_data_, qword_1D5ABB408[a2], v7);
}

uint64_t sub_1D599E7B0(__int16 *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4E30);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v18 - v8;
  __int16 v10 = *a1;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(unsigned char *)(v11 + 24) = 1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE5240);
  sub_1D5AB4540();
  uint64_t v12 = swift_allocObject();
  *(_WORD *)(v12 + 16) = v10;
  *(void *)(v12 + 24) = v1;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  unint64_t v13 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v14 = (v5 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v15 + v13, v7, v3);
  uint64_t v16 = (uint64_t (**)(uint64_t *))(v15 + v14);
  *uint64_t v16 = sub_1D59A113C;
  v16[1] = (uint64_t (*)(uint64_t *))v12;
  swift_retain();
  sub_1D5AB4540();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
}

uint64_t sub_1D599E9F8(_WORD *a1)
{
  *(void *)(v2 + 16) = v1;
  *(_WORD *)(v2 + 48) = *a1;
  return MEMORY[0x1F4188298](sub_1D599EA20, 0, 0);
}

uint64_t sub_1D599EA20()
{
  __int16 v1 = *(_WORD *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 24) = v3;
  *(void *)(v3 + 16) = v2;
  *(_WORD *)(v3 + 24) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1D599B9B0;
  uint64_t v5 = MEMORY[0x1E4FBC848] + 8;
  return MEMORY[0x1F4188160](v4, 0, 0, 0x75716552646E6573, 0xEF293A5F28747365, sub_1D59A1148, v3, v5);
}

uint64_t sub_1D599EB24(_WORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  *(void *)uint64_t v12 = v6;
  *(void *)(v12 + 40) = a5;
  *(void *)(v12 + 48) = v5;
  *(void *)(v12 + 24) = a3;
  *(void *)(v12 + 32) = a4;
  *(void *)(v12 + 8) = sub_1D598AF68;
  *(void *)(v12 + 16) = a2;
  *(_WORD *)(v12 + 80) = *a1;
  return MEMORY[0x1F4188298](sub_1D599BF9C, 0, 0);
}

uint64_t sub_1D599EBFC(uint64_t a1, _WORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  *(void *)uint64_t v12 = v6;
  *(void *)(v12 + 40) = a5;
  *(void *)(v12 + 48) = v5;
  *(void *)(v12 + 24) = a3;
  *(void *)(v12 + 32) = a4;
  *(void *)(v12 + 8) = sub_1D598AF68;
  *(void *)(v12 + 16) = a1;
  *(_WORD *)(v12 + 80) = *a2;
  return MEMORY[0x1F4188298](sub_1D599C764, 0, 0);
}

uint64_t sub_1D599ECD4(uint64_t a1, _WORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v17 = swift_task_alloc();
  *(void *)(v9 + 16) = v17;
  *(void *)uint64_t v17 = v9;
  *(void *)(v17 + 72) = v21;
  *(void *)(v17 + 80) = v8;
  *(void *)(v17 + 56) = a7;
  *(void *)(v17 + 64) = a8;
  *(void *)(v17 + 40) = a5;
  *(void *)(v17 + 48) = a6;
  *(void *)(v17 + 24) = a3;
  *(void *)(v17 + 32) = a4;
  *(void *)(v17 + 8) = sub_1D5984480;
  *(void *)(v17 + 16) = a1;
  *(_WORD *)(v17 + 112) = *a2;
  return MEMORY[0x1F4188298](sub_1D599D25C, 0, 0);
}

uint64_t sub_1D599EF4C()
{
  return swift_retain();
}

uint64_t static XPCClient.== infix(_:_:)()
{
  return sub_1D5AB55B0() & 1;
}

void XPCClient.hash(into:)()
{
  id v1 = *(id *)(v0 + 24);
  sub_1D5AB55C0();
}

uint64_t XPCClient.hashValue.getter()
{
  return sub_1D5AB5C60();
}

uint64_t sub_1D599F038()
{
  return sub_1D5AB5C60();
}

void sub_1D599F080()
{
  id v1 = *(id *)(*(void *)v0 + 24);
  sub_1D5AB55C0();
}

uint64_t sub_1D599F0DC()
{
  sub_1D5AB5C20();
  id v1 = *(id *)(*(void *)v0 + 24);
  sub_1D5AB55C0();

  return sub_1D5AB5C60();
}

uint64_t sub_1D599F12C()
{
  return sub_1D5AB55B0() & 1;
}

uint64_t sub_1D599F174()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 25, 7);
}

void sub_1D599F1AC(void (*a1)(uint64_t *), uint64_t a2)
{
  sub_1D59995D0(a1, a2, *(void *)(v2 + 16), *(unsigned __int8 *)(v2 + 24));
}

uint64_t sub_1D599F1B8(uint64_t *a1)
{
  return sub_1D599991C(a1, *(_WORD *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1D599F1CC()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (((*(void *)(v1 + 64) + v3 + 1) & 0xFFFFFFFFFFFFFFFELL) + 9) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  swift_release();
  return MEMORY[0x1F4186498](v0, v5 + 8, v4);
}

uint64_t sub_1D599F270@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = (*(void *)(*(void *)(v2[2] - 8) + 64)
      + ((*(unsigned __int8 *)(*(void *)(v2[2] - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2[2] - 8) + 80))
      + 1) & 0xFFFFFFFFFFFFFFFELL;
  return sub_1D5999E68(a1, *(unsigned __int16 *)((char *)v2 + v3), *(uint64_t *)((char *)v2 + ((v3 + 9) & 0xFFFFFFFFFFFFFFF8)), v2[2], v2[3], v2[4], a2);
}

uint64_t sub_1D599F2EC(uint64_t *a1)
{
  return sub_1D599A710(a1, *(_WORD *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1D599F304@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = (*(void *)(*(void *)(v2[2] - 8) + 64)
      + ((*(unsigned __int8 *)(*(void *)(v2[2] - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2[2] - 8) + 80))
      + 1) & 0xFFFFFFFFFFFFFFFELL;
  return sub_1D599B04C(a1, *(unsigned __int16 *)((char *)v2 + v3), *(uint64_t *)((char *)v2 + ((v3 + 9) & 0xFFFFFFFFFFFFFFF8)), v2[2], v2[3], v2[4], v2[5], a2, v2[6], v2[7]);
}

uint64_t sub_1D599F3A0(uint64_t a1)
{
  return sub_1D599BB48(a1, *(void *)(v1 + 16), *(_WORD *)(v1 + 24));
}

uint64_t sub_1D599F3AC(uint64_t a1)
{
  return sub_1D599C224(a1, *(void *)(v1 + 40), *(void *)(v1 + 48), *(unsigned __int16 *)(v1 + 56), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1D599F3C0(uint64_t a1)
{
  return sub_1D599C99C(a1, *(void *)(v1 + 40), *(_WORD *)(v1 + 48), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1D599F3D0(uint64_t a1)
{
  return sub_1D599D50C(a1, *(void *)(v1 + 64), *(void *)(v1 + 72), *(unsigned __int16 *)(v1 + 80), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_1D599F408()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

id sub_1D599F418(id *a1)
{
  return sub_1D599E28C(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_1D599F434(uint64_t result, uint64_t (*a2)(uint64_t *))
{
  char v2 = *(unsigned char *)(result + 8);
  uint64_t v3 = *(void *)result;
  char v4 = v2;
  if (a2) {
    return a2(&v3);
  }
  return result;
}

uint64_t sub_1D599F47C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *a1;
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = v5;
  swift_unknownObjectRetain();
  swift_retain();
  return sub_1D5AB4540();
}

uint64_t sub_1D599F520(uint64_t *a1)
{
  return sub_1D599F47C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1D599F534()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 41) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  return MEMORY[0x1F4186498](v0, v4, v5);
}

void sub_1D599F5BC(void **a1)
{
  sub_1D599E708(a1, *(unsigned char *)(v1 + 40));
}

unint64_t sub_1D599F620()
{
  unint64_t result = qword_1EBDE11C8;
  if (!qword_1EBDE11C8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBDE11C8);
  }
  return result;
}

uint64_t sub_1D599F660(uint64_t a1, uint64_t a2)
{
  return sub_1D59A019C((unint64_t *)&unk_1EBDE4270, a2, (void (*)(uint64_t))type metadata accessor for XPCClient);
}

uint64_t method lookup function for XPCClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for XPCClient);
}

uint64_t dispatch thunk of XPCClient.activate()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of XPCClient.deactivate()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of XPCClient.invalidate()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t getEnumTagSinglePayload for XPCClient.ConnectionState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for XPCClient.ConnectionState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D599F888);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCClient.ConnectionState()
{
  return &type metadata for XPCClient.ConnectionState;
}

unint64_t sub_1D599F8C4()
{
  unint64_t result = qword_1EA725878;
  if (!qword_1EA725878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725878);
  }
  return result;
}

void sub_1D599F918(void (*a1)(void **), uint64_t a2, void (*a3)(void **__return_ptr, uint64_t *), uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = *a5;
  a3(&v8, &v7);
  unsigned int v6 = v8;
  char v9 = 0;
  a1(&v8);
  sub_1D596EA00(v6, 0);
}

uint64_t sub_1D599F9B4()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v1 = sub_1D5AB5160();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 33) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1D599FAC0(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v4 = *(void *)(sub_1D5AB5160() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 24);
  char v7 = *(unsigned char *)(v1 + 32);
  uint64_t v8 = v1 + v5;
  char v9 = (uint64_t *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  return sub_1D5998A4C(a1, v6, v7, v8, v10, v11, v3);
}

uint64_t sub_1D599FB94()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D599FBD0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4E30) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v2 + v6;
  uint64_t v8 = (uint64_t *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  return sub_1D5986C88(a1, a2, v7, v9, v10);
}

uint64_t sub_1D599FC84()
{
  return objectdestroy_115Tm(MEMORY[0x1E4FBC8F8]);
}

void sub_1D599FC9C(void (*a1)(void **), uint64_t a2)
{
  sub_1D599F918(a1, a2, *(void (**)(void **__return_ptr, uint64_t *))(v2 + 16), *(void *)(v2 + 24), (uint64_t *)(v2 + 32));
}

uint64_t sub_1D599FCAC(void *a1, uint64_t a2)
{
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)(v2[2] - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2[2] - 8) + 80);
  unint64_t v4 = (*(void *)(*(void *)(v2[2] - 8) + 64) + v3 + 1) & 0xFFFFFFFFFFFFFFFELL;
  return sub_1D599D6AC(a1, a2, (uint64_t)v2 + v3, *(_WORD *)((char *)v2 + v4), *(uint64_t *)((char *)v2 + ((v4 + 9) & 0xFFFFFFFFFFFFFFF8)), v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_1D599FD50()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D599FD88()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v1 = sub_1D5AB5160();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 72) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D599FE74(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v7 = *(void *)(v3 + 16);
  uint64_t v8 = *(void *)(v3 + 24);
  uint64_t v9 = *(void *)(v3 + 32);
  long long v13 = *(_OWORD *)(v3 + 40);
  uint64_t v10 = *(void *)(v3 + 56);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v11 = *(void *)(sub_1D5AB5160() - 8);
  return sub_1D599D96C(a1, a2, a3, *(void *)(v3 + 64), v3 + ((*(unsigned __int8 *)(v11 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), v7, v8, v9, v13, *((uint64_t *)&v13 + 1), v10);
}

uint64_t sub_1D599FF54(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_1D599FFAC()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v1 = sub_1D5AB5160();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 64) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  unint64_t v6 = *(void *)(v0 + v5 + 8);
  if (v6 >> 60 != 15) {
    sub_1D5956DF8(*(void *)(v0 + v5), v6);
  }
  unint64_t v7 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = v7 + 8;

  return MEMORY[0x1F4186498](v0, v8, v3 | 7);
}

uint64_t sub_1D59A0094()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v1 = *(void *)(sub_1D5AB5160() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1D599DDD4(v0 + v2, *(void *)(v0 + v3), *(void *)(v0 + v3 + 8), *(void **)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1D59A0188(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1D599FF54(a1, a2);
  }
  return a1;
}

uint64_t sub_1D59A019C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D59A01E4()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_1D59A021C(void *a1, uint64_t a2)
{
  sub_1D599CA58(a1, a2, *(_WORD *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1D59A0230()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v1 = sub_1D5AB5160();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D59A031C(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v7 = v3[2];
  uint64_t v8 = v3[3];
  uint64_t v9 = v3[4];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v10 = *(void *)(sub_1D5AB5160() - 8);
  uint64_t v11 = v3[5];
  uint64_t v12 = (uint64_t)v3 + ((*(unsigned __int8 *)(v10 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  return sub_1D599CC78(a1, a2, a3, v11, v12, v7, v8, v9);
}

uint64_t sub_1D59A03E8()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v1 = sub_1D5AB5160();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  unint64_t v6 = *(void *)(v0 + v5 + 8);
  if (v6 >> 60 != 15) {
    sub_1D5956DF8(*(void *)(v0 + v5), v6);
  }
  unint64_t v7 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = v7 + 8;

  return MEMORY[0x1F4186498](v0, v8, v3 | 7);
}

uint64_t sub_1D59A04D0()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v1 = *(void *)(sub_1D5AB5160() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + v3);
  unint64_t v5 = *(void *)(v0 + v3 + 8);
  unint64_t v6 = *(void **)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8));
  return sub_1D599D0B4(v0 + v2, v4, v5, v6);
}

uint64_t sub_1D59A05AC()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(v1 + 64) + v3 + 1) & 0xFFFFFFFFFFFFFFFELL) + 2;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  return MEMORY[0x1F4186498](v0, v5, v4);
}

uint64_t sub_1D59A0640(void *a1, uint64_t a2)
{
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)(*(void *)(v2 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v2 + 16) - 8) + 80);
  return sub_1D599C460(a1, a2, v2 + v3, *(_WORD *)(v2+ ((*(void *)(*(void *)(*(void *)(v2 + 16) - 8) + 64) + v3 + 1) & 0xFFFFFFFFFFFFFFFELL)));
}

uint64_t sub_1D59A06AC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE31D0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 25) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1D59A079C(void *a1)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE31D0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + 16);
  char v6 = *(unsigned char *)(v1 + 24);
  uint64_t v7 = v1 + v4;
  uint64_t v8 = v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = *(void (**)(void, void))v8;
  uint64_t v10 = *(void *)(v8 + 8);
  return sub_1D5998678(a1, v5, v6, v7, v9, v10);
}

uint64_t sub_1D59A0850()
{
  return MEMORY[0x1F4186498](v0, 18, 7);
}

void sub_1D59A0860(void *a1, uint64_t a2)
{
  sub_1D599BDA8(a1, a2, *(_WORD *)(v2 + 16));
}

uint64_t sub_1D59A086C(int a1, int a2, void *a3)
{
  return sub_1D599C69C(a1, a2, a3);
}

uint64_t objectdestroy_161Tm()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE31D0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D59A0984()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 64) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (((((*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 9) & 0xFFFFFFFFFFFFFFF8) + 9) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, v5 + 8, v4);
}

uint64_t sub_1D59A0A40(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)(v2[2] - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2[2] - 8) + 80);
  unint64_t v4 = (*(void *)(*(void *)(v2[2] - 8) + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1D599B1FC(a1, a2, (uint64_t)v2 + v3, *(void **)((char *)v2 + v4), *(_WORD *)((char *)v2 + ((v4 + 9) & 0xFFFFFFFFFFFFFFF8)), *(uint64_t *)((char *)v2 + ((((v4 + 9) & 0xFFFFFFFFFFFFFFF8) + 9) & 0xFFFFFFFFFFFFFFF8)), v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_1D59A0AEC()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 88, 7);
}

uint64_t sub_1D59A0B2C(uint64_t a1, unint64_t a2, void *a3)
{
  return sub_1D599B3DC(a1, a2, a3, v3[8], v3[9], v3[10], v3[2], v3[3], v3[4], v3[5], v3[6], v3[7]);
}

uint64_t sub_1D59A0B68()
{
  swift_release();
  unint64_t v1 = *(void *)(v0 + 88);
  if (v1 >> 60 != 15) {
    sub_1D5956DF8(*(void *)(v0 + 80), v1);
  }

  return MEMORY[0x1F4186498](v0, 104, 7);
}

uint64_t sub_1D59A0BC0()
{
  return sub_1D599B734(*(void (**)(char *))(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void **)(v0 + 96));
}

uint64_t sub_1D59A0C00()
{
  return objectdestroy_199Tm(MEMORY[0x1E4FBC8F8]);
}

void sub_1D59A0C18(uint64_t a1, uint64_t a2)
{
  sub_1D599A7C8(a1, a2, *(void **)(v2 + 40), *(_WORD *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1D59A0C2C()
{
  return objectdestroy_199Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1D59A0C44(uint64_t a1, unint64_t a2, void *a3)
{
  return sub_1D599A918(a1, a2, a3, v3[5], v3[6], v3[7], v3[2], v3[3], v3[4]);
}

uint64_t sub_1D59A0C74()
{
  swift_release();
  unint64_t v1 = *(void *)(v0 + 64);
  if (v1 >> 60 != 15) {
    sub_1D5956DF8(*(void *)(v0 + 56), v1);
  }

  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_1D59A0CCC()
{
  return sub_1D599AC54(*(void (**)(char *))(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void **)(v0 + 72));
}

uint64_t sub_1D59A0CE0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (((((*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 9) & 0xFFFFFFFFFFFFFFF8) + 9) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, v5 + 8, v4);
}

uint64_t sub_1D59A0D9C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)(*(void *)(v2 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v2 + 16) - 8) + 80);
  unint64_t v4 = (*(void *)(*(void *)(*(void *)(v2 + 16) - 8) + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1D599A004(a1, a2, v2 + v3, *(void **)(v2 + v4), *(_WORD *)(v2 + ((v4 + 9) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1D59A0E40(uint64_t a1, char a2)
{
  return sub_1D5A416B8(a1, a2 & 1, *(uint64_t (**)(uint64_t *))(v2 + 16));
}

uint64_t sub_1D59A0E4C()
{
  return objectdestroy_222Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1D59A0E64(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1D599A1E0(a1, a2, a3, v3[2], v3[3], v3[4], (uint64_t)&unk_1F2DEEF68, (uint64_t)sub_1D59A0ECC, (uint64_t)&block_descriptor_232);
}

uint64_t sub_1D59A0EB4()
{
  return objectdestroy_115Tm(MEMORY[0x1E4FBC8B8]);
}

void sub_1D59A0ECC()
{
  sub_1D599A4D8(*(void (**)(void *, void))(v0 + 16), *(void *)(v0 + 24), *(id *)(v0 + 32));
}

uint64_t sub_1D59A0EEC()
{
  return objectdestroy_222Tm(MEMORY[0x1E4FBC8F8]);
}

void sub_1D59A0F04(uint64_t a1, uint64_t a2)
{
  sub_1D59999C4(a1, a2, *(void **)(v2 + 16), *(_WORD *)(v2 + 24));
}

uint64_t sub_1D59A0F14()
{
  return objectdestroy_222Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1D59A0F2C(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1D599A1E0(a1, a2, a3, v3[2], v3[3], v3[4], (uint64_t)&unk_1F2DEF058, (uint64_t)sub_1D59A1140, (uint64_t)&block_descriptor_252);
}

uint64_t sub_1D59A0F7C()
{
  return objectdestroy_115Tm(MEMORY[0x1E4FBC8B8]);
}

uint64_t sub_1D59A0F94(uint64_t a1, char a2)
{
  unint64_t v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  uint64_t v5 = a1;
  char v6 = a2 & 1;
  return v3(&v5);
}

void sub_1D59A0FD4()
{
  sub_1D599847C(*(void (**)(void *, uint64_t))(v0 + 16));
}

void sub_1D59A0FE0(void *a1)
{
  sub_1D5997DE8(a1, *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(void (**)(uint64_t, void))(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1D59A0FF0()
{
  return objectdestroy_115Tm(MEMORY[0x1E4FBC8B8]);
}

uint64_t sub_1D59A1008()
{
  return (*(uint64_t (**)(void, uint64_t))(v0 + 16))(*(void *)(v0 + 32), 1);
}

uint64_t sub_1D59A1040()
{
  return sub_1D5996CE4(v0, sub_1D5996F44);
}

uint64_t sub_1D59A1070()
{
  return sub_1D5996CE4(v0, sub_1D5997130);
}

uint64_t HealthKitStandaloneMindfulSessionJobAdded.healthKitStandaloneMindfulSessionJob.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB4460();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t HealthKitStandaloneMindfulSessionJobAdded.init(healthKitStandaloneMindfulSessionJob:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB4460();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static HealthKitStandaloneMindfulSessionJobAdded.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for HealthKitStandaloneMindfulSessionJobAdded(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4460();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for HealthKitStandaloneMindfulSessionJobAdded(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB4460();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for HealthKitStandaloneMindfulSessionJobAdded(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4460();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for HealthKitStandaloneMindfulSessionJobAdded(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4460();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for HealthKitStandaloneMindfulSessionJobAdded(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4460();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for HealthKitStandaloneMindfulSessionJobAdded(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4460();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for HealthKitStandaloneMindfulSessionJobAdded(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D59A14A4);
}

uint64_t sub_1D59A14A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4460();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for HealthKitStandaloneMindfulSessionJobAdded(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D59A1524);
}

uint64_t sub_1D59A1524(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4460();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for HealthKitStandaloneMindfulSessionJobAdded()
{
  uint64_t result = qword_1EBDE13D8;
  if (!qword_1EBDE13D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D59A15E0()
{
  uint64_t result = sub_1D5AB4460();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *RecommendationClient.__allocating_init(eventHub:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = objc_allocWithZone(MEMORY[0x1E4F29268]);
  id v7 = a3;
  uint64_t v8 = (void *)sub_1D5AB4DE0();
  id v9 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v8, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  uint64_t v10 = sub_1D59968E8(v9, v7);
  uint64_t v11 = *(void *)(v10 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 16));
  if (*(unsigned char *)(v10 + 48) == 1)
  {
    *(unsigned char *)(v10 + 48) = 2;
    objc_msgSend(*(id *)(v10 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  type metadata accessor for RecommendationClient();
  uint64_t v12 = (void *)swift_allocObject();
  uint64_t v13 = swift_retain();
  uint64_t v14 = sub_1D59A2BC0(v13, a1, a2, v12);

  swift_release_n();
  return v14;
}

uint64_t RecommendationClient.__allocating_init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D59A17D0(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D59A2E84);
}

uint64_t RecommendationClient.init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D59A17D0(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D59A2D28);
}

uint64_t sub_1D59A17D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = a6(a1, a4, a5, v6, ObjectType, a2, a3);
  swift_unknownObjectRelease();
  return v14;
}

uint64_t sub_1D59A1854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v6 = *(void *)(result + 48);
    swift_unknownObjectRetain();
    swift_release();
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(ObjectType, a2, a3, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t RecommendationClient.deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t RecommendationClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t RecommendationClient.deduplicateOnboardingSurveyResults()()
{
  return sub_1D59A19CC(0xD000000000000024, (void *)0x80000001D5AC6740, 167);
}

uint64_t RecommendationClient.deleteAllOnboardingSurveyResults()()
{
  return sub_1D59A19CC(0xD000000000000022, (void *)0x80000001D5AC6770, 163);
}

uint64_t RecommendationClient.evaluateAllRecommendations()()
{
  return sub_1D59A19CC(0xD00000000000001CLL, (void *)0x80000001D5AC67A0, 154);
}

uint64_t sub_1D59A19CC(uint64_t a1, void *a2, __int16 a3)
{
  if (qword_1EBDE3B48 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1D5AB4B50();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBDE38C8);
  v8._object = (void *)0x80000001D5AC66C0;
  v8._uint64_t countAndFlagsBits = 0xD000000000000075;
  v9._uint64_t countAndFlagsBits = a1;
  v9._object = a2;
  Logger.trace(file:function:)(v8, v9);
  uint64_t v10 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v13 = a3;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v10 + 8))(&v13, ObjectType, v10);
}

uint64_t RecommendationClient.evaluateRecommendedGuidedAudioWorkouts()()
{
  if (qword_1EBDE3B48 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE38C8);
  v2._uint64_t countAndFlagsBits = 0xD000000000000075;
  v2._object = (void *)0x80000001D5AC66C0;
  v3._object = (void *)0x80000001D5AC67C0;
  v3._uint64_t countAndFlagsBits = 0xD000000000000028;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 158;
  uint64_t v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE4C28);
  uint64_t v8 = sub_1D597B6AC((unint64_t *)&qword_1EBDE3C40, qword_1EBDE4C28);
  unint64_t v9 = sub_1D59A2F04();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t RecommendationClient.fetchRemoteForYouCanvas()()
{
  if (qword_1EBDE3108 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE1660);
  v2._uint64_t countAndFlagsBits = 0xD000000000000075;
  v2._object = (void *)0x80000001D5AC66C0;
  v3._object = (void *)0x80000001D5AC67F0;
  v3._uint64_t countAndFlagsBits = 0xD000000000000019;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v9 = 97;
  uint64_t v6 = *(uint64_t (**)(__int16 *, uint64_t, void, void, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = sub_1D5AB3640();
  return v6(&v9, v7, MEMORY[0x1E4F9D958], MEMORY[0x1E4F9D960], ObjectType, v4);
}

uint64_t RecommendationClient.fetchOnboardingDetail()()
{
  if (qword_1EBDE3B48 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE38C8);
  v2._uint64_t countAndFlagsBits = 0xD000000000000075;
  v2._object = (void *)0x80000001D5AC66C0;
  v3._object = (void *)0x80000001D5AC6810;
  v3._uint64_t countAndFlagsBits = 0xD000000000000017;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v9 = 164;
  uint64_t v6 = *(uint64_t (**)(__int16 *, uint64_t, void, void, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = sub_1D5AB2FD0();
  return v6(&v9, v7, MEMORY[0x1E4F9CD98], MEMORY[0x1E4F9CDA0], ObjectType, v4);
}

uint64_t RecommendationClient.fetchPersonalizationInferenceResponse(options:)(uint64_t a1)
{
  if (qword_1EBDE3108 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE1660);
  v4._uint64_t countAndFlagsBits = 0xD000000000000075;
  v4._object = (void *)0x80000001D5AC66C0;
  v5._object = (void *)0x80000001D5AC6830;
  v5._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v12 = 159;
  uint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, void, void, void, void, uint64_t, uint64_t))(v6 + 32);
  uint64_t v9 = sub_1D5AB44E0();
  uint64_t v10 = sub_1D5AB4330();
  return v8(&v12, a1, v9, v10, MEMORY[0x1E4F9EC38], MEMORY[0x1E4F9EC40], MEMORY[0x1E4F9E9E8], MEMORY[0x1E4F9E9F0], ObjectType, v6);
}

uint64_t RecommendationClient.fetchPersonalizationAwardProgressReferences()()
{
  if (qword_1EBDE3108 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE1660);
  v2._uint64_t countAndFlagsBits = 0xD000000000000075;
  v2._object = (void *)0x80000001D5AC66C0;
  v3._object = (void *)0x80000001D5AC6860;
  v3._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 165;
  uint64_t v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725880);
  uint64_t v8 = sub_1D59A3114(&qword_1EA725888, &qword_1EA725880);
  unint64_t v9 = sub_1D59A2FCC();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t RecommendationClient.makePersonalizationInferenceRequest(options:)(uint64_t a1)
{
  if (qword_1EBDE3108 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE1660);
  v4._uint64_t countAndFlagsBits = 0xD000000000000075;
  v4._object = (void *)0x80000001D5AC66C0;
  v5._object = (void *)0x80000001D5AC6890;
  v5._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v12 = 160;
  uint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, void, void, void, void, uint64_t, uint64_t))(v6 + 32);
  uint64_t v9 = sub_1D5AB44E0();
  uint64_t v10 = sub_1D5AB42F0();
  return v8(&v12, a1, v9, v10, MEMORY[0x1E4F9EC38], MEMORY[0x1E4F9EC40], MEMORY[0x1E4F9E980], MEMORY[0x1E4F9E988], ObjectType, v6);
}

uint64_t RecommendationClient.queryAllRecommendations()()
{
  if (qword_1EBDE3B48 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE38C8);
  v2._uint64_t countAndFlagsBits = 0xD000000000000075;
  v2._object = (void *)0x80000001D5AC66C0;
  v3._object = (void *)0x80000001D5AC68C0;
  v3._uint64_t countAndFlagsBits = 0xD000000000000019;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 155;
  uint64_t v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7258A0);
  uint64_t v8 = sub_1D59A3114(&qword_1EA7258A8, &qword_1EA7258A0);
  unint64_t v9 = sub_1D59A3070();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t RecommendationClient.queryAllOnboardingSurveyResults()()
{
  if (qword_1EBDE3B48 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE38C8);
  v2._uint64_t countAndFlagsBits = 0xD000000000000075;
  v2._object = (void *)0x80000001D5AC66C0;
  v3._object = (void *)0x80000001D5AC68E0;
  v3._uint64_t countAndFlagsBits = 0xD000000000000021;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 166;
  uint64_t v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7258C0);
  uint64_t v8 = sub_1D59A3114(&qword_1EA7258C8, &qword_1EA7258C0);
  unint64_t v9 = sub_1D59A3184();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t RecommendationClient.queryOnboardingSurveyResult()()
{
  if (qword_1EBDE3B48 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE38C8);
  v2._uint64_t countAndFlagsBits = 0xD000000000000075;
  v2._object = (void *)0x80000001D5AC66C0;
  v3._object = (void *)0x80000001D5AC6910;
  v3._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v9 = 161;
  uint64_t v6 = *(uint64_t (**)(__int16 *, uint64_t, void, void, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = sub_1D5AB3750();
  return v6(&v9, v7, MEMORY[0x1E4F9DB70], MEMORY[0x1E4F9DB78], ObjectType, v4);
}

uint64_t RecommendationClient.queryRecommendations(for:)(char a1)
{
  if (qword_1EBDE3B48 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE38C8);
  v4._uint64_t countAndFlagsBits = 0xD000000000000075;
  v4._object = (void *)0x80000001D5AC66C0;
  v5._object = (void *)0x80000001D5AC6930;
  v5._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v14 = 156;
  char v13 = a1;
  uint64_t v8 = *(uint64_t (**)(__int16 *, char *, void, uint64_t, void, void, uint64_t, unint64_t, uint64_t, uint64_t))(v6 + 32);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7258A0);
  uint64_t v10 = sub_1D59A3114(&qword_1EA7258A8, &qword_1EA7258A0);
  unint64_t v11 = sub_1D59A3070();
  return v8(&v14, &v13, MEMORY[0x1E4F9DED0], v9, MEMORY[0x1E4F9DEC0], MEMORY[0x1E4F9DEC8], v10, v11, ObjectType, v6);
}

uint64_t RecommendationClient.queryRelatedWorkouts(_:)(uint64_t a1, uint64_t a2)
{
  if (qword_1EBDE3B48 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1D5AB4B50();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EBDE38C8);
  v6._uint64_t countAndFlagsBits = 0xD000000000000075;
  v6._object = (void *)0x80000001D5AC66C0;
  v7._object = (void *)0x80000001D5AC6950;
  v7._uint64_t countAndFlagsBits = 0xD000000000000018;
  Logger.trace(file:function:)(v6, v7);
  uint64_t v8 = *(void *)(v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v16 = 157;
  v15[0] = a1;
  v15[1] = a2;
  uint64_t v10 = *(uint64_t (**)(__int16 *, void *, void, uint64_t, void, void, uint64_t, unint64_t, uint64_t, uint64_t))(v8 + 32);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7258E0);
  uint64_t v12 = sub_1D597B6AC(&qword_1EA7258E8, &qword_1EA7258E0);
  unint64_t v13 = sub_1D59A3228();
  return v10(&v16, v15, MEMORY[0x1E4FBB1A0], v11, MEMORY[0x1E4F9F0B8], MEMORY[0x1E4F9F0C0], v12, v13, ObjectType, v8);
}

uint64_t RecommendationClient.updateOnboardingSurveyResult(_:)(uint64_t a1)
{
  if (qword_1EBDE3B48 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE38C8);
  v4._uint64_t countAndFlagsBits = 0xD000000000000075;
  v4._object = (void *)0x80000001D5AC66C0;
  v5._object = (void *)0x80000001D5AC6970;
  v5._uint64_t countAndFlagsBits = 0xD000000000000020;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 162;
  uint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, void, void, uint64_t, uint64_t))(v6 + 16);
  uint64_t v9 = sub_1D5AB3750();
  return v8(&v11, a1, v9, MEMORY[0x1E4F9DB70], MEMORY[0x1E4F9DB78], ObjectType, v6);
}

uint64_t sub_1D59A2980()
{
  return RecommendationClient.deduplicateOnboardingSurveyResults()();
}

uint64_t sub_1D59A29A4()
{
  return RecommendationClient.deleteAllOnboardingSurveyResults()();
}

uint64_t sub_1D59A29C8()
{
  return RecommendationClient.evaluateAllRecommendations()();
}

uint64_t sub_1D59A29EC()
{
  return RecommendationClient.evaluateRecommendedGuidedAudioWorkouts()();
}

uint64_t sub_1D59A2A10()
{
  return RecommendationClient.fetchRemoteForYouCanvas()();
}

uint64_t sub_1D59A2A34()
{
  return RecommendationClient.fetchOnboardingDetail()();
}

uint64_t sub_1D59A2A58(uint64_t a1)
{
  return RecommendationClient.fetchPersonalizationInferenceResponse(options:)(a1);
}

uint64_t sub_1D59A2A7C()
{
  return RecommendationClient.fetchPersonalizationAwardProgressReferences()();
}

uint64_t sub_1D59A2AA0(uint64_t a1)
{
  return RecommendationClient.makePersonalizationInferenceRequest(options:)(a1);
}

uint64_t sub_1D59A2AC4()
{
  return RecommendationClient.queryAllRecommendations()();
}

uint64_t sub_1D59A2AE8()
{
  return RecommendationClient.queryAllOnboardingSurveyResults()();
}

uint64_t sub_1D59A2B0C()
{
  return RecommendationClient.queryOnboardingSurveyResult()();
}

uint64_t sub_1D59A2B30(char a1)
{
  return RecommendationClient.queryRecommendations(for:)(a1);
}

uint64_t sub_1D59A2B54(uint64_t a1, uint64_t a2)
{
  return RecommendationClient.queryRelatedWorkouts(_:)(a1, a2);
}

uint64_t sub_1D59A2B78(uint64_t a1)
{
  return RecommendationClient.updateOnboardingSurveyResult(_:)(a1);
}

uint64_t type metadata accessor for RecommendationClient()
{
  return self;
}

void *sub_1D59A2BC0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[2] = a1;
  a4[3] = &protocol witness table for XPCClient;
  a4[4] = &protocol witness table for XPCClient;
  a4[5] = a2;
  a4[6] = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = a1;
  char v10 = 15;
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v10, (uint64_t)sub_1D59A3378, v7, ObjectType, (uint64_t)&protocol witness table for XPCClient);
  swift_release_n();
  uint64_t v11 = a1;
  char v10 = 16;
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v10, (uint64_t)sub_1D59A33A4, v8, ObjectType, (uint64_t)&protocol witness table for XPCClient);
  swift_release_n();
  swift_unknownObjectRelease();
  return a4;
}

void *sub_1D59A2D28(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  a4[2] = a1;
  a4[3] = a6;
  a4[4] = a7;
  a4[5] = a2;
  a4[6] = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v15 = a1;
  char v14 = 15;
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v14, (uint64_t)sub_1D59A3378, v11, ObjectType, a7);
  swift_release_n();
  uint64_t v15 = a1;
  char v14 = 16;
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v14, (uint64_t)sub_1D59A33A4, v12, ObjectType, a7);
  swift_release_n();
  swift_unknownObjectRelease();
  return a4;
}

void *sub_1D59A2E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  type metadata accessor for RecommendationClient();
  unint64_t v13 = (void *)swift_allocObject();
  return sub_1D59A2D28(a1, a2, a3, v13, a5, a6, a7);
}

unint64_t sub_1D59A2F04()
{
  unint64_t result = qword_1EBDE3C48;
  if (!qword_1EBDE3C48)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE4C28);
    sub_1D59A2F78();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE3C48);
  }
  return result;
}

unint64_t sub_1D59A2F78()
{
  unint64_t result = qword_1EBDE4E28;
  if (!qword_1EBDE4E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE4E28);
  }
  return result;
}

unint64_t sub_1D59A2FCC()
{
  unint64_t result = qword_1EA725890;
  if (!qword_1EA725890)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA725880);
    sub_1D59A32CC(&qword_1EA725898, MEMORY[0x1E4F9EC18]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725890);
  }
  return result;
}

unint64_t sub_1D59A3070()
{
  unint64_t result = qword_1EA7258B0;
  if (!qword_1EA7258B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA7258A0);
    sub_1D59A32CC(&qword_1EA7258B8, MEMORY[0x1E4F9C7D0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7258B0);
  }
  return result;
}

uint64_t sub_1D59A3114(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D59A3184()
{
  unint64_t result = qword_1EA7258D0;
  if (!qword_1EA7258D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA7258C0);
    sub_1D59A32CC(&qword_1EA7258D8, MEMORY[0x1E4F9DB88]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7258D0);
  }
  return result;
}

unint64_t sub_1D59A3228()
{
  unint64_t result = qword_1EA7258F0;
  if (!qword_1EA7258F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA7258E0);
    sub_1D59A32CC(&qword_1EA7258F8, MEMORY[0x1E4F9E0D0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7258F0);
  }
  return result;
}

uint64_t sub_1D59A32CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for RecommendationClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RecommendationClient);
}

uint64_t dispatch thunk of RecommendationClient.__allocating_init(connection:eventHub:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1D59A3340()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D59A3378()
{
  return sub_1D59A1854(v0, (uint64_t)&type metadata for RecommendationsUpdated, (uint64_t)&protocol witness table for RecommendationsUpdated);
}

uint64_t sub_1D59A33A4()
{
  return sub_1D59A1854(v0, (uint64_t)&type metadata for OnboardingSurveyResultsUpdated, (uint64_t)&protocol witness table for OnboardingSurveyResultsUpdated);
}

uint64_t RemoteBrowsingJournalEntry.property.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for RemoteBrowsingJournalEntry();
  MEMORY[0x1F4188790](v3 - 8);
  Swift::String v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D59A34A4(v1, (uint64_t)v5);
  return sub_1D59A3508((uint64_t)v5, a1);
}

uint64_t type metadata accessor for RemoteBrowsingJournalEntry()
{
  uint64_t result = qword_1EBDE3080;
  if (!qword_1EBDE3080) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D59A34A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RemoteBrowsingJournalEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D59A3508(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RemoteBrowsingJournalProperty();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t RemoteBrowsingJournalEntry.hash(into:)(long long *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for RemoteBrowsingJournalProperty();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for RemoteBrowsingJournalEntry();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D59A34A4(v2, (uint64_t)v9);
  swift_getEnumCaseMultiPayload();
  sub_1D59A3508((uint64_t)v9, (uint64_t)v6);
  sub_1D5AB5C30();
  RemoteBrowsingJournalProperty.hash(into:)(a1);
  return sub_1D59A6768((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for RemoteBrowsingJournalProperty);
}

uint64_t RemoteBrowsingJournalEntry.hashValue.getter()
{
  sub_1D5AB5C20();
  RemoteBrowsingJournalEntry.hash(into:)(v1);
  return sub_1D5AB5C60();
}

uint64_t sub_1D59A36D0()
{
  sub_1D5AB5C20();
  RemoteBrowsingJournalEntry.hash(into:)(v1);
  return sub_1D5AB5C60();
}

uint64_t sub_1D59A3714()
{
  sub_1D5AB5C20();
  RemoteBrowsingJournalEntry.hash(into:)(v1);
  return sub_1D5AB5C60();
}

uint64_t _s13SeymourClient26RemoteBrowsingJournalEntryO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RemoteBrowsingJournalProperty();
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v32 = (uint64_t)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v31 - v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t v12 = type metadata accessor for RemoteBrowsingJournalEntry();
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v31 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v31 - v19;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725908);
  uint64_t v22 = MEMORY[0x1F4188790](v21 - 8);
  uint64_t v24 = (char *)&v31 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = (uint64_t)&v24[*(int *)(v22 + 56)];
  sub_1D59A34A4(a1, (uint64_t)v24);
  sub_1D59A34A4(a2, v25);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1D59A34A4((uint64_t)v24, (uint64_t)v18);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1D59A3508(v25, (uint64_t)v9);
        char v27 = _s13SeymourClient29RemoteBrowsingJournalPropertyO2eeoiySbAC_ACtFZ_0((uint64_t)v18, (uint64_t)v9);
        sub_1D59A6768((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for RemoteBrowsingJournalProperty);
        uint64_t v28 = (uint64_t)v18;
LABEL_12:
        sub_1D59A6768(v28, (uint64_t (*)(void))type metadata accessor for RemoteBrowsingJournalProperty);
        sub_1D59A6768((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for RemoteBrowsingJournalEntry);
        return v27 & 1;
      }
      uint64_t v15 = v18;
    }
    else
    {
      sub_1D59A34A4((uint64_t)v24, (uint64_t)v15);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v29 = v32;
        sub_1D59A3508(v25, v32);
        char v27 = _s13SeymourClient29RemoteBrowsingJournalPropertyO2eeoiySbAC_ACtFZ_0((uint64_t)v15, v29);
        sub_1D59A6768(v29, (uint64_t (*)(void))type metadata accessor for RemoteBrowsingJournalProperty);
        uint64_t v28 = (uint64_t)v15;
        goto LABEL_12;
      }
    }
  }
  else
  {
    sub_1D59A34A4((uint64_t)v24, (uint64_t)v20);
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_1D59A3508(v25, (uint64_t)v11);
      char v27 = _s13SeymourClient29RemoteBrowsingJournalPropertyO2eeoiySbAC_ACtFZ_0((uint64_t)v20, (uint64_t)v11);
      sub_1D59A6768((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for RemoteBrowsingJournalProperty);
      uint64_t v28 = (uint64_t)v20;
      goto LABEL_12;
    }
    uint64_t v15 = v20;
  }
  sub_1D59A6768((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for RemoteBrowsingJournalProperty);
  sub_1D59A7948((uint64_t)v24);
  char v27 = 0;
  return v27 & 1;
}

unint64_t sub_1D59A3AC4()
{
  unint64_t result = qword_1EA725900;
  if (!qword_1EA725900)
  {
    type metadata accessor for RemoteBrowsingJournalEntry();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725900);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for RemoteBrowsingJournalEntry(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v10 = type metadata accessor for RemoteBrowsingJournalProperty();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v11 = sub_1D5AB2490();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
          goto LABEL_55;
        case 1u:
          uint64_t v33 = sub_1D5AB2BE0();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v33 - 8) + 16))(a1, a2, v33);
          goto LABEL_55;
        case 3u:
        case 5u:
        case 6u:
        case 7u:
        case 0xFu:
        case 0x19u:
          *a1 = *a2;
          swift_bridgeObjectRetain();
          goto LABEL_55;
        case 4u:
          uint64_t v34 = sub_1D5AB3AA0();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v34 - 8) + 16))(a1, a2, v34);
          goto LABEL_55;
        case 8u:
          uint64_t v35 = sub_1D5AB3B00();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v35 - 8) + 16))(a1, a2, v35);
          goto LABEL_55;
        case 9u:
          uint64_t v36 = sub_1D5AB35D0();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v36 - 8) + 16))(a1, a2, v36);
          goto LABEL_55;
        case 0xAu:
          uint64_t v37 = sub_1D5AB39B0();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v37 - 8) + 16))(a1, a2, v37);
          goto LABEL_55;
        case 0xBu:
          uint64_t v38 = sub_1D5AB3750();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v38 - 8) + 16))(a1, a2, v38);
          goto LABEL_55;
        case 0xCu:
          uint64_t v39 = sub_1D5AB3770();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v39 - 8) + 16))(a1, a2, v39);
          goto LABEL_55;
        case 0xDu:
          uint64_t v40 = sub_1D5AB4350();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v40 - 8) + 16))(a1, a2, v40);
          goto LABEL_55;
        case 0xEu:
          uint64_t v41 = sub_1D5AB49D0();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v41 - 8) + 16))(a1, a2, v41);
          goto LABEL_55;
        case 0x10u:
          uint64_t v42 = sub_1D5AB3BF0();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v42 - 8) + 16))(a1, a2, v42);
          goto LABEL_55;
        case 0x11u:
          uint64_t v43 = sub_1D5AB2FF0();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v43 - 8) + 16))(a1, a2, v43);
          goto LABEL_55;
        case 0x12u:
          uint64_t v44 = sub_1D5AB3010();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v44 - 8) + 16))(a1, a2, v44);
          goto LABEL_55;
        case 0x13u:
          uint64_t v45 = sub_1D5AB34D0();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v45 - 8) + 16))(a1, a2, v45);
          goto LABEL_55;
        case 0x14u:
          uint64_t v46 = a2[1];
          *a1 = *a2;
          a1[1] = v46;
          swift_bridgeObjectRetain();
          goto LABEL_55;
        case 0x15u:
          uint64_t v47 = sub_1D5AB2E90();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v47 - 8) + 16))(a1, a2, v47);
          goto LABEL_55;
        case 0x16u:
          uint64_t v48 = sub_1D5AB2210();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v48 - 8) + 16))(a1, a2, v48);
          goto LABEL_55;
        case 0x17u:
          uint64_t v49 = sub_1D5AB3B90();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v49 - 8) + 16))(a1, a2, v49);
          goto LABEL_55;
        case 0x18u:
          uint64_t v50 = sub_1D5AB4050();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v50 - 8) + 16))(a1, a2, v50);
          goto LABEL_55;
        case 0x1Au:
          uint64_t v51 = sub_1D5AB3F80();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v51 - 8) + 16))(a1, a2, v51);
LABEL_55:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
          break;
      }
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = type metadata accessor for RemoteBrowsingJournalProperty();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v8 = sub_1D5AB2490();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
          goto LABEL_32;
        case 1u:
          uint64_t v14 = sub_1D5AB2BE0();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
          goto LABEL_32;
        case 3u:
        case 5u:
        case 6u:
        case 7u:
        case 0xFu:
        case 0x19u:
          *a1 = *a2;
          swift_bridgeObjectRetain();
          goto LABEL_32;
        case 4u:
          uint64_t v15 = sub_1D5AB3AA0();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
          goto LABEL_32;
        case 8u:
          uint64_t v16 = sub_1D5AB3B00();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
          goto LABEL_32;
        case 9u:
          uint64_t v17 = sub_1D5AB35D0();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
          goto LABEL_32;
        case 0xAu:
          uint64_t v18 = sub_1D5AB39B0();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
          goto LABEL_32;
        case 0xBu:
          uint64_t v19 = sub_1D5AB3750();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
          goto LABEL_32;
        case 0xCu:
          uint64_t v20 = sub_1D5AB3770();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
          goto LABEL_32;
        case 0xDu:
          uint64_t v21 = sub_1D5AB4350();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
          goto LABEL_32;
        case 0xEu:
          uint64_t v22 = sub_1D5AB49D0();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
          goto LABEL_32;
        case 0x10u:
          uint64_t v23 = sub_1D5AB3BF0();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
          goto LABEL_32;
        case 0x11u:
          uint64_t v24 = sub_1D5AB2FF0();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
          goto LABEL_32;
        case 0x12u:
          uint64_t v25 = sub_1D5AB3010();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
          goto LABEL_32;
        case 0x13u:
          uint64_t v26 = sub_1D5AB34D0();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v26 - 8) + 16))(a1, a2, v26);
          goto LABEL_32;
        case 0x14u:
          uint64_t v27 = a2[1];
          *a1 = *a2;
          a1[1] = v27;
          swift_bridgeObjectRetain();
          goto LABEL_32;
        case 0x15u:
          uint64_t v28 = sub_1D5AB2E90();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v28 - 8) + 16))(a1, a2, v28);
          goto LABEL_32;
        case 0x16u:
          uint64_t v29 = sub_1D5AB2210();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v29 - 8) + 16))(a1, a2, v29);
          goto LABEL_32;
        case 0x17u:
          uint64_t v30 = sub_1D5AB3B90();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v30 - 8) + 16))(a1, a2, v30);
          goto LABEL_32;
        case 0x18u:
          uint64_t v31 = sub_1D5AB4050();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v31 - 8) + 16))(a1, a2, v31);
          goto LABEL_32;
        case 0x1Au:
          uint64_t v32 = sub_1D5AB3F80();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v32 - 8) + 16))(a1, a2, v32);
LABEL_32:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
          break;
      }
    }
    else
    {
      uint64_t v12 = type metadata accessor for RemoteBrowsingJournalProperty();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v13 = sub_1D5AB2490();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
          goto LABEL_78;
        case 1u:
          uint64_t v52 = sub_1D5AB2BE0();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v52 - 8) + 16))(a1, a2, v52);
          goto LABEL_78;
        case 3u:
        case 5u:
        case 6u:
        case 7u:
        case 0xFu:
        case 0x19u:
          *a1 = *a2;
          swift_bridgeObjectRetain();
          goto LABEL_78;
        case 4u:
          uint64_t v53 = sub_1D5AB3AA0();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v53 - 8) + 16))(a1, a2, v53);
          goto LABEL_78;
        case 8u:
          uint64_t v54 = sub_1D5AB3B00();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v54 - 8) + 16))(a1, a2, v54);
          goto LABEL_78;
        case 9u:
          uint64_t v55 = sub_1D5AB35D0();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v55 - 8) + 16))(a1, a2, v55);
          goto LABEL_78;
        case 0xAu:
          uint64_t v56 = sub_1D5AB39B0();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v56 - 8) + 16))(a1, a2, v56);
          goto LABEL_78;
        case 0xBu:
          uint64_t v57 = sub_1D5AB3750();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v57 - 8) + 16))(a1, a2, v57);
          goto LABEL_78;
        case 0xCu:
          uint64_t v58 = sub_1D5AB3770();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v58 - 8) + 16))(a1, a2, v58);
          goto LABEL_78;
        case 0xDu:
          uint64_t v59 = sub_1D5AB4350();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v59 - 8) + 16))(a1, a2, v59);
          goto LABEL_78;
        case 0xEu:
          uint64_t v60 = sub_1D5AB49D0();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v60 - 8) + 16))(a1, a2, v60);
          goto LABEL_78;
        case 0x10u:
          uint64_t v61 = sub_1D5AB3BF0();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v61 - 8) + 16))(a1, a2, v61);
          goto LABEL_78;
        case 0x11u:
          uint64_t v62 = sub_1D5AB2FF0();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v62 - 8) + 16))(a1, a2, v62);
          goto LABEL_78;
        case 0x12u:
          uint64_t v63 = sub_1D5AB3010();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v63 - 8) + 16))(a1, a2, v63);
          goto LABEL_78;
        case 0x13u:
          uint64_t v64 = sub_1D5AB34D0();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v64 - 8) + 16))(a1, a2, v64);
          goto LABEL_78;
        case 0x14u:
          uint64_t v65 = a2[1];
          *a1 = *a2;
          a1[1] = v65;
          swift_bridgeObjectRetain();
          goto LABEL_78;
        case 0x15u:
          uint64_t v66 = sub_1D5AB2E90();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v66 - 8) + 16))(a1, a2, v66);
          goto LABEL_78;
        case 0x16u:
          uint64_t v67 = sub_1D5AB2210();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v67 - 8) + 16))(a1, a2, v67);
          goto LABEL_78;
        case 0x17u:
          uint64_t v68 = sub_1D5AB3B90();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v68 - 8) + 16))(a1, a2, v68);
          goto LABEL_78;
        case 0x18u:
          uint64_t v69 = sub_1D5AB4050();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v69 - 8) + 16))(a1, a2, v69);
          goto LABEL_78;
        case 0x1Au:
          uint64_t v70 = sub_1D5AB3F80();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v70 - 8) + 16))(a1, a2, v70);
LABEL_78:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for RemoteBrowsingJournalEntry(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch(result)
  {
    case 2:
      type metadata accessor for RemoteBrowsingJournalProperty();
      uint64_t result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
LABEL_11:
          uint64_t v3 = sub_1D5AB2490();
          goto LABEL_30;
        case 1:
LABEL_12:
          uint64_t v3 = sub_1D5AB2BE0();
          goto LABEL_30;
        case 3:
        case 5:
        case 6:
        case 7:
        case 15:
        case 20:
        case 25:
LABEL_7:
          return swift_bridgeObjectRelease();
        case 4:
LABEL_13:
          uint64_t v3 = sub_1D5AB3AA0();
          goto LABEL_30;
        case 8:
LABEL_14:
          uint64_t v3 = sub_1D5AB3B00();
          goto LABEL_30;
        case 9:
LABEL_15:
          uint64_t v3 = sub_1D5AB35D0();
          goto LABEL_30;
        case 10:
LABEL_16:
          uint64_t v3 = sub_1D5AB39B0();
          goto LABEL_30;
        case 11:
LABEL_17:
          uint64_t v3 = sub_1D5AB3750();
          goto LABEL_30;
        case 12:
LABEL_18:
          uint64_t v3 = sub_1D5AB3770();
          goto LABEL_30;
        case 13:
LABEL_19:
          uint64_t v3 = sub_1D5AB4350();
          goto LABEL_30;
        case 14:
LABEL_20:
          uint64_t v3 = sub_1D5AB49D0();
          goto LABEL_30;
        case 16:
LABEL_21:
          uint64_t v3 = sub_1D5AB3BF0();
          goto LABEL_30;
        case 17:
LABEL_22:
          uint64_t v3 = sub_1D5AB2FF0();
          goto LABEL_30;
        case 18:
LABEL_23:
          uint64_t v3 = sub_1D5AB3010();
          goto LABEL_30;
        case 19:
LABEL_24:
          uint64_t v3 = sub_1D5AB34D0();
          goto LABEL_30;
        case 21:
LABEL_25:
          uint64_t v3 = sub_1D5AB2E90();
          goto LABEL_30;
        case 22:
LABEL_26:
          uint64_t v3 = sub_1D5AB2210();
          goto LABEL_30;
        case 23:
LABEL_27:
          uint64_t v3 = sub_1D5AB3B90();
          goto LABEL_30;
        case 24:
LABEL_28:
          uint64_t v3 = sub_1D5AB4050();
          goto LABEL_30;
        case 26:
LABEL_29:
          uint64_t v3 = sub_1D5AB3F80();
LABEL_30:
          uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
          uint64_t result = v4(a1, v3);
          break;
        default:
          return result;
      }
      break;
    case 1:
      type metadata accessor for RemoteBrowsingJournalProperty();
      uint64_t result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
          goto LABEL_11;
        case 1:
          goto LABEL_12;
        case 3:
        case 5:
        case 6:
        case 7:
        case 15:
        case 20:
        case 25:
          goto LABEL_7;
        case 4:
          goto LABEL_13;
        case 8:
          goto LABEL_14;
        case 9:
          goto LABEL_15;
        case 10:
          goto LABEL_16;
        case 11:
          goto LABEL_17;
        case 12:
          goto LABEL_18;
        case 13:
          goto LABEL_19;
        case 14:
          goto LABEL_20;
        case 16:
          goto LABEL_21;
        case 17:
          goto LABEL_22;
        case 18:
          goto LABEL_23;
        case 19:
          goto LABEL_24;
        case 21:
          goto LABEL_25;
        case 22:
          goto LABEL_26;
        case 23:
          goto LABEL_27;
        case 24:
          goto LABEL_28;
        case 26:
          goto LABEL_29;
        default:
          return result;
      }
    case 0:
      type metadata accessor for RemoteBrowsingJournalProperty();
      uint64_t result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
          goto LABEL_11;
        case 1:
          goto LABEL_12;
        case 3:
        case 5:
        case 6:
        case 7:
        case 15:
        case 20:
        case 25:
          goto LABEL_7;
        case 4:
          goto LABEL_13;
        case 8:
          goto LABEL_14;
        case 9:
          goto LABEL_15;
        case 10:
          goto LABEL_16;
        case 11:
          goto LABEL_17;
        case 12:
          goto LABEL_18;
        case 13:
          goto LABEL_19;
        case 14:
          goto LABEL_20;
        case 16:
          goto LABEL_21;
        case 17:
          goto LABEL_22;
        case 18:
          goto LABEL_23;
        case 19:
          goto LABEL_24;
        case 21:
          goto LABEL_25;
        case 22:
          goto LABEL_26;
        case 23:
          goto LABEL_27;
        case 24:
          goto LABEL_28;
        case 26:
          goto LABEL_29;
        default:
          return result;
      }
  }
  return result;
}

void *initializeWithCopy for RemoteBrowsingJournalEntry(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 2)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = type metadata accessor for RemoteBrowsingJournalProperty();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          goto LABEL_6;
        case 1u:
          goto LABEL_7;
        case 3u:
        case 5u:
        case 6u:
        case 7u:
        case 0xFu:
        case 0x19u:
          goto LABEL_10;
        case 4u:
          goto LABEL_9;
        case 8u:
          goto LABEL_11;
        case 9u:
          goto LABEL_12;
        case 0xAu:
          goto LABEL_13;
        case 0xBu:
          goto LABEL_14;
        case 0xCu:
          goto LABEL_15;
        case 0xDu:
          goto LABEL_16;
        case 0xEu:
          goto LABEL_17;
        case 0x10u:
          goto LABEL_18;
        case 0x11u:
          goto LABEL_19;
        case 0x12u:
          goto LABEL_20;
        case 0x13u:
          goto LABEL_21;
        case 0x14u:
          goto LABEL_22;
        case 0x15u:
          goto LABEL_23;
        case 0x16u:
          goto LABEL_24;
        case 0x17u:
          goto LABEL_25;
        case 0x18u:
          goto LABEL_26;
        case 0x1Au:
          goto LABEL_27;
        default:
          goto LABEL_8;
      }
    }
    uint64_t v5 = type metadata accessor for RemoteBrowsingJournalProperty();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        goto LABEL_6;
      case 1u:
        goto LABEL_7;
      case 3u:
      case 5u:
      case 6u:
      case 7u:
      case 0xFu:
      case 0x19u:
        goto LABEL_10;
      case 4u:
        goto LABEL_9;
      case 8u:
        goto LABEL_11;
      case 9u:
        goto LABEL_12;
      case 0xAu:
        goto LABEL_13;
      case 0xBu:
        goto LABEL_14;
      case 0xCu:
        goto LABEL_15;
      case 0xDu:
        goto LABEL_16;
      case 0xEu:
        goto LABEL_17;
      case 0x10u:
        goto LABEL_18;
      case 0x11u:
        goto LABEL_19;
      case 0x12u:
        goto LABEL_20;
      case 0x13u:
        goto LABEL_21;
      case 0x14u:
        goto LABEL_22;
      case 0x15u:
        goto LABEL_23;
      case 0x16u:
        goto LABEL_24;
      case 0x17u:
        goto LABEL_25;
      case 0x18u:
        goto LABEL_26;
      case 0x1Au:
        goto LABEL_27;
      default:
        goto LABEL_8;
    }
  }
  uint64_t v5 = type metadata accessor for RemoteBrowsingJournalProperty();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
LABEL_6:
      uint64_t v6 = sub_1D5AB2490();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_28;
    case 1u:
LABEL_7:
      uint64_t v7 = sub_1D5AB2BE0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      goto LABEL_28;
    case 3u:
    case 5u:
    case 6u:
    case 7u:
    case 0xFu:
    case 0x19u:
LABEL_10:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      goto LABEL_28;
    case 4u:
LABEL_9:
      uint64_t v8 = sub_1D5AB3AA0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      goto LABEL_28;
    case 8u:
LABEL_11:
      uint64_t v9 = sub_1D5AB3B00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      goto LABEL_28;
    case 9u:
LABEL_12:
      uint64_t v10 = sub_1D5AB35D0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      goto LABEL_28;
    case 0xAu:
LABEL_13:
      uint64_t v11 = sub_1D5AB39B0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      goto LABEL_28;
    case 0xBu:
LABEL_14:
      uint64_t v12 = sub_1D5AB3750();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
      goto LABEL_28;
    case 0xCu:
LABEL_15:
      uint64_t v13 = sub_1D5AB3770();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
      goto LABEL_28;
    case 0xDu:
LABEL_16:
      uint64_t v14 = sub_1D5AB4350();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
      goto LABEL_28;
    case 0xEu:
LABEL_17:
      uint64_t v15 = sub_1D5AB49D0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
      goto LABEL_28;
    case 0x10u:
LABEL_18:
      uint64_t v16 = sub_1D5AB3BF0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
      goto LABEL_28;
    case 0x11u:
LABEL_19:
      uint64_t v17 = sub_1D5AB2FF0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
      goto LABEL_28;
    case 0x12u:
LABEL_20:
      uint64_t v18 = sub_1D5AB3010();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
      goto LABEL_28;
    case 0x13u:
LABEL_21:
      uint64_t v19 = sub_1D5AB34D0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
      goto LABEL_28;
    case 0x14u:
LABEL_22:
      uint64_t v20 = a2[1];
      *a1 = *a2;
      a1[1] = v20;
      swift_bridgeObjectRetain();
      goto LABEL_28;
    case 0x15u:
LABEL_23:
      uint64_t v21 = sub_1D5AB2E90();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
      goto LABEL_28;
    case 0x16u:
LABEL_24:
      uint64_t v22 = sub_1D5AB2210();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
      goto LABEL_28;
    case 0x17u:
LABEL_25:
      uint64_t v23 = sub_1D5AB3B90();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
      goto LABEL_28;
    case 0x18u:
LABEL_26:
      uint64_t v24 = sub_1D5AB4050();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
      goto LABEL_28;
    case 0x1Au:
LABEL_27:
      uint64_t v25 = sub_1D5AB3F80();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
LABEL_28:
      swift_storeEnumTagMultiPayload();
      break;
    default:
LABEL_8:
      memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for RemoteBrowsingJournalEntry(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1D59A6768((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for RemoteBrowsingJournalEntry);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 2)
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v5 = type metadata accessor for RemoteBrowsingJournalProperty();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            goto LABEL_7;
          case 1u:
            goto LABEL_8;
          case 3u:
          case 5u:
          case 6u:
          case 7u:
          case 0xFu:
          case 0x19u:
            goto LABEL_11;
          case 4u:
            goto LABEL_10;
          case 8u:
            goto LABEL_12;
          case 9u:
            goto LABEL_13;
          case 0xAu:
            goto LABEL_14;
          case 0xBu:
            goto LABEL_15;
          case 0xCu:
            goto LABEL_16;
          case 0xDu:
            goto LABEL_17;
          case 0xEu:
            goto LABEL_18;
          case 0x10u:
            goto LABEL_19;
          case 0x11u:
            goto LABEL_20;
          case 0x12u:
            goto LABEL_21;
          case 0x13u:
            goto LABEL_22;
          case 0x14u:
            goto LABEL_23;
          case 0x15u:
            goto LABEL_24;
          case 0x16u:
            goto LABEL_25;
          case 0x17u:
            goto LABEL_26;
          case 0x18u:
            goto LABEL_27;
          case 0x1Au:
            goto LABEL_28;
          default:
            goto LABEL_9;
        }
      }
      uint64_t v5 = type metadata accessor for RemoteBrowsingJournalProperty();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          goto LABEL_7;
        case 1u:
          goto LABEL_8;
        case 3u:
        case 5u:
        case 6u:
        case 7u:
        case 0xFu:
        case 0x19u:
          goto LABEL_11;
        case 4u:
          goto LABEL_10;
        case 8u:
          goto LABEL_12;
        case 9u:
          goto LABEL_13;
        case 0xAu:
          goto LABEL_14;
        case 0xBu:
          goto LABEL_15;
        case 0xCu:
          goto LABEL_16;
        case 0xDu:
          goto LABEL_17;
        case 0xEu:
          goto LABEL_18;
        case 0x10u:
          goto LABEL_19;
        case 0x11u:
          goto LABEL_20;
        case 0x12u:
          goto LABEL_21;
        case 0x13u:
          goto LABEL_22;
        case 0x14u:
          goto LABEL_23;
        case 0x15u:
          goto LABEL_24;
        case 0x16u:
          goto LABEL_25;
        case 0x17u:
          goto LABEL_26;
        case 0x18u:
          goto LABEL_27;
        case 0x1Au:
          goto LABEL_28;
        default:
          goto LABEL_9;
      }
    }
    uint64_t v5 = type metadata accessor for RemoteBrowsingJournalProperty();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
LABEL_7:
        uint64_t v6 = sub_1D5AB2490();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_29;
      case 1u:
LABEL_8:
        uint64_t v7 = sub_1D5AB2BE0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        goto LABEL_29;
      case 3u:
      case 5u:
      case 6u:
      case 7u:
      case 0xFu:
      case 0x19u:
LABEL_11:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        goto LABEL_29;
      case 4u:
LABEL_10:
        uint64_t v8 = sub_1D5AB3AA0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        goto LABEL_29;
      case 8u:
LABEL_12:
        uint64_t v9 = sub_1D5AB3B00();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        goto LABEL_29;
      case 9u:
LABEL_13:
        uint64_t v10 = sub_1D5AB35D0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        goto LABEL_29;
      case 0xAu:
LABEL_14:
        uint64_t v11 = sub_1D5AB39B0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        goto LABEL_29;
      case 0xBu:
LABEL_15:
        uint64_t v12 = sub_1D5AB3750();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
        goto LABEL_29;
      case 0xCu:
LABEL_16:
        uint64_t v13 = sub_1D5AB3770();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        goto LABEL_29;
      case 0xDu:
LABEL_17:
        uint64_t v14 = sub_1D5AB4350();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
        goto LABEL_29;
      case 0xEu:
LABEL_18:
        uint64_t v15 = sub_1D5AB49D0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
        goto LABEL_29;
      case 0x10u:
LABEL_19:
        uint64_t v16 = sub_1D5AB3BF0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
        goto LABEL_29;
      case 0x11u:
LABEL_20:
        uint64_t v17 = sub_1D5AB2FF0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
        goto LABEL_29;
      case 0x12u:
LABEL_21:
        uint64_t v18 = sub_1D5AB3010();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
        goto LABEL_29;
      case 0x13u:
LABEL_22:
        uint64_t v19 = sub_1D5AB34D0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
        goto LABEL_29;
      case 0x14u:
LABEL_23:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_29;
      case 0x15u:
LABEL_24:
        uint64_t v20 = sub_1D5AB2E90();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
        goto LABEL_29;
      case 0x16u:
LABEL_25:
        uint64_t v21 = sub_1D5AB2210();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
        goto LABEL_29;
      case 0x17u:
LABEL_26:
        uint64_t v22 = sub_1D5AB3B90();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
        goto LABEL_29;
      case 0x18u:
LABEL_27:
        uint64_t v23 = sub_1D5AB4050();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
        goto LABEL_29;
      case 0x1Au:
LABEL_28:
        uint64_t v24 = sub_1D5AB3F80();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
LABEL_29:
        swift_storeEnumTagMultiPayload();
        break;
      default:
LABEL_9:
        memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1D59A6768(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *initializeWithTake for RemoteBrowsingJournalEntry(void *a1, const void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 2)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = type metadata accessor for RemoteBrowsingJournalProperty();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          goto LABEL_6;
        case 1u:
          goto LABEL_7;
        case 4u:
          goto LABEL_9;
        case 8u:
          goto LABEL_10;
        case 9u:
          goto LABEL_11;
        case 0xAu:
          goto LABEL_12;
        case 0xBu:
          goto LABEL_13;
        case 0xCu:
          goto LABEL_14;
        case 0xDu:
          goto LABEL_15;
        case 0xEu:
          goto LABEL_16;
        case 0x10u:
          goto LABEL_17;
        case 0x11u:
          goto LABEL_18;
        case 0x12u:
          goto LABEL_19;
        case 0x13u:
          goto LABEL_20;
        case 0x15u:
          goto LABEL_21;
        case 0x16u:
          goto LABEL_22;
        case 0x17u:
          goto LABEL_23;
        case 0x18u:
          goto LABEL_24;
        case 0x1Au:
          goto LABEL_25;
        default:
          goto LABEL_8;
      }
    }
    uint64_t v5 = type metadata accessor for RemoteBrowsingJournalProperty();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        goto LABEL_6;
      case 1u:
        goto LABEL_7;
      case 4u:
        goto LABEL_9;
      case 8u:
        goto LABEL_10;
      case 9u:
        goto LABEL_11;
      case 0xAu:
        goto LABEL_12;
      case 0xBu:
        goto LABEL_13;
      case 0xCu:
        goto LABEL_14;
      case 0xDu:
        goto LABEL_15;
      case 0xEu:
        goto LABEL_16;
      case 0x10u:
        goto LABEL_17;
      case 0x11u:
        goto LABEL_18;
      case 0x12u:
        goto LABEL_19;
      case 0x13u:
        goto LABEL_20;
      case 0x15u:
        goto LABEL_21;
      case 0x16u:
        goto LABEL_22;
      case 0x17u:
        goto LABEL_23;
      case 0x18u:
        goto LABEL_24;
      case 0x1Au:
        goto LABEL_25;
      default:
        goto LABEL_8;
    }
  }
  uint64_t v5 = type metadata accessor for RemoteBrowsingJournalProperty();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
LABEL_6:
      uint64_t v6 = sub_1D5AB2490();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      goto LABEL_26;
    case 1u:
LABEL_7:
      uint64_t v7 = sub_1D5AB2BE0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      goto LABEL_26;
    case 4u:
LABEL_9:
      uint64_t v8 = sub_1D5AB3AA0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      goto LABEL_26;
    case 8u:
LABEL_10:
      uint64_t v9 = sub_1D5AB3B00();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      goto LABEL_26;
    case 9u:
LABEL_11:
      uint64_t v10 = sub_1D5AB35D0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      goto LABEL_26;
    case 0xAu:
LABEL_12:
      uint64_t v11 = sub_1D5AB39B0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
      goto LABEL_26;
    case 0xBu:
LABEL_13:
      uint64_t v12 = sub_1D5AB3750();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
      goto LABEL_26;
    case 0xCu:
LABEL_14:
      uint64_t v13 = sub_1D5AB3770();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
      goto LABEL_26;
    case 0xDu:
LABEL_15:
      uint64_t v14 = sub_1D5AB4350();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
      goto LABEL_26;
    case 0xEu:
LABEL_16:
      uint64_t v15 = sub_1D5AB49D0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
      goto LABEL_26;
    case 0x10u:
LABEL_17:
      uint64_t v16 = sub_1D5AB3BF0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(a1, a2, v16);
      goto LABEL_26;
    case 0x11u:
LABEL_18:
      uint64_t v17 = sub_1D5AB2FF0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
      goto LABEL_26;
    case 0x12u:
LABEL_19:
      uint64_t v18 = sub_1D5AB3010();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, a2, v18);
      goto LABEL_26;
    case 0x13u:
LABEL_20:
      uint64_t v19 = sub_1D5AB34D0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v19 - 8) + 32))(a1, a2, v19);
      goto LABEL_26;
    case 0x15u:
LABEL_21:
      uint64_t v20 = sub_1D5AB2E90();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
      goto LABEL_26;
    case 0x16u:
LABEL_22:
      uint64_t v21 = sub_1D5AB2210();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
      goto LABEL_26;
    case 0x17u:
LABEL_23:
      uint64_t v22 = sub_1D5AB3B90();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 32))(a1, a2, v22);
      goto LABEL_26;
    case 0x18u:
LABEL_24:
      uint64_t v23 = sub_1D5AB4050();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 32))(a1, a2, v23);
      goto LABEL_26;
    case 0x1Au:
LABEL_25:
      uint64_t v24 = sub_1D5AB3F80();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(a1, a2, v24);
LABEL_26:
      swift_storeEnumTagMultiPayload();
      break;
    default:
LABEL_8:
      memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithTake for RemoteBrowsingJournalEntry(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    sub_1D59A6768((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for RemoteBrowsingJournalEntry);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 2)
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v5 = type metadata accessor for RemoteBrowsingJournalProperty();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            goto LABEL_7;
          case 1u:
            goto LABEL_8;
          case 4u:
            goto LABEL_9;
          case 8u:
            goto LABEL_10;
          case 9u:
            goto LABEL_11;
          case 0xAu:
            goto LABEL_12;
          case 0xBu:
            goto LABEL_13;
          case 0xCu:
            goto LABEL_14;
          case 0xDu:
            goto LABEL_15;
          case 0xEu:
            goto LABEL_16;
          case 0x10u:
            goto LABEL_17;
          case 0x11u:
            goto LABEL_18;
          case 0x12u:
            goto LABEL_19;
          case 0x13u:
            goto LABEL_20;
          case 0x15u:
            goto LABEL_21;
          case 0x16u:
            goto LABEL_22;
          case 0x17u:
            goto LABEL_23;
          case 0x18u:
            goto LABEL_24;
          case 0x1Au:
            goto LABEL_25;
          default:
            goto LABEL_26;
        }
      }
      uint64_t v5 = type metadata accessor for RemoteBrowsingJournalProperty();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          goto LABEL_7;
        case 1u:
          goto LABEL_8;
        case 4u:
          goto LABEL_9;
        case 8u:
          goto LABEL_10;
        case 9u:
          goto LABEL_11;
        case 0xAu:
          goto LABEL_12;
        case 0xBu:
          goto LABEL_13;
        case 0xCu:
          goto LABEL_14;
        case 0xDu:
          goto LABEL_15;
        case 0xEu:
          goto LABEL_16;
        case 0x10u:
          goto LABEL_17;
        case 0x11u:
          goto LABEL_18;
        case 0x12u:
          goto LABEL_19;
        case 0x13u:
          goto LABEL_20;
        case 0x15u:
          goto LABEL_21;
        case 0x16u:
          goto LABEL_22;
        case 0x17u:
          goto LABEL_23;
        case 0x18u:
          goto LABEL_24;
        case 0x1Au:
          goto LABEL_25;
        default:
          goto LABEL_26;
      }
    }
    uint64_t v5 = type metadata accessor for RemoteBrowsingJournalProperty();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
LABEL_7:
        uint64_t v6 = sub_1D5AB2490();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
LABEL_8:
        uint64_t v7 = sub_1D5AB2BE0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
LABEL_9:
        uint64_t v8 = sub_1D5AB3AA0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
LABEL_10:
        uint64_t v9 = sub_1D5AB3B00();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
LABEL_11:
        uint64_t v10 = sub_1D5AB35D0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xAu:
LABEL_12:
        uint64_t v11 = sub_1D5AB39B0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xBu:
LABEL_13:
        uint64_t v12 = sub_1D5AB3750();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xCu:
LABEL_14:
        uint64_t v13 = sub_1D5AB3770();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xDu:
LABEL_15:
        uint64_t v14 = sub_1D5AB4350();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xEu:
LABEL_16:
        uint64_t v15 = sub_1D5AB49D0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x10u:
LABEL_17:
        uint64_t v16 = sub_1D5AB3BF0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(a1, a2, v16);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x11u:
LABEL_18:
        uint64_t v17 = sub_1D5AB2FF0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x12u:
LABEL_19:
        uint64_t v18 = sub_1D5AB3010();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, a2, v18);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x13u:
LABEL_20:
        uint64_t v19 = sub_1D5AB34D0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v19 - 8) + 32))(a1, a2, v19);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x15u:
LABEL_21:
        uint64_t v20 = sub_1D5AB2E90();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x16u:
LABEL_22:
        uint64_t v21 = sub_1D5AB2210();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x17u:
LABEL_23:
        uint64_t v22 = sub_1D5AB3B90();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 32))(a1, a2, v22);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x18u:
LABEL_24:
        uint64_t v23 = sub_1D5AB4050();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 32))(a1, a2, v23);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x1Au:
LABEL_25:
        uint64_t v24 = sub_1D5AB3F80();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(a1, a2, v24);
        swift_storeEnumTagMultiPayload();
        break;
      default:
LABEL_26:
        memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1D59A78BC()
{
  uint64_t result = type metadata accessor for RemoteBrowsingJournalProperty();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1D59A7948(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725908);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t AnalyticsErrorTransformable<>.errorCode.getter(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_1D5AB4E10();
}

uint64_t AnalyticsErrorTransformable<>.errorDomain.getter()
{
  return sub_1D5AB4E10();
}

uint64_t sub_1D59A7AB4(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA725998);
}

uint64_t sub_1D59A7AC0(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA725990);
}

uint64_t sub_1D59A7ACC(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA725988);
}

uint64_t sub_1D59A7AD8(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA725980);
}

uint64_t sub_1D59A7AE4(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA725978);
}

uint64_t sub_1D59A7AF0(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA725970);
}

uint64_t sub_1D59A7AFC()
{
  return sub_1D5AB4E10();
}

uint64_t sub_1D59A7B2C(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA725968);
}

uint64_t sub_1D59A7B38(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA725960);
}

uint64_t sub_1D59A7B48(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA725910);
}

uint64_t sub_1D59A7B54(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA725958);
}

uint64_t sub_1D59A7B60(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA725950);
}

uint64_t sub_1D59A7B6C(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA725948);
}

uint64_t sub_1D59A7B78(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA725940);
}

uint64_t sub_1D59A7B84(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA725938);
}

uint64_t sub_1D59A7B90(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA725930);
}

uint64_t sub_1D59A7B9C(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA725928);
}

uint64_t sub_1D59A7BA8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1D5AB4E10();
}

uint64_t sub_1D59A7BDC(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA725920);
}

uint64_t sub_1D59A7BE8(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_1D5AB4E10();
}

uint64_t sub_1D59A7CA0(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA725918);
}

uint64_t PersonalizationInferenceRequestHashes.init(canvas:catalogData:userAwardData:userData:userHistoryData:userLibraryData:userOnboardingData:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1D59A821C(100000, MEMORY[0x1E4F9D968]);
  if (v7)
  {
    uint64_t v14 = a2;
    uint64_t v15 = a4;
    uint64_t v16 = a5;
    uint64_t v17 = a6;
    uint64_t v18 = a1;
    swift_bridgeObjectRelease();
    uint64_t v19 = sub_1D5AB43B0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(a7, v19);
    uint64_t v20 = sub_1D5AB41E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v17, v20);
    uint64_t v21 = sub_1D5AB41D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v16, v21);
    uint64_t v22 = sub_1D5AB39D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v15, v22);
    uint64_t v23 = sub_1D5AB3EB0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v14, v23);
  }
  else
  {
    uint64_t v34 = a2;
    sub_1D59A821C(100000, MEMORY[0x1E4F9E4A8]);
    sub_1D59A85D4(100000, a3);
    swift_bridgeObjectRelease();
    uint64_t v26 = a4;
    sub_1D59A821C(100000, MEMORY[0x1E4F9DF88]);
    uint64_t v27 = a5;
    sub_1D59A821C(100000, MEMORY[0x1E4F9E888]);
    uint64_t v28 = a6;
    sub_1D59A821C(100000, MEMORY[0x1E4F9E898]);
    uint64_t v18 = a1;
    sub_1D59A821C(100000, MEMORY[0x1E4F9EAB0]);
    sub_1D5AB44C0();
    uint64_t v29 = sub_1D5AB43B0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(a7, v29);
    uint64_t v30 = sub_1D5AB41E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v28, v30);
    uint64_t v31 = sub_1D5AB41D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v27, v31);
    uint64_t v32 = sub_1D5AB39D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v26, v32);
    uint64_t v33 = sub_1D5AB3EB0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v34, v33);
  }
  uint64_t v24 = sub_1D5AB3640();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v18, v24);
}

uint64_t sub_1D59A821C(uint64_t a1, void (*a2)(void))
{
  v18[3] = *MEMORY[0x1E4F143B8];
  uint64_t v6 = sub_1D5AB4D20();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(0);
  uint64_t v10 = sub_1D5AB3E40();
  if (!v3)
  {
    unint64_t v12 = v11;
    uint64_t v13 = v10;
    switch(v11 >> 62)
    {
      case 1uLL:
        if (v10 >> 32 < (int)v10) {
          __break(1u);
        }
        unint64_t v17 = v11 & 0x3FFFFFFFFFFFFFFFLL;
        sub_1D599FF54(v10, v11);
        sub_1D599FF54(v13, v12);
        sub_1D5A30428((int)v13, v13 >> 32, v13, v12, a1, (uint64_t)v9);
        break;
      case 2uLL:
        uint64_t v14 = *(void *)(v10 + 16);
        unint64_t v17 = *(void *)(v10 + 24);
        sub_1D599FF54(v10, v11);
        sub_1D599FF54(v13, v12);
        swift_retain();
        swift_retain();
        sub_1D5A30428(v14, v17, v13, v12, a1, (uint64_t)v9);
        swift_release();
        swift_release();
        break;
      case 3uLL:
        memset(v18, 0, 14);
        goto LABEL_6;
      default:
        v18[0] = v10;
        LOWORD(v18[1]) = v11;
        BYTE2(v18[1]) = BYTE2(v11);
        BYTE3(v18[1]) = BYTE3(v11);
        BYTE4(v18[1]) = BYTE4(v11);
        BYTE5(v18[1]) = BYTE5(v11);
LABEL_6:
        sub_1D5A2FD0C((uint64_t)v18, v10, v11, a1, (uint64_t)v9);
        sub_1D5956DF8(v13, v12);
        break;
    }
    sub_1D5956DF8(v13, v12);
    v18[0] = sub_1D5A2F984((uint64_t)v9);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE4C28);
    sub_1D59A899C();
    uint64_t v2 = sub_1D5AB4DB0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_1D5956DF8(v13, v12);
  }
  return v2;
}

void *sub_1D59A85D4(uint64_t a1, uint64_t a2)
{
  v18[3] = *MEMORY[0x1E4F143B8];
  uint64_t v5 = sub_1D5AB4D20();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE33C0);
  sub_1D59A89F8();
  uint64_t v9 = v18;
  uint64_t v10 = sub_1D5AB4150();
  if (!v2)
  {
    unint64_t v12 = v11;
    uint64_t v13 = v10;
    switch(v11 >> 62)
    {
      case 1uLL:
        if (v10 >> 32 < (int)v10) {
          __break(1u);
        }
        unint64_t v17 = v11 & 0x3FFFFFFFFFFFFFFFLL;
        sub_1D599FF54(v10, v11);
        sub_1D599FF54(v13, v12);
        sub_1D5A30428((int)v13, v13 >> 32, v13, v12, a1, (uint64_t)v8);
        break;
      case 2uLL:
        uint64_t v14 = *(void *)(v10 + 16);
        unint64_t v17 = *(void *)(v10 + 24);
        sub_1D599FF54(v10, v11);
        sub_1D599FF54(v13, v12);
        swift_retain();
        swift_retain();
        sub_1D5A30428(v14, v17, v13, v12, a1, (uint64_t)v8);
        swift_release();
        swift_release();
        break;
      case 3uLL:
        memset(v18, 0, 14);
        goto LABEL_6;
      default:
        v18[0] = v10;
        LOWORD(v18[1]) = v11;
        BYTE2(v18[1]) = BYTE2(v11);
        BYTE3(v18[1]) = BYTE3(v11);
        BYTE4(v18[1]) = BYTE4(v11);
        BYTE5(v18[1]) = BYTE5(v11);
LABEL_6:
        sub_1D5A2FD0C((uint64_t)v18, v10, v11, a1, (uint64_t)v8);
        sub_1D5956DF8(v13, v12);
        break;
    }
    sub_1D5956DF8(v13, v12);
    v18[0] = sub_1D5A2F984((uint64_t)v8);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE4C28);
    sub_1D59A899C();
    uint64_t v9 = (void *)sub_1D5AB4DB0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1D5956DF8(v13, v12);
  }
  return v9;
}

unint64_t sub_1D59A899C()
{
  unint64_t result = qword_1EBDE33D0;
  if (!qword_1EBDE33D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE4C28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE33D0);
  }
  return result;
}

unint64_t sub_1D59A89F8()
{
  unint64_t result = qword_1EBDE33C8;
  if (!qword_1EBDE33C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBDE33C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE33C8);
  }
  return result;
}

unint64_t ServiceSubscription.dictionary()()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4380);
  uint64_t v1 = MEMORY[0x1F4188790](v0 - 8);
  uint64_t v102 = (char *)&v98 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v98 - v3;
  uint64_t v5 = sub_1D5AB1CE0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v98 = (char *)&v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v99 = (char *)&v98 - v10;
  MEMORY[0x1F4188790](v9);
  unint64_t v12 = (char *)&v98 - v11;
  unint64_t v13 = sub_1D59718F8(MEMORY[0x1E4FBC860]);
  *(void *)&long long v106 = 0xD000000000000012;
  *((void *)&v106 + 1) = 0x80000001D5AC69D0;
  sub_1D5AB5790();
  uint64_t v14 = sub_1D5AB33C0();
  uint64_t v15 = MEMORY[0x1E4FBC1C8];
  uint64_t v107 = MEMORY[0x1E4FBC1C8];
  *(void *)&long long v106 = v14;
  sub_1D5979A10(&v106, v105);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v109 = v13;
  sub_1D5975D8C(v105, (uint64_t)v108, isUniquelyReferenced_nonNull_native);
  unint64_t v17 = v109;
  swift_bridgeObjectRelease();
  sub_1D5952DB0((uint64_t)v108);
  *(void *)&long long v106 = 0xD000000000000018;
  *((void *)&v106 + 1) = 0x80000001D5AC69F0;
  sub_1D5AB5790();
  uint64_t v18 = sub_1D5AB3430();
  uint64_t v107 = v15;
  *(void *)&long long v106 = v18;
  sub_1D5979A10(&v106, v105);
  char v19 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v104 = v17;
  sub_1D5975D8C(v105, (uint64_t)v108, v19);
  unint64_t v109 = v104;
  swift_bridgeObjectRelease();
  sub_1D5952DB0((uint64_t)v108);
  sub_1D5AB33B0();
  uint64_t v100 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
  uint64_t v101 = v6 + 48;
  int v20 = v100(v4, 1, v5);
  uint64_t v21 = MEMORY[0x1E4FBB3D0];
  uint64_t v103 = v6;
  if (v20 == 1)
  {
    sub_1D59A9880((uint64_t)v4);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v12, v4, v5);
    *(void *)&long long v106 = 0xD000000000000013;
    *((void *)&v106 + 1) = 0x80000001D5AC6BB0;
    sub_1D5AB5790();
    sub_1D5AB1CA0();
    sub_1D5AB52F0();
    uint64_t v107 = v21;
    *(void *)&long long v106 = v22;
    sub_1D5979A10(&v106, v105);
    unint64_t v23 = v109;
    char v24 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v104 = v23;
    sub_1D5975D8C(v105, (uint64_t)v108, v24);
    unint64_t v109 = v104;
    swift_bridgeObjectRelease();
    sub_1D5952DB0((uint64_t)v108);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  }
  uint64_t v25 = v5;
  uint64_t v26 = sub_1D5AB3440();
  if ((v27 & 1) == 0)
  {
    uint64_t v28 = v26;
    *(void *)&long long v106 = 0xD00000000000001DLL;
    *((void *)&v106 + 1) = 0x80000001D5AC6B90;
    sub_1D5AB5790();
    uint64_t v107 = MEMORY[0x1E4FBC1C8];
    *(void *)&long long v106 = v28;
    sub_1D5979A10(&v106, v105);
    unint64_t v29 = v109;
    char v30 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v104 = v29;
    sub_1D5975D8C(v105, (uint64_t)v108, v30);
    unint64_t v109 = v104;
    swift_bridgeObjectRelease();
    sub_1D5952DB0((uint64_t)v108);
  }
  uint64_t v31 = sub_1D5AB3470();
  if (v32)
  {
    unint64_t v36 = v109;
  }
  else
  {
    uint64_t v33 = v31;
    *(void *)&long long v106 = 0xD00000000000001FLL;
    *((void *)&v106 + 1) = 0x80000001D5AC6B70;
    sub_1D5AB5790();
    uint64_t v107 = v21;
    *(void *)&long long v106 = v33;
    sub_1D5979A10(&v106, v105);
    unint64_t v34 = v109;
    char v35 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v104 = v34;
    sub_1D5975D8C(v105, (uint64_t)v108, v35);
    unint64_t v36 = v104;
    swift_bridgeObjectRelease();
    sub_1D5952DB0((uint64_t)v108);
  }
  *(void *)&long long v106 = 0xD00000000000001BLL;
  *((void *)&v106 + 1) = 0x80000001D5AC6A10;
  uint64_t v37 = MEMORY[0x1E4FBB1A0];
  sub_1D5AB5790();
  char v38 = sub_1D5AB33D0();
  uint64_t v39 = MEMORY[0x1E4FBB390];
  uint64_t v107 = MEMORY[0x1E4FBB390];
  LOBYTE(v106) = v38 & 1;
  sub_1D5979A10(&v106, v105);
  char v40 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v104 = v36;
  sub_1D5975D8C(v105, (uint64_t)v108, v40);
  unint64_t v41 = v104;
  swift_bridgeObjectRelease();
  sub_1D5952DB0((uint64_t)v108);
  *(void *)&long long v106 = 0xD000000000000017;
  *((void *)&v106 + 1) = 0x80000001D5AC6A30;
  sub_1D5AB5790();
  char v42 = sub_1D5AB34B0();
  uint64_t v107 = v39;
  LOBYTE(v106) = v42 & 1;
  sub_1D5979A10(&v106, v105);
  char v43 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v104 = v41;
  sub_1D5975D8C(v105, (uint64_t)v108, v43);
  unint64_t v109 = v104;
  swift_bridgeObjectRelease();
  sub_1D5952DB0((uint64_t)v108);
  *(void *)&long long v106 = 0xD000000000000018;
  *((void *)&v106 + 1) = 0x80000001D5AC6A50;
  sub_1D5AB5790();
  uint64_t v44 = (uint64_t)v99;
  sub_1D5AB1CD0();
  BOOL v45 = ServiceSubscription.isSubscribed(date:)(v44);
  uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v103 + 8);
  v46(v44, v5);
  uint64_t v107 = v39;
  LOBYTE(v106) = v45;
  sub_1D5979A10(&v106, v105);
  unint64_t v47 = v109;
  char v48 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v104 = v47;
  sub_1D5975D8C(v105, (uint64_t)v108, v48);
  unint64_t v49 = v104;
  unint64_t v109 = v104;
  swift_bridgeObjectRelease();
  sub_1D5952DB0((uint64_t)v108);
  uint64_t v50 = sub_1D5AB34A0();
  if (v51)
  {
    uint64_t v52 = v50;
    uint64_t v53 = v51;
    *(void *)&long long v106 = 0xD000000000000014;
    *((void *)&v106 + 1) = 0x80000001D5AC6B50;
    sub_1D5AB5790();
    uint64_t v107 = v37;
    *(void *)&long long v106 = v52;
    *((void *)&v106 + 1) = v53;
    sub_1D5979A10(&v106, v105);
    char v54 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v104 = v49;
    sub_1D5975D8C(v105, (uint64_t)v108, v54);
    unint64_t v49 = v104;
    unint64_t v109 = v104;
    swift_bridgeObjectRelease();
    sub_1D5952DB0((uint64_t)v108);
  }
  uint64_t v55 = sub_1D5AB33F0();
  if (v56)
  {
    uint64_t v57 = v55;
    unint64_t v58 = v56;
    uint64_t v59 = HIBYTE(v56) & 0xF;
    if ((v56 & 0x2000000000000000) == 0) {
      uint64_t v59 = v55 & 0xFFFFFFFFFFFFLL;
    }
    if (v59)
    {
      *(void *)&long long v106 = 0xD000000000000017;
      *((void *)&v106 + 1) = 0x80000001D5AC6B30;
      sub_1D5AB5790();
      uint64_t v107 = v37;
      *(void *)&long long v106 = v57;
      *((void *)&v106 + 1) = v58;
      sub_1D5979A10(&v106, v105);
      char v60 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v104 = v49;
      sub_1D5975D8C(v105, (uint64_t)v108, v60);
      unint64_t v109 = v104;
      swift_bridgeObjectRelease();
      sub_1D5952DB0((uint64_t)v108);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v61 = sub_1D5AB3460();
  if ((v62 & 1) == 0)
  {
    uint64_t v63 = v61;
    *(void *)&long long v106 = 0xD00000000000001BLL;
    *((void *)&v106 + 1) = 0x80000001D5AC6B10;
    sub_1D5AB5790();
    uint64_t v107 = MEMORY[0x1E4FBC1C8];
    *(void *)&long long v106 = v63;
    sub_1D5979A10(&v106, v105);
    char v64 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v104 = v109;
    sub_1D5975D8C(v105, (uint64_t)v108, v64);
    unint64_t v109 = v104;
    swift_bridgeObjectRelease();
    sub_1D5952DB0((uint64_t)v108);
  }
  uint64_t v65 = sub_1D5AB3420();
  if ((v66 & 1) == 0)
  {
    uint64_t v67 = v65;
    *(void *)&long long v106 = 0xD00000000000001CLL;
    *((void *)&v106 + 1) = 0x80000001D5AC6AF0;
    sub_1D5AB5790();
    uint64_t v107 = MEMORY[0x1E4FBB3D0];
    *(void *)&long long v106 = v67;
    sub_1D5979A10(&v106, v105);
    char v68 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v104 = v109;
    sub_1D5975D8C(v105, (uint64_t)v108, v68);
    unint64_t v109 = v104;
    swift_bridgeObjectRelease();
    sub_1D5952DB0((uint64_t)v108);
  }
  uint64_t v69 = sub_1D5AB3410();
  if ((v70 & 1) == 0)
  {
    uint64_t v71 = v69;
    *(void *)&long long v106 = 0xD000000000000011;
    *((void *)&v106 + 1) = 0x80000001D5AC6AD0;
    sub_1D5AB5790();
    uint64_t v107 = MEMORY[0x1E4FBC1C8];
    *(void *)&long long v106 = v71;
    sub_1D5979A10(&v106, v105);
    char v72 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v104 = v109;
    sub_1D5975D8C(v105, (uint64_t)v108, v72);
    unint64_t v109 = v104;
    swift_bridgeObjectRelease();
    sub_1D5952DB0((uint64_t)v108);
  }
  uint64_t v73 = sub_1D5AB3480();
  if ((v74 & 1) == 0)
  {
    uint64_t v75 = v73;
    *(void *)&long long v106 = 0xD00000000000001FLL;
    *((void *)&v106 + 1) = 0x80000001D5AC6AB0;
    sub_1D5AB5790();
    uint64_t v107 = MEMORY[0x1E4FBC1C8];
    *(void *)&long long v106 = v75;
    sub_1D5979A10(&v106, v105);
    char v76 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v104 = v109;
    sub_1D5975D8C(v105, (uint64_t)v108, v76);
    unint64_t v109 = v104;
    swift_bridgeObjectRelease();
    sub_1D5952DB0((uint64_t)v108);
  }
  uint64_t v77 = (uint64_t)v102;
  sub_1D5AB34C0();
  if (v100((char *)v77, 1, v5) == 1)
  {
    sub_1D59A9880(v77);
  }
  else
  {
    uint64_t v78 = v98;
    (*(void (**)(char *, uint64_t, uint64_t))(v103 + 32))(v98, v77, v25);
    *(void *)&long long v106 = 0xD000000000000015;
    *((void *)&v106 + 1) = 0x80000001D5AC6A90;
    sub_1D5AB5790();
    sub_1D5AB1CA0();
    sub_1D5AB52F0();
    uint64_t v107 = MEMORY[0x1E4FBB3D0];
    *(void *)&long long v106 = v79;
    sub_1D5979A10(&v106, v105);
    unint64_t v80 = v109;
    char v81 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v104 = v80;
    sub_1D5975D8C(v105, (uint64_t)v108, v81);
    unint64_t v109 = v104;
    swift_bridgeObjectRelease();
    sub_1D5952DB0((uint64_t)v108);
    v46((uint64_t)v78, v25);
  }
  uint64_t v82 = sub_1D5AB3450();
  if (v83)
  {
    uint64_t v84 = v82;
    unint64_t v85 = v83;
    uint64_t v86 = HIBYTE(v83) & 0xF;
    if ((v83 & 0x2000000000000000) == 0) {
      uint64_t v86 = v82 & 0xFFFFFFFFFFFFLL;
    }
    if (v86)
    {
      *(void *)&long long v106 = 0xD00000000000001ELL;
      *((void *)&v106 + 1) = 0x80000001D5AC6A70;
      sub_1D5AB5790();
      uint64_t v107 = v37;
      *(void *)&long long v106 = v84;
      *((void *)&v106 + 1) = v85;
      sub_1D5979A10(&v106, v105);
      unint64_t v87 = v109;
      char v88 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v104 = v87;
      sub_1D5975D8C(v105, (uint64_t)v108, v88);
      unint64_t v109 = v104;
      swift_bridgeObjectRelease();
      sub_1D5952DB0((uint64_t)v108);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  if (qword_1EBDE3B70 != -1) {
    swift_once();
  }
  uint64_t v89 = sub_1D5AB4B50();
  __swift_project_value_buffer(v89, (uint64_t)qword_1EBDE3B50);
  uint64_t v90 = sub_1D5AB4B30();
  os_log_type_t v91 = sub_1D5AB5400();
  if (os_log_type_enabled(v90, v91))
  {
    uint64_t v92 = (uint8_t *)swift_slowAlloc();
    uint64_t v93 = swift_slowAlloc();
    v108[0] = v93;
    *(_DWORD *)uint64_t v92 = 136315138;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v94 = sub_1D5AB4D80();
    unint64_t v96 = v95;
    swift_bridgeObjectRelease();
    *(void *)&v105[0] = sub_1D5951500(v94, v96, v108);
    sub_1D5AB5680();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D5947000, v90, v91, "Metric subscription fields generated: %s", v92, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v93, -1, -1);
    MEMORY[0x1D945AAC0](v92, -1, -1);
  }

  swift_beginAccess();
  return v109;
}

unint64_t sub_1D59A9858()
{
  return ServiceSubscription.dictionary()();
}

uint64_t sub_1D59A9880(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4380);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t MultiUserBeginActivityRequested.activity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB3100();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t MultiUserBeginActivityRequested.init(activity:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB3100();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static MultiUserBeginActivityRequested.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for MultiUserBeginActivityRequested(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3100();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for MultiUserBeginActivityRequested(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB3100();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for MultiUserBeginActivityRequested(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for MultiUserBeginActivityRequested(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for MultiUserBeginActivityRequested(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for MultiUserBeginActivityRequested(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for MultiUserBeginActivityRequested(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D59A9C38);
}

uint64_t sub_1D59A9C38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3100();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MultiUserBeginActivityRequested(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D59A9CB8);
}

uint64_t sub_1D59A9CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3100();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MultiUserBeginActivityRequested()
{
  uint64_t result = qword_1EBDE30D0;
  if (!qword_1EBDE30D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D59A9D74()
{
  uint64_t result = sub_1D5AB3100();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t static StorefrontConstants.contentAvailableUserDefaultKey.getter()
{
  return 0xD000000000000010;
}

unint64_t static StorefrontConstants.languageCodeUserDefaultsKey.getter()
{
  return 0xD000000000000016;
}

unint64_t static StorefrontConstants.storefrontIdentifierDefaultsKey.getter()
{
  return 0xD000000000000014;
}

ValueMetadata *type metadata accessor for StorefrontConstants()
{
  return &type metadata for StorefrontConstants;
}

BOOL StringProtocol.isEmptyOrWhiteSpace.getter()
{
  uint64_t v0 = sub_1D5AB1A00();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5AB19F0();
  uint64_t v4 = sub_1D5AB56B0();
  unint64_t v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_bridgeObjectRelease();
  uint64_t v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0) {
    uint64_t v7 = v4 & 0xFFFFFFFFFFFFLL;
  }
  return v7 == 0;
}

BOOL Optional<A>.isEmptyOrWhiteSpace.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB1A00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2) {
    return 1;
  }
  v13[0] = a1;
  v13[1] = a2;
  swift_bridgeObjectRetain();
  sub_1D5AB19F0();
  sub_1D59AA0A4();
  uint64_t v8 = sub_1D5AB56B0();
  unint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
  }
  return v11 == 0;
}

unint64_t sub_1D59AA0A4()
{
  unint64_t result = qword_1EBDE50F8;
  if (!qword_1EBDE50F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE50F8);
  }
  return result;
}

uint64_t dispatch thunk of BookmarkClientProtocol.queryAllBookmarks()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of BookmarkClientProtocol.queryAllPlaylists()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of BookmarkClientProtocol.queryBookmarks(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of BookmarkClientProtocol.queryBookmarks(mediaTypes:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of BookmarkClientProtocol.queryBookmarkCount(mediaTypes:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of BookmarkClientProtocol.queryBookmarks(referenceTypes:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of BookmarkClientProtocol.queryBookmarkCount(referenceTypes:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of BookmarkClientProtocol.filterBookmarks(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of BookmarkClientProtocol.queryBookmarkCount(filter:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of BookmarkClientProtocol.filterPlaylists(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of BookmarkClientProtocol.queryPlaylistCount(filter:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of BookmarkClientProtocol.queryPlaylist(playlistIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

uint64_t dispatch thunk of BookmarkClientProtocol.queryPlaylistCount()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of BookmarkClientProtocol.queryPlaylists(playlistIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t dispatch thunk of BookmarkClientProtocol.insertBookmarks(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t dispatch thunk of BookmarkClientProtocol.insertPlaylist(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 128))();
}

uint64_t dispatch thunk of BookmarkClientProtocol.removeBookmarks(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 136))();
}

uint64_t dispatch thunk of BookmarkClientProtocol.deletePlaylist(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 144))();
}

uint64_t RemoteParticipantUpdated.participant.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB3190();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t RemoteParticipantUpdated.init(participant:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB3190();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static RemoteParticipantUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for RemoteParticipantUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3190();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for RemoteParticipantUpdated(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB3190();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for RemoteParticipantUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3190();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for RemoteParticipantUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3190();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for RemoteParticipantUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3190();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for RemoteParticipantUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3190();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteParticipantUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D59AA5B8);
}

uint64_t sub_1D59AA5B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3190();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for RemoteParticipantUpdated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D59AA638);
}

uint64_t sub_1D59AA638(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3190();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for RemoteParticipantUpdated()
{
  uint64_t result = qword_1EA7259A0;
  if (!qword_1EA7259A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D59AA6F4()
{
  uint64_t result = sub_1D5AB3190();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D59AA780(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  unint64_t v10 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v8;
  *uint64_t v8 = v6;
  v8[1] = sub_1D5984480;
  return v10(a6);
}

uint64_t ActivityRingsObserver.deinit()
{
  sub_1D5AB5230();
  swift_release();
  return v0;
}

uint64_t ActivityRingsObserver.__deallocating_deinit()
{
  sub_1D5AB5230();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ActivityRingsObserver()
{
  return self;
}

uint64_t method lookup function for ActivityRingsObserver(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ActivityRingsObserver);
}

uint64_t DataProtectionClass.rawValue.getter(uint64_t result)
{
  return result;
}

unint64_t sub_1D59AA95C@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = _s13SeymourClient19DataProtectionClassO8rawValueACSgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_1D59AA988(void *a1@<X8>)
{
  *a1 = *v1;
}

BOOL static DataProtectionClass.< infix(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  return a1 < a2;
}

BOOL sub_1D59AA9A4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_1D59AA9B8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_1D59AA9CC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1D59AA9E0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

unint64_t _s13SeymourClient19DataProtectionClassO8rawValueACSgSi_tcfC_0(unint64_t result)
{
  if (result >= 4) {
    return 4;
  }
  return result;
}

unint64_t sub_1D59AAA08()
{
  unint64_t result = qword_1EA7259B8;
  if (!qword_1EA7259B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7259B8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DataProtectionClass(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D59AAB28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DataProtectionClass()
{
  return &type metadata for DataProtectionClass;
}

uint64_t dispatch thunk of EngagementClientProtocol.dispatchEngagementRequest(json:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of EngagementClientProtocol.fetchEngagementRedirectURL(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of EngagementClientProtocol.insertEngagementBadge(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of EngagementClientProtocol.deleteEngagementBadge(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of EngagementClientProtocol.deleteAllEngagementBadges()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of EngagementClientProtocol.queryAllCompletedMarketingVideoIdentifiers()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of EngagementClientProtocol.queryEngagementBadges()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of EngagementClientProtocol.queryEngagementBannerRuleInfo()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of EngagementClientProtocol.insertCompletedMarketingVideo(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of EngagementClientProtocol.deleteAllCompletedMarketingVideos()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of EngagementClientProtocol.queryIntroSheet()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of EngagementClientProtocol.queryWhatsNewSheet()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t Collection.parallelForEach(parallelism:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return MEMORY[0x1F4188298](sub_1D59AAC78, 0, 0);
}

uint64_t sub_1D59AAC78()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v3 = swift_allocObject();
  *(void *)(v0 + 64) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 40);
  *(void *)(v3 + 32) = v2;
  *(void *)(v3 + 40) = v1;
  swift_retain();
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  *(void *)uint64_t v4 = v0;
  *(void *)(v4 + 8) = sub_1D59AAD94;
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 16);
  *(_OWORD *)(v4 + 64) = *(_OWORD *)(v0 + 48);
  uint64_t v7 = MEMORY[0x1E4FBC848] + 8;
  *(void *)(v4 + 48) = v5;
  *(void *)(v4 + 56) = v7;
  *(void *)(v4 + 32) = &unk_1EA7259D0;
  *(void *)(v4 + 40) = v3;
  *(void *)(v4 + 24) = v6;
  return MEMORY[0x1F4188298](sub_1D59AB1B4, 0, 0);
}

uint64_t sub_1D59AAD94()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D59AAEF0, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1D59AAEF0()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D59AAF54(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_1D5984480;
  return v7(a2);
}

uint64_t sub_1D59AB02C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1D59AB064(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(int **)(v2 + 32);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1D598AF68;
  uint64_t v9 = (uint64_t (*)(uint64_t))((char *)v5 + *v5);
  uint64_t v7 = (void *)swift_task_alloc();
  v6[2] = v7;
  *uint64_t v7 = v6;
  v7[1] = sub_1D5984480;
  return v9(a2);
}

uint64_t Collection.parallelMap<A>(parallelism:transform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[8] = a6;
  v7[9] = v6;
  v7[6] = a4;
  v7[7] = a5;
  v7[4] = a2;
  v7[5] = a3;
  v7[3] = a1;
  return MEMORY[0x1F4188298](sub_1D59AB1B4, 0, 0);
}

uint64_t sub_1D59AB1B4()
{
  sub_1D5AB53C0();
  uint64_t v1 = sub_1D5AB5650();
  uint64_t v3 = v2;
  *(void *)(v0 + 80) = v1;
  *(void *)(v0 + 88) = v2;
  uint64_t v4 = sub_1D5AB5640();
  if (!v4) {
    return sub_1D5AB5920();
  }
  uint64_t v5 = v4;
  uint64_t v7 = *(void *)(v0 + 64);
  uint64_t v6 = *(void *)(v0 + 72);
  uint64_t v9 = *(void *)(v0 + 48);
  uint64_t v8 = *(void *)(v0 + 56);
  uint64_t v16 = *(void *)(v0 + 24);
  long long v15 = *(_OWORD *)(v0 + 32);
  uint64_t v10 = sub_1D5AB53C0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v11 = swift_task_alloc();
  *(void *)(v0 + 96) = v11;
  *(void *)(v11 + 16) = v9;
  *(void *)(v11 + 24) = v8;
  *(void *)(v11 + 32) = v7;
  *(void *)(v11 + 40) = v6;
  *(_OWORD *)(v11 + 48) = v15;
  *(void *)(v11 + 64) = v16;
  *(void *)(v11 + 72) = v5;
  *(void *)(v11 + 80) = v10;
  *(void *)(v11 + 88) = v1;
  *(void *)(v11 + 96) = v3;
  uint64_t v12 = sub_1D5AB5100();
  unint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v13;
  *unint64_t v13 = v0;
  v13[1] = sub_1D59AB3C8;
  return MEMORY[0x1F4188080](v0 + 16, TupleTypeMetadata2, v12, 0, 0, &unk_1EA7259E8, v11, TupleTypeMetadata2);
}

uint64_t sub_1D59AB3C8()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1D59AB554;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1D59AB4E4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D59AB4E4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1D5AB5630();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1D59AB554()
{
  swift_task_dealloc();
  sub_1D5AB5630();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D59AB5D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[15] = v16;
  v8[16] = v17;
  v8[13] = v14;
  v8[14] = v15;
  v8[11] = a8;
  v8[12] = v13;
  v8[9] = a6;
  v8[10] = a7;
  v8[7] = a4;
  v8[8] = a5;
  v8[5] = a2;
  v8[6] = a3;
  v8[4] = a1;
  v8[17] = swift_getTupleTypeMetadata2();
  uint64_t v9 = sub_1D5AB5620();
  v8[18] = v9;
  v8[19] = *(void *)(v9 - 8);
  v8[20] = swift_task_alloc();
  uint64_t v10 = *(void *)(v16 - 8);
  v8[21] = v10;
  v8[22] = v10;
  v8[23] = swift_task_alloc();
  v8[24] = swift_task_alloc();
  v8[25] = *(void *)(v17 + 8);
  v8[26] = sub_1D5AB5970();
  v8[27] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D59AB788, 0, 0);
}

uint64_t sub_1D59AB788()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[9];
  sub_1D5AB5960();
  uint64_t v4 = swift_allocBox();
  v0[28] = v4;
  MEMORY[0x1D9459370](v2, v1);
  uint64_t v5 = sub_1D5AB5940();
  if (v3 < 0)
  {
    __break(1u);
  }
  else
  {
    if (v0[9])
    {
      uint64_t v9 = 0;
      do
      {
        uint64_t v10 = v0[9];
        ++v9;
        sub_1D59ABF68(v4, v0[5], v0[7], v0[8], v0[14], v0[15], v0[16]);
      }
      while (v9 != v10);
    }
    v0[29] = 0;
    uint64_t v11 = (void *)swift_task_alloc();
    v0[30] = (uint64_t)v11;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
    uint64_t v8 = sub_1D5AB5290();
    *uint64_t v11 = v0;
    v11[1] = sub_1D59AB904;
    uint64_t v5 = v0[20];
    uint64_t v6 = 0;
    uint64_t v7 = 0;
  }
  return MEMORY[0x1F4187E30](v5, v6, v7, v8);
}

uint64_t sub_1D59AB904()
{
  *(void *)(*(void *)v1 + 248) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D59ABDC8;
  }
  else {
    uint64_t v2 = sub_1D59ABA18;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D59ABA18()
{
  uint64_t v1 = (char *)v0[20];
  uint64_t v2 = v0[17];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2) != 1)
  {
    uint64_t v9 = v0[23];
    uint64_t v8 = v0[24];
    uint64_t v10 = v0[22];
    uint64_t v20 = v0[21];
    uint64_t v21 = v0[29];
    uint64_t v11 = v0[15];
    uint64_t v12 = v0[10];
    uint64_t v13 = *(void *)v1;
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v8, &v1[*(int *)(v2 + 48)], v11);
    uint64_t v14 = v12 + *(void *)(v10 + 72) * v13;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v9, v8, v11);
    uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v14, v9, v11);
    if (!__OFADD__(v21, 1))
    {
      if ((sub_1D5AB5240() & 1) == 0) {
        sub_1D59ABF68(v0[28], v0[5], v0[7], v0[8], v0[14], v0[15], v0[16]);
      }
      (*(void (**)(void, void))(v0[22] + 8))(v0[24], v0[15]);
      v0[29] = v21 + 1;
      uint64_t v15 = (void *)swift_task_alloc();
      v0[30] = v15;
      __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
      uint64_t v6 = sub_1D5AB5290();
      *uint64_t v15 = v0;
      v15[1] = sub_1D59AB904;
      uint64_t v3 = v0[20];
      uint64_t v4 = 0;
      uint64_t v5 = 0;
      return MEMORY[0x1F4187E30](v3, v4, v5, v6);
    }
    __break(1u);
LABEL_16:
    __break(1u);
    return MEMORY[0x1F4187E30](v3, v4, v5, v6);
  }
  (*(void (**)(char *, void))(v0[19] + 8))(v1, v0[18]);
  uint64_t v3 = sub_1D5AB5240();
  if ((v3 & 1) == 0)
  {
    uint64_t v16 = v0[13];
    if (v0[11] == v16)
    {
      uint64_t v17 = (uint64_t *)v0[4];
      v0[2] = v0[12];
      v0[3] = v16;
      sub_1D5AB5660();
      swift_getWitnessTable();
      uint64_t v18 = sub_1D5AB5110();
      swift_release();
      *uint64_t v17 = v18;
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v7 = (uint64_t (*)(void))v0[1];
      goto LABEL_12;
    }
    goto LABEL_16;
  }
  sub_1D5AB5600();
  sub_1D5AB5170();
  sub_1D59AE728();
  swift_allocError();
  sub_1D5AB4D40();
  swift_willThrow();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
LABEL_12:
  return v7();
}

uint64_t sub_1D59ABDC8()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D59ABE5C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2[5];
  uint64_t v6 = v2[6];
  uint64_t v7 = v2[7];
  uint64_t v8 = v2[8];
  uint64_t v9 = v2[9];
  uint64_t v10 = v2[10];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v11;
  *uint64_t v11 = v3;
  v11[1] = sub_1D598AF68;
  return sub_1D59AB5D8(a1, a2, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1D59ABF68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v42 = a4;
  uint64_t v43 = a6;
  uint64_t v40 = a3;
  uint64_t v45 = a2;
  uint64_t v46 = a1;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4C10);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v44 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = a7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v37 = sub_1D5AB5620();
  uint64_t v13 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v15 = (uint64_t *)((char *)&v37 - v14);
  uint64_t v16 = swift_getTupleTypeMetadata2();
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  char v19 = (uint64_t *)((char *)&v37 - v18);
  uint64_t v38 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v20 = *(void *)(v38 + 64);
  uint64_t v21 = MEMORY[0x1F4188790](v17);
  uint64_t v22 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  unint64_t v47 = (char *)&v37 - v23;
  uint64_t v39 = a5;
  sub_1D5AB5960();
  swift_projectBox();
  swift_beginAccess();
  sub_1D5AB5950();
  swift_endAccess();
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v15, 1, TupleTypeMetadata2) == 1)return (*(uint64_t (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v37); {
  uint64_t v25 = (char *)v15 + *(int *)(TupleTypeMetadata2 + 48);
  }
  uint64_t v26 = (char *)v19 + *(int *)(v16 + 48);
  uint64_t *v19 = *v15;
  uint64_t v27 = v38;
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
  v28(v26, v25, AssociatedTypeWitness);
  uint64_t v46 = *v19;
  unint64_t v29 = v47;
  v28(v47, (char *)v19 + *(int *)(v16 + 48), AssociatedTypeWitness);
  uint64_t v30 = sub_1D5AB51C0();
  uint64_t v31 = (uint64_t)v44;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v44, 1, 1, v30);
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v22, v29, AssociatedTypeWitness);
  unint64_t v32 = (*(unsigned __int8 *)(v27 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  unint64_t v33 = (v20 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (char *)swift_allocObject();
  *((void *)v34 + 2) = 0;
  *((void *)v34 + 3) = 0;
  uint64_t v35 = v43;
  *((void *)v34 + 4) = v39;
  *((void *)v34 + 5) = v35;
  uint64_t v36 = v40;
  *((void *)v34 + 6) = v41;
  *((void *)v34 + 7) = v36;
  *((void *)v34 + 8) = v42;
  v28(&v34[v32], v22, AssociatedTypeWitness);
  *(void *)&v34[v33] = v46;
  swift_retain();
  swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  sub_1D5AB5290();
  sub_1D59B0CF4(v31, (uint64_t)&unk_1EA725A30, (uint64_t)v34);
  sub_1D59AE9EC(v31);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v47, AssociatedTypeWitness);
}

uint64_t sub_1D59AC428(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[3] = a7;
  v7[4] = v15;
  v7[2] = a1;
  v7[5] = *(void *)(v15 - 8);
  uint64_t v10 = swift_task_alloc();
  v7[6] = v10;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))((char *)a4 + *a4);
  uint64_t v11 = (void *)swift_task_alloc();
  v7[7] = v11;
  *uint64_t v11 = v7;
  v11[1] = sub_1D59AC57C;
  return v13(v10, a6);
}

uint64_t sub_1D59AC57C()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D59AC750;
  }
  else {
    uint64_t v2 = sub_1D59AC690;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D59AC690()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v4 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v5 = (void *)v0[2];
  uint64_t v6 = (char *)v5 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  *uint64_t v5 = v4;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v6, v1, v3);
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1D59AC750()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D59AC7B4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t Collection.parallelCompactMap<A>(parallelism:transform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[4] = a5;
  v7[5] = a6;
  v7[3] = a4;
  uint64_t v13 = (void *)swift_task_alloc();
  v7[6] = v13;
  uint64_t v14 = sub_1D5AB5620();
  v7[7] = v14;
  *uint64_t v13 = v7;
  v13[1] = sub_1D59AC8BC;
  v13[8] = a6;
  v13[9] = v6;
  void v13[6] = a4;
  v13[7] = v14;
  v13[4] = a2;
  v13[5] = a3;
  v13[3] = a1;
  return MEMORY[0x1F4188298](sub_1D59AB1B4, 0, 0);
}

uint64_t sub_1D59AC8BC(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  *(void *)(*v2 + 64) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 72) = a1;
    return MEMORY[0x1F4188298](sub_1D59ACA0C, 0, 0);
  }
}

uint64_t sub_1D59ACA0C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  *(void *)(v0 + 16) = *(void *)(v0 + 72);
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 24) = v3;
  sub_1D5AB5100();
  swift_getWitnessTable();
  uint64_t v4 = sub_1D5AB4F70();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v5(v4);
}

uint64_t sub_1D59ACB18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB5620();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t Collection.parallelFilter(parallelism:predicate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return MEMORY[0x1F4188298](sub_1D59ACBB4, 0, 0);
}

uint64_t sub_1D59ACBB4()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  uint64_t v4 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v5 = (void *)swift_allocObject();
  v0[8] = v5;
  v5[2] = v1;
  v5[3] = v2;
  v5[4] = v4;
  v5[5] = v3;
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[9] = v6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *uint64_t v6 = v0;
  v6[1] = sub_1D59ACCD4;
  uint64_t v8 = v0[6];
  uint64_t v9 = v0[5];
  uint64_t v10 = v0[2];
  return Collection.parallelCompactMap<A>(parallelism:transform:)(v10, (uint64_t)&unk_1EA725A08, (uint64_t)v5, v9, AssociatedTypeWitness, v8);
}

uint64_t sub_1D59ACCD4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 80) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x1F4188298](sub_1D59AAEF0, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_1D59ACE2C(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a2;
  uint64_t v10 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  uint64_t v8 = (void *)swift_task_alloc();
  v6[6] = v8;
  *uint64_t v8 = v6;
  v8[1] = sub_1D59ACF0C;
  return v10(a2);
}

uint64_t sub_1D59ACF0C(char a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(unsigned char *)(v4 + 56) = a1 & 1;
    return MEMORY[0x1F4188298](sub_1D59AD05C, 0, 0);
  }
}

uint64_t sub_1D59AD05C()
{
  int v1 = *(unsigned __int8 *)(v0 + 56);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  if (v1 == 1)
  {
    (*(void (**)(void, void, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(*(void *)(v0 + 16), *(void *)(v0 + 24), AssociatedTypeWitness);
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = 1;
  }
  (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v3 + 56))(*(void *)(v0 + 16), v4, 1, AssociatedTypeWitness);
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1D59AD160(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v9 = (int *)v2[4];
  uint64_t v8 = v2[5];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  *uint64_t v10 = v3;
  v10[1] = sub_1D598AF68;
  return sub_1D59ACE2C(a1, a2, v9, v8, v6, v7);
}

uint64_t Collection.asyncCompactMap<A>(predicate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a4;
  v6[7] = v5;
  v6[4] = a2;
  v6[5] = a3;
  v6[3] = a1;
  uint64_t v10 = sub_1D5AB5620();
  v6[8] = v10;
  v6[9] = *(void *)(v10 - 8);
  v6[10] = swift_task_alloc();
  v6[11] = *(void *)(a4 - 8);
  v6[12] = swift_task_alloc();
  v6[13] = swift_task_alloc();
  v6[14] = *(void *)(a5 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[15] = AssociatedTypeWitness;
  v6[16] = *(void *)(AssociatedTypeWitness - 8);
  v6[17] = swift_task_alloc();
  sub_1D5AB5620();
  v6[18] = swift_task_alloc();
  v6[19] = *(void *)(a3 - 8);
  v6[20] = swift_task_alloc();
  uint64_t v12 = swift_getAssociatedTypeWitness();
  v6[21] = v12;
  v6[22] = *(void *)(v12 - 8);
  v6[23] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D59AD4E4, 0, 0);
}

uint64_t sub_1D59AD4E4()
{
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[5];
  v0[2] = sub_1D5AB4D30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v3, v4);
  sub_1D5AB4F50();
  uint64_t v5 = v0[18];
  uint64_t v6 = v0[15];
  uint64_t v7 = v0[16];
  swift_getAssociatedConformanceWitness();
  sub_1D5AB5670();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    (*(void (**)(void, void))(v0[22] + 8))(v0[23], v0[21]);
    uint64_t v8 = v0[2];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(uint64_t))v0[1];
    return v9(v8);
  }
  else
  {
    uint64_t v11 = (int *)v0[3];
    (*(void (**)(void, void, void))(v0[16] + 32))(v0[17], v0[18], v0[15]);
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))((char *)v11 + *v11);
    uint64_t v12 = (void *)swift_task_alloc();
    v0[24] = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_1D59AD754;
    uint64_t v13 = v0[17];
    uint64_t v14 = v0[10];
    return v15(v14, v13);
  }
}

uint64_t sub_1D59AD754()
{
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1D59ADB94;
  }
  else
  {
    uint64_t v2 = sub_1D59AD870;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D59AD870()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[6];
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3);
  uint64_t v6 = v0[16];
  uint64_t v5 = v0[17];
  uint64_t v7 = v0[15];
  if (v4 == 1)
  {
    uint64_t v9 = v0[8];
    uint64_t v8 = v0[9];
    (*(void (**)(void, void))(v6 + 8))(v0[17], v0[15]);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v9);
  }
  else
  {
    uint64_t v11 = v0[12];
    uint64_t v10 = v0[13];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v10, v1, v3);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v11, v10, v3);
    sub_1D5AB5100();
    sub_1D5AB50F0();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v10, v3);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  uint64_t v12 = v0[18];
  uint64_t v13 = v0[15];
  uint64_t v14 = v0[16];
  swift_getAssociatedConformanceWitness();
  sub_1D5AB5670();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    (*(void (**)(void, void))(v0[22] + 8))(v0[23], v0[21]);
    uint64_t v15 = v0[2];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = (uint64_t (*)(uint64_t))v0[1];
    return v16(v15);
  }
  else
  {
    uint64_t v18 = (int *)v0[3];
    (*(void (**)(void, void, void))(v0[16] + 32))(v0[17], v0[18], v0[15]);
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t))((char *)v18 + *v18);
    char v19 = (void *)swift_task_alloc();
    v0[24] = v19;
    void *v19 = v0;
    v19[1] = sub_1D59AD754;
    uint64_t v20 = v0[17];
    uint64_t v21 = v0[10];
    return v22(v21, v20);
  }
}

uint64_t sub_1D59ADB94()
{
  uint64_t v2 = v0[22];
  uint64_t v1 = v0[23];
  uint64_t v3 = v0[21];
  (*(void (**)(void, void))(v0[16] + 8))(v0[17], v0[15]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t Set.asyncFilter(predicate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[11] = a4;
  v5[12] = a5;
  v5[9] = a2;
  v5[10] = a3;
  v5[8] = a1;
  v5[13] = *(void *)(a4 - 8);
  v5[14] = swift_task_alloc();
  v5[15] = swift_task_alloc();
  v5[16] = swift_task_alloc();
  sub_1D5AB5620();
  v5[17] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D59ADD9C, 0, 0);
}

uint64_t sub_1D59ADD9C()
{
  uint64_t v1 = v0[10];
  v0[7] = sub_1D5AB4D50();
  if ((v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1D5AB5720();
    uint64_t result = sub_1D5AB5390();
    uint64_t v1 = v0[2];
    uint64_t v3 = v0[3];
    uint64_t v5 = v0[4];
    uint64_t v4 = v0[5];
    unint64_t v6 = v0[6];
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(v0[10] + 32);
    uint64_t v8 = v0[10];
    uint64_t v10 = *(void *)(v8 + 56);
    uint64_t v3 = v8 + 56;
    uint64_t v9 = v10;
    uint64_t v5 = ~v7;
    uint64_t v11 = -v7;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v6 = v12 & v9;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v4 = 0;
  }
  v0[18] = v1;
  v0[19] = v3;
  uint64_t v13 = v0[13];
  v0[21] = v4;
  v0[22] = v6;
  v0[20] = v5;
  if (v1 < 0)
  {
    if (sub_1D5AB5750())
    {
      sub_1D5AB5AE0();
      swift_unknownObjectRelease();
      goto LABEL_13;
    }
    uint64_t v13 = v0[13];
  }
  else
  {
    if (v6)
    {
      unint64_t v14 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v15 = v14 | (v4 << 6);
LABEL_10:
      (*(void (**)(void, unint64_t, void))(v13 + 16))(v0[17], *(void *)(v1 + 48) + *(void *)(v13 + 72) * v15, v0[11]);
LABEL_13:
      v0[23] = v4;
      v0[24] = v6;
      uint64_t v16 = v0[16];
      uint64_t v17 = v0[17];
      uint64_t v18 = v0[13];
      uint64_t v19 = v0[11];
      uint64_t v20 = (int *)v0[8];
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v17, 0, 1, v19);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v16, v17, v19);
      uint64_t v30 = (uint64_t (*)(uint64_t))((char *)v20 + *v20);
      uint64_t v21 = (void *)swift_task_alloc();
      v0[25] = v21;
      *uint64_t v21 = v0;
      v21[1] = sub_1D59AE148;
      uint64_t v22 = v0[16];
      return v30(v22);
    }
    int64_t v23 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      return result;
    }
    int64_t v24 = (unint64_t)(v5 + 64) >> 6;
    if (v23 < v24)
    {
      unint64_t v25 = *(void *)(v3 + 8 * v23);
      uint64_t v26 = v4 + 1;
      if (v25)
      {
LABEL_19:
        unint64_t v6 = (v25 - 1) & v25;
        unint64_t v15 = __clz(__rbit64(v25)) + (v26 << 6);
        uint64_t v4 = v26;
        goto LABEL_10;
      }
      uint64_t v26 = v4 + 2;
      if (v4 + 2 < v24)
      {
        unint64_t v25 = *(void *)(v3 + 8 * v26);
        if (v25) {
          goto LABEL_19;
        }
        uint64_t v26 = v4 + 3;
        if (v4 + 3 < v24)
        {
          unint64_t v25 = *(void *)(v3 + 8 * v26);
          if (v25) {
            goto LABEL_19;
          }
          uint64_t v27 = v4 + 4;
          while (v24 != v27)
          {
            unint64_t v25 = *(void *)(v3 + 8 * v27++);
            if (v25)
            {
              uint64_t v26 = v27 - 1;
              goto LABEL_19;
            }
          }
        }
      }
    }
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v13 + 56))(v0[17], 1, 1, v0[11]);
  sub_1D59AE720();
  uint64_t v28 = v0[7];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v29 = (uint64_t (*)(uint64_t))v0[1];
  return v29(v28);
}

uint64_t sub_1D59AE148(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 208) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_1D59AE640;
  }
  else
  {
    *(unsigned char *)(v4 + 216) = a1 & 1;
    uint64_t v5 = sub_1D59AE27C;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1D59AE27C()
{
  uint64_t v1 = *(void *)(v0 + 128);
  if (*(unsigned char *)(v0 + 216))
  {
    uint64_t v2 = *(void *)(v0 + 120);
    uint64_t v3 = *(void *)(v0 + 104);
    uint64_t v4 = *(void *)(v0 + 88);
    (*(void (**)(void, void, uint64_t))(v3 + 16))(*(void *)(v0 + 112), *(void *)(v0 + 128), v4);
    sub_1D5AB53A0();
    sub_1D5AB5380();
    uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v5(v2, v4);
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v5)(v1, v4);
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(void, void))(*(void *)(v0 + 104) + 8))(*(void *)(v0 + 128), *(void *)(v0 + 88));
  }
  uint64_t v7 = *(void *)(v0 + 184);
  unint64_t v8 = *(void *)(v0 + 192);
  *(void *)(v0 + 168) = v7;
  *(void *)(v0 + 176) = v8;
  uint64_t v9 = *(void *)(v0 + 144);
  if (v9 < 0)
  {
    if (sub_1D5AB5750())
    {
      sub_1D5AB5AE0();
      swift_unknownObjectRelease();
      goto LABEL_10;
    }
  }
  else
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v7 << 6);
LABEL_7:
      (*(void (**)(void, unint64_t, void))(*(void *)(v0 + 104) + 16))(*(void *)(v0 + 136), *(void *)(v9 + 48) + *(void *)(*(void *)(v0 + 104) + 72) * v11, *(void *)(v0 + 88));
LABEL_10:
      *(void *)(v0 + 184) = v7;
      *(void *)(v0 + 192) = v8;
      uint64_t v12 = *(void *)(v0 + 128);
      uint64_t v13 = *(void *)(v0 + 136);
      uint64_t v14 = *(void *)(v0 + 104);
      uint64_t v15 = *(void *)(v0 + 88);
      uint64_t v16 = *(int **)(v0 + 64);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v13, 0, 1, v15);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v12, v13, v15);
      uint64_t v27 = (uint64_t (*)(uint64_t))((char *)v16 + *v16);
      uint64_t v17 = (void *)swift_task_alloc();
      *(void *)(v0 + 200) = v17;
      *uint64_t v17 = v0;
      v17[1] = sub_1D59AE148;
      uint64_t v18 = *(void *)(v0 + 128);
      return v27(v18);
    }
    int64_t v19 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      return result;
    }
    int64_t v20 = (unint64_t)(*(void *)(v0 + 160) + 64) >> 6;
    if (v19 < v20)
    {
      uint64_t v21 = *(void *)(v0 + 152);
      unint64_t v22 = *(void *)(v21 + 8 * v19);
      uint64_t v23 = v7 + 1;
      if (v22)
      {
LABEL_16:
        unint64_t v8 = (v22 - 1) & v22;
        unint64_t v11 = __clz(__rbit64(v22)) + (v23 << 6);
        uint64_t v7 = v23;
        goto LABEL_7;
      }
      uint64_t v23 = v7 + 2;
      if (v7 + 2 < v20)
      {
        unint64_t v22 = *(void *)(v21 + 8 * v23);
        if (v22) {
          goto LABEL_16;
        }
        uint64_t v23 = v7 + 3;
        if (v7 + 3 < v20)
        {
          unint64_t v22 = *(void *)(v21 + 8 * v23);
          if (v22) {
            goto LABEL_16;
          }
          uint64_t v24 = v7 + 4;
          while (v20 != v24)
          {
            unint64_t v22 = *(void *)(v21 + 8 * v24++);
            if (v22)
            {
              uint64_t v23 = v24 - 1;
              goto LABEL_16;
            }
          }
        }
      }
    }
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 104) + 56))(*(void *)(v0 + 136), 1, 1, *(void *)(v0 + 88));
  sub_1D59AE720();
  uint64_t v25 = *(void *)(v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v26 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v26(v25);
}

uint64_t sub_1D59AE640()
{
  (*(void (**)(void, void))(v0[13] + 8))(v0[16], v0[11]);
  sub_1D59AE720();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1D59AE720()
{
  return swift_release();
}

unint64_t sub_1D59AE728()
{
  unint64_t result = qword_1EA725A20;
  if (!qword_1EA725A20)
  {
    sub_1D5AB5170();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA725A20);
  }
  return result;
}

uint64_t sub_1D59AE780()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 72) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, AssociatedTypeWitness);
  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1D59AE87C(uint64_t a1)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = (int *)v1[7];
  uint64_t v8 = v1[8];
  uint64_t v9 = (uint64_t)v1 + v4;
  uint64_t v10 = *(void *)((char *)v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  unint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *unint64_t v11 = v2;
  v11[1] = sub_1D5984480;
  return sub_1D59AC428(a1, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1D59AE9EC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4C10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static OpenLinkConstants.scheme.getter()
{
  return 0x617373656E746966;
}

uint64_t static OpenLinkConstants.encodedURLQueryItemKey.getter()
{
  return 0x556465646F636E65;
}

uint64_t static OpenLinkConstants.multiUserHost.getter()
{
  return 0x65735569746C756DLL;
}

unint64_t static OpenLinkConstants.workoutIdentifierKey.getter()
{
  return 0xD000000000000011;
}

unint64_t static OpenLinkConstants.sessionIdentifierKey.getter()
{
  return 0xD000000000000011;
}

uint64_t static OpenLinkConstants.sessionHealthKitActivityTypeKey.getter()
{
  return 0x7974697669746361;
}

uint64_t static OpenLinkConstants.sessionGoalTypeKey.getter()
{
  return 0x657079546C616F67;
}

unint64_t static OpenLinkConstants.sessionPresentConfigurationKey.getter()
{
  return 0xD000000000000014;
}

ValueMetadata *type metadata accessor for OpenLinkConstants()
{
  return &type metadata for OpenLinkConstants;
}

uint64_t MultiUserSessionIdentitiesUpdated.sessionIdentities.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB3E90();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t MultiUserSessionIdentitiesUpdated.init(sessionIdentities:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB3E90();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static MultiUserSessionIdentitiesUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for MultiUserSessionIdentitiesUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3E90();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for MultiUserSessionIdentitiesUpdated(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB3E90();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for MultiUserSessionIdentitiesUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3E90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for MultiUserSessionIdentitiesUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3E90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for MultiUserSessionIdentitiesUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3E90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for MultiUserSessionIdentitiesUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3E90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for MultiUserSessionIdentitiesUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D59AEE98);
}

uint64_t sub_1D59AEE98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3E90();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MultiUserSessionIdentitiesUpdated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D59AEF18);
}

uint64_t sub_1D59AEF18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3E90();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MultiUserSessionIdentitiesUpdated()
{
  uint64_t result = qword_1EBDE4778;
  if (!qword_1EBDE4778) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D59AEFD4()
{
  uint64_t result = sub_1D5AB3E90();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t MediaMomentEnded.mediaMoment.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB2080();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t MediaMomentEnded.init(mediaMoment:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB2080();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static MediaMomentEnded.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for MediaMomentEnded(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2080();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for MediaMomentEnded(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB2080();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for MediaMomentEnded(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2080();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for MediaMomentEnded(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2080();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for MediaMomentEnded(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2080();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for MediaMomentEnded(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2080();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaMomentEnded(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D59AF3B8);
}

uint64_t sub_1D59AF3B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2080();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MediaMomentEnded(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D59AF438);
}

uint64_t sub_1D59AF438(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2080();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MediaMomentEnded()
{
  uint64_t result = qword_1EA725A38;
  if (!qword_1EA725A38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D59AF4F4()
{
  uint64_t result = sub_1D5AB2080();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t static ProgressDisplayPreference.default()()
{
  uint64_t v0 = sub_1D5AB4450();
  MEMORY[0x1F4188790](v0);
  (*(void (**)(char *, void))(v2 + 104))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F9EB70]);
  return sub_1D5AB3BE0();
}

uint64_t ActivityMoveMode.init(_:)(uint64_t a1)
{
  return sub_1D59AF69C(a1) & 1;
}

uint64_t ActivityMoveMode.healthKitRawValue.getter(char a1)
{
  if (a1) {
    return 2;
  }
  else {
    return 1;
  }
}

uint64_t ActivityFitnessMode.init(_:)(uint64_t a1)
{
  return sub_1D59AF774(a1) & 1;
}

uint64_t sub_1D59AF69C(uint64_t a1)
{
  if (a1 == 1) {
    return 0;
  }
  if (a1 == 2) {
    return 1;
  }
  sub_1D5AB57F0();
  sub_1D5AB4E90();
  type metadata accessor for HKActivityMoveMode(0);
  sub_1D5AB58C0();
  uint64_t result = sub_1D5AB5920();
  __break(1u);
  return result;
}

uint64_t sub_1D59AF774(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) < 3) {
    return ((_BYTE)a1 - 1) & 1;
  }
  sub_1D5AB57F0();
  sub_1D5AB4E90();
  type metadata accessor for HKFitnessMode(0);
  sub_1D5AB58C0();
  uint64_t result = sub_1D5AB5920();
  __break(1u);
  return result;
}

void static ExerciseRingCompleted.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for ExerciseRingCompleted()
{
  return &type metadata for ExerciseRingCompleted;
}

unsigned char *storeEnumTagSinglePayload for HealthStoreError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D59AF930);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthStoreError()
{
  return &type metadata for HealthStoreError;
}

unint64_t sub_1D59AF96C()
{
  unint64_t result = qword_1EA725A48;
  if (!qword_1EA725A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725A48);
  }
  return result;
}

uint64_t AssetLoadStatus.init<A>(result:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3318);
  MEMORY[0x1F4188790](v2 - 8);
  unsigned int v4 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D5AB1DC0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  unint64_t v11 = (char *)v30 - v10;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v12 = sub_1D5AB5CB0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (void **)((char *)v30 - v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)v30 - v14, a1, v12);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    unint64_t v22 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v22(a1, v12);
    v22((uint64_t)v15, v12);
    return 5;
  }
  v30[0] = a1;
  uint64_t v16 = *v15;
  v30[9] = v16;
  id v17 = v16;
  char v18 = swift_dynamicCast();
  int64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  if (v18)
  {
    v19(v4, 0, 1, v5);
    int64_t v20 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v20(v11, v4, v5);
    v20(v9, v11, v5);
    if ((*(unsigned int (**)(char *, uint64_t))(v6 + 88))(v9, v5) == *MEMORY[0x1E4F9BEE0])
    {
      (*(void (**)(void, uint64_t))(v13 + 8))(v30[0], v12);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      return 4;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  else
  {
    v19(v4, 1, 1, v5);
    sub_1D59AFE38((uint64_t)v4);
  }
  swift_getErrorValue();
  uint64_t v23 = sub_1D5AB5B90();
  uint64_t v25 = v24;
  if (v23 == sub_1D5AB4DF0() && v25 == v26)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v27 = v30[0];
  }
  else
  {
    char v28 = sub_1D5AB5AF0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v27 = v30[0];
    if ((v28 & 1) == 0)
    {
      (*(void (**)(void, uint64_t))(v13 + 8))(v30[0], v12);

      return 6;
    }
  }
  swift_getErrorValue();
  uint64_t v29 = sub_1D5AB5B80();

  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v27, v12);
  if (v29 == -999) {
    return 8;
  }
  return 6;
}

uint64_t sub_1D59AFE38(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3318);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t ContentRestrictionObserver.__allocating_init(eventHub:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  ContentRestrictionObserver.init(eventHub:)(a1, a2);
  return v4;
}

void *ContentRestrictionObserver.init(eventHub:)(uint64_t a1, uint64_t a2)
{
  void (*v12)(void *__return_ptr, ValueMetadata *, uint64_t, uint64_t (*)(), uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t);
  void v14[5];

  uint64_t v3 = v2;
  v3[6] = sub_1D594B218();
  v3[2] = a1;
  v3[3] = a2;
  type metadata accessor for UnfairLock();
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectRetain();
  uint64_t v7 = (_DWORD *)swift_slowAlloc();
  *(void *)(v6 + 16) = v7;
  *uint64_t v7 = 0;
  v3[4] = v6;
  type metadata accessor for SubscriptionToken();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 24) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v9 = MEMORY[0x1E4FBC860];
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = v9;
  swift_unknownObjectWeakAssign();
  v3[5] = v8;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  uint64_t v12 = *(void (**)(void *__return_ptr, ValueMetadata *, uint64_t, uint64_t (*)(), uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a2 + 24);
  swift_retain();
  v12(v14, &type metadata for ManagedProfileEffectiveSettingsChanged, v8, sub_1D59B05DC, v11, &type metadata for ManagedProfileEffectiveSettingsChanged, &protocol witness table for ManagedProfileEffectiveSettingsChanged, ObjectType, a2);
  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  swift_release();
  return v3;
}

uint64_t sub_1D59B0060()
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1D5AB4B50();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBDE5400);
  uint64_t v1 = sub_1D5AB4B30();
  os_log_type_t v2 = sub_1D5AB5430();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_1D5947000, v1, v2, "[ContentRestrictionObserver] Recieved update that content restrictions were changed.", v3, 2u);
    MEMORY[0x1D945AAC0](v3, -1, -1);
  }

  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v5 = result;
    v6._uint64_t countAndFlagsBits = 0xD000000000000083;
    v6._object = (void *)0x80000001D5AC6E40;
    v7._object = (void *)0x80000001D5AC6ED0;
    v7._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
    Logger.trace(file:function:)(v6, v7);
    uint64_t v8 = *(void *)(v5 + 32);
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v8 + 16));
    sub_1D59B01D0(v5);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v8 + 16));
    return swift_release();
  }
  return result;
}

uint64_t sub_1D59B01D0(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB40B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = _s13SeymourClient26ContentRestrictionObserverC012queryAllowedC7RatingsShy0A4Core0C6RatingOGyF_0();
  uint64_t v7 = swift_bridgeObjectRetain();
  char v8 = sub_1D5A108A4(v7, v6);
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0)
  {
    if (qword_1EBDE5420 != -1) {
      swift_once();
    }
    uint64_t v25 = v3;
    uint64_t v26 = v2;
    uint64_t v9 = sub_1D5AB4B50();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EBDE5400);
    swift_bridgeObjectRetain_n();
    uint64_t v10 = sub_1D5AB4B30();
    os_log_type_t v11 = sub_1D5AB5430();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v28 = v24;
      *(_DWORD *)uint64_t v12 = 136446210;
      unint64_t v22 = v12 + 4;
      uint64_t v23 = v12;
      sub_1D59500C0();
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_1D5AB5360();
      unint64_t v15 = v14;
      swift_bridgeObjectRelease();
      uint64_t v27 = sub_1D5951500(v13, v15, &v28);
      sub_1D5AB5680();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      uint64_t v16 = v23;
      _os_log_impl(&dword_1D5947000, v10, v11, "[ContentRestrictionObserver] Allowed content ratings changed, updating to %{public}s", v23, 0xCu);
      uint64_t v17 = v24;
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v17, -1, -1);
      MEMORY[0x1D945AAC0](v16, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v18 = *(void *)(a1 + 24);
    uint64_t ObjectType = swift_getObjectType();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D5AB40A0();
    uint64_t v20 = v26;
    (*(void (**)(char *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v18 + 8))(v5, v26, &protocol witness table for AllowedContentRatingsUpdated, ObjectType, v18);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v20);
    *(void *)(a1 + 48) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1D594B3F4(v6);
  }
  return swift_bridgeObjectRelease();
}

uint64_t ContentRestrictionObserver.deinit()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ContentRestrictionObserver.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D59B05A4()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D59B05DC()
{
  return sub_1D59B0060();
}

uint64_t _s13SeymourClient26ContentRestrictionObserverC012queryAllowedC7RatingsShy0A4Core0C6RatingOGyF_0()
{
  id v0 = objc_msgSend(self, sel_sharedConnection);
  if (v0)
  {
    uint64_t v1 = v0;
    if (objc_msgSend(v0, sel_isExplicitContentAllowedOutAsk_, 0))
    {
      uint64_t v2 = sub_1D5AB25C0();
      uint64_t v3 = sub_1D594F32C(v2);

      swift_bridgeObjectRelease();
      return v3;
    }
    else
    {
      uint64_t v9 = sub_1D5977A2C((uint64_t)&unk_1F2DEC018);

      return v9;
    }
  }
  else
  {
    if (qword_1EBDE5420 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1D5AB4B50();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EBDE5400);
    uint64_t v6 = sub_1D5AB4B30();
    os_log_type_t v7 = sub_1D5AB5430();
    if (os_log_type_enabled(v6, v7))
    {
      char v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v8 = 0;
      _os_log_impl(&dword_1D5947000, v6, v7, "[ContentRestrictionObserver] Failed to build shared profile connection, defaulting to clean content", v8, 2u);
      MEMORY[0x1D945AAC0](v8, -1, -1);
    }

    return sub_1D5977A2C((uint64_t)&unk_1F2DEC040);
  }
}

uint64_t dispatch thunk of ContentRestrictionObserving.queryAllowedContentRatings()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for ContentRestrictionObserver()
{
  return self;
}

uint64_t method lookup function for ContentRestrictionObserver(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ContentRestrictionObserver);
}

uint64_t dispatch thunk of ContentRestrictionObserver.__allocating_init(eventHub:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t RemoteParticipantConnectionRejected.rejection.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB4490();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t RemoteParticipantConnectionRejected.init(rejection:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB4490();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static RemoteParticipantConnectionRejected.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for RemoteParticipantConnectionRejected(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4490();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for RemoteParticipantConnectionRejected(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB4490();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for RemoteParticipantConnectionRejected(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4490();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for RemoteParticipantConnectionRejected(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4490();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for RemoteParticipantConnectionRejected(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4490();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for RemoteParticipantConnectionRejected(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4490();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteParticipantConnectionRejected(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D59B0B18);
}

uint64_t sub_1D59B0B18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4490();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for RemoteParticipantConnectionRejected(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D59B0B98);
}

uint64_t sub_1D59B0B98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4490();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for RemoteParticipantConnectionRejected()
{
  uint64_t result = qword_1EBDE13B0;
  if (!qword_1EBDE13B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D59B0C54()
{
  uint64_t result = sub_1D5AB4490();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of SiriClientProtocol.evaluateStartWorkoutRequest(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1D59B0CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4C10);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D59B24E4(a1, (uint64_t)v9);
  uint64_t v10 = sub_1D5AB51C0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1D59AE9EC((uint64_t)v9);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v12 = sub_1D5AB5120();
      uint64_t v14 = v13;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1D5AB51B0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v12 = 0;
  uint64_t v14 = 0;
LABEL_6:
  uint64_t v15 = *v4;
  uint64_t v16 = (void *)(v14 | v12);
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    uint64_t v16 = v19;
    void v19[2] = v12;
    v19[3] = v14;
  }
  v18[1] = 1;
  _OWORD v18[2] = v16;
  v18[3] = v15;
  swift_task_create();
  return swift_release();
}

uint64_t withTimeout<A>(seconds:operation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  *(void *)(v5 + 40) = a3;
  *(void *)(v5 + 48) = a4;
  *(void *)(v5 + 32) = a2;
  *(double *)(v5 + 24) = a5;
  *(void *)(v5 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1D59B0EF4, 0, 0);
}

uint64_t sub_1D59B0EF4()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  long long v4 = *(_OWORD *)(v0 + 32);
  *(void *)(v3 + 16) = v1;
  *(_OWORD *)(v3 + 24) = v4;
  *(void *)(v3 + 40) = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1D599C860;
  uint64_t v6 = *(void *)(v0 + 48);
  uint64_t v7 = *(void *)(v0 + 16);
  return MEMORY[0x1F4188160](v7, 0, 0, 0xD00000000000001FLL, 0x80000001D5AC6EF0, sub_1D59B120C, v3, v6);
}

uint64_t sub_1D59B0FF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v10 = sub_1D5AB5160();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v21 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4C10);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1D5AB51C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  unint64_t v18 = (*(unsigned __int8 *)(v11 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = 0;
  *(void *)(v19 + 24) = 0;
  *(void *)(v19 + 32) = a4;
  *(void *)(v19 + 40) = a2;
  *(void *)(v19 + 48) = a3;
  *(double *)(v19 + 56) = a5;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v19 + v18, v13, v10);
  swift_retain();
  sub_1D59F48C8((uint64_t)v16, (uint64_t)&unk_1EA725A60, v19);
  return swift_release();
}

uint64_t sub_1D59B120C(uint64_t a1)
{
  return sub_1D59B0FF8(a1, *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 16), *(double *)(v1 + 40));
}

uint64_t sub_1D59B121C(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 48) = a7;
  *(void *)(v8 + 56) = a8;
  *(double *)(v8 + 40) = a2;
  *(void *)(v8 + 24) = a5;
  *(void *)(v8 + 32) = a6;
  *(void *)(v8 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1D59B1248, 0, 0);
}

uint64_t sub_1D59B1248()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 64) = v4;
  long long v5 = *(_OWORD *)(v0 + 24);
  *(void *)(v4 + 16) = v1;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + 40) = v3;
  *(void *)(v4 + 48) = v2;
  uint64_t v6 = MEMORY[0x1E4FBC848] + 8;
  sub_1D59AC7B4(v1, MEMORY[0x1E4FBC848] + 8);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1D59B1360;
  uint64_t v8 = *(void *)(v0 + 56);
  uint64_t v9 = *(void *)(v0 + 16);
  return MEMORY[0x1F4188080](v9, v8, v6, 0, 0, &unk_1EA725A70, v4, v8);
}

uint64_t sub_1D59B1360()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1D59B1470()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v1 = sub_1D5AB5160();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 64) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D59B1564(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v5 = *(void *)(sub_1D5AB5160() - 8);
  uint64_t v6 = *(void *)(v1 + 56);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v5 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v8 = swift_task_alloc();
  long long v9 = *(_OWORD *)(v1 + 40);
  *(void *)(v2 + 16) = v8;
  *(void *)uint64_t v8 = v2;
  *(void *)(v8 + 8) = sub_1D5984480;
  *(void *)(v8 + 48) = v7;
  *(void *)(v8 + 56) = v4;
  *(void *)(v8 + 40) = v6;
  *(_OWORD *)(v8 + 24) = v9;
  *(void *)(v8 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1D59B1248, 0, 0);
}

uint64_t sub_1D59B1690(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 56) = a6;
  *(void *)(v7 + 64) = a7;
  *(double *)(v7 + 48) = a1;
  *(void *)(v7 + 32) = a4;
  *(void *)(v7 + 40) = a5;
  *(void *)(v7 + 24) = a3;
  uint64_t v9 = sub_1D5AB5620();
  *(void *)(v7 + 72) = v9;
  *(void *)(v7 + 80) = *(void *)(v9 - 8);
  *(void *)(v7 + 88) = swift_task_alloc();
  *(void *)(v7 + 96) = *(void *)(a7 - 8);
  *(void *)(v7 + 104) = swift_task_alloc();
  *(void *)(v7 + 112) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4C10);
  *(void *)(v7 + 120) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D59B17F4, 0, 0);
}

uint64_t sub_1D59B17F4()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[6];
  uint64_t v5 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v6 = sub_1D5AB51C0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  v7(v1, 1, 1, v6);
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v2;
  v8[5] = v5;
  v8[6] = v4;
  swift_retain();
  v0[16] = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v9 = sub_1D5AB5290();
  sub_1D59B0CF4(v1, (uint64_t)&unk_1EA725A80, (uint64_t)v8);
  sub_1D59AE9EC(v1);
  v7(v1, 1, 1, v6);
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v2;
  v10[5] = v3;
  sub_1D59B0CF4(v1, (uint64_t)&unk_1EA725A90, (uint64_t)v10);
  sub_1D59AE9EC(v1);
  uint64_t v11 = (void *)swift_task_alloc();
  v0[17] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_1D59B1A00;
  uint64_t v12 = v0[11];
  return MEMORY[0x1F4187E30](v12, 0, 0, v9);
}

uint64_t sub_1D59B1A00()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D59B1D18;
  }
  else {
    uint64_t v2 = sub_1D59B1B14;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D59B1B14()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[8];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    (*(void (**)(uint64_t, void))(v0[10] + 8))(v1, v0[9]);
    return sub_1D5AB5920();
  }
  else
  {
    uint64_t v6 = v0[13];
    uint64_t v5 = v0[14];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v5, v1, v3);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v6, v5, v3);
    sub_1D5AB5160();
    sub_1D5AB5150();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v5, v3);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE5130);
    sub_1D5AB5280();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_1D59B1D18()
{
  v0[2] = v0[18];
  sub_1D5AB5160();
  sub_1D5AB5140();
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE5130);
  sub_1D5AB5280();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1D59B1E18(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *((void *)v2 + 2);
  uint64_t v7 = *((void *)v2 + 3);
  uint64_t v8 = *((void *)v2 + 4);
  double v9 = v2[5];
  uint64_t v10 = *((void *)v2 + 6);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v11;
  *uint64_t v11 = v3;
  v11[1] = sub_1D5984480;
  return sub_1D59B1690(v9, a1, a2, v7, v8, v10, v6);
}

uint64_t sub_1D59B1EF4(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_1D5984480;
  return v8(a1);
}

uint64_t sub_1D59B1FD0()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1D59B2010(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 40);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D598AF68;
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v6 = (void *)swift_task_alloc();
  v5[2] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_1D5984480;
  return v8(a1);
}

uint64_t sub_1D59B2134(double a1)
{
  *(double *)(v1 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1D59B2154, 0, 0);
}

uint64_t sub_1D59B2154(unint64_t a1)
{
  double v2 = *(double *)(v1 + 16) * 1000000000.0;
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v2 <= -1.0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v2 >= 1.84467441e19)
  {
LABEL_9:
    __break(1u);
    return MEMORY[0x1F4187DE0](a1);
  }
  unint64_t v3 = (unint64_t)v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1D59B2238;
  a1 = v3;
  return MEMORY[0x1F4187DE0](a1);
}

uint64_t sub_1D59B2238()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return MEMORY[0x1F4188298](sub_1D59B2368, 0, 0);
  }
}

uint64_t sub_1D59B2368()
{
  sub_1D5AB5170();
  sub_1D59AE728();
  swift_allocError();
  sub_1D5AB4D40();
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D59B2400()
{
  swift_unknownObjectRelease();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1D59B2438()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1D598AF68;
  v3[2] = v2;
  return MEMORY[0x1F4188298](sub_1D59B2154, 0, 0);
}

uint64_t sub_1D59B24E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4C10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t static PromiseConstants.defaultMaxConcurrentOperations.getter()
{
  return 5;
}

ValueMetadata *type metadata accessor for PromiseConstants()
{
  return &type metadata for PromiseConstants;
}

uint64_t AssetBundleProgressUpdated.bundleProgress.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB32E0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t AssetBundleProgressUpdated.init(bundleProgress:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB32E0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static AssetBundleProgressUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0x3FC3333333333333;
  *(unsigned char *)(a1 + 8) = 0;
}

void sub_1D59B2650(uint64_t a1@<X8>)
{
  *(void *)a1 = 0x3FC3333333333333;
  *(unsigned char *)(a1 + 8) = 0;
}

uint64_t initializeBufferWithCopyOfBuffer for AssetBundleProgressUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB32E0();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for AssetBundleProgressUpdated(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB32E0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for AssetBundleProgressUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB32E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for AssetBundleProgressUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB32E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for AssetBundleProgressUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB32E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for AssetBundleProgressUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB32E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetBundleProgressUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D59B28DC);
}

uint64_t sub_1D59B28DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB32E0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for AssetBundleProgressUpdated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D59B295C);
}

uint64_t sub_1D59B295C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB32E0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for AssetBundleProgressUpdated()
{
  uint64_t result = qword_1EBDE3A68;
  if (!qword_1EBDE3A68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D59B2A18()
{
  uint64_t result = sub_1D5AB32E0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D59B2AA4(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x616C696176616E75;
  }
  else {
    uint64_t v3 = 0x6C62616C69617661;
  }
  if (v2) {
    unint64_t v4 = 0xE900000000000065;
  }
  else {
    unint64_t v4 = 0xEB00000000656C62;
  }
  if (a2) {
    uint64_t v5 = 0x616C696176616E75;
  }
  else {
    uint64_t v5 = 0x6C62616C69617661;
  }
  if (a2) {
    unint64_t v6 = 0xEB00000000656C62;
  }
  else {
    unint64_t v6 = 0xE900000000000065;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D5AB5AF0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D59B2B58()
{
  unint64_t v0 = UserDefaultsKeys.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == UserDefaultsKeys.rawValue.getter() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1D5AB5AF0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1D59B2BF0(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEE00646572697571;
  uint64_t v3 = 0x65526E6F69746361;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x6C62616863616572;
    }
    else {
      uint64_t v5 = 0x6168636165726E75;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE900000000000065;
    }
    else {
      unint64_t v6 = 0xEB00000000656C62;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x65526E6F69746361;
  unint64_t v6 = 0xEE00646572697571;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 0x6C62616863616572;
    }
    else {
      uint64_t v3 = 0x6168636165726E75;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xE900000000000065;
    }
    else {
      unint64_t v2 = 0xEB00000000656C62;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1D5AB5AF0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t NetworkEvaluator.__allocating_init(eventHub:)(uint64_t a1, uint64_t a2)
{
  swift_allocObject();
  uint64_t v4 = sub_1D59B4C0C(a1, a2);
  swift_unknownObjectRelease();
  return v4;
}

uint64_t NetworkEvaluator.init(eventHub:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_1D59B4C0C(a1, a2);
  swift_unknownObjectRelease();
  return v2;
}

uint64_t sub_1D59B2DC4()
{
  swift_allocObject();
  swift_weakInit();
  return sub_1D5AB4540();
}

uint64_t sub_1D59B2E48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB4C50();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D5AB4C70();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v22 = v10;
    uint64_t v16 = *(void **)(Strong + 48);
    swift_retain();
    id v17 = v16;
    swift_release();
    unint64_t v18 = (void *)swift_allocObject();
    _OWORD v18[2] = a3;
    v18[3] = sub_1D59A0E40;
    void v18[4] = v14;
    aBlock[4] = sub_1D59B52FC;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D598EA50;
    aBlock[3] = &block_descriptor_6;
    uint64_t v19 = _Block_copy(aBlock);
    swift_retain();
    sub_1D5AB4C60();
    uint64_t v23 = MEMORY[0x1E4FBC860];
    sub_1D59B5340((unint64_t *)&qword_1EBDE50F0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE5100);
    sub_1D59B5388((unint64_t *)&qword_1EBDE5110, (uint64_t *)&unk_1EBDE5100);
    sub_1D5AB56F0();
    MEMORY[0x1D94598A0](0, v13, v9, v19);
    _Block_release(v19);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v22);
  }
  else
  {
    swift_retain();
  }
  return swift_release();
}

uint64_t sub_1D59B3180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1D59B3338((uint64_t)v8);
    swift_release();
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = a2;
    *(void *)(v10 + 24) = a3;
    swift_retain();
    uint64_t v11 = (void (*)(uint64_t (*)(), uint64_t))sub_1D5AB45B0();
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = sub_1D59B5308;
    *(void *)(v12 + 24) = v10;
    swift_retain();
    v11(sub_1D598A1CC, v12);
    swift_release();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return result;
}

uint64_t sub_1D59B3338@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  v22[1] = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v22 - v8;
  uint64_t v10 = sub_1D5AB4CA0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (void *)((char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = *(void **)(v2 + 48);
  *uint64_t v13 = v14;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4FBCBF0], v10);
  id v15 = v14;
  LOBYTE(v14) = sub_1D5AB4CC0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  if (v14)
  {
    *(void *)(*(void *)(v2 + 32) + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_delegate + 8) = &off_1F2DEFA68;
    swift_unknownObjectWeakAssign();
    sub_1D5A29C00();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = sub_1D59B4F54;
    *(void *)(v17 + 24) = v2;
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    unint64_t v18 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    unint64_t v19 = (v5 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v20 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v20 + v18, v7, v3);
    uint64_t v21 = (uint64_t (**)())(v20 + v19);
    *uint64_t v21 = sub_1D59B4F90;
    v21[1] = (uint64_t (*)())v17;
    swift_retain();
    sub_1D5AB4540();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D59B3628(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1D59B3650@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  v20[1] = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE2FE0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v20 - v8;
  uint64_t v10 = sub_1D5AB4CA0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (void *)((char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = *(void **)(v2 + 48);
  *uint64_t v13 = v14;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4FBCBF0], v10);
  id v15 = v14;
  LOBYTE(v14) = sub_1D5AB4CC0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  if (v14)
  {
    NetworkMonitor.queryCurrentNetwork()((uint64_t)v9);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    unint64_t v17 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v18 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v18 + v17, v7, v3);
    unint64_t v19 = (uint64_t (**)@<X0>(unsigned __int8 *@<X0>, uint64_t@<X8>))(v18
                                                                             + ((v5 + v17 + 7) & 0xFFFFFFFFFFFFFFF8));
    void *v19 = sub_1D59B5180;
    v19[1] = (uint64_t (*)@<X0>(unsigned __int8 *@<X0>, uint64_t@<X8>))v2;
    swift_retain();
    sub_1D5AB4540();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D59B38F0@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v33 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE2FD0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v28 - v10;
  uint64_t v12 = sub_1D5AB4CA0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  id v15 = (uint64_t *)((char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v16 = *a1;
  int v31 = a1[1];
  int v32 = v16;
  int v17 = a1[2];
  int v29 = a1[3];
  int v30 = v17;
  uint64_t v18 = *(void **)(v3 + 48);
  *id v15 = v18;
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FBCBF0], v12);
  id v19 = v18;
  LOBYTE(v18) = sub_1D5AB4CC0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v13 + 8))(v15, v12);
  if (v18)
  {
    NetworkMonitor.queryInterfaceAvailability()((uint64_t)v11);
    uint64_t v21 = swift_allocObject();
    swift_weakInit();
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v21;
    *(unsigned char *)(v22 + 24) = v32;
    *(unsigned char *)(v22 + 25) = v31;
    *(unsigned char *)(v22 + 26) = v30;
    *(unsigned char *)(v22 + 27) = v29;
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = sub_1D59B50B8;
    *(void *)(v23 + 24) = v22;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    unint64_t v24 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    unint64_t v25 = (v7 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v26 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v26 + v24, v9, v5);
    uint64_t v27 = (uint64_t (**)(char *))(v26 + v25);
    *uint64_t v27 = sub_1D59B5108;
    v27[1] = (uint64_t (*)(char *))v23;
    sub_1D5AB4540();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D59B3C30(unsigned __int8 *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = sub_1D5AB4CA0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v43 = *a1;
  swift_beginAccess();
  uint64_t v40 = a2 + 16;
  uint64_t Strong = swift_weakLoadStrong();
  unsigned int v39 = a3;
  if (!Strong)
  {
    int v25 = 0;
    goto LABEL_10;
  }
  uint64_t v11 = (char *)*(id *)(Strong + 32);
  swift_release();
  uint64_t v12 = *(void **)&v11[OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue];
  *uint64_t v9 = v12;
  uint64_t v13 = *MEMORY[0x1E4FBCBF0];
  uint64_t v14 = *(void (**)(void *, uint64_t, uint64_t))(v7 + 104);
  v14(v9, v13, v6);
  id v15 = v12;
  char v16 = sub_1D5AB4CC0();
  int v17 = *(uint64_t (**)(void *, uint64_t))(v7 + 8);
  uint64_t result = v17(v9, v6);
  if ((v16 & 1) == 0)
  {
    __break(1u);
    goto LABEL_34;
  }
  int v19 = *(unsigned __int8 *)(*(void *)&v11[OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_coreTelephonyObserver]
                           + OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_isCellularDataEnabled);

  if (v19 != 1 || (swift_beginAccess(), (uint64_t v20 = swift_weakLoadStrong()) == 0))
  {
    int v25 = 0;
    goto LABEL_8;
  }
  uint64_t v21 = (char *)*(id *)(v20 + 32);
  swift_release();
  uint64_t v22 = *(void **)&v21[OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue];
  *uint64_t v9 = v22;
  v14(v9, v13, v6);
  id v23 = v22;
  char v24 = sub_1D5AB4CC0();
  uint64_t result = v17(v9, v6);
  if ((v24 & 1) == 0)
  {
LABEL_34:
    __break(1u);
    return result;
  }
  sub_1D5A27F90(v42);

  int v25 = LOBYTE(v42[0]) == 0;
LABEL_8:
  a3 = v39;
LABEL_10:
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_1D5AB4B50();
  __swift_project_value_buffer(v26, (uint64_t)qword_1EBDE5400);
  uint64_t v27 = sub_1D5AB4B30();
  os_log_type_t v28 = sub_1D5AB5430();
  unsigned int v29 = HIBYTE(a3);
  if (os_log_type_enabled(v27, v28))
  {
    HIDWORD(v38) = v25;
    uint64_t v30 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    v42[0] = v31;
    *(_DWORD *)uint64_t v30 = 136446722;
    uint64_t v32 = 0x6C62616863616572;
    if (v29 == 1)
    {
      unint64_t v33 = 0xE900000000000065;
    }
    else
    {
      uint64_t v32 = 0x6168636165726E75;
      unint64_t v33 = 0xEB00000000656C62;
    }
    if (v29) {
      uint64_t v34 = v32;
    }
    else {
      uint64_t v34 = 0x65526E6F69746361;
    }
    if (v29) {
      unint64_t v35 = v33;
    }
    else {
      unint64_t v35 = 0xEE00646572697571;
    }
    uint64_t v41 = sub_1D5951500(v34, v35, v42);
    sub_1D5AB5680();
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 12) = 2082;
    if (v43) {
      uint64_t v36 = 0x616C696176616E75;
    }
    else {
      uint64_t v36 = 0x6C62616C69617661;
    }
    if (v43) {
      unint64_t v37 = 0xEB00000000656C62;
    }
    else {
      unint64_t v37 = 0xE900000000000065;
    }
    uint64_t v41 = sub_1D5951500(v36, v37, v42);
    sub_1D5AB5680();
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 22) = 1026;
    int v25 = HIDWORD(v38);
    LODWORD(v41) = HIDWORD(v38);
    sub_1D5AB5680();
    _os_log_impl(&dword_1D5947000, v27, v28, "Evaluating network conditions.\nCurrent network status: %{public}s\nInterface availability: %{public}s\nCellular availability: %{BOOL,public}d", (uint8_t *)v30, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v31, -1, -1);
    MEMORY[0x1D945AAC0](v30, -1, -1);

    a3 = v39;
  }
  else
  {
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    LOWORD(v41) = a3 & 0x1FF;
    BYTE2(v41) = BYTE2(a3) & 1;
    BYTE3(v41) = v29;
    unsigned __int8 v44 = v43;
    sub_1D59B4158((uint64_t)&v41, &v44, v25);
    return swift_release();
  }
  return result;
}

void sub_1D59B4158(uint64_t a1, unsigned __int8 *a2, int a3)
{
  uint64_t v4 = v3;
  int v50 = a3;
  uint64_t v7 = sub_1D5AB4CA0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)((char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v11 = *(unsigned __int8 *)(a1 + 3);
  int v51 = *a2;
  uint64_t v12 = *(void **)(v4 + 48);
  *uint64_t v10 = v12;
  unsigned int v13 = *MEMORY[0x1E4FBCBF0];
  uint64_t v14 = *(void (**)(void *, void, uint64_t))(v8 + 104);
  v14(v10, *MEMORY[0x1E4FBCBF0], v7);
  id v15 = v12;
  LOBYTE(v12) = sub_1D5AB4CC0();
  char v16 = *(char **)(v8 + 8);
  ((void (*)(void *, uint64_t))v16)(v10, v7);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_28:
    swift_once();
    goto LABEL_6;
  }
  char v48 = (void (*)(void *, uint64_t))v16;
  unint64_t v49 = v14;
  int v47 = v11;
  if (v11 == 1)
  {
    swift_bridgeObjectRelease();
    LODWORD(v16) = 0;
  }
  else
  {
    char v17 = sub_1D5AB5AF0();
    swift_bridgeObjectRelease();
    LODWORD(v16) = (v17 & 1) == 0;
  }
  if (qword_1EBDE5420 != -1) {
    goto LABEL_28;
  }
LABEL_6:
  uint64_t v18 = sub_1D5AB4B50();
  __swift_project_value_buffer(v18, (uint64_t)qword_1EBDE5400);
  swift_retain_n();
  int v19 = sub_1D5AB4B30();
  int v20 = sub_1D5AB5430();
  if (os_log_type_enabled(v19, (os_log_type_t)v20))
  {
    int v43 = v20;
    os_log_t v44 = v19;
    unsigned int v46 = v13;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    uint64_t v53 = v42;
    *(_DWORD *)uint64_t v21 = 136447234;
    int v45 = (int)v16;
    uint64_t v22 = sub_1D5AB3120();
    uint64_t v52 = sub_1D5951500(v22, v23, &v53);
    sub_1D5AB5680();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2082;
    if (v51) {
      uint64_t v24 = 0x616C696176616E75;
    }
    else {
      uint64_t v24 = 0x6C62616C69617661;
    }
    if (v51) {
      unint64_t v25 = 0xEB00000000656C62;
    }
    else {
      unint64_t v25 = 0xE900000000000065;
    }
    uint64_t v52 = sub_1D5951500(v24, v25, &v53);
    sub_1D5AB5680();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 22) = 2082;
    if (v47)
    {
      unint64_t v26 = 0xE900000000000065;
      uint64_t v27 = 0x6C62616863616572;
      if (v47 != 1)
      {
        uint64_t v27 = 0x6168636165726E75;
        unint64_t v26 = 0xEB00000000656C62;
      }
    }
    else
    {
      uint64_t v27 = 0x65526E6F69746361;
      unint64_t v26 = 0xEE00646572697571;
    }
    uint64_t v52 = sub_1D5951500(v27, v26, &v53);
    sub_1D5AB5680();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 32) = 1026;
    char v16 = *(char **)(v4 + 32);
    os_log_type_t v28 = *(void **)&v16[OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue];
    *uint64_t v10 = v28;
    v49(v10, v46, v7);
    id v29 = v28;
    char v30 = sub_1D5AB4CC0();
    v48(v10, v7);
    if ((v30 & 1) == 0)
    {
      __break(1u);
      return;
    }
    int v31 = *(unsigned __int8 *)(*(void *)&v16[OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_wifiObserver]
                             + OBJC_IVAR____TtC13SeymourClient12WiFiObserver_isEnabled);
    swift_release();
    LODWORD(v52) = v31;
    sub_1D5AB5680();
    swift_release();
    *(_WORD *)(v21 + 38) = 1026;
    LODWORD(v52) = v50 & 1;
    sub_1D5AB5680();
    os_log_t v32 = v44;
    _os_log_impl(&dword_1D5947000, v44, (os_log_type_t)v43, "Cached network conditions updated\nNetwork conditions:%{public}s\nInterface availability: %{public}s\nNetwork status: %{public}s\nWi-Fi enabled: %{BOOL,public}d\nCellular availability:%{BOOL,public}d", (uint8_t *)v21, 0x2Cu);
    uint64_t v33 = v42;
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v33, -1, -1);
    MEMORY[0x1D945AAC0](v21, -1, -1);

    LOBYTE(v16) = v45;
  }
  else
  {

    swift_release_n();
  }
  uint64_t v34 = *(void *)(v4 + 40);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v34 + 16));
  if (*(unsigned __int8 *)(v4 + 64) <= 1u)
  {
    uint64_t v35 = sub_1D5AB3130();
    uint64_t v37 = v36;
    if (v35 == sub_1D5AB3130() && v37 == v38)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v39 = sub_1D5AB5AF0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v39 & 1) == 0)
      {
        uint64_t v40 = *(void *)(v4 + 24);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v40 + 8))(ObjectType, &type metadata for NetworkConditionsChanged, &protocol witness table for NetworkConditionsChanged, ObjectType, v40);
      }
    }
  }
  *(unsigned char *)(v4 + 64) = (_BYTE)v16;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v34 + 16));
}

uint64_t NetworkEvaluator.deinit()
{
  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  return v0;
}

uint64_t NetworkEvaluator.__deallocating_deinit()
{
  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t NetworkEvaluator.queryNetworkConditions()()
{
  uint64_t v1 = *(void *)(v0 + 40);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 64);
  os_unfair_lock_unlock(v2);
  return v3;
}

uint64_t sub_1D59B4834()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 40);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v2 + 16));
  uint64_t v3 = *(unsigned __int8 *)(v1 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 16));
  return v3;
}

uint64_t sub_1D59B4870()
{
  return sub_1D59B48E8("Airplane mode changed, updating cached network conditions", (uint64_t)&unk_1F2DEFBB8, (uint64_t)sub_1D598A1CC);
}

uint64_t sub_1D59B4898()
{
  return sub_1D59B48E8("Cellular data state changed, updating cached network conditions", (uint64_t)&unk_1F2DEFB90, (uint64_t)sub_1D598A1CC);
}

uint64_t sub_1D59B48C0()
{
  return sub_1D59B48E8("Network changed, updating cached network conditions", (uint64_t)&unk_1F2DEFAA0, (uint64_t)sub_1D59893E0);
}

uint64_t sub_1D59B48E8(const char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1D5AB4B50();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EBDE5400);
  uint64_t v10 = sub_1D5AB4B30();
  os_log_type_t v11 = sub_1D5AB5430();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_1D5947000, v10, v11, a1, v12, 2u);
    MEMORY[0x1D945AAC0](v12, -1, -1);
  }

  sub_1D59B3650((uint64_t)v8);
  unsigned int v13 = (void (*)(uint64_t, uint64_t))sub_1D5AB45B0();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 0;
  *(void *)(v14 + 24) = 0;
  v13(a3, v14);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1D59B4AD4(char *a1, uint64_t a2, uint64_t a3)
{
  char v5 = *a1;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  *(unsigned char *)(v6 + 32) = v5;
  swift_retain();
  return sub_1D5AB4540();
}

void sub_1D59B4B70(void (*a1)(void **), uint64_t a2, void (*a3)(void **__return_ptr, char *), uint64_t a4, char *a5)
{
  char v7 = *a5;
  a3(&v8, &v7);
  uint64_t v6 = v8;
  char v9 = 0;
  a1(&v8);
  sub_1D596EA00(v6, 0);
}

uint64_t sub_1D59B4C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v21 = a2;
  uint64_t v6 = sub_1D5AB5490();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  char v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D5AB5470();
  MEMORY[0x1F4188790](v10);
  uint64_t v11 = sub_1D5AB4C70();
  MEMORY[0x1F4188790](v11 - 8);
  v20[1] = a1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  v20[0] = sub_1D59513F0();
  swift_unknownObjectRetain();
  sub_1D5AB4C60();
  uint64_t v22 = MEMORY[0x1E4FBC860];
  sub_1D59B5340(&qword_1EBDE32F0, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE31C0);
  sub_1D59B5388(&qword_1EBDE31C8, &qword_1EBDE31C0);
  sub_1D5AB56F0();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCC58], v6);
  uint64_t v12 = (void *)sub_1D5AB54C0();
  *(void *)(v3 + 48) = v12;
  objc_allocWithZone((Class)type metadata accessor for NetworkMonitor());
  id v13 = v12;
  id v14 = sub_1D5A2BBD0(v13);

  *(void *)(v3 + 32) = v14;
  type metadata accessor for SubscriptionToken();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 24) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v16 = MEMORY[0x1E4FBC860];
  *(void *)(v15 + 24) = v21;
  *(void *)(v15 + 32) = v16;
  swift_unknownObjectWeakAssign();
  *(void *)(v3 + 56) = v15;
  type metadata accessor for UnfairLock();
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = (_DWORD *)swift_slowAlloc();
  *(void *)(v17 + 16) = v18;
  *uint64_t v18 = 0;
  *(void *)(v3 + 40) = v17;
  *(unsigned char *)(v3 + 64) = 2;
  return v3;
}

uint64_t sub_1D59B4F14()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D59B4F4C(uint64_t a1, uint64_t a2)
{
  return sub_1D59B2E48(a1, a2, v2);
}

uint64_t sub_1D59B4F58()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D59B4F90()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1D59B4FB8()
{
  return objectdestroy_7Tm(&qword_1EBDE4E10);
}

uint64_t sub_1D59B4FC4(uint64_t a1, uint64_t a2)
{
  return sub_1D59B51F0(a1, a2, &qword_1EBDE4E10, sub_1D5986CB0);
}

uint64_t type metadata accessor for NetworkEvaluator()
{
  return self;
}

uint64_t method lookup function for NetworkEvaluator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NetworkEvaluator);
}

uint64_t dispatch thunk of NetworkEvaluator.__allocating_init(eventHub:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of NetworkEvaluator.activate()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of NetworkEvaluator.activateOnQueue()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t sub_1D59B5080()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 28, 7);
}

uint64_t sub_1D59B50B8(unsigned __int8 *a1)
{
  if (*(unsigned char *)(v1 + 26)) {
    int v2 = 0x10000;
  }
  else {
    int v2 = 0;
  }
  int v3 = v2 | (*(unsigned __int8 *)(v1 + 27) << 24);
  if (*(unsigned char *)(v1 + 25)) {
    int v4 = 256;
  }
  else {
    int v4 = 0;
  }
  return sub_1D59B3C30(a1, *(void *)(v1 + 16), v3 | v4 | *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_1D59B5108(char *a1)
{
  return sub_1D59B4AD4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1D59B5110()
{
  return objectdestroy_7Tm((uint64_t *)&unk_1EBDE2FD0);
}

uint64_t sub_1D59B511C(uint64_t a1, uint64_t a2)
{
  return sub_1D59B51F0(a1, a2, (uint64_t *)&unk_1EBDE2FD0, sub_1D5986EB8);
}

uint64_t sub_1D59B513C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 33, 7);
}

void sub_1D59B5174(void (*a1)(void **), uint64_t a2)
{
  sub_1D59B4B70(a1, a2, *(void (**)(void **__return_ptr, char *))(v2 + 16), *(void *)(v2 + 24), (char *)(v2 + 32));
}

uint64_t sub_1D59B5180@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 v2 = a1[1];
  unsigned __int8 v3 = a1[2];
  unsigned __int8 v4 = a1[3];
  v6[0] = *a1;
  v6[1] = v2;
  v6[2] = v3;
  v6[3] = v4;
  return sub_1D59B38F0(v6, a2);
}

uint64_t sub_1D59B51C4()
{
  return objectdestroy_7Tm((uint64_t *)&unk_1EBDE2FE0);
}

uint64_t sub_1D59B51D0(uint64_t a1, uint64_t a2)
{
  return sub_1D59B51F0(a1, a2, (uint64_t *)&unk_1EBDE2FE0, sub_1D5986E68);
}

uint64_t sub_1D59B51F0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v4 + v8;
  uint64_t v10 = (uint64_t *)(v4 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  return a4(a1, a2, v9, v11, v12);
}

uint64_t sub_1D59B52BC()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D59B52FC()
{
  return sub_1D59B3180(v0[2], v0[3], v0[4]);
}

uint64_t sub_1D59B5308(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_1D59B5340(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D59B5388(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static Promise.parallel(queue:maxConcurrent:_:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  sub_1D5AB45D0();
  uint64_t v8 = sub_1D5AB5100();
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_1D59B5484(a1, a2, a3, v8, WitnessTable, a4);
}

uint64_t sub_1D59B5484@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  v20[0] = a2;
  v20[1] = a6;
  uint64_t v10 = *(void *)(a4 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v14);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v16 = (v11 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = (char *)swift_allocObject();
  *((void *)v17 + 2) = a3;
  *((void *)v17 + 3) = a4;
  *((void *)v17 + 4) = a5;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v17[v15], v12, a4);
  *(void *)&v17[v16] = v20[0];
  *(void *)&v17[(v16 + 15) & 0xFFFFFFFFFFFFFFF8] = a1;
  sub_1D5AB5100();
  id v18 = a1;
  return sub_1D5AB4540();
}

uint64_t static Promise.parallel<A>(queue:maxConcurrent:_:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  return sub_1D59B5484(a1, a2, a3, a4, *(void *)(a5 + 8), a6);
}

void sub_1D59B5610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE4070);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v63 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v59 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v58 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1D5AB4C50();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  char v54 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1D5AB4C70();
  uint64_t v53 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v52 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a1;
  *(void *)(v19 + 24) = a2;
  uint64_t v51 = v19;
  swift_retain();
  dispatch_group_t v62 = dispatch_group_create();
  type metadata accessor for UnfairLock();
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = (_DWORD *)swift_slowAlloc();
  uint64_t v64 = v20;
  *(void *)(v20 + 16) = v21;
  *uint64_t v21 = 0;
  uint64_t v61 = swift_allocObject();
  *(void *)(v61 + 16) = 0;
  uint64_t v60 = swift_allocObject();
  *(void *)(v60 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a3;
  *(void *)(v22 + 24) = 0;
  if (a4 < 0)
  {
LABEL_13:
    __break(1u);
  }
  else
  {
    uint64_t v23 = v22;
    uint64_t v47 = v17;
    uint64_t v48 = v15;
    uint64_t v49 = v14;
    uint64_t v50 = a5;
    swift_bridgeObjectRetain();
    uint64_t v24 = (uint64_t)v63;
    uint64_t v25 = v64;
    if (a4)
    {
      swift_beginAccess();
      unint64_t v26 = v58;
      uint64_t v27 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 56);
      os_log_type_t v28 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
      uint64_t v57 = (void (**)(char *, uint64_t, uint64_t))(v59 + 32);
      uint64_t v55 = v59 + 16;
      unint64_t v56 = (void (**)(char *, uint64_t))(v59 + 8);
      while (1)
      {
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v25 + 16));
        uint64_t v29 = *(void *)(v23 + 16);
        unint64_t v30 = *(void *)(v23 + 24);
        unint64_t v31 = *(void *)(v29 + 16);
        if (v30 == v31)
        {
          uint64_t v32 = 1;
        }
        else
        {
          if (v30 >= v31)
          {
            __break(1u);
            goto LABEL_13;
          }
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v59 + 16))(v24, v29+ ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))+ *(void *)(v59 + 72) * v30, v12);
          uint64_t v32 = 0;
          *(void *)(v23 + 24) = v30 + 1;
        }
        (*v27)(v24, v32, 1, v12);
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v25 + 16));
        if ((*v28)(v24, 1, v12) == 1)
        {
          sub_1D59B83B8(v24);
          if (!--a4) {
            break;
          }
        }
        else
        {
          (*v57)(v26, v24, v12);
          dispatch_group_t v33 = v62;
          dispatch_group_enter(v62);
          uint64_t v34 = (void *)swift_allocObject();
          uint64_t v35 = v60;
          v34[2] = v25;
          v34[3] = v35;
          void v34[4] = v61;
          v34[5] = v23;
          v34[6] = v33;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          uint64_t v36 = v33;
          uint64_t v37 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_1D5AB45B0();
          uint64_t v38 = swift_allocObject();
          *(void *)(v38 + 16) = sub_1D59B8470;
          *(void *)(v38 + 24) = v34;
          swift_retain();
          v37(sub_1D59893E0, v38);
          uint64_t v24 = (uint64_t)v63;
          uint64_t v25 = v64;
          swift_release();
          swift_release();
          swift_release();
          (*v56)(v26, v12);
          if (!--a4) {
            break;
          }
        }
      }
    }
    char v39 = (void *)swift_allocObject();
    uint64_t v40 = v60;
    v39[2] = v61;
    v39[3] = sub_1D59A0F94;
    v39[4] = v51;
    v39[5] = v40;
    aBlock[4] = sub_1D59B8460;
    aBlock[5] = v39;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D598EA50;
    aBlock[3] = &block_descriptor_7;
    uint64_t v41 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    uint64_t v42 = v52;
    sub_1D5AB4C60();
    uint64_t v65 = MEMORY[0x1E4FBC860];
    sub_1D59903E8();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE5100);
    sub_1D5990440();
    int v43 = v54;
    uint64_t v44 = v49;
    sub_1D5AB56F0();
    dispatch_group_t v45 = v62;
    sub_1D5AB5460();
    _Block_release(v41);

    swift_release();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v43, v44);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v42, v47);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
}

uint64_t sub_1D59B5CF4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v40 = a5;
  dispatch_group_t v45 = a3;
  uint64_t v14 = sub_1D5AB4C50();
  uint64_t v41 = *(void *)(v14 - 8);
  uint64_t v42 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v38 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_1D5AB4C70();
  uint64_t v37 = *(void *)(v39 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v39);
  uint64_t v36 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = *(void *)(a7 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (void *)swift_allocObject();
  void v20[2] = a6;
  v20[3] = a7;
  v20[4] = a8;
  void v20[5] = a1;
  uint64_t v35 = v20;
  v20[6] = a2;
  swift_retain();
  uint64_t v21 = dispatch_group_create();
  type metadata accessor for UnfairLock();
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = (_DWORD *)swift_slowAlloc();
  *(void *)(v22 + 16) = v23;
  *uint64_t v23 = 0;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = 0;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = sub_1D5AB50B0();
  swift_getAssociatedTypeWitness();
  uint64_t v26 = swift_allocBox();
  uint64_t v43 = v27;
  (*(void (**)(char *, void *, uint64_t))(v44 + 16))(v19, v45, a7);
  uint64_t result = sub_1D5AB4F50();
  if (a4 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a4; --a4)
      sub_1D59B6484(v22, v26, v21, v25, v24, a6, a7, a8);
    uint64_t v29 = (void *)swift_allocObject();
    v29[2] = a6;
    v29[3] = a7;
    v29[4] = a8;
    v29[5] = v24;
    unint64_t v30 = v35;
    v29[6] = sub_1D59B85BC;
    v29[7] = v30;
    v29[8] = v25;
    aBlock[4] = sub_1D59B886C;
    aBlock[5] = v29;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D598EA50;
    aBlock[3] = &block_descriptor_94;
    dispatch_group_t v45 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    unint64_t v31 = v36;
    sub_1D5AB4C60();
    uint64_t v46 = MEMORY[0x1E4FBC860];
    sub_1D59903E8();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE5100);
    sub_1D5990440();
    uint64_t v32 = v38;
    uint64_t v33 = v42;
    sub_1D5AB56F0();
    uint64_t v34 = v45;
    sub_1D5AB5460();
    _Block_release(v34);

    swift_release();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v32, v33);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v31, v39);
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1D59B6180(uint64_t a1, uint64_t a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v25 = a5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE4070);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 16));
  uint64_t v16 = 1;
  uint64_t result = swift_beginAccess();
  uint64_t v18 = *(void *)(a2 + 16);
  unint64_t v19 = *(void *)(a2 + 24);
  unint64_t v20 = *(void *)(v18 + 16);
  if (v19 != v20)
  {
    if (v19 >= v20)
    {
      __break(1u);
      return result;
    }
    (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v11, v18+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v19, v12);
    uint64_t v16 = 0;
    *(void *)(a2 + 24) = v19 + 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v16, 1, v12);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 16));
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1) {
    return sub_1D59B83B8((uint64_t)v11);
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  dispatch_group_enter(a3);
  uint64_t v21 = (void *)swift_allocObject();
  void v21[2] = a1;
  v21[3] = a4;
  v21[4] = v25;
  v21[5] = a2;
  v21[6] = a3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v22 = a3;
  uint64_t v23 = (void (*)(uint64_t (*)(), uint64_t))sub_1D5AB45B0();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = sub_1D59B8470;
  *(void *)(v24 + 24) = v21;
  swift_retain();
  v23(sub_1D598A1CC, v24);
  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_1D59B6484(uint64_t a1, uint64_t a2, NSObject *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v35 = a4;
  uint64_t v36 = a5;
  dispatch_group_t v37 = a3;
  uint64_t v38 = a1;
  uint64_t v12 = sub_1D5AB45D0();
  uint64_t v13 = sub_1D5AB5620();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v31 - v16;
  uint64_t v18 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v15);
  unint64_t v20 = (char *)&v31 - v19;
  uint64_t v32 = a2;
  uint64_t v21 = swift_projectBox();
  uint64_t v39 = a6;
  uint64_t v40 = a7;
  uint64_t v33 = a7;
  uint64_t v34 = a8;
  uint64_t v22 = v38;
  uint64_t v41 = a8;
  uint64_t v42 = v21;
  sub_1D59F2B10((void (*)(void))sub_1D59B849C);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v17, 1, v12) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v17, v12);
  dispatch_group_t v24 = v37;
  dispatch_group_enter(v37);
  uint64_t v25 = (void *)swift_allocObject();
  uint64_t v27 = v32;
  uint64_t v26 = v33;
  id v25[2] = a6;
  _OWORD v25[3] = v26;
  uint64_t v28 = v35;
  v25[4] = v34;
  v25[5] = v22;
  uint64_t v29 = v36;
  v25[6] = v28;
  v25[7] = v29;
  v25[8] = v27;
  v25[9] = v24;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  unint64_t v30 = v24;
  sub_1D5AB45A0();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v12);
}

uint64_t sub_1D59B6720()
{
  return swift_endAccess();
}

void sub_1D59B67E4(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, NSObject *a7)
{
  char v13 = a2 & 1;
  uint64_t v14 = (char **)(a4 + 16);
  uint64_t v15 = (void **)(a5 + 16);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a3 + 16));
  sub_1D59B6978(a1, v13, v14, v15);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a3 + 16));
  sub_1D59B6180(a3, a6, a7, a4, a5);
  dispatch_group_leave(a7);
}

void sub_1D59B68A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, NSObject *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16 = a3 + 16;
  uint64_t v17 = (void **)(a4 + 16);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a2 + 16));
  sub_1D59B6A78(a1, v16, v17, a7);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a2 + 16));
  sub_1D59B6484(a2, a5, a6, a3, a4, a7, a8, a9);
  dispatch_group_leave(a6);
}

void sub_1D59B6978(void *a1, char a2, char **a3, void **a4)
{
  if (a2)
  {
    swift_beginAccess();
    uint64_t v12 = *a4;
    *a4 = a1;
    id v13 = a1;
  }
  else
  {
    swift_beginAccess();
    char v5 = *a3;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a3 = v5;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      char v5 = sub_1D5A76518(0, *((void *)v5 + 2) + 1, 1, v5);
      *a3 = v5;
    }
    unint64_t v8 = *((void *)v5 + 2);
    unint64_t v7 = *((void *)v5 + 3);
    unint64_t v9 = v8 + 1;
    if (v8 >= v7 >> 1)
    {
      char v5 = sub_1D5A76518((char *)(v7 > 1), v8 + 1, 1, v5);
      *a3 = v5;
    }
    *((void *)v5 + 2) = v9;
    swift_endAccess();
  }
}

void sub_1D59B6A78(uint64_t a1, uint64_t a2, void **a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v19 - v11;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v13 = sub_1D5AB5CB0();
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (void **)((char *)&v19 - v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v19 - v14, a1, v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = *v15;
    swift_beginAccess();
    uint64_t v18 = *a3;
    *a3 = v17;
  }
  else
  {
    (*(void (**)(char *, void **, uint64_t))(v7 + 32))(v12, v15, a4);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, a4);
    swift_beginAccess();
    sub_1D5AB5100();
    sub_1D5AB50F0();
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, a4);
  }
}

void sub_1D59B6CD4(uint64_t a1, void (*a2)(void *, uint64_t))
{
  swift_beginAccess();
  uint64_t v4 = *(void **)(a1 + 16);
  if (v4)
  {
    id v5 = v4;
    a2(v4, 1);
  }
  else
  {
    swift_beginAccess();
    uint64_t v6 = swift_bridgeObjectRetain();
    a2((void *)v6, 0);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1D59B6D88@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  v19[1] = a6;
  uint64_t v11 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  uint64_t v14 = swift_allocBox();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, a4);
  sub_1D5AB4F50();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_1D5AB4D30();
  sub_1D5AB53C0();
  sub_1D5AB5100();
  sub_1D5AB5080();
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a3;
  v16[3] = a4;
  v16[4] = a5;
  uint64_t v16[5] = v14;
  v16[6] = v15;
  v16[7] = a1;
  id v17 = a1;
  return sub_1D5AB4540();
}

uint64_t sub_1D59B6F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a6;
  v16[3] = a7;
  v16[4] = a8;
  uint64_t v16[5] = a1;
  v16[6] = a2;
  swift_retain();
  sub_1D59B7024(a3, (void (*)(uint64_t, void))sub_1D59B85BC, (uint64_t)v16, a4, a5, a6, a7, a8);
  return swift_release();
}

uint64_t sub_1D59B7024(uint64_t a1, void (*a2)(uint64_t, void), uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a5;
  uint64_t v33 = a4;
  uint64_t v34 = a2;
  uint64_t v35 = a3;
  uint64_t v29 = a6;
  uint64_t v11 = sub_1D5AB45D0();
  uint64_t v28 = sub_1D5AB5620();
  uint64_t v12 = *(void *)(v28 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v28);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v16 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v27 - v17;
  uint64_t v30 = a8;
  swift_getAssociatedTypeWitness();
  uint64_t v31 = a1;
  swift_projectBox();
  swift_beginAccess();
  swift_getAssociatedConformanceWitness();
  sub_1D5AB5670();
  swift_endAccess();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, v11) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v28);
    swift_beginAccess();
    uint64_t v19 = swift_bridgeObjectRetain();
    v34(v19, 0);
    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v15, v11);
    uint64_t v21 = (void *)swift_allocObject();
    void v21[2] = v29;
    v21[3] = a7;
    uint64_t v22 = v31;
    v21[4] = v30;
    uint64_t v23 = v32;
    v21[5] = v33;
    v21[6] = v23;
    dispatch_group_t v24 = v34;
    uint64_t v25 = v35;
    v21[7] = v22;
    v21[8] = v24;
    v21[9] = v25;
    swift_retain();
    id v26 = v23;
    swift_retain();
    swift_retain();
    sub_1D5AB45A0();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v11);
  }
}

void sub_1D59B7330(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(id, uint64_t), uint64_t a6, uint64_t a7, char *a8, uint64_t a9)
{
  uint64_t v41 = a8;
  uint64_t v42 = a4;
  uint64_t v48 = a5;
  uint64_t v49 = a6;
  uint64_t v43 = a2;
  uint64_t v44 = a3;
  uint64_t v11 = sub_1D5AB4C50();
  uint64_t v47 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1D5AB4C70();
  uint64_t v45 = *(void *)(v14 - 8);
  uint64_t v46 = v14;
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(a7 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v15);
  uint64_t v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v39 - v22;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v24 = sub_1D5AB5CB0();
  MEMORY[0x1F4188790](v24);
  id v26 = (id *)((char *)&v39 - v25);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))((char *)&v39 - v25, a1, v24);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    id v28 = *v26;
    id v29 = *v26;
    v48(v28, 1);
  }
  else
  {
    uint64_t v40 = a9;
    uint64_t v30 = v43;
    (*(void (**)(char *, id *, uint64_t))(v18 + 32))(v23, v26, a7);
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v23, a7);
    swift_beginAccess();
    sub_1D5AB5100();
    sub_1D5AB50F0();
    swift_endAccess();
    uint64_t v31 = (void *)swift_allocObject();
    uint64_t v32 = v41;
    void v31[2] = a7;
    v31[3] = v32;
    uint64_t v41 = v23;
    uint64_t v33 = v18;
    uint64_t v34 = v11;
    uint64_t v35 = v42;
    v31[4] = v40;
    v31[5] = v35;
    uint64_t v36 = v49;
    v31[6] = v48;
    v31[7] = v36;
    dispatch_group_t v37 = v44;
    v31[8] = v30;
    v31[9] = v37;
    aBlock[4] = sub_1D59B86B4;
    aBlock[5] = v31;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D598EA50;
    aBlock[3] = &block_descriptor_78;
    uint64_t v38 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    v37;
    sub_1D5AB4C60();
    uint64_t v50 = MEMORY[0x1E4FBC860];
    sub_1D59903E8();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE5100);
    sub_1D5990440();
    sub_1D5AB56F0();
    MEMORY[0x1D94598A0](0, v17, v13, v38);
    _Block_release(v38);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v13, v34);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v17, v46);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v41, a7);
    swift_release();
  }
}

uint64_t static Promise<>.parallel(queue:maxConcurrent:_:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE38A8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v21 - v11;
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = a3;
  v13[3] = a2;
  v13[4] = a1;
  swift_bridgeObjectRetain();
  id v14 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE1038);
  sub_1D5AB4540();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = nullsub_1;
  *(void *)(v15 + 24) = 0;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  unint64_t v16 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v17 = (v8 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v18 + v16, v10, v6);
  uint64_t v19 = (uint64_t (**)(uint64_t *))(v18 + v17);
  char *v19 = sub_1D59B8148;
  v19[1] = (uint64_t (*)(uint64_t *))v15;
  sub_1D5AB4540();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
}

uint64_t static Promise<>.parallel<A>(queue:maxConcurrent:_:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  v22[1] = a5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE38A8);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v22 - v14;
  sub_1D59B5484(a1, a2, MEMORY[0x1E4FBC848] + 8, a3, *(void *)(a4 + 8), (uint64_t)v22 - v14);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = nullsub_1;
  *(void *)(v16 + 24) = 0;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  unint64_t v17 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v18 = (v11 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v19 + v17, v13, v9);
  uint64_t v20 = (uint64_t (**)(uint64_t *))(v19 + v18);
  *uint64_t v20 = sub_1D59B88A0;
  v20[1] = (uint64_t (*)(uint64_t *))v16;
  sub_1D5AB4540();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
}

uint64_t static Promise<>.serial<A>(queue:_:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  v22[1] = a5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE38A8);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v22 - v14;
  sub_1D59B6D88(a1, a2, MEMORY[0x1E4FBC848] + 8, a3, a4, (uint64_t)v22 - v14);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = nullsub_1;
  *(void *)(v16 + 24) = 0;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  unint64_t v17 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v18 = (v11 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v19 + v17, v13, v9);
  uint64_t v20 = (uint64_t (**)(uint64_t *))(v19 + v18);
  *uint64_t v20 = sub_1D59B88A0;
  v20[1] = (uint64_t (*)(uint64_t *))v16;
  sub_1D5AB4540();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
}

uint64_t Promise<>.all<A>(queue:maxConcurrent:_:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = *(void *)(a5 + 16);
  v14[3] = a6;
  void v14[4] = a7;
  v14[5] = a1;
  v14[6] = a2;
  v14[7] = a3;
  v14[8] = a4;
  sub_1D5AB5100();
  id v15 = a1;
  swift_retain();
  sub_1D5AB4590();
  return swift_release();
}

uint64_t sub_1D59B7F48@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  void v19[2] = a5;
  v19[3] = a6;
  void v19[4] = a7;
  v19[5] = a3;
  v19[6] = a4;
  uint64_t v14 = (char *)sub_1D5AB45D0();
  v19[8] = sub_1D5A2E140((void (*)(char *, char *))sub_1D59B82A0, (uint64_t)v19, a5, v14, MEMORY[0x1E4FBC248], a7, MEMORY[0x1E4FBC278], v15);
  uint64_t v16 = sub_1D5AB5100();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1D59B5484(a1, a2, a6, v16, *(void *)(WitnessTable + 8), a8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D59B8058(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *a1;
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = a2;
  v6[3] = a3;
  unsigned __int8 v6[4] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1D5AB4540();
}

uint64_t sub_1D59B80FC()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1D59B813C(uint64_t a1, uint64_t a2)
{
  sub_1D59B5610(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1D59B8148(uint64_t *a1)
{
  return sub_1D59B8058(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1D59B815C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D59B8198(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE38A8) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v2 + v6;
  uint64_t v8 = (uint64_t *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  return sub_1D5986EE0(a1, a2, v7, v9, v10);
}

uint64_t sub_1D59B824C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1D59B828C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D59B7F48(*(void **)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t sub_1D59B82A0()
{
  return (*(uint64_t (**)(void))(v0 + 40))();
}

uint64_t sub_1D59B82D0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D59B8310()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D59B8348()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D59B8380()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D59B83B8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE4070);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D59B8418()
{
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1D59B8460()
{
  sub_1D59B6CD4(*(void *)(v0 + 16), *(void (**)(void *, uint64_t))(v0 + 24));
}

void sub_1D59B847C(uint64_t a1)
{
  sub_1D59B67E4(*(void **)a1, *(unsigned char *)(a1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(NSObject **)(v1 + 48));
}

uint64_t sub_1D59B849C()
{
  return sub_1D59B6720();
}

uint64_t sub_1D59B84BC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_1D59B8514(uint64_t a1)
{
  return sub_1D59B8628(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void))sub_1D59B68A0);
}

uint64_t sub_1D59B852C()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1D59B8574(uint64_t a1, uint64_t a2)
{
  return sub_1D59B6F54(a1, a2, *(void *)(v2 + 40), *(void *)(v2 + 48), *(void **)(v2 + 56), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1D59B8584()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1D59B85C0()
{
  swift_release();

  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_1D59B8610(uint64_t a1)
{
  return sub_1D59B8628(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void))sub_1D59B7330);
}

uint64_t sub_1D59B8628(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void, void))
{
  return a2(a1, v2[5], v2[6], v2[7], v2[8], v2[9], v2[2], v2[3], v2[4]);
}

uint64_t sub_1D59B8664()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_1D59B86B4()
{
  return sub_1D59B7024(v0[5], v0[6], v0[7], v0[8], v0[9], v0[2], v0[3], v0[4]);
}

uint64_t sub_1D59B86C8()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (((*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);

  return MEMORY[0x1F4186498](v0, v5 + 8, v4);
}

uint64_t sub_1D59B876C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)(v2[3] - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2[3] - 8) + 80);
  unint64_t v4 = (*(void *)(*(void *)(v2[3] - 8) + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1D59B5CF4(a1, a2, (char *)v2 + v3, *(uint64_t *)((char *)v2 + v4), *(uint64_t *)((char *)v2 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8)), v2[2], v2[3], v2[4]);
}

uint64_t sub_1D59B87E4(uint64_t a1, char a2)
{
  unint64_t v3 = *(uint64_t (**)(uint64_t *))(v2 + 40);
  uint64_t v5 = a1;
  char v6 = a2 & 1;
  return v3(&v5);
}

uint64_t sub_1D59B8824()
{
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

void sub_1D59B886C()
{
  sub_1D59B6CD4(*(void *)(v0 + 40), *(void (**)(void *, uint64_t))(v0 + 48));
}

void *SessionPreferenceClient.__allocating_init(queue:)(void *a1)
{
  id v2 = objc_allocWithZone(MEMORY[0x1E4F29268]);
  id v3 = a1;
  unint64_t v4 = (void *)sub_1D5AB4DE0();
  id v5 = objc_msgSend(v2, sel_initWithMachServiceName_options_, v4, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  uint64_t v6 = sub_1D59968E8(v5, v3);
  uint64_t v7 = *(void *)(v6 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 16));
  if (*(unsigned char *)(v6 + 48) == 1)
  {
    *(unsigned char *)(v6 + 48) = 2;
    objc_msgSend(*(id *)(v6 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));

  type metadata accessor for SessionPreferenceClient();
  uint64_t result = (void *)swift_allocObject();
  result[2] = v6;
  result[3] = &protocol witness table for XPCClient;
  result[4] = &protocol witness table for XPCClient;
  return result;
}

void *SessionPreferenceClient.__allocating_init(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  return sub_1D59B924C(a1, v3, ObjectType, a2, a3);
}

void *SessionPreferenceClient.init(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  return sub_1D595A0B0(a1, v3, ObjectType, a2, a3);
}

uint64_t SessionPreferenceClient.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t SessionPreferenceClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t SessionPreferenceClient.queryAudioSelection()()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v4 = 237;
  return (*(uint64_t (**)(__int16 *, void, void, void, uint64_t, uint64_t))(v1 + 24))(&v4, MEMORY[0x1E4F9D330], MEMORY[0x1E4F9D320], MEMORY[0x1E4F9D328], ObjectType, v1);
}

uint64_t SessionPreferenceClient.queryBurnBarDisplayPreference(for:)(uint64_t a1)
{
  return sub_1D59B8BC4(a1, 226, MEMORY[0x1E4F9E0A0], MEMORY[0x1E4F9E090], MEMORY[0x1E4F9E098]);
}

uint64_t SessionPreferenceClient.queryMetricsDisplayPreference(for:)(uint64_t a1)
{
  return sub_1D59B8BC4(a1, 227, MEMORY[0x1E4F9E170], MEMORY[0x1E4F9E160], MEMORY[0x1E4F9E168]);
}

uint64_t SessionPreferenceClient.queryProgressDisplayPreference(for:)(uint64_t a1)
{
  return sub_1D59B8BC4(a1, 228, MEMORY[0x1E4F9E380], MEMORY[0x1E4F9E370], MEMORY[0x1E4F9E378]);
}

uint64_t sub_1D59B8BC4(uint64_t a1, __int16 a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v17 = a2;
  v16[0] = sub_1D5AB4440();
  v16[1] = v11;
  uint64_t v12 = *(void (**)(__int16 *, void *, void, uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 32);
  uint64_t v13 = a3(0);
  v12(&v17, v16, MEMORY[0x1E4FBB1A0], v13, MEMORY[0x1E4F9F0B8], MEMORY[0x1E4F9F0C0], a4, a5, ObjectType, v9);
  return swift_bridgeObjectRelease();
}

uint64_t SessionPreferenceClient.updateAudioFocusSelection(_:)(char a1)
{
  char v2 = a1 & 1;
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v7 = 238;
  char v6 = v2;
  return (*(uint64_t (**)(__int16 *, char *, void, void, void, uint64_t, uint64_t))(v3 + 16))(&v7, &v6, MEMORY[0x1E4F9D330], MEMORY[0x1E4F9D320], MEMORY[0x1E4F9D328], ObjectType, v3);
}

uint64_t SessionPreferenceClient.updateBurnBarDisplayPreference(_:)(uint64_t a1)
{
  return sub_1D59B8DC0(a1, 232, MEMORY[0x1E4F9E0A0], MEMORY[0x1E4F9E090], MEMORY[0x1E4F9E098]);
}

uint64_t SessionPreferenceClient.updateMetricsDisplayPreference(_:)(uint64_t a1)
{
  return sub_1D59B8DC0(a1, 233, MEMORY[0x1E4F9E170], MEMORY[0x1E4F9E160], MEMORY[0x1E4F9E168]);
}

uint64_t SessionPreferenceClient.updateProgressDisplayPreference(_:)(uint64_t a1)
{
  return sub_1D59B8DC0(a1, 234, MEMORY[0x1E4F9E380], MEMORY[0x1E4F9E370], MEMORY[0x1E4F9E378]);
}

uint64_t sub_1D59B8DC0(uint64_t a1, __int16 a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *(void *)(v5 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v16 = a2;
  uint64_t v12 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 16);
  uint64_t v13 = a3(0);
  return v12(&v16, a1, v13, a4, a5, ObjectType, v10);
}

uint64_t sub_1D59B8E74()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v4 = 237;
  return (*(uint64_t (**)(__int16 *, void, void, void, uint64_t, uint64_t))(v1 + 24))(&v4, MEMORY[0x1E4F9D330], MEMORY[0x1E4F9D320], MEMORY[0x1E4F9D328], ObjectType, v1);
}

uint64_t sub_1D59B8EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D59B8F7C(a1, a2, a3, 226, MEMORY[0x1E4F9E0A0], MEMORY[0x1E4F9E090], MEMORY[0x1E4F9E098]);
}

uint64_t sub_1D59B8F24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D59B8F7C(a1, a2, a3, 227, MEMORY[0x1E4F9E170], MEMORY[0x1E4F9E160], MEMORY[0x1E4F9E168]);
}

uint64_t sub_1D59B8F50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D59B8F7C(a1, a2, a3, 228, MEMORY[0x1E4F9E380], MEMORY[0x1E4F9E370], MEMORY[0x1E4F9E378]);
}

uint64_t sub_1D59B8F7C(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t (*a5)(void), uint64_t a6, uint64_t a7)
{
  uint64_t v11 = *(void *)(*(void *)v7 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v19 = a4;
  v18[0] = sub_1D5AB4440();
  v18[1] = v13;
  uint64_t v14 = *(void (**)(__int16 *, void *, void, uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 32);
  uint64_t v15 = a5(0);
  v14(&v19, v18, MEMORY[0x1E4FBB1A0], v15, MEMORY[0x1E4F9F0B8], MEMORY[0x1E4F9F0C0], a6, a7, ObjectType, v11);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D59B9060(char a1)
{
  char v2 = a1 & 1;
  uint64_t v3 = *(void *)(*(void *)v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v7 = 238;
  char v6 = v2;
  return (*(uint64_t (**)(__int16 *, char *, void, void, void, uint64_t, uint64_t))(v3 + 16))(&v7, &v6, MEMORY[0x1E4F9D330], MEMORY[0x1E4F9D320], MEMORY[0x1E4F9D328], ObjectType, v3);
}

uint64_t sub_1D59B90F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D59B9174(a1, a2, a3, 232, MEMORY[0x1E4F9E0A0], MEMORY[0x1E4F9E090], MEMORY[0x1E4F9E098]);
}

uint64_t sub_1D59B911C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D59B9174(a1, a2, a3, 233, MEMORY[0x1E4F9E170], MEMORY[0x1E4F9E160], MEMORY[0x1E4F9E168]);
}

uint64_t sub_1D59B9148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D59B9174(a1, a2, a3, 234, MEMORY[0x1E4F9E380], MEMORY[0x1E4F9E370], MEMORY[0x1E4F9E378]);
}

uint64_t sub_1D59B9174(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t (*a5)(void), uint64_t a6, uint64_t a7)
{
  uint64_t v13 = *(void *)(*(void *)v7 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v18 = a4;
  uint64_t v15 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 16);
  uint64_t v16 = a5(0);
  return v15(&v18, a1, v16, a6, a7, ObjectType, v13);
}

uint64_t type metadata accessor for SessionPreferenceClient()
{
  return self;
}

void *sub_1D59B924C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for SessionPreferenceClient();
  uint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a4;
  result[4] = a5;
  return result;
}

uint64_t method lookup function for SessionPreferenceClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SessionPreferenceClient);
}

uint64_t dispatch thunk of SessionPreferenceClient.__allocating_init(connection:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1D59B92C0(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v29 = a5;
  uint64_t v30 = a8;
  uint64_t v10 = v9;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v28 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v40 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v36 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v15 = (char *)&v26 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v33 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(v17 - 8);
  uint64_t v32 = v17;
  MEMORY[0x1F4188790](v17);
  __int16 v19 = (char *)&v26 - v18;
  uint64_t v34 = v8;
  uint64_t v20 = sub_1D5AB53C0();
  if (!v20) {
    return sub_1D5AB50B0();
  }
  uint64_t v21 = v20;
  uint64_t v27 = v15;
  uint64_t v43 = sub_1D5AB4D30();
  uint64_t v35 = sub_1D5AB58B0();
  sub_1D5AB5880();
  uint64_t v41 = v19;
  uint64_t result = sub_1D5AB53B0();
  if (v21 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v23 = (void (**)(char *))(v36 + 2);
    ++v36;
    dispatch_group_t v37 = v23;
    uint64_t v24 = v27;
    while (1)
    {
      uint64_t v25 = (void (*)(char *, void))sub_1D5AB53E0();
      (*v37)(v24);
      v25(v42, 0);
      v38(v24, v40);
      if (v10) {
        break;
      }
      uint64_t v10 = 0;
      (*v36)(v24, AssociatedTypeWitness);
      sub_1D5AB5890();
      sub_1D5AB53D0();
      if (!--v21)
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
        return v43;
      }
    }
    (*v36)(v24, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v28 + 32))(v30, v40, v29);
  }
  return result;
}

uint64_t RemoteBrowsingTransformable.applyingRemoteParticipant(_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(a2, v2, a1);
}

uint64_t Array<A>.applyingRemoteBrowsingEnvironment(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v9[7] = a2;
  long long v9[2] = a3;
  v9[3] = a4;
  v9[4] = a1;
  uint64_t v5 = sub_1D5AB5100();
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_1D59B92C0((void (*)(char *, char *))sub_1D59B979C, (uint64_t)v9, v5, a3, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v7);
}

uint64_t sub_1D59B979C()
{
  return (*(uint64_t (**)(void, void))(v0[3] + 8))(v0[4], v0[2]);
}

uint64_t sub_1D59B97E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = Array<A>.applyingRemoteBrowsingEnvironment(_:)(a1, *v4, *(void *)(a2 + 16), *(void *)(a3 - 8));
  *a4 = result;
  return result;
}

uint64_t dispatch thunk of RemoteBrowsingTransformable.applyingRemoteBrowsingEnvironment(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of RemoteBrowsingTransformable.applyingRemoteParticipant(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t OptInPrivacyPreferenceUpdated.init(preference:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB3770();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

uint64_t OptInPrivacyPreferenceUpdated.preference.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB3770();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

void static OptInPrivacyPreferenceUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for OptInPrivacyPreferenceUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3770();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for OptInPrivacyPreferenceUpdated(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB3770();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for OptInPrivacyPreferenceUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3770();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for OptInPrivacyPreferenceUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3770();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for OptInPrivacyPreferenceUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3770();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for OptInPrivacyPreferenceUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3770();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for OptInPrivacyPreferenceUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D59B9B9C);
}

uint64_t sub_1D59B9B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3770();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for OptInPrivacyPreferenceUpdated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D59B9C1C);
}

uint64_t sub_1D59B9C1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3770();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for OptInPrivacyPreferenceUpdated()
{
  uint64_t result = qword_1EBDE3CA8;
  if (!qword_1EBDE3CA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D59B9CD8()
{
  uint64_t result = sub_1D5AB3770();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t CadenceMetricUpdated.cadenceMetric.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB2570();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t CadenceMetricUpdated.sessionIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CadenceMetricUpdated() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for CadenceMetricUpdated()
{
  uint64_t result = qword_1EA725A98;
  if (!qword_1EA725A98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t CadenceMetricUpdated.init(cadenceMetric:sessionIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1D5AB2570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t result = type metadata accessor for CadenceMetricUpdated();
  uint64_t v10 = (void *)(a4 + *(int *)(result + 20));
  *uint64_t v10 = a2;
  v10[1] = a3;
  return result;
}

void static CadenceMetricUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t *initializeBufferWithCopyOfBuffer for CadenceMetricUpdated(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1D5AB2570();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for CadenceMetricUpdated(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB2570();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CadenceMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB2570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CadenceMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB2570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for CadenceMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB2570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for CadenceMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB2570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CadenceMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D59BA27C);
}

uint64_t sub_1D59BA27C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB2570();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for CadenceMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D59BA354);
}

uint64_t sub_1D59BA354(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1D5AB2570();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1D59BA414()
{
  uint64_t result = sub_1D5AB2570();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void static AppIdleOccurred.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for AppIdleOccurred()
{
  return &type metadata for AppIdleOccurred;
}

BOOL static NetworkMonitorError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t NetworkMonitorError.hash(into:)()
{
  return sub_1D5AB5C30();
}

uint64_t NetworkMonitorError.hashValue.getter()
{
  return sub_1D5AB5C60();
}

unint64_t sub_1D59BA558()
{
  unint64_t result = qword_1EA725AA8;
  if (!qword_1EA725AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725AA8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NetworkMonitorError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D59BA678);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkMonitorError()
{
  return &type metadata for NetworkMonitorError;
}

uint64_t RemoteParticipantDeviceType.init(modelString:)()
{
  id v0 = (id)sub_1D5AB4DE0();
  int v1 = [v0 hasPrefix:@"iPhone"];

  if (v1)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    int v3 = (void *)sub_1D5AB4DE0();
    swift_bridgeObjectRelease();
    id v4 = v3;
    LODWORD(v3) = [v4 hasPrefix:@"Watch"];

    if (v3) {
      return 1;
    }
    else {
      return 4;
    }
  }
}

void static RemoteBrowsingGuestVerificationCompleted.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for RemoteBrowsingGuestVerificationCompleted()
{
  return &type metadata for RemoteBrowsingGuestVerificationCompleted;
}

uint64_t AchievementEnvironmentCacheUpdated.cache.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB3F80();
  id v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t AchievementEnvironmentCacheUpdated.init(cache:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB3F80();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static AchievementEnvironmentCacheUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for AchievementEnvironmentCacheUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3F80();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for AchievementEnvironmentCacheUpdated(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB3F80();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for AchievementEnvironmentCacheUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for AchievementEnvironmentCacheUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for AchievementEnvironmentCacheUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for AchievementEnvironmentCacheUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for AchievementEnvironmentCacheUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D59BAAD4);
}

uint64_t sub_1D59BAAD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3F80();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for AchievementEnvironmentCacheUpdated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D59BAB54);
}

uint64_t sub_1D59BAB54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3F80();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for AchievementEnvironmentCacheUpdated()
{
  uint64_t result = qword_1EBDE3CC8;
  if (!qword_1EBDE3CC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D59BAC10()
{
  uint64_t result = sub_1D5AB3F80();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void static CurrentDevice.identifier()()
{
  id v0 = (id)MobileGestalt_get_current_device();
  if (v0)
  {
    unint64_t v1 = v0;
    id v2 = (id)MobileGestalt_copy_uniqueDeviceID_obj();

    if (v2)
    {
      sub_1D5AB4DF0();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id static CurrentDevice.hasExtendedColorDisplay()()
{
  id result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    unint64_t v1 = result;
    uint64_t hasExtendedColorDisplay = MobileGestalt_get_hasExtendedColorDisplay();

    return (id)hasExtendedColorDisplay;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t static CurrentDevice.isFamilySetup()()
{
  return 0;
}

ValueMetadata *type metadata accessor for CurrentDevice()
{
  return &type metadata for CurrentDevice;
}

uint64_t FitnessModeObserver.__allocating_init(eventHub:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(_DWORD *)(result + 32) = 0;
  *(unsigned char *)(result + 36) = 1;
  return result;
}

uint64_t FitnessModeObserver.init(eventHub:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  *(_DWORD *)(v2 + 32) = 0;
  *(unsigned char *)(v2 + 36) = 1;
  return v2;
}

uint64_t FitnessModeObserver.deinit()
{
  if ((*(unsigned char *)(v0 + 36) & 1) == 0) {
    objc_msgSend(self, sel_cancelToken_, *(unsigned int *)(v0 + 32));
  }
  swift_unknownObjectRelease();
  return v0;
}

uint64_t FitnessModeObserver.__deallocating_deinit()
{
  if ((*(unsigned char *)(v0 + 36) & 1) == 0) {
    objc_msgSend(self, sel_cancelToken_, *(unsigned int *)(v0 + 32));
  }
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

Swift::Void __swiftcall FitnessModeObserver.activate()()
{
  if (*(unsigned char *)(v0 + 36) == 1)
  {
    uint64_t v1 = *MEMORY[0x1E4F29E00];
    if (*MEMORY[0x1E4F29E00])
    {
      uint64_t v2 = v0;
      uint64_t v3 = self;
      sub_1D59513F0();
      uint64_t v4 = (void *)sub_1D5AB54A0();
      uint64_t v5 = swift_allocObject();
      swift_weakInit();
      v12[4] = sub_1D59BB1E4;
      v12[5] = v5;
      v12[0] = MEMORY[0x1E4F143A8];
      v12[1] = 1107296256;
      v12[2] = sub_1D598EA50;
      uint64_t v12[3] = &block_descriptor_8;
      unsigned int v6 = _Block_copy(v12);
      swift_release();
      id v7 = objc_msgSend(v3, sel_registerNotification_queue_callback_, v1, v4, v6);
      _Block_release(v6);

      if (objc_msgSend(v3, sel_tokenIsValid_, v7))
      {
        *(_DWORD *)(v2 + 32) = v7;
        *(unsigned char *)(v2 + 36) = 0;
      }
      else
      {
        if (qword_1EBDE5420 != -1) {
          swift_once();
        }
        uint64_t v8 = sub_1D5AB4B50();
        __swift_project_value_buffer(v8, (uint64_t)qword_1EBDE5400);
        uint64_t v9 = sub_1D5AB4B30();
        os_log_type_t v10 = sub_1D5AB5410();
        if (os_log_type_enabled(v9, v10))
        {
          uint64_t v11 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v11 = 0;
          _os_log_impl(&dword_1D5947000, v9, v10, "Failed to register for fitness mode changes", v11, 2u);
          MEMORY[0x1D945AAC0](v11, -1, -1);
        }
      }
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1D59BB098()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D59BB0D0()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    if (qword_1EBDE5420 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_1D5AB4B50();
    __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE5400);
    v3._uint64_t countAndFlagsBits = 0xD000000000000073;
    v3._object = (void *)0x80000001D5AC7070;
    v4._object = (void *)0x80000001D5AC70F0;
    v4._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
    Logger.trace(file:function:)(v3, v4);
    uint64_t v5 = *(void *)(v1 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v5 + 8))(ObjectType, &type metadata for FitnessModeUpdated, &protocol witness table for FitnessModeUpdated, ObjectType, v5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D59BB1E4()
{
  return sub_1D59BB0D0();
}

SeymourClient::FitnessMode __swiftcall FitnessModeObserver.queryMode()()
{
  id v0 = objc_msgSend(self, sel_sharedBehavior);
  if (v0)
  {
    uint64_t v1 = v0;
    id v2 = objc_msgSend(v0, sel_fitnessMode);

    LOBYTE(v0) = sub_1D5A78FE0((uint64_t)v2);
  }
  else
  {
    __break(1u);
  }
  return (char)v0;
}

void sub_1D59BB25C()
{
}

id sub_1D59BB280()
{
  id result = objc_msgSend(self, sel_sharedBehavior);
  if (result)
  {
    uint64_t v1 = result;
    id v2 = objc_msgSend(result, sel_fitnessMode);

    return (id)sub_1D5A78FE0((uint64_t)v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t dispatch thunk of FitnessModeObserving.activate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FitnessModeObserving.queryMode()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t type metadata accessor for FitnessModeObserver()
{
  return self;
}

uint64_t method lookup function for FitnessModeObserver(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FitnessModeObserver);
}

uint64_t dispatch thunk of FitnessModeObserver.__allocating_init(eventHub:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t __swift_memcpy5_4(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(unsigned char *)(result + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)id result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for FitnessModeObserver.State(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 5)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FitnessModeObserver.State(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)id result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 5) = v3;
  return result;
}

uint64_t sub_1D59BB3C8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 4)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1D59BB3E4(uint64_t result, int a2)
{
  if (a2)
  {
    *(_DWORD *)id result = a2 - 1;
    *(unsigned char *)(result + 4) = 1;
  }
  else
  {
    *(unsigned char *)(result + 4) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for FitnessModeObserver.State()
{
  return &type metadata for FitnessModeObserver.State;
}

BOOL static GatedResourceError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t GatedResourceError.hash(into:)()
{
  return sub_1D5AB5C30();
}

uint64_t GatedResourceError.hashValue.getter()
{
  return sub_1D5AB5C60();
}

unint64_t sub_1D59BB4A4()
{
  unint64_t result = qword_1EA725AB0;
  if (!qword_1EA725AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725AB0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for GatedResourceError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D59BB5C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GatedResourceError()
{
  return &type metadata for GatedResourceError;
}

uint64_t sub_1D59BB5FC(uint64_t a1)
{
  return sub_1D59BB858(a1, qword_1EBDE1468, &qword_1EBDE5250, (uint64_t)qword_1EBDE5EF8);
}

uint64_t static Trace.default.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D59BB928(&qword_1EBDE1488, (uint64_t)qword_1EBDE1468, a1);
}

uint64_t sub_1D59BB64C(uint64_t a1)
{
  return sub_1D59BB858(a1, qword_1EBDE1440, qword_1EBDE4248, (uint64_t)qword_1EBDE5DA0);
}

uint64_t static Trace.asset.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D59BB928(&qword_1EBDE1460, (uint64_t)qword_1EBDE1440, a1);
}

uint64_t sub_1D59BB69C(uint64_t a1)
{
  return sub_1D59BB858(a1, qword_1EBDE3380, &qword_1EBDE33A8, (uint64_t)qword_1EBDE5D28);
}

uint64_t static Trace.catalog.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D59BB928(qword_1EBDE3398, (uint64_t)qword_1EBDE3380, a1);
}

uint64_t sub_1D59BB6EC(uint64_t a1)
{
  return sub_1D59BB858(a1, qword_1EBDE1490, &qword_1EBDE14E0, (uint64_t)qword_1EBDE5C90);
}

uint64_t static Trace.database.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D59BB928(qword_1EBDE14B0, (uint64_t)qword_1EBDE1490, a1);
}

uint64_t sub_1D59BB73C(uint64_t a1)
{
  return sub_1D59BB858(a1, qword_1EBDE4788, qword_1EBDE47A0, (uint64_t)qword_1EBDE5E70);
}

uint64_t static Trace.personalization.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D59BB928(&qword_1EBDE4378, (uint64_t)qword_1EBDE4788, a1);
}

uint64_t sub_1D59BB78C(uint64_t a1)
{
  return sub_1D59BB858(a1, qword_1EA725AB8, qword_1EBDE36E8, (uint64_t)qword_1EBDE5CF0);
}

uint64_t static Trace.playback.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D59BB928(&qword_1EA724D80, (uint64_t)qword_1EA725AB8, a1);
}

uint64_t sub_1D59BB7DC(uint64_t a1)
{
  return sub_1D59BB858(a1, qword_1EA725AD0, qword_1EBDE42F0, (uint64_t)qword_1EBDE5E58);
}

uint64_t static Trace.recommendation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D59BB928(&qword_1EA724D88, (uint64_t)qword_1EA725AD0, a1);
}

uint64_t sub_1D59BB82C(uint64_t a1)
{
  return sub_1D59BB858(a1, qword_1EA725AE8, qword_1EBDE4238, (uint64_t)qword_1EBDE5E10);
}

uint64_t sub_1D59BB858(uint64_t a1, uint64_t *a2, void *a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for ActivityTracer();
  __swift_allocate_value_buffer(v7, a2);
  uint64_t v8 = __swift_project_value_buffer(v7, (uint64_t)a2);
  if (*a3 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for LogSystem();
  uint64_t v10 = __swift_project_value_buffer(v9, a4) + *(int *)(v9 + 24);
  return sub_1D596DDF8(v10, v8);
}

uint64_t static Trace.remoteBrowsing.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D59BB928(&qword_1EA724D90, (uint64_t)qword_1EA725AE8, a1);
}

uint64_t sub_1D59BB928@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for ActivityTracer();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  return sub_1D596DDF8(v6, a3);
}

ValueMetadata *type metadata accessor for Trace()
{
  return &type metadata for Trace;
}

uint64_t Meditation.applyingTimestampOffset(_:)()
{
  sub_1D5AB1DF0();
  return sub_1D5AB1E00();
}

uint64_t sub_1D59BB9EC()
{
  sub_1D5AB1DF0();
  return sub_1D5AB1E00();
}

unint64_t static AppBundleConstants.phoneBundleName.getter()
{
  return 0xD000000000000011;
}

unint64_t static AppBundleConstants.tabletBundleName.getter()
{
  return 0xD000000000000011;
}

unint64_t static AppBundleConstants.tvBundleName.getter()
{
  return 0xD000000000000011;
}

unint64_t static AppBundleConstants.watchBundleName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t static AppBundleConstants.meditationBundleName.getter()
{
  return 0x6C7070612E6D6F63;
}

ValueMetadata *type metadata accessor for AppBundleConstants()
{
  return &type metadata for AppBundleConstants;
}

uint64_t DistanceMetricUpdated.distanceMetric.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB2AF0();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t DistanceMetricUpdated.sessionIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for DistanceMetricUpdated() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for DistanceMetricUpdated()
{
  uint64_t result = qword_1EA725B00;
  if (!qword_1EA725B00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t DistanceMetricUpdated.init(distanceMetric:sessionIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1D5AB2AF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t result = type metadata accessor for DistanceMetricUpdated();
  uint64_t v10 = (void *)(a4 + *(int *)(result + 20));
  *uint64_t v10 = a2;
  v10[1] = a3;
  return result;
}

void static DistanceMetricUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t *initializeBufferWithCopyOfBuffer for DistanceMetricUpdated(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1D5AB2AF0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for DistanceMetricUpdated(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB2AF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DistanceMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB2AF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DistanceMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB2AF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for DistanceMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB2AF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for DistanceMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB2AF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DistanceMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D59BBFFC);
}

uint64_t sub_1D59BBFFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB2AF0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for DistanceMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D59BC0D4);
}

uint64_t sub_1D59BC0D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1D5AB2AF0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1D59BC194()
{
  uint64_t result = sub_1D5AB2AF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t AssetBundleUpdated.bundle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB1EA0();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t AssetBundleUpdated.init(bundle:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB1EA0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static AssetBundleUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for AssetBundleUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB1EA0();
  int v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for AssetBundleUpdated(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB1EA0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for AssetBundleUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB1EA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for AssetBundleUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB1EA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for AssetBundleUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB1EA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for AssetBundleUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB1EA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetBundleUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D59BC580);
}

uint64_t sub_1D59BC580(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB1EA0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for AssetBundleUpdated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D59BC600);
}

uint64_t sub_1D59BC600(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB1EA0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for AssetBundleUpdated()
{
  uint64_t result = qword_1EBDE3980;
  if (!qword_1EBDE3980) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D59BC6BC()
{
  uint64_t result = sub_1D5AB1EA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t RemoteBrowsingEnvironment.applyingJournal(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v99 = a1;
  v90[10] = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725B10);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v124 = (uint64_t)v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725160);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v123 = (uint64_t)v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725B18);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v122 = (uint64_t)v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725B20);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v121 = (uint64_t)v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725B28);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v126 = (uint64_t)v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725B30);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v125 = (uint64_t)v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725168);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v120 = (uint64_t)v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725B38);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v119 = (uint64_t)v90 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725170);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v118 = (uint64_t)v90 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725B40);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v117 = (uint64_t)v90 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725B48);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)v90 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_1D5AB4350();
  uint64_t v108 = *(void *)(v109 - 8);
  MEMORY[0x1F4188790](v109);
  uint64_t v27 = (char *)v90 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_1D5AB3770();
  uint64_t v106 = *(void *)(v107 - 8);
  MEMORY[0x1F4188790](v107);
  uint64_t v29 = (char *)v90 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3340);
  MEMORY[0x1F4188790](v30 - 8);
  uint64_t v32 = (char *)v90 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_1D5AB39B0();
  uint64_t v102 = *(void *)(v103 - 8);
  MEMORY[0x1F4188790](v103);
  uint64_t v34 = (char *)v90 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725130);
  MEMORY[0x1F4188790](v35 - 8);
  dispatch_group_t v37 = (char *)v90 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_1D5AB43E0();
  uint64_t v104 = *(void *)(v105 - 8);
  MEMORY[0x1F4188790](v105);
  uint64_t v39 = (char *)v90 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7251B8);
  MEMORY[0x1F4188790](v40 - 8);
  uint64_t v42 = (char *)v90 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725B50);
  MEMORY[0x1F4188790](v43 - 8);
  uint64_t v45 = (char *)v90 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_1D5AB3F80();
  uint64_t v100 = *(void *)(v101 - 8);
  MEMORY[0x1F4188790](v101);
  uint64_t v110 = (char *)v90 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5AB3C10();
  uint64_t v149 = sub_1D5AB3DB0();
  uint64_t v111 = v45;
  sub_1D5AB3C70();
  uint64_t v148 = sub_1D5AB3DA0();
  uint64_t v113 = v42;
  uint64_t v47 = v99;
  sub_1D5AB3C20();
  uint64_t v115 = v39;
  sub_1D5AB3CF0();
  uint64_t v145 = sub_1D5AB3CE0();
  uint64_t v146 = v48;
  unsigned __int8 v147 = v49 & 1;
  uint64_t v144 = sub_1D5AB3DF0();
  uint64_t v143 = sub_1D5AB3CA0();
  uint64_t v142 = sub_1D5AB3D50();
  uint64_t v141 = sub_1D5AB3CB0();
  uint64_t v140 = sub_1D5AB3DD0();
  uint64_t v139 = sub_1D5AB3CC0();
  uint64_t v112 = v37;
  sub_1D5AB3D20();
  uint64_t v114 = v34;
  uint64_t v50 = v125;
  sub_1D5AB3C50();
  uint64_t v116 = v32;
  uint64_t v51 = v126;
  sub_1D5AB3D60();
  sub_1D5AB3C30();
  sub_1D5AB3DC0();
  uint64_t v138 = sub_1D5AB3E00();
  uint64_t v137 = sub_1D5AB3D70();
  uint64_t v136 = sub_1D5AB3D00();
  uint64_t v135 = sub_1D5AB3C80();
  uint64_t v134 = sub_1D5AB3C40();
  uint64_t v133 = sub_1D5AB3C90();
  uint64_t v130 = v25;
  sub_1D5AB3D10();
  uint64_t v132 = sub_1D5AB3C60();
  uint64_t v131 = sub_1D5AB3D80();
  uint64_t v52 = *(void *)(v47 + 16);
  uint64_t v91 = v2;
  uint64_t v129 = v29;
  uint64_t v128 = v27;
  if (v52)
  {
    uint64_t v53 = *(void *)(type metadata accessor for RemoteBrowsingJournalEntry() - 8);
    uint64_t v54 = v47 + ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80));
    uint64_t v127 = *(void *)(v53 + 72);
    swift_bridgeObjectRetain();
    uint64_t v55 = (uint64_t)v116;
    uint64_t v56 = (uint64_t)v115;
    uint64_t v57 = (uint64_t)v114;
    uint64_t v58 = (uint64_t)v113;
    uint64_t v59 = (uint64_t)v112;
    uint64_t v60 = (uint64_t)v111;
    uint64_t v61 = (uint64_t)v110;
    do
    {
      sub_1D59BDAC8(v54, v61, (uint64_t)&v149, v58, v56, &v144, (uint64_t)&v142, (uint64_t)&v141, (uint64_t)&v140, v59, v57, v55, (uint64_t)v129, (uint64_t)v128, &v138, (uint64_t)&v137, &v135, (uint64_t)&v131, &v133,
        (uint64_t)v130,
        &v132,
        (unint64_t *)&v148,
        v60,
        &v134,
        (uint64_t)&v145,
        &v143,
        &v139,
        &v136);
      v54 += v127;
      --v52;
    }
    while (v52);
    swift_bridgeObjectRelease();
    uint64_t v51 = v126;
    uint64_t v50 = v125;
    uint64_t v27 = v128;
    uint64_t v29 = v129;
  }
  uint64_t v62 = v100;
  uint64_t v63 = v117;
  uint64_t v64 = v101;
  (*(void (**)(uint64_t, char *, uint64_t))(v100 + 16))(v117, v110, v101);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v62 + 56))(v63, 0, 1, v64);
  unint64_t v65 = v148;
  uint64_t v127 = v149;
  uint64_t v97 = v145;
  uint64_t v96 = v146;
  int v95 = v147;
  uint64_t v99 = v144;
  uint64_t v66 = sub_1D5AB3AA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v118, 1, 1, v66);
  v90[9] = v143;
  uint64_t v67 = sub_1D5AB3ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v119, 1, 1, v67);
  v90[4] = v140;
  uint64_t v98 = v141;
  v90[8] = v142;
  uint64_t v68 = sub_1D5AB3B00();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v120, 1, 1, v68);
  uint64_t v94 = v139;
  uint64_t v69 = v102;
  uint64_t v70 = v103;
  (*(void (**)(uint64_t, char *, uint64_t))(v102 + 16))(v50, v114, v103);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v69 + 56))(v50, 0, 1, v70);
  uint64_t v71 = v121;
  uint64_t v72 = v106;
  uint64_t v73 = v107;
  (*(void (**)(uint64_t, char *, uint64_t))(v106 + 16))(v51, v29, v107);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v72 + 56))(v51, 0, 1, v73);
  uint64_t v74 = v104;
  uint64_t v75 = v105;
  (*(void (**)(uint64_t, char *, uint64_t))(v104 + 16))(v71, v115, v105);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v75);
  uint64_t v76 = v108;
  uint64_t v77 = v122;
  uint64_t v78 = v109;
  (*(void (**)(uint64_t, char *, uint64_t))(v108 + 16))(v122, v27, v109);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v76 + 56))(v77, 0, 1, v78);
  uint64_t v79 = v137;
  uint64_t v80 = sub_1D5AB3BF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56))(v123, 1, 1, v80);
  uint64_t v81 = v135;
  uint64_t v82 = v136;
  uint64_t v84 = v133;
  uint64_t v83 = v134;
  uint64_t v85 = v132;
  uint64_t v86 = sub_1D5AB3210();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v124, 1, 1, v86);
  uint64_t v92 = v131;
  swift_bridgeObjectRetain();
  unint64_t v93 = v65;
  swift_bridgeObjectRetain();
  sub_1D5989390(v97, v96, v95);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v90[1] = v79;
  swift_bridgeObjectRetain();
  v90[2] = v82;
  swift_bridgeObjectRetain();
  v90[3] = v81;
  swift_bridgeObjectRetain();
  v90[5] = v83;
  swift_bridgeObjectRetain();
  v90[6] = v84;
  swift_bridgeObjectRetain();
  v90[7] = v85;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOBYTE(v81) = v95;
  uint64_t v87 = v96;
  uint64_t v88 = v97;
  sub_1D5AB3DE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D59891FC(v88, v87, v81);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D594F53C(v124, &qword_1EA725B10);
  sub_1D594F53C(v123, &qword_1EA725160);
  sub_1D594F53C(v122, &qword_1EA725B18);
  sub_1D594F53C(v121, &qword_1EA725B20);
  sub_1D594F53C(v126, &qword_1EA725B28);
  sub_1D594F53C(v125, &qword_1EA725B30);
  sub_1D594F53C(v120, &qword_1EA725168);
  sub_1D594F53C(v119, &qword_1EA725B38);
  sub_1D594F53C(v118, &qword_1EA725170);
  sub_1D594F53C(v117, &qword_1EA725B40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D594F53C((uint64_t)v130, &qword_1EA725B48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v108 + 8))(v128, v109);
  (*(void (**)(char *, uint64_t))(v106 + 8))(v129, v107);
  sub_1D594F53C((uint64_t)v116, &qword_1EBDE3340);
  (*(void (**)(char *, uint64_t))(v102 + 8))(v114, v103);
  sub_1D594F53C((uint64_t)v112, &qword_1EA725130);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D59891FC(v145, v146, v147);
  (*(void (**)(char *, uint64_t))(v104 + 8))(v115, v105);
  sub_1D594F53C((uint64_t)v113, &qword_1EA7251B8);
  swift_bridgeObjectRelease();
  sub_1D594F53C((uint64_t)v111, &qword_1EA725B50);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v100 + 8))(v110, v101);
}

uint64_t sub_1D59BDAC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t *a15, uint64_t a16, uint64_t *a17, uint64_t a18, uint64_t *a19, uint64_t a20,uint64_t *a21,unint64_t *a22,uint64_t a23,uint64_t *a24,uint64_t a25,uint64_t *a26,uint64_t *a27,uint64_t *a28)
{
  uint64_t v578 = a8;
  uint64_t v577 = a7;
  v576 = a6;
  uint64_t v622 = a5;
  uint64_t v609 = a4;
  v596[1] = a3;
  uint64_t v599 = a2;
  v637 = (char *)a1;
  v610 = a22;
  v601 = a21;
  uint64_t v598 = a20;
  v603 = a19;
  uint64_t v574 = a18;
  v600 = a17;
  v596[0] = a16;
  v602 = a15;
  uint64_t v573 = a14;
  uint64_t v572 = a13;
  uint64_t v606 = a12;
  uint64_t v571 = a11;
  uint64_t v608 = a10;
  uint64_t v595 = a9;
  uint64_t v645 = *MEMORY[0x1E4F143B8];
  uint64_t v557 = sub_1D5AB3BF0();
  uint64_t v556 = *(void *)(v557 - 8);
  MEMORY[0x1F4188790](v557);
  v555 = (char *)&v515 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v554 = sub_1D5AB3B00();
  uint64_t v553 = *(void *)(v554 - 8);
  MEMORY[0x1F4188790](v554);
  v552 = (char *)&v515 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v551 = sub_1D5AB3AA0();
  uint64_t v550 = *(void *)(v551 - 8);
  MEMORY[0x1F4188790](v551);
  v549 = (char *)&v515 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725B58);
  MEMORY[0x1F4188790](v31 - 8);
  v547 = (char *)&v515 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725B60);
  MEMORY[0x1F4188790](v33 - 8);
  v546 = (char *)&v515 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v607 = sub_1D5AB3750();
  v605 = *(void (***)(char *, uint64_t *, uint64_t))(v607 - 8);
  uint64_t v35 = MEMORY[0x1F4188790](v607);
  v524 = (char *)&v515 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v35);
  v548 = (char *)&v515 - v37;
  uint64_t v545 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725B68);
  MEMORY[0x1F4188790](v545);
  uint64_t v564 = (uint64_t)&v515 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725130);
  uint64_t v40 = MEMORY[0x1F4188790](v39 - 8);
  uint64_t v528 = (uint64_t)&v515 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = MEMORY[0x1F4188790](v40);
  uint64_t v626 = (uint64_t)&v515 - v43;
  MEMORY[0x1F4188790](v42);
  uint64_t v627 = (uint64_t)&v515 - v44;
  uint64_t v597 = sub_1D5AB35D0();
  v630 = *(char **)(v597 - 8);
  uint64_t v45 = MEMORY[0x1F4188790](v597);
  v518 = (char *)&v515 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v45);
  v625 = (char *)&v515 - v47;
  uint64_t v48 = sub_1D5AB40E0();
  char v49 = *(char **)(v48 - 8);
  v633 = (void (*)(void, void))v48;
  v634 = v49;
  uint64_t v50 = MEMORY[0x1F4188790](v48);
  v632 = (char *)&v515 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v50);
  v631 = (char *)&v515 - v52;
  uint64_t v613 = sub_1D5AB4900();
  uint64_t v614 = *(void *)(v613 - 8);
  uint64_t v53 = MEMORY[0x1F4188790](v613);
  v612 = (char *)&v515 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v53);
  v611 = (char *)&v515 - v55;
  uint64_t v544 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725B70);
  MEMORY[0x1F4188790](v544);
  uint64_t v563 = (uint64_t)&v515 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7251B8);
  uint64_t v58 = MEMORY[0x1F4188790](v57 - 8);
  uint64_t v527 = (uint64_t)&v515 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = MEMORY[0x1F4188790](v58);
  uint64_t v560 = (uint64_t)&v515 - v61;
  MEMORY[0x1F4188790](v60);
  uint64_t v561 = (uint64_t)&v515 - v62;
  uint64_t v594 = sub_1D5AB2490();
  v629 = *(char **)(v594 - 8);
  uint64_t v63 = MEMORY[0x1F4188790](v594);
  v517 = (char *)&v515 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v63);
  v624 = (char *)&v515 - v65;
  uint64_t v543 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725B78);
  MEMORY[0x1F4188790](v543);
  uint64_t v562 = (uint64_t)&v515 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725B50);
  uint64_t v68 = MEMORY[0x1F4188790](v67 - 8);
  uint64_t v526 = (uint64_t)&v515 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = MEMORY[0x1F4188790](v68);
  uint64_t v558 = (uint64_t)&v515 - v71;
  MEMORY[0x1F4188790](v70);
  uint64_t v559 = (uint64_t)&v515 - v72;
  uint64_t v575 = sub_1D5AB2210();
  uint64_t v604 = *(void *)(v575 - 8);
  uint64_t v73 = MEMORY[0x1F4188790](v575);
  v516 = (char *)&v515 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v73);
  v570 = (char *)&v515 - v75;
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE10D0);
  MEMORY[0x1F4188790](v76 - 8);
  v525 = (char *)&v515 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v589 = sub_1D5AB3F80();
  uint64_t v588 = *(void *)(v589 - 8);
  uint64_t v78 = MEMORY[0x1F4188790](v589);
  v542 = (char *)&v515 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v78);
  v623 = (char *)&v515 - v80;
  uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725610);
  MEMORY[0x1F4188790](v81 - 8);
  v587 = (char *)&v515 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v541 = sub_1D5AB3600();
  uint64_t v539 = *(void *)(v541 - 8);
  MEMORY[0x1F4188790](v541);
  v581 = (char *)&v515 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v586 = sub_1D5AB4050();
  uint64_t v585 = *(void *)(v586 - 8);
  MEMORY[0x1F4188790](v586);
  v582 = (char *)&v515 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v591 = sub_1D5AB2E90();
  uint64_t v590 = *(void *)(v591 - 8);
  uint64_t v85 = MEMORY[0x1F4188790](v591);
  v540 = (char *)&v515 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = MEMORY[0x1F4188790](v85);
  v537 = (char *)&v515 - v88;
  MEMORY[0x1F4188790](v87);
  v617 = (char *)&v515 - v89;
  uint64_t v593 = sub_1D5AB3010();
  uint64_t v592 = *(void *)(v593 - 8);
  uint64_t v90 = MEMORY[0x1F4188790](v593);
  v538 = (char *)&v515 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = MEMORY[0x1F4188790](v90);
  v536 = (char *)&v515 - v93;
  MEMORY[0x1F4188790](v92);
  v616 = (char *)&v515 - v94;
  uint64_t v569 = sub_1D5AB3B90();
  uint64_t v568 = *(void *)(v569 - 8);
  uint64_t v95 = MEMORY[0x1F4188790](v569);
  v619 = (char *)&v515 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = MEMORY[0x1F4188790](v95);
  v618 = (char *)&v515 - v98;
  MEMORY[0x1F4188790](v97);
  v567 = (char *)&v515 - v99;
  uint64_t v580 = sub_1D5AB2FF0();
  uint64_t v579 = *(void *)(v580 - 8);
  uint64_t v100 = MEMORY[0x1F4188790](v580);
  v535 = (char *)&v515 - ((v101 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = MEMORY[0x1F4188790](v100);
  v532 = (char *)&v515 - v103;
  uint64_t v104 = MEMORY[0x1F4188790](v102);
  uint64_t v531 = (uint64_t)&v515 - v105;
  MEMORY[0x1F4188790](v104);
  v566 = (char *)&v515 - v106;
  uint64_t v584 = sub_1D5AB49D0();
  uint64_t v583 = *(void *)(v584 - 8);
  uint64_t v107 = MEMORY[0x1F4188790](v584);
  v534 = (char *)&v515 - ((v108 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = MEMORY[0x1F4188790](v107);
  v533 = (char *)&v515 - v110;
  MEMORY[0x1F4188790](v109);
  v620 = (char *)&v515 - v111;
  uint64_t v519 = sub_1D5AB43E0();
  uint64_t v530 = *(void *)(v519 - 8);
  uint64_t v112 = MEMORY[0x1F4188790](v519);
  v520 = (char *)&v515 - ((v113 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = MEMORY[0x1F4188790](v112);
  v529 = (char *)&v515 - v115;
  MEMORY[0x1F4188790](v114);
  v523 = (char *)&v515 - v116;
  uint64_t v522 = sub_1D5AB41C0();
  uint64_t v521 = *(void *)(v522 - 8);
  MEMORY[0x1F4188790](v522);
  uint64_t v118 = (char *)&v515 - ((v117 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = sub_1D5AB2BE0();
  uint64_t v565 = *(void *)(v119 - 8);
  uint64_t v120 = MEMORY[0x1F4188790](v119);
  uint64_t v122 = (char **)((char *)&v515 - ((v121 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v123 = MEMORY[0x1F4188790](v120);
  uint64_t v125 = (char *)&v515 - v124;
  MEMORY[0x1F4188790](v123);
  uint64_t v127 = (char *)&v515 - v126;
  v636 = (char *)type metadata accessor for RemoteBrowsingJournalProperty();
  uint64_t v128 = MEMORY[0x1F4188790](v636);
  v621 = (uint64_t *)((char *)&v515 - ((v129 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v130 = MEMORY[0x1F4188790](v128);
  v628 = (char *)&v515 - v131;
  uint64_t v132 = MEMORY[0x1F4188790](v130);
  v615 = (uint64_t *)((char *)&v515 - v133);
  uint64_t v134 = MEMORY[0x1F4188790](v132);
  v635 = (char **)((char *)&v515 - v135);
  uint64_t v136 = MEMORY[0x1F4188790](v134);
  uint64_t v138 = (uint64_t *)((char *)&v515 - v137);
  MEMORY[0x1F4188790](v136);
  uint64_t v140 = (char *)&v515 - v139;
  uint64_t v141 = type metadata accessor for RemoteBrowsingJournalEntry();
  MEMORY[0x1F4188790](v141);
  uint64_t v143 = (char *)&v515 - ((v142 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D59C2B0C((uint64_t)v637, (uint64_t)v143, (uint64_t (*)(void))type metadata accessor for RemoteBrowsingJournalEntry);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v146 = (uint64_t)v143;
      unsigned __int8 v147 = (void (*)(void, void))v635;
      sub_1D59A3508(v146, (uint64_t)v635);
      uint64_t v148 = v615;
      sub_1D59C2B0C((uint64_t)v147, (uint64_t)v615, (uint64_t (*)(void))type metadata accessor for RemoteBrowsingJournalProperty);
      int v149 = swift_getEnumCaseMultiPayload();
      uint64_t v150 = v629;
      uint64_t v151 = v627;
      uint64_t v152 = v626;
      uint64_t v153 = v623;
      switch(v149)
      {
        case 1:
        case 4:
        case 8:
        case 10:
        case 12:
        case 13:
        case 16:
          sub_1D5980A04((uint64_t)v635);
          uint64_t v154 = (char *)v148;
          return sub_1D5980A04((uint64_t)v154);
        case 2:
          goto LABEL_132;
        case 3:
          uint64_t v226 = (char *)*v148;
          int64_t v227 = *(void *)(*v148 + 16);
          if (!v227)
          {
            swift_bridgeObjectRelease();
            uint64_t v200 = (void *)MEMORY[0x1E4FBC860];
            goto LABEL_162;
          }
          *(void *)&long long v643 = MEMORY[0x1E4FBC860];
          sub_1D594E784(0, v227, 0);
          uint64_t v157 = sub_1D594F1A0(v226);
          uint64_t v189 = v228;
          char v230 = v229 & 1;
          v637 = v226 + 56;
          v633 = (void (*)(void, void))(v614 + 32);
          v634 = (char *)(v614 + 16);
          v632 = (char *)(v614 + 8);
          v636 = v226;
          while ((v157 & 0x8000000000000000) == 0 && v157 < 1 << v226[32])
          {
            if (((*(void *)&v637[((unint64_t)v157 >> 3) & 0x1FFFFFFFFFFFFFF8] >> v157) & 1) == 0) {
              goto LABEL_185;
            }
            if (*((_DWORD *)v226 + 9) != v189) {
              goto LABEL_188;
            }
            uint64_t v231 = v614;
            uint64_t v232 = *((void *)v226 + 6) + *(void *)(v614 + 72) * v157;
            uint64_t v233 = v611;
            uint64_t v234 = v613;
            (*(void (**)(char *, uint64_t, uint64_t))(v614 + 16))(v611, v232, v613);
            uint64_t v235 = v612;
            (*(void (**)(char *, char *, uint64_t))(v231 + 32))(v612, v233, v234);
            uint64_t v236 = sub_1D5AB48F0();
            uint64_t v238 = v237;
            (*(void (**)(char *, uint64_t))(v231 + 8))(v235, v234);
            uint64_t v200 = (void *)v643;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1D594E784(0, v200[2] + 1, 1);
              uint64_t v200 = (void *)v643;
            }
            unint64_t v240 = v200[2];
            unint64_t v239 = v200[3];
            uint64_t v140 = (char *)(v240 + 1);
            if (v240 >= v239 >> 1)
            {
              sub_1D594E784(v239 > 1, v240 + 1, 1);
              uint64_t v200 = (void *)v643;
            }
            v200[2] = v140;
            uint64_t v241 = &v200[2 * v240];
            v241[4] = v236;
            v241[5] = v238;
            uint64_t v226 = v636;
            uint64_t v242 = sub_1D594F244(v157, (void (*)(char *, char *, uint64_t))v189, v230 & 1, v636);
            uint64_t v157 = v242;
            uint64_t v189 = (void (*)(void, void, void))v243;
            char v230 = v244 & 1;
            if (!--v227)
            {
              sub_1D594B5F8(v242, v243, v244 & 1);
              swift_bridgeObjectRelease();
LABEL_162:
              uint64_t v268 = v576;
              swift_bridgeObjectRetain();
              uint64_t v480 = swift_bridgeObjectRetain();
              v481 = (uint64_t (*)(void))MEMORY[0x1E4F9EDF8];
              v482 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F9EDD8];
              v483 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1D5A1A794;
              goto LABEL_167;
            }
          }
LABEL_182:
          __break(1u);
          goto LABEL_183;
        case 5:
          uint64_t v321 = (char *)*v148;
          int64_t v322 = *(void *)(*v148 + 16);
          if (!v322)
          {
            swift_bridgeObjectRelease();
            uint64_t v200 = (void *)MEMORY[0x1E4FBC860];
            goto LABEL_165;
          }
          *(void *)&long long v643 = MEMORY[0x1E4FBC860];
          sub_1D594E784(0, v322, 0);
          uint64_t v157 = sub_1D594F1A0(v321);
          uint64_t v189 = v323;
          char v325 = v324 & 1;
          v636 = v321;
          v637 = v321 + 56;
          v629 = v634 + 32;
          v630 = v634 + 16;
          v628 = v634 + 8;
          while ((v157 & 0x8000000000000000) == 0 && v157 < 1 << v321[32])
          {
            if (((*(void *)&v637[((unint64_t)v157 >> 3) & 0x1FFFFFFFFFFFFFF8] >> v157) & 1) == 0) {
              goto LABEL_186;
            }
            if (*((_DWORD *)v321 + 9) != v189) {
              goto LABEL_189;
            }
            uint64_t v326 = *((void *)v321 + 6);
            v327 = v633;
            v328 = v634;
            uint64_t v329 = v631;
            (*((void (**)(char *, uint64_t, void (*)(void, void)))v634 + 2))(v631, v326 + *((void *)v634 + 9) * v157, v633);
            uint64_t v330 = v632;
            (*((void (**)(char *, char *, void (*)(void, void)))v328 + 4))(v632, v329, v327);
            uint64_t v331 = sub_1D5AB40D0();
            uint64_t v333 = v332;
            (*((void (**)(char *, void))v328 + 1))(v330, v327);
            uint64_t v200 = (void *)v643;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1D594E784(0, v200[2] + 1, 1);
              uint64_t v200 = (void *)v643;
            }
            unint64_t v335 = v200[2];
            unint64_t v334 = v200[3];
            uint64_t v140 = (char *)(v335 + 1);
            if (v335 >= v334 >> 1)
            {
              sub_1D594E784(v334 > 1, v335 + 1, 1);
              uint64_t v200 = (void *)v643;
            }
            v200[2] = v140;
            v336 = &v200[2 * v335];
            v336[4] = v331;
            v336[5] = v333;
            uint64_t v321 = v636;
            uint64_t v337 = sub_1D594F244(v157, (void (*)(char *, char *, uint64_t))v189, v325 & 1, v636);
            uint64_t v157 = v337;
            uint64_t v189 = (void (*)(void, void, void))v338;
            char v325 = v339 & 1;
            if (!--v322)
            {
              sub_1D594B5F8(v337, v338, v339 & 1);
              swift_bridgeObjectRelease();
LABEL_165:
              v479 = &v609;
              goto LABEL_166;
            }
          }
LABEL_183:
          __break(1u);
LABEL_184:
          __break(1u);
LABEL_185:
          __break(1u);
LABEL_186:
          __break(1u);
          goto LABEL_187;
        case 6:
          uint64_t v186 = (char *)*v148;
          int64_t v187 = *(void *)(*v148 + 16);
          if (!v187)
          {
            swift_bridgeObjectRelease();
            uint64_t v200 = (void *)MEMORY[0x1E4FBC860];
LABEL_160:
            v479 = &v608;
LABEL_166:
            uint64_t v268 = (uint64_t *)*(v479 - 32);
            swift_bridgeObjectRetain();
            uint64_t v480 = swift_bridgeObjectRetain();
            v481 = (uint64_t (*)(void))MEMORY[0x1E4F9E708];
            v482 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F9E700];
            v483 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1D5A1A408;
LABEL_167:
            uint64_t v341 = sub_1D59C50C8(v480, v200, v481, v482, v483);
            swift_bridgeObjectRelease();
            sub_1D5980A04((uint64_t)v635);
            swift_bridgeObjectRelease();
LABEL_168:
            *uint64_t v268 = v341;
            return swift_bridgeObjectRelease();
          }
          *(void *)&long long v643 = MEMORY[0x1E4FBC860];
          sub_1D594E784(0, v187, 0);
          uint64_t v157 = sub_1D594F1A0(v186);
          uint64_t v189 = v188;
          char v191 = v190 & 1;
          v636 = v186;
          v637 = v186 + 56;
          v629 = v634 + 32;
          v630 = v634 + 16;
          v628 = v634 + 8;
          while (1)
          {
            if (v157 < 0 || v157 >= 1 << v186[32])
            {
              __break(1u);
              goto LABEL_182;
            }
            if (((*(void *)&v637[((unint64_t)v157 >> 3) & 0x1FFFFFFFFFFFFFF8] >> v157) & 1) == 0) {
              goto LABEL_184;
            }
            if (*((_DWORD *)v186 + 9) != v189) {
              break;
            }
            uint64_t v192 = *((void *)v186 + 6);
            uint64_t v193 = v633;
            uint64_t v194 = v634;
            uint64_t v195 = v631;
            (*((void (**)(char *, uint64_t, void (*)(void, void)))v634 + 2))(v631, v192 + *((void *)v634 + 9) * v157, v633);
            uint64_t v196 = v632;
            (*((void (**)(char *, char *, void (*)(void, void)))v194 + 4))(v632, v195, v193);
            uint64_t v197 = sub_1D5AB40D0();
            uint64_t v199 = v198;
            (*((void (**)(char *, void))v194 + 1))(v196, v193);
            uint64_t v200 = (void *)v643;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1D594E784(0, v200[2] + 1, 1);
              uint64_t v200 = (void *)v643;
            }
            unint64_t v202 = v200[2];
            unint64_t v201 = v200[3];
            uint64_t v140 = (char *)(v202 + 1);
            if (v202 >= v201 >> 1)
            {
              sub_1D594E784(v201 > 1, v202 + 1, 1);
              uint64_t v200 = (void *)v643;
            }
            v200[2] = v140;
            uint64_t v203 = &v200[2 * v202];
            v203[4] = v197;
            v203[5] = v199;
            uint64_t v186 = v636;
            uint64_t v204 = sub_1D594F244(v157, (void (*)(char *, char *, uint64_t))v189, v191 & 1, v636);
            uint64_t v157 = v204;
            uint64_t v189 = (void (*)(void, void, void))v205;
            char v191 = v206 & 1;
            if (!--v187)
            {
              sub_1D594B5F8(v204, v205, v206 & 1);
              swift_bridgeObjectRelease();
              goto LABEL_160;
            }
          }
LABEL_187:
          __break(1u);
LABEL_188:
          __break(1u);
LABEL_189:
          __break(1u);
LABEL_190:
          swift_once();
          goto LABEL_61;
        case 7:
          sub_1D5A1B26C(*v148);
          goto LABEL_44;
        case 9:
          v307 = v630;
          v308 = v625;
          uint64_t v276 = v597;
          v633 = (void (*)(void, void))*((void *)v630 + 4);
          ((void (*)(char *, uint64_t *, uint64_t))v633)(v625, v148, v597);
          sub_1D596E6CC(v608, v151, &qword_1EA725130);
          (*((void (**)(uint64_t, char *, uint64_t))v307 + 2))(v152, v308, v276);
          v309 = (char *)*((void *)v307 + 7);
          v636 = v307 + 56;
          v634 = v309;
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v309)(v152, 0, 1, v276);
          uint64_t v310 = v564;
          uint64_t v311 = v564 + *(int *)(v545 + 48);
          sub_1D596E6CC(v151, v564, &qword_1EA725130);
          v637 = (char *)v311;
          sub_1D596E6CC(v152, v311, &qword_1EA725130);
          uint64_t v312 = v151;
          v313 = (unsigned int (*)(void, void, void))*((void *)v307 + 6);
          if (v313(v310, 1, v276) == 1)
          {
            sub_1D594F53C(v152, &qword_1EA725130);
            sub_1D594F53C(v312, &qword_1EA725130);
            (*((void (**)(char *, uint64_t))v307 + 1))(v308, v276);
            sub_1D5980A04((uint64_t)v635);
            if (v313(v637, 1, v276) == 1)
            {
              sub_1D594F53C(v564, &qword_1EA725130);
LABEL_174:
              v502 = &qword_1EA725130;
              v503 = &v640;
LABEL_175:
              uint64_t v507 = *(v503 - 32);
              sub_1D594F53C(v507, v502);
              return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v634)(v507, 1, 1, v276);
            }
          }
          else
          {
            uint64_t v466 = v528;
            sub_1D596E6CC(v310, v528, &qword_1EA725130);
            uint64_t v467 = (uint64_t)v637;
            if (v313(v637, 1, v276) != 1)
            {
              v504 = v518;
              ((void (*)(char *, uint64_t, uint64_t))v633)(v518, v467, v276);
              sub_1D59C5E00(&qword_1EA725BB8, MEMORY[0x1E4F9D770]);
              char v505 = sub_1D5AB4DD0();
              v506 = (void (*)(void, void))*((void *)v630 + 1);
              v506(v504, v276);
              sub_1D594F53C(v626, &qword_1EA725130);
              sub_1D594F53C(v627, &qword_1EA725130);
              v506(v625, v276);
              sub_1D5980A04((uint64_t)v635);
              v506(v466, v276);
              uint64_t result = sub_1D594F53C(v310, &qword_1EA725130);
              if ((v505 & 1) == 0) {
                return result;
              }
              goto LABEL_174;
            }
            sub_1D594F53C(v626, &qword_1EA725130);
            sub_1D594F53C(v627, &qword_1EA725130);
            v468 = (void (*)(void, void))*((void *)v630 + 1);
            v468(v625, v276);
            sub_1D5980A04((uint64_t)v635);
            v468(v466, v276);
          }
          v464 = &qword_1EA725B68;
          v465 = v596;
          return sub_1D594F53C(*(v465 - 32), v464);
        case 11:
          uint64_t v177 = v605;
          int v178 = v548;
          uint64_t v179 = v607;
          v605[4](v548, v148, v607);
          uint64_t v180 = sub_1D5AB3710();
          uint64_t v182 = v181;
          uint64_t v183 = v606;
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v177[6])(v606, 1, v179))
          {
            ((void (*)(char *, uint64_t))v177[1])(v178, v179);
            sub_1D5980A04((uint64_t)v635);
            return swift_bridgeObjectRelease();
          }
          v471 = v524;
          v177[2](v524, (uint64_t *)v183, v179);
          uint64_t v472 = sub_1D5AB3710();
          uint64_t v473 = v179;
          uint64_t v474 = v472;
          uint64_t v476 = v475;
          v477 = v177[1];
          ((void (*)(char *, uint64_t))v477)(v471, v473);
          if (v180 == v474 && v182 == v476)
          {
            swift_bridgeObjectRelease();
            uint64_t v478 = v607;
            ((void (*)(char *, uint64_t))v477)(v178, v607);
            sub_1D5980A04((uint64_t)v635);
            swift_bridgeObjectRelease();
          }
          else
          {
            char v511 = sub_1D5AB5AF0();
            swift_bridgeObjectRelease();
            uint64_t v478 = v607;
            ((void (*)(char *, uint64_t))v477)(v178, v607);
            sub_1D5980A04((uint64_t)v635);
            uint64_t result = swift_bridgeObjectRelease();
            if ((v511 & 1) == 0) {
              return result;
            }
          }
          uint64_t v512 = v606;
          sub_1D594F53C(v606, &qword_1EBDE3340);
          return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v605[7])(v512, 1, 1, v478);
        case 14:
          uint64_t v264 = v583;
          uint64_t v265 = v533;
          uint64_t v266 = v584;
          uint64_t v267 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(v583 + 32))(v533, v148, v584);
          uint64_t v268 = v602;
          uint64_t v269 = *v602;
          MEMORY[0x1F4188790](v267);
          uint64_t v270 = &v515 - 4;
          v513 = v265;
          swift_bridgeObjectRetain();
          uint64_t v271 = sub_1D59C5E80;
          uint64_t v272 = (uint64_t (*)(void))MEMORY[0x1E4F9EED0];
          uint64_t v273 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1D5A1AEAC;
          goto LABEL_82;
        case 15:
          sub_1D5A1B238(*v148);
          goto LABEL_44;
        case 17:
          uint64_t v245 = v579;
          uint64_t v246 = (uint64_t)v566;
          uint64_t v284 = v148;
          uint64_t v248 = v580;
          (*(void (**)(char *, uint64_t *, uint64_t))(v579 + 32))(v566, v284, v580);
          uint64_t v250 = v547;
          sub_1D5A8D428(v246, (uint64_t)v547);
          uint64_t v251 = &qword_1EA725B58;
          goto LABEL_131;
        case 18:
          uint64_t v264 = v592;
          uint64_t v265 = v536;
          uint64_t v266 = v593;
          uint64_t v340 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(v592 + 32))(v536, v148, v593);
          uint64_t v268 = v603;
          uint64_t v269 = *v603;
          MEMORY[0x1F4188790](v340);
          uint64_t v270 = &v515 - 4;
          v513 = v265;
          swift_bridgeObjectRetain();
          uint64_t v271 = sub_1D59C5E64;
          uint64_t v272 = (uint64_t (*)(void))MEMORY[0x1E4F9CE78];
          uint64_t v273 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1D5A1AB20;
LABEL_82:
          uint64_t v320 = sub_1D59C345C((uint64_t)v271, (uint64_t)v270, v269, v272, v273);
          goto LABEL_83;
        case 19:
          sub_1D5980A04((uint64_t)v635);
          uint64_t v443 = v598;
          sub_1D594F53C(v598, &qword_1EA725B48);
          uint64_t v444 = sub_1D5AB34D0();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v444 - 8) + 56))(v443, 1, 1, v444);
          uint64_t v154 = (char *)v148;
          return sub_1D5980A04((uint64_t)v154);
        case 20:
          uint64_t v315 = *v148;
          uint64_t v314 = v148[1];
          swift_bridgeObjectRetain();
          uint64_t v316 = swift_bridgeObjectRetain();
          uint64_t v317 = sub_1D59C5974(v316, v315, v314);
          swift_bridgeObjectRelease();
          sub_1D5980A04((uint64_t)v635);
          swift_bridgeObjectRelease();
          goto LABEL_129;
        case 21:
          uint64_t v264 = v590;
          uint64_t v265 = v537;
          uint64_t v266 = v591;
          uint64_t v318 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(v590 + 32))(v537, v148, v591);
          uint64_t v268 = v601;
          uint64_t v319 = *v601;
          MEMORY[0x1F4188790](v318);
          v513 = v265;
          swift_bridgeObjectRetain();
          uint64_t v320 = sub_1D5A12E24((uint64_t (*)(char *))sub_1D59C5D98, (uint64_t)(&v515 - 4), v319);
LABEL_83:
          uint64_t v341 = v320;
          sub_1D5980A04((uint64_t)v635);
          (*(void (**)(char *, uint64_t))(v264 + 8))(v265, v266);
          goto LABEL_168;
        case 22:
          uint64_t v390 = v604;
          v391 = v570;
          uint64_t v392 = v575;
          v634 = *(char **)(v604 + 32);
          ((void (*)(char *, uint64_t *, uint64_t))v634)(v570, v148, v575);
          uint64_t v393 = v559;
          sub_1D596E6CC(a23, v559, &qword_1EA725B50);
          uint64_t v394 = v558;
          (*(void (**)(uint64_t, char *, uint64_t))(v390 + 16))(v558, v391, v392);
          v636 = *(char **)(v390 + 56);
          v637 = (char *)(v390 + 56);
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v636)(v394, 0, 1, v392);
          uint64_t v395 = v562;
          uint64_t v396 = v562 + *(int *)(v543 + 48);
          sub_1D596E6CC(v393, v562, &qword_1EA725B50);
          sub_1D596E6CC(v394, v396, &qword_1EA725B50);
          v397 = *(unsigned int (**)(void, void, void))(v390 + 48);
          if (v397(v395, 1, v392) == 1)
          {
            sub_1D594F53C(v394, &qword_1EA725B50);
            sub_1D594F53C(v393, &qword_1EA725B50);
            if (v397(v396, 1, v392) == 1)
            {
              sub_1D594F53C(v562, &qword_1EA725B50);
              uint64_t v398 = v604;
LABEL_177:
              sub_1D594F53C(a23, &qword_1EA725B50);
              uint64_t v509 = v575;
              ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v636)(a23, 1, 1, v575);
              unint64_t v510 = sub_1D59712C8(MEMORY[0x1E4FBC860]);
              (*(void (**)(char *, uint64_t))(v398 + 8))(v570, v509);
              sub_1D5980A04((uint64_t)v635);
              unint64_t *v610 = v510;
              return swift_bridgeObjectRelease();
            }
          }
          else
          {
            uint64_t v469 = v526;
            sub_1D596E6CC(v395, v526, &qword_1EA725B50);
            if (v397(v396, 1, v392) != 1)
            {
              v508 = v516;
              ((void (*)(char *, uint64_t, uint64_t))v634)(v516, v396, v392);
              sub_1D59C5E00(&qword_1EA725BC8, MEMORY[0x1E4F9C2B8]);
              LODWORD(v634) = sub_1D5AB4DD0();
              uint64_t v398 = v604;
              v470 = *(void (**)(void, void))(v604 + 8);
              v470(v508, v392);
              sub_1D594F53C(v558, &qword_1EA725B50);
              sub_1D594F53C(v559, &qword_1EA725B50);
              v470(v469, v392);
              sub_1D594F53C(v395, &qword_1EA725B50);
              if (v634) {
                goto LABEL_177;
              }
              uint64_t v392 = v575;
LABEL_154:
              v470(v570, v392);
              goto LABEL_132;
            }
            sub_1D594F53C(v558, &qword_1EA725B50);
            sub_1D594F53C(v559, &qword_1EA725B50);
            (*(void (**)(uint64_t, uint64_t))(v604 + 8))(v469, v392);
          }
          sub_1D594F53C(v562, &qword_1EA725B78);
          v470 = *(void (**)(void, void))(v604 + 8);
          goto LABEL_154;
        case 23:
          uint64_t v245 = v568;
          uint64_t v246 = (uint64_t)v567;
          v451 = v148;
          uint64_t v248 = v569;
          (*(void (**)(char *, uint64_t *, uint64_t))(v568 + 32))(v567, v451, v569);
          uint64_t v250 = v546;
          sub_1D5A8D768(v246, (uint64_t)v546);
          uint64_t v251 = &qword_1EA725B60;
          goto LABEL_131;
        case 24:
          uint64_t v245 = v585;
          uint64_t v246 = (uint64_t)v582;
          v247 = v148;
          uint64_t v248 = v586;
          (*(void (**)(char *, uint64_t *, uint64_t))(v585 + 32))(v582, v247, v586);
          uint64_t v249 = (uint64_t)v581;
          sub_1D5AB4030();
          uint64_t v250 = v587;
          sub_1D5AAF7C8(v249, v587);
          (*(void (**)(uint64_t, uint64_t))(v539 + 8))(v249, v541);
          uint64_t v251 = &qword_1EA725610;
LABEL_131:
          sub_1D594F53C((uint64_t)v250, v251);
          (*(void (**)(uint64_t, uint64_t))(v245 + 8))(v246, v248);
          goto LABEL_132;
        case 25:
          sub_1D5A1B414(*v148);
LABEL_44:
          swift_bridgeObjectRelease();
          goto LABEL_132;
        case 26:
          uint64_t v453 = v588;
          uint64_t v454 = v589;
          (*(void (**)(char *, uint64_t *, uint64_t))(v588 + 32))(v623, v148, v589);
          v455 = v542;
          uint64_t v456 = v599;
          (*(void (**)(char *, uint64_t, uint64_t))(v453 + 16))(v542, v599, v454);
          char v457 = MEMORY[0x1D9458330](v455, v153);
          v458 = *(void (**)(void, void))(v453 + 8);
          v458(v455, v454);
          if (v457)
          {
            uint64_t v459 = sub_1D5AB3820();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v459 - 8) + 56))(v525, 1, 1, v459);
            uint64_t v460 = MEMORY[0x1E4FBC860];
            v637 = (char *)sub_1D59C3074(MEMORY[0x1E4FBC860]);
            sub_1D59C3188(v460);
            v513 = 0;
            unint64_t v514 = sub_1D59C3188(v460);
            sub_1D5AB3F60();
            v458(v623, v454);
            sub_1D5980A04((uint64_t)v635);
            return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v453 + 40))(v456, v455, v454);
          }
          v458(v153, v454);
LABEL_132:
          uint64_t v154 = (char *)v635;
          return sub_1D5980A04((uint64_t)v154);
        default:
          uint64_t v275 = v624;
          uint64_t v276 = v594;
          v633 = (void (*)(void, void))*((void *)v629 + 4);
          ((void (*)(char *, uint64_t *, uint64_t))v633)(v624, v148, v594);
          uint64_t v277 = v561;
          sub_1D596E6CC(v609, v561, &qword_1EA7251B8);
          uint64_t v278 = v560;
          (*((void (**)(uint64_t, char *, uint64_t))v150 + 2))(v560, v275, v276);
          uint64_t v279 = (char *)*((void *)v150 + 7);
          v636 = v150 + 56;
          v634 = v279;
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v279)(v278, 0, 1, v276);
          uint64_t v280 = v563;
          uint64_t v281 = v563 + *(int *)(v544 + 48);
          sub_1D596E6CC(v277, v563, &qword_1EA7251B8);
          v637 = (char *)v281;
          sub_1D596E6CC(v278, v281, &qword_1EA7251B8);
          uint64_t v282 = (unsigned int (*)(void, void, void))*((void *)v150 + 6);
          if (v282(v280, 1, v276) == 1)
          {
            sub_1D594F53C(v278, &qword_1EA7251B8);
            sub_1D594F53C(v277, &qword_1EA7251B8);
            (*((void (**)(char *, uint64_t))v150 + 1))(v275, v276);
            sub_1D5980A04((uint64_t)v635);
            if (v282(v637, 1, v276) == 1)
            {
              sub_1D594F53C(v563, &qword_1EA7251B8);
LABEL_172:
              v502 = &qword_1EA7251B8;
              v503 = &v641;
              goto LABEL_175;
            }
          }
          else
          {
            uint64_t v461 = v527;
            sub_1D596E6CC(v280, v527, &qword_1EA7251B8);
            uint64_t v462 = (uint64_t)v637;
            if (v282(v637, 1, v276) != 1)
            {
              v499 = v517;
              ((void (*)(char *, uint64_t, uint64_t))v633)(v517, v462, v276);
              sub_1D59C5E00(&qword_1EA725BC0, MEMORY[0x1E4F9C4B0]);
              char v500 = sub_1D5AB4DD0();
              v501 = (void (*)(void, void))*((void *)v629 + 1);
              v501(v499, v276);
              sub_1D594F53C(v560, &qword_1EA7251B8);
              sub_1D594F53C(v561, &qword_1EA7251B8);
              v501(v624, v276);
              sub_1D5980A04((uint64_t)v635);
              v501(v461, v276);
              uint64_t result = sub_1D594F53C(v280, &qword_1EA7251B8);
              if ((v500 & 1) == 0) {
                return result;
              }
              goto LABEL_172;
            }
            sub_1D594F53C(v560, &qword_1EA7251B8);
            sub_1D594F53C(v561, &qword_1EA7251B8);
            v463 = (void (*)(void, void))*((void *)v629 + 1);
            v463(v624, v276);
            sub_1D5980A04((uint64_t)v635);
            v463(v461, v276);
          }
          v464 = &qword_1EA725B70;
          v465 = &v595;
          return sub_1D594F53C(*(v465 - 32), v464);
      }
    }
    uint64_t v164 = (uint64_t)v628;
    sub_1D59A3508((uint64_t)v143, (uint64_t)v628);
    uint64_t v165 = v621;
    sub_1D59C2B0C(v164, (uint64_t)v621, (uint64_t (*)(void))type metadata accessor for RemoteBrowsingJournalProperty);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 0x17u:
        sub_1D5980A04(v164);
        goto LABEL_135;
      case 2u:
        LOBYTE(v642) = *(unsigned char *)v165;
        sub_1D59C5D44();
        sub_1D5AB2390();
        sub_1D5980A04(v164);
        char v386 = v644;
        uint64_t v387 = *(void *)a25;
        uint64_t v388 = *(void *)(a25 + 8);
        char v389 = *(unsigned char *)(a25 + 16);
        *(_OWORD *)a25 = v643;
        *(unsigned char *)(a25 + 16) = v386;
        return sub_1D59891FC(v387, v388, v389);
      case 3u:
        sub_1D5980A04(v164);
        uint64_t v224 = *v165;
        uint64_t v225 = &v607;
        goto LABEL_120;
      case 4u:
        uint64_t v368 = v550;
        v369 = v549;
        uint64_t v370 = v551;
        uint64_t v371 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(v550 + 32))(v549, v165, v551);
        uint64_t v372 = *a26;
        MEMORY[0x1F4188790](v371);
        v513 = v369;
        swift_bridgeObjectRetain();
        *a26 = sub_1D59C345C((uint64_t)sub_1D59C5D10, (uint64_t)(&v515 - 4), v372, MEMORY[0x1E4F9E0A0], (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1D5A19CF0);
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725BA8);
        unint64_t v373 = (*(unsigned __int8 *)(v368 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v368 + 80);
        uint64_t v374 = swift_allocObject();
        *(_OWORD *)(v374 + 16) = xmmword_1D5AB90F0;
        (*(void (**)(unint64_t, char *, uint64_t))(v368 + 16))(v374 + v373, v369, v370);
        sub_1D59C5B4C(v374, MEMORY[0x1E4F9E0A0], (void (*)(char *, char *))sub_1D5A7C664);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        uint64_t v375 = v164;
        goto LABEL_102;
      case 5u:
        sub_1D5980A04(v164);
        uint64_t v224 = *v165;
        uint64_t v225 = &v609;
        goto LABEL_120;
      case 6u:
        sub_1D5980A04(v164);
        uint64_t v224 = *v165;
        uint64_t v225 = &v608;
        goto LABEL_120;
      case 7u:
        sub_1D5980A04(v164);
        uint64_t v224 = *v165;
        goto LABEL_119;
      case 8u:
        uint64_t v368 = v553;
        v369 = v552;
        uint64_t v370 = v554;
        uint64_t v376 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(v553 + 32))(v552, v165, v554);
        uint64_t v377 = *a27;
        MEMORY[0x1F4188790](v376);
        v513 = v369;
        swift_bridgeObjectRetain();
        *a27 = sub_1D59C345C((uint64_t)sub_1D59C5CDC, (uint64_t)(&v515 - 4), v377, MEMORY[0x1E4F9E170], (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1D5A19964);
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725BA0);
        unint64_t v378 = (*(unsigned __int8 *)(v368 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v368 + 80);
        uint64_t v379 = swift_allocObject();
        *(_OWORD *)(v379 + 16) = xmmword_1D5AB90F0;
        (*(void (**)(unint64_t, char *, uint64_t))(v368 + 16))(v379 + v378, v369, v370);
        sub_1D59C5B4C(v379, MEMORY[0x1E4F9E170], (void (*)(char *, char *))sub_1D5A7C340);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        uint64_t v375 = (uint64_t)v628;
LABEL_102:
        sub_1D5980A04(v375);
        return (*(uint64_t (**)(char *, uint64_t))(v368 + 8))(v369, v370);
      case 9u:
        sub_1D5980A04(v164);
        uint64_t v380 = v608;
        sub_1D594F53C(v608, &qword_1EA725130);
        v381 = (void (**)(char *, uint64_t *, uint64_t))v630;
        v382 = (void (*)(char *, uint64_t *, uint64_t))*((void *)v630 + 4);
        uint64_t v383 = v380;
        v384 = v165;
        v385 = &v629;
        goto LABEL_125;
      case 0xAu:
        sub_1D5980A04(v164);
        uint64_t v359 = sub_1D5AB39B0();
        return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v359 - 8) + 40))(v571, v165, v359);
      case 0xBu:
        sub_1D5980A04(v164);
        uint64_t v380 = v606;
        sub_1D594F53C(v606, &qword_1EBDE3340);
        v381 = v605;
        v382 = v605[4];
        uint64_t v383 = v380;
        v384 = v165;
        v385 = (char **)&v639;
        goto LABEL_125;
      case 0xCu:
        sub_1D5980A04(v164);
        uint64_t v283 = sub_1D5AB3770();
        return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v283 - 8) + 40))(v572, v165, v283);
      case 0xDu:
        sub_1D5980A04(v164);
        uint64_t v358 = sub_1D5AB4350();
        return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v358 - 8) + 40))(v573, v165, v358);
      case 0xEu:
        uint64_t v207 = v583;
        uint64_t v208 = v534;
        v418 = v165;
        uint64_t v210 = v584;
        uint64_t v419 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(v583 + 32))(v534, v418, v584);
        uint64_t v212 = v602;
        uint64_t v420 = *v602;
        MEMORY[0x1F4188790](v419);
        v513 = v208;
        swift_bridgeObjectRetain();
        uint64_t v421 = sub_1D59C345C((uint64_t)sub_1D59C5CA8, (uint64_t)(&v515 - 4), v420, MEMORY[0x1E4F9EED0], (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1D5A1AEAC);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725B98);
        unint64_t v422 = (*(unsigned __int8 *)(v207 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v207 + 80);
        uint64_t v423 = swift_allocObject();
        *(_OWORD *)(v423 + 16) = xmmword_1D5AB90F0;
        (*(void (**)(unint64_t, char *, uint64_t))(v207 + 16))(v423 + v422, v208, v210);
        *(void *)&long long v643 = sub_1D5A76930(0, *(void *)(v421 + 16) + 1, 0, MEMORY[0x1E4FBC860]);
        uint64_t v424 = swift_bridgeObjectRetain();
        sub_1D5A54BFC(v424);
        sub_1D5A54BD0(v423);
        swift_release();
        uint64_t v218 = sub_1D594F7CC(v643);
        goto LABEL_113;
      case 0xFu:
        sub_1D5980A04(v164);
        uint64_t v224 = *v165;
        uint64_t v225 = &v627;
        goto LABEL_120;
      case 0x10u:
        uint64_t v360 = v556;
        v361 = v555;
        v362 = v165;
        uint64_t v363 = v557;
        uint64_t v364 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(v556 + 32))(v555, v362, v557);
        uint64_t v365 = *a28;
        MEMORY[0x1F4188790](v364);
        v513 = v361;
        swift_bridgeObjectRetain();
        *a28 = sub_1D59C345C((uint64_t)sub_1D59C5094, (uint64_t)(&v515 - 4), v365, MEMORY[0x1E4F9E380], (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1D5A195D8);
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725B90);
        unint64_t v366 = (*(unsigned __int8 *)(v360 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v360 + 80);
        uint64_t v367 = swift_allocObject();
        *(_OWORD *)(v367 + 16) = xmmword_1D5AB90F0;
        (*(void (**)(unint64_t, char *, uint64_t))(v360 + 16))(v367 + v366, v361, v363);
        sub_1D59C5B4C(v367, MEMORY[0x1E4F9E380], (void (*)(char *, char *))sub_1D5A7C01C);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        sub_1D5980A04(v164);
        return (*(uint64_t (**)(char *, uint64_t))(v360 + 8))(v361, v363);
      case 0x11u:
        uint64_t v207 = v579;
        uint64_t v208 = v535;
        uint64_t v209 = v165;
        uint64_t v210 = v580;
        uint64_t v211 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(v579 + 32))(v535, v209, v580);
        uint64_t v212 = v600;
        uint64_t v213 = *v600;
        MEMORY[0x1F4188790](v211);
        v513 = v208;
        swift_bridgeObjectRetain();
        uint64_t v214 = sub_1D59C345C((uint64_t)sub_1D59C5060, (uint64_t)(&v515 - 4), v213, MEMORY[0x1E4F9CE40], (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1D5A1924C);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725B88);
        unint64_t v215 = (*(unsigned __int8 *)(v207 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v207 + 80);
        uint64_t v216 = swift_allocObject();
        *(_OWORD *)(v216 + 16) = xmmword_1D5AB90F0;
        (*(void (**)(unint64_t, char *, uint64_t))(v207 + 16))(v216 + v215, v208, v210);
        *(void *)&long long v643 = sub_1D5A76614(0, *(void *)(v214 + 16) + 1, 0, MEMORY[0x1E4FBC860]);
        uint64_t v217 = swift_bridgeObjectRetain();
        sub_1D5A54220(v217);
        sub_1D5A541F4(v216);
        swift_release();
        uint64_t v218 = sub_1D594FB04(v643);
        goto LABEL_113;
      case 0x12u:
        uint64_t v207 = v592;
        uint64_t v208 = v538;
        v399 = v165;
        uint64_t v210 = v593;
        uint64_t v400 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(v592 + 32))(v538, v399, v593);
        uint64_t v212 = v603;
        uint64_t v401 = *v603;
        MEMORY[0x1F4188790](v400);
        v513 = v208;
        swift_bridgeObjectRetain();
        uint64_t v402 = sub_1D59C345C((uint64_t)sub_1D59C5E64, (uint64_t)(&v515 - 4), v401, MEMORY[0x1E4F9CE78], (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1D5A1AB20);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725B80);
        unint64_t v403 = (*(unsigned __int8 *)(v207 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v207 + 80);
        uint64_t v404 = swift_allocObject();
        *(_OWORD *)(v404 + 16) = xmmword_1D5AB90F0;
        (*(void (**)(unint64_t, char *, uint64_t))(v207 + 16))(v404 + v403, v208, v210);
        *(void *)&long long v643 = sub_1D5A768FC(0, *(void *)(v402 + 16) + 1, 0, MEMORY[0x1E4FBC860]);
        uint64_t v405 = swift_bridgeObjectRetain();
        sub_1D5A542C0(v405);
        sub_1D5A54294(v404);
        swift_release();
        uint64_t v218 = sub_1D594F968(v643);
LABEL_113:
        uint64_t v425 = v218;
        swift_bridgeObjectRelease();
        sub_1D5980A04(v164);
        (*(void (**)(char *, uint64_t))(v207 + 8))(v208, v210);
        *uint64_t v212 = v425;
        return swift_bridgeObjectRelease();
      case 0x13u:
        sub_1D5980A04(v164);
        uint64_t v439 = v598;
        sub_1D594F53C(v598, &qword_1EA725B48);
        uint64_t v440 = sub_1D5AB34D0();
        uint64_t v441 = *(void *)(v440 - 8);
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(v441 + 32))(v439, v165, v440);
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v441 + 56))(v439, 0, 1, v440);
      case 0x14u:
        sub_1D5980A04(v164);
        return swift_bridgeObjectRelease();
      case 0x15u:
        uint64_t v426 = v590;
        v427 = v540;
        v428 = v165;
        uint64_t v429 = v591;
        uint64_t v430 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(v590 + 32))(v540, v428, v591);
        v410 = v601;
        uint64_t v431 = *v601;
        MEMORY[0x1F4188790](v430);
        v513 = v427;
        swift_bridgeObjectRetain();
        uint64_t v432 = v431;
        v433 = v638;
        uint64_t v434 = sub_1D5A12E24((uint64_t (*)(char *))sub_1D59C5E48, (uint64_t)(&v515 - 4), v432);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725200);
        unint64_t v435 = (*(unsigned __int8 *)(v426 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v426 + 80);
        uint64_t v436 = swift_allocObject();
        *(_OWORD *)(v436 + 16) = xmmword_1D5AB90F0;
        (*(void (**)(unint64_t, char *, uint64_t))(v426 + 16))(v436 + v435, v427, v429);
        *(void *)&long long v643 = v434;
        sub_1D5A54268(v436);
        swift_bridgeObjectRetain();
        sub_1D59C38EC((void **)&v643);
        if (v433) {
          goto LABEL_191;
        }
        swift_bridgeObjectRelease();
        uint64_t v417 = v643;
        sub_1D5980A04(v164);
        (*(void (**)(char *, uint64_t))(v426 + 8))(v427, v429);
        break;
      case 0x16u:
        sub_1D5980A04(v164);
        sub_1D594F53C(a23, &qword_1EA725B50);
        uint64_t v437 = v604;
        uint64_t v438 = v575;
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(v604 + 32))(a23, v165, v575);
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v437 + 56))(a23, 0, 1, v438);
      case 0x18u:
        uint64_t v346 = v585;
        char v347 = v582;
        uint64_t v348 = v586;
        (*(void (**)(char *, uint64_t *, uint64_t))(v585 + 32))(v582, v165, v586);
        uint64_t v349 = (uint64_t)v581;
        sub_1D5AB4030();
        uint64_t v350 = v587;
        sub_1D5AB4020();
        uint64_t v351 = sub_1D5AB3800();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v351 - 8) + 56))(v350, 0, 1, v351);
        sub_1D5971B88((uint64_t)v350, v349);
        (*(void (**)(char *, uint64_t))(v346 + 8))(v347, v348);
        uint64_t v154 = (char *)v164;
        return sub_1D5980A04((uint64_t)v154);
      case 0x19u:
        sub_1D5980A04(v164);
        uint64_t v224 = *v165;
        uint64_t v225 = (uint64_t *)&v628;
        goto LABEL_120;
      case 0x1Au:
        sub_1D5980A04(v164);
        return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v588 + 40))(v599, v165, v589);
      default:
        sub_1D5980A04(v164);
        uint64_t v380 = v609;
        sub_1D594F53C(v609, &qword_1EA7251B8);
        v381 = (void (**)(char *, uint64_t *, uint64_t))v629;
        v382 = (void (*)(char *, uint64_t *, uint64_t))*((void *)v629 + 4);
        uint64_t v383 = v380;
        v384 = v165;
        v385 = &v625;
LABEL_125:
        uint64_t v442 = (uint64_t)*(v385 - 32);
        v382((char *)v383, v384, v442);
        return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v381[7])(v380, 0, 1, v442);
    }
LABEL_116:
    uint64_t *v410 = v417;
    return swift_bridgeObjectRelease();
  }
  else
  {
    v637 = v118;
    v635 = v122;
    uint64_t v155 = v616;
    char v156 = v617;
    v515 = v127;
    uint64_t v157 = v119;
    uint64_t v158 = v622;
    sub_1D59A3508((uint64_t)v143, (uint64_t)v140);
    sub_1D59C2B0C((uint64_t)v140, (uint64_t)v138, (uint64_t (*)(void))type metadata accessor for RemoteBrowsingJournalProperty);
    uint64_t v159 = v138;
    uint64_t v160 = swift_getEnumCaseMultiPayload();
    uint64_t v154 = v140;
    uint64_t v161 = (void (**)(char *, uint64_t *, uint64_t))v630;
    uint64_t v162 = v619;
    uint64_t v163 = (uint64_t)v618;
    switch(v160)
    {
      case 1:
        v636 = v154;
        uint64_t v285 = v515;
        uint64_t v286 = v565;
        (*(void (**)(char *, uint64_t *, uint64_t))(v565 + 32))(v515, v159, v157);
        id v287 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28D48]), sel_init);
        uint64_t v189 = *(void (**)(void, void, void))(v286 + 16);
        v189(v125, v285, v157);
        v288 = (char *)v287;
        uint64_t v289 = (uint64_t)v637;
        v290 = v638;
        v634 = v288;
        PersonalizationArchivedSession.init(_:with:)((uint64_t)v125, v288);
        uint64_t v140 = v290;
        if (!v290)
        {
          uint64_t v484 = v530;
          v485 = *(void (**)(void, void, void))(v530 + 16);
          uint64_t v486 = v519;
          v485(v529, v158, v519);
          v487 = v520;
          v485(v520, v158, v486);
          uint64_t v488 = sub_1D5AB43C0();
          v638 = 0;
          v635 = *(char ***)(v484 + 8);
          ((void (*)(char *, uint64_t))v635)(v487, v486);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725BD8);
          uint64_t v489 = v289;
          uint64_t v490 = v521;
          unint64_t v491 = (*(unsigned __int8 *)(v521 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v521 + 80);
          uint64_t v492 = swift_allocObject();
          v633 = (void (*)(void, void))v157;
          uint64_t v493 = v492;
          *(_OWORD *)(v492 + 16) = xmmword_1D5AB90F0;
          uint64_t v494 = v522;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v490 + 16))(v492 + v491, v489, v522);
          *(void *)&long long v643 = sub_1D5A76964(0, *(void *)(v488 + 16) + 1, 0, MEMORY[0x1E4FBC860]);
          uint64_t v495 = swift_bridgeObjectRetain();
          sub_1D5A54C70(v495);
          sub_1D5A54C44(v493);
          swift_bridgeObjectRelease();
          sub_1D594F630(v643);
          swift_bridgeObjectRelease();
          v496 = v523;
          v497 = v529;
          sub_1D5AB43D0();

          swift_bridgeObjectRelease();
          ((void (*)(char *, uint64_t))v635)(v497, v486);
          (*(void (**)(uint64_t, uint64_t))(v490 + 8))(v489, v494);
          (*(void (**)(char *, void (*)(void, void, void)))(v565 + 8))(v515, (void (*)(void, void, void))v633);
          sub_1D5980A04((uint64_t)v636);
          return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v530 + 40))(v158, v496, v486);
        }
        if (qword_1EBDE3B48 != -1) {
          goto LABEL_190;
        }
        break;
      case 2:
        return sub_1D5980A04((uint64_t)v154);
      case 3:
        uint64_t v253 = v154;
        uint64_t v254 = *v159;
        uint64_t v255 = (uint64_t (*)(void))MEMORY[0x1E4F9EDF8];
        uint64_t v256 = (void (*)(char *, char *))sub_1D5A7D93C;
        goto LABEL_92;
      case 4:
      case 8:
      case 16:
      case 22:
        sub_1D5980A04((uint64_t)v154);
        uint64_t v154 = (char *)v159;
        return sub_1D5980A04((uint64_t)v154);
      case 5:
        uint64_t v253 = v154;
        uint64_t v254 = *v159;
        uint64_t v255 = (uint64_t (*)(void))MEMORY[0x1E4F9E708];
        uint64_t v256 = (void (*)(char *, char *))sub_1D5A7D618;
        goto LABEL_92;
      case 6:
        uint64_t v253 = v154;
        uint64_t v254 = *v159;
        uint64_t v255 = (uint64_t (*)(void))MEMORY[0x1E4F9E708];
        uint64_t v256 = (void (*)(char *, char *))sub_1D5A7D618;
        goto LABEL_92;
      case 7:
        sub_1D5980A04((uint64_t)v154);
        uint64_t v224 = *v159;
LABEL_119:
        uint64_t v225 = &v626;
LABEL_120:
        *(void *)*(v225 - 32) = v224;
        return swift_bridgeObjectRelease();
      case 9:
        sub_1D5980A04((uint64_t)v154);
        uint64_t v219 = v608;
        sub_1D594F53C(v608, &qword_1EA725130);
        uint64_t v220 = v161[4];
        uint64_t v221 = v219;
        uint64_t v222 = v159;
        uint64_t v223 = &v629;
        goto LABEL_85;
      case 10:
        sub_1D5980A04((uint64_t)v154);
        uint64_t v252 = sub_1D5AB39B0();
        return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v252 - 8) + 40))(v571, v159, v252);
      case 11:
        sub_1D5980A04((uint64_t)v154);
        uint64_t v219 = v606;
        sub_1D594F53C(v606, &qword_1EBDE3340);
        uint64_t v161 = v605;
        uint64_t v220 = v605[4];
        uint64_t v221 = v219;
        uint64_t v222 = v159;
        uint64_t v223 = (char **)&v639;
        goto LABEL_85;
      case 12:
        sub_1D5980A04((uint64_t)v154);
        uint64_t v185 = sub_1D5AB3770();
        return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v185 - 8) + 40))(v572, v159, v185);
      case 13:
        sub_1D5980A04((uint64_t)v154);
        uint64_t v274 = sub_1D5AB4350();
        return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v274 - 8) + 40))(v573, v159, v274);
      case 14:
        uint64_t v166 = v583;
        uint64_t v167 = v620;
        uint64_t v168 = (uint64_t)v154;
        uint64_t v169 = v584;
        uint64_t v170 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(v583 + 32))(v620, v159, v584);
        a24 = v602;
        uint64_t v171 = *v602;
        MEMORY[0x1F4188790](v170);
        v513 = v167;
        swift_bridgeObjectRetain();
        uint64_t v172 = sub_1D59C345C((uint64_t)sub_1D59C5E80, (uint64_t)(&v515 - 4), v171, MEMORY[0x1E4F9EED0], (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1D5A1AEAC);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725B98);
        unint64_t v173 = (*(unsigned __int8 *)(v166 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v166 + 80);
        uint64_t v174 = swift_allocObject();
        *(_OWORD *)(v174 + 16) = xmmword_1D5AB90F0;
        (*(void (**)(unint64_t, char *, uint64_t))(v166 + 16))(v174 + v173, v167, v169);
        *(void *)&long long v643 = sub_1D5A76930(0, *(void *)(v172 + 16) + 1, 0, MEMORY[0x1E4FBC860]);
        uint64_t v175 = swift_bridgeObjectRetain();
        sub_1D5A54BFC(v175);
        sub_1D5A54BD0(v174);
        swift_release();
        uint64_t v176 = sub_1D594F7CC(v643);
        goto LABEL_128;
      case 15:
        uint64_t v253 = v154;
        uint64_t v254 = *v159;
        uint64_t v255 = (uint64_t (*)(void))MEMORY[0x1E4F9DC50];
        uint64_t v256 = (void (*)(char *, char *))sub_1D5A7CFD0;
        goto LABEL_92;
      case 17:
        uint64_t v352 = v579;
        char v353 = v566;
        uint64_t v165 = (uint64_t *)v154;
        uint64_t v354 = v580;
        (*(void (**)(char *, uint64_t *, uint64_t))(v579 + 32))(v566, v159, v580);
        char v355 = v532;
        (*(void (**)(char *, char *, uint64_t))(v352 + 16))(v532, v353, v354);
        uint64_t v356 = v531;
        sub_1D5A7BCF8(v531, v355);
        v357 = *(void (**)(void, void))(v352 + 8);
        v357(v356, v354);
        goto LABEL_134;
      case 18:
        uint64_t v166 = v592;
        uint64_t v167 = v155;
        uint64_t v168 = (uint64_t)v154;
        uint64_t v169 = v593;
        uint64_t v445 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(v592 + 32))(v155, v159, v593);
        a24 = v603;
        uint64_t v446 = *v603;
        MEMORY[0x1F4188790](v445);
        v513 = v155;
        swift_bridgeObjectRetain();
        uint64_t v447 = sub_1D59C345C((uint64_t)sub_1D59C5DCC, (uint64_t)(&v515 - 4), v446, MEMORY[0x1E4F9CE78], (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1D5A1AB20);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725B80);
        unint64_t v448 = (*(unsigned __int8 *)(v166 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v166 + 80);
        uint64_t v449 = swift_allocObject();
        *(_OWORD *)(v449 + 16) = xmmword_1D5AB90F0;
        (*(void (**)(unint64_t, char *, uint64_t))(v166 + 16))(v449 + v448, v167, v169);
        *(void *)&long long v643 = sub_1D5A768FC(0, *(void *)(v447 + 16) + 1, 0, MEMORY[0x1E4FBC860]);
        uint64_t v450 = swift_bridgeObjectRetain();
        sub_1D5A542C0(v450);
        sub_1D5A54294(v449);
        swift_release();
        uint64_t v176 = sub_1D594F968(v643);
LABEL_128:
        uint64_t v317 = v176;
        swift_bridgeObjectRelease();
        sub_1D5980A04(v168);
        (*(void (**)(char *, uint64_t))(v166 + 8))(v167, v169);
LABEL_129:
        *a24 = v317;
        return swift_bridgeObjectRelease();
      case 19:
        sub_1D5980A04((uint64_t)v154);
        uint64_t v343 = v598;
        sub_1D594F53C(v598, &qword_1EA725B48);
        uint64_t v344 = sub_1D5AB34D0();
        uint64_t v345 = *(void *)(v344 - 8);
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(v345 + 32))(v343, v159, v344);
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v345 + 56))(v343, 0, 1, v344);
      case 20:
        sub_1D5980A04((uint64_t)v154);
        return swift_bridgeObjectRelease();
      case 21:
        uint64_t v406 = (uint64_t)v154;
        uint64_t v407 = v590;
        uint64_t v408 = v591;
        uint64_t v409 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(v590 + 32))(v156, v159, v591);
        v410 = v601;
        uint64_t v411 = *v601;
        MEMORY[0x1F4188790](v409);
        v513 = v156;
        swift_bridgeObjectRetain();
        uint64_t v412 = v411;
        v413 = v638;
        uint64_t v414 = sub_1D5A12E24((uint64_t (*)(char *))sub_1D59C5E48, (uint64_t)(&v515 - 4), v412);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725200);
        unint64_t v415 = (*(unsigned __int8 *)(v407 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v407 + 80);
        uint64_t v416 = swift_allocObject();
        *(_OWORD *)(v416 + 16) = xmmword_1D5AB90F0;
        (*(void (**)(unint64_t, char *, uint64_t))(v407 + 16))(v416 + v415, v156, v408);
        *(void *)&long long v643 = v414;
        sub_1D5A54268(v416);
        swift_bridgeObjectRetain();
        sub_1D59C38EC((void **)&v643);
        if (v413)
        {
LABEL_191:
          swift_release();
          __break(1u);
          JUMPOUT(0x1D59C29C8);
        }
        swift_bridgeObjectRelease();
        uint64_t v417 = v643;
        sub_1D5980A04(v406);
        (*(void (**)(char *, uint64_t))(v407 + 8))(v156, v408);
        goto LABEL_116;
      case 23:
        uint64_t v452 = v568;
        char v353 = v567;
        uint64_t v165 = (uint64_t *)v154;
        uint64_t v354 = v569;
        (*(void (**)(char *, uint64_t *, uint64_t))(v568 + 32))(v567, v159, v569);
        (*(void (**)(char *, char *, uint64_t))(v452 + 16))(v162, v353, v354);
        sub_1D5A7CCAC(v163, v162);
        v357 = *(void (**)(void, void))(v452 + 8);
        v357(v163, v354);
LABEL_134:
        v357(v353, v354);
LABEL_135:
        uint64_t v154 = (char *)v165;
        return sub_1D5980A04((uint64_t)v154);
      case 24:
        uint64_t v257 = v585;
        uint64_t v258 = v582;
        uint64_t v259 = v154;
        uint64_t v260 = v586;
        (*(void (**)(char *, uint64_t *, uint64_t))(v585 + 32))(v582, v159, v586);
        uint64_t v261 = (uint64_t)v581;
        sub_1D5AB4030();
        uint64_t v262 = v587;
        sub_1D5AB4020();
        uint64_t v263 = sub_1D5AB3800();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v263 - 8) + 56))(v262, 0, 1, v263);
        sub_1D5971B88((uint64_t)v262, v261);
        (*(void (**)(char *, uint64_t))(v257 + 8))(v258, v260);
        uint64_t v154 = v259;
        return sub_1D5980A04((uint64_t)v154);
      case 25:
        uint64_t v253 = v154;
        uint64_t v254 = *v159;
        uint64_t v255 = (uint64_t (*)(void))MEMORY[0x1E4F9E7B8];
        uint64_t v256 = (void (*)(char *, char *))sub_1D5A7DF84;
LABEL_92:
        sub_1D59C2B74(v254, v255, v256);
        uint64_t v154 = v253;
        return sub_1D5980A04((uint64_t)v154);
      case 26:
        sub_1D5980A04((uint64_t)v154);
        return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v588 + 40))(v599, v159, v589);
      default:
        sub_1D5980A04((uint64_t)v154);
        uint64_t v219 = v609;
        sub_1D594F53C(v609, &qword_1EA7251B8);
        uint64_t v161 = (void (**)(char *, uint64_t *, uint64_t))v629;
        uint64_t v220 = (void (*)(char *, uint64_t *, uint64_t))*((void *)v629 + 4);
        uint64_t v221 = v219;
        uint64_t v222 = v159;
        uint64_t v223 = &v625;
LABEL_85:
        uint64_t v342 = (uint64_t)*(v223 - 32);
        v220((char *)v221, v222, v342);
        return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v161[7])(v219, 0, 1, v342);
    }
LABEL_61:
    uint64_t v291 = sub_1D5AB4B50();
    __swift_project_value_buffer(v291, (uint64_t)qword_1EBDE38C8);
    v292 = (void (*)(void, void))v635;
    v293 = v515;
    v189(v635, v515, v157);
    v294 = v140;
    v295 = v140;
    v296 = sub_1D5AB4B30();
    os_log_type_t v297 = sub_1D5AB5430();
    if (os_log_type_enabled(v296, v297))
    {
      uint64_t v298 = swift_slowAlloc();
      v637 = (char *)swift_slowAlloc();
      v638 = v140;
      *(void *)&long long v643 = v637;
      *(_DWORD *)uint64_t v298 = 136315394;
      sub_1D59C5E00(&qword_1EA725BD0, MEMORY[0x1E4F9C8B0]);
      uint64_t v299 = sub_1D5AB5AB0();
      uint64_t v642 = sub_1D5951500(v299, v300, (uint64_t *)&v643);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      v633 = *(void (**)(void, void))(v565 + 8);
      v301 = v292;
      uint64_t v302 = v157;
      v633(v301, v157);
      *(_WORD *)(v298 + 12) = 2080;
      v303 = v638;
      swift_getErrorValue();
      uint64_t v304 = sub_1D5AB5B60();
      uint64_t v642 = sub_1D5951500(v304, v305, (uint64_t *)&v643);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D5947000, v296, v297, "Failed to transform %s for personalization with error: %s", (uint8_t *)v298, 0x16u);
      uint64_t v306 = (uint64_t)v637;
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v306, -1, -1);
      MEMORY[0x1D945AAC0](v298, -1, -1);

      v633(v515, v302);
    }
    else
    {

      v498 = *(void (**)(void, void))(v565 + 8);
      v498(v292, v157);

      v498(v293, v157);
    }
    return sub_1D5980A04((uint64_t)v636);
  }
}

uint64_t sub_1D59C2B0C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D59C2B74(uint64_t a1, uint64_t (*a2)(void), void (*a3)(char *, char *))
{
  uint64_t v31 = a3;
  uint64_t v4 = a2(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t result = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v27 - v13;
  int64_t v15 = 0;
  uint64_t v32 = a1;
  uint64_t v18 = *(void *)(a1 + 56);
  uint64_t v17 = a1 + 56;
  uint64_t v16 = v18;
  uint64_t v19 = 1 << *(unsigned char *)(v17 - 24);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v16;
  uint64_t v28 = v17;
  int64_t v29 = (unint64_t)(v19 + 63) >> 6;
  uint64_t v30 = v5 + 16;
  while (1)
  {
    if (v21)
    {
      unint64_t v22 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      unint64_t v23 = v22 | (v15 << 6);
      goto LABEL_5;
    }
    int64_t v24 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v24 >= v29) {
      return swift_release();
    }
    unint64_t v25 = *(void *)(v28 + 8 * v24);
    ++v15;
    if (!v25)
    {
      int64_t v15 = v24 + 1;
      if (v24 + 1 >= v29) {
        return swift_release();
      }
      unint64_t v25 = *(void *)(v28 + 8 * v15);
      if (!v25)
      {
        int64_t v15 = v24 + 2;
        if (v24 + 2 >= v29) {
          return swift_release();
        }
        unint64_t v25 = *(void *)(v28 + 8 * v15);
        if (!v25)
        {
          int64_t v15 = v24 + 3;
          if (v24 + 3 >= v29) {
            return swift_release();
          }
          unint64_t v25 = *(void *)(v28 + 8 * v15);
          if (!v25) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v21 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_5:
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v14, *(void *)(v32 + 48) + *(void *)(v5 + 72) * v23, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v14, v4);
    v31(v11, v8);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v11, v4);
  }
  int64_t v26 = v24 + 4;
  if (v26 >= v29) {
    return swift_release();
  }
  unint64_t v25 = *(void *)(v28 + 8 * v26);
  if (v25)
  {
    int64_t v15 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v15 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v15 >= v29) {
      return swift_release();
    }
    unint64_t v25 = *(void *)(v28 + 8 * v15);
    ++v26;
    if (v25) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

BOOL sub_1D59C2E3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1D5AB4450();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)&v16 - v10;
  uint64_t v12 = a3(v9);
  a3(v12);
  sub_1D59C5E00(&qword_1EA725BF8, MEMORY[0x1E4F9EB80]);
  char v13 = sub_1D5AB4DD0();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v8, v4);
  v14(v11, v4);
  return (v13 & 1) == 0;
}

uint64_t sub_1D59C2FC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4 = a3();
  uint64_t v6 = v5;
  if (v4 == a3() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
    char v10 = 0;
  }
  else
  {
    char v9 = sub_1D5AB5AF0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v10 = v9 ^ 1;
  }
  return v10 & 1;
}

unint64_t sub_1D59C3074(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725BF0);
  uint64_t v2 = (void *)sub_1D5AB59B0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1D59C329C(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D59C3188(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725BE8);
  uint64_t v2 = (void *)sub_1D5AB59B0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1D59C329C(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D59C329C(uint64_t a1, uint64_t a2)
{
  sub_1D5AB5C20();
  sub_1D5AB4E60();
  uint64_t v4 = sub_1D5AB5C60();
  return sub_1D59C3314(a1, a2, v4);
}

unint64_t sub_1D59C3314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_1D5AB5AF0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        uint64_t v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_1D5AB5AF0() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            int64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (sub_1D5AB5AF0()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_1D59C345C(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  char v10 = (uint64_t (*)(char *))isStackAllocationSafe;
  v17[1] = *MEMORY[0x1E4F143B8];
  char v11 = *(unsigned char *)(a3 + 32);
  unint64_t v12 = (unint64_t)((1 << v11) + 63) >> 6;
  size_t v13 = 8 * v12;
  if ((v11 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    v17[0] = v17;
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v17 - ((v13 + 15) & 0x3FFFFFFFFFFFFFF0), v13);
    uint64_t v14 = sub_1D59C3608((uint64_t)v17 - ((v13 + 15) & 0x3FFFFFFFFFFFFFF0), v12, a3, v10, a2, a4, a5);
    swift_release();
    if (v5) {
      swift_willThrow();
    }
  }
  else
  {
    int64_t v15 = (void *)swift_slowAlloc();
    bzero(v15, v13);
    uint64_t v14 = sub_1D59C3608((uint64_t)v15, v12, a3, v10, a2, a4, a5);
    swift_release();
    MEMORY[0x1D945AAC0](v15, -1, -1);
  }
  return v14;
}

uint64_t sub_1D59C3608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *), uint64_t a5, uint64_t (*a6)(void), uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v31 = a2;
  uint64_t v32 = a7;
  uint64_t v40 = a4;
  uint64_t v33 = a1;
  uint64_t v39 = a6(0);
  uint64_t result = MEMORY[0x1F4188790](v39);
  unint64_t v12 = (char *)&v31 - v11;
  int64_t v13 = 0;
  uint64_t v41 = a3;
  uint64_t v14 = *(void *)(a3 + 56);
  uint64_t v34 = 0;
  uint64_t v35 = a3 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v36 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v37 = v10 + 16;
  uint64_t v38 = v10;
  uint64_t v18 = (uint64_t (**)(char *, uint64_t))(v10 + 8);
  while (v17)
  {
    unint64_t v19 = __clz(__rbit64(v17));
    v17 &= v17 - 1;
    unint64_t v20 = v19 | (v13 << 6);
LABEL_17:
    uint64_t v24 = v39;
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v12, *(void *)(v41 + 48) + *(void *)(v38 + 72) * v20, v39);
    char v25 = v40(v12);
    if (v7) {
      return (*v18)(v12, v24);
    }
    char v26 = v25;
    uint64_t result = (*v18)(v12, v24);
    if (v26)
    {
      *(void *)(v33 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      BOOL v21 = __OFADD__(v34++, 1);
      if (v21) {
        goto LABEL_30;
      }
    }
  }
  BOOL v21 = __OFADD__(v13++, 1);
  if (v21)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v13 >= v36) {
    goto LABEL_27;
  }
  unint64_t v22 = *(void *)(v35 + 8 * v13);
  if (v22)
  {
LABEL_16:
    unint64_t v17 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
    goto LABEL_17;
  }
  int64_t v23 = v13 + 1;
  if (v13 + 1 >= v36) {
    goto LABEL_27;
  }
  unint64_t v22 = *(void *)(v35 + 8 * v23);
  if (v22) {
    goto LABEL_15;
  }
  int64_t v23 = v13 + 2;
  if (v13 + 2 >= v36) {
    goto LABEL_27;
  }
  unint64_t v22 = *(void *)(v35 + 8 * v23);
  if (v22) {
    goto LABEL_15;
  }
  int64_t v23 = v13 + 3;
  if (v13 + 3 >= v36)
  {
LABEL_27:
    uint64_t v28 = v31;
    uint64_t v27 = v32;
    uint64_t v29 = v34;
    uint64_t v30 = v41;
    swift_retain();
    return v27(v33, v28, v29, v30);
  }
  unint64_t v22 = *(void *)(v35 + 8 * v23);
  if (v22)
  {
LABEL_15:
    int64_t v13 = v23;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v36) {
      goto LABEL_27;
    }
    unint64_t v22 = *(void *)(v35 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1D59C38EC(void **a1)
{
  uint64_t v2 = *(void *)(sub_1D5AB2E90() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1D59C504C(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_1D59C3994(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_1D59C3994(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D5AB2E90();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v139 = (char *)&v133 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v152 = (char *)&v133 - v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  unsigned __int8 v147 = (char *)&v133 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v148 = (char *)&v133 - v12;
  uint64_t v13 = a1[1];
  uint64_t result = sub_1D5AB5AA0();
  if (result >= v13)
  {
    if (v13 < 0) {
      goto LABEL_142;
    }
    if (v13) {
      return sub_1D59C4538(0, v13, 1, a1);
    }
    return result;
  }
  if (v13 >= 0) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v13 + 1;
  }
  if (v13 < -1) {
    goto LABEL_150;
  }
  uint64_t v135 = result;
  uint64_t v142 = v5;
  if (v13 < 2)
  {
    uint64_t v20 = MEMORY[0x1E4FBC860];
    unint64_t v141 = MEMORY[0x1E4FBC860]
         + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    if (v13 != 1)
    {
      unint64_t v23 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      unint64_t v22 = (char *)MEMORY[0x1E4FBC860];
LABEL_106:
      uint64_t v134 = v20;
      if (v23 >= 2)
      {
        uint64_t v126 = *a1;
        do
        {
          unint64_t v127 = v23 - 2;
          if (v23 < 2) {
            goto LABEL_137;
          }
          if (!v126) {
            goto LABEL_149;
          }
          uint64_t v128 = v22;
          uint64_t v129 = *(void *)&v22[16 * v127 + 32];
          uint64_t v130 = *(void *)&v22[16 * v23 + 24];
          sub_1D59C4834(v126 + *(void *)(v142 + 72) * v129, v126 + *(void *)(v142 + 72) * *(void *)&v22[16 * v23 + 16], v126 + *(void *)(v142 + 72) * v130, v141);
          if (v2) {
            break;
          }
          if (v130 < v129) {
            goto LABEL_138;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v128 = sub_1D59C5038((uint64_t)v22);
          }
          if (v127 >= *((void *)v128 + 2)) {
            goto LABEL_139;
          }
          uint64_t v131 = &v128[16 * v127 + 32];
          *(void *)uint64_t v131 = v129;
          *((void *)v131 + 1) = v130;
          unint64_t v132 = *((void *)v128 + 2);
          if (v23 > v132) {
            goto LABEL_140;
          }
          unint64_t v22 = v128;
          memmove(&v128[16 * v23 + 16], &v128[16 * v23 + 32], 16 * (v132 - v23));
          *((void *)v128 + 2) = v132 - 1;
          unint64_t v23 = v132 - 1;
        }
        while (v132 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease();
      *(void *)(v134 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v16 = 1;
    uint64_t v134 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v16 = v13;
    uint64_t v17 = v15 >> 1;
    uint64_t v18 = sub_1D5AB50C0();
    *(void *)(v18 + 16) = v17;
    uint64_t v5 = v142;
    unint64_t v19 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v134 = v18;
    unint64_t v141 = v18 + v19;
  }
  uint64_t v21 = 0;
  uint64_t v145 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v146 = v5 + 16;
  char v156 = (void (**)(char *, char *, uint64_t))(v5 + 32);
  unint64_t v22 = (char *)MEMORY[0x1E4FBC860];
  int v149 = a1;
  uint64_t v151 = v4;
  while (1)
  {
    uint64_t v24 = (char *)v21;
    uint64_t v25 = v21 + 1;
    uint64_t v137 = v22;
    uint64_t v26 = v16;
    if (v21 + 1 >= v16)
    {
      uint64_t v39 = v21 + 1;
      uint64_t v48 = v142;
    }
    else
    {
      uint64_t v143 = (char *)*a1;
      uint64_t v27 = v143;
      uint64_t v28 = v142;
      uint64_t v29 = *(void *)(v142 + 72);
      uint64_t v140 = v21;
      uint64_t v30 = v29;
      uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v142 + 16);
      uint64_t v157 = v26;
      v31(v148, &v143[v29 * v25], v4);
      uint64_t v32 = &v27[v30 * v140];
      uint64_t v33 = v147;
      uint64_t v153 = v31;
      v31(v147, v32, v4);
      uint64_t v34 = v148;
      unint64_t v155 = sub_1D5AB2E80();
      unint64_t v154 = sub_1D5AB2E80();
      uint64_t v35 = v4;
      int64_t v36 = *(void (**)(char *, uint64_t))(v28 + 8);
      v36(v33, v35);
      uint64_t v37 = v35;
      uint64_t v26 = v157;
      v36(v34, v37);
      uint64_t v38 = v30;
      uint64_t v24 = (char *)v140;
      uint64_t v39 = v140 + 2;
      uint64_t v158 = v38;
      if (v140 + 2 >= v26)
      {
        uint64_t v48 = v142;
      }
      else
      {
        uint64_t v138 = v2;
        uint64_t v150 = v38 * v25;
        uint64_t v40 = v143;
        uint64_t v41 = (char *)(v140 + 2);
        uint64_t v144 = v38 * (v140 + 2);
        while (1)
        {
          int v42 = v155 < v154;
          uint64_t v43 = v148;
          uint64_t v44 = v151;
          uint64_t v45 = v153;
          v153(v148, &v40[v144], v151);
          uint64_t v46 = v147;
          v45(v147, &v40[v150], v44);
          unint64_t v47 = sub_1D5AB2E80();
          LODWORD(v47) = v47 >= sub_1D5AB2E80();
          v36(v46, v44);
          v36(v43, v44);
          if (v42 == v47) {
            break;
          }
          uint64_t v38 = v158;
          v40 += v158;
          ++v41;
          uint64_t v26 = v157;
          if ((char *)v157 == v41)
          {
            uint64_t v39 = v157;
            uint64_t v2 = v138;
            uint64_t v48 = v142;
            a1 = v149;
            uint64_t v24 = (char *)v140;
            goto LABEL_25;
          }
        }
        uint64_t v2 = v138;
        uint64_t v48 = v142;
        a1 = v149;
        uint64_t v39 = (uint64_t)v41;
        uint64_t v24 = (char *)v140;
        uint64_t v26 = v157;
        uint64_t v38 = v158;
      }
LABEL_25:
      uint64_t v4 = v151;
      if (v155 < v154)
      {
        if (v39 < (uint64_t)v24) {
          goto LABEL_143;
        }
        if ((uint64_t)v24 < v39)
        {
          uint64_t v49 = 0;
          uint64_t v50 = (uint64_t)v24;
          uint64_t v51 = v38 * (v39 - 1);
          uint64_t v52 = v39 * v38;
          uint64_t v53 = v50;
          uint64_t v54 = v39;
          uint64_t v55 = v50 * v38;
          uint64_t v150 = v54;
          do
          {
            if (v53 != v54 + v49 - 1)
            {
              if (!v143) {
                goto LABEL_148;
              }
              uint64_t v138 = v2;
              uint64_t v57 = &v143[v55];
              uint64_t v58 = &v143[v51];
              uint64_t v59 = v143;
              uint64_t v60 = *v156;
              (*v156)(v139, &v143[v55], v151);
              if (v55 < v51 || v57 >= &v59[v52])
              {
                uint64_t v56 = v151;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v56 = v151;
                if (v55 != v51) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              v60(v58, v139, v56);
              uint64_t v48 = v142;
              uint64_t v2 = v138;
              uint64_t v38 = v158;
            }
            ++v53;
            --v49;
            uint64_t v54 = v150;
            v51 -= v38;
            v52 -= v38;
            v55 += v38;
          }
          while (v53 < v150 + v49);
          a1 = v149;
          uint64_t v4 = v151;
          uint64_t v39 = v150;
          uint64_t v24 = (char *)v140;
          uint64_t v26 = v157;
        }
      }
    }
    if (v39 >= v26) {
      goto LABEL_57;
    }
    if (__OFSUB__(v39, v24)) {
      goto LABEL_141;
    }
    if (v39 - (uint64_t)v24 >= v135) {
      goto LABEL_57;
    }
    if (__OFADD__(v24, v135)) {
      goto LABEL_144;
    }
    uint64_t v61 = (uint64_t)&v24[v135] >= v26 ? v26 : (uint64_t)&v24[v135];
    if (v61 < (uint64_t)v24) {
      break;
    }
    if (v39 != v61)
    {
      uint64_t v140 = (uint64_t)v24;
      uint64_t v138 = v2;
      uint64_t v62 = *(void *)(v48 + 72);
      uint64_t v143 = *(char **)(v48 + 16);
      uint64_t v144 = v62;
      uint64_t v158 = v62 * (v39 - 1);
      uint64_t v157 = v39 * v62;
      uint64_t v136 = v61;
      do
      {
        uint64_t v64 = 0;
        uint64_t v65 = (void (*)(char *, char *, uint64_t))v140;
        uint64_t v150 = v39;
        while (1)
        {
          uint64_t v153 = v65;
          uint64_t v67 = v148;
          uint64_t v66 = v149;
          uint64_t v68 = *v149;
          uint64_t v69 = (void (*)(char *, uint64_t, uint64_t))v143;
          ((void (*)(char *, uint64_t, uint64_t))v143)(v148, v157 + v64 + *v149, v4);
          uint64_t v70 = v158 + v64 + v68;
          uint64_t v71 = v147;
          v69(v147, v70, v4);
          unint64_t v155 = sub_1D5AB2E80();
          unint64_t v154 = sub_1D5AB2E80();
          uint64_t v72 = *v145;
          (*v145)(v71, v4);
          v72(v67, v4);
          if (v155 >= v154) {
            break;
          }
          uint64_t v73 = *v66;
          if (!*v66) {
            goto LABEL_146;
          }
          uint64_t v74 = (char *)(v73 + v158 + v64);
          uint64_t v75 = *v156;
          uint64_t v4 = v151;
          (*v156)(v152, (char *)(v73 + v157 + v64), v151);
          uint64_t v63 = (char *)v150;
          swift_arrayInitWithTakeFrontToBack();
          v75(v74, v152, v4);
          v64 -= v144;
          uint64_t v65 = (void (*)(char *, char *, uint64_t))((char *)v153 + 1);
          if (v63 == (char *)v153 + 1) {
            goto LABEL_50;
          }
        }
        uint64_t v63 = (char *)v150;
        uint64_t v4 = v151;
LABEL_50:
        uint64_t v39 = (uint64_t)(v63 + 1);
        v158 += v144;
        v157 += v144;
      }
      while (v39 != v136);
      uint64_t v39 = v136;
      uint64_t v2 = v138;
      a1 = v149;
      uint64_t v24 = (char *)v140;
    }
LABEL_57:
    if (v39 < (uint64_t)v24) {
      goto LABEL_136;
    }
    if (swift_isUniquelyReferenced_nonNull_native()) {
      unint64_t v22 = v137;
    }
    else {
      unint64_t v22 = sub_1D59C4DFC(0, *((void *)v137 + 2) + 1, 1, v137);
    }
    unint64_t v77 = *((void *)v22 + 2);
    unint64_t v76 = *((void *)v22 + 3);
    unint64_t v23 = v77 + 1;
    if (v77 >= v76 >> 1) {
      unint64_t v22 = sub_1D59C4DFC((char *)(v76 > 1), v77 + 1, 1, v22);
    }
    *((void *)v22 + 2) = v23;
    uint64_t v78 = v22 + 32;
    uint64_t v79 = &v22[16 * v77 + 32];
    *(void *)uint64_t v79 = v24;
    *((void *)v79 + 1) = v39;
    uint64_t v150 = v39;
    if (v77)
    {
      while (1)
      {
        unint64_t v80 = v23 - 1;
        if (v23 >= 4)
        {
          uint64_t v85 = &v78[16 * v23];
          uint64_t v86 = *((void *)v85 - 8);
          uint64_t v87 = *((void *)v85 - 7);
          BOOL v91 = __OFSUB__(v87, v86);
          uint64_t v88 = v87 - v86;
          if (v91) {
            goto LABEL_125;
          }
          uint64_t v90 = *((void *)v85 - 6);
          uint64_t v89 = *((void *)v85 - 5);
          BOOL v91 = __OFSUB__(v89, v90);
          uint64_t v83 = v89 - v90;
          char v84 = v91;
          if (v91) {
            goto LABEL_126;
          }
          unint64_t v92 = v23 - 2;
          uint64_t v93 = &v78[16 * v23 - 32];
          uint64_t v95 = *(void *)v93;
          uint64_t v94 = *((void *)v93 + 1);
          BOOL v91 = __OFSUB__(v94, v95);
          uint64_t v96 = v94 - v95;
          if (v91) {
            goto LABEL_128;
          }
          BOOL v91 = __OFADD__(v83, v96);
          uint64_t v97 = v83 + v96;
          if (v91) {
            goto LABEL_131;
          }
          if (v97 >= v88)
          {
            uint64_t v115 = &v78[16 * v80];
            uint64_t v117 = *(void *)v115;
            uint64_t v116 = *((void *)v115 + 1);
            BOOL v91 = __OFSUB__(v116, v117);
            uint64_t v118 = v116 - v117;
            if (v91) {
              goto LABEL_135;
            }
            BOOL v108 = v83 < v118;
            goto LABEL_94;
          }
        }
        else
        {
          if (v23 != 3)
          {
            uint64_t v109 = *((void *)v22 + 4);
            uint64_t v110 = *((void *)v22 + 5);
            BOOL v91 = __OFSUB__(v110, v109);
            uint64_t v102 = v110 - v109;
            char v103 = v91;
            goto LABEL_88;
          }
          uint64_t v82 = *((void *)v22 + 4);
          uint64_t v81 = *((void *)v22 + 5);
          BOOL v91 = __OFSUB__(v81, v82);
          uint64_t v83 = v81 - v82;
          char v84 = v91;
        }
        if (v84) {
          goto LABEL_127;
        }
        unint64_t v92 = v23 - 2;
        uint64_t v98 = &v78[16 * v23 - 32];
        uint64_t v100 = *(void *)v98;
        uint64_t v99 = *((void *)v98 + 1);
        BOOL v101 = __OFSUB__(v99, v100);
        uint64_t v102 = v99 - v100;
        char v103 = v101;
        if (v101) {
          goto LABEL_130;
        }
        uint64_t v104 = &v78[16 * v80];
        uint64_t v106 = *(void *)v104;
        uint64_t v105 = *((void *)v104 + 1);
        BOOL v91 = __OFSUB__(v105, v106);
        uint64_t v107 = v105 - v106;
        if (v91) {
          goto LABEL_133;
        }
        if (__OFADD__(v102, v107)) {
          goto LABEL_134;
        }
        if (v102 + v107 >= v83)
        {
          BOOL v108 = v83 < v107;
LABEL_94:
          if (v108) {
            unint64_t v80 = v92;
          }
          goto LABEL_96;
        }
LABEL_88:
        if (v103) {
          goto LABEL_129;
        }
        uint64_t v111 = &v78[16 * v80];
        uint64_t v113 = *(void *)v111;
        uint64_t v112 = *((void *)v111 + 1);
        BOOL v91 = __OFSUB__(v112, v113);
        uint64_t v114 = v112 - v113;
        if (v91) {
          goto LABEL_132;
        }
        if (v114 < v102) {
          goto LABEL_15;
        }
LABEL_96:
        unint64_t v119 = v80 - 1;
        if (v80 - 1 >= v23)
        {
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
          goto LABEL_145;
        }
        uint64_t v120 = *a1;
        if (!*a1) {
          goto LABEL_147;
        }
        uint64_t v121 = &v78[16 * v119];
        uint64_t v122 = *(void *)v121;
        uint64_t v123 = &v78[16 * v80];
        uint64_t v124 = *((void *)v123 + 1);
        sub_1D59C4834(v120 + *(void *)(v142 + 72) * *(void *)v121, v120 + *(void *)(v142 + 72) * *(void *)v123, v120 + *(void *)(v142 + 72) * v124, v141);
        if (v2) {
          goto LABEL_117;
        }
        if (v124 < v122) {
          goto LABEL_122;
        }
        if (v80 > *((void *)v22 + 2)) {
          goto LABEL_123;
        }
        *(void *)uint64_t v121 = v122;
        *(void *)&v78[16 * v119 + 8] = v124;
        unint64_t v125 = *((void *)v22 + 2);
        if (v80 >= v125) {
          goto LABEL_124;
        }
        unint64_t v23 = v125 - 1;
        memmove(&v78[16 * v80], v123 + 16, 16 * (v125 - 1 - v80));
        *((void *)v22 + 2) = v125 - 1;
        a1 = v149;
        uint64_t v4 = v151;
        if (v125 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v23 = 1;
LABEL_15:
    uint64_t v16 = a1[1];
    uint64_t v21 = v150;
    if (v150 >= v16)
    {
      uint64_t v20 = v134;
      goto LABEL_106;
    }
  }
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  uint64_t result = sub_1D5AB5910();
  __break(1u);
  return result;
}

uint64_t sub_1D59C4538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v35 = a1;
  uint64_t v7 = sub_1D5AB2E90();
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v45 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v40 = (char *)&v33 - v11;
  uint64_t result = MEMORY[0x1F4188790](v10);
  uint64_t v39 = (char *)&v33 - v14;
  uint64_t v43 = a3;
  uint64_t v34 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void (**)(void, void, void))(v13 + 16);
    uint64_t v15 = v13 + 16;
    uint64_t v17 = *(void *)(v15 + 56);
    int64_t v36 = (uint64_t (**)(char *, uint64_t))(v15 - 8);
    uint64_t v37 = (void (*)(char *, uint64_t, uint64_t))v16;
    uint64_t v38 = v15;
    uint64_t v44 = (uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v49 = v17 * (v43 - 1);
    uint64_t v41 = v17;
    uint64_t v18 = v17 * v43;
    uint64_t v48 = a4;
LABEL_5:
    uint64_t v19 = 0;
    uint64_t v46 = v35;
    uint64_t v42 = v18;
    while (1)
    {
      uint64_t v20 = *v48;
      uint64_t v21 = v18 + v19 + *v48;
      unint64_t v22 = v39;
      unint64_t v23 = v37;
      v37(v39, v21, v7);
      uint64_t v24 = v7;
      uint64_t v25 = v40;
      v23(v40, v49 + v19 + v20, v24);
      unint64_t v47 = sub_1D5AB2E80();
      unint64_t v26 = sub_1D5AB2E80();
      uint64_t v27 = *v36;
      uint64_t v28 = v25;
      uint64_t v7 = v24;
      (*v36)(v28, v24);
      uint64_t v29 = v22;
      uint64_t v18 = v42;
      uint64_t result = v27(v29, v24);
      if (v47 >= v26)
      {
LABEL_4:
        v49 += v41;
        v18 += v41;
        if (++v43 == v34) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v30 = *v48;
      if (!*v48) {
        break;
      }
      uint64_t v31 = (char *)(v30 + v49 + v19);
      uint64_t v32 = *v44;
      (*v44)(v45, v30 + v18 + v19, v24);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = v32(v31, (uint64_t)v45, v24);
      v19 -= v41;
      if (v43 == ++v46) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1D59C4834(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v65 = sub_1D5AB2E90();
  uint64_t v8 = *(void *)(v65 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v65);
  uint64_t v63 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v62 = (char *)&v54 - v11;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_72;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_73;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v68 = a1;
  unint64_t v67 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v37 = a4 + v18;
      unint64_t v66 = a4 + v18;
      unint64_t v68 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        uint64_t v39 = -v13;
        uint64_t v40 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
        uint64_t v61 = v8 + 16;
        uint64_t v57 = (void (**)(char *, uint64_t))(v8 + 8);
        uint64_t v58 = v40;
        unint64_t v59 = a4;
        unint64_t v55 = a1;
        uint64_t v56 = -v13;
        do
        {
          unint64_t v64 = a3;
          unint64_t v60 = a3 + v39;
          uint64_t v41 = v62;
          uint64_t v42 = v65;
          uint64_t v43 = v58;
          v58(v62, v37 + v39, v65);
          unint64_t v44 = a2 + v39;
          uint64_t v45 = v63;
          v43(v63, v44, v42);
          unint64_t v46 = sub_1D5AB2E80();
          unint64_t v47 = sub_1D5AB2E80();
          uint64_t v48 = *v57;
          (*v57)(v45, v42);
          v48(v41, v42);
          if (v46 >= v47)
          {
            unint64_t v51 = v66;
            v66 += v56;
            a3 = v60;
            BOOL v52 = v64 < v51 || v60 >= v51;
            uint64_t v39 = v56;
            if (v52)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v44 = a2;
              unint64_t v49 = v59;
            }
            else
            {
              unint64_t v49 = v59;
              if (v64 != v51) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v44 = a2;
            }
            unint64_t v50 = v55;
          }
          else
          {
            uint64_t v39 = v56;
            a3 = v60;
            if (v64 < a2 || v60 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v49 = v59;
              unint64_t v50 = v55;
            }
            else
            {
              unint64_t v49 = v59;
              unint64_t v50 = v55;
              if (v64 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v68 += v39;
          }
          unint64_t v37 = v66;
          if (v66 <= v49) {
            break;
          }
          a2 = v44;
        }
        while (v44 > v50);
      }
      goto LABEL_70;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v60 = a4 + v17;
    unint64_t v66 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      uint64_t v61 = v8 + 16;
      uint64_t v57 = (void (**)(char *, uint64_t))(v8 + 8);
      uint64_t v58 = v20;
      unint64_t v64 = a3;
      uint64_t v21 = v62;
      unint64_t v22 = (void (**)(char *, uint64_t))(v8 + 8);
      do
      {
        uint64_t v23 = v13;
        uint64_t v24 = v65;
        uint64_t v25 = v58;
        v58(v21, a2, v65);
        unint64_t v26 = a4;
        uint64_t v27 = v63;
        v25(v63, v26, v24);
        unint64_t v28 = sub_1D5AB2E80();
        unint64_t v29 = sub_1D5AB2E80();
        uint64_t v30 = *v22;
        (*v22)(v27, v24);
        v30(v21, v24);
        unint64_t v31 = v68;
        if (v28 >= v29)
        {
          uint64_t v13 = v23;
          unint64_t v35 = v67 + v23;
          if (v68 < v67 || v68 >= v35)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v34 = v64;
          }
          else
          {
            unint64_t v34 = v64;
            if (v68 != v67) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v67 = v35;
          unint64_t v32 = a2;
        }
        else
        {
          uint64_t v13 = v23;
          unint64_t v32 = a2 + v23;
          if (v68 < a2 || v68 >= v32)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v34 = v64;
          }
          else
          {
            unint64_t v34 = v64;
            if (v68 == a2) {
              unint64_t v31 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        unint64_t v68 = v31 + v13;
        a4 = v67;
        if (v67 >= v60) {
          break;
        }
        a2 = v32;
      }
      while (v32 < v34);
    }
LABEL_70:
    sub_1D59C4EF8(&v68, &v67, (uint64_t *)&v66);
    return 1;
  }
LABEL_74:
  uint64_t result = sub_1D5AB59C0();
  __break(1u);
  return result;
}

char *sub_1D59C4DFC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725BE0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1D59C4EF8(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = sub_1D5AB2E90();
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_1D5AB59C0();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_1D59C5038(uint64_t a1)
{
  return sub_1D59C4DFC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1D59C504C(void *a1)
{
  return sub_1D594EC7C(0, a1[2], 0, a1);
}

uint64_t sub_1D59C5060(uint64_t a1)
{
  return sub_1D59C2FC0(a1, *(void *)(v1 + 16), MEMORY[0x1E4F9CE20]) & 1;
}

BOOL sub_1D59C5094(uint64_t a1)
{
  return sub_1D59C2E3C(a1, *(void *)(v1 + 16), MEMORY[0x1E4F9E350]);
}

uint64_t sub_1D59C50C8(uint64_t a1, void *a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  v19[1] = *MEMORY[0x1E4F143B8];
  char v11 = *(unsigned char *)(a1 + 32);
  unsigned int v12 = v11 & 0x3F;
  unint64_t v13 = (unint64_t)((1 << v11) + 63) >> 6;
  size_t v14 = 8 * v13;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v12 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    v19[0] = v19;
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v19 - ((v14 + 15) & 0x3FFFFFFFFFFFFFF0), v14);
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1D59C52C8((uint64_t)v19 - ((v14 + 15) & 0x3FFFFFFFFFFFFFF0), v13, a1, a2, a3, a4, a5);
    swift_release();
    swift_bridgeObjectRelease();
    if (v5) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v17 = (void *)swift_slowAlloc();
    bzero(v17, v14);
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1D59C52C8((uint64_t)v17, v13, a1, a2, a3, a4, a5);
    swift_release();
    swift_bridgeObjectRelease();
    MEMORY[0x1D945AAC0](v17, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v16;
}

uint64_t sub_1D59C52C8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(void), uint64_t (*a6)(uint64_t), uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v42 = a7;
  unint64_t v51 = a6;
  uint64_t v41 = a2;
  uint64_t v43 = a1;
  uint64_t v9 = a5(0);
  uint64_t result = MEMORY[0x1F4188790](v9);
  unint64_t v13 = (char *)&v40 - v12;
  int64_t v14 = 0;
  uint64_t v52 = a3;
  uint64_t v53 = a4;
  uint64_t v15 = *(void *)(a3 + 56);
  uint64_t v45 = 0;
  uint64_t v46 = a3 + 56;
  uint64_t v16 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v15;
  uint64_t v49 = v11 + 16;
  uint64_t v50 = v11;
  int64_t v47 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v48 = (uint64_t (**)(char *, uint64_t))(v11 + 8);
  unint64_t v44 = a4 + 7;
  while (1)
  {
    while (1)
    {
      if (v18)
      {
        uint64_t v54 = (v18 - 1) & v18;
        int64_t v55 = v14;
        unint64_t v19 = __clz(__rbit64(v18)) | (v14 << 6);
      }
      else
      {
        int64_t v20 = v14 + 1;
        if (__OFADD__(v14, 1)) {
          goto LABEL_41;
        }
        if (v20 >= v47) {
          goto LABEL_39;
        }
        unint64_t v21 = *(void *)(v46 + 8 * v20);
        int64_t v22 = v14 + 1;
        if (!v21)
        {
          int64_t v22 = v14 + 2;
          if (v14 + 2 >= v47) {
            goto LABEL_39;
          }
          unint64_t v21 = *(void *)(v46 + 8 * v22);
          if (!v21)
          {
            int64_t v22 = v14 + 3;
            if (v14 + 3 >= v47) {
              goto LABEL_39;
            }
            unint64_t v21 = *(void *)(v46 + 8 * v22);
            if (!v21)
            {
              uint64_t v23 = v14 + 4;
              if (v14 + 4 >= v47) {
                goto LABEL_39;
              }
              unint64_t v21 = *(void *)(v46 + 8 * v23);
              if (!v21)
              {
                while (1)
                {
                  int64_t v22 = v23 + 1;
                  if (__OFADD__(v23, 1)) {
                    goto LABEL_42;
                  }
                  if (v22 >= v47) {
                    goto LABEL_39;
                  }
                  unint64_t v21 = *(void *)(v46 + 8 * v22);
                  ++v23;
                  if (v21) {
                    goto LABEL_20;
                  }
                }
              }
              int64_t v22 = v14 + 4;
            }
          }
        }
LABEL_20:
        uint64_t v54 = (v21 - 1) & v21;
        int64_t v55 = v22;
        unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
      }
      unint64_t v24 = v19;
      uint64_t v25 = v9;
      uint64_t v26 = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v50 + 16))(v13, *(void *)(v52 + 48) + *(void *)(v50 + 72) * v19, v9);
      uint64_t v27 = v13;
      uint64_t v28 = v51(v26);
      uint64_t v30 = v29;
      uint64_t v31 = v53[2];
      if (v31) {
        break;
      }
LABEL_36:
      swift_bridgeObjectRelease();
      unint64_t v13 = v27;
      uint64_t v9 = v25;
      uint64_t result = (*v48)(v27, v25);
      *(void *)(v43 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
      BOOL v38 = __OFADD__(v45++, 1);
      int64_t v14 = v55;
      unint64_t v18 = v54;
      if (v38)
      {
        __break(1u);
LABEL_39:
        uint64_t v39 = v52;
        swift_retain();
        return v42(v43, v41, v45, v39);
      }
    }
    uint64_t v32 = v28;
    if (v53[4] != v28 || v53[5] != v29)
    {
      uint64_t result = sub_1D5AB5AF0();
      if ((result & 1) == 0) {
        break;
      }
    }
LABEL_4:
    swift_bridgeObjectRelease();
    unint64_t v13 = v27;
    uint64_t v9 = v25;
    uint64_t result = (*v48)(v27, v25);
    int64_t v14 = v55;
    unint64_t v18 = v54;
  }
  if (v31 == 1) {
    goto LABEL_36;
  }
  unint64_t v34 = v44;
  uint64_t v35 = 1;
  while (1)
  {
    uint64_t v36 = v35 + 1;
    if (__OFADD__(v35, 1)) {
      break;
    }
    if (*(v34 - 1) == v32 && *v34 == v30) {
      goto LABEL_4;
    }
    uint64_t result = sub_1D5AB5AF0();
    if (result) {
      goto LABEL_4;
    }
    v34 += 2;
    ++v35;
    if (v36 == v31) {
      goto LABEL_36;
    }
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1D59C5678(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v28 = a2;
  uint64_t v34 = a5;
  uint64_t v36 = a4;
  uint64_t v29 = a1;
  uint64_t v6 = sub_1D5AB2B60();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = 0;
  uint64_t v35 = a3;
  uint64_t v12 = *(void *)(a3 + 56);
  uint64_t v30 = 0;
  uint64_t v31 = a3 + 56;
  uint64_t v13 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v32 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v33 = v7 + 16;
  uint64_t v16 = (uint64_t (**)(char *, uint64_t))(v7 + 8);
  while (1)
  {
    if (v15)
    {
      unint64_t v18 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v19 = v18 | (v11 << 6);
      goto LABEL_18;
    }
    BOOL v20 = __OFADD__(v11++, 1);
    if (v20)
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v11 >= v32) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v31 + 8 * v11);
    if (!v21) {
      break;
    }
LABEL_17:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_18:
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v10, *(void *)(v35 + 48) + *(void *)(v7 + 72) * v19, v6);
    if (sub_1D5AB2B50() == v36 && v23 == v34)
    {
      swift_bridgeObjectRelease();
      uint64_t result = (*v16)(v10, v6);
    }
    else
    {
      char v17 = sub_1D5AB5AF0();
      swift_bridgeObjectRelease();
      uint64_t result = (*v16)(v10, v6);
      if ((v17 & 1) == 0)
      {
        *(unint64_t *)((char *)v29 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
        BOOL v20 = __OFADD__(v30++, 1);
        if (v20)
        {
          __break(1u);
LABEL_28:
          uint64_t v24 = v28;
          uint64_t v25 = v30;
          uint64_t v26 = v35;
          swift_retain();
          return sub_1D5A1A07C(v29, v24, v25, v26);
        }
      }
    }
  }
  int64_t v22 = v11 + 1;
  if (v11 + 1 >= v32) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v31 + 8 * v22);
  if (v21) {
    goto LABEL_16;
  }
  int64_t v22 = v11 + 2;
  if (v11 + 2 >= v32) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v31 + 8 * v22);
  if (v21) {
    goto LABEL_16;
  }
  int64_t v22 = v11 + 3;
  if (v11 + 3 >= v32) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v31 + 8 * v22);
  if (v21)
  {
LABEL_16:
    int64_t v11 = v22;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v11 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v11 >= v32) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v31 + 8 * v11);
    ++v22;
    if (v21) {
      goto LABEL_17;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1D59C5974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v15[1] = *MEMORY[0x1E4F143B8];
  char v7 = *(unsigned char *)(a1 + 32);
  unsigned int v8 = v7 & 0x3F;
  unint64_t v9 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v10 = 8 * v9;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v8 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1D59C5678((void *)((char *)v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0)), v9, a1, a2, a3);
    swift_release();
    swift_bridgeObjectRelease();
    if (v3) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v13 = (void *)swift_slowAlloc();
    bzero(v13, v10);
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1D59C5678((unint64_t *)v13, v9, a1, a2, a3);
    swift_release();
    swift_bridgeObjectRelease();
    MEMORY[0x1D945AAC0](v13, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v12;
}

uint64_t sub_1D59C5B4C(uint64_t a1, uint64_t (*a2)(void), void (*a3)(char *, char *))
{
  unint64_t v19 = a3;
  uint64_t v4 = a2(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  unsigned int v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v6);
  int64_t v11 = (char *)&v18 - v10;
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    unint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v13 = v5 + 16;
    uint64_t v14 = v15;
    uint64_t v16 = a1 + ((*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64));
    uint64_t v17 = *(void *)(v13 + 56);
    do
    {
      v14(v8, v16, v4);
      v19(v11, v8);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v13 - 8))(v11, v4);
      v16 += v17;
      --v12;
    }
    while (v12);
  }
  return result;
}

uint64_t sub_1D59C5CA8(uint64_t a1)
{
  return sub_1D59C2FC0(a1, *(void *)(v1 + 16), MEMORY[0x1E4F9EEB0]) & 1;
}

BOOL sub_1D59C5CDC(uint64_t a1)
{
  return sub_1D59C2E3C(a1, *(void *)(v1 + 16), MEMORY[0x1E4F9E140]);
}

BOOL sub_1D59C5D10(uint64_t a1)
{
  return sub_1D59C2E3C(a1, *(void *)(v1 + 16), MEMORY[0x1E4F9E070]);
}

unint64_t sub_1D59C5D44()
{
  unint64_t result = qword_1EA725BB0;
  if (!qword_1EA725BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725BB0);
  }
  return result;
}

uint64_t sub_1D59C5D98(uint64_t a1)
{
  return sub_1D59C2FC0(a1, *(void *)(v1 + 16), MEMORY[0x1E4F9CB28]) & 1;
}

uint64_t sub_1D59C5DCC(uint64_t a1)
{
  return sub_1D59C2FC0(a1, *(void *)(v1 + 16), MEMORY[0x1E4F9CE58]) & 1;
}

uint64_t sub_1D59C5E00(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D59C5E48(uint64_t a1)
{
  return sub_1D59C5D98(a1) & 1;
}

uint64_t sub_1D59C5E64(uint64_t a1)
{
  return sub_1D59C5DCC(a1) & 1;
}

uint64_t sub_1D59C5E80(uint64_t a1)
{
  return sub_1D59C5CA8(a1) & 1;
}

uint64_t Workout.applyingTimestampOffset(_:)()
{
  sub_1D5AB48B0();
  return sub_1D5AB48D0();
}

uint64_t sub_1D59C5EF8()
{
  sub_1D5AB48B0();
  return sub_1D5AB48D0();
}

uint64_t TestProperty.init(_:fallback:)@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  *a4 = *a1;
  uint64_t v6 = &a4[*(int *)(type metadata accessor for TestProperty() + 44)];
  uint64_t v7 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32);
  return v7(v6, a2, a3);
}

uint64_t type metadata accessor for TestProperty()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1D59C5FFC()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
  uint64_t v1 = (void *)sub_1D5AB4DE0();
  id v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2) {
    qword_1EBDE4BE8 = (uint64_t)v2;
  }
  else {
    __break(1u);
  }
}

uint64_t TestProperty.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 v4 = *v2;
  return static TestProperty.value(for:fallback:)(&v4, (uint64_t)&v2[*(int *)(a1 + 44)], *(void *)(a1 + 16), *(void *)(a1 + 24), *(void (**)(char *, char *, uint64_t))(a1 + 32), a2);
}

uint64_t TestProperty.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  sub_1D59C6874(a1, a2);
  unsigned __int8 v4 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8);
  return v4(a1);
}

uint64_t static TestProperty.value(for:fallback:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(char *, char *, uint64_t)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v48 = a5;
  uint64_t v11 = sub_1D5AB5620();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  unint64_t v15 = (char *)&v42 - v14;
  uint64_t v16 = *(void *)(a3 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v13);
  int64_t v47 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  unint64_t v21 = (char *)&v42 - v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v49 = (char *)&v42 - v22;
  int v50 = *a1;
  if (qword_1EBDE4BD0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if ((Platform.internalInstall.getter() & 1) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(a6, a2, a3);
  }
  uint64_t v45 = v21;
  uint64_t v46 = a6;
  if (qword_1EBDE4BF8 != -1) {
    swift_once();
  }
  uint64_t v23 = qword_1EBDE4BE8;
  LOBYTE(v52) = v50;
  unint64_t v24 = UserDefaultsKeys.rawValue.getter();
  (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(a4 + 8))(v23, v24, v25, a3, a4);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v46, a2, a3);
  }
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  uint64_t v28 = v49;
  v27(v49, v15, a3);
  if (sub_1D5AB4DD0())
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v28, a3);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v46, a2, a3);
  }
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v29 = sub_1D5AB4B50();
  __swift_project_value_buffer(v29, (uint64_t)qword_1EBDE5400);
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  uint64_t v31 = v45;
  v30(v45, v28, a3);
  int64_t v32 = sub_1D5AB4B30();
  os_log_type_t v33 = sub_1D5AB5430();
  int v34 = v33;
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v35 = swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    uint64_t v52 = v44;
    *(_DWORD *)uint64_t v35 = 136315394;
    uint64_t v48 = v27;
    LOBYTE(v51) = v50;
    int v50 = v34;
    os_log_t v43 = v32;
    unint64_t v36 = UserDefaultsKeys.rawValue.getter();
    uint64_t v51 = sub_1D5951500(v36, v37, &v52);
    sub_1D5AB5680();
    swift_bridgeObjectRelease();
    *(_WORD *)(v35 + 12) = 2080;
    v30(v47, v31, a3);
    uint64_t v38 = sub_1D5AB4E10();
    uint64_t v51 = sub_1D5951500(v38, v39, &v52);
    sub_1D5AB5680();
    uint64_t v27 = v48;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v31, a3);
    int64_t v32 = v43;
    _os_log_impl(&dword_1D5947000, v43, (os_log_type_t)v50, "Non default value set for %s: %s", (uint8_t *)v35, 0x16u);
    uint64_t v40 = v44;
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v40, -1, -1);
    uint64_t v41 = v35;
    uint64_t v28 = v49;
    MEMORY[0x1D945AAC0](v41, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v31, a3);
  }

  return ((uint64_t (*)(uint64_t, char *, uint64_t))v27)(v46, v28, a3);
}

void (*TestProperty.wrappedValue.modify(void *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  uint64_t v5 = malloc(0x30uLL);
  *a1 = v5;
  *uint64_t v5 = a2;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a2 + 16);
  v5[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[3] = v7;
  size_t v8 = *(void *)(v7 + 64);
  v5[4] = malloc(v8);
  unint64_t v9 = malloc(v8);
  v5[5] = v9;
  unsigned __int8 v11 = *v2;
  static TestProperty.value(for:fallback:)(&v11, (uint64_t)&v2[*(int *)(a2 + 44)], v6, *(void *)(a2 + 24), *(void (**)(char *, char *, uint64_t))(a2 + 32), (uint64_t)v9);
  return sub_1D59C6780;
}

void sub_1D59C6780(uint64_t **a1, char a2)
{
  id v2 = *a1;
  uint64_t v3 = (void *)(*a1)[4];
  unsigned __int8 v4 = (void *)(*a1)[5];
  uint64_t v5 = (*a1)[2];
  uint64_t v6 = (*a1)[3];
  uint64_t v7 = **a1;
  if (a2)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[4], v4, v5);
    sub_1D59C6874((uint64_t)v3, v7);
    size_t v8 = *(void (**)(void *, uint64_t))(v6 + 8);
    v8(v3, v5);
    v8(v4, v5);
  }
  else
  {
    sub_1D59C6874((*a1)[5], v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t static TestProperty<>.BOOLean(for:fallback:)(char *a1, char a2)
{
  return sub_1D59579B8(*a1, a2);
}

uint64_t sub_1D59C6874(uint64_t a1, uint64_t a2)
{
  if (qword_1EBDE4BD0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = (uint64_t)Platform.internalInstall.getter();
  if (result)
  {
    if (qword_1EBDE4BF8 != -1) {
      swift_once();
    }
    uint64_t v4 = qword_1EBDE4BE8;
    unint64_t v5 = UserDefaultsKeys.rawValue.getter();
    (*(void (**)(uint64_t, unint64_t, uint64_t, void))(*(void *)(a2 + 24) + 16))(v4, v5, v6, *(void *)(a2 + 16));
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D59C6988@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for TestProperty();
  return TestProperty.wrappedValue.getter(v2, a1);
}

uint64_t sub_1D59C69C8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TestProperty();
  return sub_1D59C6874(a1, v2);
}

uint64_t sub_1D59C6A0C()
{
  return 24;
}

__n128 sub_1D59C6A18(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_1D59C6A2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 32);
}

uint64_t sub_1D59C6A34()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1D59C6AD0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = ~v5;
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 1) & (unint64_t)~v5) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v5 + 16) & v6));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + v5 + 1) & v6, ((unint64_t)a2 + v5 + 1) & v6);
  }
  return v3;
}

uint64_t sub_1D59C6BB4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80));
}

unsigned char *sub_1D59C6BF0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 16))((unint64_t)&a1[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (unint64_t)&a2[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

unsigned char *sub_1D59C6C60(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 24))((unint64_t)&a1[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (unint64_t)&a2[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

unsigned char *sub_1D59C6CD0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))((unint64_t)&a1[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (unint64_t)&a2[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

unsigned char *sub_1D59C6D40(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 40))((unint64_t)&a1[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (unint64_t)&a2[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_1D59C6DB0(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0xA9) {
    unsigned int v7 = 169;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 1) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)&a1[v9];
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)&a1[v9];
      if (!*(_WORD *)&a1[v9]) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if (v5 > 0xA9) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))((unint64_t)&a1[v6 + 1] & ~v6);
      }
      unsigned int v15 = *a1;
      if (v15 >= 0x57) {
        return v15 - 86;
      }
      else {
        return 0;
      }
    }
  }
  int v11 = a1[v9];
  if (!a1[v9]) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *(unsigned __int16 *)a1;
        break;
      case 3:
        LODWORD(v9) = *(unsigned __int16 *)a1 | (a1[2] << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_1D59C6F50(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0xA9) {
    unsigned int v8 = 169;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 1) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x1D59C71A4);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 > 0xA9)
        {
          unint64_t v18 = (unint64_t)&a1[v9 + 1] & ~v9;
          uint64_t v19 = *(void (**)(unint64_t))(v6 + 56);
          v19(v18);
        }
        else
        {
          *a1 = a2 + 86;
        }
      }
      return;
  }
}

void static AudioPlayerExpansionRequested.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for AudioPlayerExpansionRequested()
{
  return &type metadata for AudioPlayerExpansionRequested;
}

uint64_t CatalogModality.metadata()()
{
  uint64_t v0 = sub_1D5AB1BB0();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7257C8);
  MEMORY[0x1F4188790](v1 - 8);
  sub_1D5AB2C20();
  sub_1D5AB2C80();
  sub_1D5AB2C00();
  sub_1D5AB2C90();
  sub_1D5AB2C10();
  sub_1D5AB2CA0();
  return sub_1D5AB3850();
}

uint64_t TransportDispatching.register<A>(event:handler:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v13 = *a1;
  (*(void (**)(uint64_t, uint64_t))(a6 + 8))(a4, a6);
  char v15 = v13;
  TransportDispatchService.register<A>(event:handler:)(&v15, a2, a3, a5, a7, a8);
  return swift_release();
}

uint64_t TransportDispatching.register(event:handler:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v7 = *a1;
  (*(void (**)(uint64_t, uint64_t))(a5 + 8))(a4, a5);
  char v10 = v7;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  swift_retain();
  sub_1D5AAE2DC(&v10, (uint64_t)sub_1D59C7950, v8);
  swift_release();
  return swift_release();
}

uint64_t TransportDispatching.register(request:handler:)(__int16 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D59C74C8(a1, a2, a3, a4, a5, (uint64_t)&unk_1F2DF0658, (uint64_t)sub_1D59C796C);
}

{
  return sub_1D59C74C8(a1, a2, a3, a4, a5, (uint64_t)&unk_1F2DF0680, (uint64_t)sub_1D59C7974);
}

uint64_t sub_1D59C74C8(__int16 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  __int16 v10 = *a1;
  (*(void (**)(uint64_t, uint64_t))(a5 + 8))(a4, a5);
  __int16 v13 = v10;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  swift_retain();
  sub_1D5AAB9C0(&v13, a7, v11);
  swift_release();
  return swift_release();
}

uint64_t TransportDispatching.register<A>(request:handler:)(__int16 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1D59C7650(a1, a2, a3, a4, a5, a6, a7, a8, (void (*)(__int16 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))TransportDispatchService.register<A>(request:handler:));
}

{
  return sub_1D59C7650(a1, a2, a3, a4, a5, a6, a7, a8, (void (*)(__int16 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))TransportDispatchService.register<A>(request:handler:));
}

{
  return sub_1D59C7650(a1, a2, a3, a4, a5, a6, a7, a8, (void (*)(__int16 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))TransportDispatchService.register<A>(request:handler:));
}

{
  return sub_1D59C7650(a1, a2, a3, a4, a5, a6, a7, a8, (void (*)(__int16 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))TransportDispatchService.register<A>(request:handler:));
}

uint64_t sub_1D59C7650(__int16 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(__int16 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  __int16 v14 = *a1;
  (*(void (**)(uint64_t, uint64_t))(a6 + 8))(a4, a6);
  __int16 v16 = v14;
  a9(&v16, a2, a3, a5, a7, a8);
  return swift_release();
}

uint64_t TransportDispatching.register<A, B>(request:handler:)(__int16 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return sub_1D59C7780(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, (void (*)(__int16 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))TransportDispatchService.register<A, B>(request:handler:));
}

{
  return sub_1D59C7780(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, (void (*)(__int16 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))TransportDispatchService.register<A, B>(request:handler:));
}

uint64_t sub_1D59C7780(__int16 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void (*a12)(__int16 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  __int16 v16 = *a1;
  (*(void (**)(uint64_t, uint64_t))(a7 + 8))(a4, a7);
  __int16 v19 = v16;
  a12(&v19, a2, a3, a5, a6, a8, a9, a10, a11);
  return swift_release();
}

Swift::Void __swiftcall TransportDispatching.unregister(request:)(SeymourClient::TransportRequest request)
{
  __int16 v2 = *(_WORD *)request;
  (*(void (**)())(v1 + 8))();
  __int16 v3 = v2;
  TransportDispatchService.unregister(request:)((SeymourClient::TransportRequest)&v3);
  swift_release();
}

Swift::Void __swiftcall TransportDispatching.unregister(event:)(SeymourClient::TransportEvent event)
{
  char v2 = *(unsigned char *)event;
  (*(void (**)())(v1 + 8))();
  char v3 = v2;
  TransportDispatchService.unregister(event:)((SeymourClient::TransportEvent)&v3);
  swift_release();
}

uint64_t sub_1D59C7918()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D59C7950(uint64_t a1, uint64_t a2)
{
  return sub_1D5AAE2AC(a1, a2, *(uint64_t (**)(void))(v2 + 16));
}

uint64_t sub_1D59C796C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D5AAB7F0(a1, a2, a3, a4, *(void (**)(uint64_t))(v4 + 16));
}

uint64_t sub_1D59C7974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D5AABBFC(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t dispatch thunk of TransportDispatching.dispatchService.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t static SessionDarwinNotification.sessionStatusToken.getter()
{
  return 5355107;
}

unint64_t static SessionDarwinNotification.sessionUpdated.getter()
{
  return 0xD000000000000021;
}

unint64_t static SessionDarwinNotification.sessionMindAppRequirementConfirmation.getter()
{
  return 0xD000000000000031;
}

unint64_t static SessionDarwinNotification.sessionWorkoutAppRequirementConfirmation.getter()
{
  return 0xD000000000000034;
}

unint64_t static SessionDarwinNotification.sessionGuidedRunWorkoutAppRequirementConfirmation.getter()
{
  return 0xD000000000000036;
}

unint64_t static SessionDarwinNotification.sessionGuidedWalkWorkoutAppRequirementConfirmation.getter()
{
  return 0xD000000000000037;
}

id SessionDarwinNotification.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id SessionDarwinNotification.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SessionDarwinNotification();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for SessionDarwinNotification()
{
  return self;
}

id SessionDarwinNotification.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SessionDarwinNotification();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t XPCStreamPublisher.__allocating_init(eventHub:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t XPCStreamPublisher.init(eventHub:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t XPCStreamPublisher.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t XPCStreamPublisher.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

Swift::Void __swiftcall XPCStreamPublisher.publish(name:)(Swift::String name)
{
  object = name._object;
  uint64_t countAndFlagsBits = name._countAndFlagsBits;
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  v7[0] = countAndFlagsBits;
  v7[1] = object;
  uint64_t v6 = *(void (**)(void *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v4 + 8);
  swift_bridgeObjectRetain();
  v6(v7, &type metadata for XPCStreamEventReceived, &protocol witness table for XPCStreamEventReceived, ObjectType, v4);
  swift_bridgeObjectRelease();
}

uint64_t sub_1D59C7DC0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(*(void *)v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  v9[0] = a1;
  v9[1] = a2;
  char v7 = *(void (**)(void *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v5 + 8);
  swift_bridgeObjectRetain();
  v7(v9, &type metadata for XPCStreamEventReceived, &protocol witness table for XPCStreamEventReceived, ObjectType, v5);
  return swift_bridgeObjectRelease();
}

uint64_t dispatch thunk of XPCStreamPublishing.publish(name:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t type metadata accessor for XPCStreamPublisher()
{
  return self;
}

uint64_t method lookup function for XPCStreamPublisher(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for XPCStreamPublisher);
}

uint64_t dispatch thunk of XPCStreamPublisher.__allocating_init(eventHub:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

unint64_t static AudioFocusConstants.metadataDomain.getter()
{
  return 0xD000000000000021;
}

unint64_t static AudioFocusConstants.audioFocusSelectionsKey.getter()
{
  return 0xD000000000000017;
}

ValueMetadata *type metadata accessor for AudioFocusConstants()
{
  return &type metadata for AudioFocusConstants;
}

uint64_t MetricBackgroundAccountEventOccurred.backgroundAccountEvent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB40C0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t MetricBackgroundAccountEventOccurred.init(backgroundAccountEvent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB40C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static MetricBackgroundAccountEventOccurred.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for MetricBackgroundAccountEventOccurred(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB40C0();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for MetricBackgroundAccountEventOccurred(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB40C0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for MetricBackgroundAccountEventOccurred(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB40C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for MetricBackgroundAccountEventOccurred(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB40C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for MetricBackgroundAccountEventOccurred(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB40C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for MetricBackgroundAccountEventOccurred(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB40C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricBackgroundAccountEventOccurred(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D59C8258);
}

uint64_t sub_1D59C8258(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB40C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MetricBackgroundAccountEventOccurred(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D59C82D8);
}

uint64_t sub_1D59C82D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB40C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MetricBackgroundAccountEventOccurred()
{
  uint64_t result = qword_1EA725C00;
  if (!qword_1EA725C00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D59C8394()
{
  uint64_t result = sub_1D5AB40C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t Subscription.init(handler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10 = sub_1D5AB4E20();
  uint64_t v12 = v11;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  *a5 = v10;
  a5[1] = v12;
  a5[2] = result;
  a5[3] = a1;
  a5[4] = a2;
  return result;
}

uint64_t Subscription.identifier.getter()
{
  uint64_t v0 = sub_1D59C8518();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t Subscription.objectIdentifier.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_1D59C84DC()
{
  uint64_t v0 = sub_1D59C8518();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1D59C8518()
{
  return *(void *)v0;
}

uint64_t dispatch thunk of SubscriptionProtocol.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SubscriptionProtocol.objectIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1D59C8548()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

void *sub_1D59C8584(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  uint64_t v5 = a2[4];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *sub_1D59C85CC(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v4 = a2[4];
  a1[3] = a2[3];
  a1[4] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1D59C863C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t sub_1D59C868C(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1D59C86D4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for Subscription()
{
  return __swift_instantiateGenericMetadata();
}

void static MoveRingCompleted.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for MoveRingCompleted()
{
  return &type metadata for MoveRingCompleted;
}

uint64_t URL.init(templateURLString:pixelWidth:pixelHeight:cropCode:fileType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v35 = a7;
  uint64_t v36 = a8;
  uint64_t v33 = a5;
  uint64_t v34 = a6;
  HIDWORD(v32) = a4;
  uint64_t v37 = a9;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4740);
  MEMORY[0x1F4188790](v12 - 8);
  __int16 v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = a1;
  uint64_t v43 = a2;
  uint64_t v40 = 8222587;
  unint64_t v41 = 0xE300000000000000;
  LODWORD(v38) = a3;
  uint64_t v38 = sub_1D5AB5AB0();
  uint64_t v39 = v15;
  sub_1D59AA0A4();
  uint64_t v16 = sub_1D5AB56C0();
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v42 = v16;
  uint64_t v43 = v18;
  uint64_t v40 = 8218747;
  unint64_t v41 = 0xE300000000000000;
  LODWORD(v38) = HIDWORD(v32);
  uint64_t v38 = sub_1D5AB5AB0();
  uint64_t v39 = v19;
  uint64_t v20 = sub_1D5AB56C0();
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v42 = v20;
  uint64_t v43 = v22;
  uint64_t v40 = 8217467;
  unint64_t v41 = 0xE300000000000000;
  uint64_t v38 = v33;
  uint64_t v39 = v34;
  uint64_t v23 = sub_1D5AB56C0();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v42 = v23;
  uint64_t v43 = v25;
  uint64_t v40 = 8218235;
  unint64_t v41 = 0xE300000000000000;
  uint64_t v38 = v35;
  uint64_t v39 = v36;
  sub_1D5AB56C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D5AB1BA0();
  swift_bridgeObjectRelease();
  uint64_t v26 = sub_1D5AB1BB0();
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v14, 1, v26))
  {
    sub_1D59C8ABC((uint64_t)v14);
    uint64_t v28 = 1;
    uint64_t v29 = v37;
  }
  else
  {
    uint64_t v30 = v37;
    (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v37, v14, v26);
    uint64_t v28 = 0;
    uint64_t v29 = v30;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v29, v28, 1, v26);
}

uint64_t sub_1D59C8ABC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4740);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Artwork.imageURL(cropCode:fileType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_1D5AB4520();
  uint64_t v12 = v11;
  uint64_t result = sub_1D5AB4500();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  int v14 = result;
  if (result > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t result = sub_1D5AB4510();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  int v15 = result;
  if (result > 0x7FFFFFFF)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return URL.init(templateURLString:pixelWidth:pixelHeight:cropCode:fileType:)(v10, v12, v14, v15, a1, a2, a3, a4, a5);
}

void static StandRingCompleted.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for StandRingCompleted()
{
  return &type metadata for StandRingCompleted;
}

void *ScoreClient.__allocating_init(queue:)(void *a1)
{
  id v2 = objc_allocWithZone(MEMORY[0x1E4F29268]);
  id v3 = a1;
  uint64_t v4 = (void *)sub_1D5AB4DE0();
  id v5 = objc_msgSend(v2, sel_initWithMachServiceName_options_, v4, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  uint64_t v6 = sub_1D59968E8(v5, v3);
  uint64_t v7 = *(void *)(v6 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 16));
  if (*(unsigned char *)(v6 + 48) == 1)
  {
    *(unsigned char *)(v6 + 48) = 2;
    objc_msgSend(*(id *)(v6 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));

  type metadata accessor for ScoreClient();
  uint64_t result = (void *)swift_allocObject();
  result[2] = v6;
  result[3] = &protocol witness table for XPCClient;
  result[4] = &protocol witness table for XPCClient;
  return result;
}

void *ScoreClient.__allocating_init(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  return sub_1D59C92F8(a1, v3, ObjectType, a2, a3);
}

void *ScoreClient.init(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  return sub_1D595A0B0(a1, v3, ObjectType, a2, a3);
}

uint64_t ScoreClient.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t ScoreClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t ScoreClient.insertScores(_:)(uint64_t a1)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE5400);
  v4._uint64_t countAndFlagsBits = 0xD00000000000006DLL;
  v4._object = (void *)0x80000001D5AC74E0;
  v5._object = (void *)0x80000001D5AC7550;
  v5._uint64_t countAndFlagsBits = 0xD000000000000010;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 218;
  uint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, void, void, uint64_t, uint64_t))(v6 + 16);
  uint64_t v9 = sub_1D5AB2600();
  return v8(&v11, a1, v9, MEMORY[0x1E4F9C620], MEMORY[0x1E4F9C628], ObjectType, v6);
}

uint64_t ScoreClient.submitScores()()
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE5400);
  v2._object = (void *)0x80000001D5AC74E0;
  v2._uint64_t countAndFlagsBits = 0xD00000000000006DLL;
  v3._uint64_t countAndFlagsBits = 0x635374696D627573;
  v3._object = (void *)0xEE0029287365726FLL;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v7 = 219;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v4 + 8))(&v7, ObjectType, v4);
}

uint64_t ScoreClient.fetchRemoteScores(request:)(uint64_t a1)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE5400);
  v4._uint64_t countAndFlagsBits = 0xD00000000000006DLL;
  v4._object = (void *)0x80000001D5AC74E0;
  v5._object = (void *)0x80000001D5AC7570;
  v5._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v12 = 220;
  uint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, void, void, void, void, uint64_t, uint64_t))(v6 + 32);
  uint64_t v9 = sub_1D5AB31F0();
  uint64_t v10 = sub_1D5AB2D30();
  return v8(&v12, a1, v9, v10, MEMORY[0x1E4F9D248], MEMORY[0x1E4F9D250], MEMORY[0x1E4F9C998], MEMORY[0x1E4F9C9A0], ObjectType, v6);
}

uint64_t sub_1D59C919C(uint64_t a1)
{
  return ScoreClient.insertScores(_:)(a1);
}

uint64_t sub_1D59C91C0()
{
  uint64_t v1 = *v0;
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE5400);
  v3._object = (void *)0x80000001D5AC74E0;
  v3._uint64_t countAndFlagsBits = 0xD00000000000006DLL;
  v4._uint64_t countAndFlagsBits = 0x635374696D627573;
  v4._object = (void *)0xEE0029287365726FLL;
  Logger.trace(file:function:)(v3, v4);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v8 = 219;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v5 + 8))(&v8, ObjectType, v5);
}

uint64_t sub_1D59C92B0(uint64_t a1)
{
  return ScoreClient.fetchRemoteScores(request:)(a1);
}

uint64_t type metadata accessor for ScoreClient()
{
  return self;
}

void *sub_1D59C92F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for ScoreClient();
  uint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a4;
  result[4] = a5;
  return result;
}

uint64_t dispatch thunk of ScoreClientProtocol.insertScores(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ScoreClientProtocol.submitScores()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ScoreClientProtocol.fetchRemoteScores(request:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t method lookup function for ScoreClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ScoreClient);
}

uint64_t dispatch thunk of ScoreClient.__allocating_init(connection:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

void static UpNextQueueItemsUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for UpNextQueueItemsUpdated()
{
  return &type metadata for UpNextQueueItemsUpdated;
}

void static RecommendationsUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for RecommendationsUpdated()
{
  return &type metadata for RecommendationsUpdated;
}

id sub_1D59C93F0()
{
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC13SeymourClient12WiFiObserver_wifiInterface], sel_invalidate);
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WiFiObserver();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D59C94F8()
{
  uint64_t v1 = v0;
  void aBlock[6] = *(id *)MEMORY[0x1E4F143B8];
  objc_super v2 = *(void **)(v0 + OBJC_IVAR____TtC13SeymourClient12WiFiObserver_wifiInterface);
  objc_msgSend(v2, sel_resume);
  Swift::String v3 = (void *)swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1D59C9FC8;
  aBlock[5] = v3;
  aBlock[0] = (id)MEMORY[0x1E4F143A8];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_1D59C98DC;
  aBlock[3] = &block_descriptor_13_0;
  Swift::String v4 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v2, sel_setEventHandler_, v4);
  _Block_release(v4);
  unsigned __int8 v5 = objc_msgSend(v2, sel_powerOn);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC13SeymourClient12WiFiObserver_isEnabled) = v5;
  aBlock[0] = 0;
  unsigned int v6 = objc_msgSend(v2, sel_startMonitoringEventType_error_, 1, aBlock);
  id v7 = aBlock[0];
  if (v6)
  {
    id v8 = v7;
  }
  else
  {
    id v9 = aBlock[0];
    uint64_t v10 = (void *)sub_1D5AB1B50();

    swift_willThrow();
    objc_msgSend(v2, sel_invalidate);
    if (qword_1EBDE5420 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1D5AB4B50();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EBDE5400);
    id v12 = v10;
    id v13 = v10;
    int v14 = sub_1D5AB4B30();
    os_log_type_t v15 = sub_1D5AB5410();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = (void *)swift_slowAlloc();
      aBlock[0] = v17;
      *(_DWORD *)uint64_t v16 = 136446210;
      swift_getErrorValue();
      uint64_t v18 = MEMORY[0x1D9459FA0]();
      sub_1D5951500(v18, v19, (uint64_t *)aBlock);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D5947000, v14, v15, "Failed to start monitoring WiFi power events with error: %{public}s", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v17, -1, -1);
      MEMORY[0x1D945AAC0](v16, -1, -1);
    }
    else
    {
    }
  }
}

void sub_1D59C9880(void *a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1D945ABB0](v3);
  if (v4)
  {
    unsigned __int8 v5 = (void *)v4;
    sub_1D59C9944(a1);
  }
}

void sub_1D59C98DC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_1D59C9944(void *a1)
{
  uint64_t v3 = sub_1D5AB4C50();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unsigned int v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D5AB4C70();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v1;
  aBlock[4] = sub_1D59C9F88;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D598EA50;
  aBlock[3] = &block_descriptor_9;
  id v12 = _Block_copy(aBlock);
  id v13 = a1;
  id v14 = v1;
  sub_1D5AB4C60();
  v16[1] = MEMORY[0x1E4FBC860];
  sub_1D59903E8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE5100);
  sub_1D5990440();
  sub_1D5AB56F0();
  MEMORY[0x1D94598A0](0, v10, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

void sub_1D59C9BB4(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4CA0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (id *)((char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (objc_msgSend(a1, sel_type) == (id)1)
  {
    unsigned __int8 v8 = objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC13SeymourClient12WiFiObserver_wifiInterface), sel_powerOn);
    *(unsigned char *)(a2 + OBJC_IVAR____TtC13SeymourClient12WiFiObserver_isEnabled) = v8;
    uint64_t v9 = MEMORY[0x1D945ABB0](a2 + OBJC_IVAR____TtC13SeymourClient12WiFiObserver_delegate);
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = *(void **)(v9 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue);
      *uint64_t v7 = v11;
      (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBF0], v4);
      id v12 = v11;
      LOBYTE(v11) = sub_1D5AB4CC0();
      (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
      if (v11)
      {
        if (MEMORY[0x1D945ABB0](v10 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_delegate))
        {
          sub_1D59B48C0();
          swift_unknownObjectRelease();
        }
        swift_unknownObjectRelease();
      }
      else
      {
        __break(1u);
      }
    }
  }
  else
  {
    if (qword_1EBDE5420 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1D5AB4B50();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EBDE5400);
    v20[0] = a1;
    id v14 = sub_1D5AB4B30();
    os_log_type_t v15 = sub_1D5AB5410();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = (id *)swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 138543362;
      v20[1] = v20[0];
      id v18 = v20[0];
      sub_1D5AB5680();
      *uint64_t v17 = v20[0];

      _os_log_impl(&dword_1D5947000, v14, v15, "WiFi interface received unhandled event: %{public}@", v16, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725C30);
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v17, -1, -1);
      MEMORY[0x1D945AAC0](v16, -1, -1);
    }
    else
    {

      id v19 = v20[0];
    }
  }
}

uint64_t type metadata accessor for WiFiObserver()
{
  return self;
}

uint64_t sub_1D59C9F48()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1D59C9F88()
{
  sub_1D59C9BB4(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1D59C9F90()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1D59C9FC8(void *a1)
{
  sub_1D59C9880(a1, v1);
}

uint64_t sub_1D59C9FD0@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_1D5AB4C10();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  unsigned __int8 v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v14 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5AB4C20();
  int v11 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v10, v4);
  if (v11 == *MEMORY[0x1E4F38B20])
  {
    char v12 = 1;
LABEL_7:
    *a2 = v12;
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  if (v11 == *MEMORY[0x1E4F38B10])
  {
    char v12 = 2;
    goto LABEL_7;
  }
  if (v11 == *MEMORY[0x1E4F38B18])
  {
    char v12 = 0;
    goto LABEL_7;
  }
  sub_1D5979948((uint64_t)a1, (uint64_t)v15);
  v14[1] = 0;
  void v14[2] = 0xE000000000000000;
  sub_1D5AB57F0();
  sub_1D5AB4E90();
  __swift_project_boxed_opaque_existential_1(v15, v15[3]);
  sub_1D5AB4C20();
  sub_1D5AB58C0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  uint64_t result = sub_1D5AB5920();
  __break(1u);
  return result;
}

SeymourClient::NetworkStatus_optional __swiftcall NetworkStatus.init(rawValue:)(Swift::String rawValue)
{
  objc_super v2 = v1;
  unint64_t v3 = sub_1D5AB5A40();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *objc_super v2 = v5;
  return result;
}

uint64_t NetworkStatus.rawValue.getter()
{
  uint64_t v1 = 0x6C62616863616572;
  if (*v0 != 1) {
    uint64_t v1 = 0x6168636165726E75;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x65526E6F69746361;
  }
}

uint64_t sub_1D59CA2E0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D59B2BF0(*a1, *a2);
}

uint64_t sub_1D59CA2EC()
{
  return sub_1D5AB5C60();
}

uint64_t sub_1D59CA3A8()
{
  sub_1D5AB4E60();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D59CA450()
{
  return sub_1D5AB5C60();
}

SeymourClient::NetworkStatus_optional sub_1D59CA508(Swift::String *a1)
{
  return NetworkStatus.init(rawValue:)(*a1);
}

void sub_1D59CA514(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEE00646572697571;
  unint64_t v4 = 0xE900000000000065;
  uint64_t v5 = 0x6C62616863616572;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6168636165726E75;
    unint64_t v4 = 0xEB00000000656C62;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x65526E6F69746361;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t NetworkStatus.description.getter()
{
  uint64_t v1 = 0x6C62616863616572;
  if (*v0 != 1) {
    uint64_t v1 = 0x6168636165726E75;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x65526E6F69746361;
  }
}

unint64_t sub_1D59CA604()
{
  unint64_t result = qword_1EA725C38;
  if (!qword_1EA725C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725C38);
  }
  return result;
}

uint64_t sub_1D59CA658()
{
  uint64_t v1 = 0x6C62616863616572;
  if (*v0 != 1) {
    uint64_t v1 = 0x6168636165726E75;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x65526E6F69746361;
  }
}

unsigned char *storeEnumTagSinglePayload for NetworkStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D59CA798);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkStatus()
{
  return &type metadata for NetworkStatus;
}

uint64_t Playback.applyingTimestampOffset(_:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725108);
  MEMORY[0x1F4188790](v0 - 8);
  int v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5AB4940();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7251C8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  sub_1D5AB4960();
  return sub_1D59CA8C8((uint64_t)v2);
}

uint64_t sub_1D59CA8C8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725108);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D59CA928()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725108);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5AB4940();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7251C8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  sub_1D5AB4960();
  return sub_1D59CA8C8((uint64_t)v2);
}

void *BookmarkClient.__allocating_init(eventHub:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = objc_allocWithZone(MEMORY[0x1E4F29268]);
  id v7 = a3;
  unsigned __int8 v8 = (void *)sub_1D5AB4DE0();
  id v9 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v8, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  uint64_t v10 = sub_1D59968E8(v9, v7);
  uint64_t v11 = *(void *)(v10 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 16));
  if (*(unsigned char *)(v10 + 48) == 1)
  {
    *(unsigned char *)(v10 + 48) = 2;
    objc_msgSend(*(id *)(v10 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  type metadata accessor for BookmarkClient();
  char v12 = (void *)swift_allocObject();
  uint64_t v13 = swift_retain();
  id v14 = sub_1D59CC7A4(v13, a1, a2, v12);

  swift_release_n();
  return v14;
}

uint64_t BookmarkClient.__allocating_init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D59CAB84(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D59CCAC0);
}

uint64_t BookmarkClient.init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D59CAB84(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D59CC938);
}

uint64_t sub_1D59CAB84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = a6(a1, a4, a5, v6, ObjectType, a2, a3);
  swift_unknownObjectRelease();
  return v14;
}

uint64_t sub_1D59CAC08(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t a5, uint64_t (*a6)(void))
{
  uint64_t v10 = a3(0);
  MEMORY[0x1F4188790](v10);
  char v12 = (char *)&v17 - v11;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v14 = *(void *)(result + 48);
    swift_unknownObjectRetain();
    swift_release();
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v16 = a4(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v12, a1, v16);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 8))(v12, v10, a5, ObjectType, v14);
    swift_unknownObjectRelease();
    return sub_1D59CCF14((uint64_t)v12, a6);
  }
  return result;
}

uint64_t BookmarkClient.deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t BookmarkClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t BookmarkClient.queryAllBookmarks()()
{
  if (qword_1EBDE43A0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE4388);
  v2._uint64_t countAndFlagsBits = 0xD000000000000069;
  v2._object = (void *)0x80000001D5AC76A0;
  v3._object = (void *)0x80000001D5AC7710;
  v3._uint64_t countAndFlagsBits = 0xD000000000000013;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 43;
  uint64_t v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725C40);
  uint64_t v8 = sub_1D59A3114(&qword_1EA725C48, &qword_1EA725C40);
  unint64_t v9 = sub_1D59CCB40();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t BookmarkClient.queryBookmarks(_:)(uint64_t a1)
{
  if (qword_1EBDE43A0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE4388);
  v4._uint64_t countAndFlagsBits = 0xD000000000000069;
  v4._object = (void *)0x80000001D5AC76A0;
  v5._object = (void *)0x80000001D5AC7730;
  v5._uint64_t countAndFlagsBits = 0xD000000000000012;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v17 = 44;
  uint64_t v16 = a1;
  uint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v6 + 32);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4898);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725C40);
  uint64_t v11 = sub_1D59A3114(&qword_1EBDE48A0, &qword_1EBDE4898);
  uint64_t v12 = sub_1D59CCBE4(qword_1EBDE48A8, &qword_1EBDE4898, (void (*)(void))sub_1D59A2F78);
  uint64_t v13 = sub_1D59A3114(&qword_1EA725C48, &qword_1EA725C40);
  unint64_t v14 = sub_1D59CCB40();
  return v8(&v17, &v16, v9, v10, v11, v12, v13, v14, ObjectType, v6);
}

uint64_t BookmarkClient.queryBookmarks(mediaTypes:)(uint64_t a1)
{
  if (qword_1EBDE43A0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE4388);
  v4._uint64_t countAndFlagsBits = 0xD000000000000069;
  v4._object = (void *)0x80000001D5AC76A0;
  v5._object = (void *)0x80000001D5AC7750;
  v5._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v17 = 46;
  uint64_t v16 = a1;
  uint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v6 + 32);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725C60);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725C40);
  uint64_t v11 = sub_1D59A3114(&qword_1EA725C68, &qword_1EA725C60);
  uint64_t v12 = sub_1D59CCBE4(&qword_1EA725C70, &qword_1EA725C60, (void (*)(void))sub_1D59CCC5C);
  uint64_t v13 = sub_1D59A3114(&qword_1EA725C48, &qword_1EA725C40);
  unint64_t v14 = sub_1D59CCB40();
  return v8(&v17, &v16, v9, v10, v11, v12, v13, v14, ObjectType, v6);
}

uint64_t BookmarkClient.queryBookmarks(referenceTypes:)(uint64_t a1)
{
  if (qword_1EBDE43A0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE4388);
  v4._uint64_t countAndFlagsBits = 0xD000000000000069;
  v4._object = (void *)0x80000001D5AC76A0;
  v5._object = (void *)0x80000001D5AC7770;
  v5._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v17 = 54;
  uint64_t v16 = a1;
  uint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v6 + 32);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725C80);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725C40);
  uint64_t v11 = sub_1D59A3114(&qword_1EA725C88, &qword_1EA725C80);
  uint64_t v12 = sub_1D59CCBE4(&qword_1EA725C90, &qword_1EA725C80, (void (*)(void))sub_1D59CCCB0);
  uint64_t v13 = sub_1D59A3114(&qword_1EA725C48, &qword_1EA725C40);
  unint64_t v14 = sub_1D59CCB40();
  return v8(&v17, &v16, v9, v10, v11, v12, v13, v14, ObjectType, v6);
}

uint64_t BookmarkClient.queryBookmarkCount(mediaTypes:)(uint64_t a1)
{
  if (qword_1EBDE43A0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE4388);
  v4._uint64_t countAndFlagsBits = 0xD000000000000069;
  v4._object = (void *)0x80000001D5AC76A0;
  v5._object = (void *)0x80000001D5AC7790;
  v5._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v14 = 53;
  uint64_t v13 = a1;
  uint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t *, uint64_t, void, uint64_t, uint64_t, void, void, uint64_t, uint64_t))(v6 + 32);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725C60);
  uint64_t v10 = sub_1D59A3114(&qword_1EA725C68, &qword_1EA725C60);
  uint64_t v11 = sub_1D59CCBE4(&qword_1EA725C70, &qword_1EA725C60, (void (*)(void))sub_1D59CCC5C);
  return v8(&v14, &v13, v9, MEMORY[0x1E4FBB550], v10, v11, MEMORY[0x1E4F9F120], MEMORY[0x1E4F9F128], ObjectType, v6);
}

uint64_t BookmarkClient.filterBookmarks(_:)(uint64_t a1)
{
  if (qword_1EBDE43A0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE4388);
  v4._uint64_t countAndFlagsBits = 0xD000000000000069;
  v4._object = (void *)0x80000001D5AC76A0;
  v5._object = (void *)0x80000001D5AC77B0;
  v5._uint64_t countAndFlagsBits = 0xD000000000000013;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v14 = 56;
  uint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, void, void, uint64_t, unint64_t, uint64_t, uint64_t))(v6 + 32);
  uint64_t v9 = sub_1D5AB2810();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725C40);
  uint64_t v11 = sub_1D59A3114(&qword_1EA725C48, &qword_1EA725C40);
  unint64_t v12 = sub_1D59CCB40();
  return v8(&v14, a1, v9, v10, MEMORY[0x1E4F9C6E0], MEMORY[0x1E4F9C6E8], v11, v12, ObjectType, v6);
}

uint64_t BookmarkClient.queryBookmarkCount(filter:)(uint64_t a1)
{
  if (qword_1EBDE43A0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE4388);
  v4._uint64_t countAndFlagsBits = 0xD000000000000069;
  v4._object = (void *)0x80000001D5AC76A0;
  v5._object = (void *)0x80000001D5AC77D0;
  v5._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 58;
  uint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, void, void, void, void, void, uint64_t, uint64_t))(v6 + 32);
  uint64_t v9 = sub_1D5AB2810();
  return v8(&v11, a1, v9, MEMORY[0x1E4FBB550], MEMORY[0x1E4F9C6E0], MEMORY[0x1E4F9C6E8], MEMORY[0x1E4F9F120], MEMORY[0x1E4F9F128], ObjectType, v6);
}

uint64_t BookmarkClient.queryBookmarkCount(referenceTypes:)(uint64_t a1)
{
  if (qword_1EBDE43A0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE4388);
  v4._uint64_t countAndFlagsBits = 0xD000000000000069;
  v4._object = (void *)0x80000001D5AC76A0;
  v5._object = (void *)0x80000001D5AC77F0;
  v5._uint64_t countAndFlagsBits = 0xD000000000000023;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v14 = 55;
  uint64_t v13 = a1;
  uint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t *, uint64_t, void, uint64_t, uint64_t, void, void, uint64_t, uint64_t))(v6 + 32);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725C80);
  uint64_t v10 = sub_1D59A3114(&qword_1EA725C88, &qword_1EA725C80);
  uint64_t v11 = sub_1D59CCBE4(&qword_1EA725C90, &qword_1EA725C80, (void (*)(void))sub_1D59CCCB0);
  return v8(&v14, &v13, v9, MEMORY[0x1E4FBB550], v10, v11, MEMORY[0x1E4F9F120], MEMORY[0x1E4F9F128], ObjectType, v6);
}

uint64_t BookmarkClient.insertBookmarks(_:)(uint64_t a1)
{
  return sub_1D59CBA6C(a1, (void *)0x80000001D5AC7820, 42);
}

uint64_t BookmarkClient.removeBookmarks(_:)(uint64_t a1)
{
  return sub_1D59CBA6C(a1, (void *)0x80000001D5AC7840, 45);
}

uint64_t sub_1D59CBA6C(uint64_t a1, void *a2, __int16 a3)
{
  if (qword_1EBDE43A0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1D5AB4B50();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBDE4388);
  v8._uint64_t countAndFlagsBits = 0xD000000000000069;
  v8._object = (void *)0x80000001D5AC76A0;
  v9._uint64_t countAndFlagsBits = 0xD000000000000013;
  v9._object = a2;
  Logger.trace(file:function:)(v8, v9);
  uint64_t v10 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v18 = a3;
  uint64_t v17 = a1;
  unint64_t v12 = *(uint64_t (**)(__int16 *, uint64_t *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v10 + 16);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725C40);
  uint64_t v14 = sub_1D59A3114(&qword_1EA725C48, &qword_1EA725C40);
  unint64_t v15 = sub_1D59CCB40();
  return v12(&v18, &v17, v13, v14, v15, ObjectType, v10);
}

uint64_t BookmarkClient.queryAllPlaylists()()
{
  if (qword_1EBDE43A0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE4388);
  v2._uint64_t countAndFlagsBits = 0xD000000000000069;
  v2._object = (void *)0x80000001D5AC76A0;
  v3._object = (void *)0x80000001D5AC7860;
  v3._uint64_t countAndFlagsBits = 0xD000000000000013;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 48;
  uint64_t v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3298);
  uint64_t v8 = sub_1D59A3114(&qword_1EBDE32A0, &qword_1EBDE3298);
  unint64_t v9 = sub_1D59CCD04();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t BookmarkClient.filterPlaylists(_:)(uint64_t a1)
{
  if (qword_1EBDE43A0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE4388);
  v4._uint64_t countAndFlagsBits = 0xD000000000000069;
  v4._object = (void *)0x80000001D5AC76A0;
  v5._object = (void *)0x80000001D5AC7880;
  v5._uint64_t countAndFlagsBits = 0xD000000000000013;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v14 = 57;
  uint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, void, void, uint64_t, unint64_t, uint64_t, uint64_t))(v6 + 32);
  uint64_t v9 = sub_1D5AB2B40();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3298);
  uint64_t v11 = sub_1D59A3114(&qword_1EBDE32A0, &qword_1EBDE3298);
  unint64_t v12 = sub_1D59CCD04();
  return v8(&v14, a1, v9, v10, MEMORY[0x1E4F9C7A0], MEMORY[0x1E4F9C7A8], v11, v12, ObjectType, v6);
}

uint64_t BookmarkClient.queryPlaylistCount(filter:)(uint64_t a1)
{
  if (qword_1EBDE43A0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE4388);
  v4._uint64_t countAndFlagsBits = 0xD000000000000069;
  v4._object = (void *)0x80000001D5AC76A0;
  v5._object = (void *)0x80000001D5AC78A0;
  v5._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 59;
  uint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, void, void, void, void, void, uint64_t, uint64_t))(v6 + 32);
  uint64_t v9 = sub_1D5AB2B40();
  return v8(&v11, a1, v9, MEMORY[0x1E4FBB550], MEMORY[0x1E4F9C7A0], MEMORY[0x1E4F9C7A8], MEMORY[0x1E4F9F120], MEMORY[0x1E4F9F128], ObjectType, v6);
}

uint64_t BookmarkClient.queryPlaylist(playlistIdentifier:)(uint64_t a1, uint64_t a2)
{
  if (qword_1EBDE43A0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1D5AB4B50();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EBDE4388);
  v6._uint64_t countAndFlagsBits = 0xD000000000000069;
  v6._object = (void *)0x80000001D5AC76A0;
  v7._object = (void *)0x80000001D5AC78C0;
  v7._uint64_t countAndFlagsBits = 0xD000000000000022;
  Logger.trace(file:function:)(v6, v7);
  uint64_t v8 = *(void *)(v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v14 = 49;
  v13[0] = a1;
  v13[1] = a2;
  uint64_t v10 = *(uint64_t (**)(__int16 *, void *, void, uint64_t, void, void, void, void, uint64_t, uint64_t))(v8 + 32);
  uint64_t v11 = sub_1D5AB49D0();
  return v10(&v14, v13, MEMORY[0x1E4FBB1A0], v11, MEMORY[0x1E4F9F0B8], MEMORY[0x1E4F9F0C0], MEMORY[0x1E4F9EEB8], MEMORY[0x1E4F9EEC0], ObjectType, v8);
}

uint64_t BookmarkClient.queryPlaylists(playlistIdentifiers:)(uint64_t a1)
{
  if (qword_1EBDE43A0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE4388);
  v4._uint64_t countAndFlagsBits = 0xD000000000000069;
  v4._object = (void *)0x80000001D5AC76A0;
  v5._object = (void *)0x80000001D5AC78F0;
  v5._uint64_t countAndFlagsBits = 0xD000000000000024;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v17 = 51;
  uint64_t v16 = a1;
  uint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v6 + 32);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4898);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3298);
  uint64_t v11 = sub_1D59A3114(&qword_1EBDE48A0, &qword_1EBDE4898);
  uint64_t v12 = sub_1D59CCBE4(qword_1EBDE48A8, &qword_1EBDE4898, (void (*)(void))sub_1D59A2F78);
  uint64_t v13 = sub_1D59A3114(&qword_1EBDE32A0, &qword_1EBDE3298);
  unint64_t v14 = sub_1D59CCD04();
  return v8(&v17, &v16, v9, v10, v11, v12, v13, v14, ObjectType, v6);
}

uint64_t BookmarkClient.queryPlaylistCount()()
{
  if (qword_1EBDE43A0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE4388);
  v2._uint64_t countAndFlagsBits = 0xD000000000000069;
  v2._object = (void *)0x80000001D5AC76A0;
  v3._object = (void *)0x80000001D5AC7920;
  v3._uint64_t countAndFlagsBits = 0xD000000000000014;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v7 = 52;
  return (*(uint64_t (**)(__int16 *, void, void, void, uint64_t, uint64_t))(v4 + 24))(&v7, MEMORY[0x1E4FBB550], MEMORY[0x1E4F9F120], MEMORY[0x1E4F9F128], ObjectType, v4);
}

uint64_t BookmarkClient.insertPlaylist(_:)(uint64_t a1)
{
  return sub_1D59CC3DC(a1, (void *)0x80000001D5AC7940, 47);
}

uint64_t BookmarkClient.deletePlaylist(_:)(uint64_t a1)
{
  return sub_1D59CC3DC(a1, (void *)0x80000001D5AC7960, 50);
}

uint64_t sub_1D59CC3DC(uint64_t a1, void *a2, __int16 a3)
{
  if (qword_1EBDE43A0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1D5AB4B50();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBDE4388);
  v8._uint64_t countAndFlagsBits = 0xD000000000000069;
  v8._object = (void *)0x80000001D5AC76A0;
  v9._uint64_t countAndFlagsBits = 0xD000000000000012;
  v9._object = a2;
  Logger.trace(file:function:)(v8, v9);
  uint64_t v10 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v15 = a3;
  uint64_t v12 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, void, void, uint64_t, uint64_t))(v10 + 16);
  uint64_t v13 = sub_1D5AB49D0();
  return v12(&v15, a1, v13, MEMORY[0x1E4F9EEB8], MEMORY[0x1E4F9EEC0], ObjectType, v10);
}

uint64_t sub_1D59CC4F8()
{
  return BookmarkClient.queryAllBookmarks()();
}

uint64_t sub_1D59CC51C()
{
  return BookmarkClient.queryAllPlaylists()();
}

uint64_t sub_1D59CC540(uint64_t a1)
{
  return BookmarkClient.queryBookmarks(_:)(a1);
}

uint64_t sub_1D59CC564(uint64_t a1)
{
  return BookmarkClient.queryBookmarks(mediaTypes:)(a1);
}

uint64_t sub_1D59CC588(uint64_t a1)
{
  return BookmarkClient.queryBookmarkCount(mediaTypes:)(a1);
}

uint64_t sub_1D59CC5AC(uint64_t a1)
{
  return BookmarkClient.queryBookmarks(referenceTypes:)(a1);
}

uint64_t sub_1D59CC5D0(uint64_t a1)
{
  return BookmarkClient.queryBookmarkCount(referenceTypes:)(a1);
}

uint64_t sub_1D59CC5F4(uint64_t a1)
{
  return BookmarkClient.filterBookmarks(_:)(a1);
}

uint64_t sub_1D59CC618(uint64_t a1)
{
  return BookmarkClient.queryBookmarkCount(filter:)(a1);
}

uint64_t sub_1D59CC63C(uint64_t a1)
{
  return BookmarkClient.filterPlaylists(_:)(a1);
}

uint64_t sub_1D59CC660(uint64_t a1)
{
  return BookmarkClient.queryPlaylistCount(filter:)(a1);
}

uint64_t sub_1D59CC684(uint64_t a1, uint64_t a2)
{
  return BookmarkClient.queryPlaylist(playlistIdentifier:)(a1, a2);
}

uint64_t sub_1D59CC6A8()
{
  return BookmarkClient.queryPlaylistCount()();
}

uint64_t sub_1D59CC6CC(uint64_t a1)
{
  return BookmarkClient.queryPlaylists(playlistIdentifiers:)(a1);
}

uint64_t sub_1D59CC6F0(uint64_t a1)
{
  return BookmarkClient.insertBookmarks(_:)(a1);
}

uint64_t sub_1D59CC714(uint64_t a1)
{
  return BookmarkClient.insertPlaylist(_:)(a1);
}

uint64_t sub_1D59CC738(uint64_t a1)
{
  return BookmarkClient.removeBookmarks(_:)(a1);
}

uint64_t sub_1D59CC75C(uint64_t a1)
{
  return BookmarkClient.deletePlaylist(_:)(a1);
}

uint64_t type metadata accessor for BookmarkClient()
{
  return self;
}

void *sub_1D59CC7A4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[2] = a1;
  a4[3] = &protocol witness table for XPCClient;
  a4[4] = &protocol witness table for XPCClient;
  a4[5] = a2;
  a4[6] = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v13 = a1;
  char v12 = 3;
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  uint64_t v8 = sub_1D5AB3070();
  swift_retain();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v12, (uint64_t)sub_1D59CCE54, v7, ObjectType, v8, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E4F9CFA8], MEMORY[0x1E4F9CFB0]);
  swift_release();
  uint64_t v13 = a1;
  char v12 = 4;
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  uint64_t v10 = sub_1D5AB3150();
  TransportDispatching.register<A>(event:handler:)(&v12, (uint64_t)sub_1D59CCEB4, v9, ObjectType, v10, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E4F9D130], MEMORY[0x1E4F9D138]);
  swift_release();
  swift_unknownObjectRelease();
  return a4;
}

void *sub_1D59CC938(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  a4[2] = a1;
  a4[3] = a6;
  a4[4] = a7;
  a4[5] = a2;
  a4[6] = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v17 = a1;
  char v16 = 3;
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  uint64_t v12 = sub_1D5AB3070();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v16, (uint64_t)sub_1D59CCE54, v11, ObjectType, v12, a7, MEMORY[0x1E4F9CFA8], MEMORY[0x1E4F9CFB0]);
  swift_release();
  uint64_t v17 = a1;
  char v16 = 4;
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  uint64_t v14 = sub_1D5AB3150();
  TransportDispatching.register<A>(event:handler:)(&v16, (uint64_t)sub_1D59CCEB4, v13, ObjectType, v14, a7, MEMORY[0x1E4F9D130], MEMORY[0x1E4F9D138]);
  swift_release();
  swift_unknownObjectRelease();
  return a4;
}

void *sub_1D59CCAC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  type metadata accessor for BookmarkClient();
  uint64_t v13 = (void *)swift_allocObject();
  return sub_1D59CC938(a1, a2, a3, v13, a5, a6, a7);
}

unint64_t sub_1D59CCB40()
{
  unint64_t result = qword_1EA725C50;
  if (!qword_1EA725C50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA725C40);
    sub_1D59CCDA8(&qword_1EA725C58, MEMORY[0x1E4F9EDF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725C50);
  }
  return result;
}

uint64_t sub_1D59CCBE4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D59CCC5C()
{
  unint64_t result = qword_1EA725C78;
  if (!qword_1EA725C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725C78);
  }
  return result;
}

unint64_t sub_1D59CCCB0()
{
  unint64_t result = qword_1EA725C98;
  if (!qword_1EA725C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725C98);
  }
  return result;
}

unint64_t sub_1D59CCD04()
{
  unint64_t result = qword_1EBDE32A8;
  if (!qword_1EBDE32A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBDE3298);
    sub_1D59CCDA8(&qword_1EBDE3000, MEMORY[0x1E4F9EED0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE32A8);
  }
  return result;
}

uint64_t sub_1D59CCDA8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for BookmarkClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BookmarkClient);
}

uint64_t dispatch thunk of BookmarkClient.__allocating_init(connection:eventHub:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1D59CCE1C()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D59CCE54(uint64_t a1)
{
  return sub_1D59CAC08(a1, v1, (uint64_t (*)(void))type metadata accessor for BookmarksUpdated, MEMORY[0x1E4F9CFB8], (uint64_t)&protocol witness table for BookmarksUpdated, (uint64_t (*)(void))type metadata accessor for BookmarksUpdated);
}

uint64_t sub_1D59CCEB4(uint64_t a1)
{
  return sub_1D59CAC08(a1, v1, (uint64_t (*)(void))type metadata accessor for PlaylistsUpdated, MEMORY[0x1E4F9D140], (uint64_t)&protocol witness table for PlaylistsUpdated, (uint64_t (*)(void))type metadata accessor for PlaylistsUpdated);
}

uint64_t sub_1D59CCF14(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t dispatch thunk of SearchClientProtocol.fetchSearchLandingShelfTileDescriptors()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 8) + **(int **)(a2 + 8));
  Swift::String v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *Swift::String v5 = v2;
  v5[1] = sub_1D59CD6A4;
  return v7(a1, a2);
}

uint64_t dispatch thunk of SearchClientProtocol.fetchSearchResults(request:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 16) + **(int **)(a4 + 16));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1D598AF68;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of SearchClientProtocol.fetchSearchSuggestions(term:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 24) + **(int **)(a5 + 24));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_1D598AF68;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of SearchClientProtocol.insertRecentSearchTerm(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 32) + **(int **)(a3 + 32));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D598AF68;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of SearchClientProtocol.deleteRecentSearchTerms(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 40) + **(int **)(a3 + 40));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D5984480;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of SearchClientProtocol.deleteAllRecentSearchTerms(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 48) + **(int **)(a3 + 48));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D598AF68;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of SearchClientProtocol.queryRecentSearchTerms(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 56) + **(int **)(a3 + 56));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D597984C;
  return v9(a1, a2, a3);
}

uint64_t XPCStream.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t XPCStream.replyRequiredArg.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

SeymourClient::XPCStream __swiftcall XPCStream.init(name:replyRequiredArg:)(Swift::String name, Swift::String_optional replyRequiredArg)
{
  v2->value = name;
  v2[1] = replyRequiredArg;
  result.replyRequiredArg = replyRequiredArg;
  result.name = name;
  return result;
}

uint64_t destroy for XPCStream()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for XPCStream(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for XPCStream(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for XPCStream(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCStream(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCStream(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)SeymourClient::XPCStream result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCStream()
{
  return &type metadata for XPCStream;
}

BOOL static CellularDataRestrictedState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t CellularDataRestrictedState.hash(into:)()
{
  return sub_1D5AB5C30();
}

uint64_t CellularDataRestrictedState.hashValue.getter()
{
  return sub_1D5AB5C60();
}

void *static CellularDataRestrictedState.allCases.getter()
{
  return &unk_1F2DEC0D0;
}

unint64_t sub_1D59CD978()
{
  unint64_t result = qword_1EA725CD8;
  if (!qword_1EA725CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725CD8);
  }
  return result;
}

unint64_t sub_1D59CD9D0()
{
  unint64_t result = qword_1EA725CE0;
  if (!qword_1EA725CE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA725CE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725CE0);
  }
  return result;
}

void sub_1D59CDA2C(void *a1@<X8>)
{
  *a1 = &unk_1F2DEC0F8;
}

unsigned char *storeEnumTagSinglePayload for CellularDataRestrictedState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D59CDB08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CellularDataRestrictedState()
{
  return &type metadata for CellularDataRestrictedState;
}

void *ContentAvailabilityClient.__allocating_init(queue:)(void *a1)
{
  id v2 = objc_allocWithZone(MEMORY[0x1E4F29268]);
  id v3 = a1;
  unsigned int v4 = (void *)sub_1D5AB4DE0();
  id v5 = objc_msgSend(v2, sel_initWithMachServiceName_options_, v4, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  uint64_t v6 = sub_1D59968E8(v5, v3);
  uint64_t v7 = *(void *)(v6 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 16));
  if (*(unsigned char *)(v6 + 48) == 1)
  {
    *(unsigned char *)(v6 + 48) = 2;
    objc_msgSend(*(id *)(v6 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));
  sub_1D59513F0();
  swift_retain();
  uint64_t v8 = sub_1D5AB54A0();
  type metadata accessor for EventHub();
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = sub_1D59CE7F0(v8, 0, v9);
  type metadata accessor for ContentAvailabilityClient();
  uint64_t v11 = (void *)swift_allocObject();
  uint64_t v12 = sub_1D59CE8C0(v6, v10, v11);

  swift_release_n();
  return v12;
}

void *ContentAvailabilityClient.__allocating_init(eventHub:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  id v8 = objc_allocWithZone(MEMORY[0x1E4F29268]);
  id v9 = a3;
  uint64_t v10 = (void *)sub_1D5AB4DE0();
  id v11 = objc_msgSend(v8, sel_initWithMachServiceName_options_, v10, 0);

  uint64_t v12 = type metadata accessor for XPCClient();
  swift_allocObject();
  uint64_t v13 = sub_1D59968E8(v11, v9);
  uint64_t v14 = *(void *)(v13 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v14 + 16));
  if (*(unsigned char *)(v13 + 48) == 1)
  {
    *(unsigned char *)(v13 + 48) = 2;
    objc_msgSend(*(id *)(v13 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 16));
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v16 = swift_retain();
  uint64_t v17 = sub_1D59CEDAC(v16, a1, v4, v12, ObjectType, (uint64_t)&protocol witness table for XPCClient, (uint64_t)&protocol witness table for XPCClient, a2);

  swift_release_n();
  return v17;
}

uint64_t ContentAvailabilityClient.__allocating_init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D59CDE24(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D59CEDAC);
}

uint64_t ContentAvailabilityClient.init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D59CDE24(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D59CEB40);
}

uint64_t sub_1D59CDE24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = swift_getObjectType();
  uint64_t v15 = a6(a1, a4, v6, ObjectType, v14, a2, a3, a5);
  swift_unknownObjectRelease();
  return v15;
}

uint64_t sub_1D59CDEB8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ContentAvailabilityUpdated();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v6 = *(void *)(result + 48);
    swift_unknownObjectRetain();
    swift_release();
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v8 = sub_1D5AB3330();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v4, a1, v8);
    (*(void (**)(char *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v6 + 8))(v4, v2, &protocol witness table for ContentAvailabilityUpdated, ObjectType, v6);
    swift_unknownObjectRelease();
    return sub_1D59CEFFC((uint64_t)v4);
  }
  return result;
}

uint64_t sub_1D59CE004(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = *(void *)(result + 48);
    swift_unknownObjectRetain();
    swift_release();
    uint64_t ObjectType = swift_getObjectType();
    id v5 = *(void (**)(uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v3 + 8);
    uint64_t v6 = sub_1D5AB40B0();
    v5(a1, v6, &protocol witness table for AllowedContentRatingsUpdated, ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D59CE0CC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = *(void *)(result + 48);
    swift_unknownObjectRetain();
    swift_release();
    uint64_t ObjectType = swift_getObjectType();
    v7[0] = v2;
    v7[1] = v1;
    uint64_t v6 = *(void (**)(void *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v4 + 8);
    swift_bridgeObjectRetain();
    v6(v7, &type metadata for StorefrontLanguageUpdated, &protocol witness table for StorefrontLanguageUpdated, ObjectType, v4);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D59CE1A4()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(void *)(result + 48);
    swift_unknownObjectRetain();
    swift_release();
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v1 + 8))(ObjectType, &type metadata for SupportedDeviceChanged, &protocol witness table for SupportedDeviceChanged, ObjectType, v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t ContentAvailabilityClient.deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t ContentAvailabilityClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t ContentAvailabilityClient.queryAllowedContentRatings()()
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE5400);
  v2._uint64_t countAndFlagsBits = 0xD00000000000007FLL;
  v2._object = (void *)0x80000001D5AC79B0;
  v3._object = (void *)0x80000001D5AC7A30;
  v3._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 112;
  uint64_t v6 = *(uint64_t (**)(__int16 *, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3250);
  unint64_t v8 = sub_1D59CEE3C();
  unint64_t v9 = sub_1D59CEEB0();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t ContentAvailabilityClient.queryContentAvailability()()
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE5400);
  v2._uint64_t countAndFlagsBits = 0xD00000000000007FLL;
  v2._object = (void *)0x80000001D5AC79B0;
  v3._object = (void *)0x80000001D5AC7A50;
  v3._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v9 = 113;
  uint64_t v6 = *(uint64_t (**)(__int16 *, uint64_t, void, void, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = sub_1D5AB3330();
  return v6(&v9, v7, MEMORY[0x1E4F9D410], MEMORY[0x1E4F9D418], ObjectType, v4);
}

uint64_t ContentAvailabilityClient.queryStorefrontLanguageCode()()
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE5400);
  v2._uint64_t countAndFlagsBits = 0xD00000000000007FLL;
  v2._object = (void *)0x80000001D5AC79B0;
  v3._object = (void *)0x80000001D5AC7A70;
  v3._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v7 = 114;
  return (*(uint64_t (**)(__int16 *, void, void, void, uint64_t, uint64_t))(v4 + 24))(&v7, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F9F0B8], MEMORY[0x1E4F9F0C0], ObjectType, v4);
}

uint64_t ContentAvailabilityClient.queryAccountContainsSupportedWatch()()
{
  return sub_1D59CE61C(0xD000000000000024, (void *)0x80000001D5AC7A90, 115);
}

uint64_t sub_1D59CE61C(uint64_t a1, void *a2, __int16 a3)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1D5AB4B50();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBDE5400);
  v8._object = (void *)0x80000001D5AC79B0;
  v8._uint64_t countAndFlagsBits = 0xD00000000000007FLL;
  v9._uint64_t countAndFlagsBits = a1;
  v9._object = a2;
  Logger.trace(file:function:)(v8, v9);
  uint64_t v10 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v13 = a3;
  return (*(uint64_t (**)(__int16 *, void, void, void, uint64_t, uint64_t))(v10 + 24))(&v13, MEMORY[0x1E4FBB390], MEMORY[0x1E4F9F0E8], MEMORY[0x1E4F9F0F0], ObjectType, v10);
}

uint64_t ContentAvailabilityClient.queryAccountContainsSupportedDevice()()
{
  return sub_1D59CE61C(0xD000000000000025, (void *)0x80000001D5AC7AC0, 116);
}

uint64_t sub_1D59CE73C()
{
  return ContentAvailabilityClient.queryAllowedContentRatings()();
}

uint64_t sub_1D59CE760()
{
  return ContentAvailabilityClient.queryContentAvailability()();
}

uint64_t sub_1D59CE784()
{
  return ContentAvailabilityClient.queryStorefrontLanguageCode()();
}

uint64_t sub_1D59CE7A8()
{
  return ContentAvailabilityClient.queryAccountContainsSupportedWatch()();
}

uint64_t sub_1D59CE7CC()
{
  return ContentAvailabilityClient.queryAccountContainsSupportedDevice()();
}

uint64_t sub_1D59CE7F0(uint64_t a1, char a2, uint64_t a3)
{
  char v5 = a2 & 1;
  __int16 v11 = &type metadata for DispatchTimerProvider;
  uint64_t v12 = &protocol witness table for DispatchTimerProvider;
  sub_1D5979948((uint64_t)v10, a3 + 40);
  *(void *)(a3 + 16) = a1;
  *(unsigned char *)(a3 + 32) = v5;
  type metadata accessor for UnfairLock();
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = (_DWORD *)swift_slowAlloc();
  *(void *)(v6 + 16) = v7;
  *uint64_t v7 = 0;
  *(void *)(a3 + 24) = v6;
  uint64_t v8 = MEMORY[0x1E4FBC868];
  *(void *)(a3 + 80) = MEMORY[0x1E4FBC868];
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  *(void *)(a3 + 88) = v8;
  return a3;
}

uint64_t type metadata accessor for ContentAvailabilityClient()
{
  return self;
}

void *sub_1D59CE8C0(uint64_t a1, uint64_t a2, void *a3)
{
  a3[2] = a1;
  a3[3] = &protocol witness table for XPCClient;
  a3[4] = &protocol witness table for XPCClient;
  a3[5] = a2;
  a3[6] = &protocol witness table for EventHub;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = a1;
  char v13 = 10;
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  uint64_t v7 = sub_1D5AB3330();
  swift_retain();
  swift_retain();
  TransportDispatching.register<A>(event:handler:)(&v13, (uint64_t)sub_1D59CEFDC, v6, ObjectType, v7, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E4F9D410], MEMORY[0x1E4F9D418]);
  swift_release();
  uint64_t v14 = a1;
  char v13 = 9;
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  uint64_t v9 = sub_1D5AB40B0();
  TransportDispatching.register<A>(event:handler:)(&v13, (uint64_t)sub_1D59CEFE4, v8, ObjectType, v9, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E4F9E6A0], MEMORY[0x1E4F9E6A8]);
  swift_release();
  uint64_t v14 = a1;
  char v13 = 12;
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  TransportDispatching.register<A>(event:handler:)(&v13, (uint64_t)sub_1D59CEFEC, v10, ObjectType, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E4F9F0B8], MEMORY[0x1E4F9F0C0]);
  swift_release();
  uint64_t v14 = a1;
  char v13 = 13;
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v13, (uint64_t)sub_1D59CEFF4, v11, ObjectType, (uint64_t)&protocol witness table for XPCClient);
  swift_release_n();
  swift_release();
  return a3;
}

void *sub_1D59CEB40(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  a3[2] = a1;
  a3[3] = a6;
  a3[4] = a7;
  a3[5] = a2;
  a3[6] = a8;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v20 = a1;
  char v19 = 10;
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = sub_1D5AB3330();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v19, (uint64_t)sub_1D59CEFDC, v12, ObjectType, v13, a7, MEMORY[0x1E4F9D410], MEMORY[0x1E4F9D418]);
  swift_release();
  uint64_t v20 = a1;
  char v19 = 9;
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  uint64_t v15 = sub_1D5AB40B0();
  TransportDispatching.register<A>(event:handler:)(&v19, (uint64_t)sub_1D59CEFE4, v14, ObjectType, v15, a7, MEMORY[0x1E4F9E6A0], MEMORY[0x1E4F9E6A8]);
  swift_release();
  uint64_t v20 = a1;
  char v19 = 12;
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  TransportDispatching.register<A>(event:handler:)(&v19, (uint64_t)sub_1D59CEFEC, v16, ObjectType, MEMORY[0x1E4FBB1A0], a7, MEMORY[0x1E4F9F0B8], MEMORY[0x1E4F9F0C0]);
  swift_release();
  uint64_t v20 = a1;
  char v19 = 13;
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v19, (uint64_t)sub_1D59CEFF4, v17, ObjectType, a7);
  swift_release_n();
  swift_unknownObjectRelease();
  return a3;
}

void *sub_1D59CEDAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  type metadata accessor for ContentAvailabilityClient();
  uint64_t v15 = (void *)swift_allocObject();
  return sub_1D59CEB40(a1, a2, v15, a4, a5, a6, a7, a8);
}

unint64_t sub_1D59CEE3C()
{
  unint64_t result = qword_1EBDE3258;
  if (!qword_1EBDE3258)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBDE3250);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE3258);
  }
  return result;
}

unint64_t sub_1D59CEEB0()
{
  unint64_t result = qword_1EBDE3260;
  if (!qword_1EBDE3260)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBDE3250);
    sub_1D59CEF24();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE3260);
  }
  return result;
}

unint64_t sub_1D59CEF24()
{
  unint64_t result = qword_1EBDE2F90;
  if (!qword_1EBDE2F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE2F90);
  }
  return result;
}

uint64_t method lookup function for ContentAvailabilityClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ContentAvailabilityClient);
}

uint64_t dispatch thunk of ContentAvailabilityClient.__allocating_init(connection:eventHub:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1D59CEFA4()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D59CEFDC(uint64_t a1)
{
  return sub_1D59CDEB8(a1);
}

uint64_t sub_1D59CEFE4(uint64_t a1)
{
  return sub_1D59CE004(a1);
}

uint64_t sub_1D59CEFEC(uint64_t *a1)
{
  return sub_1D59CE0CC(a1);
}

uint64_t sub_1D59CEFF4()
{
  return sub_1D59CE1A4();
}

uint64_t sub_1D59CEFFC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ContentAvailabilityUpdated();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t PaceMetric.applyingTimestampOffset(_:)()
{
  sub_1D5AB1E50();
  return sub_1D5AB1E60();
}

uint64_t sub_1D59CF0B0()
{
  sub_1D5AB1E50();
  return sub_1D5AB1E60();
}

void static AppAttentionLost.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for AppAttentionLost()
{
  return &type metadata for AppAttentionLost;
}

void *AdminClient.__allocating_init(queue:)(void *a1)
{
  id v2 = objc_allocWithZone(MEMORY[0x1E4F29268]);
  id v3 = a1;
  uint64_t v4 = (void *)sub_1D5AB4DE0();
  id v5 = objc_msgSend(v2, sel_initWithMachServiceName_options_, v4, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  uint64_t v6 = sub_1D59968E8(v5, v3);
  uint64_t v7 = *(void *)(v6 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 16));
  if (*(unsigned char *)(v6 + 48) == 1)
  {
    *(unsigned char *)(v6 + 48) = 2;
    objc_msgSend(*(id *)(v6 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));

  type metadata accessor for AdminClient();
  unint64_t result = (void *)swift_allocObject();
  result[2] = v6;
  result[3] = &protocol witness table for XPCClient;
  result[4] = &protocol witness table for XPCClient;
  return result;
}

void *AdminClient.__allocating_init(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  return sub_1D59CF7D4(a1, v3, ObjectType, a2, a3);
}

void *AdminClient.init(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  return sub_1D595A0B0(a1, v3, ObjectType, a2, a3);
}

uint64_t AdminClient.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t AdminClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t AdminClient.executeScoresTasks()()
{
  return sub_1D59CF638(0xD000000000000014, (void *)0x80000001D5AC7B90, 217);
}

uint64_t AdminClient.deleteLocalScores()()
{
  return sub_1D59CF638(0xD000000000000013, (void *)0x80000001D5AC7BB0, 221);
}

uint64_t AdminClient.pingServer(endpoint:)(char a1)
{
  uint64_t v2 = v1;
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1D5AB4B50();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EBDE5400);
  v5._uint64_t countAndFlagsBits = 0xD000000000000062;
  v5._object = (void *)0x80000001D5AC7B20;
  v6._object = (void *)0x80000001D5AC7BD0;
  v6._uint64_t countAndFlagsBits = 0xD000000000000015;
  Logger.trace(file:function:)(v5, v6);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 261;
  char v10 = a1 & 1;
  return (*(uint64_t (**)(__int16 *, char *, void, void, void, void, void, void, uint64_t, uint64_t))(v7 + 32))(&v11, &v10, MEMORY[0x1E4F9D7C0], MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F9D7B0], MEMORY[0x1E4F9D7B8], MEMORY[0x1E4F9F0B8], MEMORY[0x1E4F9F0C0], ObjectType, v7);
}

uint64_t AdminClient.createRepresentativeDatabase()()
{
  return sub_1D59CF638(0xD00000000000001ELL, (void *)0x80000001D5AC7BF0, 260);
}

uint64_t AdminClient.requestPersistentStoreStatistics(requiredDataProtection:)(unsigned __int8 a1)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE5400);
  v4._uint64_t countAndFlagsBits = 0xD000000000000062;
  v4._object = (void *)0x80000001D5AC7B20;
  v5._object = (void *)0x80000001D5AC7C10;
  v5._uint64_t countAndFlagsBits = 0xD000000000000039;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v14 = 262;
  uint64_t v13 = a1;
  uint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t *, void, uint64_t, void, void, unint64_t, unint64_t, uint64_t, uint64_t))(v6 + 32);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725CF0);
  unint64_t v10 = sub_1D59CF81C();
  unint64_t v11 = sub_1D59CF888();
  return v8(&v14, &v13, MEMORY[0x1E4FBB550], v9, MEMORY[0x1E4F9F120], MEMORY[0x1E4F9F128], v10, v11, ObjectType, v6);
}

uint64_t AdminClient.forceServerSyncBootstrap()()
{
  return sub_1D59CF638(0xD00000000000001ALL, (void *)0x80000001D5AC7C50, 245);
}

uint64_t sub_1D59CF638(uint64_t a1, void *a2, __int16 a3)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1D5AB4B50();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBDE5400);
  v8._object = (void *)0x80000001D5AC7B20;
  v8._uint64_t countAndFlagsBits = 0xD000000000000062;
  v9._uint64_t countAndFlagsBits = a1;
  v9._object = a2;
  Logger.trace(file:function:)(v8, v9);
  uint64_t v10 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v13 = a3;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v10 + 8))(&v13, ObjectType, v10);
}

uint64_t sub_1D59CF720()
{
  return AdminClient.executeScoresTasks()();
}

uint64_t sub_1D59CF744()
{
  return AdminClient.deleteLocalScores()();
}

uint64_t sub_1D59CF768(unsigned __int8 a1)
{
  return AdminClient.requestPersistentStoreStatistics(requiredDataProtection:)(a1);
}

uint64_t sub_1D59CF78C()
{
  return AdminClient.forceServerSyncBootstrap()();
}

uint64_t type metadata accessor for AdminClient()
{
  return self;
}

void *sub_1D59CF7D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for AdminClient();
  unint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a4;
  result[4] = a5;
  return result;
}

unint64_t sub_1D59CF81C()
{
  unint64_t result = qword_1EA725CF8;
  if (!qword_1EA725CF8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA725CF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725CF8);
  }
  return result;
}

unint64_t sub_1D59CF888()
{
  unint64_t result = qword_1EA725D00;
  if (!qword_1EA725D00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA725CF0);
    sub_1D59CF8FC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725D00);
  }
  return result;
}

unint64_t sub_1D59CF8FC()
{
  unint64_t result = qword_1EA725D08;
  if (!qword_1EA725D08)
  {
    sub_1D5AB3200();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725D08);
  }
  return result;
}

uint64_t method lookup function for AdminClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AdminClient);
}

uint64_t dispatch thunk of AdminClient.__allocating_init(connection:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

void *Data.compressed(using:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D59CFA28(a1, a2, a3, (SEL *)&selRef_compressedDataUsingAlgorithm_error_);
}

void *Data.decompressed(using:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D59CFA28(a1, a2, a3, (SEL *)&selRef_decompressedDataUsingAlgorithm_error_);
}

void *sub_1D59CFA28(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  v11[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v6 = (void *)sub_1D5AB1C10();
  v11[0] = 0;
  id v7 = objc_msgSend(v6, *a4, a1, v11);

  id v8 = v11[0];
  if (v7)
  {
    Swift::String v9 = (void *)sub_1D5AB1C20();
  }
  else
  {
    Swift::String v9 = v8;
    sub_1D5AB1B50();

    swift_willThrow();
  }
  return v9;
}

uint64_t CoachingEventStarted.coachingEvent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB25A0();
  Swift::String v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t CoachingEventStarted.init(coachingEvent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB25A0();
  Swift::String v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static CoachingEventStarted.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for CoachingEventStarted(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB25A0();
  Swift::String v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for CoachingEventStarted(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB25A0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for CoachingEventStarted(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB25A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for CoachingEventStarted(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB25A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for CoachingEventStarted(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB25A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for CoachingEventStarted(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB25A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for CoachingEventStarted(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D59CFE60);
}

uint64_t sub_1D59CFE60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB25A0();
  Swift::String v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for CoachingEventStarted(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D59CFEE0);
}

uint64_t sub_1D59CFEE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB25A0();
  Swift::String v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for CoachingEventStarted()
{
  uint64_t result = qword_1EA725D10;
  if (!qword_1EA725D10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D59CFF9C()
{
  uint64_t result = sub_1D5AB25A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t MultiUserBeginActivityCancelled.activity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB3100();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t MultiUserBeginActivityCancelled.init(activity:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB3100();
  Swift::String v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static MultiUserBeginActivityCancelled.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t getEnumTagSinglePayload for MultiUserBeginActivityCancelled(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D59D0120);
}

uint64_t sub_1D59D0120(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3100();
  Swift::String v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MultiUserBeginActivityCancelled(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D59D01A0);
}

uint64_t sub_1D59D01A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3100();
  Swift::String v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MultiUserBeginActivityCancelled()
{
  uint64_t result = qword_1EBDE30C0;
  if (!qword_1EBDE30C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t PersonalizationPrivacyPreferenceUpdated.init(preference:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB4350();
  Swift::String v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

uint64_t PersonalizationPrivacyPreferenceUpdated.preference.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB4350();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

void static PersonalizationPrivacyPreferenceUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for PersonalizationPrivacyPreferenceUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4350();
  Swift::String v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for PersonalizationPrivacyPreferenceUpdated(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB4350();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for PersonalizationPrivacyPreferenceUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for PersonalizationPrivacyPreferenceUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for PersonalizationPrivacyPreferenceUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for PersonalizationPrivacyPreferenceUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for PersonalizationPrivacyPreferenceUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D59D05B4);
}

uint64_t sub_1D59D05B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4350();
  Swift::String v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for PersonalizationPrivacyPreferenceUpdated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D59D0634);
}

uint64_t sub_1D59D0634(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4350();
  Swift::String v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for PersonalizationPrivacyPreferenceUpdated()
{
  uint64_t result = qword_1EBDE4288;
  if (!qword_1EBDE4288) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D59D06F0()
{
  uint64_t result = sub_1D5AB4350();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t ScoreMetricUpdated.scoreMetric.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB2150();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t ScoreMetricUpdated.sessionIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ScoreMetricUpdated() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for ScoreMetricUpdated()
{
  uint64_t result = qword_1EA725D20;
  if (!qword_1EA725D20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ScoreMetricUpdated.init(scoreMetric:sessionIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1D5AB2150();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t result = type metadata accessor for ScoreMetricUpdated();
  uint64_t v10 = (void *)(a4 + *(int *)(result + 20));
  *uint64_t v10 = a2;
  v10[1] = a3;
  return result;
}

void static ScoreMetricUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t *initializeBufferWithCopyOfBuffer for ScoreMetricUpdated(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1D5AB2150();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    Swift::String v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *Swift::String v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ScoreMetricUpdated(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB2150();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ScoreMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB2150();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  Swift::String v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ScoreMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB2150();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  Swift::String v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ScoreMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB2150();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for ScoreMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB2150();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  Swift::String v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScoreMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D59D0C94);
}

uint64_t sub_1D59D0C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB2150();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ScoreMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D59D0D6C);
}

uint64_t sub_1D59D0D6C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1D5AB2150();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1D59D0E2C()
{
  uint64_t result = sub_1D5AB2150();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t MindfulMinutesMetric.applyingTimestampOffset(_:)()
{
  sub_1D5AB35A0();
  return sub_1D5AB35C0();
}

uint64_t sub_1D59D0F18()
{
  sub_1D5AB35A0();
  return sub_1D5AB35C0();
}

uint64_t CatalogProgram.reference()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v109 = a1;
  uint64_t v128 = sub_1D5AB22A0();
  uint64_t v130 = *(void *)(v128 - 8);
  MEMORY[0x1F4188790](v128);
  unint64_t v127 = (char *)&v105 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1D5AB1B30();
  MEMORY[0x1F4188790](v3 - 8);
  BOOL v108 = (char *)&v105 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_1D5AB4890();
  uint64_t v129 = *(void *)(v126 - 8);
  MEMORY[0x1F4188790](v126);
  unint64_t v125 = (void (**)(char *, uint64_t))((char *)&v105 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v124 = (void *)sub_1D5AB1E30();
  uint64_t v107 = *(v124 - 1);
  MEMORY[0x1F4188790](v124);
  uint64_t v123 = (char *)&v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = (void *)sub_1D5AB2CC0();
  uint64_t v106 = *(v122 - 1);
  MEMORY[0x1F4188790](v122);
  uint64_t v121 = (char *)&v105 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = (void *)sub_1D5AB4A50();
  uint64_t v105 = *(v120 - 1);
  MEMORY[0x1F4188790](v120);
  unint64_t v119 = (char *)&v105 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = (void *)sub_1D5AB2070();
  uint64_t v9 = *(v118 - 1);
  uint64_t v10 = MEMORY[0x1F4188790](v118);
  uint64_t v117 = (char *)&v105 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v116 = (char *)&v105 - v12;
  uint64_t v110 = v1;
  uint64_t v13 = sub_1D5AB2850();
  int64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    uint64_t v131 = (char *)MEMORY[0x1E4FBC860];
    sub_1D594E784(0, v14, 0);
    uint64_t result = sub_1D594F1A0(v13);
    uint64_t v16 = result;
    uint64_t v18 = v17;
    char v20 = v19 & 1;
    uint64_t v114 = v9;
    uint64_t v115 = v13 + 56;
    uint64_t v112 = v9 + 32;
    uint64_t v113 = v9 + 16;
    uint64_t v111 = v9 + 8;
    while ((v16 & 0x8000000000000000) == 0 && v16 < 1 << *(unsigned char *)(v13 + 32))
    {
      if (((*(void *)(v115 + (((unint64_t)v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v16) & 1) == 0) {
        goto LABEL_55;
      }
      if (*(_DWORD *)(v13 + 36) != v18) {
        goto LABEL_56;
      }
      uint64_t v21 = v116;
      uint64_t v22 = v118;
      (*(void (**)(char *, uint64_t, void *))(v9 + 16))(v116, *(void *)(v13 + 48) + *(void *)(v9 + 72) * v16, v118);
      uint64_t v23 = v117;
      (*(void (**)(char *, char *, void *))(v9 + 32))(v117, v21, v22);
      uint64_t v24 = sub_1D5AB2060();
      uint64_t v26 = v25;
      (*(void (**)(char *, void *))(v9 + 8))(v23, v22);
      uint64_t v27 = v131;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D594E784(0, *((void *)v27 + 2) + 1, 1);
        uint64_t v27 = v131;
      }
      unint64_t v29 = *((void *)v27 + 2);
      unint64_t v28 = *((void *)v27 + 3);
      if (v29 >= v28 >> 1)
      {
        sub_1D594E784(v28 > 1, v29 + 1, 1);
        uint64_t v27 = v131;
      }
      *((void *)v27 + 2) = v29 + 1;
      uint64_t v30 = &v27[16 * v29];
      *((void *)v30 + 4) = v24;
      *((void *)v30 + 5) = v26;
      uint64_t result = sub_1D594F244(v16, v18, v20 & 1, v13);
      uint64_t v16 = result;
      uint64_t v18 = v31;
      char v20 = v32 & 1;
      --v14;
      uint64_t v9 = v114;
      if (!v14)
      {
        uint64_t v117 = v27;
        sub_1D594B5F8(result, v31, v32 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v117 = (char *)MEMORY[0x1E4FBC860];
LABEL_14:
    uint64_t v33 = sub_1D5AB28B0();
    int64_t v34 = *(void *)(v33 + 16);
    if (v34)
    {
      uint64_t v131 = (char *)MEMORY[0x1E4FBC860];
      sub_1D594E784(0, v34, 0);
      uint64_t v118 = *(void **)(v105 + 16);
      uint64_t v35 = *(unsigned __int8 *)(v105 + 80);
      uint64_t v116 = (char *)v33;
      uint64_t v36 = v33 + ((v35 + 32) & ~v35);
      uint64_t v37 = *(void *)(v105 + 72);
      uint64_t v38 = (void (**)(char *, void *))(v105 + 8);
      do
      {
        uint64_t v40 = v119;
        uint64_t v39 = v120;
        ((void (*)(char *, uint64_t, void *))v118)(v119, v36, v120);
        uint64_t v41 = sub_1D5AB4A40();
        uint64_t v43 = v42;
        (*v38)(v40, v39);
        uint64_t v44 = v131;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D594E784(0, *((void *)v44 + 2) + 1, 1);
          uint64_t v44 = v131;
        }
        unint64_t v46 = *((void *)v44 + 2);
        unint64_t v45 = *((void *)v44 + 3);
        if (v46 >= v45 >> 1)
        {
          sub_1D594E784(v45 > 1, v46 + 1, 1);
          uint64_t v44 = v131;
        }
        *((void *)v44 + 2) = v46 + 1;
        int64_t v47 = &v44[16 * v46];
        *((void *)v47 + 4) = v41;
        *((void *)v47 + 5) = v43;
        v36 += v37;
        --v34;
      }
      while (v34);
      unint64_t v119 = v44;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v119 = (char *)MEMORY[0x1E4FBC860];
    }
    uint64_t v48 = sub_1D5AB2830();
    int64_t v49 = *(void *)(v48 + 16);
    if (v49)
    {
      uint64_t v131 = (char *)MEMORY[0x1E4FBC860];
      sub_1D594E784(0, v49, 0);
      uint64_t v120 = *(void **)(v106 + 16);
      uint64_t v50 = *(unsigned __int8 *)(v106 + 80);
      uint64_t v118 = (void *)v48;
      uint64_t v51 = v48 + ((v50 + 32) & ~v50);
      uint64_t v52 = *(void *)(v106 + 72);
      uint64_t v53 = (void (**)(char *, void *))(v106 + 8);
      do
      {
        uint64_t v54 = v121;
        int64_t v55 = v122;
        ((void (*)(char *, uint64_t, void *))v120)(v121, v51, v122);
        uint64_t v56 = sub_1D5AB2C00();
        uint64_t v58 = v57;
        (*v53)(v54, v55);
        unint64_t v59 = v131;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D594E784(0, *((void *)v59 + 2) + 1, 1);
          unint64_t v59 = v131;
        }
        unint64_t v61 = *((void *)v59 + 2);
        unint64_t v60 = *((void *)v59 + 3);
        if (v61 >= v60 >> 1)
        {
          sub_1D594E784(v60 > 1, v61 + 1, 1);
          unint64_t v59 = v131;
        }
        *((void *)v59 + 2) = v61 + 1;
        uint64_t v62 = &v59[16 * v61];
        *((void *)v62 + 4) = v56;
        *((void *)v62 + 5) = v58;
        v51 += v52;
        --v49;
      }
      while (v49);
      uint64_t v120 = v59;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v120 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v63 = sub_1D5AB2840();
    int64_t v64 = *(void *)(v63 + 16);
    if (v64)
    {
      uint64_t v131 = (char *)MEMORY[0x1E4FBC860];
      sub_1D594E784(0, v64, 0);
      uint64_t v65 = *(void **)(v107 + 16);
      uint64_t v66 = *(unsigned __int8 *)(v107 + 80);
      uint64_t v118 = (void *)v63;
      uint64_t v67 = v63 + ((v66 + 32) & ~v66);
      uint64_t v121 = *(char **)(v107 + 72);
      uint64_t v122 = v65;
      unint64_t v68 = (void (**)(char *, void *))(v107 + 8);
      do
      {
        uint64_t v69 = v123;
        uint64_t v70 = v124;
        ((void (*)(char *, uint64_t, void *))v122)(v123, v67, v124);
        uint64_t v71 = sub_1D5AB1E20();
        uint64_t v73 = v72;
        (*v68)(v69, v70);
        uint64_t v74 = v131;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D594E784(0, *((void *)v74 + 2) + 1, 1);
          uint64_t v74 = v131;
        }
        unint64_t v76 = *((void *)v74 + 2);
        unint64_t v75 = *((void *)v74 + 3);
        if (v76 >= v75 >> 1)
        {
          sub_1D594E784(v75 > 1, v76 + 1, 1);
          uint64_t v74 = v131;
        }
        *((void *)v74 + 2) = v76 + 1;
        unint64_t v77 = &v74[16 * v76];
        *((void *)v77 + 4) = v71;
        *((void *)v77 + 5) = v73;
        v67 += (uint64_t)v121;
        --v64;
      }
      while (v64);
    }
    swift_bridgeObjectRelease();
    uint64_t v78 = sub_1D5AB28A0();
    int64_t v79 = *(void *)(v78 + 16);
    if (v79)
    {
      uint64_t v131 = (char *)MEMORY[0x1E4FBC860];
      sub_1D594E784(0, v79, 0);
      unint64_t v80 = *(void **)(v129 + 16);
      uint64_t v81 = *(unsigned __int8 *)(v129 + 80);
      uint64_t v122 = (void *)v78;
      uint64_t v82 = v78 + ((v81 + 32) & ~v81);
      uint64_t v123 = *(char **)(v129 + 72);
      uint64_t v124 = v80;
      v129 += 16;
      uint64_t v83 = (void (**)(char *, uint64_t))(v129 - 8);
      do
      {
        uint64_t v85 = (char *)v125;
        uint64_t v84 = v126;
        ((void (*)(void (**)(char *, uint64_t), uint64_t, uint64_t))v124)(v125, v82, v126);
        uint64_t v86 = sub_1D5AB4810();
        uint64_t v88 = v87;
        (*v83)(v85, v84);
        uint64_t v89 = v131;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D594E784(0, *((void *)v89 + 2) + 1, 1);
          uint64_t v89 = v131;
        }
        unint64_t v91 = *((void *)v89 + 2);
        unint64_t v90 = *((void *)v89 + 3);
        if (v91 >= v90 >> 1)
        {
          sub_1D594E784(v90 > 1, v91 + 1, 1);
          uint64_t v89 = v131;
        }
        *((void *)v89 + 2) = v91 + 1;
        unint64_t v92 = &v89[16 * v91];
        *((void *)v92 + 4) = v86;
        *((void *)v92 + 5) = v88;
        v82 += (uint64_t)v123;
        --v79;
      }
      while (v79);
    }
    swift_bridgeObjectRelease();
    uint64_t v93 = sub_1D5AB2890();
    int64_t v94 = *(void *)(v93 + 16);
    if (v94)
    {
      uint64_t v131 = (char *)MEMORY[0x1E4FBC860];
      sub_1D594E784(0, v94, 0);
      uint64_t v129 = *(void *)(v130 + 16);
      v130 += 16;
      unint64_t v95 = v93 + ((*(unsigned __int8 *)(v130 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 64));
      uint64_t v126 = *(void *)(v130 + 56);
      uint64_t v124 = (void *)v93;
      unint64_t v125 = (void (**)(char *, uint64_t))(v130 - 8);
      do
      {
        uint64_t v96 = v127;
        uint64_t v97 = v128;
        ((void (*)(char *, unint64_t, uint64_t))v129)(v127, v95, v128);
        uint64_t v98 = sub_1D5AB2290();
        uint64_t v100 = v99;
        (*v125)(v96, v97);
        BOOL v101 = v131;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D594E784(0, *((void *)v101 + 2) + 1, 1);
          BOOL v101 = v131;
        }
        unint64_t v103 = *((void *)v101 + 2);
        unint64_t v102 = *((void *)v101 + 3);
        if (v103 >= v102 >> 1)
        {
          sub_1D594E784(v102 > 1, v103 + 1, 1);
          BOOL v101 = v131;
        }
        *((void *)v101 + 2) = v103 + 1;
        uint64_t v104 = &v101[16 * v103];
        *((void *)v104 + 4) = v98;
        *((void *)v104 + 5) = v100;
        v95 += v126;
        --v94;
      }
      while (v94);
    }
    swift_bridgeObjectRelease();
    sub_1D5AB2870();
    sub_1D5AB2860();
    sub_1D5AB2820();
    sub_1D5AB2880();
    return sub_1D5AB3860();
  }
  return result;
}

uint64_t ActivityRings.applyingTimestampOffset(_:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7251A0);
  uint64_t v1 = MEMORY[0x1F4188790](v0 - 8);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v13 - v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7251A8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D5AB2ED0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = sub_1D5AB2230();
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  v11(v5, 1, 1, v10);
  v11(v3, 1, 1, v10);
  sub_1D5AB2440();
  sub_1D5AB2480();
  sub_1D594F53C((uint64_t)v3, &qword_1EA7251A0);
  sub_1D594F53C((uint64_t)v5, &qword_1EA7251A0);
  return sub_1D594F53C((uint64_t)v8, &qword_1EA7251A8);
}

uint64_t sub_1D59D1DF4()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7251A0);
  uint64_t v1 = MEMORY[0x1F4188790](v0 - 8);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v13 - v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7251A8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D5AB2ED0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = sub_1D5AB2230();
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  v11(v5, 1, 1, v10);
  v11(v3, 1, 1, v10);
  sub_1D5AB2440();
  sub_1D5AB2480();
  sub_1D594F53C((uint64_t)v3, &qword_1EA7251A0);
  sub_1D594F53C((uint64_t)v5, &qword_1EA7251A0);
  return sub_1D594F53C((uint64_t)v8, &qword_1EA7251A8);
}

BOOL static Feature.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1D59D200C()
{
  return 0;
}

uint64_t sub_1D59D2018()
{
  return 0;
}

void sub_1D59D2024(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1D59D2030(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6BA4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D206C(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6BA4();
  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1D59D20A8(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000020;
      break;
    case 2:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 3:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000028;
      break;
    case 5:
      unint64_t result = 0xD000000000000020;
      break;
    case 6:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 7:
    case 31:
    case 34:
    case 35:
    case 41:
      unint64_t result = 0xD000000000000015;
      break;
    case 8:
      unint64_t result = 0xD000000000000017;
      break;
    case 9:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 10:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 11:
      unint64_t result = 0xD000000000000011;
      break;
    case 12:
      unint64_t result = 0xD000000000000016;
      break;
    case 13:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 14:
      unint64_t result = 0xD000000000000024;
      break;
    case 15:
      unint64_t result = 0xD000000000000018;
      break;
    case 16:
      unint64_t result = 0xD000000000000023;
      break;
    case 17:
      unint64_t result = 0xD000000000000020;
      break;
    case 18:
      unint64_t result = 0xD000000000000019;
      break;
    case 19:
      unint64_t result = 0xD000000000000019;
      break;
    case 20:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 21:
      unint64_t result = 0xD000000000000017;
      break;
    case 22:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 23:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 24:
      unint64_t result = 0xD000000000000011;
      break;
    case 25:
      unint64_t result = 0xD000000000000020;
      break;
    case 26:
      unint64_t result = 0x7953726576726573;
      break;
    case 27:
      unint64_t result = 0xD000000000000016;
      break;
    case 28:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 29:
      unint64_t result = 0xD000000000000021;
      break;
    case 30:
      unint64_t result = 0xD000000000000019;
      break;
    case 32:
      unint64_t result = 1936746868;
      break;
    case 33:
      unint64_t result = 0x6573705573706974;
      break;
    case 36:
      unint64_t result = 0xD000000000000016;
      break;
    case 37:
      unint64_t result = 0xD000000000000016;
      break;
    case 38:
      unint64_t result = 0x724265746F6D6572;
      break;
    case 39:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 40:
      unint64_t result = 0xD000000000000018;
      break;
    case 42:
      unint64_t result = 0xD000000000000020;
      break;
    case 43:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D59D2484(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6418();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D24C0(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6418();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D24FC(uint64_t a1)
{
  unint64_t v2 = sub_1D59D63C4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D2538(uint64_t a1)
{
  unint64_t v2 = sub_1D59D63C4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D2574(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6CF4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D25B0(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6CF4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D25EC(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6F94();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D2628(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6F94();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D2664(uint64_t a1)
{
  unint64_t v2 = sub_1D59D66B8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D26A0(uint64_t a1)
{
  unint64_t v2 = sub_1D59D66B8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D26DC(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6220();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D2718(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6220();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D2754(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6AFC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D2790(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6AFC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D27CC(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6E98();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D2808(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6E98();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D2844(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6178();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D2880(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6178();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D28BC(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6D48();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D28F8(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6D48();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D2934(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6A54();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D2970(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6A54();
  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1D59D29B4()
{
  return sub_1D59D20A8(*v0);
}

uint64_t sub_1D59D29BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D59DBF8C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1D59D29E4(unsigned char *a1@<X8>)
{
  *a1 = 44;
}

uint64_t sub_1D59D29F0(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6124();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D2A2C(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6124();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D2A68(uint64_t a1)
{
  unint64_t v2 = sub_1D59D67B4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D2AA4(uint64_t a1)
{
  unint64_t v2 = sub_1D59D67B4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D2AE0(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6C4C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D2B1C(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6C4C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D2B58(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6BF8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D2B94(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6BF8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D2BD0(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6AA8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D2C0C(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6AA8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D2C48(uint64_t a1)
{
  unint64_t v2 = sub_1D59D68B0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D2C84(uint64_t a1)
{
  unint64_t v2 = sub_1D59D68B0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D2CC0(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6610();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D2CFC(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6610();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D2D38(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6B50();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D2D74(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6B50();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D2DB0(uint64_t a1)
{
  unint64_t v2 = sub_1D59D65BC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D2DEC(uint64_t a1)
{
  unint64_t v2 = sub_1D59D65BC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D2E28(uint64_t a1)
{
  unint64_t v2 = sub_1D59D62C8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D2E64(uint64_t a1)
{
  unint64_t v2 = sub_1D59D62C8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D2EA0(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6A00();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D2EDC(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6A00();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D2F18(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6CA0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D2F54(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6CA0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D2F90(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6958();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D2FCC(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6958();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D3008(uint64_t a1)
{
  unint64_t v2 = sub_1D59D61CC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D3044(uint64_t a1)
{
  unint64_t v2 = sub_1D59D61CC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D3080@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1D59D30B0(uint64_t a1)
{
  unint64_t v2 = sub_1D59D685C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D30EC(uint64_t a1)
{
  unint64_t v2 = sub_1D59D685C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D3128(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6808();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D3164(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6808();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D31A0(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6E44();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D31DC(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6E44();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D3218(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6F40();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D3254(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6F40();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D3290(uint64_t a1)
{
  unint64_t v2 = sub_1D59D631C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D32CC(uint64_t a1)
{
  unint64_t v2 = sub_1D59D631C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D3308(uint64_t a1)
{
  unint64_t v2 = sub_1D59D670C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D3344(uint64_t a1)
{
  unint64_t v2 = sub_1D59D670C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D3380(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6904();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D33BC(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6904();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D33F8(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6EEC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D3434(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6EEC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D3470(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6760();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D34AC(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6760();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D34E8(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6DF0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D3524(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6DF0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D3560(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6664();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D359C(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6664();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D35D8(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6D9C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D3614(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6D9C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D3650(uint64_t a1)
{
  unint64_t v2 = sub_1D59D69AC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D368C(uint64_t a1)
{
  unint64_t v2 = sub_1D59D69AC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D36C8(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6514();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D3704(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6514();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D3740(uint64_t a1)
{
  unint64_t v2 = sub_1D59D64C0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D377C(uint64_t a1)
{
  unint64_t v2 = sub_1D59D64C0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D37B8(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6370();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D37F4(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6370();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D3830(uint64_t a1)
{
  unint64_t v2 = sub_1D59D646C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D386C(uint64_t a1)
{
  unint64_t v2 = sub_1D59D646C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D38A8(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6274();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D38E4(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6274();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D59D3920(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6568();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D59D395C(uint64_t a1)
{
  unint64_t v2 = sub_1D59D6568();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t Feature.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725D30);
  uint64_t v234 = *(void *)(v4 - 8);
  uint64_t v235 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v233 = (char *)&v107 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725D38);
  uint64_t v231 = *(void *)(v6 - 8);
  uint64_t v232 = v6;
  MEMORY[0x1F4188790](v6);
  char v230 = (char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725D40);
  uint64_t v228 = *(void *)(v8 - 8);
  uint64_t v229 = v8;
  MEMORY[0x1F4188790](v8);
  int64_t v227 = (char *)&v107 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725D48);
  uint64_t v225 = *(void *)(v10 - 8);
  uint64_t v226 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v224 = (char *)&v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725D50);
  uint64_t v222 = *(void *)(v12 - 8);
  uint64_t v223 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v221 = (char *)&v107 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725D58);
  uint64_t v219 = *(void *)(v14 - 8);
  uint64_t v220 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v218 = (char *)&v107 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v217 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725D60);
  uint64_t v216 = *(void *)(v217 - 8);
  MEMORY[0x1F4188790](v217);
  unint64_t v215 = (char *)&v107 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v214 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725D68);
  uint64_t v213 = *(void *)(v214 - 8);
  MEMORY[0x1F4188790](v214);
  uint64_t v212 = (char *)&v107 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v211 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725D70);
  uint64_t v210 = *(void *)(v211 - 8);
  MEMORY[0x1F4188790](v211);
  uint64_t v209 = (char *)&v107 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v208 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725D78);
  uint64_t v207 = *(void *)(v208 - 8);
  MEMORY[0x1F4188790](v208);
  char v206 = (char *)&v107 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v205 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725D80);
  uint64_t v204 = *(void *)(v205 - 8);
  MEMORY[0x1F4188790](v205);
  uint64_t v203 = (char *)&v107 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v202 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725D88);
  uint64_t v201 = *(void *)(v202 - 8);
  MEMORY[0x1F4188790](v202);
  uint64_t v200 = (char *)&v107 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v199 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725D90);
  uint64_t v198 = *(void *)(v199 - 8);
  MEMORY[0x1F4188790](v199);
  uint64_t v197 = (char *)&v107 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v196 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725D98);
  uint64_t v195 = *(void *)(v196 - 8);
  MEMORY[0x1F4188790](v196);
  uint64_t v194 = (char *)&v107 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v193 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725DA0);
  uint64_t v192 = *(void *)(v193 - 8);
  MEMORY[0x1F4188790](v193);
  char v191 = (char *)&v107 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v190 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725DA8);
  uint64_t v189 = *(void *)(v190 - 8);
  MEMORY[0x1F4188790](v190);
  uint64_t v188 = (char *)&v107 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v187 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725DB0);
  uint64_t v186 = *(void *)(v187 - 8);
  MEMORY[0x1F4188790](v187);
  uint64_t v185 = (char *)&v107 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v184 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725DB8);
  uint64_t v183 = *(void *)(v184 - 8);
  MEMORY[0x1F4188790](v184);
  uint64_t v182 = (char *)&v107 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725DC0);
  uint64_t v180 = *(void *)(v181 - 8);
  MEMORY[0x1F4188790](v181);
  uint64_t v179 = (char *)&v107 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725DC8);
  uint64_t v177 = *(void *)(v178 - 8);
  MEMORY[0x1F4188790](v178);
  uint64_t v176 = (char *)&v107 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725DD0);
  uint64_t v174 = *(void *)(v175 - 8);
  MEMORY[0x1F4188790](v175);
  unint64_t v173 = (char *)&v107 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725DD8);
  uint64_t v171 = *(void *)(v172 - 8);
  MEMORY[0x1F4188790](v172);
  uint64_t v170 = (char *)&v107 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725DE0);
  uint64_t v168 = *(void *)(v169 - 8);
  MEMORY[0x1F4188790](v169);
  uint64_t v167 = (char *)&v107 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725DE8);
  uint64_t v165 = *(void *)(v166 - 8);
  MEMORY[0x1F4188790](v166);
  uint64_t v164 = (char *)&v107 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725DF0);
  uint64_t v162 = *(void *)(v163 - 8);
  MEMORY[0x1F4188790](v163);
  uint64_t v161 = (char *)&v107 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725DF8);
  uint64_t v159 = *(void *)(v160 - 8);
  MEMORY[0x1F4188790](v160);
  uint64_t v158 = (char *)&v107 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725E00);
  uint64_t v156 = *(void *)(v157 - 8);
  MEMORY[0x1F4188790](v157);
  unint64_t v155 = (char *)&v107 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725E08);
  uint64_t v153 = *(void *)(v154 - 8);
  MEMORY[0x1F4188790](v154);
  uint64_t v152 = (char *)&v107 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725E10);
  uint64_t v150 = *(void *)(v151 - 8);
  MEMORY[0x1F4188790](v151);
  int v149 = (char *)&v107 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725E18);
  uint64_t v147 = *(void *)(v148 - 8);
  MEMORY[0x1F4188790](v148);
  uint64_t v146 = (char *)&v107 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725E20);
  uint64_t v144 = *(void *)(v145 - 8);
  MEMORY[0x1F4188790](v145);
  uint64_t v143 = (char *)&v107 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725E28);
  uint64_t v141 = *(void *)(v142 - 8);
  MEMORY[0x1F4188790](v142);
  uint64_t v140 = (char *)&v107 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725E30);
  uint64_t v138 = *(void *)(v139 - 8);
  MEMORY[0x1F4188790](v139);
  uint64_t v137 = (char *)&v107 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725E38);
  uint64_t v135 = *(void *)(v136 - 8);
  MEMORY[0x1F4188790](v136);
  uint64_t v134 = (char *)&v107 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725E40);
  uint64_t v132 = *(void *)(v133 - 8);
  MEMORY[0x1F4188790](v133);
  uint64_t v131 = (char *)&v107 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725E48);
  uint64_t v129 = *(void *)(v130 - 8);
  MEMORY[0x1F4188790](v130);
  uint64_t v128 = (char *)&v107 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725E50);
  uint64_t v126 = *(void *)(v127 - 8);
  MEMORY[0x1F4188790](v127);
  unint64_t v125 = (char *)&v107 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725E58);
  uint64_t v123 = *(void *)(v124 - 8);
  MEMORY[0x1F4188790](v124);
  uint64_t v122 = (char *)&v107 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725E60);
  uint64_t v120 = *(void *)(v121 - 8);
  MEMORY[0x1F4188790](v121);
  unint64_t v119 = (char *)&v107 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725E68);
  uint64_t v117 = *(void *)(v118 - 8);
  MEMORY[0x1F4188790](v118);
  uint64_t v116 = (char *)&v107 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725E70);
  uint64_t v114 = *(void *)(v115 - 8);
  MEMORY[0x1F4188790](v115);
  uint64_t v113 = (char *)&v107 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725E78);
  uint64_t v111 = *(void *)(v112 - 8);
  MEMORY[0x1F4188790](v112);
  uint64_t v110 = (char *)&v107 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725E80);
  uint64_t v109 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v54 = (char *)&v107 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725E88);
  uint64_t v108 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  uint64_t v57 = (char *)&v107 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725E90);
  uint64_t v59 = *(void *)(v58 - 8);
  uint64_t v237 = v58;
  uint64_t v238 = v59;
  MEMORY[0x1F4188790](v58);
  unint64_t v61 = (char *)&v107 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D59D6124();
  uint64_t v236 = v61;
  sub_1D5AB5CF0();
  switch(v62)
  {
    case 1:
      char v239 = 1;
      sub_1D59D6F40();
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v109 + 8))(v54, v52);
      return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v64, v63);
    case 2:
      char v239 = 2;
      sub_1D59D6EEC();
      uint64_t v65 = v110;
      uint64_t v66 = v236;
      uint64_t v67 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v111 + 8))(v65, v112);
      return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v66, v67);
    case 3:
      char v239 = 3;
      sub_1D59D6E98();
      uint64_t v69 = v113;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v114 + 8))(v69, v115);
      return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v64, v63);
    case 4:
      char v239 = 4;
      sub_1D59D6E44();
      uint64_t v70 = v116;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v117 + 8))(v70, v118);
      return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v64, v63);
    case 5:
      char v239 = 5;
      sub_1D59D6DF0();
      uint64_t v71 = v119;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v120 + 8))(v71, v121);
      return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v64, v63);
    case 6:
      char v239 = 6;
      sub_1D59D6D9C();
      uint64_t v72 = v122;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v123 + 8))(v72, v124);
      return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v64, v63);
    case 7:
      char v239 = 7;
      sub_1D59D6D48();
      uint64_t v73 = v125;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v126 + 8))(v73, v127);
      return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v64, v63);
    case 8:
      char v239 = 8;
      sub_1D59D6CF4();
      uint64_t v74 = v128;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v129 + 8))(v74, v130);
      return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v64, v63);
    case 9:
      char v239 = 9;
      sub_1D59D6CA0();
      unint64_t v75 = v131;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v132 + 8))(v75, v133);
      return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v64, v63);
    case 10:
      char v239 = 10;
      sub_1D59D6C4C();
      unint64_t v76 = v134;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v135 + 8))(v76, v136);
      return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v64, v63);
    case 11:
      char v239 = 11;
      sub_1D59D6BF8();
      unint64_t v77 = v137;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v138 + 8))(v77, v139);
      return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v64, v63);
    case 12:
      char v239 = 12;
      sub_1D59D6BA4();
      uint64_t v78 = v140;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v141 + 8))(v78, v142);
      return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v64, v63);
    case 13:
      char v239 = 13;
      sub_1D59D6B50();
      int64_t v79 = v143;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v144 + 8))(v79, v145);
      return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v64, v63);
    case 14:
      char v239 = 14;
      sub_1D59D6AFC();
      unint64_t v80 = v146;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v147 + 8))(v80, v148);
      return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v64, v63);
    case 15:
      char v239 = 15;
      sub_1D59D6AA8();
      uint64_t v81 = v149;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v150 + 8))(v81, v151);
      return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v64, v63);
    case 16:
      char v239 = 16;
      sub_1D59D6A54();
      uint64_t v82 = v152;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v153 + 8))(v82, v154);
      return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v64, v63);
    case 17:
      char v239 = 17;
      sub_1D59D6A00();
      uint64_t v83 = v155;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v156 + 8))(v83, v157);
      return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v64, v63);
    case 18:
      char v239 = 18;
      sub_1D59D69AC();
      uint64_t v84 = v158;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v159 + 8))(v84, v160);
      return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v64, v63);
    case 19:
      char v239 = 19;
      sub_1D59D6958();
      uint64_t v85 = v161;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v162 + 8))(v85, v163);
      return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v64, v63);
    case 20:
      char v239 = 20;
      sub_1D59D6904();
      uint64_t v86 = v164;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v165 + 8))(v86, v166);
      return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v64, v63);
    case 21:
      char v239 = 21;
      sub_1D59D68B0();
      uint64_t v87 = v167;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v168 + 8))(v87, v169);
      return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v64, v63);
    case 22:
      char v239 = 22;
      sub_1D59D685C();
      uint64_t v88 = v170;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v171 + 8))(v88, v172);
      return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v64, v63);
    case 23:
      char v239 = 23;
      sub_1D59D6808();
      uint64_t v89 = v173;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v174 + 8))(v89, v175);
      return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v64, v63);
    case 24:
      char v239 = 24;
      sub_1D59D67B4();
      unint64_t v90 = v176;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v177 + 8))(v90, v178);
      return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v64, v63);
    case 25:
      char v239 = 25;
      sub_1D59D6760();
      unint64_t v91 = v179;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v180 + 8))(v91, v181);
      return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v64, v63);
    case 26:
      char v239 = 26;
      sub_1D59D670C();
      unint64_t v92 = v182;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v183 + 8))(v92, v184);
      return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v64, v63);
    case 27:
      char v239 = 27;
      sub_1D59D66B8();
      uint64_t v93 = v185;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v186 + 8))(v93, v187);
      return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v64, v63);
    case 28:
      char v239 = 28;
      sub_1D59D6664();
      int64_t v94 = v188;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v189 + 8))(v94, v190);
      return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v64, v63);
    case 29:
      char v239 = 29;
      sub_1D59D6610();
      unint64_t v95 = v191;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v192 + 8))(v95, v193);
      return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v64, v63);
    case 30:
      char v239 = 30;
      sub_1D59D65BC();
      uint64_t v96 = v194;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v195 + 8))(v96, v196);
      return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v64, v63);
    case 31:
      char v239 = 31;
      sub_1D59D6568();
      uint64_t v97 = v197;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v198 + 8))(v97, v199);
      return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v64, v63);
    case 32:
      char v239 = 32;
      sub_1D59D6514();
      uint64_t v98 = v200;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v201 + 8))(v98, v202);
      return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v64, v63);
    case 33:
      char v239 = 33;
      sub_1D59D64C0();
      uint64_t v99 = v203;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v204 + 8))(v99, v205);
      return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v64, v63);
    case 34:
      char v239 = 34;
      sub_1D59D646C();
      uint64_t v100 = v206;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v207 + 8))(v100, v208);
      return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v64, v63);
    case 35:
      char v239 = 35;
      sub_1D59D6418();
      BOOL v101 = v209;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v210 + 8))(v101, v211);
      return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v64, v63);
    case 36:
      char v239 = 36;
      sub_1D59D63C4();
      unint64_t v102 = v212;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v213 + 8))(v102, v214);
      return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v64, v63);
    case 37:
      char v239 = 37;
      sub_1D59D6370();
      unint64_t v103 = v215;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v216 + 8))(v103, v217);
      return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v64, v63);
    case 38:
      char v239 = 38;
      sub_1D59D631C();
      uint64_t v104 = v218;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      uint64_t v106 = v219;
      uint64_t v105 = v220;
      goto LABEL_46;
    case 39:
      char v239 = 39;
      sub_1D59D62C8();
      uint64_t v104 = v221;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      uint64_t v106 = v222;
      uint64_t v105 = v223;
      goto LABEL_46;
    case 40:
      char v239 = 40;
      sub_1D59D6274();
      uint64_t v104 = v224;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      uint64_t v106 = v225;
      uint64_t v105 = v226;
      goto LABEL_46;
    case 41:
      char v239 = 41;
      sub_1D59D6220();
      uint64_t v104 = v227;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      uint64_t v106 = v228;
      uint64_t v105 = v229;
      goto LABEL_46;
    case 42:
      char v239 = 42;
      sub_1D59D61CC();
      uint64_t v104 = v230;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      uint64_t v106 = v231;
      uint64_t v105 = v232;
      goto LABEL_46;
    case 43:
      char v239 = 43;
      sub_1D59D6178();
      uint64_t v104 = v233;
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      uint64_t v106 = v234;
      uint64_t v105 = v235;
LABEL_46:
      (*(void (**)(char *, uint64_t))(v106 + 8))(v104, v105);
      break;
    default:
      char v239 = 0;
      sub_1D59D6F94();
      int64_t v64 = v236;
      uint64_t v63 = v237;
      sub_1D5AB5A90();
      (*(void (**)(char *, uint64_t))(v108 + 8))(v57, v55);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v238 + 8))(v64, v63);
}

unint64_t sub_1D59D6124()
{
  unint64_t result = qword_1EA725E98;
  if (!qword_1EA725E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725E98);
  }
  return result;
}

unint64_t sub_1D59D6178()
{
  unint64_t result = qword_1EA725EA0;
  if (!qword_1EA725EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725EA0);
  }
  return result;
}

unint64_t sub_1D59D61CC()
{
  unint64_t result = qword_1EA725EA8;
  if (!qword_1EA725EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725EA8);
  }
  return result;
}

unint64_t sub_1D59D6220()
{
  unint64_t result = qword_1EA725EB0;
  if (!qword_1EA725EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725EB0);
  }
  return result;
}

unint64_t sub_1D59D6274()
{
  unint64_t result = qword_1EA725EB8;
  if (!qword_1EA725EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725EB8);
  }
  return result;
}

unint64_t sub_1D59D62C8()
{
  unint64_t result = qword_1EA725EC0;
  if (!qword_1EA725EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725EC0);
  }
  return result;
}

unint64_t sub_1D59D631C()
{
  unint64_t result = qword_1EA725EC8;
  if (!qword_1EA725EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725EC8);
  }
  return result;
}

unint64_t sub_1D59D6370()
{
  unint64_t result = qword_1EA725ED0;
  if (!qword_1EA725ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725ED0);
  }
  return result;
}

unint64_t sub_1D59D63C4()
{
  unint64_t result = qword_1EA725ED8;
  if (!qword_1EA725ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725ED8);
  }
  return result;
}

unint64_t sub_1D59D6418()
{
  unint64_t result = qword_1EA725EE0;
  if (!qword_1EA725EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725EE0);
  }
  return result;
}

unint64_t sub_1D59D646C()
{
  unint64_t result = qword_1EA725EE8;
  if (!qword_1EA725EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725EE8);
  }
  return result;
}

unint64_t sub_1D59D64C0()
{
  unint64_t result = qword_1EA725EF0;
  if (!qword_1EA725EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725EF0);
  }
  return result;
}

unint64_t sub_1D59D6514()
{
  unint64_t result = qword_1EA725EF8;
  if (!qword_1EA725EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725EF8);
  }
  return result;
}

unint64_t sub_1D59D6568()
{
  unint64_t result = qword_1EA725F00;
  if (!qword_1EA725F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725F00);
  }
  return result;
}

unint64_t sub_1D59D65BC()
{
  unint64_t result = qword_1EA725F08;
  if (!qword_1EA725F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725F08);
  }
  return result;
}

unint64_t sub_1D59D6610()
{
  unint64_t result = qword_1EA725F10;
  if (!qword_1EA725F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725F10);
  }
  return result;
}

unint64_t sub_1D59D6664()
{
  unint64_t result = qword_1EA725F18;
  if (!qword_1EA725F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725F18);
  }
  return result;
}

unint64_t sub_1D59D66B8()
{
  unint64_t result = qword_1EA725F20;
  if (!qword_1EA725F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725F20);
  }
  return result;
}

unint64_t sub_1D59D670C()
{
  unint64_t result = qword_1EA725F28;
  if (!qword_1EA725F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725F28);
  }
  return result;
}

unint64_t sub_1D59D6760()
{
  unint64_t result = qword_1EA725F30;
  if (!qword_1EA725F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725F30);
  }
  return result;
}

unint64_t sub_1D59D67B4()
{
  unint64_t result = qword_1EA725F38;
  if (!qword_1EA725F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725F38);
  }
  return result;
}

unint64_t sub_1D59D6808()
{
  unint64_t result = qword_1EA725F40;
  if (!qword_1EA725F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725F40);
  }
  return result;
}

unint64_t sub_1D59D685C()
{
  unint64_t result = qword_1EA725F48;
  if (!qword_1EA725F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725F48);
  }
  return result;
}

unint64_t sub_1D59D68B0()
{
  unint64_t result = qword_1EA725F50;
  if (!qword_1EA725F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725F50);
  }
  return result;
}

unint64_t sub_1D59D6904()
{
  unint64_t result = qword_1EA725F58;
  if (!qword_1EA725F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725F58);
  }
  return result;
}

unint64_t sub_1D59D6958()
{
  unint64_t result = qword_1EA725F60;
  if (!qword_1EA725F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725F60);
  }
  return result;
}

unint64_t sub_1D59D69AC()
{
  unint64_t result = qword_1EA725F68;
  if (!qword_1EA725F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725F68);
  }
  return result;
}

unint64_t sub_1D59D6A00()
{
  unint64_t result = qword_1EA725F70;
  if (!qword_1EA725F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725F70);
  }
  return result;
}

unint64_t sub_1D59D6A54()
{
  unint64_t result = qword_1EA725F78;
  if (!qword_1EA725F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725F78);
  }
  return result;
}

unint64_t sub_1D59D6AA8()
{
  unint64_t result = qword_1EA725F80;
  if (!qword_1EA725F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725F80);
  }
  return result;
}

unint64_t sub_1D59D6AFC()
{
  unint64_t result = qword_1EA725F88;
  if (!qword_1EA725F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725F88);
  }
  return result;
}

unint64_t sub_1D59D6B50()
{
  unint64_t result = qword_1EA725F90;
  if (!qword_1EA725F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725F90);
  }
  return result;
}

unint64_t sub_1D59D6BA4()
{
  unint64_t result = qword_1EA725F98;
  if (!qword_1EA725F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725F98);
  }
  return result;
}

unint64_t sub_1D59D6BF8()
{
  unint64_t result = qword_1EA725FA0;
  if (!qword_1EA725FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725FA0);
  }
  return result;
}

unint64_t sub_1D59D6C4C()
{
  unint64_t result = qword_1EA725FA8;
  if (!qword_1EA725FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725FA8);
  }
  return result;
}

unint64_t sub_1D59D6CA0()
{
  unint64_t result = qword_1EA725FB0;
  if (!qword_1EA725FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725FB0);
  }
  return result;
}

unint64_t sub_1D59D6CF4()
{
  unint64_t result = qword_1EA725FB8;
  if (!qword_1EA725FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725FB8);
  }
  return result;
}

unint64_t sub_1D59D6D48()
{
  unint64_t result = qword_1EA725FC0;
  if (!qword_1EA725FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725FC0);
  }
  return result;
}

unint64_t sub_1D59D6D9C()
{
  unint64_t result = qword_1EA725FC8;
  if (!qword_1EA725FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725FC8);
  }
  return result;
}

unint64_t sub_1D59D6DF0()
{
  unint64_t result = qword_1EA725FD0;
  if (!qword_1EA725FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725FD0);
  }
  return result;
}

unint64_t sub_1D59D6E44()
{
  unint64_t result = qword_1EA725FD8;
  if (!qword_1EA725FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725FD8);
  }
  return result;
}

unint64_t sub_1D59D6E98()
{
  unint64_t result = qword_1EA725FE0;
  if (!qword_1EA725FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725FE0);
  }
  return result;
}

unint64_t sub_1D59D6EEC()
{
  unint64_t result = qword_1EA725FE8;
  if (!qword_1EA725FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725FE8);
  }
  return result;
}

unint64_t sub_1D59D6F40()
{
  unint64_t result = qword_1EA725FF0;
  if (!qword_1EA725FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725FF0);
  }
  return result;
}

unint64_t sub_1D59D6F94()
{
  unint64_t result = qword_1EA725FF8;
  if (!qword_1EA725FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA725FF8);
  }
  return result;
}

uint64_t Feature.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  v288 = a2;
  uint64_t v287 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726000);
  uint64_t v244 = *(void *)(v287 - 8);
  MEMORY[0x1F4188790](v287);
  uint64_t v283 = (char *)&v154 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v243 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726008);
  uint64_t v242 = *(void *)(v243 - 8);
  MEMORY[0x1F4188790](v243);
  uint64_t v282 = (char *)&v154 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v241 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726010);
  uint64_t v240 = *(void *)(v241 - 8);
  MEMORY[0x1F4188790](v241);
  uint64_t v281 = (char *)&v154 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v239 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726018);
  uint64_t v238 = *(void *)(v239 - 8);
  MEMORY[0x1F4188790](v239);
  uint64_t v280 = (char *)&v154 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v237 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726020);
  uint64_t v236 = *(void *)(v237 - 8);
  MEMORY[0x1F4188790](v237);
  uint64_t v279 = (char *)&v154 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v235 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726028);
  uint64_t v234 = *(void *)(v235 - 8);
  MEMORY[0x1F4188790](v235);
  uint64_t v278 = (char *)&v154 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v233 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726030);
  uint64_t v232 = *(void *)(v233 - 8);
  MEMORY[0x1F4188790](v233);
  uint64_t v277 = (char *)&v154 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v231 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726038);
  uint64_t v230 = *(void *)(v231 - 8);
  MEMORY[0x1F4188790](v231);
  uint64_t v276 = (char *)&v154 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v229 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726040);
  uint64_t v228 = *(void *)(v229 - 8);
  MEMORY[0x1F4188790](v229);
  uint64_t v275 = (char *)&v154 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v227 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726048);
  uint64_t v226 = *(void *)(v227 - 8);
  MEMORY[0x1F4188790](v227);
  uint64_t v274 = (char *)&v154 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v225 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726050);
  uint64_t v224 = *(void *)(v225 - 8);
  MEMORY[0x1F4188790](v225);
  uint64_t v273 = (char *)&v154 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v223 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726058);
  uint64_t v222 = *(void *)(v223 - 8);
  MEMORY[0x1F4188790](v223);
  uint64_t v272 = (char *)&v154 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v221 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726060);
  uint64_t v220 = *(void *)(v221 - 8);
  MEMORY[0x1F4188790](v221);
  uint64_t v271 = (char *)&v154 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v219 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726068);
  uint64_t v218 = *(void *)(v219 - 8);
  MEMORY[0x1F4188790](v219);
  uint64_t v270 = (char *)&v154 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v217 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726070);
  uint64_t v216 = *(void *)(v217 - 8);
  MEMORY[0x1F4188790](v217);
  uint64_t v269 = (char *)&v154 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v215 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726078);
  uint64_t v214 = *(void *)(v215 - 8);
  MEMORY[0x1F4188790](v215);
  uint64_t v268 = (char *)&v154 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v213 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726080);
  uint64_t v212 = *(void *)(v213 - 8);
  MEMORY[0x1F4188790](v213);
  uint64_t v267 = (char *)&v154 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v211 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726088);
  uint64_t v210 = *(void *)(v211 - 8);
  MEMORY[0x1F4188790](v211);
  uint64_t v266 = (char *)&v154 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v209 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726090);
  uint64_t v208 = *(void *)(v209 - 8);
  MEMORY[0x1F4188790](v209);
  uint64_t v265 = (char *)&v154 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v207 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726098);
  uint64_t v206 = *(void *)(v207 - 8);
  MEMORY[0x1F4188790](v207);
  uint64_t v264 = (char *)&v154 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v205 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7260A0);
  uint64_t v204 = *(void *)(v205 - 8);
  MEMORY[0x1F4188790](v205);
  uint64_t v263 = (char *)&v154 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v203 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7260A8);
  uint64_t v202 = *(void *)(v203 - 8);
  MEMORY[0x1F4188790](v203);
  uint64_t v262 = (char *)&v154 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v201 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7260B0);
  uint64_t v200 = *(void *)(v201 - 8);
  MEMORY[0x1F4188790](v201);
  uint64_t v261 = (char *)&v154 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v199 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7260B8);
  uint64_t v198 = *(void *)(v199 - 8);
  MEMORY[0x1F4188790](v199);
  uint64_t v260 = (char *)&v154 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v197 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7260C0);
  uint64_t v196 = *(void *)(v197 - 8);
  MEMORY[0x1F4188790](v197);
  uint64_t v259 = (char *)&v154 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v195 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7260C8);
  uint64_t v194 = *(void *)(v195 - 8);
  MEMORY[0x1F4188790](v195);
  uint64_t v258 = (char *)&v154 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v193 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7260D0);
  uint64_t v192 = *(void *)(v193 - 8);
  MEMORY[0x1F4188790](v193);
  uint64_t v257 = (char *)&v154 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v191 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7260D8);
  uint64_t v190 = *(void *)(v191 - 8);
  MEMORY[0x1F4188790](v191);
  uint64_t v256 = (char *)&v154 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7260E0);
  uint64_t v188 = *(void *)(v189 - 8);
  MEMORY[0x1F4188790](v189);
  uint64_t v255 = (char *)&v154 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v187 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7260E8);
  uint64_t v186 = *(void *)(v187 - 8);
  MEMORY[0x1F4188790](v187);
  uint64_t v254 = (char *)&v154 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7260F0);
  uint64_t v184 = *(void *)(v185 - 8);
  MEMORY[0x1F4188790](v185);
  uint64_t v253 = (char *)&v154 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v183 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7260F8);
  uint64_t v182 = *(void *)(v183 - 8);
  MEMORY[0x1F4188790](v183);
  uint64_t v252 = (char *)&v154 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v180 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726100);
  uint64_t v181 = *(void *)(v180 - 8);
  MEMORY[0x1F4188790](v180);
  uint64_t v249 = (char *)&v154 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726108);
  uint64_t v179 = *(void *)(v178 - 8);
  MEMORY[0x1F4188790](v178);
  uint64_t v286 = (char *)&v154 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726110);
  uint64_t v177 = *(void *)(v176 - 8);
  MEMORY[0x1F4188790](v176);
  uint64_t v251 = (char *)&v154 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726118);
  uint64_t v175 = *(void *)(v172 - 8);
  MEMORY[0x1F4188790](v172);
  uint64_t v250 = (char *)&v154 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726120);
  uint64_t v173 = *(void *)(v174 - 8);
  MEMORY[0x1F4188790](v174);
  uint64_t v285 = (char *)&v154 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726128);
  uint64_t v170 = *(void *)(v171 - 8);
  MEMORY[0x1F4188790](v171);
  uint64_t v284 = (char *)&v154 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726130);
  uint64_t v168 = *(void *)(v169 - 8);
  MEMORY[0x1F4188790](v169);
  uint64_t v248 = (char *)&v154 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726138);
  uint64_t v166 = *(void *)(v167 - 8);
  MEMORY[0x1F4188790](v167);
  v247 = (char *)&v154 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726140);
  uint64_t v164 = *(void *)(v165 - 8);
  MEMORY[0x1F4188790](v165);
  uint64_t v246 = (char *)&v154 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726148);
  uint64_t v162 = *(void *)(v163 - 8);
  MEMORY[0x1F4188790](v163);
  uint64_t v245 = (char *)&v154 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726150);
  uint64_t v160 = *(void *)(v161 - 8);
  MEMORY[0x1F4188790](v161);
  uint64_t v46 = (char *)&v154 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726158);
  uint64_t v159 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  uint64_t v49 = (char *)&v154 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726160);
  uint64_t v51 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  uint64_t v53 = (char *)&v154 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = a1[3];
  uint64_t v289 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v54);
  sub_1D59D6124();
  uint64_t v55 = v290;
  sub_1D5AB5CE0();
  if (!v55)
  {
    uint64_t v156 = v49;
    uint64_t v155 = v47;
    uint64_t v157 = v46;
    uint64_t v57 = v284;
    uint64_t v56 = v285;
    uint64_t v58 = v286;
    uint64_t v158 = 0;
    uint64_t v60 = v287;
    uint64_t v59 = v288;
    uint64_t v290 = v51;
    unint64_t v61 = v53;
    uint64_t v62 = sub_1D5AB5A80();
    if (*(void *)(v62 + 16) == 1)
    {
      char v63 = *(unsigned char *)(v62 + 32);
      switch(v63)
      {
        case 1:
          char v291 = 1;
          sub_1D59D6F40();
          uint64_t v71 = v157;
          uint64_t v72 = v158;
          sub_1D5AB5A60();
          if (v72) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v160 + 8))(v71, v161);
          goto LABEL_94;
        case 2:
          char v291 = 2;
          sub_1D59D6EEC();
          uint64_t v73 = v245;
          uint64_t v74 = v158;
          sub_1D5AB5A60();
          if (v74) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v162 + 8))(v73, v163);
          goto LABEL_94;
        case 3:
          char v291 = 3;
          sub_1D59D6E98();
          unint64_t v75 = v246;
          uint64_t v76 = v158;
          sub_1D5AB5A60();
          if (v76) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v164 + 8))(v75, v165);
          goto LABEL_94;
        case 4:
          char v291 = 4;
          sub_1D59D6E44();
          unint64_t v77 = v247;
          uint64_t v78 = v158;
          sub_1D5AB5A60();
          if (v78) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v166 + 8))(v77, v167);
          goto LABEL_94;
        case 5:
          char v291 = 5;
          sub_1D59D6DF0();
          int64_t v79 = v248;
          uint64_t v80 = v158;
          sub_1D5AB5A60();
          if (v80) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v168 + 8))(v79, v169);
          goto LABEL_94;
        case 6:
          char v291 = 6;
          sub_1D59D6D9C();
          uint64_t v81 = v158;
          sub_1D5AB5A60();
          if (v81) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v170 + 8))(v57, v171);
          goto LABEL_94;
        case 7:
          char v291 = 7;
          sub_1D59D6D48();
          uint64_t v82 = v158;
          sub_1D5AB5A60();
          if (v82) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v173 + 8))(v56, v174);
          goto LABEL_94;
        case 8:
          char v291 = 8;
          sub_1D59D6CF4();
          uint64_t v83 = v250;
          uint64_t v84 = v158;
          sub_1D5AB5A60();
          if (v84) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v175 + 8))(v83, v172);
          goto LABEL_94;
        case 9:
          char v291 = 9;
          sub_1D59D6CA0();
          uint64_t v85 = v251;
          uint64_t v86 = v158;
          sub_1D5AB5A60();
          if (v86) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v177 + 8))(v85, v176);
          goto LABEL_94;
        case 10:
          char v291 = 10;
          sub_1D59D6C4C();
          uint64_t v87 = v158;
          sub_1D5AB5A60();
          if (v87) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v179 + 8))(v58, v178);
          goto LABEL_94;
        case 11:
          char v291 = 11;
          sub_1D59D6BF8();
          uint64_t v88 = v249;
          uint64_t v89 = v158;
          sub_1D5AB5A60();
          if (v89) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v181 + 8))(v88, v180);
          goto LABEL_94;
        case 12:
          char v291 = 12;
          sub_1D59D6BA4();
          unint64_t v90 = v252;
          uint64_t v91 = v158;
          sub_1D5AB5A60();
          if (v91) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v182 + 8))(v90, v183);
          goto LABEL_94;
        case 13:
          char v291 = 13;
          sub_1D59D6B50();
          unint64_t v92 = v253;
          uint64_t v93 = v158;
          sub_1D5AB5A60();
          if (v93) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v184 + 8))(v92, v185);
          goto LABEL_94;
        case 14:
          char v291 = 14;
          sub_1D59D6AFC();
          int64_t v94 = v254;
          uint64_t v95 = v158;
          sub_1D5AB5A60();
          if (v95) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v186 + 8))(v94, v187);
          goto LABEL_94;
        case 15:
          char v291 = 15;
          sub_1D59D6AA8();
          uint64_t v96 = v255;
          uint64_t v97 = v158;
          sub_1D5AB5A60();
          if (v97) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v188 + 8))(v96, v189);
          goto LABEL_94;
        case 16:
          char v291 = 16;
          sub_1D59D6A54();
          uint64_t v98 = v256;
          uint64_t v99 = v158;
          sub_1D5AB5A60();
          if (v99) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v190 + 8))(v98, v191);
          goto LABEL_94;
        case 17:
          char v291 = 17;
          sub_1D59D6A00();
          uint64_t v100 = v257;
          uint64_t v101 = v158;
          sub_1D5AB5A60();
          if (v101) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v192 + 8))(v100, v193);
          goto LABEL_94;
        case 18:
          char v291 = 18;
          sub_1D59D69AC();
          unint64_t v102 = v258;
          uint64_t v103 = v158;
          sub_1D5AB5A60();
          if (v103) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v194 + 8))(v102, v195);
          goto LABEL_94;
        case 19:
          char v291 = 19;
          sub_1D59D6958();
          uint64_t v104 = v259;
          uint64_t v105 = v158;
          sub_1D5AB5A60();
          if (v105) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v196 + 8))(v104, v197);
          goto LABEL_94;
        case 20:
          char v291 = 20;
          sub_1D59D6904();
          uint64_t v106 = v260;
          uint64_t v107 = v158;
          sub_1D5AB5A60();
          if (v107) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v198 + 8))(v106, v199);
          goto LABEL_94;
        case 21:
          char v291 = 21;
          sub_1D59D68B0();
          uint64_t v108 = v261;
          uint64_t v109 = v158;
          sub_1D5AB5A60();
          if (v109) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v200 + 8))(v108, v201);
          goto LABEL_94;
        case 22:
          char v291 = 22;
          sub_1D59D685C();
          uint64_t v110 = v262;
          uint64_t v111 = v158;
          sub_1D5AB5A60();
          if (v111) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v202 + 8))(v110, v203);
          goto LABEL_94;
        case 23:
          char v291 = 23;
          sub_1D59D6808();
          uint64_t v112 = v263;
          uint64_t v113 = v158;
          sub_1D5AB5A60();
          if (v113) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v204 + 8))(v112, v205);
          goto LABEL_94;
        case 24:
          char v291 = 24;
          sub_1D59D67B4();
          uint64_t v114 = v264;
          uint64_t v115 = v158;
          sub_1D5AB5A60();
          if (v115) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v206 + 8))(v114, v207);
          goto LABEL_94;
        case 25:
          char v291 = 25;
          sub_1D59D6760();
          uint64_t v116 = v265;
          uint64_t v117 = v158;
          sub_1D5AB5A60();
          if (v117) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v208 + 8))(v116, v209);
          goto LABEL_94;
        case 26:
          char v291 = 26;
          sub_1D59D670C();
          uint64_t v118 = v266;
          uint64_t v119 = v158;
          sub_1D5AB5A60();
          if (v119) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v210 + 8))(v118, v211);
          goto LABEL_94;
        case 27:
          char v291 = 27;
          sub_1D59D66B8();
          uint64_t v120 = v267;
          uint64_t v121 = v158;
          sub_1D5AB5A60();
          if (v121) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v212 + 8))(v120, v213);
          goto LABEL_94;
        case 28:
          char v291 = 28;
          sub_1D59D6664();
          uint64_t v122 = v268;
          uint64_t v123 = v158;
          sub_1D5AB5A60();
          if (v123) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v214 + 8))(v122, v215);
          goto LABEL_94;
        case 29:
          char v291 = 29;
          sub_1D59D6610();
          uint64_t v124 = v269;
          uint64_t v125 = v158;
          sub_1D5AB5A60();
          if (v125) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v216 + 8))(v124, v217);
          goto LABEL_94;
        case 30:
          char v291 = 30;
          sub_1D59D65BC();
          uint64_t v126 = v270;
          uint64_t v127 = v158;
          sub_1D5AB5A60();
          if (v127) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v218 + 8))(v126, v219);
          goto LABEL_94;
        case 31:
          char v291 = 31;
          sub_1D59D6568();
          uint64_t v128 = v271;
          uint64_t v129 = v158;
          sub_1D5AB5A60();
          if (v129) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v220 + 8))(v128, v221);
          goto LABEL_94;
        case 32:
          char v291 = 32;
          sub_1D59D6514();
          uint64_t v130 = v272;
          uint64_t v131 = v158;
          sub_1D5AB5A60();
          if (v131) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v222 + 8))(v130, v223);
          goto LABEL_94;
        case 33:
          char v291 = 33;
          sub_1D59D64C0();
          uint64_t v132 = v273;
          uint64_t v133 = v158;
          sub_1D5AB5A60();
          if (v133) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v224 + 8))(v132, v225);
          goto LABEL_94;
        case 34:
          char v291 = 34;
          sub_1D59D646C();
          uint64_t v134 = v274;
          uint64_t v135 = v158;
          sub_1D5AB5A60();
          if (v135) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v226 + 8))(v134, v227);
          goto LABEL_94;
        case 35:
          char v291 = 35;
          sub_1D59D6418();
          uint64_t v136 = v275;
          uint64_t v137 = v158;
          sub_1D5AB5A60();
          if (v137) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v228 + 8))(v136, v229);
          goto LABEL_94;
        case 36:
          char v291 = 36;
          sub_1D59D63C4();
          uint64_t v138 = v276;
          uint64_t v139 = v158;
          sub_1D5AB5A60();
          if (v139) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v230 + 8))(v138, v231);
          goto LABEL_94;
        case 37:
          char v291 = 37;
          sub_1D59D6370();
          uint64_t v140 = v277;
          uint64_t v141 = v158;
          sub_1D5AB5A60();
          if (v141) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v232 + 8))(v140, v233);
          goto LABEL_94;
        case 38:
          char v291 = 38;
          sub_1D59D631C();
          uint64_t v142 = v278;
          uint64_t v143 = v158;
          sub_1D5AB5A60();
          if (v143) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v234 + 8))(v142, v235);
          goto LABEL_94;
        case 39:
          char v291 = 39;
          sub_1D59D62C8();
          uint64_t v144 = v279;
          uint64_t v145 = v158;
          sub_1D5AB5A60();
          if (v145) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v236 + 8))(v144, v237);
          goto LABEL_94;
        case 40:
          char v291 = 40;
          sub_1D59D6274();
          uint64_t v146 = v280;
          uint64_t v147 = v158;
          sub_1D5AB5A60();
          if (v147) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v238 + 8))(v146, v239);
          goto LABEL_94;
        case 41:
          char v291 = 41;
          sub_1D59D6220();
          uint64_t v148 = v281;
          uint64_t v149 = v158;
          sub_1D5AB5A60();
          if (v149) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v240 + 8))(v148, v241);
          goto LABEL_94;
        case 42:
          char v291 = 42;
          sub_1D59D61CC();
          uint64_t v150 = v282;
          uint64_t v151 = v158;
          sub_1D5AB5A60();
          if (v151) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v242 + 8))(v150, v243);
          goto LABEL_94;
        case 43:
          char v291 = 43;
          sub_1D59D6178();
          uint64_t v152 = v283;
          uint64_t v153 = v158;
          sub_1D5AB5A60();
          if (v153)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v290 + 8))(v61, v50);
            uint64_t v69 = (uint64_t)v289;
            return __swift_destroy_boxed_opaque_existential_1Tm(v69);
          }
          (*(void (**)(char *, uint64_t))(v244 + 8))(v152, v60);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v290 + 8))(v61, v50);
LABEL_95:
          *uint64_t v59 = v63;
          break;
        default:
          char v291 = 0;
          sub_1D59D6F94();
          int64_t v64 = v156;
          uint64_t v65 = v158;
          sub_1D5AB5A60();
          if (v65) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v159 + 8))(v64, v155);
LABEL_94:
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v290 + 8))(v61, v50);
          goto LABEL_95;
      }
    }
    else
    {
      uint64_t v66 = sub_1D5AB5840();
      swift_allocError();
      unint64_t v68 = v67;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726168);
      *unint64_t v68 = &type metadata for Feature;
      sub_1D5AB5A70();
      sub_1D5AB5830();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v66 - 8) + 104))(v68, *MEMORY[0x1E4FBBA70], v66);
      swift_willThrow();
LABEL_7:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v290 + 8))(v61, v50);
    }
  }
  uint64_t v69 = (uint64_t)v289;
  return __swift_destroy_boxed_opaque_existential_1Tm(v69);
}

uint64_t sub_1D59D9ADC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return Feature.init(from:)(a1, a2);
}

uint64_t sub_1D59D9AF4(void *a1)
{
  return Feature.encode(to:)(a1);
}

uint64_t Feature.hash(into:)()
{
  return sub_1D5AB5C30();
}

uint64_t Feature.hashValue.getter()
{
  return sub_1D5AB5C60();
}

unint64_t sub_1D59D9B84()
{
  unint64_t result = qword_1EBDE4BD8;
  if (!qword_1EBDE4BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE4BD8);
  }
  return result;
}

ValueMetadata *type metadata accessor for Feature()
{
  return &type metadata for Feature;
}

uint64_t _s13SeymourClient7FeatureOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xD5) {
    goto LABEL_17;
  }
  if (a2 + 43 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 43) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 43;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 43;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 43;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x2C;
  int v8 = v6 - 44;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s13SeymourClient7FeatureOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 43 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 43) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xD5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xD4)
  {
    unsigned int v6 = ((a2 - 213) >> 8) + 1;
    *unint64_t result = a2 + 43;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D59D9D4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 43;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Feature.CodingKeys()
{
  return &type metadata for Feature.CodingKeys;
}

ValueMetadata *type metadata accessor for Feature.AppForegroundingCodingKeys()
{
  return &type metadata for Feature.AppForegroundingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.ReactiveRecommendationEvaluationCodingKeys()
{
  return &type metadata for Feature.ReactiveRecommendationEvaluationCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.SessionTerminatingOnAppExitCodingKeys()
{
  return &type metadata for Feature.SessionTerminatingOnAppExitCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.AssetProgressDeviceBroadcastingCodingKeys()
{
  return &type metadata for Feature.AssetProgressDeviceBroadcastingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.PrefetchRecentCatalogWorkoutAssetBundlesCodingKeys()
{
  return &type metadata for Feature.PrefetchRecentCatalogWorkoutAssetBundlesCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.StandaloneHealthKitWorkoutSavingCodingKeys()
{
  return &type metadata for Feature.StandaloneHealthKitWorkoutSavingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.StandaloneWorkoutArchivingCodingKeys()
{
  return &type metadata for Feature.StandaloneWorkoutArchivingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.BackgroundCatalogSyncCodingKeys()
{
  return &type metadata for Feature.BackgroundCatalogSyncCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.AnonymousMetricsLoggingCodingKeys()
{
  return &type metadata for Feature.AnonymousMetricsLoggingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.LocalSupportedDeviceRegistryCodingKeys()
{
  return &type metadata for Feature.LocalSupportedDeviceRegistryCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.ContentAvailabilityUnrestrictedCodingKeys()
{
  return &type metadata for Feature.ContentAvailabilityUnrestrictedCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.EngagementBadgingCodingKeys()
{
  return &type metadata for Feature.EngagementBadgingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.AccountDeviceObservingCodingKeys()
{
  return &type metadata for Feature.AccountDeviceObservingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.HealthDatabaseWorkoutQueryingCodingKeys()
{
  return &type metadata for Feature.HealthDatabaseWorkoutQueryingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.ApplicationInstallationCheckRequiredCodingKeys()
{
  return &type metadata for Feature.ApplicationInstallationCheckRequiredCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.EngagementEventReportingCodingKeys()
{
  return &type metadata for Feature.EngagementEventReportingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.BackgroundWorkoutMetadataRefreshingCodingKeys()
{
  return &type metadata for Feature.BackgroundWorkoutMetadataRefreshingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.LocalStandaloneSessionSupportingCodingKeys()
{
  return &type metadata for Feature.LocalStandaloneSessionSupportingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.StreamingQualityReportingCodingKeys()
{
  return &type metadata for Feature.StreamingQualityReportingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.MetricIdentifiersUpdatingCodingKeys()
{
  return &type metadata for Feature.MetricIdentifiersUpdatingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.SessionPassiveBluetoothScanningCodingKeys()
{
  return &type metadata for Feature.SessionPassiveBluetoothScanningCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.EngagementNotificationsCodingKeys()
{
  return &type metadata for Feature.EngagementNotificationsCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.PictureInPicturePresentingCodingKeys()
{
  return &type metadata for Feature.PictureInPicturePresentingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.PlaybackTimeJumpPreventingCodingKeys()
{
  return &type metadata for Feature.PlaybackTimeJumpPreventingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.ContactsProvidingCodingKeys()
{
  return &type metadata for Feature.ContactsProvidingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.StandaloneHealthKitMindfulSavingCodingKeys()
{
  return &type metadata for Feature.StandaloneHealthKitMindfulSavingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.ServerSyncingCodingKeys()
{
  return &type metadata for Feature.ServerSyncingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.AppRequirementCheckingCodingKeys()
{
  return &type metadata for Feature.AppRequirementCheckingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.StandaloneMeditationArchivingCodingKeys()
{
  return &type metadata for Feature.StandaloneMeditationArchivingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.HeadlessDistributedSessionHostingCodingKeys()
{
  return &type metadata for Feature.HeadlessDistributedSessionHostingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.HealthKitBehaviorQueryingCodingKeys()
{
  return &type metadata for Feature.HealthKitBehaviorQueryingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.VideoAssetDownloadingCodingKeys()
{
  return &type metadata for Feature.VideoAssetDownloadingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.TipsCodingKeys()
{
  return &type metadata for Feature.TipsCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.TipsUpsellCodingKeys()
{
  return &type metadata for Feature.TipsUpsellCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.TrainerTipsQuarantineCodingKeys()
{
  return &type metadata for Feature.TrainerTipsQuarantineCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.AchievementsArchivingCodingKeys()
{
  return &type metadata for Feature.AchievementsArchivingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.AchievementsEvaluatingCodingKeys()
{
  return &type metadata for Feature.AchievementsEvaluatingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.TrainerTipsObfuscationCodingKeys()
{
  return &type metadata for Feature.TrainerTipsObfuscationCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.RemoteBrowsingCodingKeys()
{
  return &type metadata for Feature.RemoteBrowsingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.ImprovedAnalyticsConsentingCodingKeys()
{
  return &type metadata for Feature.ImprovedAnalyticsConsentingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.UserNotificationAlertingCodingKeys()
{
  return &type metadata for Feature.UserNotificationAlertingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.AppleAccountUpgradingCodingKeys()
{
  return &type metadata for Feature.AppleAccountUpgradingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.PersonalizationPrivacyConsentingCodingKeys()
{
  return &type metadata for Feature.PersonalizationPrivacyConsentingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.BackgroundAccountEventCodingKeys()
{
  return &type metadata for Feature.BackgroundAccountEventCodingKeys;
}

unint64_t sub_1D59DA048()
{
  unint64_t result = qword_1EA726170;
  if (!qword_1EA726170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726170);
  }
  return result;
}

unint64_t sub_1D59DA0A0()
{
  unint64_t result = qword_1EA726178;
  if (!qword_1EA726178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726178);
  }
  return result;
}

unint64_t sub_1D59DA0F8()
{
  unint64_t result = qword_1EA726180;
  if (!qword_1EA726180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726180);
  }
  return result;
}

unint64_t sub_1D59DA150()
{
  unint64_t result = qword_1EA726188;
  if (!qword_1EA726188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726188);
  }
  return result;
}

unint64_t sub_1D59DA1A8()
{
  unint64_t result = qword_1EA726190;
  if (!qword_1EA726190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726190);
  }
  return result;
}

unint64_t sub_1D59DA200()
{
  unint64_t result = qword_1EA726198;
  if (!qword_1EA726198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726198);
  }
  return result;
}

unint64_t sub_1D59DA258()
{
  unint64_t result = qword_1EA7261A0;
  if (!qword_1EA7261A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7261A0);
  }
  return result;
}

unint64_t sub_1D59DA2B0()
{
  unint64_t result = qword_1EA7261A8;
  if (!qword_1EA7261A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7261A8);
  }
  return result;
}

unint64_t sub_1D59DA308()
{
  unint64_t result = qword_1EA7261B0;
  if (!qword_1EA7261B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7261B0);
  }
  return result;
}

unint64_t sub_1D59DA360()
{
  unint64_t result = qword_1EA7261B8;
  if (!qword_1EA7261B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7261B8);
  }
  return result;
}

unint64_t sub_1D59DA3B8()
{
  unint64_t result = qword_1EA7261C0;
  if (!qword_1EA7261C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7261C0);
  }
  return result;
}

unint64_t sub_1D59DA410()
{
  unint64_t result = qword_1EA7261C8;
  if (!qword_1EA7261C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7261C8);
  }
  return result;
}

unint64_t sub_1D59DA468()
{
  unint64_t result = qword_1EA7261D0;
  if (!qword_1EA7261D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7261D0);
  }
  return result;
}

unint64_t sub_1D59DA4C0()
{
  unint64_t result = qword_1EA7261D8;
  if (!qword_1EA7261D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7261D8);
  }
  return result;
}

unint64_t sub_1D59DA518()
{
  unint64_t result = qword_1EA7261E0;
  if (!qword_1EA7261E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7261E0);
  }
  return result;
}

unint64_t sub_1D59DA570()
{
  unint64_t result = qword_1EA7261E8;
  if (!qword_1EA7261E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7261E8);
  }
  return result;
}

unint64_t sub_1D59DA5C8()
{
  unint64_t result = qword_1EA7261F0;
  if (!qword_1EA7261F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7261F0);
  }
  return result;
}

unint64_t sub_1D59DA620()
{
  unint64_t result = qword_1EA7261F8;
  if (!qword_1EA7261F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7261F8);
  }
  return result;
}

unint64_t sub_1D59DA678()
{
  unint64_t result = qword_1EA726200;
  if (!qword_1EA726200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726200);
  }
  return result;
}

unint64_t sub_1D59DA6D0()
{
  unint64_t result = qword_1EA726208;
  if (!qword_1EA726208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726208);
  }
  return result;
}

unint64_t sub_1D59DA728()
{
  unint64_t result = qword_1EA726210;
  if (!qword_1EA726210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726210);
  }
  return result;
}

unint64_t sub_1D59DA780()
{
  unint64_t result = qword_1EA726218;
  if (!qword_1EA726218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726218);
  }
  return result;
}

unint64_t sub_1D59DA7D8()
{
  unint64_t result = qword_1EA726220;
  if (!qword_1EA726220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726220);
  }
  return result;
}

unint64_t sub_1D59DA830()
{
  unint64_t result = qword_1EA726228;
  if (!qword_1EA726228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726228);
  }
  return result;
}

unint64_t sub_1D59DA888()
{
  unint64_t result = qword_1EA726230;
  if (!qword_1EA726230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726230);
  }
  return result;
}

unint64_t sub_1D59DA8E0()
{
  unint64_t result = qword_1EA726238;
  if (!qword_1EA726238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726238);
  }
  return result;
}

unint64_t sub_1D59DA938()
{
  unint64_t result = qword_1EA726240;
  if (!qword_1EA726240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726240);
  }
  return result;
}

unint64_t sub_1D59DA990()
{
  unint64_t result = qword_1EA726248;
  if (!qword_1EA726248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726248);
  }
  return result;
}

unint64_t sub_1D59DA9E8()
{
  unint64_t result = qword_1EA726250;
  if (!qword_1EA726250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726250);
  }
  return result;
}

unint64_t sub_1D59DAA40()
{
  unint64_t result = qword_1EA726258;
  if (!qword_1EA726258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726258);
  }
  return result;
}

unint64_t sub_1D59DAA98()
{
  unint64_t result = qword_1EA726260;
  if (!qword_1EA726260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726260);
  }
  return result;
}

unint64_t sub_1D59DAAF0()
{
  unint64_t result = qword_1EA726268;
  if (!qword_1EA726268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726268);
  }
  return result;
}

unint64_t sub_1D59DAB48()
{
  unint64_t result = qword_1EA726270;
  if (!qword_1EA726270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726270);
  }
  return result;
}

unint64_t sub_1D59DABA0()
{
  unint64_t result = qword_1EA726278;
  if (!qword_1EA726278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726278);
  }
  return result;
}

unint64_t sub_1D59DABF8()
{
  unint64_t result = qword_1EA726280;
  if (!qword_1EA726280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726280);
  }
  return result;
}

unint64_t sub_1D59DAC50()
{
  unint64_t result = qword_1EA726288;
  if (!qword_1EA726288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726288);
  }
  return result;
}

unint64_t sub_1D59DACA8()
{
  unint64_t result = qword_1EA726290;
  if (!qword_1EA726290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726290);
  }
  return result;
}

unint64_t sub_1D59DAD00()
{
  unint64_t result = qword_1EA726298;
  if (!qword_1EA726298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726298);
  }
  return result;
}

unint64_t sub_1D59DAD58()
{
  unint64_t result = qword_1EA7262A0;
  if (!qword_1EA7262A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7262A0);
  }
  return result;
}

unint64_t sub_1D59DADB0()
{
  unint64_t result = qword_1EA7262A8;
  if (!qword_1EA7262A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7262A8);
  }
  return result;
}

unint64_t sub_1D59DAE08()
{
  unint64_t result = qword_1EA7262B0;
  if (!qword_1EA7262B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7262B0);
  }
  return result;
}

unint64_t sub_1D59DAE60()
{
  unint64_t result = qword_1EA7262B8;
  if (!qword_1EA7262B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7262B8);
  }
  return result;
}

unint64_t sub_1D59DAEB8()
{
  unint64_t result = qword_1EA7262C0;
  if (!qword_1EA7262C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7262C0);
  }
  return result;
}

unint64_t sub_1D59DAF10()
{
  unint64_t result = qword_1EA7262C8;
  if (!qword_1EA7262C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7262C8);
  }
  return result;
}

unint64_t sub_1D59DAF68()
{
  unint64_t result = qword_1EA7262D0;
  if (!qword_1EA7262D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7262D0);
  }
  return result;
}

unint64_t sub_1D59DAFC0()
{
  unint64_t result = qword_1EA7262D8;
  if (!qword_1EA7262D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7262D8);
  }
  return result;
}

unint64_t sub_1D59DB018()
{
  unint64_t result = qword_1EA7262E0;
  if (!qword_1EA7262E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7262E0);
  }
  return result;
}

unint64_t sub_1D59DB070()
{
  unint64_t result = qword_1EA7262E8;
  if (!qword_1EA7262E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7262E8);
  }
  return result;
}

unint64_t sub_1D59DB0C8()
{
  unint64_t result = qword_1EA7262F0;
  if (!qword_1EA7262F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7262F0);
  }
  return result;
}

unint64_t sub_1D59DB120()
{
  unint64_t result = qword_1EA7262F8;
  if (!qword_1EA7262F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7262F8);
  }
  return result;
}

unint64_t sub_1D59DB178()
{
  unint64_t result = qword_1EA726300;
  if (!qword_1EA726300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726300);
  }
  return result;
}

unint64_t sub_1D59DB1D0()
{
  unint64_t result = qword_1EA726308;
  if (!qword_1EA726308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726308);
  }
  return result;
}

unint64_t sub_1D59DB228()
{
  unint64_t result = qword_1EA726310;
  if (!qword_1EA726310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726310);
  }
  return result;
}

unint64_t sub_1D59DB280()
{
  unint64_t result = qword_1EA726318;
  if (!qword_1EA726318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726318);
  }
  return result;
}

unint64_t sub_1D59DB2D8()
{
  unint64_t result = qword_1EA726320;
  if (!qword_1EA726320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726320);
  }
  return result;
}

unint64_t sub_1D59DB330()
{
  unint64_t result = qword_1EA726328;
  if (!qword_1EA726328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726328);
  }
  return result;
}

unint64_t sub_1D59DB388()
{
  unint64_t result = qword_1EA726330;
  if (!qword_1EA726330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726330);
  }
  return result;
}

unint64_t sub_1D59DB3E0()
{
  unint64_t result = qword_1EA726338;
  if (!qword_1EA726338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726338);
  }
  return result;
}

unint64_t sub_1D59DB438()
{
  unint64_t result = qword_1EA726340;
  if (!qword_1EA726340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726340);
  }
  return result;
}

unint64_t sub_1D59DB490()
{
  unint64_t result = qword_1EA726348;
  if (!qword_1EA726348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726348);
  }
  return result;
}

unint64_t sub_1D59DB4E8()
{
  unint64_t result = qword_1EA726350;
  if (!qword_1EA726350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726350);
  }
  return result;
}

unint64_t sub_1D59DB540()
{
  unint64_t result = qword_1EA726358;
  if (!qword_1EA726358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726358);
  }
  return result;
}

unint64_t sub_1D59DB598()
{
  unint64_t result = qword_1EA726360;
  if (!qword_1EA726360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726360);
  }
  return result;
}

unint64_t sub_1D59DB5F0()
{
  unint64_t result = qword_1EA726368;
  if (!qword_1EA726368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726368);
  }
  return result;
}

unint64_t sub_1D59DB648()
{
  unint64_t result = qword_1EA726370;
  if (!qword_1EA726370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726370);
  }
  return result;
}

unint64_t sub_1D59DB6A0()
{
  unint64_t result = qword_1EA726378;
  if (!qword_1EA726378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726378);
  }
  return result;
}

unint64_t sub_1D59DB6F8()
{
  unint64_t result = qword_1EA726380;
  if (!qword_1EA726380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726380);
  }
  return result;
}

unint64_t sub_1D59DB750()
{
  unint64_t result = qword_1EA726388;
  if (!qword_1EA726388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726388);
  }
  return result;
}

unint64_t sub_1D59DB7A8()
{
  unint64_t result = qword_1EA726390;
  if (!qword_1EA726390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726390);
  }
  return result;
}

unint64_t sub_1D59DB800()
{
  unint64_t result = qword_1EA726398;
  if (!qword_1EA726398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726398);
  }
  return result;
}

unint64_t sub_1D59DB858()
{
  unint64_t result = qword_1EA7263A0;
  if (!qword_1EA7263A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7263A0);
  }
  return result;
}

unint64_t sub_1D59DB8B0()
{
  unint64_t result = qword_1EA7263A8;
  if (!qword_1EA7263A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7263A8);
  }
  return result;
}

unint64_t sub_1D59DB908()
{
  unint64_t result = qword_1EA7263B0;
  if (!qword_1EA7263B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7263B0);
  }
  return result;
}

unint64_t sub_1D59DB960()
{
  unint64_t result = qword_1EA7263B8;
  if (!qword_1EA7263B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7263B8);
  }
  return result;
}

unint64_t sub_1D59DB9B8()
{
  unint64_t result = qword_1EA7263C0;
  if (!qword_1EA7263C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7263C0);
  }
  return result;
}

unint64_t sub_1D59DBA10()
{
  unint64_t result = qword_1EA7263C8;
  if (!qword_1EA7263C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7263C8);
  }
  return result;
}

unint64_t sub_1D59DBA68()
{
  unint64_t result = qword_1EA7263D0;
  if (!qword_1EA7263D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7263D0);
  }
  return result;
}

unint64_t sub_1D59DBAC0()
{
  unint64_t result = qword_1EA7263D8;
  if (!qword_1EA7263D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7263D8);
  }
  return result;
}

unint64_t sub_1D59DBB18()
{
  unint64_t result = qword_1EA7263E0;
  if (!qword_1EA7263E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7263E0);
  }
  return result;
}

unint64_t sub_1D59DBB70()
{
  unint64_t result = qword_1EA7263E8;
  if (!qword_1EA7263E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7263E8);
  }
  return result;
}

unint64_t sub_1D59DBBC8()
{
  unint64_t result = qword_1EA7263F0;
  if (!qword_1EA7263F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7263F0);
  }
  return result;
}

unint64_t sub_1D59DBC20()
{
  unint64_t result = qword_1EA7263F8;
  if (!qword_1EA7263F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7263F8);
  }
  return result;
}

unint64_t sub_1D59DBC78()
{
  unint64_t result = qword_1EA726400;
  if (!qword_1EA726400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726400);
  }
  return result;
}

unint64_t sub_1D59DBCD0()
{
  unint64_t result = qword_1EA726408;
  if (!qword_1EA726408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726408);
  }
  return result;
}

unint64_t sub_1D59DBD28()
{
  unint64_t result = qword_1EA726410;
  if (!qword_1EA726410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726410);
  }
  return result;
}

unint64_t sub_1D59DBD80()
{
  unint64_t result = qword_1EA726418;
  if (!qword_1EA726418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726418);
  }
  return result;
}

unint64_t sub_1D59DBDD8()
{
  unint64_t result = qword_1EA726420;
  if (!qword_1EA726420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726420);
  }
  return result;
}

unint64_t sub_1D59DBE30()
{
  unint64_t result = qword_1EA726428;
  if (!qword_1EA726428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726428);
  }
  return result;
}

unint64_t sub_1D59DBE88()
{
  unint64_t result = qword_1EA726430;
  if (!qword_1EA726430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726430);
  }
  return result;
}

unint64_t sub_1D59DBEE0()
{
  unint64_t result = qword_1EA726438;
  if (!qword_1EA726438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726438);
  }
  return result;
}

unint64_t sub_1D59DBF38()
{
  unint64_t result = qword_1EA726440;
  if (!qword_1EA726440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726440);
  }
  return result;
}

uint64_t sub_1D59DBF8C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001D5AC7CD0 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001D5AC7CF0 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001D5AC7D20 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001D5AC7D40 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000028 && a2 == 0x80000001D5AC7D60 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001D5AC7D90 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5AC7DC0 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5AC7DE0 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001D5AC7E00 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001D5AC7E20 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001D5AC7E40 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5AC7E60 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AC7E80 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001D5AC7EA0 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x80000001D5AC7EC0 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001D5AC7EF0 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001D5AC7F10 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001D5AC7F40 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001D5AC7F70 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001D5AC7F90 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001D5AC7FB0 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001D5AC7FD0 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5AC7FF0 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5AC8010 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5AC8030 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001D5AC8050 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0x7953726576726573 && a2 == 0xED0000676E69636ELL || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AC8080 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001D5AC80A0 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5AC80C0 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 29;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001D5AC80F0 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 30;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5AC8110 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 31;
  }
  else if (a1 == 1936746868 && a2 == 0xE400000000000000 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 32;
  }
  else if (a1 == 0x6573705573706974 && a2 == 0xEA00000000006C6CLL || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 33;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5AC8130 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 34;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5AC8150 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 35;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AC8170 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 36;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AC8190 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 37;
  }
  else if (a1 == 0x724265746F6D6572 && a2 == 0xEE00676E6973776FLL || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 38;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001D5AC81B0 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 39;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001D5AC81D0 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 40;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5AC81F0 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 41;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001D5AC8210 || (sub_1D5AB5AF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 42;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5AC8240)
  {
    swift_bridgeObjectRelease();
    return 43;
  }
  else
  {
    char v5 = sub_1D5AB5AF0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 43;
    }
    else {
      return 44;
    }
  }
}

uint64_t dispatch thunk of AnalyticsReporting.report(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1D59DCEEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 96);
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for CacheResult();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1D59DCF9C(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 96);
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for CacheResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t CacheTopic.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  CacheTopic.init()();
  return v0;
}

char *CacheTopic.init()()
{
  uint64_t v1 = *(void *)v0;
  type metadata accessor for UnfairLock();
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = (_DWORD *)swift_slowAlloc();
  *(void *)(v2 + 16) = v3;
  *uint64_t v3 = 0;
  *((void *)v0 + 2) = v2;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 56))(&v0[*(void *)(*(void *)v0 + 96)], 1, 1);
  return v0;
}

void sub_1D59DD144()
{
}

void sub_1D59DD1C0(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v3 + 16));
  sub_1D59DD220(v1, a1);
  uint64_t v4 = *(os_unfair_lock_s **)(v3 + 16);
  os_unfair_lock_unlock(v4);
}

uint64_t sub_1D59DD220(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)a1 + 80);
  uint64_t v4 = type metadata accessor for CacheResult();
  MEMORY[0x1F4188790](v4 - 8);
  unsigned int v6 = (char *)&v9 - v5;
  uint64_t v7 = *(void *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v9 - v5, a2, v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v6, 0, 1, v3);
  return sub_1D59DCF9C((uint64_t)v6);
}

void sub_1D59DD330()
{
  uint64_t v1 = *(void *)(v0 + 16);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  sub_1D59DD388(v0);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  os_unfair_lock_unlock(v2);
}

uint64_t sub_1D59DD388(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)a1 + 80);
  uint64_t v2 = type metadata accessor for CacheResult();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v6 - v3;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v1 - 8) + 56))((char *)&v6 - v3, 1, 1, v1);
  return sub_1D59DCF9C((uint64_t)v4);
}

uint64_t CacheTopic.deinit()
{
  swift_release();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  uint64_t v2 = type metadata accessor for CacheResult();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t CacheTopic.__deallocating_deinit()
{
  CacheTopic.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1D59DD53C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D59DCEEC(a1);
}

uint64_t sub_1D59DD564()
{
  uint64_t result = type metadata accessor for CacheResult();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for CacheTopic()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for CacheTopic(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CacheTopic);
}

uint64_t dispatch thunk of CacheTopic.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of CacheTopic.query()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of CacheTopic.populate(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of CacheTopic.purge()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t UnitPreferences.applyingTimestampOffset(_:)()
{
  return sub_1D5AB2E50();
}

uint64_t sub_1D59DD724()
{
  return sub_1D5AB2E50();
}

void *MultiUserClient.__allocating_init(eventHub:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = objc_allocWithZone(MEMORY[0x1E4F29268]);
  id v7 = a3;
  int v8 = (void *)sub_1D5AB4DE0();
  id v9 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v8, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  uint64_t v10 = sub_1D59968E8(v9, v7);
  uint64_t v11 = *(void *)(v10 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 16));
  if (*(unsigned char *)(v10 + 48) == 1)
  {
    *(unsigned char *)(v10 + 48) = 2;
    objc_msgSend(*(id *)(v10 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  type metadata accessor for MultiUserClient();
  uint64_t v12 = (void *)swift_allocObject();
  uint64_t v13 = swift_retain();
  uint64_t v14 = sub_1D59DFA08(v13, a1, a2, v12);

  swift_release_n();
  return v14;
}

uint64_t MultiUserClient.__allocating_init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D59DD8F4(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D59E028C);
}

uint64_t MultiUserClient.init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D59DD8F4(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D59DFE50);
}

uint64_t sub_1D59DD8F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = a6(a1, a4, a5, v6, ObjectType, a2, a3);
  swift_unknownObjectRelease();
  return v14;
}

uint64_t sub_1D59DD978(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t a5, uint64_t (*a6)(void))
{
  uint64_t v10 = a3(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v17 - v11;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v14 = *(void *)(result + 48);
    swift_unknownObjectRetain();
    swift_release();
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v16 = a4(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v12, a1, v16);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 8))(v12, v10, a5, ObjectType, v14);
    swift_unknownObjectRelease();
    return sub_1D59E0550((uint64_t)v12, a6);
  }
  return result;
}

void sub_1D59DDAE4(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB3100();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBDE36E0 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1D5AB4B50();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EBDE36C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  id v7 = sub_1D5AB4B30();
  os_log_type_t v8 = sub_1D5AB5430();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v14 = v10;
    *(_DWORD *)id v9 = 136446210;
    sub_1D59E0508(&qword_1EA726448, MEMORY[0x1E4F9D0D0]);
    uint64_t v11 = sub_1D5AB5AB0();
    uint64_t v13 = sub_1D5951500(v11, v12, &v14);
    sub_1D5AB5680();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    _os_log_impl(&dword_1D5947000, v7, v8, "MultiUserClient - MultiUserSessionConnected %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v10, -1, -1);
    MEMORY[0x1D945AAC0](v9, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_1D59DDD74(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = type metadata accessor for MultiUserSessionUpdated();
  MEMORY[0x1F4188790](v29);
  uint64_t v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D5AB2FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBDE36E0 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1D5AB4B50();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EBDE36C8);
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v27(v9, a1, v6);
  uint64_t v11 = sub_1D5AB4B30();
  os_log_type_t v12 = sub_1D5AB5430();
  BOOL v13 = os_log_type_enabled(v11, v12);
  uint64_t v28 = a1;
  if (v13)
  {
    uint64_t v14 = swift_slowAlloc();
    v25[1] = a2 + 16;
    uint64_t v15 = (uint8_t *)v14;
    uint64_t v16 = swift_slowAlloc();
    v31[0] = v16;
    uint64_t v26 = v5;
    *(_DWORD *)uint64_t v15 = 136446210;
    v25[0] = v15 + 4;
    sub_1D59E0508(&qword_1EA726458, MEMORY[0x1E4F9CD80]);
    uint64_t v17 = sub_1D5AB5AB0();
    uint64_t v30 = sub_1D5951500(v17, v18, v31);
    uint64_t v5 = v26;
    sub_1D5AB5680();
    swift_bridgeObjectRelease();
    uint64_t v19 = v9;
    uint64_t v20 = v6;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
    _os_log_impl(&dword_1D5947000, v11, v12, "MultiUserClient - MultiUserSession updated %{public}s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v16, -1, -1);
    MEMORY[0x1D945AAC0](v15, -1, -1);
  }
  else
  {
    uint64_t v21 = v9;
    uint64_t v20 = v6;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v21, v6);
  }

  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v23 = *(void *)(result + 48);
    swift_unknownObjectRetain();
    swift_release();
    uint64_t ObjectType = swift_getObjectType();
    v27(v5, v28, v20);
    (*(void (**)(char *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v23 + 8))(v5, v29, &protocol witness table for MultiUserSessionUpdated, ObjectType, v23);
    swift_unknownObjectRelease();
    return sub_1D59E0550((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for MultiUserSessionUpdated);
  }
  return result;
}

uint64_t sub_1D59DE128(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = type metadata accessor for MultiUserActivityCancelled();
  MEMORY[0x1F4188790](v29);
  uint64_t v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D5AB3100();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBDE36E0 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1D5AB4B50();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EBDE36C8);
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v27(v9, a1, v6);
  uint64_t v11 = sub_1D5AB4B30();
  os_log_type_t v12 = sub_1D5AB5430();
  BOOL v13 = os_log_type_enabled(v11, v12);
  uint64_t v28 = a1;
  if (v13)
  {
    uint64_t v14 = swift_slowAlloc();
    v25[1] = a2 + 16;
    uint64_t v15 = (uint8_t *)v14;
    uint64_t v16 = swift_slowAlloc();
    v31[0] = v16;
    uint64_t v26 = v5;
    *(_DWORD *)uint64_t v15 = 136446210;
    v25[0] = v15 + 4;
    sub_1D59E0508(&qword_1EA726448, MEMORY[0x1E4F9D0D0]);
    uint64_t v17 = sub_1D5AB5AB0();
    uint64_t v30 = sub_1D5951500(v17, v18, v31);
    uint64_t v5 = v26;
    sub_1D5AB5680();
    swift_bridgeObjectRelease();
    uint64_t v19 = v9;
    uint64_t v20 = v6;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
    _os_log_impl(&dword_1D5947000, v11, v12, "MultiUserClient - MultiUserActivityCancelled %{public}s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v16, -1, -1);
    MEMORY[0x1D945AAC0](v15, -1, -1);
  }
  else
  {
    uint64_t v21 = v9;
    uint64_t v20 = v6;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v21, v6);
  }

  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v23 = *(void *)(result + 48);
    swift_unknownObjectRetain();
    swift_release();
    uint64_t ObjectType = swift_getObjectType();
    v27(v5, v28, v20);
    (*(void (**)(char *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v23 + 8))(v5, v29, &off_1F2DF2328, ObjectType, v23);
    swift_unknownObjectRelease();
    return sub_1D59E0550((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for MultiUserActivityCancelled);
  }
  return result;
}

uint64_t sub_1D59DE4DC(uint64_t a1, uint64_t a2)
{
  uint64_t v31 = type metadata accessor for MultiUserCelebrationRequested();
  MEMORY[0x1F4188790](v31);
  uint64_t v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D5AB35E0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBDE36E0 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1D5AB4B50();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EBDE36C8);
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v29(v9, a1, v6);
  uint64_t v11 = sub_1D5AB4B30();
  os_log_type_t v12 = sub_1D5AB5430();
  BOOL v13 = os_log_type_enabled(v11, v12);
  uint64_t v30 = a1;
  if (v13)
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v28 = v5;
    uint64_t v15 = v14;
    uint64_t v16 = swift_slowAlloc();
    v27[0] = v16;
    *(_DWORD *)uint64_t v15 = 141558274;
    uint64_t v32 = 1752392040;
    v33[0] = v16;
    v27[1] = a2 + 16;
    sub_1D5AB5680();
    *(_WORD *)(v15 + 12) = 2080;
    sub_1D59E0508(&qword_1EA726450, MEMORY[0x1E4F9D7A0]);
    uint64_t v17 = sub_1D5AB5AB0();
    uint64_t v32 = sub_1D5951500(v17, v18, v33);
    sub_1D5AB5680();
    swift_bridgeObjectRelease();
    uint64_t v19 = v9;
    uint64_t v20 = v6;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
    _os_log_impl(&dword_1D5947000, v11, v12, "MultiUserClient - activityRingsCompleted %{mask.hash}s", (uint8_t *)v15, 0x16u);
    uint64_t v21 = v27[0];
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v21, -1, -1);
    uint64_t v22 = v15;
    uint64_t v5 = v28;
    MEMORY[0x1D945AAC0](v22, -1, -1);
  }
  else
  {
    uint64_t v23 = v9;
    uint64_t v20 = v6;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v23, v6);
  }

  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v25 = *(void *)(result + 48);
    swift_unknownObjectRetain();
    swift_release();
    uint64_t ObjectType = swift_getObjectType();
    v29(v5, v30, v20);
    (*(void (**)(char *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v25 + 8))(v5, v31, &protocol witness table for MultiUserCelebrationRequested, ObjectType, v25);
    swift_unknownObjectRelease();
    return sub_1D59E0550((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for MultiUserCelebrationRequested);
  }
  return result;
}

uint64_t MultiUserClient.deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t MultiUserClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t MultiUserClient.willBeginActivity(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1D5AB3100();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBDE36E0 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1D5AB4B50();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EBDE36C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  uint64_t v11 = sub_1D5AB4B30();
  os_log_type_t v12 = sub_1D5AB5430();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v23 = v2;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v25 = a1;
    uint64_t v14 = (uint8_t *)v13;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v27 = v15;
    uint64_t v24 = a2;
    *(_DWORD *)uint64_t v14 = 136446210;
    sub_1D59E0508(&qword_1EA726448, MEMORY[0x1E4F9D0D0]);
    uint64_t v16 = sub_1D5AB5AB0();
    uint64_t v26 = sub_1D5951500(v16, v17, &v27);
    uint64_t v3 = v23;
    sub_1D5AB5680();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    _os_log_impl(&dword_1D5947000, v11, v12, "Attempting to register %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v15, -1, -1);
    unint64_t v18 = v14;
    a1 = v25;
    MEMORY[0x1D945AAC0](v18, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }

  uint64_t v19 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  LOWORD(v27) = 269;
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, void, void, uint64_t, uint64_t))(v19 + 16))(&v27, a1, v6, MEMORY[0x1E4F9D0C0], MEMORY[0x1E4F9D0C8], ObjectType, v19);
}

uint64_t MultiUserClient.waitForSession(activity:)(uint64_t a1)
{
  if (qword_1EBDE36E0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE36C8);
  v4._uint64_t countAndFlagsBits = 0xD00000000000006BLL;
  v4._object = (void *)0x80000001D5AC8280;
  v5._object = (void *)0x80000001D5AC82F0;
  v5._uint64_t countAndFlagsBits = 0xD000000000000019;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 270;
  uint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, void, void, uint64_t, uint64_t))(v6 + 16);
  uint64_t v9 = sub_1D5AB3100();
  return v8(&v11, a1, v9, MEMORY[0x1E4F9D0C0], MEMORY[0x1E4F9D0C8], ObjectType, v6);
}

uint64_t MultiUserClient.joinActivity()()
{
  return sub_1D59DF334(0x697463416E696F6ALL, (void *)0xEE00292879746976, 263);
}

uint64_t MultiUserClient.leaveActivity(_:)(uint64_t a1)
{
  if (qword_1EBDE36E0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE36C8);
  v4._uint64_t countAndFlagsBits = 0xD00000000000006BLL;
  v4._object = (void *)0x80000001D5AC8280;
  v5._object = (void *)0x80000001D5AC8310;
  v5._uint64_t countAndFlagsBits = 0xD000000000000011;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 264;
  uint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, void, void, uint64_t, uint64_t))(v6 + 16);
  uint64_t v9 = sub_1D5AB3100();
  return v8(&v11, a1, v9, MEMORY[0x1E4F9D0C0], MEMORY[0x1E4F9D0C8], ObjectType, v6);
}

uint64_t MultiUserClient.terminateActivity(_:)(uint64_t a1)
{
  if (qword_1EBDE36E0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE36C8);
  v4._uint64_t countAndFlagsBits = 0xD00000000000006BLL;
  v4._object = (void *)0x80000001D5AC8280;
  v5._object = (void *)0x80000001D5AC8330;
  v5._uint64_t countAndFlagsBits = 0xD000000000000015;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 274;
  uint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, void, void, uint64_t, uint64_t))(v6 + 16);
  uint64_t v9 = sub_1D5AB3100();
  return v8(&v11, a1, v9, MEMORY[0x1E4F9D0C0], MEMORY[0x1E4F9D0C8], ObjectType, v6);
}

uint64_t MultiUserClient.launchActivityApplication(with:)(uint64_t a1)
{
  if (qword_1EBDE36E0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE36C8);
  v4._uint64_t countAndFlagsBits = 0xD00000000000006BLL;
  v4._object = (void *)0x80000001D5AC8280;
  v5._object = (void *)0x80000001D5AC8350;
  v5._uint64_t countAndFlagsBits = 0xD000000000000020;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 265;
  uint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, void, void, uint64_t, uint64_t))(v6 + 16);
  uint64_t v9 = sub_1D5AB1BB0();
  return v8(&v11, a1, v9, MEMORY[0x1E4F9BDB0], MEMORY[0x1E4F9BDB8], ObjectType, v6);
}

uint64_t MultiUserClient.sendMediaPlayerSyncUpdate(_:)(uint64_t a1)
{
  if (qword_1EBDE36E0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE36C8);
  v4._uint64_t countAndFlagsBits = 0xD00000000000006BLL;
  v4._object = (void *)0x80000001D5AC8280;
  v5._object = (void *)0x80000001D5AC8380;
  v5._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 266;
  uint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, void, void, uint64_t, uint64_t))(v6 + 16);
  uint64_t v9 = sub_1D5AB3630();
  return v8(&v11, a1, v9, MEMORY[0x1E4F9D8D8], MEMORY[0x1E4F9D8E0], ObjectType, v6);
}

uint64_t MultiUserClient.handleMediaPlayerSyncAnnouncement(_:)(uint64_t a1)
{
  if (qword_1EBDE36E0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE36C8);
  v4._uint64_t countAndFlagsBits = 0xD00000000000006BLL;
  v4._object = (void *)0x80000001D5AC8280;
  v5._object = (void *)0x80000001D5AC83A0;
  v5._uint64_t countAndFlagsBits = 0xD000000000000025;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 275;
  uint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, void, void, uint64_t, uint64_t))(v6 + 16);
  uint64_t v9 = sub_1D5AB3FC0();
  return v8(&v11, a1, v9, MEMORY[0x1E4F9E5A0], MEMORY[0x1E4F9E5A8], ObjectType, v6);
}

uint64_t MultiUserClient.requestMediaPlayerCatchup()()
{
  return sub_1D59DF334(0xD00000000000001BLL, (void *)0x80000001D5AC83D0, 266);
}

uint64_t sub_1D59DF334(uint64_t a1, void *a2, __int16 a3)
{
  if (qword_1EBDE36E0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1D5AB4B50();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBDE36C8);
  v8._object = (void *)0x80000001D5AC8280;
  v8._uint64_t countAndFlagsBits = 0xD00000000000006BLL;
  v9._uint64_t countAndFlagsBits = a1;
  v9._object = a2;
  Logger.trace(file:function:)(v8, v9);
  uint64_t v10 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v13 = a3;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v10 + 8))(&v13, ObjectType, v10);
}

uint64_t MultiUserClient.queryJoinedActivity()()
{
  if (qword_1EBDE36E0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE36C8);
  v2._uint64_t countAndFlagsBits = 0xD00000000000006BLL;
  v2._object = (void *)0x80000001D5AC8280;
  v3._object = (void *)0x80000001D5AC83F0;
  v3._uint64_t countAndFlagsBits = 0xD000000000000015;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v9 = 273;
  uint64_t v6 = *(uint64_t (**)(__int16 *, uint64_t, void, void, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = sub_1D5AB3100();
  return v6(&v9, v7, MEMORY[0x1E4F9D0C0], MEMORY[0x1E4F9D0C8], ObjectType, v4);
}

uint64_t MultiUserClient.sendCelebrationType(_:)(uint64_t a1)
{
  if (qword_1EBDE36E0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE36C8);
  v4._uint64_t countAndFlagsBits = 0xD00000000000006BLL;
  v4._object = (void *)0x80000001D5AC8280;
  v5._object = (void *)0x80000001D5AC8410;
  v5._uint64_t countAndFlagsBits = 0xD000000000000017;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 268;
  Swift::String v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, void, void, uint64_t, uint64_t))(v6 + 16);
  uint64_t v9 = sub_1D5AB3B10();
  return v8(&v11, a1, v9, MEMORY[0x1E4F9E188], MEMORY[0x1E4F9E190], ObjectType, v6);
}

uint64_t MultiUserClient.queryUserIdentity()()
{
  if (qword_1EBDE36E0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE36C8);
  v2._uint64_t countAndFlagsBits = 0xD00000000000006BLL;
  v2._object = (void *)0x80000001D5AC8280;
  v3._object = (void *)0x80000001D5AC8430;
  v3._uint64_t countAndFlagsBits = 0xD000000000000013;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v9 = 271;
  uint64_t v6 = *(uint64_t (**)(__int16 *, uint64_t, void, void, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = sub_1D5AB3110();
  return v6(&v9, v7, MEMORY[0x1E4F9D0F0], MEMORY[0x1E4F9D0F8], ObjectType, v4);
}

uint64_t sub_1D59DF768@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return MultiUserClient.willBeginActivity(_:)(a1, a2);
}

uint64_t sub_1D59DF78C(uint64_t a1)
{
  return MultiUserClient.waitForSession(activity:)(a1);
}

uint64_t sub_1D59DF7B0()
{
  uint64_t v1 = *v0;
  if (qword_1EBDE36E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE36C8);
  v3._object = (void *)0x80000001D5AC8280;
  v3._uint64_t countAndFlagsBits = 0xD00000000000006BLL;
  v4._uint64_t countAndFlagsBits = 0x697463416E696F6ALL;
  v4._object = (void *)0xEE00292879746976;
  Logger.trace(file:function:)(v3, v4);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v8 = 263;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v5 + 8))(&v8, ObjectType, v5);
}

uint64_t sub_1D59DF8A0(uint64_t a1)
{
  return MultiUserClient.leaveActivity(_:)(a1);
}

uint64_t sub_1D59DF8C4(uint64_t a1)
{
  return MultiUserClient.terminateActivity(_:)(a1);
}

uint64_t sub_1D59DF8E8()
{
  return MultiUserClient.queryJoinedActivity()();
}

uint64_t sub_1D59DF90C(uint64_t a1)
{
  return MultiUserClient.launchActivityApplication(with:)(a1);
}

uint64_t sub_1D59DF930(uint64_t a1)
{
  return MultiUserClient.sendMediaPlayerSyncUpdate(_:)(a1);
}

uint64_t sub_1D59DF954(uint64_t a1)
{
  return MultiUserClient.handleMediaPlayerSyncAnnouncement(_:)(a1);
}

uint64_t sub_1D59DF978(uint64_t a1)
{
  return MultiUserClient.sendCelebrationType(_:)(a1);
}

uint64_t sub_1D59DF99C()
{
  return MultiUserClient.requestMediaPlayerCatchup()();
}

uint64_t sub_1D59DF9C0()
{
  return MultiUserClient.queryUserIdentity()();
}

uint64_t type metadata accessor for MultiUserClient()
{
  return self;
}

void *sub_1D59DFA08(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[2] = a1;
  a4[3] = &protocol witness table for XPCClient;
  a4[4] = &protocol witness table for XPCClient;
  a4[5] = a2;
  a4[6] = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v24 = a1;
  char v23 = 36;
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  uint64_t v8 = sub_1D5AB3E60();
  swift_retain();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v23, (uint64_t)sub_1D59E0370, v7, ObjectType, v8, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E4F9E448], MEMORY[0x1E4F9E450]);
  swift_release();
  uint64_t v24 = a1;
  char v23 = 38;
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  uint64_t v10 = sub_1D5AB3700();
  TransportDispatching.register<A>(event:handler:)(&v23, (uint64_t)sub_1D59E03D0, v9, ObjectType, v10, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E4F9DB50], MEMORY[0x1E4F9DB58]);
  swift_release();
  uint64_t v24 = a1;
  char v23 = 35;
  uint64_t v11 = sub_1D5AB3100();
  uint64_t v12 = MEMORY[0x1E4F9D0C0];
  uint64_t v13 = MEMORY[0x1E4F9D0C8];
  TransportDispatching.register<A>(event:handler:)(&v23, (uint64_t)sub_1D59DDAE4, 0, ObjectType, v11, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E4F9D0C0], MEMORY[0x1E4F9D0C8]);
  uint64_t v24 = a1;
  char v23 = 42;
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  uint64_t v15 = sub_1D5AB2FC0();
  TransportDispatching.register<A>(event:handler:)(&v23, (uint64_t)sub_1D59E0430, v14, ObjectType, v15, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E4F9CD70], MEMORY[0x1E4F9CD78]);
  swift_release();
  uint64_t v24 = a1;
  char v23 = 34;
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  TransportDispatching.register<A>(event:handler:)(&v23, (uint64_t)sub_1D59E0438, v16, ObjectType, v11, (uint64_t)&protocol witness table for XPCClient, v12, v13);
  swift_release();
  uint64_t v24 = a1;
  char v23 = 39;
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = sub_1D5AB35E0();
  TransportDispatching.register<A>(event:handler:)(&v23, (uint64_t)sub_1D59E0440, v17, ObjectType, v18, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E4F9D790], MEMORY[0x1E4F9D798]);
  swift_release();
  uint64_t v24 = a1;
  char v23 = 37;
  uint64_t v19 = swift_allocObject();
  swift_weakInit();
  uint64_t v20 = sub_1D5AB3630();
  TransportDispatching.register<A>(event:handler:)(&v23, (uint64_t)sub_1D59E0448, v19, ObjectType, v20, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E4F9D8D8], MEMORY[0x1E4F9D8E0]);
  swift_release();
  uint64_t v24 = a1;
  char v23 = 41;
  uint64_t v21 = swift_allocObject();
  swift_weakInit();
  TransportDispatching.register<A>(event:handler:)(&v23, (uint64_t)sub_1D59E04A8, v21, ObjectType, v11, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E4F9D0C0], v13);
  swift_release();
  swift_unknownObjectRelease();
  return a4;
}

void *sub_1D59DFE50(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  a4[2] = a1;
  a4[3] = a6;
  a4[4] = a7;
  a4[5] = a2;
  a4[6] = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v28 = a1;
  char v27 = 36;
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  uint64_t v12 = sub_1D5AB3E60();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v27, (uint64_t)sub_1D59E0370, v11, ObjectType, v12, a7, MEMORY[0x1E4F9E448], MEMORY[0x1E4F9E450]);
  swift_release();
  uint64_t v28 = a1;
  char v27 = 38;
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  uint64_t v14 = sub_1D5AB3700();
  TransportDispatching.register<A>(event:handler:)(&v27, (uint64_t)sub_1D59E03D0, v13, ObjectType, v14, a7, MEMORY[0x1E4F9DB50], MEMORY[0x1E4F9DB58]);
  swift_release();
  uint64_t v28 = a1;
  char v27 = 35;
  uint64_t v15 = sub_1D5AB3100();
  uint64_t v16 = MEMORY[0x1E4F9D0C0];
  uint64_t v17 = MEMORY[0x1E4F9D0C8];
  TransportDispatching.register<A>(event:handler:)(&v27, (uint64_t)sub_1D59DDAE4, 0, ObjectType, v15, a7, MEMORY[0x1E4F9D0C0], MEMORY[0x1E4F9D0C8]);
  uint64_t v28 = a1;
  char v27 = 42;
  uint64_t v18 = swift_allocObject();
  swift_weakInit();
  uint64_t v19 = sub_1D5AB2FC0();
  TransportDispatching.register<A>(event:handler:)(&v27, (uint64_t)sub_1D59E0430, v18, ObjectType, v19, a7, MEMORY[0x1E4F9CD70], MEMORY[0x1E4F9CD78]);
  swift_release();
  uint64_t v28 = a1;
  char v27 = 34;
  uint64_t v20 = swift_allocObject();
  swift_weakInit();
  TransportDispatching.register<A>(event:handler:)(&v27, (uint64_t)sub_1D59E0438, v20, ObjectType, v15, a7, v16, v17);
  swift_release();
  uint64_t v28 = a1;
  char v27 = 39;
  uint64_t v21 = swift_allocObject();
  swift_weakInit();
  uint64_t v22 = sub_1D5AB35E0();
  TransportDispatching.register<A>(event:handler:)(&v27, (uint64_t)sub_1D59E0440, v21, ObjectType, v22, a7, MEMORY[0x1E4F9D790], MEMORY[0x1E4F9D798]);
  swift_release();
  uint64_t v28 = a1;
  char v27 = 37;
  uint64_t v23 = swift_allocObject();
  swift_weakInit();
  uint64_t v24 = sub_1D5AB3630();
  TransportDispatching.register<A>(event:handler:)(&v27, (uint64_t)sub_1D59E0448, v23, ObjectType, v24, a7, MEMORY[0x1E4F9D8D8], MEMORY[0x1E4F9D8E0]);
  swift_release();
  uint64_t v28 = a1;
  char v27 = 41;
  uint64_t v25 = swift_allocObject();
  swift_weakInit();
  TransportDispatching.register<A>(event:handler:)(&v27, (uint64_t)sub_1D59E04A8, v25, ObjectType, v15, a7, MEMORY[0x1E4F9D0C0], v17);
  swift_release();
  swift_unknownObjectRelease();
  return a4;
}

void *sub_1D59E028C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  type metadata accessor for MultiUserClient();
  uint64_t v13 = (void *)swift_allocObject();
  return sub_1D59DFE50(a1, a2, a3, v13, a5, a6, a7);
}

uint64_t method lookup function for MultiUserClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MultiUserClient);
}

uint64_t dispatch thunk of MultiUserClient.__allocating_init(connection:eventHub:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1D59E0338()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D59E0370(uint64_t a1)
{
  return sub_1D59DD978(a1, v1, (uint64_t (*)(void))type metadata accessor for MultiUserParticipantUpdated, MEMORY[0x1E4F9E458], (uint64_t)&off_1F2DF44B0, (uint64_t (*)(void))type metadata accessor for MultiUserParticipantUpdated);
}

uint64_t sub_1D59E03D0(uint64_t a1)
{
  return sub_1D59DD978(a1, v1, (uint64_t (*)(void))type metadata accessor for MultiUserWorkoutUpdated, MEMORY[0x1E4F9DB60], (uint64_t)&protocol witness table for MultiUserWorkoutUpdated, (uint64_t (*)(void))type metadata accessor for MultiUserWorkoutUpdated);
}

uint64_t sub_1D59E0430(uint64_t a1)
{
  return sub_1D59DDD74(a1, v1);
}

uint64_t sub_1D59E0438(uint64_t a1)
{
  return sub_1D59DE128(a1, v1);
}

uint64_t sub_1D59E0440(uint64_t a1)
{
  return sub_1D59DE4DC(a1, v1);
}

uint64_t sub_1D59E0448(uint64_t a1)
{
  return sub_1D59DD978(a1, v1, (uint64_t (*)(void))type metadata accessor for MediaPlayerSyncUpdated, MEMORY[0x1E4F9D8E8], (uint64_t)&protocol witness table for MediaPlayerSyncUpdated, (uint64_t (*)(void))type metadata accessor for MediaPlayerSyncUpdated);
}

uint64_t sub_1D59E04A8(uint64_t a1)
{
  return sub_1D59DD978(a1, v1, (uint64_t (*)(void))type metadata accessor for MediaPlayerSyncCatchupRequested, MEMORY[0x1E4F9D0D0], (uint64_t)&protocol witness table for MediaPlayerSyncCatchupRequested, (uint64_t (*)(void))type metadata accessor for MediaPlayerSyncCatchupRequested);
}

uint64_t sub_1D59E0508(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D59E0550(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void static CatalogDeleted.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for CatalogDeleted()
{
  return &type metadata for CatalogDeleted;
}

uint64_t ServiceSubscriptionClientProtocol.fetchServiceSubscription()(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3EF0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5AB3EE0();
  (*(void (**)(char *, uint64_t, uint64_t))(a2 + 8))(v7, a1, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t dispatch thunk of ServiceSubscriptionClientProtocol.fetchServiceSubscription(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t StorefrontContentAvailabilityUpdated.availability.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB3330();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t StorefrontContentAvailabilityUpdated.init(availability:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB3330();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static StorefrontContentAvailabilityUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for StorefrontContentAvailabilityUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3330();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for StorefrontContentAvailabilityUpdated(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB3330();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for StorefrontContentAvailabilityUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for StorefrontContentAvailabilityUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for StorefrontContentAvailabilityUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for StorefrontContentAvailabilityUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for StorefrontContentAvailabilityUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D59E0A48);
}

uint64_t sub_1D59E0A48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3330();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for StorefrontContentAvailabilityUpdated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D59E0AC8);
}

uint64_t sub_1D59E0AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3330();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for StorefrontContentAvailabilityUpdated()
{
  uint64_t result = qword_1EBDE0F40;
  if (!qword_1EBDE0F40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D59E0B84()
{
  uint64_t result = sub_1D5AB3330();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *RemoteParticipantClient.__allocating_init(eventHub:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = objc_allocWithZone(MEMORY[0x1E4F29268]);
  id v7 = a3;
  uint64_t v8 = (void *)sub_1D5AB4DE0();
  id v9 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v8, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  uint64_t v10 = sub_1D59968E8(v9, v7);
  uint64_t v11 = *(void *)(v10 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 16));
  if (*(unsigned char *)(v10 + 48) == 1)
  {
    *(unsigned char *)(v10 + 48) = 2;
    objc_msgSend(*(id *)(v10 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  type metadata accessor for RemoteParticipantClient();
  uint64_t v12 = (void *)swift_allocObject();
  uint64_t v13 = swift_retain();
  uint64_t v14 = sub_1D59E1420(v13, a1, a2, v12);

  swift_release_n();
  return v14;
}

uint64_t RemoteParticipantClient.__allocating_init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D59E0D74(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D59E1BAC);
}

uint64_t RemoteParticipantClient.init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D59E0D74(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D59E17EC);
}

uint64_t sub_1D59E0D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = a6(a1, a4, a5, v6, ObjectType, a2, a3);
  swift_unknownObjectRelease();
  return v14;
}

uint64_t sub_1D59E0DF8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t a5, uint64_t (*a6)(void))
{
  uint64_t v10 = a3(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v17 - v11;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v14 = *(void *)(result + 48);
    swift_unknownObjectRetain();
    swift_release();
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v16 = a4(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v12, a1, v16);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 8))(v12, v10, a5, ObjectType, v14);
    swift_unknownObjectRelease();
    return sub_1D59E1EC8((uint64_t)v12, a6);
  }
  return result;
}

uint64_t RemoteParticipantClient.deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t RemoteParticipantClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t RemoteParticipantClient.beginAdvertisingParticipantHost()()
{
  return sub_1D59E1140(0xD000000000000021, (void *)0x80000001D5AC8500, 210);
}

uint64_t RemoteParticipantClient.endAdvertisingParticipantHost()()
{
  return sub_1D59E1140(0xD00000000000001FLL, (void *)0x80000001D5AC8530, 213);
}

uint64_t RemoteParticipantClient.beginDiscoveringParticipantsWithRole(_:)(char a1)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE5400);
  v4._uint64_t countAndFlagsBits = 0xD00000000000007CLL;
  v4._object = (void *)0x80000001D5AC8480;
  v5._object = (void *)0x80000001D5AC8550;
  v5._uint64_t countAndFlagsBits = 0xD000000000000028;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v10 = 211;
  char v9 = a1;
  return (*(uint64_t (**)(__int16 *, char *, void, void, void, uint64_t, uint64_t))(v6 + 16))(&v10, &v9, MEMORY[0x1E4F9D988], MEMORY[0x1E4F9D978], MEMORY[0x1E4F9D980], ObjectType, v6);
}

uint64_t RemoteParticipantClient.endDiscoveringParticipants()()
{
  return sub_1D59E1140(0xD00000000000001CLL, (void *)0x80000001D5AC8580, 214);
}

uint64_t sub_1D59E1140(uint64_t a1, void *a2, __int16 a3)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1D5AB4B50();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBDE5400);
  v8._object = (void *)0x80000001D5AC8480;
  v8._uint64_t countAndFlagsBits = 0xD00000000000007CLL;
  v9._uint64_t countAndFlagsBits = a1;
  v9._object = a2;
  Logger.trace(file:function:)(v8, v9);
  uint64_t v10 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v13 = a3;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v10 + 8))(&v13, ObjectType, v10);
}

uint64_t RemoteParticipantClient.tryPassword(_:)(uint64_t a1, uint64_t a2)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1D5AB4B50();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EBDE5400);
  v6._object = (void *)0x80000001D5AC8480;
  v6._uint64_t countAndFlagsBits = 0xD00000000000007CLL;
  v7._uint64_t countAndFlagsBits = 0x7773736150797274;
  v7._object = (void *)0xEF293A5F2864726FLL;
  Logger.trace(file:function:)(v6, v7);
  uint64_t v8 = *(void *)(v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v12 = 215;
  v11[0] = a1;
  v11[1] = a2;
  return (*(uint64_t (**)(__int16 *, void *, void, void, void, uint64_t, uint64_t))(v8 + 16))(&v12, v11, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F9F0B8], MEMORY[0x1E4F9F0C0], ObjectType, v8);
}

uint64_t sub_1D59E1348()
{
  return RemoteParticipantClient.beginAdvertisingParticipantHost()();
}

uint64_t sub_1D59E136C()
{
  return RemoteParticipantClient.endAdvertisingParticipantHost()();
}

uint64_t sub_1D59E1390(char a1)
{
  return RemoteParticipantClient.beginDiscoveringParticipantsWithRole(_:)(a1);
}

uint64_t sub_1D59E13B4()
{
  return RemoteParticipantClient.endDiscoveringParticipants()();
}

uint64_t sub_1D59E13D8(uint64_t a1, uint64_t a2)
{
  return RemoteParticipantClient.tryPassword(_:)(a1, a2);
}

uint64_t type metadata accessor for RemoteParticipantClient()
{
  return self;
}

void *sub_1D59E1420(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[2] = a1;
  a4[3] = &protocol witness table for XPCClient;
  a4[4] = &protocol witness table for XPCClient;
  a4[5] = a2;
  a4[6] = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v21 = a1;
  char v20 = 21;
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  uint64_t v8 = sub_1D5AB3190();
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v9 = MEMORY[0x1E4F9D168];
  uint64_t v10 = MEMORY[0x1E4F9D170];
  TransportDispatching.register<A>(event:handler:)(&v20, (uint64_t)sub_1D59E1C90, v7, ObjectType, v8, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E4F9D168], MEMORY[0x1E4F9D170]);
  swift_release();
  uint64_t v21 = a1;
  char v20 = 24;
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  TransportDispatching.register<A>(event:handler:)(&v20, (uint64_t)sub_1D59E1CF0, v11, ObjectType, v8, (uint64_t)&protocol witness table for XPCClient, v9, v10);
  swift_release();
  uint64_t v21 = a1;
  char v20 = 26;
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  TransportDispatching.register<A>(event:handler:)(&v20, (uint64_t)sub_1D59E1D50, v12, ObjectType, v8, (uint64_t)&protocol witness table for XPCClient, v9, v10);
  swift_release();
  uint64_t v21 = a1;
  char v20 = 25;
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  uint64_t v14 = sub_1D5AB4420();
  TransportDispatching.register<A>(event:handler:)(&v20, (uint64_t)sub_1D59E1DB0, v13, ObjectType, v14, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E4F9EB28], MEMORY[0x1E4F9EB30]);
  swift_release();
  uint64_t v21 = a1;
  char v20 = 20;
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  uint64_t v16 = sub_1D5AB4490();
  TransportDispatching.register<A>(event:handler:)(&v20, (uint64_t)sub_1D59E1E10, v15, ObjectType, v16, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E4F9EBC8], MEMORY[0x1E4F9EBD0]);
  swift_release();
  uint64_t v21 = a1;
  char v20 = 22;
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v20, (uint64_t)sub_1D59E1E70, v17, ObjectType, (uint64_t)&protocol witness table for XPCClient);
  swift_release_n();
  uint64_t v21 = a1;
  char v20 = 23;
  uint64_t v18 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v20, (uint64_t)sub_1D59E1E9C, v18, ObjectType, (uint64_t)&protocol witness table for XPCClient);
  swift_release_n();
  swift_unknownObjectRelease();
  return a4;
}

void *sub_1D59E17EC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  a4[2] = a1;
  a4[3] = a6;
  a4[4] = a7;
  a4[5] = a2;
  a4[6] = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v25 = a1;
  char v24 = 21;
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  uint64_t v12 = sub_1D5AB3190();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v13 = MEMORY[0x1E4F9D168];
  uint64_t v14 = MEMORY[0x1E4F9D170];
  TransportDispatching.register<A>(event:handler:)(&v24, (uint64_t)sub_1D59E1C90, v11, ObjectType, v12, a7, MEMORY[0x1E4F9D168], MEMORY[0x1E4F9D170]);
  swift_release();
  uint64_t v25 = a1;
  char v24 = 24;
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  TransportDispatching.register<A>(event:handler:)(&v24, (uint64_t)sub_1D59E1CF0, v15, ObjectType, v12, a7, v13, v14);
  swift_release();
  uint64_t v25 = a1;
  char v24 = 26;
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  TransportDispatching.register<A>(event:handler:)(&v24, (uint64_t)sub_1D59E1D50, v16, ObjectType, v12, a7, v13, v14);
  swift_release();
  uint64_t v25 = a1;
  char v24 = 25;
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = sub_1D5AB4420();
  TransportDispatching.register<A>(event:handler:)(&v24, (uint64_t)sub_1D59E1DB0, v17, ObjectType, v18, a7, MEMORY[0x1E4F9EB28], MEMORY[0x1E4F9EB30]);
  swift_release();
  uint64_t v25 = a1;
  char v24 = 20;
  uint64_t v19 = swift_allocObject();
  swift_weakInit();
  uint64_t v20 = sub_1D5AB4490();
  TransportDispatching.register<A>(event:handler:)(&v24, (uint64_t)sub_1D59E1E10, v19, ObjectType, v20, a7, MEMORY[0x1E4F9EBC8], MEMORY[0x1E4F9EBD0]);
  swift_release();
  uint64_t v25 = a1;
  char v24 = 22;
  uint64_t v21 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v24, (uint64_t)sub_1D59E1E70, v21, ObjectType, a7);
  swift_release_n();
  uint64_t v25 = a1;
  char v24 = 23;
  uint64_t v22 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v24, (uint64_t)sub_1D59E1E9C, v22, ObjectType, a7);
  swift_release_n();
  swift_unknownObjectRelease();
  return a4;
}

void *sub_1D59E1BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  type metadata accessor for RemoteParticipantClient();
  uint64_t v13 = (void *)swift_allocObject();
  return sub_1D59E17EC(a1, a2, a3, v13, a5, a6, a7);
}

uint64_t method lookup function for RemoteParticipantClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RemoteParticipantClient);
}

uint64_t dispatch thunk of RemoteParticipantClient.__allocating_init(connection:eventHub:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1D59E1C58()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D59E1C90(uint64_t a1)
{
  return sub_1D59E0DF8(a1, v1, (uint64_t (*)(void))type metadata accessor for RemoteParticipantDiscovered, MEMORY[0x1E4F9D178], (uint64_t)&protocol witness table for RemoteParticipantDiscovered, (uint64_t (*)(void))type metadata accessor for RemoteParticipantDiscovered);
}

uint64_t sub_1D59E1CF0(uint64_t a1)
{
  return sub_1D59E0DF8(a1, v1, (uint64_t (*)(void))type metadata accessor for RemoteParticipantLost, MEMORY[0x1E4F9D178], (uint64_t)&protocol witness table for RemoteParticipantLost, (uint64_t (*)(void))type metadata accessor for RemoteParticipantLost);
}

uint64_t sub_1D59E1D50(uint64_t a1)
{
  return sub_1D59E0DF8(a1, v1, (uint64_t (*)(void))type metadata accessor for RemoteParticipantUpdated, MEMORY[0x1E4F9D178], (uint64_t)&protocol witness table for RemoteParticipantUpdated, (uint64_t (*)(void))type metadata accessor for RemoteParticipantUpdated);
}

uint64_t sub_1D59E1DB0(uint64_t a1)
{
  return sub_1D59E0DF8(a1, v1, (uint64_t (*)(void))type metadata accessor for RemoteParticipantPasswordRequired, MEMORY[0x1E4F9EB38], (uint64_t)&protocol witness table for RemoteParticipantPasswordRequired, (uint64_t (*)(void))type metadata accessor for RemoteParticipantPasswordRequired);
}

uint64_t sub_1D59E1E10(uint64_t a1)
{
  return sub_1D59E0DF8(a1, v1, (uint64_t (*)(void))type metadata accessor for RemoteParticipantConnectionRejected, MEMORY[0x1E4F9EBD8], (uint64_t)&protocol witness table for RemoteParticipantConnectionRejected, (uint64_t (*)(void))type metadata accessor for RemoteParticipantConnectionRejected);
}

uint64_t sub_1D59E1E70()
{
  return sub_1D59A1854(v0, (uint64_t)&type metadata for RemoteParticipantDiscoveryExpired, (uint64_t)&protocol witness table for RemoteParticipantDiscoveryExpired);
}

uint64_t sub_1D59E1E9C()
{
  return sub_1D59A1854(v0, (uint64_t)&type metadata for RemoteParticipantHostAdvertisingExpired, (uint64_t)&protocol witness table for RemoteParticipantHostAdvertisingExpired);
}

uint64_t sub_1D59E1EC8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t TrainerEventEnded.trainerEvent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB2430();
  Swift::String v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t TrainerEventEnded.init(trainerEvent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB2430();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static TrainerEventEnded.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for TrainerEventEnded(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2430();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for TrainerEventEnded(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB2430();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for TrainerEventEnded(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for TrainerEventEnded(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for TrainerEventEnded(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for TrainerEventEnded(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrainerEventEnded(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D59E2280);
}

uint64_t sub_1D59E2280(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2430();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for TrainerEventEnded(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D59E2300);
}

uint64_t sub_1D59E2300(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2430();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for TrainerEventEnded()
{
  uint64_t result = qword_1EA726460;
  if (!qword_1EA726460) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D59E23BC()
{
  uint64_t result = sub_1D5AB2430();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t RemoteParticipantLost.init(participant:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB3190();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

uint64_t RemoteParticipantLost.participant.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB3190();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

void static RemoteParticipantLost.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t getEnumTagSinglePayload for RemoteParticipantLost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D59E2540);
}

uint64_t sub_1D59E2540(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3190();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for RemoteParticipantLost(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D59E25C0);
}

uint64_t sub_1D59E25C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3190();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for RemoteParticipantLost()
{
  uint64_t result = qword_1EBDE3050;
  if (!qword_1EBDE3050) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t GymKitConnectionUpdated.gymKitConnection.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB2F30();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t GymKitConnectionUpdated.init(gymKitConnection:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB2F30();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static GymKitConnectionUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for GymKitConnectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2F30();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for GymKitConnectionUpdated(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB2F30();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for GymKitConnectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2F30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for GymKitConnectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2F30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for GymKitConnectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2F30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for GymKitConnectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2F30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for GymKitConnectionUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D59E29D4);
}

uint64_t sub_1D59E29D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2F30();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for GymKitConnectionUpdated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D59E2A54);
}

uint64_t sub_1D59E2A54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2F30();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for GymKitConnectionUpdated()
{
  uint64_t result = qword_1EA726470;
  if (!qword_1EA726470) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D59E2B10()
{
  uint64_t result = sub_1D5AB2F30();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

double static SessionConstants.minimumElapsedTime.getter()
{
  if (qword_1EA724DA0 != -1) {
    swift_once();
  }
  double v0 = *(double *)&qword_1EA726488;
  char v1 = byte_1EA726480;
  return sub_1D5957C6C(v1, v0);
}

void static SessionConstants.minimumElapsedTime.setter(double a1)
{
  if (qword_1EA724DA0 != -1) {
    swift_once();
  }
  if (qword_1EBDE4BD0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (Platform.internalInstall.getter())
  {
    if (qword_1EBDE4BF8 != -1) {
      swift_once();
    }
    uint64_t v2 = (void *)qword_1EBDE4BE8;
    UserDefaultsKeys.rawValue.getter();
    uint64_t v3 = (void *)sub_1D5AB4DE0();
    objc_msgSend(v2, sel_setDouble_forKey_, v3, a1);
    swift_bridgeObjectRelease();
  }
}

void (*static SessionConstants.minimumElapsedTime.modify(double **a1))(uint64_t a1, char a2)
{
  uint64_t v2 = (double *)malloc(0x39uLL);
  *a1 = v2;
  if (qword_1EA724DA0 != -1) {
    swift_once();
  }
  char v3 = byte_1EA726480;
  *((unsigned char *)v2 + 56) = byte_1EA726480;
  v2[6] = sub_1D5957C6C(v3, *(double *)&qword_1EA726488);
  return sub_1D59E2DD4;
}

void sub_1D59E2DD4(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  double v3 = *(double *)(*(void *)a1 + 48);
  if (a2)
  {
    if (qword_1EBDE4BD0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    if (Platform.internalInstall.getter())
    {
      if (qword_1EBDE4BF8 != -1) {
        swift_once();
      }
      uint64_t v4 = (void *)qword_1EBDE4BE8;
LABEL_14:
      UserDefaultsKeys.rawValue.getter();
      uint64_t v5 = (void *)sub_1D5AB4DE0();
      objc_msgSend(v4, sel_setDouble_forKey_, v5, v3);

      swift_bridgeObjectRelease();
    }
  }
  else
  {
    if (qword_1EBDE4BD0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    if (Platform.internalInstall.getter())
    {
      if (qword_1EBDE4BF8 != -1) {
        swift_once();
      }
      uint64_t v4 = (void *)qword_1EBDE4BE8;
      goto LABEL_14;
    }
  }
  free(v2);
}

void sub_1D59E2F98()
{
  qword_1EA726488 = 0x404E000000000000;
  byte_1EA726480 = 50;
}

double static SessionConstants.sessionIdleTimeout.getter()
{
  return 600.0;
}

uint64_t sub_1D59E2FC4()
{
  uint64_t result = sub_1D5AB5330();
  qword_1EA726490 = v1;
  return result;
}

double static SessionConstants.integrityTerminationDelay.getter()
{
  if (qword_1EA724DA8 != -1) {
    swift_once();
  }
  return *(double *)&qword_1EA726490;
}

ValueMetadata *type metadata accessor for SessionConstants()
{
  return &type metadata for SessionConstants;
}

uint64_t sub_1D59E3048(uint64_t a1, char a2)
{
  if (a2) {
    return sub_1D5AB2520();
  }
  switch(a1)
  {
    case 0:
      uint64_t result = sub_1D5AB24E0();
      break;
    case 1:
      uint64_t result = sub_1D5AB24F0();
      break;
    case 2:
      uint64_t result = sub_1D5AB2530();
      break;
    case 3:
      uint64_t result = sub_1D5AB2500();
      break;
    case 4:
      uint64_t result = sub_1D5AB2510();
      break;
    default:
      return sub_1D5AB2520();
  }
  return result;
}

uint64_t sub_1D59E30A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D5AB2540();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  Swift::String v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v16 - v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v16 - v7, v1, v2);
  sub_1D5AB24E0();
  sub_1D59E3360();
  char v9 = sub_1D5AB4DD0();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v6, v2);
  if (v9)
  {
    v10(v8, v2);
    return 0;
  }
  else
  {
    sub_1D5AB24F0();
    char v12 = sub_1D5AB4DD0();
    v10(v6, v2);
    if (v12)
    {
      v10(v8, v2);
      return 1;
    }
    else
    {
      sub_1D5AB2530();
      char v13 = sub_1D5AB4DD0();
      v10(v6, v2);
      if (v13)
      {
        v10(v8, v2);
        return 2;
      }
      else
      {
        sub_1D5AB2500();
        char v14 = sub_1D5AB4DD0();
        v10(v6, v2);
        if (v14)
        {
          v10(v8, v2);
          return 3;
        }
        else
        {
          sub_1D5AB2510();
          char v15 = sub_1D5AB4DD0();
          v10(v6, v2);
          v10(v8, v2);
          if (v15) {
            return 4;
          }
          else {
            return 0;
          }
        }
      }
    }
  }
}

unint64_t sub_1D59E3360()
{
  unint64_t result = qword_1EA726498;
  if (!qword_1EA726498)
  {
    sub_1D5AB2540();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726498);
  }
  return result;
}

uint64_t WatchConnectionRejectionUpdated.watchConnectionRejection.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB3B50();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t WatchConnectionRejectionUpdated.init(watchConnectionRejection:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB3B50();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static WatchConnectionRejectionUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for WatchConnectionRejectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3B50();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for WatchConnectionRejectionUpdated(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB3B50();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for WatchConnectionRejectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3B50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for WatchConnectionRejectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3B50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for WatchConnectionRejectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3B50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for WatchConnectionRejectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3B50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for WatchConnectionRejectionUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D59E3710);
}

uint64_t sub_1D59E3710(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3B50();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for WatchConnectionRejectionUpdated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D59E3790);
}

uint64_t sub_1D59E3790(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3B50();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for WatchConnectionRejectionUpdated()
{
  uint64_t result = qword_1EA7264A0;
  if (!qword_1EA7264A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D59E384C()
{
  uint64_t result = sub_1D5AB3B50();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t CountdownIntentFired.countdownIntent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB2D60();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t CountdownIntentFired.init(countdownIntent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB2D60();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static CountdownIntentFired.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for CountdownIntentFired(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2D60();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for CountdownIntentFired(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB2D60();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for CountdownIntentFired(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2D60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for CountdownIntentFired(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2D60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for CountdownIntentFired(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2D60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for CountdownIntentFired(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2D60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for CountdownIntentFired(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D59E3C30);
}

uint64_t sub_1D59E3C30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2D60();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for CountdownIntentFired(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D59E3CB0);
}

uint64_t sub_1D59E3CB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2D60();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for CountdownIntentFired()
{
  uint64_t result = qword_1EA7264B0;
  if (!qword_1EA7264B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D59E3D6C()
{
  uint64_t result = sub_1D5AB2D60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t static BuildVersion.oldest.getter()
{
  uint64_t v0 = sub_1D5AB2540();
  MEMORY[0x1F4188790](v0 - 8);
  sub_1D5AB24E0();
  return sub_1D5AB2260();
}

uint64_t static BuildVersion.current.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1D5AB2540();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7264C0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RemoteParticipantClient();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v7 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  id v8 = objc_msgSend(v7, sel_infoDictionary);

  if (!v8)
  {
    long long v17 = 0u;
    long long v18 = 0u;
    goto LABEL_10;
  }
  uint64_t v9 = sub_1D5AB4D70();

  if (!*(void *)(v9 + 16) || (unint64_t v10 = sub_1D5952584(0xD00000000000001ALL, 0x80000001D5AC85D0), (v11 & 1) == 0))
  {
    long long v17 = 0u;
    long long v18 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_1D5951F00(*(void *)(v9 + 56) + 32 * v10, (uint64_t)&v17);
  swift_bridgeObjectRelease();
  if (!*((void *)&v18 + 1))
  {
LABEL_10:
    char v13 = &qword_1EBDE4E20;
    char v14 = (char *)&v17;
LABEL_11:
    sub_1D594F53C((uint64_t)v14, v13);
    goto LABEL_12;
  }
  if (swift_dynamicCast())
  {
    BuildVersion.init(rawValue:)(v16[0], v16[1], (uint64_t)v5);
    uint64_t v12 = sub_1D5AB2270();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v5, 1, v12) != 1) {
      return sub_1D59E40EC((uint64_t)v5, a1);
    }
    char v13 = &qword_1EA7264C0;
    char v14 = v5;
    goto LABEL_11;
  }
LABEL_12:
  sub_1D5AB24E0();
  return sub_1D5AB2260();
}

uint64_t sub_1D59E40EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2270();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t RemoteParticipantConnectionRejection.watchConnectionRejectionReason()()
{
  uint64_t v0 = sub_1D5AB3190();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5AB4470();
  unsigned __int8 v4 = sub_1D5AB3180();
  char v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v6)
  {
    uint64_t v7 = sub_1D5AB4480();
    if (v9)
    {
      if (v4 <= 5u && ((1 << v4) & 0x34) != 0) {
        return 0x1000202u >> (8 * v7);
      }
    }
    else
    {
      sub_1D59891FC(v7, v8, 0);
    }
  }
  return 4;
}

void static AppAttentionGained.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for AppAttentionGained()
{
  return &type metadata for AppAttentionGained;
}

uint64_t Promise.resolve(file:line:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v7 + 48) = a6;
  *(void *)(v7 + 56) = v6;
  *(unsigned char *)(v7 + 88) = a4;
  *(void *)(v7 + 32) = a3;
  *(void *)(v7 + 40) = a5;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  return MEMORY[0x1F4188298](sub_1D59E42CC, 0, 0);
}

uint64_t sub_1D59E42CC()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  char v5 = *(unsigned char *)(v0 + 88);
  uint64_t v6 = *(void *)(v0 + 24);
  uint64_t v7 = swift_task_alloc();
  *(void *)(v0 + 64) = v7;
  uint64_t v8 = *(void *)(v1 + 16);
  *(void *)(v7 + 16) = v8;
  *(void *)(v7 + 24) = v6;
  *(void *)(v7 + 32) = v4;
  *(unsigned char *)(v7 + 40) = v5;
  *(void *)(v7 + 48) = v3;
  *(void *)(v7 + 56) = v2;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EA7264D0 + dword_1EA7264D0);
  char v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v9;
  *char v9 = v0;
  v9[1] = sub_1D59E43FC;
  uint64_t v10 = *(void *)(v0 + 16);
  return v12(v10, 0, 0, 0xD000000000000013, 0x80000001D5AC6250, (uint64_t)sub_1D59E6608, v7, v8);
}

uint64_t sub_1D59E43FC()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D59E4538, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1D59E4538()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t Promise<>.catch(file:line:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8);
  char v11 = (void *)swift_allocObject();
  void v11[2] = a1;
  v11[3] = a2;
  v11[4] = a3;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1D59E6974;
  *(void *)(v12 + 24) = v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v4, v8);
  unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v14 + v13, (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  char v15 = (uint64_t (**)(void *))(v14 + ((v10 + v13 + 7) & 0xFFFFFFFFFFFFFFF8));
  *char v15 = sub_1D59E69CC;
  v15[1] = (uint64_t (*)(void *))v12;
  swift_bridgeObjectRetain();
  return sub_1D5AB4540();
}

void sub_1D59E4770(void *a1, uint64_t a2, unint64_t a3)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1D5AB4B50();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EBDE5400);
  id v7 = a1;
  swift_bridgeObjectRetain();
  id v8 = a1;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1D5AB4B30();
  os_log_type_t v10 = sub_1D5AB5410();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = v14;
    *(_DWORD *)uint64_t v11 = 136446722;
    swift_getErrorValue();
    uint64_t v12 = MEMORY[0x1D9459FA0]();
    sub_1D5951500(v12, v13, &v15);
    sub_1D5AB5680();
    swift_bridgeObjectRelease();

    *(_WORD *)(v11 + 12) = 2082;
    swift_bridgeObjectRetain();
    sub_1D5951500(a2, a3, &v15);
    sub_1D5AB5680();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 22) = 2050;
    sub_1D5AB5680();
    _os_log_impl(&dword_1D5947000, v9, v10, "Caught %{public}s at %{public}s:%{public}lu", (uint8_t *)v11, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v14, -1, -1);
    MEMORY[0x1D945AAC0](v11, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t Promise.init(_:file:line:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a7;
  *(void *)(v14 + 24) = a3;
  *(void *)(v14 + 32) = a4;
  *(unsigned char *)(v14 + 40) = a5;
  *(void *)(v14 + 48) = a6;
  *(void *)(v14 + 56) = a1;
  *(void *)(v14 + 64) = a2;
  return sub_1D5AB4540();
}

uint64_t sub_1D59E4A94(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 104) = v18;
  *(void *)(v8 + 112) = v19;
  *(_OWORD *)(v8 + 88) = v17;
  *(unsigned char *)(v8 + 176) = v16;
  *(void *)(v8 + 72) = a7;
  *(void *)(v8 + 80) = a8;
  *(void *)(v8 + 64) = a6;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v10 = sub_1D5AB5CB0();
  *(void *)(v8 + 120) = v10;
  *(void *)(v8 + 128) = *(void *)(v10 - 8);
  *(void *)(v8 + 136) = swift_task_alloc();
  *(void *)(v8 + 144) = *(void *)(v19 - 8);
  uint64_t v11 = swift_task_alloc();
  *(void *)(v8 + 152) = v11;
  uint64_t v14 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v8 + 160) = v12;
  *uint64_t v12 = v8;
  v12[1] = sub_1D59E4C64;
  return v14(v11);
}

uint64_t sub_1D59E4C64()
{
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D59E502C;
  }
  else {
    uint64_t v2 = sub_1D59E4D78;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D59E4D78()
{
  uint64_t v20 = v0;
  if (qword_1EBDE4BB8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE49B8);
  uint64_t v2 = sub_1D5AB4B30();
  os_log_type_t v3 = sub_1D5AB5430();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[8];
    uint64_t v18 = v0[11];
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v19 = v6;
    *(_DWORD *)uint64_t v5 = 134218498;
    v0[5] = v4;
    sub_1D5AB5680();
    *(_WORD *)(v5 + 12) = 2080;
    uint64_t v7 = sub_1D5AB5810();
    v0[6] = sub_1D5951500(v7, v8, &v19);
    sub_1D5AB5680();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 22) = 2048;
    v0[7] = v18;
    sub_1D5AB5680();
    _os_log_impl(&dword_1D5947000, v2, v3, "Finished A->P conversion: %ld:%s:%lu", (uint8_t *)v5, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v6, -1, -1);
    MEMORY[0x1D945AAC0](v5, -1, -1);
  }

  uint64_t v10 = v0[18];
  uint64_t v9 = v0[19];
  uint64_t v12 = v0[16];
  uint64_t v11 = v0[17];
  uint64_t v14 = v0[14];
  uint64_t v13 = v0[15];
  uint64_t v15 = (void (*)(uint64_t))v0[12];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v11, v9, v14);
  swift_storeEnumTagMultiPayload();
  v15(v11);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  char v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_1D59E502C()
{
  uint64_t v19 = v0;
  if (qword_1EBDE4BB8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE49B8);
  uint64_t v2 = sub_1D5AB4B30();
  os_log_type_t v3 = sub_1D5AB5430();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v17 = v0[11];
    uint64_t v4 = v0[8];
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v18 = v6;
    *(_DWORD *)uint64_t v5 = 134218498;
    v0[2] = v4;
    sub_1D5AB5680();
    *(_WORD *)(v5 + 12) = 2080;
    uint64_t v7 = sub_1D5AB5810();
    v0[3] = sub_1D5951500(v7, v8, &v18);
    sub_1D5AB5680();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 22) = 2048;
    v0[4] = v17;
    sub_1D5AB5680();
    _os_log_impl(&dword_1D5947000, v2, v3, "Finished A->P conversion: %ld:%s:%lu", (uint8_t *)v5, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v6, -1, -1);
    MEMORY[0x1D945AAC0](v5, -1, -1);
  }

  uint64_t v9 = (void *)v0[21];
  uint64_t v11 = v0[16];
  uint64_t v10 = (void *)v0[17];
  uint64_t v12 = v0[15];
  uint64_t v13 = (void (*)(void *))v0[12];
  *uint64_t v10 = v9;
  swift_storeEnumTagMultiPayload();
  id v14 = v9;
  v13(v10);

  (*(void (**)(void *, uint64_t))(v11 + 8))(v10, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t static Promise.main(_:file:line:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a7;
  *(void *)(v14 + 24) = a3;
  *(void *)(v14 + 32) = a4;
  *(unsigned char *)(v14 + 40) = a5;
  *(void *)(v14 + 48) = a6;
  *(void *)(v14 + 56) = a1;
  *(void *)(v14 + 64) = a2;
  swift_retain();
  return sub_1D5AB4540();
}

uint64_t sub_1D59E5374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, const char *a10, uint64_t a11, uint64_t a12)
{
  uint64_t v46 = a7;
  uint64_t v47 = a3;
  uint64_t v18 = a12;
  uint64_t v44 = a11;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4C10);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v45 = (char *)v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1D5A3D25C(101);
  if (qword_1EBDE4BB8 != -1) {
    swift_once();
  }
  uint64_t v43 = a9;
  uint64_t v22 = sub_1D5AB4B50();
  __swift_project_value_buffer(v22, (uint64_t)qword_1EBDE49B8);
  uint64_t v23 = sub_1D5AB4B30();
  os_log_type_t v24 = sub_1D5AB5430();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v39 = a10;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v40 = a1;
    uint64_t v26 = v25;
    uint64_t v27 = swift_slowAlloc();
    uint64_t v41 = a12;
    uint64_t v38 = v27;
    uint64_t v48 = v21;
    uint64_t v49 = v27;
    *(_DWORD *)uint64_t v26 = 134218498;
    uint64_t v42 = a4;
    sub_1D5AB5680();
    *(_WORD *)(v26 + 12) = 2080;
    v37[1] = v26 + 14;
    uint64_t v28 = sub_1D5AB5810();
    uint64_t v48 = sub_1D5951500(v28, v29, &v49);
    sub_1D5AB5680();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 22) = 2048;
    uint64_t v48 = a6;
    a4 = v42;
    sub_1D5AB5680();
    _os_log_impl(&dword_1D5947000, v23, v24, v39, (uint8_t *)v26, 0x20u);
    uint64_t v30 = v38;
    swift_arrayDestroy();
    uint64_t v18 = v41;
    MEMORY[0x1D945AAC0](v30, -1, -1);
    uint64_t v31 = v26;
    a1 = v40;
    MEMORY[0x1D945AAC0](v31, -1, -1);
  }

  uint64_t v32 = sub_1D5AB51C0();
  uint64_t v33 = (uint64_t)v45;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v45, 1, 1, v32);
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = 0;
  *(void *)(v34 + 24) = 0;
  uint64_t v35 = v46;
  *(void *)(v34 + 32) = v43;
  *(void *)(v34 + 40) = v35;
  *(void *)(v34 + 48) = a8;
  *(void *)(v34 + 56) = v21;
  *(void *)(v34 + 64) = v47;
  *(void *)(v34 + 72) = a4;
  *(unsigned char *)(v34 + 80) = a5;
  *(void *)(v34 + 88) = a6;
  *(void *)(v34 + 96) = a1;
  *(void *)(v34 + 104) = a2;
  swift_retain();
  swift_retain();
  sub_1D5A3D404(v33, v18, v34);
  return swift_release();
}

uint64_t sub_1D59E56A0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 56) = v17;
  *(void *)(v8 + 64) = v18;
  *(_OWORD *)(v8 + 40) = v16;
  *(unsigned char *)(v8 + 120) = v15;
  *(void *)(v8 + 24) = a7;
  *(void *)(v8 + 32) = a8;
  *(void *)(v8 + 16) = a6;
  *(void *)(v8 + 72) = *(void *)(v18 - 8);
  uint64_t v10 = swift_task_alloc();
  *(void *)(v8 + 80) = v10;
  uint64_t v13 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v8 + 88) = v11;
  *uint64_t v11 = v8;
  v11[1] = sub_1D59E57F8;
  return v13(v10);
}

uint64_t sub_1D59E57F8()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D59E5AE8;
  }
  else {
    uint64_t v2 = sub_1D59E590C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D59E590C()
{
  sub_1D5AB51A0();
  *(void *)(v0 + 104) = sub_1D5AB5190();
  uint64_t v2 = sub_1D5AB5120();
  return MEMORY[0x1F4188298](sub_1D59E59A0, v2, v1);
}

uint64_t sub_1D59E59A0()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v4 = *(void (**)(char *))(v0 + 48);
  uint64_t v7 = *(void *)(v0 + 24);
  uint64_t v6 = *(void *)(v0 + 32);
  uint64_t v8 = *(void *)(v0 + 16);
  int v9 = *(unsigned __int8 *)(v0 + 120);
  swift_release();
  sub_1D59E5CB0(v8, v7, v6, v9, v5, v4, v2, v1, v3);
  return MEMORY[0x1F4188298](sub_1D59E5A70, 0, 0);
}

uint64_t sub_1D59E5A70()
{
  (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1D59E5AE8()
{
  sub_1D5AB51A0();
  *(void *)(v0 + 112) = sub_1D5AB5190();
  uint64_t v2 = sub_1D5AB5120();
  return MEMORY[0x1F4188298](sub_1D59E5B7C, v2, v1);
}

uint64_t sub_1D59E5B7C()
{
  uint64_t v1 = *(void **)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v3 = *(void (**)(void *))(v0 + 48);
  uint64_t v6 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v7 = *(void *)(v0 + 16);
  int v8 = *(unsigned __int8 *)(v0 + 120);
  swift_release();
  sub_1D59E5FCC(v7, v6, v5, v8, v4, v3, v2, v1);
  return MEMORY[0x1F4188298](sub_1D59E5C48, 0, 0);
}

uint64_t sub_1D59E5C48()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D59E5CB0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, void (*a6)(char *), uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v35 = a5;
  int v34 = a4;
  uint64_t v32 = a2;
  uint64_t v33 = a3;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v37 = a9;
  uint64_t v13 = sub_1D5AB5CB0();
  uint64_t v36 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  char v15 = (char *)&v27 - v14;
  if (qword_1EBDE4BB8 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1D5AB4B50();
  __swift_project_value_buffer(v16, (uint64_t)qword_1EBDE49B8);
  uint64_t v17 = sub_1D5AB4B30();
  os_log_type_t v18 = sub_1D5AB5430();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v29 = v13;
    uint64_t v20 = v19;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v31 = v9;
    uint64_t v28 = v21;
    uint64_t v39 = v21;
    *(_DWORD *)uint64_t v20 = 134218498;
    uint64_t v38 = a1;
    sub_1D5AB5680();
    *(_WORD *)(v20 + 12) = 2080;
    uint64_t v30 = a8;
    uint64_t v22 = sub_1D5AB5810();
    uint64_t v38 = sub_1D5951500(v22, v23, &v39);
    a8 = v30;
    sub_1D5AB5680();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 22) = 2048;
    uint64_t v38 = v35;
    sub_1D5AB5680();
    _os_log_impl(&dword_1D5947000, v17, v18, "Finished Main A->P conversion: %ld:%s:%lu", (uint8_t *)v20, 0x20u);
    uint64_t v24 = v28;
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v24, -1, -1);
    uint64_t v25 = v20;
    uint64_t v13 = v29;
    MEMORY[0x1D945AAC0](v25, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(*(void *)(v37 - 8) + 16))(v15, a8);
  swift_storeEnumTagMultiPayload();
  a6(v15);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v15, v13);
}

uint64_t sub_1D59E5FCC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, void (*a6)(void *), uint64_t a7, void *a8)
{
  uint64_t v33 = a7;
  LODWORD(v32) = a4;
  uint64_t v30 = a2;
  uint64_t v31 = a3;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v12 = sub_1D5AB5CB0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  char v15 = (void *)((char *)v27 - v14);
  if (qword_1EBDE4BB8 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1D5AB4B50();
  __swift_project_value_buffer(v16, (uint64_t)qword_1EBDE49B8);
  uint64_t v17 = sub_1D5AB4B30();
  os_log_type_t v18 = sub_1D5AB5430();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v29 = a8;
    uint64_t v20 = v19;
    uint64_t v28 = swift_slowAlloc();
    uint64_t v35 = v28;
    *(_DWORD *)uint64_t v20 = 134218498;
    uint64_t v34 = a1;
    sub_1D5AB5680();
    *(_WORD *)(v20 + 12) = 2080;
    v27[1] = v20 + 14;
    uint64_t v21 = sub_1D5AB5810();
    uint64_t v32 = a5;
    uint64_t v34 = sub_1D5951500(v21, v22, &v35);
    sub_1D5AB5680();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 22) = 2048;
    uint64_t v34 = v32;
    sub_1D5AB5680();
    _os_log_impl(&dword_1D5947000, v17, v18, "Finished Main A->P conversion: %ld:%s:%lu", (uint8_t *)v20, 0x20u);
    uint64_t v23 = v28;
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v23, -1, -1);
    uint64_t v24 = v20;
    a8 = v29;
    MEMORY[0x1D945AAC0](v24, -1, -1);
  }

  *char v15 = a8;
  swift_storeEnumTagMultiPayload();
  id v25 = a8;
  a6(v15);
  return (*(uint64_t (**)(void *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_1D59E62B4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v34 = a6;
  int v38 = a4;
  uint64_t v37 = a1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v11 = sub_1D5AB5160();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v35 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11);
  uint64_t v36 = (char *)&v29 - v13;
  uint64_t v14 = sub_1D5A3D25C(101);
  if (qword_1EBDE4BB8 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1D5AB4B50();
  __swift_project_value_buffer(v15, (uint64_t)qword_1EBDE49B8);
  uint64_t v16 = sub_1D5AB4B30();
  os_log_type_t v17 = sub_1D5AB5430();
  BOOL v18 = os_log_type_enabled(v16, v17);
  uint64_t v33 = a2;
  if (v18)
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v32 = a7;
    uint64_t v20 = v19;
    uint64_t v29 = swift_slowAlloc();
    uint64_t v39 = v14;
    uint64_t v40 = v29;
    *(_DWORD *)uint64_t v20 = 134218498;
    uint64_t v30 = v11;
    sub_1D5AB5680();
    *(_WORD *)(v20 + 12) = 2080;
    uint64_t v31 = a5;
    uint64_t v21 = sub_1D5AB5810();
    uint64_t v39 = sub_1D5951500(v21, v22, &v40);
    a5 = v31;
    sub_1D5AB5680();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 22) = 2048;
    uint64_t v39 = a5;
    uint64_t v11 = v30;
    sub_1D5AB5680();
    _os_log_impl(&dword_1D5947000, v16, v17, "Converting from Promise to Async-Await. Created at: %ld:%s:%lu", (uint8_t *)v20, 0x20u);
    uint64_t v23 = v29;
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v23, -1, -1);
    uint64_t v24 = v20;
    a7 = v32;
    MEMORY[0x1D945AAC0](v24, -1, -1);
  }

  id v25 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v36, v37, v11);
  unint64_t v26 = (*(unsigned __int8 *)(v12 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = a7;
  *(void *)(v27 + 24) = v14;
  *(void *)(v27 + 32) = v33;
  *(void *)(v27 + 40) = a3;
  *(unsigned char *)(v27 + 48) = v38;
  *(void *)(v27 + 56) = a5;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v27 + v26, v25, v11);
  sub_1D5AB45D0();
  sub_1D5AB45A0();
  return swift_release();
}

uint64_t sub_1D59E6608(uint64_t a1)
{
  return sub_1D59E62B4(a1, *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 16));
}

uint64_t sub_1D59E661C(uint64_t a1)
{
  if (qword_1EBDE4BB8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE49B8);
  uint64_t v3 = sub_1D5AB4B30();
  os_log_type_t v4 = sub_1D5AB5430();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v11 = v6;
    *(_DWORD *)uint64_t v5 = 134218498;
    sub_1D5AB5680();
    *(_WORD *)(v5 + 12) = 2080;
    uint64_t v7 = sub_1D5AB5810();
    sub_1D5951500(v7, v8, &v11);
    sub_1D5AB5680();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 22) = 2048;
    sub_1D5AB5680();
    _os_log_impl(&dword_1D5947000, v3, v4, "Finished P->A conversion: %ld:%s:%lu", (uint8_t *)v5, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v6, -1, -1);
    MEMORY[0x1D945AAC0](v5, -1, -1);
  }

  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v9 = sub_1D5AB5160();
  return sub_1D59966A4(a1, v9);
}

uint64_t sub_1D59E6850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  os_log_type_t v17 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v17;
  *os_log_type_t v17 = v8;
  v17[1] = sub_1D5984480;
  return MEMORY[0x1F4188160](a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1D59E693C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1D59E6974(void *a1)
{
  sub_1D59E4770(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1D59E6994()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D59E69CC(void *a1)
{
  return sub_1D5A2B5C8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1D59E69D4()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1D59E6A80(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v2 + v6;
  uint64_t v8 = (uint64_t *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  return sub_1D5A2B720(a1, a2, v7, v9, v10);
}

uint64_t sub_1D59E6B34()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1D59E6B6C(uint64_t a1, uint64_t a2)
{
  return sub_1D59E6BBC(a1, a2, "Converting from Async-Await to Promise: %ld:%s:%lu", (uint64_t)&unk_1F2DF17A8, (uint64_t)&unk_1EA7264F0);
}

uint64_t sub_1D59E6B94(uint64_t a1, uint64_t a2)
{
  return sub_1D59E6BBC(a1, a2, "Converting from Async-Await to Promise Main: %ld:%s:%lu", (uint64_t)&unk_1F2DF1780, (uint64_t)&unk_1EA7264E0);
}

uint64_t sub_1D59E6BBC(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4, uint64_t a5)
{
  return sub_1D59E5374(a1, a2, *(void *)(v5 + 24), *(void *)(v5 + 32), *(unsigned char *)(v5 + 40), *(void *)(v5 + 48), *(void *)(v5 + 56), *(void *)(v5 + 64), *(void *)(v5 + 16), a3, a4, a5);
}

void sub_1D59E6C08()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1D5984480;
  uint64_t v2 = (char *)&dword_1EA7264D8 + dword_1EA7264D8;
  __asm { BR              X9; sub_1D59E56A0 }
}

void sub_1D59E6D24()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1D598AF68;
  uint64_t v2 = (char *)&dword_1EA7264E8 + dword_1EA7264E8;
  __asm { BR              X9; sub_1D59E4A94 }
}

uint64_t sub_1D59E6E3C()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v1 = sub_1D5AB5160();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 64) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D59E6EEC(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  sub_1D5AB5160();
  return sub_1D59E661C(a1);
}

uint64_t HeartRateMetricUpdated.heartRateMetric.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB2DC0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t HeartRateMetricUpdated.sessionIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for HeartRateMetricUpdated() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for HeartRateMetricUpdated()
{
  uint64_t result = qword_1EA7264F8;
  if (!qword_1EA7264F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t HeartRateMetricUpdated.init(heartRateMetric:sessionIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1D5AB2DC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t result = type metadata accessor for HeartRateMetricUpdated();
  uint64_t v10 = (void *)(a4 + *(int *)(result + 20));
  *uint64_t v10 = a2;
  v10[1] = a3;
  return result;
}

void static HeartRateMetricUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t *initializeBufferWithCopyOfBuffer for HeartRateMetricUpdated(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1D5AB2DC0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for HeartRateMetricUpdated(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB2DC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for HeartRateMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB2DC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HeartRateMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB2DC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for HeartRateMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB2DC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for HeartRateMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB2DC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HeartRateMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D59E74B4);
}

uint64_t sub_1D59E74B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB2DC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for HeartRateMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D59E758C);
}

uint64_t sub_1D59E758C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1D5AB2DC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1D59E764C()
{
  uint64_t result = sub_1D5AB2DC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t AudioFocusPreference.applyingTimestampOffset(_:)()
{
  sub_1D5AB3510();
  return sub_1D5AB3520();
}

uint64_t sub_1D59E773C()
{
  sub_1D5AB3510();
  return sub_1D5AB3520();
}

uint64_t dispatch thunk of MetricClientProtocol.recordMetricClickStream(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of MetricClientProtocol.recordMetricPerformanceStream(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of MetricClientProtocol.recordMetricPlayStream(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of MetricClientProtocol.flushMetrics()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of MetricClientProtocol.queryClientIdentifier(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of MetricClientProtocol.queryUserIdentifier(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of MetricClientProtocol.updateMetricIdentifiers()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of MetricClientProtocol.resetMetricIdentifiers()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of MetricClientProtocol.queryLastBackgroundAccountEvent()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of MetricClientProtocol.recordBackgroundAccountEvent()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of MetricClientProtocol.resetBackgroundAccountEvent()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t PersistenceQueryClauses.predicates.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PersistenceQueryClauses.predicates.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v1 = a1;
  return result;
}

uint64_t (*PersistenceQueryClauses.predicates.modify())()
{
  return nullsub_1;
}

uint64_t PersistenceQueryClauses.limit.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t PersistenceQueryClauses.limit.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 8) = result;
  *(unsigned char *)(v2 + 16) = a2 & 1;
  return result;
}

uint64_t (*PersistenceQueryClauses.limit.modify())()
{
  return nullsub_1;
}

uint64_t PersistenceQueryClauses.offset.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t PersistenceQueryClauses.offset.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 24) = result;
  *(unsigned char *)(v2 + 32) = a2 & 1;
  return result;
}

uint64_t (*PersistenceQueryClauses.offset.modify())()
{
  return nullsub_1;
}

uint64_t PersistenceQueryClauses.sort.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PersistenceQueryClauses.sort.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = a1;
  return result;
}

uint64_t (*PersistenceQueryClauses.sort.modify())()
{
  return nullsub_1;
}

void __swiftcall PersistenceQueryClauses.init(predicates:limit:offset:sort:)(SeymourClient::PersistenceQueryClauses *__return_ptr retstr, Swift::OpaquePointer predicates, Swift::Int_optional limit, Swift::Int_optional offset, Swift::OpaquePointer sort)
{
  retstr->predicates = predicates;
  retstr->limit.value = limit.value;
  retstr->limit.is_nil = limit.is_nil;
  retstr->offset.value = offset.value;
  retstr->offset.is_nil = offset.is_nil;
  retstr->sort = sort;
}

uint64_t PersistenceQueryClauses.hash(into:)(uint64_t a1)
{
  unint64_t v3 = *(void *)v1;
  int v4 = *(unsigned __int8 *)(v1 + 16);
  int v5 = *(unsigned __int8 *)(v1 + 32);
  unint64_t v6 = *(void *)(v1 + 40);
  swift_bridgeObjectRetain();
  sub_1D59E88F0(a1, v3);
  swift_bridgeObjectRelease();
  if (v4 == 1)
  {
    sub_1D5AB5C40();
    if (!v5)
    {
LABEL_3:
      sub_1D5AB5C40();
      sub_1D5AB5C30();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1D5AB5C40();
    sub_1D5AB5C30();
    if (!v5) {
      goto LABEL_3;
    }
  }
  sub_1D5AB5C40();
LABEL_6:
  swift_bridgeObjectRetain();
  sub_1D59E88F0(a1, v6);
  return swift_bridgeObjectRelease();
}

uint64_t PersistenceQueryClauses.hashValue.getter()
{
  unint64_t v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 16);
  int v3 = *(unsigned __int8 *)(v0 + 32);
  unint64_t v4 = *(void *)(v0 + 40);
  sub_1D5AB5C20();
  swift_bridgeObjectRetain();
  sub_1D59E88F0((uint64_t)v6, v1);
  swift_bridgeObjectRelease();
  if (v2 != 1)
  {
    sub_1D5AB5C40();
    sub_1D5AB5C30();
    if (!v3) {
      goto LABEL_3;
    }
LABEL_5:
    sub_1D5AB5C40();
    goto LABEL_6;
  }
  sub_1D5AB5C40();
  if (v3) {
    goto LABEL_5;
  }
LABEL_3:
  sub_1D5AB5C40();
  sub_1D5AB5C30();
LABEL_6:
  swift_bridgeObjectRetain();
  sub_1D59E88F0((uint64_t)v6, v4);
  swift_bridgeObjectRelease();
  return sub_1D5AB5C60();
}

uint64_t sub_1D59E7B98()
{
  unint64_t v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 16);
  int v3 = *(unsigned __int8 *)(v0 + 32);
  unint64_t v4 = *(void *)(v0 + 40);
  sub_1D5AB5C20();
  swift_bridgeObjectRetain();
  sub_1D59E88F0((uint64_t)v6, v1);
  swift_bridgeObjectRelease();
  if (v2 != 1)
  {
    sub_1D5AB5C40();
    sub_1D5AB5C30();
    if (!v3) {
      goto LABEL_3;
    }
LABEL_5:
    sub_1D5AB5C40();
    goto LABEL_6;
  }
  sub_1D5AB5C40();
  if (v3) {
    goto LABEL_5;
  }
LABEL_3:
  sub_1D5AB5C40();
  sub_1D5AB5C30();
LABEL_6:
  swift_bridgeObjectRetain();
  sub_1D59E88F0((uint64_t)v6, v4);
  swift_bridgeObjectRelease();
  return sub_1D5AB5C60();
}

uint64_t sub_1D59E7C8C()
{
  return sub_1D5AB4150();
}

uint64_t sub_1D59E7CC4()
{
  return sub_1D5AB4160();
}

uint64_t sub_1D59E7D24()
{
  return sub_1D5AB4130();
}

uint64_t sub_1D59E7D5C()
{
  return sub_1D5AB4140();
}

uint64_t sub_1D59E7DBC()
{
  return sub_1D5AB4170();
}

uint64_t sub_1D59E7DF4()
{
  return sub_1D5AB4180();
}

uint64_t PersistenceQueryClauses.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB4230();
  uint64_t v5 = MEMORY[0x1E4FBC860];
  uint64_t v32 = MEMORY[0x1E4FBC860];
  uint64_t v6 = *(void *)(v4 + 16);
  if (v6)
  {
    sub_1D59E8AE0(0, &qword_1EA726508);
    sub_1D59E8AE0(0, &qword_1EA726510);
    swift_bridgeObjectRetain();
    uint64_t v7 = (unint64_t *)(v4 + 40);
    while (1)
    {
      uint64_t v9 = *(v7 - 1);
      unint64_t v8 = *v7;
      sub_1D599FF54(v9, *v7);
      uint64_t v10 = sub_1D5AB5450();
      if (v2) {
        break;
      }
      uint64_t v11 = v10;
      uint64_t v12 = sub_1D5956DF8(v9, v8);
      if (v11)
      {
        MEMORY[0x1D9459420](v12);
        if (*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1D5AB5090();
        }
        sub_1D5AB50D0();
        sub_1D5AB5060();
      }
      v7 += 2;
      if (!--v6)
      {
        swift_bridgeObjectRelease();
        uint64_t v13 = v32;
        uint64_t v5 = MEMORY[0x1E4FBC860];
        goto LABEL_12;
      }
    }
    sub_1D5956DF8(v9, v8);
    swift_bridgeObjectRelease();
LABEL_27:
    swift_bridgeObjectRelease();
    uint64_t v25 = sub_1D5AB42D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(a1, v25);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
LABEL_12:
    swift_bridgeObjectRelease();
    char v14 = sub_1D5AB42B0();
    if (v14) {
      uint64_t v15 = sub_1D5AB4270();
    }
    else {
      uint64_t v15 = 0;
    }
    char v30 = sub_1D5AB42C0();
    if (v30) {
      uint64_t v16 = sub_1D5AB4290();
    }
    else {
      uint64_t v16 = 0;
    }
    uint64_t v17 = sub_1D5AB4250();
    uint64_t v33 = v5;
    uint64_t v18 = *(void *)(v17 + 16);
    if (v18)
    {
      char v28 = v14;
      uint64_t v29 = v15;
      sub_1D59E8AE0(0, &qword_1EA726508);
      sub_1D59E8AE0(0, &qword_1EA726518);
      swift_bridgeObjectRetain();
      uint64_t v19 = (unint64_t *)(v17 + 40);
      do
      {
        uint64_t v20 = *(v19 - 1);
        unint64_t v21 = *v19;
        sub_1D599FF54(v20, *v19);
        uint64_t v22 = sub_1D5AB5450();
        if (v2)
        {
          sub_1D5956DF8(v20, v21);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_27;
        }
        uint64_t v23 = v22;
        uint64_t v24 = sub_1D5956DF8(v20, v21);
        if (v23)
        {
          MEMORY[0x1D9459420](v24);
          if (*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1D5AB5090();
          }
          sub_1D5AB50D0();
          sub_1D5AB5060();
        }
        v19 += 2;
        --v18;
      }
      while (v18);
      swift_bridgeObjectRelease();
      uint64_t v5 = v33;
      uint64_t v15 = v29;
      char v14 = v28;
    }
    uint64_t v27 = sub_1D5AB42D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(a1, v27);
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a2 = v13;
    *(void *)(a2 + 8) = v15;
    *(unsigned char *)(a2 + 16) = (v14 ^ 1) & 1;
    *(void *)(a2 + 24) = v16;
    *(unsigned char *)(a2 + 32) = (v30 ^ 1) & 1;
    *(void *)(a2 + 40) = v5;
  }
  return result;
}

uint64_t PersistenceQueryClauses.protobuf()()
{
  return sub_1D5AB4A70();
}

uint64_t sub_1D59E82EC(uint64_t a1, uint64_t *a2)
{
  unint64_t v2 = (unint64_t)a2;
  uint64_t v46 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *a2;
  uint64_t v39 = v4;
  if ((unint64_t)v4 >> 62) {
    goto LABEL_42;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v6 = MEMORY[0x1E4FBC860];
    uint64_t v33 = a1;
    if (!v5) {
      break;
    }
    uint64_t v37 = MEMORY[0x1E4FBC860];
    sub_1D594E83C(0, v5 & ~(v5 >> 63), 0);
    if (v5 < 0)
    {
      __break(1u);
LABEL_46:
      __break(1u);
    }
    unint64_t v32 = v2;
    uint64_t v7 = v37;
    id v34 = self;
    uint64_t v8 = 0;
    while (v5 != v8)
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v9 = (id)MEMORY[0x1D9459C10](v8, v4);
      }
      else {
        id v9 = *(id *)(v4 + 8 * v8 + 32);
      }
      uint64_t v10 = v9;
      id v36 = 0;
      id v11 = objc_msgSend(v34, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v9, 1, &v36);
      id v12 = v36;
      if (!v11)
      {
        uint64_t v17 = v12;
        sub_1D5AB1B50();

        swift_willThrow();
        swift_release();

        uint64_t v18 = &v39;
        return sub_1D59E8EB0((uint64_t)v18);
      }
      a1 = sub_1D5AB1C20();
      uint64_t v14 = v13;

      uint64_t v37 = v7;
      unint64_t v2 = *(void *)(v7 + 16);
      unint64_t v15 = *(void *)(v7 + 24);
      if (v2 >= v15 >> 1)
      {
        sub_1D594E83C(v15 > 1, v2 + 1, 1);
        uint64_t v7 = v37;
      }
      ++v8;
      *(void *)(v7 + 16) = v2 + 1;
      uint64_t v16 = v7 + 16 * v2;
      *(void *)(v16 + 32) = a1;
      *(void *)(v16 + 40) = v14;
      if (v5 == v8)
      {
        sub_1D59E8EB0((uint64_t)&v39);
        a1 = v33;
        unint64_t v2 = v32;
        uint64_t v6 = MEMORY[0x1E4FBC860];
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1D5AB5980();
  }
  sub_1D59E8EB0((uint64_t)&v39);
LABEL_17:
  sub_1D5AB4240();
  sub_1D59E8EDC(v2 + 8, (uint64_t)v41);
  sub_1D59E8EDC((uint64_t)v41, (uint64_t)&v42);
  if ((v43 & 1) == 0)
  {
    if ((v42 & 0x8000000000000000) != 0 || HIDWORD(v42)) {
      goto LABEL_47;
    }
    sub_1D5AB4280();
  }
  sub_1D59E8EDC(v2 + 24, (uint64_t)v40);
  sub_1D59E8EDC((uint64_t)v40, (uint64_t)&v44);
  if (v45) {
    goto LABEL_25;
  }
  if ((v44 & 0x8000000000000000) != 0 || HIDWORD(v44))
  {
LABEL_47:
    uint64_t result = sub_1D5AB5910();
    __break(1u);
    return result;
  }
  sub_1D5AB42A0();
LABEL_25:
  unint64_t v2 = *(void *)(v2 + 40);
  unint64_t v38 = v2;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1D5AB5980();
    if (v4) {
      goto LABEL_27;
    }
LABEL_44:
    sub_1D59E8EB0((uint64_t)&v38);
    return sub_1D5AB4260();
  }
  uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_44;
  }
LABEL_27:
  uint64_t v37 = v6;
  sub_1D594E83C(0, v4 & ~(v4 >> 63), 0);
  if (v4 < 0) {
    goto LABEL_46;
  }
  uint64_t v19 = v37;
  id v35 = self;
  uint64_t v20 = 0;
  while (1)
  {
    if (v4 == v20) {
      goto LABEL_41;
    }
    id v21 = (v2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1D9459C10](v20, v2) : *(id *)(v2 + 8 * v20 + 32);
    uint64_t v22 = v21;
    id v36 = 0;
    id v23 = objc_msgSend(v35, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v21, 1, &v36);
    id v24 = v36;
    if (!v23) {
      break;
    }
    a1 = sub_1D5AB1C20();
    uint64_t v26 = v25;

    uint64_t v37 = v19;
    unint64_t v28 = *(void *)(v19 + 16);
    unint64_t v27 = *(void *)(v19 + 24);
    if (v28 >= v27 >> 1)
    {
      sub_1D594E83C(v27 > 1, v28 + 1, 1);
      uint64_t v19 = v37;
    }
    ++v20;
    *(void *)(v19 + 16) = v28 + 1;
    uint64_t v29 = v19 + 16 * v28;
    *(void *)(v29 + 32) = a1;
    *(void *)(v29 + 40) = v26;
    if (v4 == v20) {
      goto LABEL_44;
    }
  }
  char v30 = v24;
  sub_1D5AB1B50();

  swift_willThrow();
  swift_release();

  uint64_t v18 = (uint64_t *)&v38;
  return sub_1D59E8EB0((uint64_t)v18);
}

uint64_t sub_1D59E87D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return PersistenceQueryClauses.init(_:)(a1, a2);
}

uint64_t sub_1D59E87EC()
{
  return sub_1D5AB4A70();
}

uint64_t sub_1D59E8890()
{
  return sub_1D5AB4180();
}

uint64_t sub_1D59E88A8()
{
  return sub_1D5AB4170();
}

uint64_t sub_1D59E88C0()
{
  return sub_1D5AB4140();
}

uint64_t sub_1D59E88D8()
{
  return sub_1D5AB4130();
}

void sub_1D59E88F0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1D5AB5980();
    swift_bridgeObjectRelease();
    sub_1D5AB5C30();
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1D5AB5980();
    swift_bridgeObjectRelease();
    if (!v3) {
      return;
    }
  }
  else
  {
    sub_1D5AB5C30();
    uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3) {
      return;
    }
  }
  if (v3 < 1)
  {
    __break(1u);
  }
  else if ((a2 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      MEMORY[0x1D9459C10](i, a2);
      sub_1D5AB55C0();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v5 = (void **)(a2 + 32);
    do
    {
      uint64_t v6 = *v5++;
      id v7 = v6;
      sub_1D5AB55C0();

      --v3;
    }
    while (v3);
  }
}

id _s13SeymourClient23PersistenceQueryClausesV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  char v3 = *(unsigned char *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  char v5 = *(unsigned char *)(a1 + 32);
  unint64_t v6 = *(void *)(a1 + 40);
  uint64_t v7 = *(void *)(a2 + 8);
  int v8 = *(unsigned __int8 *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  int v10 = *(unsigned __int8 *)(a2 + 32);
  uint64_t v11 = *(void *)(a2 + 40);
  if ((sub_1D5A13360(*(void *)a1, *(void *)a2) & 1) == 0) {
    return 0;
  }
  if (v3)
  {
    if (!v8) {
      return 0;
    }
  }
  else
  {
    if (v2 == v7) {
      char v12 = v8;
    }
    else {
      char v12 = 1;
    }
    if (v12) {
      return 0;
    }
  }
  if (v5)
  {
    if (!v10) {
      return 0;
    }
  }
  else
  {
    if (v4 == v9) {
      char v14 = v10;
    }
    else {
      char v14 = 1;
    }
    if (v14) {
      return 0;
    }
  }
  return sub_1D5A13374(v6, v11);
}

uint64_t sub_1D59E8AE0(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1D59E8B1C(uint64_t a1)
{
  return sub_1D59E82EC(a1, *(uint64_t **)(v1 + 16));
}

unint64_t sub_1D59E8B3C()
{
  unint64_t result = qword_1EA726528;
  if (!qword_1EA726528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726528);
  }
  return result;
}

uint64_t sub_1D59E8B90()
{
  return sub_1D59E8BF8(&qword_1EA726520);
}

uint64_t sub_1D59E8BC4()
{
  return sub_1D59E8BF8(&qword_1EA726530);
}

uint64_t sub_1D59E8BF8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1D5AB42D0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for PersistenceQueryClauses()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PersistenceQueryClauses(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PersistenceQueryClauses(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PersistenceQueryClauses(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PersistenceQueryClauses(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PersistenceQueryClauses(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PersistenceQueryClauses()
{
  return &type metadata for PersistenceQueryClauses;
}

unint64_t sub_1D59E8E5C()
{
  unint64_t result = qword_1EA726538;
  if (!qword_1EA726538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726538);
  }
  return result;
}

uint64_t sub_1D59E8EB0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1D59E8EDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726540);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D59E8F44(uint64_t a1)
{
  return sub_1D59E8B1C(a1);
}

id ActivityRingsQueryProvider.makeActivityRingsQuery(handler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  id v5 = objc_allocWithZone(MEMORY[0x1E4F2B888]);
  v9[4] = sub_1D59E9670;
  v9[5] = v4;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 1107296256;
  void v9[2] = sub_1D59E9770;
  v9[3] = &block_descriptor_10;
  unint64_t v6 = _Block_copy(v9);
  swift_retain();
  id v7 = objc_msgSend(v5, sel_initWithUpdateHandler_, v6);
  _Block_release(v6);
  swift_release();
  return v7;
}

uint64_t sub_1D59E9058(uint64_t a1, void *a2, void *a3, void (*a4)(uint64_t *), uint64_t a5)
{
  v48[1] = a5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7251B8);
  MEMORY[0x1F4188790](v8 - 8);
  int v10 = (char *)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726548);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (void *)((char *)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_1D5AB2490();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    if (a3)
    {
      unint64_t v27 = a3;
    }
    else
    {
      sub_1D59E9834();
      unint64_t v27 = (void *)swift_allocError();
      *id v36 = 1;
    }
    id v37 = a3;
    if (qword_1EBDE3740 != -1) {
      swift_once();
    }
    uint64_t v38 = sub_1D5AB4B50();
    __swift_project_value_buffer(v38, (uint64_t)qword_1EBDE37B0);
    id v39 = v27;
    id v40 = v27;
    uint64_t v41 = sub_1D5AB4B30();
    os_log_type_t v42 = sub_1D5AB5410();
    if (os_log_type_enabled(v41, v42))
    {
      char v43 = (uint8_t *)swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      uint64_t v49 = v44;
      v48[0] = a4;
      *(_DWORD *)char v43 = 136315138;
      swift_getErrorValue();
      uint64_t v45 = MEMORY[0x1D9459FA0](v48[4], v48[5]);
      v48[2] = sub_1D5951500(v45, v46, &v49);
      a4 = (void (*)(uint64_t *))v48[0];
      sub_1D5AB5680();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D5947000, v41, v42, "ActivityRingsQueryProvider - failed to get rings %s", v43, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v44, -1, -1);
      MEMORY[0x1D945AAC0](v43, -1, -1);
    }
    else
    {
    }
    *uint64_t v13 = (uint64_t)v27;
    swift_storeEnumTagMultiPayload();
    id v47 = v27;
    a4(v13);

    return sub_1D59E9888((uint64_t)v13);
  }
  id v18 = a2;
  if (objc_msgSend(v18, sel__isDataLoading))
  {
    if (qword_1EBDE3740 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1D5AB4B50();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EBDE37B0);
    uint64_t v20 = sub_1D5AB4B30();
    os_log_type_t v21 = sub_1D5AB5410();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = a4;
      id v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v23 = 0;
      _os_log_impl(&dword_1D5947000, v20, v21, "ActivityRingsQueryProvider - data is loading", v23, 2u);
      id v24 = v23;
      a4 = v22;
      MEMORY[0x1D945AAC0](v24, -1, -1);
    }

    sub_1D59E9834();
    uint64_t v25 = swift_allocError();
    *uint64_t v26 = 0;
    *uint64_t v13 = v25;
    swift_storeEnumTagMultiPayload();
    a4(v13);

    return sub_1D59E9888((uint64_t)v13);
  }
  if (qword_1EBDE3740 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_1D5AB4B50();
  __swift_project_value_buffer(v28, (uint64_t)qword_1EBDE37B0);
  uint64_t v29 = sub_1D5AB4B30();
  os_log_type_t v30 = sub_1D5AB5430();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    v48[0] = a4;
    unint64_t v32 = v31;
    *(_WORD *)uint64_t v31 = 0;
    _os_log_impl(&dword_1D5947000, v29, v30, "ActivityRingsQueryProvider - results received", v31, 2u);
    uint64_t v33 = v32;
    a4 = (void (*)(uint64_t *))v48[0];
    MEMORY[0x1D945AAC0](v33, -1, -1);
  }

  HKActivitySummary.activityRings()((uint64_t)v17);
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v10, v17, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
  id v34 = a3;
  sub_1D5AB5C80();
  a4(v13);

  sub_1D59E9888((uint64_t)v13);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

uint64_t sub_1D59E9638()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D59E9670(uint64_t a1, void *a2, void *a3)
{
  return sub_1D59E9058(a1, a2, a3, *(void (**)(uint64_t *))(v3 + 16), *(void *)(v3 + 24));
}

id sub_1D59E9678(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  id v5 = objc_allocWithZone(MEMORY[0x1E4F2B888]);
  v9[4] = sub_1D59E98F0;
  v9[5] = v4;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 1107296256;
  void v9[2] = sub_1D59E9770;
  v9[3] = &block_descriptor_7_2;
  unint64_t v6 = _Block_copy(v9);
  swift_retain();
  id v7 = objc_msgSend(v5, sel_initWithUpdateHandler_, v6);
  _Block_release(v6);
  swift_release();
  return v7;
}

void sub_1D59E9770(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = *(void (**)(id, void *, void *))(a1 + 32);
  swift_retain();
  id v10 = a2;
  id v8 = a3;
  id v9 = a4;
  v7(v10, a3, a4);
  swift_release();
}

uint64_t dispatch thunk of ActivityRingsQueryProviderProtocol.makeActivityRingsQuery(handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

ValueMetadata *type metadata accessor for ActivityRingsQueryProvider()
{
  return &type metadata for ActivityRingsQueryProvider;
}

unint64_t sub_1D59E9834()
{
  unint64_t result = qword_1EA726550;
  if (!qword_1EA726550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726550);
  }
  return result;
}

uint64_t sub_1D59E9888(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726548);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static Session.+ infix(_:_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v263 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250D0);
  uint64_t v2 = MEMORY[0x1F4188790](v1 - 8);
  uint64_t v262 = (char *)&v205 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v260 = (char *)&v205 - v5;
  MEMORY[0x1F4188790](v4);
  uint64_t v261 = (uint64_t)&v205 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727930);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v259 = (char *)&v205 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v257 = (char *)&v205 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v258 = (uint64_t)&v205 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250D8);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v256 = (char *)&v205 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v254 = (char *)&v205 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v255 = (uint64_t)&v205 - v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250E0);
  uint64_t v20 = MEMORY[0x1F4188790](v19 - 8);
  uint64_t v253 = (char *)&v205 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v251 = (char *)&v205 - v23;
  MEMORY[0x1F4188790](v22);
  uint64_t v252 = (uint64_t)&v205 - v24;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250E8);
  uint64_t v26 = MEMORY[0x1F4188790](v25 - 8);
  uint64_t v250 = (char *)&v205 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v248 = (char *)&v205 - v29;
  MEMORY[0x1F4188790](v28);
  uint64_t v249 = (uint64_t)&v205 - v30;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250F0);
  uint64_t v32 = MEMORY[0x1F4188790](v31 - 8);
  v247 = (char *)&v205 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x1F4188790](v32);
  uint64_t v245 = (char *)&v205 - v35;
  MEMORY[0x1F4188790](v34);
  uint64_t v246 = (uint64_t)&v205 - v36;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7257D8);
  MEMORY[0x1F4188790](v37 - 8);
  uint64_t v244 = (char *)&v205 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250F8);
  uint64_t v40 = MEMORY[0x1F4188790](v39 - 8);
  uint64_t v243 = (char *)&v205 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = MEMORY[0x1F4188790](v40);
  uint64_t v242 = (char *)&v205 - v43;
  MEMORY[0x1F4188790](v42);
  uint64_t v281 = (uint64_t)&v205 - v44;
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA727900);
  MEMORY[0x1F4188790](v45 - 8);
  uint64_t v280 = (char *)&v205 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725100);
  uint64_t v48 = MEMORY[0x1F4188790](v47 - 8);
  uint64_t v241 = (char *)&v205 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = MEMORY[0x1F4188790](v48);
  uint64_t v240 = (char *)&v205 - v51;
  MEMORY[0x1F4188790](v50);
  uint64_t v279 = (uint64_t)&v205 - v52;
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725110);
  uint64_t v54 = MEMORY[0x1F4188790](v53 - 8);
  uint64_t v239 = (char *)&v205 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = MEMORY[0x1F4188790](v54);
  uint64_t v238 = (char *)&v205 - v57;
  MEMORY[0x1F4188790](v56);
  uint64_t v278 = (uint64_t)&v205 - v58;
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725118);
  uint64_t v60 = MEMORY[0x1F4188790](v59 - 8);
  uint64_t v237 = (char *)&v205 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = MEMORY[0x1F4188790](v60);
  uint64_t v236 = (char *)&v205 - v63;
  MEMORY[0x1F4188790](v62);
  uint64_t v277 = (uint64_t)&v205 - v64;
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725120);
  uint64_t v66 = MEMORY[0x1F4188790](v65 - 8);
  uint64_t v235 = (char *)&v205 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = MEMORY[0x1F4188790](v66);
  uint64_t v234 = (char *)&v205 - v69;
  MEMORY[0x1F4188790](v68);
  uint64_t v276 = (uint64_t)&v205 - v70;
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725128);
  uint64_t v72 = MEMORY[0x1F4188790](v71 - 8);
  uint64_t v227 = (char *)&v205 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = MEMORY[0x1F4188790](v72);
  uint64_t v225 = (char *)&v205 - v75;
  MEMORY[0x1F4188790](v74);
  uint64_t v275 = (uint64_t)&v205 - v76;
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725130);
  uint64_t v78 = MEMORY[0x1F4188790](v77 - 8);
  uint64_t v223 = (char *)&v205 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = MEMORY[0x1F4188790](v78);
  uint64_t v222 = (char *)&v205 - v81;
  MEMORY[0x1F4188790](v80);
  uint64_t v274 = (uint64_t)&v205 - v82;
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725138);
  uint64_t v84 = MEMORY[0x1F4188790](v83 - 8);
  uint64_t v221 = (char *)&v205 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = MEMORY[0x1F4188790](v84);
  uint64_t v220 = (char *)&v205 - v87;
  MEMORY[0x1F4188790](v86);
  uint64_t v273 = (uint64_t)&v205 - v88;
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725140);
  uint64_t v90 = MEMORY[0x1F4188790](v89 - 8);
  uint64_t v219 = (char *)&v205 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = MEMORY[0x1F4188790](v90);
  uint64_t v218 = (char *)&v205 - v93;
  MEMORY[0x1F4188790](v92);
  uint64_t v272 = (uint64_t)&v205 - v94;
  uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725148);
  uint64_t v96 = MEMORY[0x1F4188790](v95 - 8);
  uint64_t v217 = (char *)&v205 - ((v97 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = MEMORY[0x1F4188790](v96);
  uint64_t v216 = (char *)&v205 - v99;
  MEMORY[0x1F4188790](v98);
  uint64_t v271 = (uint64_t)&v205 - v100;
  uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725150);
  uint64_t v102 = MEMORY[0x1F4188790](v101 - 8);
  uint64_t v215 = (char *)&v205 - ((v103 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = MEMORY[0x1F4188790](v102);
  uint64_t v214 = (char *)&v205 - v105;
  MEMORY[0x1F4188790](v104);
  uint64_t v270 = (uint64_t)&v205 - v106;
  uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725158);
  uint64_t v108 = MEMORY[0x1F4188790](v107 - 8);
  uint64_t v213 = (char *)&v205 - ((v109 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = MEMORY[0x1F4188790](v108);
  uint64_t v212 = (char *)&v205 - v111;
  MEMORY[0x1F4188790](v110);
  uint64_t v269 = (uint64_t)&v205 - v112;
  uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725178);
  uint64_t v114 = MEMORY[0x1F4188790](v113 - 8);
  uint64_t v211 = (char *)&v205 - ((v115 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = MEMORY[0x1F4188790](v114);
  uint64_t v210 = (char *)&v205 - v117;
  MEMORY[0x1F4188790](v116);
  uint64_t v268 = (uint64_t)&v205 - v118;
  uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725180);
  uint64_t v120 = MEMORY[0x1F4188790](v119 - 8);
  uint64_t v209 = (char *)&v205 - ((v121 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = MEMORY[0x1F4188790](v120);
  uint64_t v208 = (char *)&v205 - v123;
  MEMORY[0x1F4188790](v122);
  uint64_t v267 = (uint64_t)&v205 - v124;
  uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725188);
  uint64_t v126 = MEMORY[0x1F4188790](v125 - 8);
  uint64_t v207 = (char *)&v205 - ((v127 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = MEMORY[0x1F4188790](v126);
  uint64_t v206 = (char *)&v205 - v129;
  MEMORY[0x1F4188790](v128);
  uint64_t v266 = (uint64_t)&v205 - v130;
  uint64_t v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725190);
  uint64_t v132 = MEMORY[0x1F4188790](v131 - 8);
  uint64_t v134 = (char *)&v205 - ((v133 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = MEMORY[0x1F4188790](v132);
  uint64_t v137 = (char *)&v205 - v136;
  MEMORY[0x1F4188790](v135);
  uint64_t v265 = (uint64_t)&v205 - v138;
  uint64_t v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725198);
  uint64_t v140 = MEMORY[0x1F4188790](v139 - 8);
  uint64_t v142 = (char *)&v205 - ((v141 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = MEMORY[0x1F4188790](v140);
  uint64_t v145 = (char *)&v205 - v144;
  MEMORY[0x1F4188790](v143);
  uint64_t v264 = (uint64_t)&v205 - v146;
  uint64_t v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7251B8);
  uint64_t v148 = MEMORY[0x1F4188790](v147 - 8);
  uint64_t v150 = (char *)&v205 - ((v149 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = MEMORY[0x1F4188790](v148);
  uint64_t v153 = (char *)&v205 - v152;
  MEMORY[0x1F4188790](v151);
  uint64_t v155 = (char *)&v205 - v154;
  uint64_t v224 = (char *)&v205 - v154;
  uint64_t v156 = sub_1D5AB2AC0();
  MEMORY[0x1F4188790](v156 - 8);
  uint64_t v231 = (char *)&v205 - ((v157 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v233 = sub_1D5AB4610();
  uint64_t v232 = v158;
  sub_1D5AB4690();
  uint64_t v230 = sub_1D5AB4770();
  uint64_t v229 = v159;
  uint64_t v228 = sub_1D5AB4720();
  uint64_t v226 = sub_1D5AB4740();
  sub_1D5AB4670();
  sub_1D5AB2680();
  sub_1D59EB6E0((uint64_t)v153, (uint64_t)v150, &qword_1EA7251B8, MEMORY[0x1E4F9C4B0], MEMORY[0x1E4F9C4A8], (uint64_t)v155);
  sub_1D594F53C((uint64_t)v150, &qword_1EA7251B8);
  sub_1D594F53C((uint64_t)v153, &qword_1EA7251B8);
  sub_1D5AB4750();
  sub_1D5AB2760();
  sub_1D59EB6E0((uint64_t)v145, (uint64_t)v142, &qword_1EA725198, MEMORY[0x1E4F9D630], MEMORY[0x1E4F9D628], v264);
  sub_1D594F53C((uint64_t)v142, &qword_1EA725198);
  sub_1D594F53C((uint64_t)v145, &qword_1EA725198);
  sub_1D5AB4680();
  sub_1D5AB2690();
  sub_1D59EB6E0((uint64_t)v137, (uint64_t)v134, &qword_1EA725190, MEMORY[0x1E4F9C518], MEMORY[0x1E4F9C510], v265);
  sub_1D594F53C((uint64_t)v134, &qword_1EA725190);
  sub_1D594F53C((uint64_t)v137, &qword_1EA725190);
  uint64_t v160 = (uint64_t)v206;
  sub_1D5AB47F0();
  uint64_t v161 = (uint64_t)v207;
  sub_1D5AB27D0();
  sub_1D59EB6E0(v160, v161, &qword_1EA725188, MEMORY[0x1E4F9F040], MEMORY[0x1E4F9F038], v266);
  sub_1D594F53C(v161, &qword_1EA725188);
  sub_1D594F53C(v160, &qword_1EA725188);
  uint64_t v162 = (uint64_t)v208;
  sub_1D5AB46D0();
  uint64_t v163 = (uint64_t)v209;
  sub_1D5AB26E0();
  sub_1D59EB99C(v162, v163, &qword_1EA725180, MEMORY[0x1E4F9C9C8], MEMORY[0x1E4F9C9C0], v267);
  sub_1D594F53C(v163, &qword_1EA725180);
  sub_1D594F53C(v162, &qword_1EA725180);
  uint64_t v164 = (uint64_t)v210;
  sub_1D5AB4730();
  uint64_t v165 = (uint64_t)v211;
  sub_1D5AB2750();
  sub_1D59EB6E0(v164, v165, &qword_1EA725178, MEMORY[0x1E4F9D238], MEMORY[0x1E4F9D230], v268);
  sub_1D594F53C(v165, &qword_1EA725178);
  sub_1D594F53C(v164, &qword_1EA725178);
  uint64_t v166 = (uint64_t)v212;
  sub_1D5AB46A0();
  uint64_t v167 = (uint64_t)v213;
  sub_1D5AB26B0();
  sub_1D59EB6E0(v166, v167, &qword_1EA725158, MEMORY[0x1E4F9C778], MEMORY[0x1E4F9C770], v269);
  sub_1D594F53C(v167, &qword_1EA725158);
  sub_1D594F53C(v166, &qword_1EA725158);
  uint64_t v168 = (uint64_t)v214;
  sub_1D5AB4650();
  uint64_t v169 = (uint64_t)v215;
  sub_1D5AB2670();
  sub_1D59EB6E0(v168, v169, &qword_1EA725150, MEMORY[0x1E4F9C398], MEMORY[0x1E4F9C390], v270);
  sub_1D594F53C(v169, &qword_1EA725150);
  sub_1D594F53C(v168, &qword_1EA725150);
  uint64_t v170 = (uint64_t)v216;
  sub_1D5AB4710();
  uint64_t v171 = (uint64_t)v217;
  sub_1D5AB2710();
  sub_1D59EB6E0(v170, v171, &qword_1EA725148, MEMORY[0x1E4F9CC80], MEMORY[0x1E4F9CC68], v271);
  sub_1D594F53C(v171, &qword_1EA725148);
  sub_1D594F53C(v170, &qword_1EA725148);
  uint64_t v172 = (uint64_t)v218;
  sub_1D5AB46E0();
  uint64_t v173 = (uint64_t)v219;
  sub_1D5AB26F0();
  sub_1D59EB6E0(v172, v173, &qword_1EA725140, MEMORY[0x1E4F9CAA0], MEMORY[0x1E4F9CA98], v272);
  sub_1D594F53C(v173, &qword_1EA725140);
  sub_1D594F53C(v172, &qword_1EA725140);
  uint64_t v174 = (uint64_t)v220;
  sub_1D5AB4620();
  uint64_t v175 = (uint64_t)v221;
  sub_1D5AB2630();
  sub_1D59EB6E0(v174, v175, &qword_1EA725138, MEMORY[0x1E4F9C000], MEMORY[0x1E4F9BFE0], v273);
  sub_1D594F53C(v175, &qword_1EA725138);
  sub_1D594F53C(v174, &qword_1EA725138);
  uint64_t v176 = (uint64_t)v222;
  sub_1D5AB4760();
  uint64_t v177 = (uint64_t)v223;
  sub_1D5AB2770();
  sub_1D59EB6E0(v176, v177, &qword_1EA725130, MEMORY[0x1E4F9D770], MEMORY[0x1E4F9D758], v274);
  sub_1D594F53C(v177, &qword_1EA725130);
  sub_1D594F53C(v176, &qword_1EA725130);
  uint64_t v178 = (uint64_t)v225;
  sub_1D5AB45E0();
  uint64_t v179 = (uint64_t)v227;
  sub_1D5AB2610();
  sub_1D59EB6E0(v178, v179, &qword_1EA725128, MEMORY[0x1E4F9CD80], MEMORY[0x1E4F9CD68], v275);
  sub_1D594F53C(v179, &qword_1EA725128);
  sub_1D594F53C(v178, &qword_1EA725128);
  uint64_t v180 = (uint64_t)v234;
  sub_1D5AB45F0();
  uint64_t v181 = (uint64_t)v235;
  sub_1D5AB2620();
  sub_1D59EB6E0(v180, v181, &qword_1EA725120, MEMORY[0x1E4F9E470], MEMORY[0x1E4F9E468], v276);
  sub_1D594F53C(v181, &qword_1EA725120);
  sub_1D594F53C(v180, &qword_1EA725120);
  uint64_t v182 = (uint64_t)v236;
  sub_1D5AB4630();
  uint64_t v183 = (uint64_t)v237;
  sub_1D5AB2640();
  sub_1D59EB6E0(v182, v183, &qword_1EA725118, MEMORY[0x1E4F9C080], MEMORY[0x1E4F9C078], v277);
  sub_1D594F53C(v183, &qword_1EA725118);
  sub_1D594F53C(v182, &qword_1EA725118);
  uint64_t v184 = (uint64_t)v238;
  sub_1D5AB47E0();
  uint64_t v185 = (uint64_t)v239;
  sub_1D5AB27C0();
  sub_1D59EB6E0(v184, v185, &qword_1EA725110, MEMORY[0x1E4F9EEA0], MEMORY[0x1E4F9EE50], v278);
  sub_1D594F53C(v185, &qword_1EA725110);
  sub_1D594F53C(v184, &qword_1EA725110);
  uint64_t v186 = (uint64_t)v240;
  sub_1D5AB46B0();
  uint64_t v187 = (uint64_t)v241;
  sub_1D5AB26C0();
  sub_1D59EB6E0(v186, v187, &qword_1EA725100, MEMORY[0x1E4F9C790], MEMORY[0x1E4F9C788], v279);
  sub_1D594F53C(v187, &qword_1EA725100);
  sub_1D594F53C(v186, &qword_1EA725100);
  sub_1D5AB46F0();
  uint64_t v188 = (uint64_t)v242;
  sub_1D5AB4780();
  uint64_t v189 = (uint64_t)v243;
  sub_1D5AB2780();
  sub_1D59EB6E0(v188, v189, &qword_1EA7250F8, MEMORY[0x1E4F9DF98], MEMORY[0x1E4F9DF90], v281);
  sub_1D594F53C(v189, &qword_1EA7250F8);
  sub_1D594F53C(v188, &qword_1EA7250F8);
  uint64_t v190 = sub_1D5AB4660();
  uint64_t v191 = (uint64_t)v244;
  sub_1D5AB2650();
  uint64_t v243 = (char *)sub_1D59EBC58(v190, v191);
  swift_bridgeObjectRelease();
  sub_1D594F53C(v191, &qword_1EA7257D8);
  uint64_t v192 = (uint64_t)v245;
  sub_1D5AB4640();
  uint64_t v193 = (uint64_t)v247;
  sub_1D5AB2660();
  sub_1D59EB99C(v192, v193, &qword_1EA7250F0, MEMORY[0x1E4F9C278], MEMORY[0x1E4F9C270], v246);
  sub_1D594F53C(v193, &qword_1EA7250F0);
  sub_1D594F53C(v192, &qword_1EA7250F0);
  uint64_t v194 = (uint64_t)v248;
  sub_1D5AB4700();
  uint64_t v195 = (uint64_t)v250;
  sub_1D5AB2700();
  sub_1D59EB6E0(v194, v195, &qword_1EA7250E8, MEMORY[0x1E4F9CB18], MEMORY[0x1E4F9CB10], v249);
  sub_1D594F53C(v195, &qword_1EA7250E8);
  sub_1D594F53C(v194, &qword_1EA7250E8);
  uint64_t v196 = (uint64_t)v251;
  sub_1D5AB46C0();
  uint64_t v197 = (uint64_t)v253;
  sub_1D5AB26D0();
  sub_1D59EB6E0(v196, v197, &qword_1EA7250E0, MEMORY[0x1E4F9D2B8], MEMORY[0x1E4F9D2B0], v252);
  sub_1D594F53C(v197, &qword_1EA7250E0);
  sub_1D594F53C(v196, &qword_1EA7250E0);
  uint64_t v198 = (uint64_t)v254;
  sub_1D5AB47A0();
  uint64_t v199 = (uint64_t)v256;
  sub_1D5AB27A0();
  sub_1D59EB6E0(v198, v199, &qword_1EA7250D8, MEMORY[0x1E4F9E1F0], MEMORY[0x1E4F9E1E8], v255);
  sub_1D594F53C(v199, &qword_1EA7250D8);
  sub_1D594F53C(v198, &qword_1EA7250D8);
  uint64_t v200 = (uint64_t)v257;
  sub_1D5AB47C0();
  uint64_t v201 = (uint64_t)v259;
  sub_1D5AB27B0();
  sub_1D59EB6E0(v200, v201, &qword_1EA727930, MEMORY[0x1E4F9EDC0], MEMORY[0x1E4F9EDA0], v258);
  sub_1D594F53C(v201, &qword_1EA727930);
  sub_1D594F53C(v200, &qword_1EA727930);
  uint64_t v202 = (uint64_t)v260;
  sub_1D5AB4790();
  uint64_t v203 = (uint64_t)v262;
  sub_1D5AB2790();
  sub_1D59EB6E0(v202, v203, &qword_1EA7250D0, MEMORY[0x1E4F9E028], MEMORY[0x1E4F9E008], v261);
  sub_1D594F53C(v203, &qword_1EA7250D0);
  sub_1D594F53C(v202, &qword_1EA7250D0);
  return sub_1D5AB4600();
}

uint64_t sub_1D59EB6E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t (*a4)(void)@<X3>, double (*a5)(void)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v36 = a5;
  uint64_t v37 = a2;
  uint64_t v38 = a6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v35 - v13;
  uint64_t v15 = a4(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v35 - v20;
  sub_1D596E6CC(a1, (uint64_t)v14, a3);
  uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v22(v14, 1, v15) == 1)
  {
    sub_1D594F53C((uint64_t)v14, a3);
    return sub_1D596E6CC(v37, v38, a3);
  }
  else
  {
    uint64_t v24 = v14;
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v25(v21, v24, v15);
    sub_1D596E6CC(v37, (uint64_t)v12, a3);
    if (v22(v12, 1, v15) == 1)
    {
      sub_1D594F53C((uint64_t)v12, a3);
      uint64_t v26 = v38;
      uint64_t v27 = v38;
      uint64_t v28 = v21;
    }
    else
    {
      uint64_t v29 = ((uint64_t (*)(char *, char *, uint64_t))v25)(v19, v12, v15);
      uint64_t v30 = v36;
      double v31 = ((double (*)(uint64_t))v36)(v29);
      double v32 = v30();
      if (v32 >= v31) {
        uint64_t v33 = v19;
      }
      else {
        uint64_t v33 = v21;
      }
      if (v32 >= v31) {
        uint64_t v34 = v21;
      }
      else {
        uint64_t v34 = v19;
      }
      (*(void (**)(char *, uint64_t))(v16 + 8))(v33, v15);
      uint64_t v26 = v38;
      uint64_t v27 = v38;
      uint64_t v28 = v34;
    }
    v25((char *)v27, v28, v15);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(v26, 0, 1, v15);
  }
}

uint64_t sub_1D59EB99C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t (*a4)(void)@<X3>, double (*a5)(void)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v36 = a5;
  uint64_t v37 = a2;
  uint64_t v38 = a6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v35 - v13;
  uint64_t v15 = a4(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v35 - v20;
  sub_1D596E6CC(a1, (uint64_t)v14, a3);
  uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v22(v14, 1, v15) == 1)
  {
    sub_1D594F53C((uint64_t)v14, a3);
    return sub_1D596E6CC(v37, v38, a3);
  }
  else
  {
    uint64_t v24 = v14;
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v25(v21, v24, v15);
    sub_1D596E6CC(v37, (uint64_t)v12, a3);
    if (v22(v12, 1, v15) == 1)
    {
      sub_1D594F53C((uint64_t)v12, a3);
      uint64_t v26 = v38;
      uint64_t v27 = v38;
      uint64_t v28 = v21;
    }
    else
    {
      uint64_t v29 = ((uint64_t (*)(char *, char *, uint64_t))v25)(v19, v12, v15);
      uint64_t v30 = v36;
      double v31 = ((double (*)(uint64_t))v36)(v29);
      double v32 = v30();
      if (v31 >= v32) {
        uint64_t v33 = v19;
      }
      else {
        uint64_t v33 = v21;
      }
      if (v31 >= v32) {
        uint64_t v34 = v21;
      }
      else {
        uint64_t v34 = v19;
      }
      (*(void (**)(char *, uint64_t))(v16 + 8))(v33, v15);
      uint64_t v26 = v38;
      uint64_t v27 = v38;
      uint64_t v28 = v34;
    }
    v25((char *)v27, v28, v15);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(v26, 0, 1, v15);
  }
}

uint64_t sub_1D59EBC58(uint64_t a1, uint64_t a2)
{
  uint64_t v27 = a2;
  uint64_t v29 = a1;
  uint64_t v2 = sub_1D5AB2150();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v26 - v7;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7257D8);
  uint64_t v9 = *(void *)(v28 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v28);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v26 - v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7266B8);
  unint64_t v15 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1D5AB90F0;
  uint64_t v17 = v16 + v15;
  uint64_t v18 = v3;
  sub_1D596E6CC(v27, v17, &qword_1EA7257D8);
  sub_1D596E6CC(v17, (uint64_t)v14, &qword_1EA7257D8);
  sub_1D59F2864((uint64_t)v14, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v12, 1, v2) == 1)
  {
    sub_1D594F53C((uint64_t)v12, &qword_1EA7257D8);
    uint64_t v19 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v20(v8, v12, v2);
    v20(v6, v8, v2);
    uint64_t v19 = MEMORY[0x1E4FBC860];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v19 = sub_1D5A76998(0, *(void *)(v19 + 16) + 1, 1, v19);
    }
    unint64_t v22 = *(void *)(v19 + 16);
    unint64_t v21 = *(void *)(v19 + 24);
    if (v22 >= v21 >> 1) {
      uint64_t v19 = sub_1D5A76998(v21 > 1, v22 + 1, 1, v19);
    }
    *(void *)(v19 + 16) = v22 + 1;
    v20((char *)(v19+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(void *)(v18 + 72) * v22), v6, v2);
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v23 = v29;
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_1D59F28CC(v19, v23);
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t static Session.- infix(_:_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v255 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727930);
  uint64_t v2 = MEMORY[0x1F4188790](v1 - 8);
  uint64_t v254 = (char *)&v200 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v252 = (char *)&v200 - v5;
  MEMORY[0x1F4188790](v4);
  uint64_t v253 = (uint64_t)&v200 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250D8);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v251 = (char *)&v200 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v249 = (char *)&v200 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v250 = (uint64_t)&v200 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250D0);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v248 = (char *)&v200 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v246 = (char *)&v200 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v247 = (uint64_t)&v200 - v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250E0);
  uint64_t v20 = MEMORY[0x1F4188790](v19 - 8);
  uint64_t v245 = (char *)&v200 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v243 = (char *)&v200 - v23;
  MEMORY[0x1F4188790](v22);
  uint64_t v244 = (uint64_t)&v200 - v24;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250E8);
  uint64_t v26 = MEMORY[0x1F4188790](v25 - 8);
  uint64_t v242 = (char *)&v200 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v240 = (char *)&v200 - v29;
  MEMORY[0x1F4188790](v28);
  uint64_t v241 = (uint64_t)&v200 - v30;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250F0);
  uint64_t v32 = MEMORY[0x1F4188790](v31 - 8);
  uint64_t v239 = (char *)&v200 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x1F4188790](v32);
  uint64_t v237 = (char *)&v200 - v35;
  MEMORY[0x1F4188790](v34);
  uint64_t v238 = (uint64_t)&v200 - v36;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7257D8);
  MEMORY[0x1F4188790](v37 - 8);
  uint64_t v272 = (char *)&v200 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250F8);
  uint64_t v40 = MEMORY[0x1F4188790](v39 - 8);
  uint64_t v236 = (char *)&v200 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = MEMORY[0x1F4188790](v40);
  uint64_t v235 = (char *)&v200 - v43;
  MEMORY[0x1F4188790](v42);
  uint64_t v271 = (uint64_t)&v200 - v44;
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725110);
  uint64_t v46 = MEMORY[0x1F4188790](v45 - 8);
  uint64_t v234 = (char *)&v200 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = MEMORY[0x1F4188790](v46);
  uint64_t v233 = (char *)&v200 - v49;
  MEMORY[0x1F4188790](v48);
  uint64_t v270 = (uint64_t)&v200 - v50;
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725100);
  uint64_t v52 = MEMORY[0x1F4188790](v51 - 8);
  uint64_t v232 = (char *)&v200 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = MEMORY[0x1F4188790](v52);
  uint64_t v231 = (char *)&v200 - v55;
  MEMORY[0x1F4188790](v54);
  uint64_t v269 = (uint64_t)&v200 - v56;
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725118);
  uint64_t v58 = MEMORY[0x1F4188790](v57 - 8);
  uint64_t v230 = (char *)&v200 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = MEMORY[0x1F4188790](v58);
  uint64_t v229 = (char *)&v200 - v61;
  MEMORY[0x1F4188790](v60);
  uint64_t v268 = (uint64_t)&v200 - v62;
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725120);
  uint64_t v64 = MEMORY[0x1F4188790](v63 - 8);
  uint64_t v228 = (char *)&v200 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = MEMORY[0x1F4188790](v64);
  uint64_t v227 = (char *)&v200 - v67;
  MEMORY[0x1F4188790](v66);
  uint64_t v267 = (uint64_t)&v200 - v68;
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725128);
  uint64_t v70 = MEMORY[0x1F4188790](v69 - 8);
  uint64_t v226 = (char *)&v200 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = MEMORY[0x1F4188790](v70);
  uint64_t v225 = (char *)&v200 - v73;
  MEMORY[0x1F4188790](v72);
  uint64_t v266 = (uint64_t)&v200 - v74;
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725130);
  uint64_t v76 = MEMORY[0x1F4188790](v75 - 8);
  uint64_t v221 = (char *)&v200 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = MEMORY[0x1F4188790](v76);
  uint64_t v219 = (char *)&v200 - v79;
  MEMORY[0x1F4188790](v78);
  uint64_t v265 = (uint64_t)&v200 - v80;
  uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725138);
  uint64_t v82 = MEMORY[0x1F4188790](v81 - 8);
  uint64_t v217 = (char *)&v200 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = MEMORY[0x1F4188790](v82);
  uint64_t v216 = (char *)&v200 - v85;
  MEMORY[0x1F4188790](v84);
  uint64_t v264 = (uint64_t)&v200 - v86;
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725140);
  uint64_t v88 = MEMORY[0x1F4188790](v87 - 8);
  uint64_t v215 = (char *)&v200 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = MEMORY[0x1F4188790](v88);
  uint64_t v214 = (char *)&v200 - v91;
  MEMORY[0x1F4188790](v90);
  uint64_t v263 = (uint64_t)&v200 - v92;
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725148);
  uint64_t v94 = MEMORY[0x1F4188790](v93 - 8);
  uint64_t v213 = (char *)&v200 - ((v95 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = MEMORY[0x1F4188790](v94);
  uint64_t v212 = (char *)&v200 - v97;
  MEMORY[0x1F4188790](v96);
  uint64_t v262 = (uint64_t)&v200 - v98;
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725150);
  uint64_t v100 = MEMORY[0x1F4188790](v99 - 8);
  uint64_t v211 = (char *)&v200 - ((v101 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = MEMORY[0x1F4188790](v100);
  uint64_t v210 = (char *)&v200 - v103;
  MEMORY[0x1F4188790](v102);
  uint64_t v261 = (uint64_t)&v200 - v104;
  uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725158);
  uint64_t v106 = MEMORY[0x1F4188790](v105 - 8);
  uint64_t v209 = (char *)&v200 - ((v107 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = MEMORY[0x1F4188790](v106);
  uint64_t v208 = (char *)&v200 - v109;
  MEMORY[0x1F4188790](v108);
  uint64_t v260 = (uint64_t)&v200 - v110;
  uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725178);
  uint64_t v112 = MEMORY[0x1F4188790](v111 - 8);
  uint64_t v207 = (char *)&v200 - ((v113 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = MEMORY[0x1F4188790](v112);
  uint64_t v206 = (char *)&v200 - v115;
  MEMORY[0x1F4188790](v114);
  uint64_t v259 = (uint64_t)&v200 - v116;
  uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725188);
  uint64_t v118 = MEMORY[0x1F4188790](v117 - 8);
  uint64_t v205 = (char *)&v200 - ((v119 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = MEMORY[0x1F4188790](v118);
  uint64_t v204 = (char *)&v200 - v121;
  MEMORY[0x1F4188790](v120);
  uint64_t v258 = (uint64_t)&v200 - v122;
  uint64_t v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725180);
  uint64_t v124 = MEMORY[0x1F4188790](v123 - 8);
  uint64_t v203 = (char *)&v200 - ((v125 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = MEMORY[0x1F4188790](v124);
  uint64_t v202 = (char *)&v200 - v127;
  MEMORY[0x1F4188790](v126);
  uint64_t v257 = (uint64_t)&v200 - v128;
  uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725190);
  uint64_t v130 = MEMORY[0x1F4188790](v129 - 8);
  uint64_t v201 = (char *)&v200 - ((v131 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = MEMORY[0x1F4188790](v130);
  uint64_t v134 = (char *)&v200 - v133;
  MEMORY[0x1F4188790](v132);
  uint64_t v256 = (uint64_t)&v200 - v135;
  uint64_t v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725198);
  uint64_t v137 = MEMORY[0x1F4188790](v136 - 8);
  uint64_t v139 = (char *)&v200 - ((v138 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = MEMORY[0x1F4188790](v137);
  uint64_t v142 = (char *)&v200 - v141;
  MEMORY[0x1F4188790](v140);
  uint64_t v144 = (char *)&v200 - v143;
  uint64_t v218 = (char *)&v200 - v143;
  uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7251B8);
  uint64_t v146 = MEMORY[0x1F4188790](v145 - 8);
  uint64_t v148 = (char *)&v200 - ((v147 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = MEMORY[0x1F4188790](v146);
  uint64_t v151 = (char *)&v200 - v150;
  MEMORY[0x1F4188790](v149);
  uint64_t v153 = (char *)&v200 - v152;
  uint64_t v220 = (char *)&v200 - v152;
  int v224 = sub_1D5AB5CC0();
  uint64_t v223 = sub_1D5AB4610();
  uint64_t v222 = v154;
  sub_1D5AB4670();
  sub_1D5AB4670();
  sub_1D59ED83C((uint64_t)v151, (uint64_t)v148, (uint64_t)v153);
  sub_1D594F53C((uint64_t)v148, &qword_1EA7251B8);
  sub_1D594F53C((uint64_t)v151, &qword_1EA7251B8);
  sub_1D5AB4750();
  sub_1D5AB4750();
  sub_1D59EDB90((uint64_t)v142, (uint64_t)v139, (uint64_t)v144);
  sub_1D594F53C((uint64_t)v139, &qword_1EA725198);
  sub_1D594F53C((uint64_t)v142, &qword_1EA725198);
  sub_1D5AB4680();
  uint64_t v155 = (uint64_t)v201;
  sub_1D5AB4680();
  sub_1D59EDEE4((uint64_t)v134, v155, v256);
  sub_1D594F53C(v155, &qword_1EA725190);
  sub_1D594F53C((uint64_t)v134, &qword_1EA725190);
  uint64_t v156 = (uint64_t)v202;
  sub_1D5AB46D0();
  uint64_t v157 = (uint64_t)v203;
  sub_1D5AB46D0();
  sub_1D59EE238(v156, v157, v257);
  sub_1D594F53C(v157, &qword_1EA725180);
  sub_1D594F53C(v156, &qword_1EA725180);
  uint64_t v158 = (uint64_t)v204;
  sub_1D5AB47F0();
  uint64_t v159 = (uint64_t)v205;
  sub_1D5AB47F0();
  sub_1D59EE58C(v158, v159, v258);
  sub_1D594F53C(v159, &qword_1EA725188);
  sub_1D594F53C(v158, &qword_1EA725188);
  uint64_t v160 = (uint64_t)v206;
  sub_1D5AB4730();
  uint64_t v161 = (uint64_t)v207;
  sub_1D5AB4730();
  sub_1D59EE8E0(v160, v161, v259);
  sub_1D594F53C(v161, &qword_1EA725178);
  sub_1D594F53C(v160, &qword_1EA725178);
  uint64_t v162 = (uint64_t)v208;
  sub_1D5AB46A0();
  uint64_t v163 = (uint64_t)v209;
  sub_1D5AB46A0();
  sub_1D59EEC34(v162, v163, v260);
  sub_1D594F53C(v163, &qword_1EA725158);
  sub_1D594F53C(v162, &qword_1EA725158);
  uint64_t v164 = (uint64_t)v210;
  sub_1D5AB4650();
  uint64_t v165 = (uint64_t)v211;
  sub_1D5AB4650();
  sub_1D59EEF88(v164, v165, v261);
  sub_1D594F53C(v165, &qword_1EA725150);
  sub_1D594F53C(v164, &qword_1EA725150);
  uint64_t v166 = (uint64_t)v212;
  sub_1D5AB4710();
  uint64_t v167 = (uint64_t)v213;
  sub_1D5AB4710();
  sub_1D59EF2DC(v166, v167, v262);
  sub_1D594F53C(v167, &qword_1EA725148);
  sub_1D594F53C(v166, &qword_1EA725148);
  uint64_t v168 = (uint64_t)v214;
  sub_1D5AB46E0();
  uint64_t v169 = (uint64_t)v215;
  sub_1D5AB46E0();
  sub_1D59EF630(v168, v169, v263);
  sub_1D594F53C(v169, &qword_1EA725140);
  sub_1D594F53C(v168, &qword_1EA725140);
  uint64_t v170 = (uint64_t)v216;
  sub_1D5AB4620();
  uint64_t v171 = (uint64_t)v217;
  sub_1D5AB4620();
  sub_1D59EF984(v170, v171, v264);
  sub_1D594F53C(v171, &qword_1EA725138);
  sub_1D594F53C(v170, &qword_1EA725138);
  uint64_t v172 = (uint64_t)v219;
  sub_1D5AB4760();
  uint64_t v173 = (uint64_t)v221;
  sub_1D5AB4760();
  sub_1D59EFCD8(v172, v173, v265);
  sub_1D594F53C(v173, &qword_1EA725130);
  sub_1D594F53C(v172, &qword_1EA725130);
  uint64_t v174 = (uint64_t)v225;
  sub_1D5AB45E0();
  uint64_t v175 = (uint64_t)v226;
  sub_1D5AB45E0();
  sub_1D59F002C(v174, v175, v266);
  sub_1D594F53C(v175, &qword_1EA725128);
  sub_1D594F53C(v174, &qword_1EA725128);
  uint64_t v176 = (uint64_t)v227;
  sub_1D5AB45F0();
  uint64_t v177 = (uint64_t)v228;
  sub_1D5AB45F0();
  sub_1D59F0380(v176, v177, v267);
  sub_1D594F53C(v177, &qword_1EA725120);
  sub_1D594F53C(v176, &qword_1EA725120);
  uint64_t v178 = (uint64_t)v229;
  sub_1D5AB4630();
  uint64_t v179 = (uint64_t)v230;
  sub_1D5AB4630();
  sub_1D59F06D4(v178, v179, v268);
  sub_1D594F53C(v179, &qword_1EA725118);
  sub_1D594F53C(v178, &qword_1EA725118);
  uint64_t v180 = (uint64_t)v231;
  sub_1D5AB46B0();
  uint64_t v181 = (uint64_t)v232;
  sub_1D5AB46B0();
  sub_1D59F0A28(v180, v181, v269);
  sub_1D594F53C(v181, &qword_1EA725100);
  sub_1D594F53C(v180, &qword_1EA725100);
  uint64_t v182 = (uint64_t)v233;
  sub_1D5AB47E0();
  uint64_t v183 = (uint64_t)v234;
  sub_1D5AB47E0();
  sub_1D59F0D7C(v182, v183, v270);
  sub_1D594F53C(v183, &qword_1EA725110);
  sub_1D594F53C(v182, &qword_1EA725110);
  uint64_t v184 = (uint64_t)v235;
  sub_1D5AB4780();
  uint64_t v185 = (uint64_t)v236;
  sub_1D5AB4780();
  sub_1D59F10D0(v184, v185, v271);
  sub_1D594F53C(v185, &qword_1EA7250F8);
  sub_1D594F53C(v184, &qword_1EA7250F8);
  uint64_t v186 = sub_1D5AB2150();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v186 - 8) + 56))(v272, 1, 1, v186);
  uint64_t v187 = (uint64_t)v237;
  sub_1D5AB4640();
  uint64_t v188 = (uint64_t)v239;
  sub_1D5AB4640();
  sub_1D59F1424(v187, v188, v238);
  sub_1D594F53C(v188, &qword_1EA7250F0);
  sub_1D594F53C(v187, &qword_1EA7250F0);
  uint64_t v189 = (uint64_t)v240;
  sub_1D5AB4700();
  uint64_t v190 = (uint64_t)v242;
  sub_1D5AB4700();
  sub_1D59F1778(v189, v190, v241);
  sub_1D594F53C(v190, &qword_1EA7250E8);
  sub_1D594F53C(v189, &qword_1EA7250E8);
  uint64_t v191 = (uint64_t)v243;
  sub_1D5AB46C0();
  uint64_t v192 = (uint64_t)v245;
  sub_1D5AB46C0();
  sub_1D59F1ACC(v191, v192, v244);
  sub_1D594F53C(v192, &qword_1EA7250E0);
  sub_1D594F53C(v191, &qword_1EA7250E0);
  uint64_t v193 = (uint64_t)v246;
  sub_1D5AB4790();
  uint64_t v194 = (uint64_t)v248;
  sub_1D5AB4790();
  sub_1D59F1E20(v193, v194, v247);
  sub_1D594F53C(v194, &qword_1EA7250D0);
  sub_1D594F53C(v193, &qword_1EA7250D0);
  uint64_t v195 = (uint64_t)v249;
  sub_1D5AB47A0();
  uint64_t v196 = (uint64_t)v251;
  sub_1D5AB47A0();
  sub_1D59F2174(v195, v196, v250);
  sub_1D594F53C(v196, &qword_1EA7250D8);
  sub_1D594F53C(v195, &qword_1EA7250D8);
  uint64_t v197 = (uint64_t)v252;
  sub_1D5AB47C0();
  uint64_t v198 = (uint64_t)v254;
  sub_1D5AB47C0();
  sub_1D59F24C8(v197, v198, v253);
  sub_1D594F53C(v198, &qword_1EA727930);
  sub_1D594F53C(v197, &qword_1EA727930);
  sub_1D5AB5300();
  return sub_1D5AB2720();
}

uint64_t sub_1D59ED83C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v5 = sub_1D5AB2490();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7251B8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725B70);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t)&v15[*(int *)(v13 + 56)];
  sub_1D596E6CC(a2, (uint64_t)v15, &qword_1EA7251B8);
  sub_1D596E6CC(a1, v16, &qword_1EA7251B8);
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v17((uint64_t)v15, 1, v5) == 1)
  {
    if (v17(v16, 1, v5) == 1)
    {
      sub_1D594F53C((uint64_t)v15, &qword_1EA7251B8);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
    }
    goto LABEL_6;
  }
  sub_1D596E6CC((uint64_t)v15, (uint64_t)v11, &qword_1EA7251B8);
  if (v17(v16, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
LABEL_6:
    sub_1D594F53C((uint64_t)v15, &qword_1EA725B70);
    return sub_1D59EB6E0(a1, a2, &qword_1EA7251B8, MEMORY[0x1E4F9C4B0], MEMORY[0x1E4F9C4A8], v22);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v16, v5);
  sub_1D59F281C(&qword_1EA725BC0, MEMORY[0x1E4F9C4B0]);
  char v18 = sub_1D5AB4DD0();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v8, v5);
  v19(v11, v5);
  sub_1D594F53C((uint64_t)v15, &qword_1EA7251B8);
  if (v18) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
  }
  return sub_1D59EB6E0(a1, a2, &qword_1EA7251B8, MEMORY[0x1E4F9C4B0], MEMORY[0x1E4F9C4A8], v22);
}

uint64_t sub_1D59EDB90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v5 = sub_1D5AB3530();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725198);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7266A8);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t)&v15[*(int *)(v13 + 56)];
  sub_1D596E6CC(a2, (uint64_t)v15, &qword_1EA725198);
  sub_1D596E6CC(a1, v16, &qword_1EA725198);
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v17((uint64_t)v15, 1, v5) == 1)
  {
    if (v17(v16, 1, v5) == 1)
    {
      sub_1D594F53C((uint64_t)v15, &qword_1EA725198);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
    }
    goto LABEL_6;
  }
  sub_1D596E6CC((uint64_t)v15, (uint64_t)v11, &qword_1EA725198);
  if (v17(v16, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
LABEL_6:
    sub_1D594F53C((uint64_t)v15, &qword_1EA7266A8);
    return sub_1D59EB6E0(a1, a2, &qword_1EA725198, MEMORY[0x1E4F9D630], MEMORY[0x1E4F9D628], v22);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v16, v5);
  sub_1D59F281C(&qword_1EA7266B0, MEMORY[0x1E4F9D630]);
  char v18 = sub_1D5AB4DD0();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v8, v5);
  v19(v11, v5);
  sub_1D594F53C((uint64_t)v15, &qword_1EA725198);
  if (v18) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
  }
  return sub_1D59EB6E0(a1, a2, &qword_1EA725198, MEMORY[0x1E4F9D630], MEMORY[0x1E4F9D628], v22);
}

uint64_t sub_1D59EDEE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v5 = sub_1D5AB2570();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725190);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726698);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t)&v15[*(int *)(v13 + 56)];
  sub_1D596E6CC(a2, (uint64_t)v15, &qword_1EA725190);
  sub_1D596E6CC(a1, v16, &qword_1EA725190);
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v17((uint64_t)v15, 1, v5) == 1)
  {
    if (v17(v16, 1, v5) == 1)
    {
      sub_1D594F53C((uint64_t)v15, &qword_1EA725190);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
    }
    goto LABEL_6;
  }
  sub_1D596E6CC((uint64_t)v15, (uint64_t)v11, &qword_1EA725190);
  if (v17(v16, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
LABEL_6:
    sub_1D594F53C((uint64_t)v15, &qword_1EA726698);
    return sub_1D59EB6E0(a1, a2, &qword_1EA725190, MEMORY[0x1E4F9C518], MEMORY[0x1E4F9C510], v22);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v16, v5);
  sub_1D59F281C(&qword_1EA7266A0, MEMORY[0x1E4F9C518]);
  char v18 = sub_1D5AB4DD0();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v8, v5);
  v19(v11, v5);
  sub_1D594F53C((uint64_t)v15, &qword_1EA725190);
  if (v18) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
  }
  return sub_1D59EB6E0(a1, a2, &qword_1EA725190, MEMORY[0x1E4F9C518], MEMORY[0x1E4F9C510], v22);
}

uint64_t sub_1D59EE238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v5 = sub_1D5AB2D60();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725180);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726688);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t)&v15[*(int *)(v13 + 56)];
  sub_1D596E6CC(a2, (uint64_t)v15, &qword_1EA725180);
  sub_1D596E6CC(a1, v16, &qword_1EA725180);
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v17((uint64_t)v15, 1, v5) == 1)
  {
    if (v17(v16, 1, v5) == 1)
    {
      sub_1D594F53C((uint64_t)v15, &qword_1EA725180);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
    }
    goto LABEL_6;
  }
  sub_1D596E6CC((uint64_t)v15, (uint64_t)v11, &qword_1EA725180);
  if (v17(v16, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
LABEL_6:
    sub_1D594F53C((uint64_t)v15, &qword_1EA726688);
    return sub_1D59EB99C(a1, a2, &qword_1EA725180, MEMORY[0x1E4F9C9C8], MEMORY[0x1E4F9C9C0], v22);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v16, v5);
  sub_1D59F281C(&qword_1EA726690, MEMORY[0x1E4F9C9C8]);
  char v18 = sub_1D5AB4DD0();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v8, v5);
  v19(v11, v5);
  sub_1D594F53C((uint64_t)v15, &qword_1EA725180);
  if (v18) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
  }
  return sub_1D59EB99C(a1, a2, &qword_1EA725180, MEMORY[0x1E4F9C9C8], MEMORY[0x1E4F9C9C0], v22);
}

uint64_t sub_1D59EE58C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v5 = sub_1D5AB4A30();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725188);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726678);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t)&v15[*(int *)(v13 + 56)];
  sub_1D596E6CC(a2, (uint64_t)v15, &qword_1EA725188);
  sub_1D596E6CC(a1, v16, &qword_1EA725188);
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v17((uint64_t)v15, 1, v5) == 1)
  {
    if (v17(v16, 1, v5) == 1)
    {
      sub_1D594F53C((uint64_t)v15, &qword_1EA725188);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
    }
    goto LABEL_6;
  }
  sub_1D596E6CC((uint64_t)v15, (uint64_t)v11, &qword_1EA725188);
  if (v17(v16, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
LABEL_6:
    sub_1D594F53C((uint64_t)v15, &qword_1EA726678);
    return sub_1D59EB6E0(a1, a2, &qword_1EA725188, MEMORY[0x1E4F9F040], MEMORY[0x1E4F9F038], v22);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v16, v5);
  sub_1D59F281C(&qword_1EA726680, MEMORY[0x1E4F9F040]);
  char v18 = sub_1D5AB4DD0();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v8, v5);
  v19(v11, v5);
  sub_1D594F53C((uint64_t)v15, &qword_1EA725188);
  if (v18) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
  }
  return sub_1D59EB6E0(a1, a2, &qword_1EA725188, MEMORY[0x1E4F9F040], MEMORY[0x1E4F9F038], v22);
}

uint64_t sub_1D59EE8E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v5 = sub_1D5AB31E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725178);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726668);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t)&v15[*(int *)(v13 + 56)];
  sub_1D596E6CC(a2, (uint64_t)v15, &qword_1EA725178);
  sub_1D596E6CC(a1, v16, &qword_1EA725178);
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v17((uint64_t)v15, 1, v5) == 1)
  {
    if (v17(v16, 1, v5) == 1)
    {
      sub_1D594F53C((uint64_t)v15, &qword_1EA725178);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
    }
    goto LABEL_6;
  }
  sub_1D596E6CC((uint64_t)v15, (uint64_t)v11, &qword_1EA725178);
  if (v17(v16, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
LABEL_6:
    sub_1D594F53C((uint64_t)v15, &qword_1EA726668);
    return sub_1D59EB6E0(a1, a2, &qword_1EA725178, MEMORY[0x1E4F9D238], MEMORY[0x1E4F9D230], v22);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v16, v5);
  sub_1D59F281C(&qword_1EA726670, MEMORY[0x1E4F9D238]);
  char v18 = sub_1D5AB4DD0();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v8, v5);
  v19(v11, v5);
  sub_1D594F53C((uint64_t)v15, &qword_1EA725178);
  if (v18) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
  }
  return sub_1D59EB6E0(a1, a2, &qword_1EA725178, MEMORY[0x1E4F9D238], MEMORY[0x1E4F9D230], v22);
}

uint64_t sub_1D59EEC34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v5 = sub_1D5AB2AF0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725158);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726658);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t)&v15[*(int *)(v13 + 56)];
  sub_1D596E6CC(a2, (uint64_t)v15, &qword_1EA725158);
  sub_1D596E6CC(a1, v16, &qword_1EA725158);
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v17((uint64_t)v15, 1, v5) == 1)
  {
    if (v17(v16, 1, v5) == 1)
    {
      sub_1D594F53C((uint64_t)v15, &qword_1EA725158);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
    }
    goto LABEL_6;
  }
  sub_1D596E6CC((uint64_t)v15, (uint64_t)v11, &qword_1EA725158);
  if (v17(v16, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
LABEL_6:
    sub_1D594F53C((uint64_t)v15, &qword_1EA726658);
    return sub_1D59EB6E0(a1, a2, &qword_1EA725158, MEMORY[0x1E4F9C778], MEMORY[0x1E4F9C770], v22);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v16, v5);
  sub_1D59F281C(&qword_1EA726660, MEMORY[0x1E4F9C778]);
  char v18 = sub_1D5AB4DD0();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v8, v5);
  v19(v11, v5);
  sub_1D594F53C((uint64_t)v15, &qword_1EA725158);
  if (v18) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
  }
  return sub_1D59EB6E0(a1, a2, &qword_1EA725158, MEMORY[0x1E4F9C778], MEMORY[0x1E4F9C770], v22);
}

uint64_t sub_1D59EEF88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v5 = sub_1D5AB22E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725150);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726648);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t)&v15[*(int *)(v13 + 56)];
  sub_1D596E6CC(a2, (uint64_t)v15, &qword_1EA725150);
  sub_1D596E6CC(a1, v16, &qword_1EA725150);
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v17((uint64_t)v15, 1, v5) == 1)
  {
    if (v17(v16, 1, v5) == 1)
    {
      sub_1D594F53C((uint64_t)v15, &qword_1EA725150);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
    }
    goto LABEL_6;
  }
  sub_1D596E6CC((uint64_t)v15, (uint64_t)v11, &qword_1EA725150);
  if (v17(v16, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
LABEL_6:
    sub_1D594F53C((uint64_t)v15, &qword_1EA726648);
    return sub_1D59EB6E0(a1, a2, &qword_1EA725150, MEMORY[0x1E4F9C398], MEMORY[0x1E4F9C390], v22);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v16, v5);
  sub_1D59F281C(&qword_1EA726650, MEMORY[0x1E4F9C398]);
  char v18 = sub_1D5AB4DD0();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v8, v5);
  v19(v11, v5);
  sub_1D594F53C((uint64_t)v15, &qword_1EA725150);
  if (v18) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
  }
  return sub_1D59EB6E0(a1, a2, &qword_1EA725150, MEMORY[0x1E4F9C398], MEMORY[0x1E4F9C390], v22);
}

uint64_t sub_1D59EF2DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v5 = sub_1D5AB2F30();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725148);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726638);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t)&v15[*(int *)(v13 + 56)];
  sub_1D596E6CC(a2, (uint64_t)v15, &qword_1EA725148);
  sub_1D596E6CC(a1, v16, &qword_1EA725148);
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v17((uint64_t)v15, 1, v5) == 1)
  {
    if (v17(v16, 1, v5) == 1)
    {
      sub_1D594F53C((uint64_t)v15, &qword_1EA725148);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
    }
    goto LABEL_6;
  }
  sub_1D596E6CC((uint64_t)v15, (uint64_t)v11, &qword_1EA725148);
  if (v17(v16, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
LABEL_6:
    sub_1D594F53C((uint64_t)v15, &qword_1EA726638);
    return sub_1D59EB6E0(a1, a2, &qword_1EA725148, MEMORY[0x1E4F9CC80], MEMORY[0x1E4F9CC68], v22);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v16, v5);
  sub_1D59F281C(&qword_1EA726640, MEMORY[0x1E4F9CC80]);
  char v18 = sub_1D5AB4DD0();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v8, v5);
  v19(v11, v5);
  sub_1D594F53C((uint64_t)v15, &qword_1EA725148);
  if (v18) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
  }
  return sub_1D59EB6E0(a1, a2, &qword_1EA725148, MEMORY[0x1E4F9CC80], MEMORY[0x1E4F9CC68], v22);
}

uint64_t sub_1D59EF630@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v5 = sub_1D5AB2DC0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725140);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726628);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t)&v15[*(int *)(v13 + 56)];
  sub_1D596E6CC(a2, (uint64_t)v15, &qword_1EA725140);
  sub_1D596E6CC(a1, v16, &qword_1EA725140);
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v17((uint64_t)v15, 1, v5) == 1)
  {
    if (v17(v16, 1, v5) == 1)
    {
      sub_1D594F53C((uint64_t)v15, &qword_1EA725140);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
    }
    goto LABEL_6;
  }
  sub_1D596E6CC((uint64_t)v15, (uint64_t)v11, &qword_1EA725140);
  if (v17(v16, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
LABEL_6:
    sub_1D594F53C((uint64_t)v15, &qword_1EA726628);
    return sub_1D59EB6E0(a1, a2, &qword_1EA725140, MEMORY[0x1E4F9CAA0], MEMORY[0x1E4F9CA98], v22);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v16, v5);
  sub_1D59F281C(&qword_1EA726630, MEMORY[0x1E4F9CAA0]);
  char v18 = sub_1D5AB4DD0();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v8, v5);
  v19(v11, v5);
  sub_1D594F53C((uint64_t)v15, &qword_1EA725140);
  if (v18) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
  }
  return sub_1D59EB6E0(a1, a2, &qword_1EA725140, MEMORY[0x1E4F9CAA0], MEMORY[0x1E4F9CA98], v22);
}

uint64_t sub_1D59EF984@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v5 = sub_1D5AB1E10();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725138);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726618);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t)&v15[*(int *)(v13 + 56)];
  sub_1D596E6CC(a2, (uint64_t)v15, &qword_1EA725138);
  sub_1D596E6CC(a1, v16, &qword_1EA725138);
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v17((uint64_t)v15, 1, v5) == 1)
  {
    if (v17(v16, 1, v5) == 1)
    {
      sub_1D594F53C((uint64_t)v15, &qword_1EA725138);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
    }
    goto LABEL_6;
  }
  sub_1D596E6CC((uint64_t)v15, (uint64_t)v11, &qword_1EA725138);
  if (v17(v16, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
LABEL_6:
    sub_1D594F53C((uint64_t)v15, &qword_1EA726618);
    return sub_1D59EB6E0(a1, a2, &qword_1EA725138, MEMORY[0x1E4F9C000], MEMORY[0x1E4F9BFE0], v22);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v16, v5);
  sub_1D59F281C(&qword_1EA726620, MEMORY[0x1E4F9C000]);
  char v18 = sub_1D5AB4DD0();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v8, v5);
  v19(v11, v5);
  sub_1D594F53C((uint64_t)v15, &qword_1EA725138);
  if (v18) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
  }
  return sub_1D59EB6E0(a1, a2, &qword_1EA725138, MEMORY[0x1E4F9C000], MEMORY[0x1E4F9BFE0], v22);
}

uint64_t sub_1D59EFCD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v5 = sub_1D5AB35D0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725130);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725B68);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t)&v15[*(int *)(v13 + 56)];
  sub_1D596E6CC(a2, (uint64_t)v15, &qword_1EA725130);
  sub_1D596E6CC(a1, v16, &qword_1EA725130);
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v17((uint64_t)v15, 1, v5) == 1)
  {
    if (v17(v16, 1, v5) == 1)
    {
      sub_1D594F53C((uint64_t)v15, &qword_1EA725130);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
    }
    goto LABEL_6;
  }
  sub_1D596E6CC((uint64_t)v15, (uint64_t)v11, &qword_1EA725130);
  if (v17(v16, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
LABEL_6:
    sub_1D594F53C((uint64_t)v15, &qword_1EA725B68);
    return sub_1D59EB6E0(a1, a2, &qword_1EA725130, MEMORY[0x1E4F9D770], MEMORY[0x1E4F9D758], v22);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v16, v5);
  sub_1D59F281C(&qword_1EA725BB8, MEMORY[0x1E4F9D770]);
  char v18 = sub_1D5AB4DD0();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v8, v5);
  v19(v11, v5);
  sub_1D594F53C((uint64_t)v15, &qword_1EA725130);
  if (v18) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
  }
  return sub_1D59EB6E0(a1, a2, &qword_1EA725130, MEMORY[0x1E4F9D770], MEMORY[0x1E4F9D758], v22);
}

uint64_t sub_1D59F002C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v5 = sub_1D5AB2FC0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725128);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726608);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t)&v15[*(int *)(v13 + 56)];
  sub_1D596E6CC(a2, (uint64_t)v15, &qword_1EA725128);
  sub_1D596E6CC(a1, v16, &qword_1EA725128);
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v17((uint64_t)v15, 1, v5) == 1)
  {
    if (v17(v16, 1, v5) == 1)
    {
      sub_1D594F53C((uint64_t)v15, &qword_1EA725128);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
    }
    goto LABEL_6;
  }
  sub_1D596E6CC((uint64_t)v15, (uint64_t)v11, &qword_1EA725128);
  if (v17(v16, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
LABEL_6:
    sub_1D594F53C((uint64_t)v15, &qword_1EA726608);
    return sub_1D59EB6E0(a1, a2, &qword_1EA725128, MEMORY[0x1E4F9CD80], MEMORY[0x1E4F9CD68], v22);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v16, v5);
  sub_1D59F281C(&qword_1EA726610, MEMORY[0x1E4F9CD80]);
  char v18 = sub_1D5AB4DD0();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v8, v5);
  v19(v11, v5);
  sub_1D594F53C((uint64_t)v15, &qword_1EA725128);
  if (v18) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
  }
  return sub_1D59EB6E0(a1, a2, &qword_1EA725128, MEMORY[0x1E4F9CD80], MEMORY[0x1E4F9CD68], v22);
}

uint64_t sub_1D59F0380@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v5 = sub_1D5AB3E90();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725120);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7265F8);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t)&v15[*(int *)(v13 + 56)];
  sub_1D596E6CC(a2, (uint64_t)v15, &qword_1EA725120);
  sub_1D596E6CC(a1, v16, &qword_1EA725120);
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v17((uint64_t)v15, 1, v5) == 1)
  {
    if (v17(v16, 1, v5) == 1)
    {
      sub_1D594F53C((uint64_t)v15, &qword_1EA725120);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
    }
    goto LABEL_6;
  }
  sub_1D596E6CC((uint64_t)v15, (uint64_t)v11, &qword_1EA725120);
  if (v17(v16, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
LABEL_6:
    sub_1D594F53C((uint64_t)v15, &qword_1EA7265F8);
    return sub_1D59EB6E0(a1, a2, &qword_1EA725120, MEMORY[0x1E4F9E470], MEMORY[0x1E4F9E468], v22);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v16, v5);
  sub_1D59F281C(&qword_1EA726600, MEMORY[0x1E4F9E470]);
  char v18 = sub_1D5AB4DD0();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v8, v5);
  v19(v11, v5);
  sub_1D594F53C((uint64_t)v15, &qword_1EA725120);
  if (v18) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
  }
  return sub_1D59EB6E0(a1, a2, &qword_1EA725120, MEMORY[0x1E4F9E470], MEMORY[0x1E4F9E468], v22);
}

uint64_t sub_1D59F06D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v5 = sub_1D5AB1E70();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725118);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7265E8);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t)&v15[*(int *)(v13 + 56)];
  sub_1D596E6CC(a2, (uint64_t)v15, &qword_1EA725118);
  sub_1D596E6CC(a1, v16, &qword_1EA725118);
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v17((uint64_t)v15, 1, v5) == 1)
  {
    if (v17(v16, 1, v5) == 1)
    {
      sub_1D594F53C((uint64_t)v15, &qword_1EA725118);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
    }
    goto LABEL_6;
  }
  sub_1D596E6CC((uint64_t)v15, (uint64_t)v11, &qword_1EA725118);
  if (v17(v16, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
LABEL_6:
    sub_1D594F53C((uint64_t)v15, &qword_1EA7265E8);
    return sub_1D59EB6E0(a1, a2, &qword_1EA725118, MEMORY[0x1E4F9C080], MEMORY[0x1E4F9C078], v22);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v16, v5);
  sub_1D59F281C(&qword_1EA7265F0, MEMORY[0x1E4F9C080]);
  char v18 = sub_1D5AB4DD0();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v8, v5);
  v19(v11, v5);
  sub_1D594F53C((uint64_t)v15, &qword_1EA725118);
  if (v18) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
  }
  return sub_1D59EB6E0(a1, a2, &qword_1EA725118, MEMORY[0x1E4F9C080], MEMORY[0x1E4F9C078], v22);
}

uint64_t sub_1D59F0A28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v5 = sub_1D5AB2B30();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725100);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7265D8);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t)&v15[*(int *)(v13 + 56)];
  sub_1D596E6CC(a2, (uint64_t)v15, &qword_1EA725100);
  sub_1D596E6CC(a1, v16, &qword_1EA725100);
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v17((uint64_t)v15, 1, v5) == 1)
  {
    if (v17(v16, 1, v5) == 1)
    {
      sub_1D594F53C((uint64_t)v15, &qword_1EA725100);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
    }
    goto LABEL_6;
  }
  sub_1D596E6CC((uint64_t)v15, (uint64_t)v11, &qword_1EA725100);
  if (v17(v16, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
LABEL_6:
    sub_1D594F53C((uint64_t)v15, &qword_1EA7265D8);
    return sub_1D59EB6E0(a1, a2, &qword_1EA725100, MEMORY[0x1E4F9C790], MEMORY[0x1E4F9C788], v22);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v16, v5);
  sub_1D59F281C(&qword_1EA7265E0, MEMORY[0x1E4F9C790]);
  char v18 = sub_1D5AB4DD0();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v8, v5);
  v19(v11, v5);
  sub_1D594F53C((uint64_t)v15, &qword_1EA725100);
  if (v18) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
  }
  return sub_1D59EB6E0(a1, a2, &qword_1EA725100, MEMORY[0x1E4F9C790], MEMORY[0x1E4F9C788], v22);
}

uint64_t sub_1D59F0D7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v5 = sub_1D5AB4970();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725110);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7265C8);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t)&v15[*(int *)(v13 + 56)];
  sub_1D596E6CC(a2, (uint64_t)v15, &qword_1EA725110);
  sub_1D596E6CC(a1, v16, &qword_1EA725110);
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v17((uint64_t)v15, 1, v5) == 1)
  {
    if (v17(v16, 1, v5) == 1)
    {
      sub_1D594F53C((uint64_t)v15, &qword_1EA725110);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
    }
    goto LABEL_6;
  }
  sub_1D596E6CC((uint64_t)v15, (uint64_t)v11, &qword_1EA725110);
  if (v17(v16, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
LABEL_6:
    sub_1D594F53C((uint64_t)v15, &qword_1EA7265C8);
    return sub_1D59EB6E0(a1, a2, &qword_1EA725110, MEMORY[0x1E4F9EEA0], MEMORY[0x1E4F9EE50], v22);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v16, v5);
  sub_1D59F281C(&qword_1EA7265D0, MEMORY[0x1E4F9EEA0]);
  char v18 = sub_1D5AB4DD0();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v8, v5);
  v19(v11, v5);
  sub_1D594F53C((uint64_t)v15, &qword_1EA725110);
  if (v18) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
  }
  return sub_1D59EB6E0(a1, a2, &qword_1EA725110, MEMORY[0x1E4F9EEA0], MEMORY[0x1E4F9EE50], v22);
}

uint64_t sub_1D59F10D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v5 = sub_1D5AB3A00();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250F8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7265B8);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t)&v15[*(int *)(v13 + 56)];
  sub_1D596E6CC(a2, (uint64_t)v15, &qword_1EA7250F8);
  sub_1D596E6CC(a1, v16, &qword_1EA7250F8);
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v17((uint64_t)v15, 1, v5) == 1)
  {
    if (v17(v16, 1, v5) == 1)
    {
      sub_1D594F53C((uint64_t)v15, &qword_1EA7250F8);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
    }
    goto LABEL_6;
  }
  sub_1D596E6CC((uint64_t)v15, (uint64_t)v11, &qword_1EA7250F8);
  if (v17(v16, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
LABEL_6:
    sub_1D594F53C((uint64_t)v15, &qword_1EA7265B8);
    return sub_1D59EB6E0(a1, a2, &qword_1EA7250F8, MEMORY[0x1E4F9DF98], MEMORY[0x1E4F9DF90], v22);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v16, v5);
  sub_1D59F281C(&qword_1EA7265C0, MEMORY[0x1E4F9DF98]);
  char v18 = sub_1D5AB4DD0();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v8, v5);
  v19(v11, v5);
  sub_1D594F53C((uint64_t)v15, &qword_1EA7250F8);
  if (v18) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
  }
  return sub_1D59EB6E0(a1, a2, &qword_1EA7250F8, MEMORY[0x1E4F9DF98], MEMORY[0x1E4F9DF90], v22);
}

uint64_t sub_1D59F1424@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v5 = sub_1D5AB2180();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250F0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7265A8);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t)&v15[*(int *)(v13 + 56)];
  sub_1D596E6CC(a2, (uint64_t)v15, &qword_1EA7250F0);
  sub_1D596E6CC(a1, v16, &qword_1EA7250F0);
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v17((uint64_t)v15, 1, v5) == 1)
  {
    if (v17(v16, 1, v5) == 1)
    {
      sub_1D594F53C((uint64_t)v15, &qword_1EA7250F0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
    }
    goto LABEL_6;
  }
  sub_1D596E6CC((uint64_t)v15, (uint64_t)v11, &qword_1EA7250F0);
  if (v17(v16, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
LABEL_6:
    sub_1D594F53C((uint64_t)v15, &qword_1EA7265A8);
    return sub_1D59EB99C(a1, a2, &qword_1EA7250F0, MEMORY[0x1E4F9C278], MEMORY[0x1E4F9C270], v22);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v16, v5);
  sub_1D59F281C(&qword_1EA7265B0, MEMORY[0x1E4F9C278]);
  char v18 = sub_1D5AB4DD0();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v8, v5);
  v19(v11, v5);
  sub_1D594F53C((uint64_t)v15, &qword_1EA7250F0);
  if (v18) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
  }
  return sub_1D59EB99C(a1, a2, &qword_1EA7250F0, MEMORY[0x1E4F9C278], MEMORY[0x1E4F9C270], v22);
}

uint64_t sub_1D59F1778@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v5 = sub_1D5AB2E60();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250E8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726598);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t)&v15[*(int *)(v13 + 56)];
  sub_1D596E6CC(a2, (uint64_t)v15, &qword_1EA7250E8);
  sub_1D596E6CC(a1, v16, &qword_1EA7250E8);
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v17((uint64_t)v15, 1, v5) == 1)
  {
    if (v17(v16, 1, v5) == 1)
    {
      sub_1D594F53C((uint64_t)v15, &qword_1EA7250E8);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
    }
    goto LABEL_6;
  }
  sub_1D596E6CC((uint64_t)v15, (uint64_t)v11, &qword_1EA7250E8);
  if (v17(v16, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
LABEL_6:
    sub_1D594F53C((uint64_t)v15, &qword_1EA726598);
    return sub_1D59EB6E0(a1, a2, &qword_1EA7250E8, MEMORY[0x1E4F9CB18], MEMORY[0x1E4F9CB10], v22);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v16, v5);
  sub_1D59F281C(&qword_1EA7265A0, MEMORY[0x1E4F9CB18]);
  char v18 = sub_1D5AB4DD0();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v8, v5);
  v19(v11, v5);
  sub_1D594F53C((uint64_t)v15, &qword_1EA7250E8);
  if (v18) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
  }
  return sub_1D59EB6E0(a1, a2, &qword_1EA7250E8, MEMORY[0x1E4F9CB18], MEMORY[0x1E4F9CB10], v22);
}

uint64_t sub_1D59F1ACC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v5 = sub_1D5AB3250();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250E0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726588);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t)&v15[*(int *)(v13 + 56)];
  sub_1D596E6CC(a2, (uint64_t)v15, &qword_1EA7250E0);
  sub_1D596E6CC(a1, v16, &qword_1EA7250E0);
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v17((uint64_t)v15, 1, v5) == 1)
  {
    if (v17(v16, 1, v5) == 1)
    {
      sub_1D594F53C((uint64_t)v15, &qword_1EA7250E0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
    }
    goto LABEL_6;
  }
  sub_1D596E6CC((uint64_t)v15, (uint64_t)v11, &qword_1EA7250E0);
  if (v17(v16, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
LABEL_6:
    sub_1D594F53C((uint64_t)v15, &qword_1EA726588);
    return sub_1D59EB6E0(a1, a2, &qword_1EA7250E0, MEMORY[0x1E4F9D2B8], MEMORY[0x1E4F9D2B0], v22);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v16, v5);
  sub_1D59F281C(&qword_1EA726590, MEMORY[0x1E4F9D2B8]);
  char v18 = sub_1D5AB4DD0();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v8, v5);
  v19(v11, v5);
  sub_1D594F53C((uint64_t)v15, &qword_1EA7250E0);
  if (v18) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
  }
  return sub_1D59EB6E0(a1, a2, &qword_1EA7250E0, MEMORY[0x1E4F9D2B8], MEMORY[0x1E4F9D2B0], v22);
}

uint64_t sub_1D59F1E20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v5 = sub_1D5AB3A50();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250D0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726578);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t)&v15[*(int *)(v13 + 56)];
  sub_1D596E6CC(a2, (uint64_t)v15, &qword_1EA7250D0);
  sub_1D596E6CC(a1, v16, &qword_1EA7250D0);
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v17((uint64_t)v15, 1, v5) == 1)
  {
    if (v17(v16, 1, v5) == 1)
    {
      sub_1D594F53C((uint64_t)v15, &qword_1EA7250D0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
    }
    goto LABEL_6;
  }
  sub_1D596E6CC((uint64_t)v15, (uint64_t)v11, &qword_1EA7250D0);
  if (v17(v16, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
LABEL_6:
    sub_1D594F53C((uint64_t)v15, &qword_1EA726578);
    return sub_1D59EB6E0(a1, a2, &qword_1EA7250D0, MEMORY[0x1E4F9E028], MEMORY[0x1E4F9E008], v22);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v16, v5);
  sub_1D59F281C(&qword_1EA726580, MEMORY[0x1E4F9E028]);
  char v18 = sub_1D5AB4DD0();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v8, v5);
  v19(v11, v5);
  sub_1D594F53C((uint64_t)v15, &qword_1EA7250D0);
  if (v18) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
  }
  return sub_1D59EB6E0(a1, a2, &qword_1EA7250D0, MEMORY[0x1E4F9E028], MEMORY[0x1E4F9E008], v22);
}

uint64_t sub_1D59F2174@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v5 = sub_1D5AB3B50();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250D8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726568);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t)&v15[*(int *)(v13 + 56)];
  sub_1D596E6CC(a2, (uint64_t)v15, &qword_1EA7250D8);
  sub_1D596E6CC(a1, v16, &qword_1EA7250D8);
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v17((uint64_t)v15, 1, v5) == 1)
  {
    if (v17(v16, 1, v5) == 1)
    {
      sub_1D594F53C((uint64_t)v15, &qword_1EA7250D8);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
    }
    goto LABEL_6;
  }
  sub_1D596E6CC((uint64_t)v15, (uint64_t)v11, &qword_1EA7250D8);
  if (v17(v16, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
LABEL_6:
    sub_1D594F53C((uint64_t)v15, &qword_1EA726568);
    return sub_1D59EB6E0(a1, a2, &qword_1EA7250D8, MEMORY[0x1E4F9E1F0], MEMORY[0x1E4F9E1E8], v22);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v16, v5);
  sub_1D59F281C(&qword_1EA726570, MEMORY[0x1E4F9E1F0]);
  char v18 = sub_1D5AB4DD0();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v8, v5);
  v19(v11, v5);
  sub_1D594F53C((uint64_t)v15, &qword_1EA7250D8);
  if (v18) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
  }
  return sub_1D59EB6E0(a1, a2, &qword_1EA7250D8, MEMORY[0x1E4F9E1F0], MEMORY[0x1E4F9E1E8], v22);
}

uint64_t sub_1D59F24C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v5 = sub_1D5AB48E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727930);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726558);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t)&v15[*(int *)(v13 + 56)];
  sub_1D596E6CC(a2, (uint64_t)v15, &qword_1EA727930);
  sub_1D596E6CC(a1, v16, &qword_1EA727930);
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v17((uint64_t)v15, 1, v5) == 1)
  {
    if (v17(v16, 1, v5) == 1)
    {
      sub_1D594F53C((uint64_t)v15, &qword_1EA727930);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
    }
    goto LABEL_6;
  }
  sub_1D596E6CC((uint64_t)v15, (uint64_t)v11, &qword_1EA727930);
  if (v17(v16, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
LABEL_6:
    sub_1D594F53C((uint64_t)v15, &qword_1EA726558);
    return sub_1D59EB6E0(a1, a2, &qword_1EA727930, MEMORY[0x1E4F9EDC0], MEMORY[0x1E4F9EDA0], v22);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v16, v5);
  sub_1D59F281C(&qword_1EA726560, MEMORY[0x1E4F9EDC0]);
  char v18 = sub_1D5AB4DD0();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v8, v5);
  v19(v11, v5);
  sub_1D594F53C((uint64_t)v15, &qword_1EA727930);
  if (v18) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v22, 1, 1, v5);
  }
  return sub_1D59EB6E0(a1, a2, &qword_1EA727930, MEMORY[0x1E4F9EDC0], MEMORY[0x1E4F9EDA0], v22);
}

uint64_t sub_1D59F281C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D59F2864(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7257D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D59F28CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2150();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v19 = a2;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v13 = v14;
    uint64_t v15 = a1 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
    uint64_t v16 = *(void *)(v12 + 56);
    do
    {
      v13(v8, v15, v4);
      sub_1D5A7B500((uint64_t)v10, v8);
      (*(void (**)(char *, uint64_t))(v12 - 8))(v10, v4);
      v15 += v16;
      --v11;
    }
    while (v11);
    return v19;
  }
  return a2;
}

uint64_t UnfairLock.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = (_DWORD *)swift_slowAlloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = 0;
  return v0;
}

uint64_t UnfairLock.init()()
{
  uint64_t v1 = (_DWORD *)swift_slowAlloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = 0;
  return v0;
}

void sub_1D59F2AA0()
{
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v0 + 16));
}

uint64_t UnfairLock.deinit()
{
  MEMORY[0x1D945AAC0](*(void *)(v0 + 16), -1, -1);
  return v0;
}

uint64_t UnfairLock.__deallocating_deinit()
{
  MEMORY[0x1D945AAC0](*(void *)(v0 + 16), -1, -1);
  return swift_deallocClassInstance();
}

void sub_1D59F2B10(void (*a1)(void))
{
}

void sub_1D59F2B28(void (*a1)(void))
{
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  a1();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
}

uint64_t type metadata accessor for UnfairLock()
{
  return self;
}

uint64_t method lookup function for UnfairLock(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for UnfairLock);
}

uint64_t dispatch thunk of UnfairLock.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of UnfairLock.assertAcquired()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of UnfairLock.acquire<A>(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of UnfairLock.acquire<A>(expression:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t static MetricsDisplayPreference.default()()
{
  uint64_t v0 = sub_1D5AB4450();
  MEMORY[0x1F4188790](v0);
  (*(void (**)(char *, void))(v2 + 104))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F9EB70]);
  return sub_1D5AB3AF0();
}

uint64_t PlaybackIntent.applyingTimestampOffset(_:)()
{
  sub_1D5AB2B10();
  return sub_1D5AB2B20();
}

uint64_t sub_1D59F2D9C()
{
  sub_1D5AB2B10();
  return sub_1D5AB2B20();
}

uint64_t WorkoutPlanCompleted.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB1D20();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t WorkoutPlanCompleted.init(identifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB1D20();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static WorkoutPlanCompleted.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for WorkoutPlanCompleted(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB1D20();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for WorkoutPlanCompleted(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB1D20();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for WorkoutPlanCompleted(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB1D20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for WorkoutPlanCompleted(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB1D20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for WorkoutPlanCompleted(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB1D20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for WorkoutPlanCompleted(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB1D20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutPlanCompleted(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D59F3148);
}

uint64_t sub_1D59F3148(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB1D20();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for WorkoutPlanCompleted(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D59F31C8);
}

uint64_t sub_1D59F31C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB1D20();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for WorkoutPlanCompleted()
{
  uint64_t result = qword_1EBDE1548;
  if (!qword_1EBDE1548) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D59F3284()
{
  uint64_t result = sub_1D5AB1D20();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D59F3310()
{
  uint64_t v0 = MEMORY[0x1D9456480]();
  uint64_t v1 = sub_1D59F3484(v0);
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D594FCA0(v1);
  uint64_t result = swift_bridgeObjectRelease();
  qword_1EBDE11D0 = v2;
  return result;
}

uint64_t MetricTopic.isAnonymous.getter(unsigned __int8 a1)
{
  if (!(a1 >> 6)) {
    return sub_1D5AB3690();
  }
  if (a1 >> 6 == 1) {
    return sub_1D5AB3390();
  }
  return 1;
}

uint64_t static MetricTopic.anonymousTopics.getter()
{
  if (qword_1EBDE10F0 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t MetricTopic.supportsDemographicEvent.getter(unsigned __int8 a1)
{
  if (a1 > 0x3Fu) {
    return 0;
  }
  else {
    return MEMORY[0x1F414E1E8]();
  }
}

uint64_t MetricTopic.supportsOptInConsentField.getter(unsigned __int8 a1)
{
  if (a1 > 0x3Fu) {
    return 1;
  }
  else {
    return MEMORY[0x1F414E1F8]();
  }
}

uint64_t MetricTopic.supportsSubscriptionFields.getter(unsigned __int8 a1)
{
  if (a1 > 0x3Fu) {
    return 1;
  }
  else {
    return MEMORY[0x1F414E200]();
  }
}

uint64_t MetricTopic.supportsIsSubscribedField.getter(unsigned __int8 a1)
{
  if (a1 > 0x3Fu) {
    return 0;
  }
  else {
    return MEMORY[0x1F414E1F0]();
  }
}

uint64_t MetricTopic.supportsPurchaseEventAdditionalDetails.getter(unsigned __int8 a1)
{
  if (a1 > 0x3Fu) {
    return 0;
  }
  else {
    return MEMORY[0x1F414E210]();
  }
}

uint64_t MetricTopic.supportsGroupActivityFields.getter(unsigned __int8 a1)
{
  if (a1 > 0x3Fu) {
    return 1;
  }
  else {
    return MEMORY[0x1F414E208]();
  }
}

uint64_t sub_1D59F3484(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 16);
  if (v1)
  {
    unint64_t v2 = 0;
    uint64_t v3 = result + 32;
    uint64_t v4 = MEMORY[0x1E4FBC860];
    while (1)
    {
      uint64_t v5 = 0;
      if (v2 <= v1) {
        unint64_t v6 = v1;
      }
      else {
        unint64_t v6 = v2;
      }
      unint64_t v7 = v2 - v6;
      unint64_t v8 = v1;
      for (uint64_t i = v3; ; ++i)
      {
        if (!(v7 + v5))
        {
          __break(1u);
          return result;
        }
        unsigned int v10 = *(unsigned __int8 *)(i + v2);
        if (v10 >> 6) {
          break;
        }
        uint64_t result = sub_1D5AB3690();
        if (result) {
          goto LABEL_13;
        }
LABEL_8:
        ++v5;
        if (v2 == --v8) {
          return v4;
        }
      }
      if (v10 >> 6 == 1)
      {
        uint64_t result = sub_1D5AB3390();
        if ((result & 1) == 0) {
          goto LABEL_8;
        }
      }
LABEL_13:
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        uint64_t result = sub_1D594E85C(0, *(void *)(v4 + 16) + 1, 1);
      }
      unint64_t v12 = *(void *)(v4 + 16);
      unint64_t v11 = *(void *)(v4 + 24);
      if (v12 >= v11 >> 1) {
        uint64_t result = sub_1D594E85C(v11 > 1, v12 + 1, 1);
      }
      unint64_t v13 = v2 + 1;
      v2 += 1 + v5;
      *(void *)(v4 + 16) = v12 + 1;
      *(unsigned char *)(v4 + v12 + 32) = v10;
      if (v13 == v8) {
        return v4;
      }
    }
  }
  return MEMORY[0x1E4FBC860];
}

void *RemoteKeyDeliveryClient.__allocating_init(queue:)(void *a1)
{
  id v2 = objc_allocWithZone(MEMORY[0x1E4F29268]);
  id v3 = a1;
  uint64_t v4 = (void *)sub_1D5AB4DE0();
  id v5 = objc_msgSend(v2, sel_initWithMachServiceName_options_, v4, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  uint64_t v6 = sub_1D59968E8(v5, v3);
  uint64_t v7 = *(void *)(v6 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 16));
  if (*(unsigned char *)(v6 + 48) == 1)
  {
    *(unsigned char *)(v6 + 48) = 2;
    objc_msgSend(*(id *)(v6 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));

  type metadata accessor for RemoteKeyDeliveryClient();
  uint64_t result = (void *)swift_allocObject();
  result[2] = v6;
  result[3] = &protocol witness table for XPCClient;
  result[4] = &protocol witness table for XPCClient;
  return result;
}

void *RemoteKeyDeliveryClient.__allocating_init(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  return sub_1D59F434C(a1, v3, ObjectType, a2, a3);
}

uint64_t type metadata accessor for RemoteKeyDeliveryClient()
{
  return self;
}

void *RemoteKeyDeliveryClient.init(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  return sub_1D595A0B0(a1, v3, ObjectType, a2, a3);
}

uint64_t RemoteKeyDeliveryClient.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t RemoteKeyDeliveryClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t RemoteKeyDeliveryClient.fetchCertificateContext()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v16 = a1;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725508);
  uint64_t v3 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  id v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBDE1488 != -1) {
    swift_once();
  }
  uint64_t v9 = __swift_project_value_buffer(v6, (uint64_t)qword_1EBDE1468);
  sub_1D596DDF8(v9, (uint64_t)v8);
  uint64_t v10 = *(void *)(v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v18 = 138;
  unint64_t v12 = *(void (**)(__int16 *, uint64_t, void, void, uint64_t, uint64_t))(v10 + 24);
  uint64_t v13 = sub_1D5AB3620();
  swift_retain();
  v12(&v18, v13, MEMORY[0x1E4F9D8A8], MEMORY[0x1E4F9D8B0], ObjectType, v10);
  sub_1D5967688("RemoteKeyDeliveryClient::fetchCertificateContext", 48, 2, &dword_1D5947000, 0, (uint64_t)v5, v16);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v17);
  swift_release();
  return sub_1D59F4394((uint64_t)v8);
}

uint64_t RemoteKeyDeliveryClient.fetchContext(spc:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v25 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7254F8);
  uint64_t v26 = *(void *)(v5 - 8);
  uint64_t v27 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v24 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D5AB3650();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBDE1488 != -1) {
    swift_once();
  }
  uint64_t v14 = __swift_project_value_buffer(v11, (uint64_t)qword_1EBDE1468);
  sub_1D596DDF8(v14, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  uint64_t v23 = v13;
  uint64_t v15 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v28 = 139;
  uint64_t v17 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, void, void, void, void, uint64_t, uint64_t))(v15 + 32);
  uint64_t v18 = sub_1D5AB1DE0();
  swift_retain();
  uint64_t v22 = v15;
  uint64_t v19 = (uint64_t)v24;
  v17(&v28, v10, v7, v18, MEMORY[0x1E4F9D990], MEMORY[0x1E4F9D998], MEMORY[0x1E4F9BFC8], MEMORY[0x1E4F9BFD0], ObjectType, v22);
  uint64_t v20 = (uint64_t)v23;
  sub_1D5967F84("RemoteKeyDeliveryClient::fetchContext", 37, 2, &dword_1D5947000, 0, v19, v25);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v19, v27);
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return sub_1D59F4394(v20);
}

uint64_t RemoteKeyDeliveryClient.renewContext(spc:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v25 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7254F8);
  uint64_t v26 = *(void *)(v5 - 8);
  uint64_t v27 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v24 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D5AB3650();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBDE1488 != -1) {
    swift_once();
  }
  uint64_t v14 = __swift_project_value_buffer(v11, (uint64_t)qword_1EBDE1468);
  sub_1D596DDF8(v14, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  uint64_t v23 = v13;
  uint64_t v15 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v28 = 140;
  uint64_t v17 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, void, void, void, void, uint64_t, uint64_t))(v15 + 32);
  uint64_t v18 = sub_1D5AB1DE0();
  swift_retain();
  uint64_t v22 = v15;
  uint64_t v19 = (uint64_t)v24;
  v17(&v28, v10, v7, v18, MEMORY[0x1E4F9D990], MEMORY[0x1E4F9D998], MEMORY[0x1E4F9BFC8], MEMORY[0x1E4F9BFD0], ObjectType, v22);
  uint64_t v20 = (uint64_t)v23;
  sub_1D5967F84("RemoteKeyDeliveryClient::renewContext", 37, 2, &dword_1D5947000, 0, v19, v25);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v19, v27);
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return sub_1D59F4394(v20);
}

uint64_t RemoteKeyDeliveryClient.releaseContext(spc:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v23 = *(void *)(v4 - 8);
  uint64_t v24 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v21 = (void (*)(uint64_t, char *, uint64_t))((char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1D5AB3650();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBDE1488 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v10, (uint64_t)qword_1EBDE1468);
  sub_1D596DDF8(v13, (uint64_t)v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  uint64_t v14 = *(void *)(v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v25 = 141;
  uint64_t v20 = v12;
  uint64_t v16 = *(void (**)(__int16 *, char *, uint64_t, void, void, uint64_t, uint64_t))(v14 + 16);
  swift_retain();
  uint64_t v17 = v21;
  v16(&v25, v9, v6, MEMORY[0x1E4F9D990], MEMORY[0x1E4F9D998], ObjectType, v14);
  uint64_t v18 = (uint64_t)v20;
  sub_1D5962628("RemoteKeyDeliveryClient::releaseContext", 39, 2, &dword_1D5947000, 0, v17, v22);
  (*(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v23 + 8))(v17, v24);
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return sub_1D59F4394(v18);
}

uint64_t sub_1D59F42BC@<X0>(uint64_t a1@<X8>)
{
  return RemoteKeyDeliveryClient.fetchCertificateContext()(a1);
}

uint64_t sub_1D59F42E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteKeyDeliveryClient.fetchContext(spc:)(a1, a2);
}

uint64_t sub_1D59F4304@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteKeyDeliveryClient.renewContext(spc:)(a1, a2);
}

uint64_t sub_1D59F4328@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteKeyDeliveryClient.releaseContext(spc:)(a1, a2);
}

void *sub_1D59F434C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for RemoteKeyDeliveryClient();
  uint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a4;
  result[4] = a5;
  return result;
}

uint64_t sub_1D59F4394(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ActivityTracer();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t method lookup function for RemoteKeyDeliveryClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RemoteKeyDeliveryClient);
}

uint64_t dispatch thunk of RemoteKeyDeliveryClient.__allocating_init(connection:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1D59F441C()
{
  return sub_1D5AB4150();
}

uint64_t sub_1D59F4454()
{
  return sub_1D5AB4160();
}

uint64_t sub_1D59F44B4()
{
  return sub_1D5AB4130();
}

uint64_t sub_1D59F44EC()
{
  return sub_1D5AB4140();
}

uint64_t sub_1D59F454C()
{
  return sub_1D5AB4170();
}

uint64_t sub_1D59F4584()
{
  return sub_1D5AB4180();
}

uint64_t sub_1D59F45E4()
{
  return sub_1D59F464C(&qword_1EBDE3348);
}

uint64_t sub_1D59F4618()
{
  return sub_1D59F464C(&qword_1EA7266C0);
}

uint64_t sub_1D59F464C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1D5AB3780();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D59F4690()
{
  return sub_1D5AB4FC0();
}

uint64_t sub_1D59F46F4()
{
  return sub_1D5AB4FB0();
}

unint64_t sub_1D59F4748()
{
  unint64_t result = qword_1EBDE3368;
  if (!qword_1EBDE3368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE3368);
  }
  return result;
}

unint64_t sub_1D59F479C()
{
  unint64_t result = qword_1EBDE3360;
  if (!qword_1EBDE3360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE3360);
  }
  return result;
}

void *sub_1D59F47F0(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(void *)(a2 + 16))
    {
      unint64_t v6 = sub_1D59527B4((uint64_t)a1);
      if (v7)
      {
        uint64_t v5 = *(void **)(*(void *)(a2 + 56) + 8 * v6);
        id v8 = v5;
        return v5;
      }
    }
    return 0;
  }
  id v3 = a1;
  uint64_t v4 = sub_1D5AB5900();

  if (!v4) {
    return 0;
  }
  sub_1D59E8AE0(0, &qword_1EBDE32F8);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  uint64_t v5 = v10;
  swift_unknownObjectRelease();
  return v5;
}

uint64_t sub_1D59F48C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB51C0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1D5AB51B0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1D594F53C(a1, (uint64_t *)&unk_1EBDE4C10);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1D5AB5120();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1D59F4A74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4C10);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D596E6CC(a1, (uint64_t)v9, (uint64_t *)&unk_1EBDE4C10);
  uint64_t v10 = sub_1D5AB51C0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1D594F53C((uint64_t)v9, (uint64_t *)&unk_1EBDE4C10);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v12 = sub_1D5AB5120();
      uint64_t v14 = v13;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1D5AB51B0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v12 = 0;
  uint64_t v14 = 0;
LABEL_6:
  uint64_t v15 = *v4;
  sub_1D5AB2490();
  uint64_t v16 = (void *)(v14 | v12);
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    uint64_t v16 = v19;
    void v19[2] = v12;
    v19[3] = v14;
  }
  v18[1] = 1;
  void v18[2] = v16;
  v18[3] = v15;
  swift_task_create();
  return swift_release();
}

uint64_t sub_1D59F4C54(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726818);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4C10);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1D5AB51C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v15 = (*(unsigned __int8 *)(v9 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = 0;
  *(void *)(v16 + 24) = 0;
  *(void *)(v16 + 32) = a2;
  *(void *)(v16 + 40) = a3;
  *(double *)(v16 + 48) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v16 + v15, (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  swift_retain();
  sub_1D59F48C8((uint64_t)v13, (uint64_t)&unk_1EA726828, v16);
  return swift_release();
}

uint64_t sub_1D59F4E48(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 48) = a7;
  *(double *)(v7 + 40) = a2;
  *(void *)(v7 + 24) = a5;
  *(void *)(v7 + 32) = a6;
  *(void *)(v7 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1D59F4E74, 0, 0);
}

uint64_t sub_1D59F4E74()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = sub_1D5AB2490();
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 56) = v4;
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v0 + 24);
  *(void *)(v4 + 32) = v2;
  *(void *)(v4 + 40) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1D59F4F84;
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC848] + 8;
  return MEMORY[0x1F4188080](v6, v3, v7, 0, 0, &unk_1EA726838, v4, v3);
}

uint64_t sub_1D59F4F84()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1D59F5094(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 56) = a6;
  *(double *)(v6 + 48) = a1;
  *(void *)(v6 + 32) = a4;
  *(void *)(v6 + 40) = a5;
  *(void *)(v6 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7251B8);
  *(void *)(v6 + 64) = swift_task_alloc();
  uint64_t v7 = sub_1D5AB2490();
  *(void *)(v6 + 72) = v7;
  *(void *)(v6 + 80) = *(void *)(v7 - 8);
  *(void *)(v6 + 88) = swift_task_alloc();
  *(void *)(v6 + 96) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4C10);
  *(void *)(v6 + 104) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D59F51D0, 0, 0);
}

uint64_t sub_1D59F51D0()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[6];
  uint64_t v4 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v5 = sub_1D5AB51C0();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  v6(v1, 1, 1, v5);
  uint64_t v7 = (void *)swift_allocObject();
  void v7[2] = 0;
  v7[3] = 0;
  v7[4] = v4;
  v7[5] = v3;
  swift_retain();
  sub_1D59F4A74(v1, (uint64_t)&unk_1EA726848, (uint64_t)v7);
  sub_1D594F53C(v1, (uint64_t *)&unk_1EBDE4C10);
  v6(v1, 1, 1, v5);
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v2;
  sub_1D59F4A74(v1, (uint64_t)&unk_1EA726858, (uint64_t)v8);
  sub_1D594F53C(v1, (uint64_t *)&unk_1EBDE4C10);
  uint64_t v9 = (void *)swift_task_alloc();
  v0[14] = v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726860);
  *uint64_t v9 = v0;
  v9[1] = sub_1D59F53B8;
  uint64_t v11 = v0[8];
  return MEMORY[0x1F4187E30](v11, 0, 0, v10);
}

uint64_t sub_1D59F53B8()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D59F56B4;
  }
  else {
    uint64_t v2 = sub_1D59F54CC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D59F54CC()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[8];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1D594F53C(v3, &qword_1EA7251B8);
    return sub_1D5AB5920();
  }
  else
  {
    uint64_t v6 = v0[11];
    uint64_t v5 = v0[12];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v5, v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v6, v5, v1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726818);
    sub_1D5AB5150();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v5, v1);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE5130);
    sub_1D5AB5280();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_1D59F56B4()
{
  v0[2] = v0[15];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726818);
  sub_1D5AB5140();
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE5130);
  sub_1D5AB5280();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1D59F57A0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_1D598AF68;
  return v8(a1);
}

uint64_t sub_1D59F587C(double a1)
{
  *(double *)(v1 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1D59F589C, 0, 0);
}

uint64_t sub_1D59F589C(unint64_t a1)
{
  double v2 = *(double *)(v1 + 16) * 1000000000.0;
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v2 <= -1.0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v2 >= 1.84467441e19)
  {
LABEL_9:
    __break(1u);
    return MEMORY[0x1F4187DE0](a1);
  }
  unint64_t v3 = (unint64_t)v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1D59F5980;
  a1 = v3;
  return MEMORY[0x1F4187DE0](a1);
}

uint64_t sub_1D59F5980()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return MEMORY[0x1F4188298](sub_1D59F5AB0, 0, 0);
  }
}

uint64_t sub_1D59F5AB0()
{
  sub_1D5AB5170();
  sub_1D59FCF5C(&qword_1EA725A20, MEMORY[0x1E4FBCF50]);
  swift_allocError();
  sub_1D5AB4D40();
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void HealthStore.birthday.getter()
{
  v7[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = *v0;
  v7[0] = 0;
  id v2 = objc_msgSend(v1, sel_dateOfBirthComponentsWithError_, v7);
  id v3 = v7[0];
  if (v2)
  {
    uint64_t v4 = v2;
    sub_1D5AB1B20();
    id v5 = v3;
  }
  else
  {
    id v6 = v7[0];
    sub_1D5AB1B50();

    swift_willThrow();
  }
}

id HealthStore.init()@<X0>(void *a1@<X8>)
{
  a1[4] = &type metadata for ActivityRingsQueryProvider;
  a1[5] = &protocol witness table for ActivityRingsQueryProvider;
  a1[6] = 0x3FF0000000000000;
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B0B8]), sel_init);
  *a1 = result;
  return result;
}

uint64_t HealthStore.init(activityRingsQueryProvider:activityRingsFetchTimeout:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, void *a4@<X8>)
{
  a4[4] = &type metadata for ActivityRingsQueryProvider;
  a4[5] = &protocol witness table for ActivityRingsQueryProvider;
  a4[6] = 0x3FF0000000000000;
  *a4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B0B8]), sel_init);
  if (*(void *)(a1 + 24))
  {
    sub_1D5950B78((long long *)a1, (uint64_t)v9);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(a4 + 1));
    uint64_t result = sub_1D5950B78(v9, (uint64_t)(a4 + 1));
    if (a3) {
      return result;
    }
  }
  else
  {
    uint64_t result = sub_1D594F53C(a1, &qword_1EA7266C8);
    if (a3) {
      return result;
    }
  }
  a4[6] = a2;
  return result;
}

SEL *HealthStore.biologicalSex.getter()
{
  return sub_1D59F5E1C((SEL *)&selRef_biologicalSexWithError_, (SEL *)&selRef_biologicalSex);
}

SEL *HealthStore.wheelchairUse.getter()
{
  return sub_1D59F5E1C((SEL *)&selRef_wheelchairUseWithError_, (SEL *)&selRef_wheelchairUse);
}

SEL *sub_1D59F5E1C(SEL *a1, SEL *a2)
{
  v10[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = *v2;
  v10[0] = 0;
  id v5 = objc_msgSend(v4, *a1, v10);
  if (v5)
  {
    id v6 = v5;
    id v7 = v10[0];
    a2 = (SEL *)[v6 *a2];
  }
  else
  {
    id v8 = v10[0];
    sub_1D5AB1B50();

    swift_willThrow();
  }
  return a2;
}

id HealthStore.bodyMass.getter()
{
  return sub_1D59F5F94((SEL *)&selRef__bodyMassCharacteristicQuantityWithError_);
}

id HealthStore.height.getter()
{
  return sub_1D59F5F94((SEL *)&selRef__heightCharacteristicQuantityWithError_);
}

id sub_1D59F5F94(SEL *a1)
{
  v7[1] = *(id *)MEMORY[0x1E4F143B8];
  id v2 = *v1;
  v7[0] = 0;
  id v3 = objc_msgSend(v2, *a1, v7);
  if (v3)
  {
    id v4 = v7[0];
  }
  else
  {
    id v5 = v7[0];
    sub_1D5AB1B50();

    swift_willThrow();
  }
  return v3;
}

uint64_t HealthStore.betaBlockerUse.getter()
{
  v8[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = *v0;
  v8[0] = 0;
  id v2 = objc_msgSend(v1, sel__cardioFitnessMedicationsUseWithError_, v8);
  unsigned __int8 v3 = v8[0];
  if (v2)
  {
    id v4 = v2;
    id v5 = v8[0];
    unsigned __int8 v3 = objc_msgSend(v4, sel_takingBetaBlockers);
  }
  else
  {
    id v6 = v8[0];
    sub_1D5AB1B50();

    swift_willThrow();
  }
  return v3 & 1;
}

void sub_1D59F611C()
{
  qword_1EBDE11E0 = 0;
  unk_1EBDE11E8 = 0;
  byte_1EBDE11D8 = 19;
}

uint64_t HealthStore.moveMode.getter()
{
  v14[1] = *(id *)MEMORY[0x1E4F143B8];
  if (qword_1EBDE11F8 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1EBDE11E0;
  uint64_t v2 = unk_1EBDE11E8;
  char v3 = byte_1EBDE11D8;
  swift_bridgeObjectRetain();
  sub_1D595764C(v3, v1, v2);
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  if (v5)
  {
    char v6 = sub_1D5AB2EA0();
    if (v6 != 2) {
      return v6 & 1;
    }
  }
  id v7 = *v0;
  v14[0] = 0;
  id v8 = objc_msgSend(v7, sel_activityMoveModeWithError_, v14);
  if (v8)
  {
    uint64_t v9 = v8;
    id v10 = v14[0];
    id v11 = objc_msgSend(v9, sel_activityMoveMode);

    char v6 = sub_1D59AF69C((uint64_t)v11);
    return v6 & 1;
  }
  id v13 = v14[0];
  sub_1D5AB1B50();

  return swift_willThrow();
}

id HealthStore.fitnessMode.getter()
{
  id result = objc_msgSend(self, sel_sharedBehavior);
  if (result)
  {
    uint64_t v1 = result;
    id v2 = objc_msgSend(result, sel_fitnessMode);

    return (id)(sub_1D59AF774((uint64_t)v2) & 1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t HealthStore.fetchUnitPreferences()(uint64_t a1)
{
  *(void *)(v2 + 192) = a1;
  *(void *)(v2 + 200) = v1;
  return MEMORY[0x1F4188298](sub_1D59F6330, 0, 0);
}

uint64_t sub_1D59F6330()
{
  uint64_t v1 = (void **)v0[25];
  sub_1D59E8AE0(0, (unint64_t *)&qword_1EBDE32E0);
  uint64_t v2 = (void *)MEMORY[0x1D9459830]((id)*MEMORY[0x1E4F2A5C0]);
  v0[26] = v2;
  char v3 = (void *)MEMORY[0x1D9459830]((id)*MEMORY[0x1E4F2A600]);
  v0[27] = v3;
  uint64_t v4 = (void *)MEMORY[0x1D9459830]((id)*MEMORY[0x1E4F2A7B0]);
  v0[28] = v4;
  uint64_t v5 = (void *)MEMORY[0x1D9459830]((id)*MEMORY[0x1E4F2A7E0]);
  v0[29] = v5;
  char v6 = *v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4C00);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D5ABFD00;
  *(void *)(inited + 32) = v2;
  *(void *)(inited + 40) = v3;
  *(void *)(inited + 48) = v4;
  *(void *)(inited + 56) = v5;
  unint64_t v21 = inited;
  sub_1D5AB5060();
  if (!(v21 >> 62))
  {
    uint64_t v8 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v9 = v2;
    id v10 = v3;
    id v11 = v4;
    id v12 = v5;
    if (!v8) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  id v13 = v2;
  id v14 = v3;
  id v15 = v4;
  id v16 = v5;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1D5AB5980();
  swift_bridgeObjectRelease();
  if (v17) {
LABEL_3:
  }
    sub_1D5979C00(v21);
LABEL_5:
  swift_bridgeObjectRelease();
  sub_1D59FCAC4();
  uint64_t v18 = sub_1D5AB5340();
  v0[30] = v18;
  swift_bridgeObjectRelease();
  v0[2] = v0;
  v0[7] = v0 + 23;
  v0[3] = sub_1D59F65BC;
  uint64_t v19 = swift_continuation_init();
  v0[18] = MEMORY[0x1E4F143A8];
  v0[19] = 0x40000000;
  v0[20] = sub_1D59F6A34;
  v0[21] = &block_descriptor;
  v0[22] = v19;
  objc_msgSend(v6, sel_preferredUnitsForQuantityTypes_completion_, v18, v0 + 18);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1D59F65BC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 248) = v1;
  if (v1) {
    uint64_t v2 = sub_1D59F699C;
  }
  else {
    uint64_t v2 = sub_1D59F66CC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D59F66CC()
{
  uint64_t v1 = *(void **)(v0 + 208);
  uint64_t v2 = *(void *)(v0 + 184);

  id v3 = v1;
  id v4 = sub_1D59F47F0(v3, v2);

  if (!v4) {
    id v4 = objc_msgSend(self, sel_kilocalorieUnit);
  }
  id v5 = *(id *)(v0 + 216);
  id v6 = sub_1D59F47F0(v5, v2);

  if (!v6) {
    id v6 = objc_msgSend(self, sel_kilocalorieUnit);
  }
  id v7 = *(id *)(v0 + 224);
  id v8 = sub_1D59F47F0(v7, v2);

  if (!v8) {
    id v8 = objc_msgSend(self, sel_meterUnitWithMetricPrefix_, 9);
  }
  id v9 = *(id *)(v0 + 232);
  id v10 = sub_1D59F47F0(v9, v2);
  swift_bridgeObjectRelease();

  if (!v10) {
    id v10 = objc_msgSend(self, sel_meterUnitWithMetricPrefix_, 9);
  }
  uint64_t v20 = *(void **)(v0 + 224);
  unint64_t v21 = *(void **)(v0 + 232);
  uint64_t v18 = *(void **)(v0 + 208);
  uint64_t v19 = *(void **)(v0 + 216);
  id v11 = objc_msgSend(v4, sel_unitString);
  sub_1D5AB4DF0();

  uint64_t v17 = v4;
  id v12 = objc_msgSend(v6, sel_unitString);
  sub_1D5AB4DF0();

  id v13 = objc_msgSend(v8, sel_unitString);
  sub_1D5AB4DF0();

  id v14 = objc_msgSend(v10, sel_unitString);
  sub_1D5AB4DF0();

  sub_1D5AB5300();
  sub_1D5AB2E30();

  id v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_1D59F699C()
{
  uint64_t v1 = (void *)v0[30];
  id v3 = (void *)v0[28];
  uint64_t v2 = (void *)v0[29];
  id v5 = (void *)v0[26];
  id v4 = (void *)v0[27];
  swift_willThrow();

  id v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1D59F6A34(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE5130);
    uint64_t v5 = swift_allocError();
    *id v6 = a3;
    id v7 = a3;
    return MEMORY[0x1F4188208](v3, v5);
  }
  else
  {
    sub_1D59E8AE0(0, (unint64_t *)&qword_1EBDE32E0);
    sub_1D59E8AE0(0, &qword_1EBDE32F8);
    sub_1D59FCAC4();
    **(void **)(*(void *)(v3 + 64) + 40) = sub_1D5AB4D70();
    return swift_continuation_throwingResume();
  }
}

uint64_t HealthStore.save(_:)(uint64_t a1)
{
  sub_1D59FCB2C(v1, (uint64_t)v6);
  uint64_t v3 = swift_allocObject();
  long long v4 = v6[1];
  *(_OWORD *)(v3 + 16) = v6[0];
  *(_OWORD *)(v3 + 32) = v4;
  *(_OWORD *)(v3 + 48) = v6[2];
  *(void *)(v3 + 64) = v7;
  *(void *)(v3 + 72) = a1;
  swift_bridgeObjectRetain();
  return sub_1D5AB4540();
}

{
  uint64_t v1;
  uint64_t v2;

  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 128) = v1;
  return MEMORY[0x1F4188298](sub_1D59F7354, 0, 0);
}

{
  uint64_t v1;
  uint64_t v2;

  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 128) = v1;
  return MEMORY[0x1F4188298](sub_1D59F77B4, 0, 0);
}

void sub_1D59F6BE4(uint64_t a1, uint64_t a2, void **a3, unint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  id v9 = *a3;
  if (a4 >> 62)
  {
    sub_1D59E8AE0(0, &qword_1EA7266E0);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1D5AB5930();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1D5AB5B00();
    sub_1D59E8AE0(0, &qword_1EA7266E0);
  }
  sub_1D59E8AE0(0, &qword_1EA7266E0);
  id v10 = (void *)sub_1D5AB5040();
  swift_bridgeObjectRelease();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1D59A1144;
  *(void *)(v11 + 24) = v8;
  v13[4] = sub_1D59FE800;
  v13[5] = v11;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  void v13[2] = sub_1D59F6DC4;
  v13[3] = &block_descriptor_132;
  id v12 = _Block_copy(v13);
  swift_release();
  objc_msgSend(v9, sel_saveObjects_withCompletion_, v10, v12);
  _Block_release(v12);
}

void sub_1D59F6DC4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t HealthStore.save(_:)(void *a1)
{
  sub_1D59FCB2C(v1, (uint64_t)v7);
  uint64_t v3 = swift_allocObject();
  long long v4 = v7[1];
  *(_OWORD *)(v3 + 16) = v7[0];
  *(_OWORD *)(v3 + 32) = v4;
  *(_OWORD *)(v3 + 48) = v7[2];
  *(void *)(v3 + 64) = v8;
  *(void *)(v3 + 72) = a1;
  id v5 = a1;
  return sub_1D5AB4540();
}

void sub_1D59F6EE0(uint64_t a1, uint64_t a2, void **a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  id v9 = *a3;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1D59A0E40;
  *(void *)(v10 + 24) = v8;
  v12[4] = sub_1D59FE7DC;
  v12[5] = v10;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  v12[2] = sub_1D59F6DC4;
  uint64_t v12[3] = &block_descriptor_122;
  uint64_t v11 = _Block_copy(v12);
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_saveObject_withCompletion_, a4, v11);
  _Block_release(v11);
}

void sub_1D59F7004(char a1, void *a2, void (*a3)(void *, void), uint64_t a4, const char *a5)
{
  if (a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE5130);
    sub_1D5AB5CA0();
    a3(v23, v24);
    sub_1D596EA00(v23, v24);
    return;
  }
  if (qword_1EBDE3740 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1D5AB4B50();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EBDE37B0);
  id v9 = a2;
  id v10 = a2;
  uint64_t v11 = sub_1D5AB4B30();
  os_log_type_t v12 = sub_1D5AB5410();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v22 = a3;
    id v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v25 = v14;
    *(_DWORD *)id v13 = 136446210;
    if (a2)
    {
      swift_getErrorValue();
      MEMORY[0x1D9459FA0]();
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE1030);
    uint64_t v16 = sub_1D5AB5610();
    unint64_t v18 = v17;
    swift_bridgeObjectRelease();
    sub_1D5951500(v16, v18, &v25);
    sub_1D5AB5680();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D5947000, v11, v12, a5, v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v14, -1, -1);
    MEMORY[0x1D945AAC0](v13, -1, -1);

    a3 = v22;
    id v15 = a2;
    if (a2) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }

  id v15 = a2;
  if (!a2)
  {
LABEL_11:
    uint64_t v19 = sub_1D5AB2D90();
    sub_1D59FCF5C(&qword_1EA726750, MEMORY[0x1E4F9CA88]);
    id v15 = (void *)swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v19 - 8) + 104))(v20, *MEMORY[0x1E4F9CA78], v19);
  }
LABEL_12:
  id v21 = a2;
  a3(v15, 1);
}

uint64_t sub_1D59F7354()
{
  uint64_t v1 = **(void ***)(v0 + 128);
  if (*(void *)(v0 + 120) >> 62)
  {
    sub_1D59E8AE0(0, &qword_1EA7266E0);
    swift_bridgeObjectRetain();
    sub_1D5AB5930();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1D5AB5B00();
    sub_1D59E8AE0(0, &qword_1EA7266E0);
  }
  sub_1D59E8AE0(0, &qword_1EA7266E0);
  uint64_t v2 = sub_1D5AB5040();
  *(void *)(v0 + 136) = v2;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 24) = sub_1D59F7510;
  uint64_t v3 = swift_continuation_init();
  *(void *)(v0 + 80) = MEMORY[0x1E4F143A8];
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_1D59F76F4;
  *(void *)(v0 + 104) = &block_descriptor_5;
  *(void *)(v0 + 112) = v3;
  objc_msgSend(v1, sel_saveObjects_withCompletion_, v2, v0 + 80);
  return MEMORY[0x1F41881E8](v0 + 16);
}

uint64_t sub_1D59F7510()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 144) = v1;
  if (v1) {
    uint64_t v2 = sub_1D59F7684;
  }
  else {
    uint64_t v2 = sub_1D59F7620;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D59F7620()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D59F7684()
{
  uint64_t v1 = *(void **)(v0 + 136);
  swift_willThrow();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1D59F76F4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a2)
  {
    return swift_continuation_throwingResume();
  }
  else
  {
    if (a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE5130);
      uint64_t v6 = swift_allocError();
      *uint64_t v7 = a3;
      id v8 = a3;
      a1 = v3;
      a2 = v6;
    }
    else
    {
      __break(1u);
    }
    return MEMORY[0x1F4188208](a1, a2);
  }
}

uint64_t sub_1D59F77B4()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = **(void ***)(v0 + 128);
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 24) = sub_1D59F78B0;
  uint64_t v3 = swift_continuation_init();
  *(void *)(v0 + 80) = MEMORY[0x1E4F143A8];
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_1D59F76F4;
  *(void *)(v0 + 104) = &block_descriptor_7;
  *(void *)(v0 + 112) = v3;
  objc_msgSend(v2, sel_saveObject_withCompletion_, v1, v0 + 80);
  return MEMORY[0x1F41881E8](v0 + 16);
}

uint64_t sub_1D59F78B0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 136) = v1;
  if (v1) {
    uint64_t v2 = sub_1D59F79C0;
  }
  else {
    uint64_t v2 = sub_1D599BACC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D59F79C0()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t HealthStore.save(_:to:)(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return MEMORY[0x1F4188298](sub_1D59F7A50, 0, 0);
}

uint64_t sub_1D59F7A50()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = **(void ***)(v0 + 136);
  sub_1D59E8AE0(0, &qword_1EBDE15F0);
  uint64_t v3 = sub_1D5AB5040();
  *(void *)(v0 + 144) = v3;
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 24) = sub_1D59F7B8C;
  uint64_t v4 = swift_continuation_init();
  *(void *)(v0 + 80) = MEMORY[0x1E4F143A8];
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_1D59F76F4;
  *(void *)(v0 + 104) = &block_descriptor_9;
  *(void *)(v0 + 112) = v4;
  objc_msgSend(v2, sel_addSamples_toWorkout_completion_, v3, v1, v0 + 80);
  return MEMORY[0x1F41881E8](v0 + 16);
}

uint64_t sub_1D59F7B8C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 152) = v1;
  if (v1) {
    uint64_t v2 = sub_1D59F7D00;
  }
  else {
    uint64_t v2 = sub_1D59F7C9C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D59F7C9C()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D59F7D00()
{
  uint64_t v1 = *(void **)(v0 + 144);
  swift_willThrow();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

Swift::Void __swiftcall HealthStore.execute(_:)(HKQuery a1)
{
  objc_msgSend(*v1, sel_executeQuery_, a1.super.isa);
}

Swift::Void __swiftcall HealthStore.stop(_:)(HKQuery a1)
{
  objc_msgSend(*v1, sel_stopQuery_, a1.super.isa);
}

id HealthStore.makeWorkoutSession(session:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v6 = sub_1D5AB4800();
  MEMORY[0x1F4188790](v6);
  id v8 = (char *)&v14[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v9 + 16))(v8, a1);
  void v14[3] = &type metadata for HealthStore;
  void v14[4] = &protocol witness table for HealthStore;
  v14[0] = swift_allocObject();
  sub_1D59FCB2C(v2, v14[0] + 16);
  id v10 = (objc_class *)type metadata accessor for HealthWorkoutSession();
  id v11 = objc_allocWithZone(v10);
  id result = HealthWorkoutSession.init(session:healthStore:)(v8, v14);
  if (!v3)
  {
    a2[3] = v10;
    a2[4] = &protocol witness table for HealthWorkoutSession;
    *a2 = result;
  }
  return result;
}

HKWorkoutSession __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> HealthStore.makeWorkoutSession(configuration:)(HKWorkoutConfiguration configuration)
{
  v11[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v3 = *v1;
  id v4 = objc_allocWithZone(MEMORY[0x1E4F2B7C0]);
  v11[0] = 0;
  id v5 = v3;
  uint64_t v6 = configuration.super.isa;
  id v7 = objc_msgSend(v4, sel_initWithHealthStore_configuration_error_, v5, v6, v11);
  if (v7)
  {
    id v8 = v11[0];
  }
  else
  {
    id v9 = v11[0];
    sub_1D5AB1B50();

    swift_willThrow();
  }

  return (HKWorkoutSession)v7;
}

HKLiveWorkoutDataSource __swiftcall HealthStore.makeWorkoutDataSource(configuration:)(HKWorkoutConfiguration configuration)
{
  uint64_t v3 = *v1;
  id v4 = objc_allocWithZone(MEMORY[0x1E4F2B158]);
  return (HKLiveWorkoutDataSource)objc_msgSend(v4, sel_initWithHealthStore_workoutConfiguration_, v3, configuration.super.isa);
}

uint64_t HealthStore.fetchActivityRings()(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726700);
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726708);
  v2[7] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[8] = v5;
  v2[9] = *(void *)(v5 + 64);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D59F8154, 0, 0);
}

uint64_t sub_1D59F8154()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[8];
  uint64_t v16 = v0[10];
  uint64_t v4 = v0[6];
  uint64_t v3 = v0[7];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[3];
  *(void *)(swift_task_alloc() + 16) = v7;
  uint64_t v8 = sub_1D5AB2490();
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v4, *MEMORY[0x1E4FBD120], v5);
  sub_1D5AB52E0();
  swift_task_dealloc();
  uint64_t v9 = *(void *)(v7 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v16, v1, v3);
  unint64_t v10 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v11 = swift_allocObject();
  v0[12] = v11;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))(v11 + v10, v16, v3);
  os_log_type_t v12 = (void *)swift_task_alloc();
  v0[13] = v12;
  v12[2] = &unk_1EA726718;
  uint64_t v12[3] = v11;
  v12[4] = v9;
  id v13 = (void *)swift_task_alloc();
  v0[14] = v13;
  *id v13 = v0;
  v13[1] = sub_1D59F8374;
  uint64_t v14 = v0[2];
  return MEMORY[0x1F4188160](v14, 0, 0, 0xD00000000000001FLL, 0x80000001D5AC6EF0, sub_1D59FCD6C, v12, v8);
}

uint64_t sub_1D59F8374()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1D59F8534;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v2 = sub_1D59F8498;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}