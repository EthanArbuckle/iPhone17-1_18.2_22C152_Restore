uint64_t sub_1D59F8498()
{
  void *v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  (*(void (**)(void, void))(v0[8] + 8))(v0[11], v0[7]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1D59F8534()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  swift_release();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1D59F85EC(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7251B8);
  v2[4] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726868);
  v2[5] = swift_task_alloc();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726708);
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726870);
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726878);
  v2[12] = v5;
  v2[13] = *(void *)(v5 - 8);
  v2[14] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D59F87D0, 0, 0);
}

uint64_t sub_1D59F87D0()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[9];
  (*(void (**)(void, void, void))(v0[7] + 16))(v0[8], v0[3], v0[6]);
  sub_1D596DF9C(&qword_1EA726880, &qword_1EA726708);
  sub_1D5AB5A30();
  MEMORY[0x1D9459DC0](v3);
  sub_1D5AB52A0();
  sub_1D5AB59E0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_1D5AB5A20();
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA726888 + dword_1EA726888);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[15] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1D59F897C;
  uint64_t v5 = v0[4];
  return v7(v5, 0, 0);
}

uint64_t sub_1D59F897C()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D59F8C44;
  }
  else {
    uint64_t v2 = sub_1D59F8A90;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D59F8A90()
{
  uint64_t v1 = v0[4];
  (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
  uint64_t v2 = sub_1D5AB2490();
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_1D59E9834();
    swift_allocError();
    *uint64_t v4 = 1;
    swift_willThrow();
  }
  else
  {
    (*(void (**)(void, void, uint64_t))(v3 + 32))(v0[2], v0[4], v2);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1D59F8C44()
{
  (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1D59F8CFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[13] = a3;
  v4[14] = v3;
  v4[11] = a1;
  v4[12] = a2;
  if (a2)
  {
    swift_getObjectType();
    uint64_t v5 = sub_1D5AB5120();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  v4[15] = v5;
  v4[16] = v7;
  return MEMORY[0x1F4188298](sub_1D59F8DA0, v5, v7);
}

uint64_t sub_1D59F8DA0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726878);
  if (sub_1D5AB59E0())
  {
    uint64_t v1 = (void (*)(void *, void))sub_1D5AB5A00();
    --*v2;
    v1(v0 + 2, 0);
    v0[17] = sub_1D5AB59F0();
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726868);
    uint64_t v4 = sub_1D596DF9C(&qword_1EA726890, &qword_1EA726868);
    uint64_t v5 = (void *)swift_task_alloc();
    v0[18] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1D59F8F80;
    uint64_t v6 = v0[12];
    uint64_t v7 = v0[13];
    uint64_t v8 = v0[11];
    return MEMORY[0x1F4187C80](v8, v6, v7, v0 + 10, v3, v4);
  }
  else
  {
    uint64_t v9 = v0[11];
    uint64_t v10 = sub_1D5AB2490();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
    v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
}

uint64_t sub_1D59F8F80()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = *(void *)(v2 + 120);
    uint64_t v5 = *(void *)(v2 + 128);
    return MEMORY[0x1F4188298](sub_1D59F90C4, v4, v5);
  }
  else
  {
    (*(void (**)(void))(v2 + 136))();
    uint64_t v6 = *(uint64_t (**)(void))(v3 + 8);
    return v6();
  }
}

uint64_t sub_1D59F90C4()
{
  (*(void (**)(void))(v0 + 136))();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t HealthStore.makeActivityRingsStream()(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726728);
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D59F91FC, 0, 0);
}

uint64_t sub_1D59F91FC()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v4 = v0[3];
  uint64_t v3 = v0[4];
  *(void *)(swift_task_alloc() + 16) = v4;
  sub_1D5AB2490();
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E4FBD028], v3);
  sub_1D5AB5220();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

void sub_1D59F92EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726808);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  __swift_project_boxed_opaque_existential_1((void *)(a2 + 8), v9);
  v11 = (void *)(*(uint64_t (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v10 + 8))(sub_1D59FE178, v8, v9, v10);
  sub_1D59FCB2C(a2, (uint64_t)v16);
  uint64_t v12 = swift_allocObject();
  long long v13 = v16[1];
  *(_OWORD *)(v12 + 16) = v16[0];
  *(_OWORD *)(v12 + 32) = v13;
  *(_OWORD *)(v12 + 48) = v16[2];
  *(void *)(v12 + 64) = v17;
  *(void *)(v12 + 72) = v11;
  id v14 = v11;
  sub_1D5AB51E0();
  objc_msgSend(*(id *)a2, sel_executeQuery_, v14);
  swift_release();
}

void sub_1D59F94E4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726810);
  uint64_t v25 = *(void *)(v2 - 8);
  uint64_t v26 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D5AB2490();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  v11 = (char *)&v25 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726548);
  MEMORY[0x1F4188790](v12);
  id v14 = (void **)((char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D596E6CC(a1, (uint64_t)v14, &qword_1EA726548);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = *v14;
    if (qword_1EBDE3740 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1D5AB4B50();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EBDE37B0);
    id v17 = v15;
    id v18 = v15;
    v19 = sub_1D5AB4B30();
    os_log_type_t v20 = sub_1D5AB5410();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v30 = v22;
      *(_DWORD *)v21 = 136315138;
      swift_getErrorValue();
      uint64_t v23 = MEMORY[0x1D9459FA0](v28, v29);
      uint64_t v27 = sub_1D5951500(v23, v24, &v30);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D5947000, v19, v20, "HealthStore: An error occurred while loading ActivityRings: %s", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v22, -1, -1);
      MEMORY[0x1D945AAC0](v21, -1, -1);
    }
    else
    {
    }
  }
  else
  {
    (*(void (**)(char *, void **, uint64_t))(v6 + 32))(v11, v14, v5);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726808);
    sub_1D5AB5200();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v4, v26);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
}

uint64_t HealthStore.makeActivityRingsObserver(streamHandler:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4C10);
  v3[5] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726728);
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726738);
  v3[9] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[10] = v6;
  v3[11] = *(void *)(v6 + 64);
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D59F9A60, 0, 0);
}

uint64_t sub_1D59F9A60()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[10];
  uint64_t v19 = v0[12];
  uint64_t v4 = v0[8];
  uint64_t v5 = v0[9];
  uint64_t v7 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v8 = v0[4];
  uint64_t v18 = v0[5];
  uint64_t v21 = v0[3];
  uint64_t v20 = v0[2];
  *(void *)(swift_task_alloc() + 16) = v8;
  sub_1D5AB2490();
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v4, *MEMORY[0x1E4FBD028], v7);
  sub_1D5AB5220();
  swift_task_dealloc();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v9(v1, v2, v5);
  type metadata accessor for ActivityRingsObserver();
  uint64_t v17 = swift_allocObject();
  uint64_t v10 = sub_1D5AB51C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v18, 1, 1, v10);
  v9(v19, v1, v5);
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v12 = (char *)swift_allocObject();
  *((void *)v12 + 2) = 0;
  *((void *)v12 + 3) = 0;
  *((void *)v12 + 4) = v20;
  *((void *)v12 + 5) = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(&v12[v11], v19, v5);
  swift_retain();
  uint64_t v13 = sub_1D59F48C8(v18, (uint64_t)&unk_1EA726740, (uint64_t)v12);
  id v14 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v14(v1, v5);
  *(void *)(v17 + 16) = v13;
  v14(v2, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(uint64_t))v0[1];
  return v15(v17);
}

void sub_1D59F9CF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726898);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  __swift_project_boxed_opaque_existential_1((void *)(a2 + 8), v9);
  unint64_t v11 = (void *)(*(uint64_t (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v10 + 8))(sub_1D59FE6A0, v8, v9, v10);
  sub_1D59FCB2C(a2, (uint64_t)v16);
  uint64_t v12 = swift_allocObject();
  long long v13 = v16[1];
  *(_OWORD *)(v12 + 16) = v16[0];
  *(_OWORD *)(v12 + 32) = v13;
  *(_OWORD *)(v12 + 48) = v16[2];
  *(void *)(v12 + 64) = v17;
  *(void *)(v12 + 72) = v11;
  id v14 = v11;
  sub_1D5AB52B0();
  objc_msgSend(*(id *)a2, sel_executeQuery_, v14);
  swift_release();
}

uint64_t sub_1D59F9EF0(uint64_t a1, uint64_t a2)
{
  v27[1] = a2;
  v27[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7268A0);
  uint64_t v3 = *(void *)(v27[0] - 8);
  MEMORY[0x1F4188790](v27[0]);
  uint64_t v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D5AB2490();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v27 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726548);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (void **)((char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D596E6CC(a1, (uint64_t)v15, &qword_1EA726548);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = *v15;
    if (qword_1EBDE3740 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1D5AB4B50();
    __swift_project_value_buffer(v17, (uint64_t)qword_1EBDE37B0);
    id v18 = v16;
    id v19 = v16;
    uint64_t v20 = sub_1D5AB4B30();
    os_log_type_t v21 = sub_1D5AB5410();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v28 = v23;
      *(_DWORD *)uint64_t v22 = 136315138;
      swift_getErrorValue();
      uint64_t v24 = MEMORY[0x1D9459FA0](v27[4], v27[5]);
      v27[2] = sub_1D5951500(v24, v25, &v28);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D5947000, v20, v21, "HealthStore: An error occurred while loading ActivityRings: %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v23, -1, -1);
      MEMORY[0x1D945AAC0](v22, -1, -1);
    }
    else
    {
    }
    uint64_t v28 = (uint64_t)v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726898);
    return sub_1D5AB52D0();
  }
  else
  {
    (*(void (**)(char *, void **, uint64_t))(v7 + 32))(v12, v15, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726898);
    sub_1D5AB52C0();
    (*(void (**)(char *, void))(v3 + 8))(v5, v27[0]);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
}

uint64_t HealthStore.queryTotalMindfulMinutes()()
{
  v1[3] = v0;
  uint64_t v2 = sub_1D5AB1D70();
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  uint64_t v3 = sub_1D5AB1CE0();
  v1[7] = v3;
  v1[8] = *(void *)(v3 - 8);
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D59FA44C, 0, 0);
}

uint64_t sub_1D59FA44C()
{
  sub_1D59E8AE0(0, (unint64_t *)&unk_1EBDE15D8);
  id v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_categoryTypeForIdentifier_, *MEMORY[0x1E4F29818]);
  v0[13] = v1;
  if (v1)
  {
    id v2 = v1;
    if (qword_1EBDE3740 != -1) {
      swift_once();
    }
    uint64_t v3 = v0[10];
    uint64_t v4 = v0[8];
    uint64_t v5 = v0[5];
    uint64_t v6 = v0[6];
    uint64_t v25 = v0[4];
    uint64_t v26 = v0[7];
    uint64_t v27 = v0[3];
    uint64_t v7 = sub_1D5AB4B50();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EBDE37B0);
    v8._countAndFlagsBits = 0xD000000000000068;
    v8._object = (void *)0x80000001D5AC8840;
    v9._object = (void *)0x80000001D5AC88B0;
    v9._countAndFlagsBits = 0xD00000000000001ALL;
    Logger.trace(file:function:)(v8, v9);
    sub_1D5AB4DF0();
    id v10 = objc_allocWithZone(MEMORY[0x1E4F29008]);
    uint64_t v11 = (void *)sub_1D5AB4DE0();
    swift_bridgeObjectRelease();
    id v24 = objc_msgSend(v10, sel_initWithKey_ascending_, v11, 0);
    v0[14] = v24;

    sub_1D5AB1CD0();
    sub_1D5AB1CD0();
    sub_1D5AB1D50();
    sub_1D5AB1C50();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v25);
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v0[15] = v12;
    v0[16] = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v12(v3, v26);
    uint64_t v13 = self;
    uint64_t v14 = (void *)sub_1D5AB1C80();
    uint64_t v15 = (void *)sub_1D5AB1C80();
    id v16 = objc_msgSend(v13, sel_predicateForSamplesWithStartDate_endDate_options_, v14, v15, 0);
    v0[17] = v16;

    uint64_t v17 = (void *)swift_task_alloc();
    v0[18] = v17;
    v17[2] = v2;
    v17[3] = v16;
    v17[4] = v24;
    v17[5] = v27;
    id v18 = (void *)swift_task_alloc();
    v0[19] = v18;
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE15C8);
    *id v18 = v0;
    v18[1] = sub_1D59FA888;
    return MEMORY[0x1F4188160](v0 + 2, 0, 0, 0xD00000000000001ALL, 0x80000001D5AC88B0, sub_1D59FCFA4, v17, v19);
  }
  else
  {
    uint64_t v20 = sub_1D5AB2D90();
    sub_1D59FCF5C(&qword_1EA726750, MEMORY[0x1E4F9CA88]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CA80], v20);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = (uint64_t (*)(void))v0[1];
    return v22();
  }
}

uint64_t sub_1D59FA888()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  if (v0) {
    id v2 = sub_1D59FAC00;
  }
  else {
    id v2 = sub_1D59FA9BC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D59FA9BC()
{
  unint64_t v1 = *(void *)(v0 + 16);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1D5AB5980();
    uint64_t v2 = result;
    unint64_t v24 = v1;
    if (result) {
      goto LABEL_3;
    }
LABEL_10:
    double v5 = 0.0;
    goto LABEL_11;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v24 = v1;
  if (!v2) {
    goto LABEL_10;
  }
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v4 = 0;
  double v5 = 0.0;
  do
  {
    if ((v1 & 0xC000000000000001) != 0) {
      id v6 = (id)MEMORY[0x1D9459C10](v4, v24);
    }
    else {
      id v6 = *(id *)(v24 + 8 * v4 + 32);
    }
    uint64_t v7 = v6;
    Swift::String v8 = *(void (**)(uint64_t, uint64_t))(v0 + 120);
    uint64_t v10 = *(void *)(v0 + 72);
    uint64_t v9 = *(void *)(v0 + 80);
    uint64_t v11 = *(void *)(v0 + 56);
    ++v4;
    id v12 = objc_msgSend(v6, sel_endDate);
    sub_1D5AB1CB0();

    id v13 = objc_msgSend(v7, sel_startDate);
    sub_1D5AB1CB0();

    sub_1D5AB1C70();
    double v15 = v14;
    v8(v10, v11);
    v8(v9, v11);

    double v5 = v5 + v15;
  }
  while (v2 != v4);
LABEL_11:
  uint64_t v17 = *(void **)(v0 + 112);
  id v16 = *(void (**)(uint64_t, uint64_t))(v0 + 120);
  uint64_t v18 = *(void *)(v0 + 96);
  uint64_t v19 = *(void **)(v0 + 104);
  uint64_t v20 = *(void *)(v0 + 88);
  uint64_t v21 = *(void *)(v0 + 56);

  swift_bridgeObjectRelease();
  v16(v20, v21);
  v16(v18, v21);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v23 = *(uint64_t (**)(__n128))(v0 + 8);
  v22.n128_f64[0] = v5 / 60.0;
  return v23(v22);
}

uint64_t sub_1D59FAC00()
{
  unint64_t v1 = *(void **)(v0 + 136);
  uint64_t v3 = *(void **)(v0 + 112);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v5 = *(void *)(v0 + 88);
  uint64_t v6 = *(void *)(v0 + 56);

  v2(v5, v6);
  v2(v4, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

void sub_1D59FACDC(uint64_t a1, void *a2, void *a3, void *a4, id *a5)
{
  uint64_t v23 = a5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE15D0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4C00);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1D5ABFD10;
  *(void *)(v12 + 32) = a4;
  aBlock[0] = v12;
  sub_1D5AB5060();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v14 + v13, (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  id v15 = objc_allocWithZone(MEMORY[0x1E4F2B440]);
  sub_1D59E8AE0(0, &qword_1EA726518);
  id v16 = a4;
  id v17 = a3;
  id v18 = a2;
  uint64_t v19 = (void *)sub_1D5AB5040();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1D59FE020;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D59FCA0C;
  aBlock[3] = &block_descriptor_75;
  uint64_t v20 = _Block_copy(aBlock);
  id v21 = objc_msgSend(v15, sel_initWithSampleType_predicate_limit_sortDescriptors_resultsHandler_, v18, v17, 0, v19, v20);

  _Block_release(v20);
  swift_release();
  objc_msgSend(*v23, sel_executeQuery_, v21);
}

uint64_t HealthStore.queryStatistics(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x1F4188298](sub_1D59FAF88, 0, 0);
}

uint64_t sub_1D59FAF88()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[3];
  uint64_t v4 = self;
  uint64_t v5 = (void *)sub_1D5AB4DE0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726760);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1D5AB90F0;
  *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v6 + 32) = v3;
  *(void *)(v6 + 40) = v1;
  swift_bridgeObjectRetain();
  uint64_t v7 = (void *)sub_1D5AB5040();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v4, sel_predicateForObjectsWithMetadataKey_allowedValues_, v5, v7);
  v0[6] = v8;

  uint64_t v9 = (void *)swift_allocObject();
  v0[7] = v9;
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = 0xE000000000000000;
  uint64_t v10 = (void *)swift_task_alloc();
  v0[8] = v10;
  v10[2] = v8;
  v10[3] = v3;
  v10[4] = v1;
  v10[5] = v9;
  v10[6] = v2;
  uint64_t v11 = (void *)swift_task_alloc();
  v0[9] = v11;
  void *v11 = v0;
  v11[1] = sub_1D59FB188;
  uint64_t v12 = v0[2];
  return MEMORY[0x1F4188160](v12, 0, 0, 0xD000000000000015, 0x80000001D5AC8900, sub_1D59FCFE8, v10, &type metadata for ArchivedSessionHealthKitStatistics);
}

uint64_t sub_1D59FB188()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1D59FB30C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1D59FB2A4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D59FB2A4()
{
  uint64_t v1 = *(void **)(v0 + 48);
  swift_release();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1D59FB30C()
{
  uint64_t v1 = *(void **)(v0 + 48);
  swift_release();

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_1D59FB380(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, id *a6)
{
  id v25 = a2;
  uint64_t v26 = a6;
  uint64_t v24 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7267F8);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D59E8AE0(0, (unint64_t *)&unk_1EBDE15D8);
  id v13 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_workoutType);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v15 = (v11 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16 + v14, v12, v9);
  id v17 = (void *)(v16 + v15);
  *id v17 = v24;
  v17[1] = a4;
  *(void *)(v16 + ((v15 + 23) & 0xFFFFFFFFFFFFFFF8)) = a5;
  id v18 = objc_allocWithZone(MEMORY[0x1E4F2B440]);
  sub_1D59E8AE0(0, &qword_1EA726518);
  swift_bridgeObjectRetain();
  swift_retain();
  id v19 = v25;
  uint64_t v20 = (void *)sub_1D5AB5040();
  aBlock[4] = sub_1D59FDF4C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D59FCA0C;
  aBlock[3] = &block_descriptor_69;
  id v21 = _Block_copy(aBlock);
  id v22 = objc_msgSend(v18, sel_initWithSampleType_predicate_limit_sortDescriptors_resultsHandler_, v13, v19, 1, v20, v21);

  _Block_release(v21);
  swift_release();
  objc_msgSend(*v26, sel_executeQuery_, v22);
}

uint64_t sub_1D59FB62C(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v14 = sub_1D5AB1D20();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  id v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    if (!a3)
    {
      sub_1D59E9834();
      uint64_t v24 = swift_allocError();
      *uint64_t v27 = 2;
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v24 = (uint64_t)a3;
LABEL_11:
    *(void *)&long long v62 = v24;
    id v25 = a3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7267F8);
    return sub_1D5AB5140();
  }
  if (a3) {
    goto LABEL_10;
  }
  v55 = v18;
  uint64_t v56 = v16;
  uint64_t v59 = a5;
  uint64_t v54 = a4;
  if (qword_1EBDE11C0 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1D5AB4B50();
  __swift_project_value_buffer(v19, (uint64_t)qword_1EBDE13C0);
  swift_bridgeObjectRetain_n();
  uint64_t v20 = sub_1D5AB4B30();
  LOBYTE(v21) = sub_1D5AB5430();
  unint64_t v22 = a2 >> 62;
  if (!os_log_type_enabled((os_log_t)v20, (os_log_type_t)v21))
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_14;
  }
  uint64_t v7 = (uint8_t *)swift_slowAlloc();
  *(_DWORD *)uint64_t v7 = 134217984;
  if (v22) {
    goto LABEL_46;
  }
  uint64_t v23 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease();
    *(void *)&long long v62 = v23;
    sub_1D5AB5680();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D5947000, (os_log_t)v20, (os_log_type_t)v21, "[HealthStore] HealthKit query returned %ld results", v7, 0xCu);
    MEMORY[0x1D945AAC0](v7, -1, -1);

LABEL_14:
    uint64_t v57 = a6;
    v58 = a7 + 2;
    if (v22) {
      break;
    }
    uint64_t v20 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v20) {
      goto LABEL_42;
    }
LABEL_16:
    uint64_t v21 = v20 - 1;
    if (v20 >= 1)
    {
      swift_beginAccess();
      uint64_t v28 = 0;
      v53 = (void (**)(char *, uint64_t))(v15 + 8);
      uint64_t v60 = 0x80000001D5AC88D0;
      uint64_t v61 = MEMORY[0x1E4FBC840] + 8;
      if ((a2 & 0xC000000000000001) != 0) {
        goto LABEL_20;
      }
LABEL_21:
      for (id i = *(id *)(a2 + 8 * v28 + 32); ; id i = (id)MEMORY[0x1D9459C10](v28, a2))
      {
        uint64_t v30 = i;
        self;
        uint64_t v31 = swift_dynamicCastObjCClass();
        if (!v31)
        {

          goto LABEL_41;
        }
        v32 = (void *)v31;
        id v33 = v30;
        id v34 = objc_msgSend(v32, sel_totalEnergyBurned);
        if (!v34) {
          goto LABEL_39;
        }
        v35 = v34;
        id v36 = objc_msgSend(self, sel_kilocalorieUnit);
        objc_msgSend(v35, sel_doubleValueForUnit_, v36);
        uint64_t v38 = v37;

        id v39 = objc_msgSend(v32, sel_metadata);
        if (v39)
        {
          v40 = v39;
          uint64_t v41 = sub_1D5AB4D70();

          if (*(void *)(v41 + 16) && (unint64_t v42 = sub_1D5952584(0xD000000000000022, v60), (v43 & 1) != 0))
          {
            sub_1D5951F00(*(void *)(v41 + 56) + 32 * v42, (uint64_t)&v62);
          }
          else
          {
            long long v62 = 0u;
            long long v63 = 0u;
          }
          swift_bridgeObjectRelease();
          if (*((void *)&v63 + 1))
          {
            if (swift_dynamicCast())
            {
              if (v64 == v59 && v65 == v57)
              {
                swift_bridgeObjectRelease();
LABEL_38:
                id v45 = objc_msgSend(v32, sel_UUID);
                v46 = v55;
                sub_1D5AB1D10();

                uint64_t v47 = sub_1D5AB1CF0();
                uint64_t v49 = v48;

                (*v53)(v46, v56);
                a7[2] = v38;
                a7[3] = v47;
                a7[4] = v49;

                swift_bridgeObjectRelease();
                goto LABEL_41;
              }
              char v44 = sub_1D5AB5AF0();
              swift_bridgeObjectRelease();
              if (v44) {
                goto LABEL_38;
              }
            }
LABEL_39:

            goto LABEL_40;
          }
        }
        else
        {
          long long v62 = 0u;
          long long v63 = 0u;
        }

        sub_1D594F53C((uint64_t)&v62, &qword_1EBDE4E20);
LABEL_40:

LABEL_41:
        if (v21 == v28) {
          goto LABEL_42;
        }
        ++v28;
        if ((a2 & 0xC000000000000001) == 0) {
          goto LABEL_21;
        }
LABEL_20:
        ;
      }
    }
    __break(1u);
LABEL_46:
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1D5AB5980();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1D5AB5980();
  if (v20) {
    goto LABEL_16;
  }
LABEL_42:
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v51 = a7[3];
  uint64_t v50 = a7[4];
  uint64_t v64 = a7[2];
  uint64_t v65 = v51;
  uint64_t v66 = v50;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7267F8);
  return sub_1D5AB5150();
}

uint64_t sub_1D59FBC00(uint64_t a1)
{
  sub_1D59FCB2C(v1, (uint64_t)v6);
  uint64_t v3 = swift_allocObject();
  long long v4 = v6[1];
  *(_OWORD *)(v3 + 16) = v6[0];
  *(_OWORD *)(v3 + 32) = v4;
  *(_OWORD *)(v3 + 48) = v6[2];
  *(void *)(v3 + 64) = v7;
  *(void *)(v3 + 72) = a1;
  swift_bridgeObjectRetain();
  return sub_1D5AB4540();
}

uint64_t sub_1D59FBCA8(void *a1)
{
  sub_1D59FCB2C(v1, (uint64_t)v7);
  uint64_t v3 = swift_allocObject();
  long long v4 = v7[1];
  *(_OWORD *)(v3 + 16) = v7[0];
  *(_OWORD *)(v3 + 32) = v4;
  *(_OWORD *)(v3 + 48) = v7[2];
  *(void *)(v3 + 64) = v8;
  *(void *)(v3 + 72) = a1;
  id v5 = a1;
  return sub_1D5AB4540();
}

uint64_t sub_1D59FBD4C(uint64_t a1)
{
  long long v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *long long v4 = v2;
  v4[1] = sub_1D598AF68;
  v4[15] = a1;
  v4[16] = v1;
  return MEMORY[0x1F4188298](sub_1D59F7354, 0, 0);
}

uint64_t sub_1D59FBDF8(uint64_t a1)
{
  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 128) = v1;
  return MEMORY[0x1F4188298](sub_1D59FBE18, 0, 0);
}

uint64_t sub_1D59FBE18()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = **(void ***)(v0 + 128);
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 24) = sub_1D59F78B0;
  uint64_t v3 = swift_continuation_init();
  *(void *)(v0 + 80) = MEMORY[0x1E4F143A8];
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_1D59F76F4;
  *(void *)(v0 + 104) = &block_descriptor_54;
  *(void *)(v0 + 112) = v3;
  objc_msgSend(v2, sel_saveObject_withCompletion_, v1, v0 + 80);
  return MEMORY[0x1F41881E8](v0 + 16);
}

uint64_t sub_1D59FBF14(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1D598AF68;
  v6[16] = a2;
  v6[17] = v2;
  v6[15] = a1;
  return MEMORY[0x1F4188298](sub_1D59F7A50, 0, 0);
}

id sub_1D59FBFD0(uint64_t a1)
{
  return objc_msgSend(*v1, sel_executeQuery_, a1);
}

id sub_1D59FBFE4(uint64_t a1)
{
  return objc_msgSend(*v1, sel_stopQuery_, a1);
}

uint64_t sub_1D59FBFF8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1D59FC084;
  return HealthStore.queryTotalMindfulMinutes()();
}

uint64_t sub_1D59FC084(double a1)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(__n128))(v7 + 8);
  if (!v1) {
    v4.n128_f64[0] = a1;
  }
  return v5(v4);
}

uint64_t sub_1D59FC184(uint64_t a1)
{
  __n128 v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *__n128 v4 = v2;
  v4[1] = sub_1D598AF68;
  v4[24] = a1;
  v4[25] = v1;
  return MEMORY[0x1F4188298](sub_1D59F6330, 0, 0);
}

void sub_1D59FC230()
{
}

SEL *sub_1D59FC248()
{
  return HealthStore.biologicalSex.getter();
}

SEL *sub_1D59FC260()
{
  return HealthStore.wheelchairUse.getter();
}

id sub_1D59FC278()
{
  return HealthStore.bodyMass.getter();
}

id sub_1D59FC290()
{
  return HealthStore.height.getter();
}

uint64_t sub_1D59FC2A8()
{
  return HealthStore.betaBlockerUse.getter() & 1;
}

uint64_t sub_1D59FC2C4()
{
  return HealthStore.moveMode.getter() & 1;
}

id sub_1D59FC2E0()
{
  id result = objc_msgSend(self, sel_sharedBehavior);
  if (result)
  {
    uint64_t v1 = result;
    id v2 = objc_msgSend(result, sel_fitnessMode);

    return (id)(sub_1D59AF774((uint64_t)v2) & 1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1D59FC358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v10 = sub_1D5AB4800();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v18[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v13 + 16))(v12, a1);
  v18[3] = a2;
  v18[4] = a3;
  v18[0] = swift_allocObject();
  sub_1D59FCB2C(v4, v18[0] + 16);
  uint64_t v14 = (objc_class *)type metadata accessor for HealthWorkoutSession();
  id v15 = objc_allocWithZone(v14);
  id result = HealthWorkoutSession.init(session:healthStore:)(v12, v18);
  if (!v5)
  {
    a4[3] = v14;
    a4[4] = &protocol witness table for HealthWorkoutSession;
    *a4 = result;
  }
  return result;
}

id sub_1D59FC498(void *a1)
{
  uint64_t v3 = *v1;
  id v4 = objc_allocWithZone(MEMORY[0x1E4F2B7C0]);
  id v5 = v3;
  id v6 = a1;
  id v7 = sub_1D59FCBC4((uint64_t)v5, (uint64_t)v6);

  return v7;
}

id sub_1D59FC510(uint64_t a1)
{
  uint64_t v3 = *v1;
  id v4 = objc_allocWithZone(MEMORY[0x1E4F2B158]);
  return objc_msgSend(v4, sel_initWithHealthStore_workoutConfiguration_, v3, a1);
}

uint64_t sub_1D59FC560(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1D598AF68;
  return HealthStore.fetchActivityRings()(a1);
}

uint64_t sub_1D59FC5F8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D59FC69C;
  return HealthStore.makeActivityRingsObserver(streamHandler:)(a1, a2);
}

uint64_t sub_1D59FC69C(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_1D59FC798(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726728);
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D59FC85C, 0, 0);
}

uint64_t sub_1D59FC85C()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v4 = v0[3];
  uint64_t v3 = v0[4];
  *(void *)(swift_task_alloc() + 16) = v4;
  sub_1D5AB2490();
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E4FBD028], v3);
  sub_1D5AB5220();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1D59FC94C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[4] = a3;
  v8[5] = v3;
  v8[2] = a1;
  v8[3] = a2;
  v8[1] = sub_1D5984480;
  return MEMORY[0x1F4188298](sub_1D59FAF88, 0, 0);
}

uint64_t sub_1D59FCA0C(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a3;
  uint64_t v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_1D59E8AE0(0, &qword_1EBDE15F0);
    uint64_t v5 = sub_1D5AB5050();
  }
  swift_retain();
  id v8 = a2;
  id v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

unint64_t sub_1D59FCAC4()
{
  unint64_t result = qword_1EBDE32E8;
  if (!qword_1EBDE32E8)
  {
    sub_1D59E8AE0(255, (unint64_t *)&qword_1EBDE32E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE32E8);
  }
  return result;
}

uint64_t sub_1D59FCB2C(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1D59FCB68(uint64_t a1, uint64_t a2)
{
  sub_1D59F6BE4(a1, a2, (void **)(v2 + 16), *(void *)(v2 + 72));
}

void sub_1D59FCB78(uint64_t a1, uint64_t a2)
{
  sub_1D59F6EE0(a1, a2, (void **)(v2 + 16), *(void *)(v2 + 72));
}

uint64_t sub_1D59FCB84()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);
  return MEMORY[0x1F4186498](v0, 72, 7);
}

id sub_1D59FCBC4(uint64_t a1, uint64_t a2)
{
  v7[1] = *(id *)MEMORY[0x1E4F143B8];
  v7[0] = 0;
  id v3 = objc_msgSend(v2, sel_initWithHealthStore_configuration_error_, a1, a2, v7);
  if (v3)
  {
    id v4 = v7[0];
  }
  else
  {
    id v5 = v7[0];
    sub_1D5AB1B50();

    swift_willThrow();
  }
  return v3;
}

void sub_1D59FCC7C(uint64_t a1)
{
  sub_1D59F9CF8(a1, *(void *)(v1 + 16));
}

uint64_t sub_1D59FCC84()
{
  return objectdestroy_4Tm(&qword_1EA726708);
}

uint64_t sub_1D59FCC90(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA726708) - 8);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_1D5984480;
  return sub_1D59F85EC(a1, v5);
}

uint64_t sub_1D59FCD6C(uint64_t a1)
{
  return sub_1D59F4C54(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(double *)(v1 + 32));
}

void sub_1D59FCD78(uint64_t a1)
{
  sub_1D59F92EC(a1, *(void *)(v1 + 16));
}

uint64_t sub_1D59FCD80()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726738);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D59FCE58(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA726738) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = (int *)v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1D598AF68;
  return sub_1D59AA780(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_1D59FCF5C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1D59FCFA4(uint64_t a1)
{
  sub_1D59FACDC(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(id **)(v1 + 40));
}

uint64_t sub_1D59FCFB0()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1D59FCFE8(uint64_t a1)
{
  sub_1D59FB380(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(id **)(v1 + 48));
}

uint64_t dispatch thunk of HealthStoreProtocol.save(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

{
  uint64_t v3;
  void *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 24) + **(int **)(a3 + 24));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D598AF68;
  return v9(a1, a2, a3);
}

{
  uint64_t v3;
  void *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 32) + **(int **)(a3 + 32));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D598AF68;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of HealthStoreProtocol.save(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 40) + **(int **)(a4 + 40));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1D598AF68;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of HealthStoreProtocol.execute(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of HealthStoreProtocol.stop(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of HealthStoreProtocol.queryTotalMindfulMinutes()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 64) + **(int **)(a2 + 64));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D59FD44C;
  return v7(a1, a2);
}

uint64_t sub_1D59FD44C(double a1)
{
  uint64_t v6 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(__n128))(v6 + 8);
  v4.n128_f64[0] = a1;
  return v3(v4);
}

uint64_t dispatch thunk of HealthStoreProtocol.fetchUnitPreferences()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 72) + **(int **)(a3 + 72));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D598AF68;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of HealthStoreProtocol.birthday.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of HealthStoreProtocol.biologicalSex.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of HealthStoreProtocol.wheelchairUse.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of HealthStoreProtocol.bodyMass.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of HealthStoreProtocol.height.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of HealthStoreProtocol.betaBlockerUse.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))() & 1;
}

uint64_t dispatch thunk of HealthStoreProtocol.moveMode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))() & 1;
}

uint64_t dispatch thunk of HealthStoreProtocol.fitnessMode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))() & 1;
}

uint64_t dispatch thunk of HealthStoreProtocol.makeWorkoutSession(session:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 144))();
}

uint64_t dispatch thunk of HealthStoreProtocol.makeWorkoutSession(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 152))();
}

uint64_t dispatch thunk of HealthStoreProtocol.makeWorkoutDataSource(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 160))();
}

uint64_t dispatch thunk of HealthStoreProtocol.fetchActivityRings()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 168) + **(int **)(a3 + 168));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D598AF68;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of HealthStoreProtocol.makeActivityRingsObserver(streamHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 176) + **(int **)(a4 + 176));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1D59FE828;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of HealthStoreProtocol.makeActivityRingsStream()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 184) + **(int **)(a3 + 184));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D598AF68;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of HealthStoreProtocol.queryStatistics(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 192)
                                                                            + **(int **)(a5 + 192));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  void *v11 = v5;
  v11[1] = sub_1D598AF68;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t destroy for HealthStore(id *a1)
{
  uint64_t v1 = (uint64_t)(a1 + 1);

  return __swift_destroy_boxed_opaque_existential_1Tm(v1);
}

uint64_t initializeWithCopy for HealthStore(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  uint64_t v5 = a1 + 8;
  uint64_t v6 = a2 + 8;
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v8 = v7;
  uint64_t v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  id v10 = v4;
  v9(v5, v6, v8);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t assignWithCopy for HealthStore(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for HealthStore(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for HealthStore(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HealthStore(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthStore()
{
  return &type metadata for HealthStore;
}

uint64_t sub_1D59FDE88()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7267F8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, v6 + 8, v5);
}

uint64_t sub_1D59FDF4C(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA7267F8) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = *(void *)(v3 + v9);
  uint64_t v11 = *(void *)(v3 + v9 + 8);
  uint64_t v12 = *(void **)(v3 + ((v9 + 23) & 0xFFFFFFFFFFFFFFF8));
  return sub_1D59FB62C(a1, a2, a3, v3 + v8, v10, v11, v12);
}

uint64_t sub_1D59FE014()
{
  return objectdestroy_4Tm(&qword_1EBDE15D0);
}

uint64_t sub_1D59FE020()
{
  return sub_1D5AB5130();
}

uint64_t sub_1D59FE0B4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D598AF68;
  unint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA727678 + dword_1EA727678);
  return v6(a1, v4);
}

uint64_t sub_1D59FE16C()
{
  return objectdestroy_4Tm(&qword_1EA726808);
}

uint64_t sub_1D59FE178(uint64_t a1)
{
  return sub_1D59FE6C0(a1, &qword_1EA726808, (uint64_t (*)(uint64_t, uint64_t))sub_1D59F94E4);
}

uint64_t sub_1D59FE1A0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726818);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D59FE278(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA726818) - 8);
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v7 = swift_task_alloc();
  long long v8 = *(_OWORD *)(v1 + 32);
  *(void *)(v2 + 16) = v7;
  *(void *)uint64_t v7 = v2;
  *(void *)(v7 + 8) = sub_1D5984480;
  *(void *)(v7 + 48) = v6;
  *(void *)(v7 + 40) = v5;
  *(_OWORD *)(v7 + 24) = v8;
  *(void *)(v7 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1D59F4E74, 0, 0);
}

uint64_t sub_1D59FE380(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *((void *)v2 + 2);
  uint64_t v7 = *((void *)v2 + 3);
  double v8 = v2[4];
  uint64_t v9 = *((void *)v2 + 5);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  *uint64_t v10 = v3;
  v10[1] = sub_1D598AF68;
  return sub_1D59F5094(v8, a1, a2, v6, v7, v9);
}

uint64_t sub_1D59FE44C()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1D59FE48C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 32);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D598AF68;
  double v8 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v6 = (void *)swift_task_alloc();
  v5[2] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_1D598AF68;
  return v8(a1);
}

uint64_t sub_1D59FE5B0()
{
  swift_unknownObjectRelease();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D59FE5E8()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1D598AF68;
  v3[2] = v2;
  return MEMORY[0x1F4188298](sub_1D59F589C, 0, 0);
}

uint64_t sub_1D59FE694()
{
  return objectdestroy_4Tm(&qword_1EA726898);
}

uint64_t sub_1D59FE6A0(uint64_t a1)
{
  return sub_1D59FE6C0(a1, &qword_1EA726898, sub_1D59F9EF0);
}

uint64_t sub_1D59FE6C0(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8);
  uint64_t v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return a3(a1, v6);
}

uint64_t objectdestroy_3Tm()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);
  return MEMORY[0x1F4186498](v0, 80, 7);
}

id sub_1D59FE790()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_stopQuery_, *(void *)(v0 + 72));
}

uint64_t sub_1D59FE7A4()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1D59FE7DC(char a1, void *a2)
{
  sub_1D59F7004(a1, a2, *(void (**)(void *, void))(v2 + 16), *(void *)(v2 + 24), "Failed to save sample into HealthKit: %{public}s");
}

void sub_1D59FE800(char a1, void *a2)
{
  sub_1D59F7004(a1, a2, *(void (**)(void *, void))(v2 + 16), *(void *)(v2 + 24), "Failed to save samples into HealthKit: %{public}s");
}

uint64_t sub_1D59FE85C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D59FE870);
}

uint64_t sub_1D59FE870(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3100();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1D59FE8DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D59FE8F0);
}

uint64_t sub_1D59FE8F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3100();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MultiUserActivityCancelled()
{
  uint64_t result = qword_1EA7268A8;
  if (!qword_1EA7268A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t static MachServiceConstants.daemon.getter()
{
  return 0xD000000000000011;
}

unint64_t static MachServiceConstants.sessionDaemon.getter()
{
  return 0xD000000000000019;
}

ValueMetadata *type metadata accessor for MachServiceConstants()
{
  return &type metadata for MachServiceConstants;
}

uint64_t sub_1D59FE9F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1D598AF68;
  return SessionMonitor.sessionUpdated(_:state:)(a1, a2, a3, a4);
}

uint64_t SessionMonitor.sessionUpdated(_:state:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[11] = a4;
  v5[12] = v4;
  v5[9] = a2;
  v5[10] = a3;
  v5[8] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250D0);
  v5[13] = swift_task_alloc();
  uint64_t v6 = sub_1D5AB3A50();
  v5[14] = v6;
  v5[15] = *(void *)(v6 - 8);
  v5[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7251B8);
  v5[17] = swift_task_alloc();
  uint64_t v7 = sub_1D5AB2490();
  v5[18] = v7;
  v5[19] = *(void *)(v7 - 8);
  v5[20] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725110);
  v5[21] = swift_task_alloc();
  uint64_t v8 = sub_1D5AB4970();
  v5[22] = v8;
  v5[23] = *(void *)(v8 - 8);
  v5[24] = swift_task_alloc();
  uint64_t v10 = sub_1D5AB5120();
  v5[25] = v10;
  v5[26] = v9;
  return MEMORY[0x1F4188298](sub_1D59FECE4, v10, v9);
}

uint64_t sub_1D59FECE4()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[23];
  uint64_t v3 = v0[21];
  sub_1D5AB27C0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) != 1)
  {
    uint64_t v23 = v0[11];
    (*(void (**)(void, void, void))(v0[23] + 32))(v0[24], v0[21], v0[22]);
    uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 + 88) + **(int **)(v23 + 88));
    uint64_t v12 = (void *)swift_task_alloc();
    v0[27] = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_1D59FF128;
    uint64_t v13 = v0[11];
    uint64_t v14 = v0[9];
    uint64_t v15 = v0[10];
    uint64_t v16 = v0[24];
    uint64_t v17 = v20;
    return v17(v16, v14, v15, v13);
  }
  sub_1D594F53C(v0[21], &qword_1EA725110);
  uint64_t v4 = v0[18];
  uint64_t v5 = v0[19];
  uint64_t v6 = v0[17];
  sub_1D5AB2680();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) != 1)
  {
    uint64_t v24 = v0[11];
    (*(void (**)(void, void, void))(v0[19] + 32))(v0[20], v0[17], v0[18]);
    uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 + 96) + **(int **)(v24 + 96));
    id v18 = (void *)swift_task_alloc();
    v0[29] = v18;
    *id v18 = v0;
    v18[1] = sub_1D59FF58C;
    uint64_t v13 = v0[11];
    uint64_t v14 = v0[9];
    uint64_t v15 = v0[10];
    uint64_t v16 = v0[20];
    uint64_t v17 = v21;
    return v17(v16, v14, v15, v13);
  }
  sub_1D594F53C(v0[17], &qword_1EA7251B8);
  uint64_t v7 = v0[14];
  uint64_t v8 = v0[15];
  uint64_t v9 = v0[13];
  sub_1D5AB2790();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v9, 1, v7) != 1)
  {
    uint64_t v25 = v0[11];
    (*(void (**)(void, void, void))(v0[15] + 32))(v0[16], v0[13], v0[14]);
    unint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 + 104) + **(int **)(v25 + 104));
    uint64_t v19 = (void *)swift_task_alloc();
    v0[31] = v19;
    void *v19 = v0;
    v19[1] = sub_1D59FF8BC;
    uint64_t v13 = v0[11];
    uint64_t v14 = v0[9];
    uint64_t v15 = v0[10];
    uint64_t v16 = v0[16];
    uint64_t v17 = v22;
    return v17(v16, v14, v15, v13);
  }
  sub_1D594F53C(v0[13], &qword_1EA7250D0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1D59FF128()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 224) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 208);
  uint64_t v4 = *(void *)(v2 + 200);
  if (v0) {
    uint64_t v5 = sub_1D59FFAB8;
  }
  else {
    uint64_t v5 = sub_1D59FF264;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_1D59FF264()
{
  (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[17];
  sub_1D5AB2680();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) != 1)
  {
    uint64_t v18 = v0[11];
    (*(void (**)(void, void, void))(v0[19] + 32))(v0[20], v0[17], v0[18]);
    uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 + 96) + **(int **)(v18 + 96));
    uint64_t v9 = (void *)swift_task_alloc();
    v0[29] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_1D59FF58C;
    uint64_t v10 = v0[11];
    uint64_t v11 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v13 = v0[20];
    uint64_t v14 = v16;
    return v14(v13, v11, v12, v10);
  }
  sub_1D594F53C(v0[17], &qword_1EA7251B8);
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[15];
  uint64_t v6 = v0[13];
  sub_1D5AB2790();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) != 1)
  {
    uint64_t v19 = v0[11];
    (*(void (**)(void, void, void))(v0[15] + 32))(v0[16], v0[13], v0[14]);
    uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 + 104) + **(int **)(v19 + 104));
    uint64_t v15 = (void *)swift_task_alloc();
    v0[31] = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_1D59FF8BC;
    uint64_t v10 = v0[11];
    uint64_t v11 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v13 = v0[16];
    uint64_t v14 = v17;
    return v14(v13, v11, v12, v10);
  }
  sub_1D594F53C(v0[13], &qword_1EA7250D0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1D59FF58C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 240) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 208);
  uint64_t v4 = *(void *)(v2 + 200);
  if (v0) {
    uint64_t v5 = sub_1D59FFD90;
  }
  else {
    uint64_t v5 = sub_1D59FF6C8;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_1D59FF6C8()
{
  (*(void (**)(void, void))(v0[19] + 8))(v0[20], v0[18]);
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[13];
  sub_1D5AB2790();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1D594F53C(v0[13], &qword_1EA7250D0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    uint64_t v12 = v0[11];
    (*(void (**)(void, void, void))(v0[15] + 32))(v0[16], v0[13], v0[14]);
    uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 + 104) + **(int **)(v12 + 104));
    uint64_t v6 = (void *)swift_task_alloc();
    v0[31] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1D59FF8BC;
    uint64_t v7 = v0[16];
    uint64_t v8 = v0[11];
    uint64_t v9 = v0[9];
    uint64_t v10 = v0[10];
    return v11(v7, v9, v10, v8);
  }
}

uint64_t sub_1D59FF8BC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 256) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 208);
  uint64_t v4 = *(void *)(v2 + 200);
  if (v0) {
    uint64_t v5 = sub_1D5A00068;
  }
  else {
    uint64_t v5 = sub_1D59FF9F8;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_1D59FF9F8()
{
  (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1D59FFAB8()
{
  uint64_t v19 = v0;
  if (qword_1EA724E10 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[28];
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EA727C70);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_1D5AB4B30();
  os_log_type_t v6 = sub_1D5AB5410();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)v0[28];
  if (v7)
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v18 = v11;
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v12 = sub_1D5AB5D20();
    v0[6] = sub_1D5951500(v12, v13, &v18);
    sub_1D5AB5680();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2112;
    id v14 = v8;
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    v0[7] = v15;
    sub_1D5AB5680();
    *uint64_t v10 = v15;

    _os_log_impl(&dword_1D5947000, v5, v6, "%s] Failed to update playback with %@", (uint8_t *)v9, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725C30);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v11, -1, -1);
    MEMORY[0x1D945AAC0](v9, -1, -1);
  }
  else
  {
  }
  swift_willThrow();
  (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_1D59FFD90()
{
  uint64_t v19 = v0;
  if (qword_1EA724E10 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[30];
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EA727C70);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_1D5AB4B30();
  os_log_type_t v6 = sub_1D5AB5410();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)v0[30];
  if (v7)
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v18 = v11;
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v12 = sub_1D5AB5D20();
    v0[4] = sub_1D5951500(v12, v13, &v18);
    sub_1D5AB5680();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2112;
    id v14 = v8;
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    v0[5] = v15;
    sub_1D5AB5680();
    *uint64_t v10 = v15;

    _os_log_impl(&dword_1D5947000, v5, v6, "%s] Failed to update activity rings with %@", (uint8_t *)v9, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725C30);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v11, -1, -1);
    MEMORY[0x1D945AAC0](v9, -1, -1);
  }
  else
  {
  }
  swift_willThrow();
  (*(void (**)(void, void))(v0[19] + 8))(v0[20], v0[18]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_1D5A00068()
{
  uint64_t v19 = v0;
  if (qword_1EA724E10 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[32];
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EA727C70);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_1D5AB4B30();
  os_log_type_t v6 = sub_1D5AB5410();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)v0[32];
  if (v7)
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v18 = v11;
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v12 = sub_1D5AB5D20();
    v0[2] = sub_1D5951500(v12, v13, &v18);
    sub_1D5AB5680();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2112;
    id v14 = v8;
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v15;
    sub_1D5AB5680();
    *uint64_t v10 = v15;

    _os_log_impl(&dword_1D5947000, v5, v6, "%s] Failed to update workout device connection with %@", (uint8_t *)v9, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725C30);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v11, -1, -1);
    MEMORY[0x1D945AAC0](v9, -1, -1);
  }
  else
  {
  }
  swift_willThrow();
  (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_1D5A00340()
{
  return sub_1D5A058D4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t SessionMonitor.playbackUpdated(_:state:)()
{
  return sub_1D5A058D4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D5A003B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *BOOL v7 = v3;
  v7[1] = sub_1D598AF68;
  return SessionMonitor.handleSessionActivated(_:)(a1, a2, a3);
}

uint64_t SessionMonitor.handleSessionActivated(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[11] = a3;
  v4[12] = v3;
  v4[9] = a1;
  v4[10] = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[13] = AssociatedTypeWitness;
  v4[14] = *(void *)(AssociatedTypeWitness - 8);
  v4[15] = swift_task_alloc();
  v4[16] = swift_task_alloc();
  uint64_t v6 = sub_1D5AB4800();
  v4[17] = v6;
  v4[18] = *(void *)(v6 - 8);
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  v4[22] = swift_task_alloc();
  v4[23] = type metadata accessor for SessionMonitorState();
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  uint64_t v8 = sub_1D5AB5120();
  v4[26] = v8;
  v4[27] = v7;
  return MEMORY[0x1F4188298](sub_1D5A00640, v8, v7);
}

uint64_t sub_1D5A00640()
{
  v82 = v0;
  (*(void (**)(void))(v0[11] + 32))(v0[10]);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    (*(void (**)(void, void, void))(v0[18] + 32))(v0[22], v0[25], v0[17]);
    if (qword_1EA724E10 != -1) {
      swift_once();
    }
    uint64_t v31 = v0[21];
    uint64_t v32 = v0[22];
    uint64_t v33 = v0[20];
    uint64_t v34 = v0[17];
    uint64_t v35 = v0[18];
    uint64_t v36 = v0[9];
    uint64_t v37 = sub_1D5AB4B50();
    __swift_project_value_buffer(v37, (uint64_t)qword_1EA727C70);
    uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16);
    v38(v31, v32, v34);
    v38(v33, v36, v34);
    id v39 = sub_1D5AB4B30();
    os_log_type_t v40 = sub_1D5AB5410();
    BOOL v41 = os_log_type_enabled(v39, v40);
    uint64_t v42 = v0[21];
    uint64_t v43 = v0[22];
    uint64_t v44 = v0[20];
    uint64_t v45 = v0[17];
    uint64_t v46 = v0[18];
    if (v41)
    {
      uint64_t v79 = v0[22];
      uint64_t v47 = swift_slowAlloc();
      uint64_t v77 = swift_slowAlloc();
      uint64_t v81 = v77;
      *(_DWORD *)uint64_t v47 = 136315650;
      uint64_t v48 = sub_1D5AB5D20();
      v0[5] = sub_1D5951500(v48, v49, &v81);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 12) = 2080;
      uint64_t v50 = sub_1D5AB4610();
      v0[6] = sub_1D5951500(v50, v51, &v81);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      uint64_t v52 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
      v52(v42, v45);
      *(_WORD *)(v47 + 22) = 2080;
      uint64_t v53 = sub_1D5AB4610();
      v0[7] = sub_1D5951500(v53, v54, &v81);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      v52(v44, v45);
      _os_log_impl(&dword_1D5947000, v39, v40, "[%s] Currently waiting for session: %s. Unexpected new session: %s", (uint8_t *)v47, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v77, -1, -1);
      MEMORY[0x1D945AAC0](v47, -1, -1);

      v52(v79, v45);
      goto LABEL_23;
    }

    uint64_t v60 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
    v60(v44, v45);
    v60(v42, v45);
    uint64_t v61 = v43;
    uint64_t v62 = v45;
LABEL_17:
    v60(v61, v62);
    goto LABEL_23;
  }
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(void, void, void))(v0[14] + 32))(v0[16], v0[25], v0[13]);
    if (qword_1EA724E10 != -1) {
      swift_once();
    }
    uint64_t v3 = v0[18];
    uint64_t v2 = v0[19];
    uint64_t v5 = v0[16];
    uint64_t v4 = v0[17];
    uint64_t v7 = v0[14];
    uint64_t v6 = v0[15];
    uint64_t v8 = v0[13];
    uint64_t v9 = v0[9];
    uint64_t v10 = sub_1D5AB4B50();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EA727C70);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v5, v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v9, v4);
    uint64_t v11 = sub_1D5AB4B30();
    os_log_type_t v12 = sub_1D5AB5410();
    BOOL v13 = os_log_type_enabled(v11, v12);
    uint64_t v14 = v0[18];
    uint64_t v15 = v0[19];
    uint64_t v16 = v0[16];
    uint64_t v17 = v0[17];
    uint64_t v19 = v0[14];
    uint64_t v18 = v0[15];
    uint64_t v20 = v0[13];
    if (v13)
    {
      uint64_t v75 = v0[19];
      uint64_t v76 = v0[17];
      uint64_t v21 = swift_slowAlloc();
      uint64_t v78 = swift_slowAlloc();
      uint64_t v81 = v78;
      *(_DWORD *)uint64_t v21 = 136315650;
      uint64_t v22 = sub_1D5AB5D20();
      os_log_type_t type = v12;
      v0[2] = sub_1D5951500(v22, v23, &v81);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2080;
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(v20, AssociatedConformanceWitness);
      uint64_t v26 = *(void *)(v25 + 16);
      unint64_t v27 = *(void *)(v25 + 24);
      swift_bridgeObjectRetain();
      swift_release();
      v0[3] = sub_1D5951500(v26, v27, &v81);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
      v28(v18, v20);
      *(_WORD *)(v21 + 22) = 2080;
      uint64_t v29 = sub_1D5AB4610();
      v0[4] = sub_1D5951500(v29, v30, &v81);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v75, v76);
      _os_log_impl(&dword_1D5947000, v11, type, "[%s] Currently active session: %s. Unexpected new session: %s", (uint8_t *)v21, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v78, -1, -1);
      MEMORY[0x1D945AAC0](v21, -1, -1);

      v28(v16, v20);
LABEL_23:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      v73 = (uint64_t (*)(void))v0[1];
      return v73();
    }

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v17);
    uint64_t v60 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v60(v18, v20);
    uint64_t v61 = v16;
    uint64_t v62 = v20;
    goto LABEL_17;
  }
  if (((*(uint64_t (**)(void, void))(v0[11] + 56))(v0[9], v0[10]) & 1) == 0)
  {
    if (qword_1EA724E10 != -1) {
      swift_once();
    }
    uint64_t v63 = sub_1D5AB4B50();
    __swift_project_value_buffer(v63, (uint64_t)qword_1EA727C70);
    uint64_t v64 = sub_1D5AB4B30();
    os_log_type_t v65 = sub_1D5AB5430();
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v66 = (uint8_t *)swift_slowAlloc();
      uint64_t v67 = swift_slowAlloc();
      uint64_t v81 = v67;
      *(_DWORD *)uint64_t v66 = 136315138;
      uint64_t v68 = sub_1D5AB5D20();
      v0[8] = sub_1D5951500(v68, v69, &v81);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D5947000, v64, v65, "[%s] Waiting for session update before starting", v66, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v67, -1, -1);
      MEMORY[0x1D945AAC0](v66, -1, -1);
    }

    uint64_t v70 = v0[24];
    uint64_t v71 = v0[11];
    uint64_t v72 = v0[10];
    (*(void (**)(uint64_t, void, void))(v0[18] + 16))(v70, v0[9], v0[17]);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 40))(v70, v72, v71);
    goto LABEL_23;
  }
  v80 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v0[11] + 64) + **(int **)(v0[11] + 64));
  v55 = (void *)swift_task_alloc();
  v0[28] = v55;
  void *v55 = v0;
  v55[1] = sub_1D5A00FF4;
  uint64_t v56 = v0[11];
  uint64_t v58 = v0[9];
  uint64_t v57 = v0[10];
  return v80(v58, v57, v56);
}

uint64_t sub_1D5A00FF4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 232) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 216);
  uint64_t v4 = *(void *)(v2 + 208);
  if (v0) {
    uint64_t v5 = sub_1D5A011F0;
  }
  else {
    uint64_t v5 = sub_1D5A01130;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_1D5A01130()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D5A011F0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D5A012B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D5984480;
  return SessionMonitor.handleSessionDeactivated(_:)(a1, a2, a3);
}

uint64_t SessionMonitor.handleSessionDeactivated(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[14] = a3;
  v4[15] = v3;
  v4[12] = a1;
  v4[13] = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[16] = AssociatedTypeWitness;
  v4[17] = *(void *)(AssociatedTypeWitness - 8);
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  uint64_t v6 = sub_1D5AB4800();
  v4[20] = v6;
  v4[21] = *(void *)(v6 - 8);
  v4[22] = swift_task_alloc();
  v4[23] = swift_task_alloc();
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  v4[26] = swift_task_alloc();
  v4[27] = swift_task_alloc();
  v4[28] = type metadata accessor for SessionMonitorState();
  v4[29] = swift_task_alloc();
  v4[30] = swift_task_alloc();
  uint64_t v8 = sub_1D5AB5120();
  v4[31] = v8;
  v4[32] = v7;
  return MEMORY[0x1F4188298](sub_1D5A01558, v8, v7);
}

uint64_t sub_1D5A01558()
{
  v123 = v0;
  (*(void (**)(void))(v0[14] + 32))(v0[13]);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    (*(void (**)(void, void, void))(v0[21] + 32))(v0[26], v0[30], v0[20]);
    uint64_t v35 = sub_1D5AB4610();
    uint64_t v37 = v36;
    if (v35 == sub_1D5AB4610() && v37 == v38)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v60 = sub_1D5AB5AF0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v60 & 1) == 0)
      {
        if (qword_1EA724E10 != -1) {
          swift_once();
        }
        uint64_t v83 = v0[26];
        uint64_t v85 = v0[23];
        uint64_t v84 = v0[24];
        uint64_t v87 = v0[20];
        uint64_t v86 = v0[21];
        uint64_t v88 = v0[12];
        uint64_t v89 = sub_1D5AB4B50();
        __swift_project_value_buffer(v89, (uint64_t)qword_1EA727C70);
        v90 = *(void (**)(uint64_t, uint64_t, uint64_t))(v86 + 16);
        v90(v84, v88, v87);
        v90(v85, v83, v87);
        v91 = sub_1D5AB4B30();
        os_log_type_t v92 = sub_1D5AB5410();
        BOOL v93 = os_log_type_enabled(v91, v92);
        uint64_t v94 = v0[26];
        uint64_t v96 = v0[23];
        uint64_t v95 = v0[24];
        uint64_t v98 = v0[20];
        uint64_t v97 = v0[21];
        if (v93)
        {
          uint64_t v99 = swift_slowAlloc();
          uint64_t v112 = swift_slowAlloc();
          uint64_t v122 = v112;
          *(_DWORD *)uint64_t v99 = 136315650;
          uint64_t v100 = sub_1D5AB5D20();
          v0[5] = sub_1D5951500(v100, v101, &v122);
          sub_1D5AB5680();
          swift_bridgeObjectRelease();
          *(_WORD *)(v99 + 12) = 2080;
          uint64_t v102 = sub_1D5AB4610();
          v0[6] = sub_1D5951500(v102, v103, &v122);
          sub_1D5AB5680();
          swift_bridgeObjectRelease();
          v104 = *(void (**)(uint64_t, uint64_t))(v97 + 8);
          v104(v95, v98);
          *(_WORD *)(v99 + 22) = 2080;
          uint64_t v105 = sub_1D5AB4610();
          v0[7] = sub_1D5951500(v105, v106, &v122);
          sub_1D5AB5680();
          swift_bridgeObjectRelease();
          v104(v96, v98);
          _os_log_impl(&dword_1D5947000, v91, v92, "[%s] Can't end session %s while waiting for session %s", (uint8_t *)v99, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x1D945AAC0](v112, -1, -1);
          MEMORY[0x1D945AAC0](v99, -1, -1);

          v104(v94, v98);
        }
        else
        {

          v108 = *(void (**)(uint64_t, uint64_t))(v97 + 8);
          v108(v96, v98);
          v108(v95, v98);
          v108(v94, v98);
        }
        goto LABEL_31;
      }
    }
    if (qword_1EA724E10 != -1) {
      swift_once();
    }
    uint64_t v61 = v0[25];
    uint64_t v62 = v0[20];
    uint64_t v63 = v0[21];
    uint64_t v64 = v0[12];
    uint64_t v65 = sub_1D5AB4B50();
    __swift_project_value_buffer(v65, (uint64_t)qword_1EA727C70);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 16))(v61, v64, v62);
    uint64_t v66 = sub_1D5AB4B30();
    os_log_type_t v67 = sub_1D5AB5430();
    BOOL v68 = os_log_type_enabled(v66, v67);
    uint64_t v69 = v0[25];
    uint64_t v70 = v0[21];
    if (v68)
    {
      uint64_t v115 = v0[20];
      uint64_t v71 = swift_slowAlloc();
      uint64_t v120 = swift_slowAlloc();
      uint64_t v122 = v120;
      *(_DWORD *)uint64_t v71 = 136315394;
      uint64_t v72 = sub_1D5AB5D20();
      v0[8] = sub_1D5951500(v72, v73, &v122);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      *(_WORD *)(v71 + 12) = 2080;
      uint64_t v74 = sub_1D5AB4610();
      v0[9] = sub_1D5951500(v74, v75, &v122);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      uint64_t v76 = *(void (**)(uint64_t, uint64_t))(v70 + 8);
      v76(v69, v115);
      _os_log_impl(&dword_1D5947000, v66, v67, "[%s] Ending session: %s", (uint8_t *)v71, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v120, -1, -1);
      MEMORY[0x1D945AAC0](v71, -1, -1);
    }
    else
    {
      uint64_t v76 = *(void (**)(uint64_t, uint64_t))(v70 + 8);
      v76(v0[25], v0[20]);
    }

    uint64_t v77 = v0[29];
    uint64_t v78 = v0[26];
    uint64_t v79 = v0[20];
    uint64_t v80 = v0[14];
    uint64_t v81 = v0[13];
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 40))(v77, v81, v80);
    v76(v78, v79);
LABEL_31:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v82 = (uint64_t (*)(void))v0[1];
    return v82();
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (qword_1EA724E10 != -1) {
      swift_once();
    }
    uint64_t v39 = v0[12];
    uint64_t v40 = v0[27];
    uint64_t v42 = v0[20];
    uint64_t v41 = v0[21];
    uint64_t v43 = sub_1D5AB4B50();
    __swift_project_value_buffer(v43, (uint64_t)qword_1EA727C70);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v40, v39, v42);
    uint64_t v44 = sub_1D5AB4B30();
    os_log_type_t v45 = sub_1D5AB5410();
    BOOL v46 = os_log_type_enabled(v44, v45);
    uint64_t v47 = v0[27];
    uint64_t v48 = v0[21];
    if (v46)
    {
      uint64_t v118 = v0[20];
      uint64_t v49 = swift_slowAlloc();
      uint64_t v121 = swift_slowAlloc();
      uint64_t v122 = v121;
      *(_DWORD *)uint64_t v49 = 136315394;
      uint64_t v50 = sub_1D5AB5D20();
      v0[10] = sub_1D5951500(v50, v51, &v122);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 12) = 2080;
      uint64_t v52 = sub_1D5AB4610();
      v0[11] = sub_1D5951500(v52, v53, &v122);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v118);
      _os_log_impl(&dword_1D5947000, v44, v45, "[%s] Can't end session that was never started: %s", (uint8_t *)v49, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v121, -1, -1);
      MEMORY[0x1D945AAC0](v49, -1, -1);
    }
    else
    {
      (*(void (**)(void, void))(v48 + 8))(v0[27], v0[20]);
    }
    goto LABEL_31;
  }
  uint64_t v2 = v0[16];
  (*(void (**)(void, void, uint64_t))(v0[17] + 32))(v0[19], v0[30], v2);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8);
  uint64_t v5 = v4(v2, AssociatedConformanceWitness);
  uint64_t v7 = *(void *)(v5 + 16);
  uint64_t v6 = *(void *)(v5 + 24);
  swift_bridgeObjectRetain();
  swift_release();
  if (v7 == sub_1D5AB4610() && v6 == v8)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v10 = sub_1D5AB5AF0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {
      v111 = v4;
      if (qword_1EA724E10 != -1) {
        swift_once();
      }
      uint64_t v12 = v0[21];
      uint64_t v11 = v0[22];
      uint64_t v13 = v0[20];
      uint64_t v14 = v0[17];
      uint64_t v113 = v0[18];
      uint64_t v116 = v0[19];
      uint64_t v15 = v0[16];
      uint64_t v16 = v0[12];
      uint64_t v17 = sub_1D5AB4B50();
      __swift_project_value_buffer(v17, (uint64_t)qword_1EA727C70);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v11, v16, v13);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v113, v116, v15);
      uint64_t v18 = sub_1D5AB4B30();
      os_log_type_t v19 = sub_1D5AB5410();
      BOOL v20 = os_log_type_enabled(v18, v19);
      uint64_t v22 = v0[21];
      uint64_t v21 = v0[22];
      uint64_t v23 = v0[19];
      uint64_t v24 = v0[17];
      uint64_t v114 = v0[20];
      uint64_t v117 = v0[18];
      uint64_t v25 = v0[16];
      if (v20)
      {
        os_log_type_t type = v19;
        uint64_t v26 = swift_slowAlloc();
        uint64_t v110 = swift_slowAlloc();
        uint64_t v122 = v110;
        *(_DWORD *)uint64_t v26 = 136315650;
        uint64_t v27 = sub_1D5AB5D20();
        v0[2] = sub_1D5951500(v27, v28, &v122);
        sub_1D5AB5680();
        swift_bridgeObjectRelease();
        *(_WORD *)(v26 + 12) = 2080;
        uint64_t v29 = sub_1D5AB4610();
        v0[3] = sub_1D5951500(v29, v30, &v122);
        sub_1D5AB5680();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v114);
        *(_WORD *)(v26 + 22) = 2080;
        uint64_t v31 = v111(v25, AssociatedConformanceWitness);
        uint64_t v32 = *(void *)(v31 + 16);
        unint64_t v33 = *(void *)(v31 + 24);
        swift_bridgeObjectRetain();
        swift_release();
        v0[4] = sub_1D5951500(v32, v33, &v122);
        sub_1D5AB5680();
        swift_bridgeObjectRelease();
        uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
        v34(v117, v25);
        _os_log_impl(&dword_1D5947000, v18, type, "[%s] Can't end session %s while active for session %s", (uint8_t *)v26, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1D945AAC0](v110, -1, -1);
        MEMORY[0x1D945AAC0](v26, -1, -1);

        v34(v23, v25);
      }
      else
      {

        v107 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
        v107(v117, v25);
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v114);
        v107(v23, v25);
      }
      goto LABEL_31;
    }
  }
  v119 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0[14] + 80)
                                                                    + **(int **)(v0[14] + 80));
  unint64_t v54 = (void *)swift_task_alloc();
  v0[33] = v54;
  *unint64_t v54 = v0;
  v54[1] = sub_1D5A022C8;
  uint64_t v55 = v0[19];
  uint64_t v56 = v0[14];
  uint64_t v58 = v0[12];
  uint64_t v57 = v0[13];
  return v119(v58, v55, v57, v56);
}

uint64_t sub_1D5A022C8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 272) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 256);
  uint64_t v4 = *(void *)(v2 + 248);
  if (v0) {
    uint64_t v5 = sub_1D5A024F8;
  }
  else {
    uint64_t v5 = sub_1D5A02404;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_1D5A02404()
{
  (*(void (**)(void, void))(v0[17] + 8))(v0[19], v0[16]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1D5A024F8()
{
  (*(void (**)(void, void))(v0[17] + 8))(v0[19], v0[16]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1D5A025F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D598AF68;
  return SessionMonitor.handleSessionUpdated(_:)(a1, a2, a3);
}

uint64_t SessionMonitor.handleSessionUpdated(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[12] = a3;
  v4[13] = v3;
  v4[10] = a1;
  v4[11] = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[14] = AssociatedTypeWitness;
  v4[15] = *(void *)(AssociatedTypeWitness - 8);
  v4[16] = swift_task_alloc();
  v4[17] = swift_task_alloc();
  uint64_t v6 = sub_1D5AB4800();
  v4[18] = v6;
  v4[19] = *(void *)(v6 - 8);
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  v4[22] = swift_task_alloc();
  uint64_t v7 = sub_1D5AB27E0();
  v4[23] = v7;
  v4[24] = *(void *)(v7 - 8);
  v4[25] = swift_task_alloc();
  v4[26] = swift_task_alloc();
  v4[27] = swift_task_alloc();
  v4[28] = type metadata accessor for SessionMonitorState();
  v4[29] = swift_task_alloc();
  v4[30] = swift_task_alloc();
  uint64_t v9 = sub_1D5AB5120();
  v4[31] = v9;
  v4[32] = v8;
  return MEMORY[0x1F4188298](sub_1D5A028F0, v9, v8);
}

uint64_t sub_1D5A028F0()
{
  v119 = v0;
  (*(void (**)(void))(v0[12] + 32))(v0[11]);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      if (qword_1EA724E10 != -1) {
        swift_once();
      }
      uint64_t v39 = v0[10];
      uint64_t v40 = v0[27];
      uint64_t v42 = v0[23];
      uint64_t v41 = v0[24];
      uint64_t v43 = sub_1D5AB4B50();
      __swift_project_value_buffer(v43, (uint64_t)qword_1EA727C70);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v40, v39, v42);
      uint64_t v44 = sub_1D5AB4B30();
      os_log_type_t v45 = sub_1D5AB5410();
      BOOL v46 = os_log_type_enabled(v44, v45);
      uint64_t v47 = v0[27];
      uint64_t v48 = v0[24];
      if (v46)
      {
        uint64_t v114 = v0[23];
        uint64_t v49 = swift_slowAlloc();
        uint64_t v117 = swift_slowAlloc();
        uint64_t v118 = v117;
        *(_DWORD *)uint64_t v49 = 136315394;
        uint64_t v50 = sub_1D5AB5D20();
        v0[8] = sub_1D5951500(v50, v51, &v118);
        sub_1D5AB5680();
        swift_bridgeObjectRelease();
        *(_WORD *)(v49 + 12) = 2080;
        uint64_t v52 = sub_1D5AB2740();
        v0[9] = sub_1D5951500(v52, v53, &v118);
        sub_1D5AB5680();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v114);
        _os_log_impl(&dword_1D5947000, v44, v45, "[%s] Can't update session that doesn't exist: %s", (uint8_t *)v49, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1D945AAC0](v117, -1, -1);
        MEMORY[0x1D945AAC0](v49, -1, -1);
      }
      else
      {
        (*(void (**)(void, void))(v48 + 8))(v0[27], v0[23]);
      }
      goto LABEL_36;
    }
    uint64_t v2 = v0[14];
    (*(void (**)(void, void, uint64_t))(v0[15] + 32))(v0[17], v0[30], v2);
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8);
    uint64_t v5 = v4(v2, AssociatedConformanceWitness);
    uint64_t v7 = *(void *)(v5 + 16);
    uint64_t v6 = *(void *)(v5 + 24);
    swift_bridgeObjectRetain();
    swift_release();
    if (v7 == sub_1D5AB2740() && v6 == v8)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v10 = sub_1D5AB5AF0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v10 & 1) == 0)
      {
        v108 = v4;
        if (qword_1EA724E10 != -1) {
          swift_once();
        }
        uint64_t v12 = v0[24];
        uint64_t v11 = v0[25];
        uint64_t v13 = v0[23];
        uint64_t v14 = v0[15];
        *(void *)uint64_t v110 = v0[16];
        uint64_t v112 = v0[17];
        uint64_t v15 = v0[14];
        uint64_t v16 = v0[10];
        uint64_t v17 = sub_1D5AB4B50();
        __swift_project_value_buffer(v17, (uint64_t)qword_1EA727C70);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v11, v16, v13);
        (*(void (**)(os_log_type_t *, uint64_t, uint64_t))(v14 + 16))(*(os_log_type_t **)v110, v112, v15);
        uint64_t v18 = sub_1D5AB4B30();
        os_log_type_t v19 = sub_1D5AB5410();
        BOOL v20 = os_log_type_enabled(v18, v19);
        uint64_t v22 = v0[24];
        uint64_t v21 = v0[25];
        uint64_t v23 = v0[17];
        *(void *)v111 = v0[23];
        uint64_t v113 = v0[16];
        uint64_t v25 = v0[14];
        uint64_t v24 = v0[15];
        if (v20)
        {
          os_log_type_t type = v19;
          uint64_t v26 = swift_slowAlloc();
          uint64_t v106 = swift_slowAlloc();
          uint64_t v118 = v106;
          *(_DWORD *)uint64_t v26 = 136315650;
          uint64_t v27 = sub_1D5AB5D20();
          v0[2] = sub_1D5951500(v27, v28, &v118);
          sub_1D5AB5680();
          swift_bridgeObjectRelease();
          *(_WORD *)(v26 + 12) = 2080;
          uint64_t v29 = sub_1D5AB2740();
          v0[3] = sub_1D5951500(v29, v30, &v118);
          sub_1D5AB5680();
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, os_log_type_t *))(v22 + 8))(v21, *(os_log_type_t **)v111);
          *(_WORD *)(v26 + 22) = 2080;
          uint64_t v31 = v108(v25, AssociatedConformanceWitness);
          uint64_t v32 = *(void *)(v31 + 16);
          unint64_t v33 = *(void *)(v31 + 24);
          swift_bridgeObjectRetain();
          swift_release();
          v0[4] = sub_1D5951500(v32, v33, &v118);
          sub_1D5AB5680();
          swift_bridgeObjectRelease();
          uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
          v34(v113, v25);
          _os_log_impl(&dword_1D5947000, v18, type, "%s] Can't update session %s while active for session %s", (uint8_t *)v26, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x1D945AAC0](v106, -1, -1);
          MEMORY[0x1D945AAC0](v26, -1, -1);

          v34(v23, v25);
        }
        else
        {

          unint64_t v101 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
          v101(v113, v25);
          (*(void (**)(uint64_t, os_log_type_t *))(v22 + 8))(v21, *(os_log_type_t **)v111);
          v101(v23, v25);
        }
        goto LABEL_36;
      }
    }
    uint64_t v115 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0[12] + 72)
                                                                      + **(int **)(v0[12] + 72));
    unint64_t v54 = (void *)swift_task_alloc();
    v0[35] = v54;
    *unint64_t v54 = v0;
    v54[1] = sub_1D5A03820;
    uint64_t v55 = v0[17];
    uint64_t v56 = v0[12];
    uint64_t v58 = v0[10];
    uint64_t v57 = v0[11];
    return v115(v58, v55, v57, v56);
  }
  else
  {
    (*(void (**)(void, void, void))(v0[19] + 32))(v0[22], v0[30], v0[18]);
    uint64_t v35 = sub_1D5AB2740();
    uint64_t v37 = v36;
    if (v35 == sub_1D5AB4610() && v37 == v38)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v60 = sub_1D5AB5AF0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v60 & 1) == 0)
      {
        if (qword_1EA724E10 != -1) {
          swift_once();
        }
        uint64_t v74 = v0[26];
        uint64_t v76 = v0[23];
        uint64_t v75 = v0[24];
        uint64_t v77 = v0[22];
        uint64_t v79 = v0[19];
        uint64_t v78 = v0[20];
        uint64_t v80 = v0[18];
        uint64_t v81 = v0[10];
        uint64_t v82 = sub_1D5AB4B50();
        __swift_project_value_buffer(v82, (uint64_t)qword_1EA727C70);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 16))(v74, v81, v76);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v79 + 16))(v78, v77, v80);
        uint64_t v83 = sub_1D5AB4B30();
        os_log_type_t v84 = sub_1D5AB5410();
        BOOL v85 = os_log_type_enabled(v83, v84);
        uint64_t v86 = v0[26];
        uint64_t v88 = v0[23];
        uint64_t v87 = v0[24];
        uint64_t v89 = v0[22];
        uint64_t v90 = v0[19];
        uint64_t v91 = v0[20];
        uint64_t v92 = v0[18];
        if (v85)
        {
          *(void *)typea = v0[20];
          uint64_t v107 = v0[23];
          uint64_t v93 = swift_slowAlloc();
          uint64_t v109 = swift_slowAlloc();
          uint64_t v118 = v109;
          *(_DWORD *)uint64_t v93 = 136315650;
          uint64_t v94 = sub_1D5AB5D20();
          v0[5] = sub_1D5951500(v94, v95, &v118);
          sub_1D5AB5680();
          swift_bridgeObjectRelease();
          *(_WORD *)(v93 + 12) = 2080;
          uint64_t v96 = sub_1D5AB2740();
          v0[6] = sub_1D5951500(v96, v97, &v118);
          sub_1D5AB5680();
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v86, v107);
          *(_WORD *)(v93 + 22) = 2080;
          uint64_t v98 = sub_1D5AB4610();
          v0[7] = sub_1D5951500(v98, v99, &v118);
          sub_1D5AB5680();
          swift_bridgeObjectRelease();
          uint64_t v100 = *(void (**)(uint64_t, uint64_t))(v90 + 8);
          v100(*(void *)typea, v92);
          _os_log_impl(&dword_1D5947000, v83, v84, "%s] Can't update session %s while waiting for session %s", (uint8_t *)v93, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x1D945AAC0](v109, -1, -1);
          MEMORY[0x1D945AAC0](v93, -1, -1);

          v100(v89, v92);
        }
        else
        {

          uint64_t v102 = *(void (**)(uint64_t, uint64_t))(v90 + 8);
          v102(v91, v92);
          (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v86, v88);
          v102(v89, v92);
        }
        goto LABEL_36;
      }
    }
    uint64_t v61 = v0[29];
    uint64_t v62 = v0[21];
    uint64_t v63 = v0[18];
    uint64_t v64 = v0[19];
    uint64_t v65 = v0[12];
    uint64_t v66 = v0[11];
    static Session.+ infix(_:_:)(v62);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 16))(v61, v62, v63);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 40))(v61, v66, v65);
    if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v65 + 56))(v62, v66, v65) & 1) == 0)
    {
      uint64_t v71 = v0[22];
      uint64_t v72 = v0[18];
      unint64_t v73 = *(void (**)(uint64_t, uint64_t))(v0[19] + 8);
      v73(v0[21], v72);
      v73(v71, v72);
LABEL_36:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      unint64_t v103 = (uint64_t (*)(void))v0[1];
      return v103();
    }
    uint64_t v116 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v0[12] + 64) + **(int **)(v0[12] + 64));
    os_log_type_t v67 = (void *)swift_task_alloc();
    v0[33] = v67;
    *os_log_type_t v67 = v0;
    v67[1] = sub_1D5A035D4;
    uint64_t v68 = v0[21];
    uint64_t v69 = v0[12];
    uint64_t v70 = v0[11];
    return v116(v68, v70, v69);
  }
}

uint64_t sub_1D5A035D4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 272) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 256);
  uint64_t v4 = *(void *)(v2 + 248);
  if (v0) {
    uint64_t v5 = sub_1D5A03A54;
  }
  else {
    uint64_t v5 = sub_1D5A03710;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_1D5A03710()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[18];
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v0[19] + 8);
  v3(v0[21], v2);
  v3(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1D5A03820()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 288) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 256);
  uint64_t v4 = *(void *)(v2 + 248);
  if (v0) {
    uint64_t v5 = sub_1D5A03B70;
  }
  else {
    uint64_t v5 = sub_1D5A0395C;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_1D5A0395C()
{
  (*(void (**)(void, void))(v0[15] + 8))(v0[17], v0[14]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1D5A03A54()
{
  uint64_t v1 = *(void (**)(void, void))(v0[19] + 8);
  v1(v0[21], v0[18]);
  v1(v0[22], v0[18]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1D5A03B70()
{
  (*(void (**)(void, void))(v0[15] + 8))(v0[17], v0[14]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t type metadata accessor for SessionMonitorState()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1D5A03C8C()
{
  uint64_t result = sub_1D5AB4800();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void *sub_1D5A03D54(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB4800();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v8 + 64) <= *(void *)(v7 + 64)) {
    uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  else {
    uint64_t v9 = *(void *)(v8 + 64);
  }
  uint64_t v10 = (*(unsigned char *)(v8 + 80) | *(unsigned char *)(v7 + 80));
  if (v10 <= 7
    && (unint64_t)(v9 + 1) <= 0x18
    && ((*(_DWORD *)(v8 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) == 0)
  {
    unsigned int v14 = a2[v9];
    unsigned int v15 = v14 - 2;
    if (v14 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v16 = v9;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *a2;
          goto LABEL_21;
        case 2:
          int v17 = *(unsigned __int16 *)a2;
          goto LABEL_21;
        case 3:
          int v17 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_21;
        case 4:
          int v17 = *(_DWORD *)a2;
LABEL_21:
          int v18 = (v17 | (v15 << (8 * v9))) + 2;
          unsigned int v14 = v17 + 2;
          if (v9 < 4) {
            unsigned int v14 = v18;
          }
          break;
        default:
          break;
      }
    }
    if (v14 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *))(v8 + 16))(a1, a2);
      *((unsigned char *)a1 + v9) = 1;
    }
    else if (v14)
    {
      memcpy(a1, a2, v9 + 1);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
      *((unsigned char *)a1 + v9) = 0;
    }
  }
  else
  {
    uint64_t v13 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v13 + ((v10 + 16) & ~v10));
    swift_retain();
  }
  return a1;
}

uint64_t sub_1D5A03F5C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4800();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = *(void *)(*(void *)(a2 + 16) - 8);
  unint64_t v7 = *(void *)(result + 64);
  if (v7 <= *(void *)(v5 + 64)) {
    unint64_t v7 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  unsigned int v8 = a1[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a1;
        goto LABEL_12;
      case 2:
        int v11 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v11 = *(_DWORD *)a1;
LABEL_12:
        int v12 = (v11 | (v9 << (8 * v7))) + 2;
        unsigned int v8 = v11 + 2;
        if (v7 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  if (v8)
  {
    if (v8 != 1) {
      return result;
    }
    uint64_t v5 = *(void *)(*(void *)(a2 + 16) - 8);
    uint64_t v4 = *(void *)(a2 + 16);
  }
  uint64_t v13 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v5 + 8);
  return v13(a1, v4);
}

unsigned char *sub_1D5A040EC(unsigned char *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB4800();
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v7 + 64) <= *(void *)(*(void *)(v6 - 8) + 64)) {
    uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  else {
    uint64_t v8 = *(void *)(v7 + 64);
  }
  unsigned int v9 = a2[v8];
  unsigned int v10 = v9 - 2;
  if (v9 >= 2)
  {
    if (v8 <= 3) {
      uint64_t v11 = v8;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a2;
        goto LABEL_13;
      case 2:
        int v12 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v12 = *(_DWORD *)a2;
LABEL_13:
        int v13 = (v12 | (v10 << (8 * v8))) + 2;
        unsigned int v9 = v12 + 2;
        if (v8 < 4) {
          unsigned int v9 = v13;
        }
        break;
      default:
        break;
    }
  }
  if (v9 == 1)
  {
    (*(void (**)(unsigned char *, unsigned __int8 *))(v7 + 16))(a1, a2);
    a1[v8] = 1;
  }
  else if (v9)
  {
    memcpy(a1, a2, v8 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    a1[v8] = 0;
  }
  return a1;
}

unsigned __int8 *sub_1D5A042B0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  uint64_t v6 = sub_1D5AB4800();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  if (*(void *)(v10 + 64) <= *(void *)(v8 + 64)) {
    uint64_t v11 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  else {
    uint64_t v11 = *(void *)(*(void *)(v9 - 8) + 64);
  }
  unsigned int v12 = a1[v11];
  unsigned int v13 = v12 - 2;
  if (v12 >= 2)
  {
    if (v11 <= 3) {
      uint64_t v14 = v11;
    }
    else {
      uint64_t v14 = 4;
    }
    switch(v14)
    {
      case 1:
        int v15 = *a1;
        goto LABEL_14;
      case 2:
        int v15 = *(unsigned __int16 *)a1;
        goto LABEL_14;
      case 3:
        int v15 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_14;
      case 4:
        int v15 = *(_DWORD *)a1;
LABEL_14:
        int v16 = (v15 | (v13 << (8 * v11))) + 2;
        unsigned int v12 = v15 + 2;
        if (v11 < 4) {
          unsigned int v12 = v16;
        }
        break;
      default:
        break;
    }
  }
  if (!v12)
  {
    uint64_t v17 = *(void *)(v6 - 8);
    uint64_t v18 = v6;
    goto LABEL_20;
  }
  if (v12 == 1)
  {
    uint64_t v17 = *(void *)(v9 - 8);
    uint64_t v18 = v9;
LABEL_20:
    (*(void (**)(unsigned __int8 *, uint64_t))(v17 + 8))(a1, v18);
  }
  unsigned int v19 = a2[v11];
  unsigned int v20 = v19 - 2;
  if (v19 >= 2)
  {
    if (v11 <= 3) {
      uint64_t v21 = v11;
    }
    else {
      uint64_t v21 = 4;
    }
    switch(v21)
    {
      case 1:
        int v22 = *a2;
        goto LABEL_30;
      case 2:
        int v22 = *(unsigned __int16 *)a2;
        goto LABEL_30;
      case 3:
        int v22 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_30;
      case 4:
        int v22 = *(_DWORD *)a2;
LABEL_30:
        int v23 = (v22 | (v20 << (8 * v11))) + 2;
        unsigned int v19 = v22 + 2;
        if (v11 < 4) {
          unsigned int v19 = v23;
        }
        break;
      default:
        break;
    }
  }
  if (v19 == 1)
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v10 + 16))(a1, a2, v9);
    a1[v11] = 1;
  }
  else if (v19)
  {
    memcpy(a1, a2, v11 + 1);
  }
  else
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v8 + 16))(a1, a2, v7);
    a1[v11] = 0;
  }
  return a1;
}

unsigned char *sub_1D5A04550(unsigned char *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB4800();
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v7 + 64) <= *(void *)(*(void *)(v6 - 8) + 64)) {
    uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  else {
    uint64_t v8 = *(void *)(v7 + 64);
  }
  unsigned int v9 = a2[v8];
  unsigned int v10 = v9 - 2;
  if (v9 >= 2)
  {
    if (v8 <= 3) {
      uint64_t v11 = v8;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a2;
        goto LABEL_13;
      case 2:
        int v12 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v12 = *(_DWORD *)a2;
LABEL_13:
        int v13 = (v12 | (v10 << (8 * v8))) + 2;
        unsigned int v9 = v12 + 2;
        if (v8 < 4) {
          unsigned int v9 = v13;
        }
        break;
      default:
        break;
    }
  }
  if (v9 == 1)
  {
    (*(void (**)(unsigned char *, unsigned __int8 *))(v7 + 32))(a1, a2);
    a1[v8] = 1;
  }
  else if (v9)
  {
    memcpy(a1, a2, v8 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    a1[v8] = 0;
  }
  return a1;
}

unsigned __int8 *sub_1D5A04714(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  uint64_t v6 = sub_1D5AB4800();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  if (*(void *)(v10 + 64) <= *(void *)(v8 + 64)) {
    uint64_t v11 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  else {
    uint64_t v11 = *(void *)(*(void *)(v9 - 8) + 64);
  }
  unsigned int v12 = a1[v11];
  unsigned int v13 = v12 - 2;
  if (v12 >= 2)
  {
    if (v11 <= 3) {
      uint64_t v14 = v11;
    }
    else {
      uint64_t v14 = 4;
    }
    switch(v14)
    {
      case 1:
        int v15 = *a1;
        goto LABEL_14;
      case 2:
        int v15 = *(unsigned __int16 *)a1;
        goto LABEL_14;
      case 3:
        int v15 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_14;
      case 4:
        int v15 = *(_DWORD *)a1;
LABEL_14:
        int v16 = (v15 | (v13 << (8 * v11))) + 2;
        unsigned int v12 = v15 + 2;
        if (v11 < 4) {
          unsigned int v12 = v16;
        }
        break;
      default:
        break;
    }
  }
  if (!v12)
  {
    uint64_t v17 = *(void *)(v6 - 8);
    uint64_t v18 = v6;
    goto LABEL_20;
  }
  if (v12 == 1)
  {
    uint64_t v17 = *(void *)(v9 - 8);
    uint64_t v18 = v9;
LABEL_20:
    (*(void (**)(unsigned __int8 *, uint64_t))(v17 + 8))(a1, v18);
  }
  unsigned int v19 = a2[v11];
  unsigned int v20 = v19 - 2;
  if (v19 >= 2)
  {
    if (v11 <= 3) {
      uint64_t v21 = v11;
    }
    else {
      uint64_t v21 = 4;
    }
    switch(v21)
    {
      case 1:
        int v22 = *a2;
        goto LABEL_30;
      case 2:
        int v22 = *(unsigned __int16 *)a2;
        goto LABEL_30;
      case 3:
        int v22 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_30;
      case 4:
        int v22 = *(_DWORD *)a2;
LABEL_30:
        int v23 = (v22 | (v20 << (8 * v11))) + 2;
        unsigned int v19 = v22 + 2;
        if (v11 < 4) {
          unsigned int v19 = v23;
        }
        break;
      default:
        break;
    }
  }
  if (v19 == 1)
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v10 + 32))(a1, a2, v9);
    a1[v11] = 1;
  }
  else if (v19)
  {
    memcpy(a1, a2, v11 + 1);
  }
  else
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v8 + 32))(a1, a2, v7);
    a1[v11] = 0;
  }
  return a1;
}

uint64_t sub_1D5A049B4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v6 = *(void *)(*(void *)(sub_1D5AB4800() - 8) + 64);
  unint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (v7 <= v6) {
    unint64_t v7 = v6;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_22;
  }
  unint64_t v8 = v7 + 1;
  char v9 = 8 * (v7 + 1);
  if ((v7 + 1) <= 3)
  {
    unsigned int v12 = ((a2 + ~(-1 << v9) - 253) >> v9) + 1;
    if (HIWORD(v12))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v12 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v12 < 2)
    {
LABEL_22:
      unsigned int v14 = *((unsigned __int8 *)a1 + v7);
      if (v14 >= 3) {
        return (v14 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_22;
  }
LABEL_14:
  int v13 = (v10 - 1) << v9;
  if (v8 > 3) {
    int v13 = 0;
  }
  if (v8)
  {
    if (v8 > 3) {
      LODWORD(v8) = 4;
    }
    switch((int)v8)
    {
      case 2:
        LODWORD(v8) = *a1;
        break;
      case 3:
        LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v8) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v8) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v8 | v13) + 254;
}

void sub_1D5A04B2C(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v8 = *(void *)(*(void *)(sub_1D5AB4800() - 8) + 64);
  uint64_t v9 = *(void *)(*(void *)(a4 + 16) - 8);
  if (*(void *)(v9 + 64) > v8) {
    unint64_t v8 = *(void *)(v9 + 64);
  }
  size_t v10 = v8 + 1;
  if (a3 < 0xFE)
  {
    int v11 = 0;
  }
  else if (v10 <= 3)
  {
    unsigned int v14 = ((a3 + ~(-1 << (8 * v10)) - 253) >> (8 * v10)) + 1;
    if (HIWORD(v14))
    {
      int v11 = 4;
    }
    else if (v14 >= 0x100)
    {
      int v11 = 2;
    }
    else
    {
      int v11 = v14 > 1;
    }
  }
  else
  {
    int v11 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v12 = a2 - 254;
    if (v10 < 4)
    {
      int v13 = (v12 >> (8 * v10)) + 1;
      if (v8 != -1)
      {
        int v15 = v12 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8 + 1);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v10] = v13;
        break;
      case 2:
        *(_WORD *)&a1[v10] = v13;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1D5A04D18);
      case 4:
        *(_DWORD *)&a1[v10] = v13;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v11)
    {
      case 1:
        a1[v10] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v10] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v10] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v8] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1D5A04D40(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(*(void *)(sub_1D5AB4800() - 8) + 64);
  uint64_t v5 = *(void *)(*(void *)(a2 + 16) - 8);
  if (*(void *)(v5 + 64) > v4) {
    unint64_t v4 = *(void *)(v5 + 64);
  }
  uint64_t result = a1[v4];
  if (result >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a1;
        goto LABEL_12;
      case 2:
        int v8 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v8 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v8 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v9 = (v8 | ((result - 2) << (8 * v4))) + 2;
        unsigned int v10 = v8 + 2;
        if (v4 >= 4) {
          uint64_t result = v10;
        }
        else {
          uint64_t result = v9;
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_1D5A04E2C(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  size_t v6 = *(void *)(*(void *)(sub_1D5AB4800() - 8) + 64);
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v7 + 64) <= v6) {
    size_t v8 = v6;
  }
  else {
    size_t v8 = *(void *)(v7 + 64);
  }
  if (a2 > 1)
  {
    unsigned int v9 = a2 - 2;
    if (v8 < 4)
    {
      unsigned int v10 = v9 >> (8 * v8);
      int v11 = v9 & ~(-1 << (8 * v8));
      a1[v8] = v10 + 2;
      bzero(a1, v8);
      if (v8 == 3)
      {
        *(_WORD *)a1 = v11;
        a1[2] = BYTE2(v11);
      }
      else if (v8 == 2)
      {
        *(_WORD *)a1 = v11;
      }
      else
      {
        *a1 = v11;
      }
    }
    else
    {
      a1[v8] = 2;
      bzero(a1, v8);
      *(_DWORD *)a1 = v9;
    }
  }
  else
  {
    a1[v8] = a2;
  }
}

uint64_t dispatch thunk of SessionMonitorStateProtocol.token.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SessionMonitor.state.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of SessionMonitor.state.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of SessionMonitor.state.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of SessionMonitor.shouldStartSession(session:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of SessionMonitor.startSession(session:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 64) + **(int **)(a3 + 64));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D598AF68;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of SessionMonitor.sessionUpdated(_:state:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 72) + **(int **)(a4 + 72));
  unsigned int v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *unsigned int v9 = v4;
  v9[1] = sub_1D598AF68;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of SessionMonitor.endSession(session:state:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 80) + **(int **)(a4 + 80));
  unsigned int v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *unsigned int v9 = v4;
  v9[1] = sub_1D5984480;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of SessionMonitor.playbackUpdated(_:state:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 88) + **(int **)(a4 + 88));
  unsigned int v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *unsigned int v9 = v4;
  v9[1] = sub_1D598AF68;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of SessionMonitor.activityRingsUpdated(_:state:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 96) + **(int **)(a4 + 96));
  unsigned int v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *unsigned int v9 = v4;
  v9[1] = sub_1D598AF68;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of SessionMonitor.workoutDeviceConnectionUpdated(_:state:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 104) + **(int **)(a4 + 104));
  unsigned int v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *unsigned int v9 = v4;
  v9[1] = sub_1D598AF68;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of SessionMonitor.handleSessionActivated(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 112) + **(int **)(a3 + 112));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D598AF68;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of SessionMonitor.handleSessionDeactivated(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 120) + **(int **)(a3 + 120));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D598AF68;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of SessionMonitor.handleSessionUpdated(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 128) + **(int **)(a3 + 128));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D598AF68;
  return v9(a1, a2, a3);
}

uint64_t sub_1D5A058D4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t MultiUserSessionConnected.activity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB3100();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t MultiUserSessionConnected.init(activity:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB3100();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static MultiUserSessionConnected.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t getEnumTagSinglePayload for MultiUserSessionConnected(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D5A059E4);
}

uint64_t sub_1D5A059E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3100();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MultiUserSessionConnected(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D5A05A64);
}

uint64_t sub_1D5A05A64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3100();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MultiUserSessionConnected()
{
  uint64_t result = qword_1EBDE3670;
  if (!qword_1EBDE3670) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t XPCStreamEventReceived.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void static XPCStreamEventReceived.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

void *initializeBufferWithCopyOfBuffer for XPCStreamEventReceived(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for XPCStreamEventReceived()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for XPCStreamEventReceived(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for XPCStreamEventReceived(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCStreamEventReceived(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCStreamEventReceived(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCStreamEventReceived()
{
  return &type metadata for XPCStreamEventReceived;
}

uint64_t MultiUserCelebrationRequested.init(celebration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB35E0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

uint64_t MultiUserCelebrationRequested.celebration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB35E0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

void static MultiUserCelebrationRequested.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for MultiUserCelebrationRequested(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB35E0();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for MultiUserCelebrationRequested(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB35E0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for MultiUserCelebrationRequested(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB35E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for MultiUserCelebrationRequested(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB35E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for MultiUserCelebrationRequested(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB35E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for MultiUserCelebrationRequested(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB35E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for MultiUserCelebrationRequested(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D5A06000);
}

uint64_t sub_1D5A06000(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB35E0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MultiUserCelebrationRequested(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D5A06080);
}

uint64_t sub_1D5A06080(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB35E0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MultiUserCelebrationRequested()
{
  uint64_t result = qword_1EA726970;
  if (!qword_1EA726970) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D5A0613C()
{
  uint64_t result = sub_1D5AB35E0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t TrainerEventStarted.trainerEvent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB2430();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t TrainerEventStarted.init(trainerEvent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB2430();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static TrainerEventStarted.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t getEnumTagSinglePayload for TrainerEventStarted(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D5A062C0);
}

uint64_t sub_1D5A062C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2430();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for TrainerEventStarted(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D5A06340);
}

uint64_t sub_1D5A06340(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2430();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for TrainerEventStarted()
{
  uint64_t result = qword_1EA726980;
  if (!qword_1EA726980) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D5A063FC()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC13SeymourClient8Signpost_state);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_1D596E0C4((void *)(v1 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  uint64_t v2 = v0 + OBJC_IVAR____TtC13SeymourClient8Signpost_poster;
  uint64_t v3 = sub_1D5AB4AD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = v0 + OBJC_IVAR____TtC13SeymourClient8Signpost_signpostID;
  uint64_t v5 = sub_1D5AB4AA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1D5A06528()
{
  return type metadata accessor for Signpost();
}

uint64_t type metadata accessor for Signpost()
{
  uint64_t result = qword_1EBDE4150;
  if (!qword_1EBDE4150) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D5A0657C()
{
  uint64_t result = sub_1D5AB4AD0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1D5AB4AA0();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for Signpost.State(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for Signpost.State()
{
  return swift_release();
}

void *assignWithCopy for Signpost.State(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

void *assignWithTake for Signpost.State(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Signpost.State(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Signpost.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

uint64_t sub_1D5A067C0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1D5A067D8(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *uint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for Signpost.State()
{
  return &type metadata for Signpost.State;
}

uint64_t sub_1D5A06808(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = sub_1D5AB4AA0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  unsigned int v9 = &v29[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v12 = &v29[-v11];
  uint64_t result = MEMORY[0x1F4188790](v10);
  int v15 = &v29[-v14];
  if (!*a1)
  {
    int v16 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC13SeymourClient8Signpost_telemetryEnabled);
    uint64_t v17 = *(const char **)(a2 + OBJC_IVAR____TtC13SeymourClient8Signpost_identifier);
    uint64_t v32 = v2;
    unint64_t v33 = (char *)v17;
    LODWORD(v31) = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC13SeymourClient8Signpost_identifier + 16);
    uint64_t v18 = a2 + OBJC_IVAR____TtC13SeymourClient8Signpost_signpostID;
    unsigned int v19 = *(void (**)(NSObject *, uint64_t, uint64_t))(v6 + 16);
    if (v16 != 1) {
      goto LABEL_7;
    }
    v19(&v29[-v14], v18, v5);
    unsigned int v9 = sub_1D5AB4AC0();
    int v30 = sub_1D5AB5550();
    uint64_t result = sub_1D5AB55E0();
    if ((result & 1) == 0)
    {
LABEL_11:

LABEL_24:
      v19(v12, (uint64_t)v15, v5);
      sub_1D5AB4B10();
      swift_allocObject();
      uint64_t v28 = sub_1D5AB4B00();
      uint64_t result = (*(uint64_t (**)(NSObject *, uint64_t))(v6 + 8))(v15, v5);
      *a1 = v28;
      return result;
    }
    if (v31)
    {
      if ((unint64_t)v33 >> 32)
      {
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      if (v33 >> 11 == 27)
      {
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      if (v33 >> 16 > 0x10) {
        goto LABEL_28;
      }
      unint64_t v33 = &v34;
    }
    else if (!v33)
    {
      __break(1u);
LABEL_7:
      v19(v9, v18, v5);
      int v15 = sub_1D5AB4AC0();
      int v30 = sub_1D5AB5550();
      uint64_t result = sub_1D5AB55E0();
      if ((result & 1) == 0)
      {

LABEL_23:
        int v15 = v9;
        goto LABEL_24;
      }
      if ((v31 & 1) == 0)
      {
        if (!v33)
        {
          __break(1u);
          goto LABEL_11;
        }
        goto LABEL_22;
      }
      if (!((unint64_t)v33 >> 32))
      {
        if (v33 >> 11 == 27)
        {
LABEL_31:
          __break(1u);
          return result;
        }
        if (v33 >> 16 <= 0x10)
        {
          unint64_t v33 = &v35;
LABEL_22:
          v19(v12, (uint64_t)v9, v5);
          uint64_t v24 = (uint8_t *)swift_slowAlloc();
          uint64_t v31 = v19;
          uint64_t v25 = v24;
          *(_WORD *)uint64_t v24 = 0;
          os_signpost_id_t v26 = sub_1D5AB4A90();
          _os_signpost_emit_with_name_impl(&dword_1D5947000, v15, (os_signpost_type_t)v30, v26, v33, "", v25, 2u);
          uint64_t v27 = v25;
          unsigned int v19 = v31;
          MEMORY[0x1D945AAC0](v27, -1, -1);

          (*(void (**)(NSObject *, uint64_t))(v6 + 8))(v12, v5);
          goto LABEL_23;
        }
        goto LABEL_29;
      }
      goto LABEL_27;
    }
    v19(v12, (uint64_t)v15, v5);
    unsigned int v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = v19;
    uint64_t v21 = v20;
    *(_WORD *)unsigned int v20 = 0;
    os_signpost_id_t v22 = sub_1D5AB4A90();
    _os_signpost_emit_with_name_impl(&dword_1D5947000, v9, (os_signpost_type_t)v30, v22, v33, " enableTelemetry=YES ", v21, 2u);
    int v23 = v21;
    unsigned int v19 = v31;
    MEMORY[0x1D945AAC0](v23, -1, -1);

    (*(void (**)(NSObject *, uint64_t))(v6 + 8))(v12, v5);
    goto LABEL_24;
  }
  return result;
}

uint64_t sub_1D5A06C14(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_1D5AB4AE0();
  uint64_t v56 = *(void *)(v5 - 8);
  uint64_t v57 = v5;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v50 - v9;
  uint64_t v11 = sub_1D5AB4AA0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  int v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t result = MEMORY[0x1F4188790](v16);
  unsigned int v20 = (char *)&v50 - v19;
  if (!*a1) {
    return result;
  }
  unint64_t v51 = v8;
  uint64_t v52 = v18;
  uint64_t v54 = result;
  uint64_t v55 = v2;
  *a1 = 0;
  int v21 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC13SeymourClient8Signpost_telemetryEnabled);
  unint64_t v53 = *(const char **)(a2 + OBJC_IVAR____TtC13SeymourClient8Signpost_identifier);
  char v22 = *(unsigned char *)(a2 + OBJC_IVAR____TtC13SeymourClient8Signpost_identifier + 16);
  int v23 = sub_1D5AB4AC0();
  if (v21 != 1)
  {
LABEL_7:
    unsigned int v20 = (char *)v15;
    sub_1D5AB4AF0();
    os_signpost_type_t v26 = sub_1D5AB5540();
    uint64_t result = sub_1D5AB55E0();
    uint64_t v25 = v12;
    if (result)
    {
      if ((v22 & 1) == 0)
      {
        uint64_t v27 = v53;
        if (!v53)
        {
          __break(1u);
          goto LABEL_11;
        }
        goto LABEL_22;
      }
      if (!((unint64_t)v53 >> 32))
      {
        if (v53 >> 11 == 27)
        {
LABEL_34:
          __break(1u);
          return result;
        }
        if (v53 >> 16 <= 0x10)
        {
          uint64_t v27 = &v60;
LABEL_22:
          swift_retain();
          uint64_t v31 = v51;
          sub_1D5AB4B20();
          swift_release();
          uint64_t v33 = v56;
          uint64_t v32 = v57;
          if ((*(unsigned int (**)(char *, uint64_t))(v56 + 88))(v31, v57) == *MEMORY[0x1E4FBD340])
          {
            char v34 = "[Error] Interval already ended";
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v33 + 8))(v31, v32);
            char v34 = "";
          }
          uint64_t v43 = v52;
          uint64_t v44 = v20;
          os_log_type_t v45 = v20;
          uint64_t v46 = v54;
          (*(void (**)(uint64_t, char *, uint64_t))(v25 + 16))(v52, v44, v54);
          uint64_t v47 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v47 = 0;
          os_signpost_id_t v48 = sub_1D5AB4A90();
          _os_signpost_emit_with_name_impl(&dword_1D5947000, v23, v26, v48, v27, v34, v47, 2u);
          MEMORY[0x1D945AAC0](v47, -1, -1);

          uint64_t v49 = *(void (**)(char *, uint64_t))(v25 + 8);
          v49(v45, v46);
          swift_release();
          return ((uint64_t (*)(uint64_t, uint64_t))v49)(v43, v46);
        }
        goto LABEL_32;
      }
      goto LABEL_30;
    }
LABEL_11:

    (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v54);
    return swift_release();
  }
  sub_1D5AB4AF0();
  int v24 = sub_1D5AB5540();
  uint64_t result = sub_1D5AB55E0();
  uint64_t v25 = v12;
  if ((result & 1) == 0) {
    goto LABEL_11;
  }
  LODWORD(v51) = v24;
  if (v22)
  {
    if ((unint64_t)v53 >> 32)
    {
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    if (v53 >> 11 == 27)
    {
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    if (v53 >> 16 > 0x10) {
      goto LABEL_31;
    }
    int v15 = &v59;
  }
  else
  {
    int v15 = v53;
    if (!v53)
    {
      __break(1u);
      goto LABEL_7;
    }
  }
  swift_retain();
  sub_1D5AB4B20();
  swift_release();
  uint64_t v29 = v56;
  uint64_t v28 = v57;
  if ((*(unsigned int (**)(char *, uint64_t))(v56 + 88))(v10, v57) == *MEMORY[0x1E4FBD340])
  {
    int v30 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v28);
    int v30 = " enableTelemetry=YES ";
  }
  char v35 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 16);
  uint64_t v36 = v52;
  uint64_t v37 = v20;
  uint64_t v38 = v20;
  uint64_t v39 = v54;
  v35(v52, v37, v54);
  uint64_t v40 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v40 = 0;
  os_signpost_id_t v41 = sub_1D5AB4A90();
  _os_signpost_emit_with_name_impl(&dword_1D5947000, v23, (os_signpost_type_t)v51, v41, v15, v30, v40, 2u);
  MEMORY[0x1D945AAC0](v40, -1, -1);

  uint64_t v42 = *(void (**)(char *, uint64_t))(v25 + 8);
  v42(v38, v39);
  swift_release();
  return ((uint64_t (*)(uint64_t, uint64_t))v42)(v36, v39);
}

unint64_t static EntitlementConstants.daemon.getter()
{
  return 0xD000000000000011;
}

unint64_t static EntitlementConstants.sessionDaemon.getter()
{
  return 0xD000000000000019;
}

ValueMetadata *type metadata accessor for EntitlementConstants()
{
  return &type metadata for EntitlementConstants;
}

uint64_t dispatch thunk of RemoteParticipantClientProtocol.beginAdvertisingParticipantHost()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RemoteParticipantClientProtocol.endAdvertisingParticipantHost()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of RemoteParticipantClientProtocol.beginDiscoveringParticipantsWithRole(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of RemoteParticipantClientProtocol.endDiscoveringParticipants()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of RemoteParticipantClientProtocol.tryPassword(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t static String.read(from:key:)(void *a1)
{
  uint64_t v2 = (void *)sub_1D5AB4DE0();
  id v3 = objc_msgSend(a1, sel_stringForKey_, v2);

  if (!v3) {
    return 0;
  }
  uint64_t v4 = sub_1D5AB4DF0();

  return v4;
}

Swift::Void __swiftcall String.write(to:key:)(NSUserDefaults to, Swift::String key)
{
}

void sub_1D5A072D4(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (void *)sub_1D5AB4DE0();
  id v5 = objc_msgSend(a1, sel_stringForKey_, v4);

  if (v5)
  {
    uint64_t v6 = sub_1D5AB4DF0();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  *a2 = v6;
  a2[1] = v8;
}

void sub_1D5A0735C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

uint64_t static Int.read(from:key:)(void *a1)
{
  return sub_1D5A09558(a1);
}

Swift::Void __swiftcall Int.write(to:key:)(NSUserDefaults to, Swift::String key)
{
  CFStringRef container = to._container_;
  Class isa = to.super.isa;
  id v4 = (id)sub_1D5AB4DE0();
  [(objc_class *)isa setInteger:container forKey:v4];
}

uint64_t sub_1D5A07400@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1D5A09558(a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_1D5A07438(void *a1)
{
  uint64_t v3 = *v1;
  id v4 = (id)sub_1D5AB4DE0();
  objc_msgSend(a1, sel_setInteger_forKey_, v3, v4);
}

uint64_t static UInt64.read(from:key:)(void *a1)
{
  return sub_1D5A09558(a1);
}

Swift::Void __swiftcall UInt64.write(to:key:)(NSUserDefaults to, Swift::String key)
{
  Class isa = to.super.isa;
  uint64_t v3 = (void *)sub_1D5AB5CD0();
  id v4 = (id)sub_1D5AB4DE0();
  [(objc_class *)isa setObject:v3 forKey:v4];
}

uint64_t sub_1D5A07548@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1D5A09558(a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_1D5A07580(void *a1)
{
  uint64_t v2 = (void *)sub_1D5AB5CD0();
  id v3 = (id)sub_1D5AB4DE0();
  objc_msgSend(a1, sel_setObject_forKey_, v2, v3);
}

Swift::Void __swiftcall Bool.write(to:key:)(NSUserDefaults to, Swift::String key)
{
  char container = (char)to._container_;
  Class isa = to.super.isa;
  id v4 = (id)sub_1D5AB4DE0();
  [(objc_class *)isa setBool:container & 1 forKey:v4];
}

uint64_t sub_1D5A07670@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _sSb13SeymourClientE4read4from3keySbSgSo14NSUserDefaultsC_SStFZ_0(a1);
  *a2 = result;
  return result;
}

void sub_1D5A07698(void *a1)
{
  uint64_t v3 = *v1;
  id v4 = (id)sub_1D5AB4DE0();
  objc_msgSend(a1, sel_setBool_forKey_, v3, v4);
}

uint64_t static Double.read(from:key:)(void *a1, uint64_t a2, unint64_t a3)
{
  return sub_1D5A08A8C(a1, a2, a3);
}

Swift::Void __swiftcall Double.write(to:key:)(NSUserDefaults to, Swift::String key)
{
  double v3 = v2;
  Class isa = to.super.isa;
  id v5 = (id)sub_1D5AB4DE0();
  [(objc_class *)isa setDouble:v5 forKey:v3];
}

uint64_t sub_1D5A0778C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_1D5A08A8C(a1, a2, a3);
  *(void *)a4 = result;
  *(unsigned char *)(a4 + 8) = v6 & 1;
  return result;
}

void sub_1D5A077BC(void *a1)
{
  double v3 = *v1;
  id v4 = (id)sub_1D5AB4DE0();
  objc_msgSend(a1, sel_setDouble_forKey_, v4, v3);
}

uint64_t static Float.read(from:key:)(void *a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3 = sub_1D5A08FEC(a1, a2, a3);
  return v3 | ((HIDWORD(v3) & 1) << 32);
}

Swift::Void __swiftcall Float.write(to:key:)(NSUserDefaults to, Swift::String key)
{
  int v3 = v2;
  Class isa = to.super.isa;
  id v6 = (id)sub_1D5AB4DE0();
  LODWORD(v5) = v3;
  [(objc_class *)isa setFloat:v6 forKey:v5];
}

unint64_t sub_1D5A078C8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t result = sub_1D5A08FEC(a1, a2, a3);
  *(_DWORD *)a4 = result;
  *(unsigned char *)(a4 + 4) = BYTE4(result) & 1;
  return result;
}

void sub_1D5A078F8(void *a1)
{
  int v3 = *v1;
  id v5 = (id)sub_1D5AB4DE0();
  LODWORD(v4) = v3;
  objc_msgSend(a1, sel_setFloat_forKey_, v5, v4);
}

Swift::Void __swiftcall Data.write(to:key:)(NSUserDefaults to, Swift::String key)
{
}

void sub_1D5A07984(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t))
{
  uint64_t v7 = (void *)a6(a4, a5);
  id v8 = (id)sub_1D5AB4DE0();
  objc_msgSend(a1, sel_setObject_forKey_, v7, v8);
}

uint64_t sub_1D5A07A10@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = _s10Foundation4DataV13SeymourClientE4read4from3keyACSgSo14NSUserDefaultsC_SStFZ_0(a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

void sub_1D5A07A38(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

void sub_1D5A07A50(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, void))
{
  id v8 = (void *)a6(*v6, v6[1]);
  id v9 = (id)sub_1D5AB4DE0();
  objc_msgSend(a1, sel_setObject_forKey_, v8, v9);
}

uint64_t static Optional<A>.read(from:key:)@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  (*(void (**)(void))(a1 + 8))();
  uint64_t v3 = sub_1D5AB5620();
  uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
  return v4(a2, 0, 1, v3);
}

uint64_t Optional<A>.write(to:key:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *(void *)(a4 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](a1);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v14 + 16);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v20, v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, a4);
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v13, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 16))(a1, a2, a3, v15, a5);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
}

uint64_t sub_1D5A07D5C@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  return static Optional<A>.read(from:key:)(*(void *)(a1 - 8), a2);
}

uint64_t sub_1D5A07D68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return Optional<A>.write(to:key:)(a1, a2, a3, a4, *(void *)(a5 - 8));
}

uint64_t static Array<A>.read(from:key:)(void *a1)
{
  int v2 = (void *)sub_1D5AB4DE0();
  id v3 = objc_msgSend(a1, sel_valueForKey_, v2);

  if (v3)
  {
    sub_1D5AB56E0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  sub_1D5A09640((uint64_t)v8, (uint64_t)v9);
  if (!v9[3])
  {
    sub_1D5A096A8((uint64_t)v9);
    return 0;
  }
  swift_getAssociatedTypeWitness();
  sub_1D5AB5100();
  uint64_t v4 = swift_dynamicCast();
  if ((v4 & 1) == 0) {
    return 0;
  }
  v9[0] = v7;
  MEMORY[0x1F4188790](v4);
  swift_getWitnessTable();
  uint64_t v5 = sub_1D5AB4F70();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1D5A07F20(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - v3, a1);
  return sub_1D5AB4FE0();
}

void Array<A>.write(to:key:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v14[7] = a4;
  v14[2] = a5;
  v14[3] = a6;
  v14[4] = a7;
  uint64_t v8 = sub_1D5AB5100();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1D59B92C0((void (*)(char *, char *))sub_1D5A09728, (uint64_t)v14, v8, AssociatedTypeWitness, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v11);
  uint64_t v12 = (void *)sub_1D5AB5040();
  swift_bridgeObjectRelease();
  uint64_t v13 = (void *)sub_1D5AB4DE0();
  objc_msgSend(a1, sel_setObject_forKey_, v12, v13);
}

uint64_t sub_1D5A08154@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = static Array<A>.read(from:key:)(a1);
  *a2 = result;
  return result;
}

void sub_1D5A08188(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  Array<A>.write(to:key:)(a1, a2, a3, *v5, *(void *)(a4 + 16), *(void *)(a5 - 8), *(void *)(a5 - 16));
}

uint64_t static DefaultsStorable<>.read(from:key:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  unint64_t v48 = a1;
  uint64_t v49 = a7;
  uint64_t v12 = sub_1D5AB5620();
  uint64_t v44 = *(void *)(v12 - 8);
  uint64_t v45 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v47 = (char *)&v42 - v13;
  uint64_t v46 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = sub_1D5AB5620();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v42 - v18;
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v22 = (char *)&v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  int v24 = (char *)&v42 - v23;
  uint64_t v25 = *(void (**)(unint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(a6 + 8);
  unint64_t v26 = v48;
  uint64_t v43 = a2;
  unint64_t v48 = a3;
  uint64_t v27 = a6;
  uint64_t v29 = v28;
  v25(v26, a2, a3, AssociatedTypeWitness, v27);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v19, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 56))(v49, 1, 1, a4);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v24, v19, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v22, v24, AssociatedTypeWitness);
    uint64_t v31 = v47;
    sub_1D5AB4FE0();
    uint64_t v32 = *(void *)(a4 - 8);
    uint64_t v33 = v24;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v31, 1, a4) == 1)
    {
      uint64_t v46 = v29;
      (*(void (**)(char *, uint64_t))(v44 + 8))(v31, v45);
      if (qword_1EBDE5420 != -1) {
        swift_once();
      }
      uint64_t v34 = sub_1D5AB4B50();
      __swift_project_value_buffer(v34, (uint64_t)qword_1EBDE5400);
      unint64_t v35 = v48;
      swift_bridgeObjectRetain_n();
      uint64_t v36 = sub_1D5AB4B30();
      os_log_type_t v37 = sub_1D5AB5410();
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v38 = swift_slowAlloc();
        uint64_t v39 = swift_slowAlloc();
        uint64_t v47 = v33;
        uint64_t v40 = v39;
        *(_DWORD *)uint64_t v38 = 141558274;
        uint64_t v50 = 1752392040;
        uint64_t v51 = v39;
        sub_1D5AB5680();
        *(_WORD *)(v38 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v50 = sub_1D5951500(v43, v35, &v51);
        sub_1D5AB5680();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1D5947000, v36, v37, "Couldn't parse user default %{mask.hash}s.", (uint8_t *)v38, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1D945AAC0](v40, -1, -1);
        MEMORY[0x1D945AAC0](v38, -1, -1);

        (*(void (**)(char *, uint64_t))(v46 + 8))(v47, AssociatedTypeWitness);
      }
      else
      {
        swift_bridgeObjectRelease_n();

        (*(void (**)(char *, uint64_t))(v46 + 8))(v33, AssociatedTypeWitness);
      }
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v49, 1, 1, a4);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v29 + 8))(v24, AssociatedTypeWitness);
      uint64_t v41 = v49;
      (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v49, v31, a4);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56))(v41, 0, 1, a4);
    }
  }
}

uint64_t DefaultsStorable<>.write(to:key:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v14 = (char *)&v16 - v13;
  sub_1D5AB4FD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 16))(a1, a2, a3, AssociatedTypeWitness, a7);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, AssociatedTypeWitness);
}

uint64_t sub_1D5A08874(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    a3(&var2);
    if (!v3) {
      char v4 = var2;
    }
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3) {
      char v4 = BYTE1(var2);
    }
  }
  return v4 & 1;
}

uint64_t _s10Foundation4DataV13SeymourClientE4read4from3keyACSgSo14NSUserDefaultsC_SStFZ_0(void *a1)
{
  int v2 = (void *)sub_1D5AB4DE0();
  id v3 = objc_msgSend(a1, sel_valueForKey_, v2);

  if (v3)
  {
    sub_1D5AB56E0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_1D5A09640((uint64_t)v6, (uint64_t)v7);
  if (v8)
  {
    if (swift_dynamicCast()) {
      return v5;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_1D5A096A8((uint64_t)v7);
    return 0;
  }
}

uint64_t _sSb13SeymourClientE4read4from3keySbSgSo14NSUserDefaultsC_SStFZ_0(void *a1)
{
  int v2 = (void *)sub_1D5AB4DE0();
  id v3 = objc_msgSend(a1, sel_valueForKey_, v2);

  if (v3)
  {
    sub_1D5AB56E0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_1D5A09640((uint64_t)v6, (uint64_t)v7);
  if (v8)
  {
    if (swift_dynamicCast()) {
      return v5;
    }
    else {
      return 2;
    }
  }
  else
  {
    sub_1D5A096A8((uint64_t)v7);
    return 2;
  }
}

uint64_t sub_1D5A08A8C(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = (void *)sub_1D5AB4DE0();
  id v7 = objc_msgSend(a1, sel_valueForKey_, v6);

  if (!v7) {
    goto LABEL_28;
  }
  sub_1D5AB56E0();
  swift_unknownObjectRelease();
  sub_1D5979A10(&v31, v33);
  sub_1D5951F00((uint64_t)v33, (uint64_t)&v31);
  if (swift_dynamicCast())
  {
    double v8 = v29;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
    return *(void *)&v8;
  }
  sub_1D5951F00((uint64_t)v33, (uint64_t)&v31);
  uint64_t v9 = swift_dynamicCast();
  if (!v9)
  {
    sub_1D5951F00((uint64_t)v33, (uint64_t)&v31);
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
      double v8 = *(float *)&v29;
      return *(void *)&v8;
    }
    if (qword_1EBDE5420 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1D5AB4B50();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EBDE5400);
    sub_1D5951F00((uint64_t)v33, (uint64_t)&v31);
    sub_1D5951F00((uint64_t)v33, (uint64_t)&v29);
    swift_bridgeObjectRetain_n();
    uint64_t v17 = sub_1D5AB4B30();
    os_log_type_t v18 = sub_1D5AB5410();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      uint64_t v28 = v20;
      *(_DWORD *)uint64_t v19 = 136315650;
      swift_bridgeObjectRetain();
      sub_1D5951500(a2, a3, &v28);
      sub_1D5AB5680();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v19 + 12) = 2080;
      __swift_project_boxed_opaque_existential_1(&v31, v32);
      swift_getDynamicType();
      uint64_t v21 = sub_1D5AB5D20();
      v27[0] = sub_1D5951500(v21, v22, &v28);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v31);
      *(_WORD *)(v19 + 22) = 2080;
      sub_1D5951F00((uint64_t)&v29, (uint64_t)v27);
      uint64_t v23 = sub_1D5AB4E10();
      v27[0] = sub_1D5951500(v23, v24, &v28);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v29);
      _os_log_impl(&dword_1D5947000, v17, v18, "Couldn't parse Double at %s with type %s and value %s", (uint8_t *)v19, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v20, -1, -1);
      MEMORY[0x1D945AAC0](v19, -1, -1);

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
      double v8 = 0.0;
      return *(void *)&v8;
    }

    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v29);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v31);
    swift_bridgeObjectRelease_n();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
LABEL_28:
    double v8 = 0.0;
    return *(void *)&v8;
  }
  double v29 = 0.0;
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  if ((v30 & 0x1000000000000000) != 0 || !(v30 & 0x2000000000000000 | v11 & 0x1000000000000000))
  {
    sub_1D5AB57E0();
    swift_bridgeObjectRelease();
    char v15 = v31;
  }
  else
  {
    MEMORY[0x1F4188790](v10);
    if ((v30 & 0x2000000000000000) != 0)
    {
      *(void *)&long long v31 = v12;
      *((void *)&v31 + 1) = v30 & 0xFFFFFFFFFFFFFFLL;
      char v15 = (v12 > 0x20u || ((0x100003E01uLL >> v12) & 1) == 0)
         && (uint64_t v25 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
         && *v25 == 0;
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((v12 & 0x1000000000000000) != 0)
      {
        uint64_t v13 = (v30 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v14 = v12 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v13 = sub_1D5AB5870();
      }
      char v15 = sub_1D5A08874(v13, v14, (void (*)(uint64_t *__return_ptr))sub_1D5A097B0);
      swift_bridgeObjectRelease();
    }
  }
  if (v15) {
    double v8 = v29;
  }
  else {
    double v8 = 0.0;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
  return *(void *)&v8;
}

unint64_t sub_1D5A08FEC(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = (void *)sub_1D5AB4DE0();
  id v7 = objc_msgSend(a1, sel_valueForKey_, v6);

  if (!v7) {
    goto LABEL_28;
  }
  sub_1D5AB56E0();
  swift_unknownObjectRelease();
  sub_1D5979A10(&v33, v35);
  sub_1D5951F00((uint64_t)v35, (uint64_t)&v33);
  if (swift_dynamicCast())
  {
    float v8 = *(float *)&v31;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v35);
    char v9 = 0;
    goto LABEL_29;
  }
  sub_1D5951F00((uint64_t)v35, (uint64_t)&v33);
  uint64_t v10 = swift_dynamicCast();
  if (!v10)
  {
    sub_1D5951F00((uint64_t)v35, (uint64_t)&v33);
    if (swift_dynamicCast())
    {
      float v17 = v31;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v35);
      char v9 = 0;
      float v8 = v17;
      goto LABEL_29;
    }
    if (qword_1EBDE5420 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_1D5AB4B50();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EBDE5400);
    sub_1D5951F00((uint64_t)v35, (uint64_t)&v33);
    sub_1D5951F00((uint64_t)v35, (uint64_t)&v31);
    swift_bridgeObjectRetain_n();
    uint64_t v19 = sub_1D5AB4B30();
    os_log_type_t v20 = sub_1D5AB5410();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v30 = v22;
      *(_DWORD *)uint64_t v21 = 136315650;
      swift_bridgeObjectRetain();
      sub_1D5951500(a2, a3, &v30);
      sub_1D5AB5680();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v21 + 12) = 2080;
      __swift_project_boxed_opaque_existential_1(&v33, v34);
      char v9 = 1;
      swift_getDynamicType();
      uint64_t v23 = sub_1D5AB5D20();
      v29[0] = sub_1D5951500(v23, v24, &v30);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v33);
      *(_WORD *)(v21 + 22) = 2080;
      sub_1D5951F00((uint64_t)&v31, (uint64_t)v29);
      uint64_t v25 = sub_1D5AB4E10();
      v29[0] = sub_1D5951500(v25, v26, &v30);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v31);
      _os_log_impl(&dword_1D5947000, v19, v20, "Couldn't parse Float at %s with type %s and value %s", (uint8_t *)v21, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v22, -1, -1);
      MEMORY[0x1D945AAC0](v21, -1, -1);

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v35);
      float v8 = 0.0;
      goto LABEL_29;
    }

    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v31);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v33);
    swift_bridgeObjectRelease_n();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v35);
LABEL_28:
    float v8 = 0.0;
    char v9 = 1;
    goto LABEL_29;
  }
  LODWORD(v31) = 0;
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  if ((v32 & 0x1000000000000000) != 0 || !(v32 & 0x2000000000000000 | v12 & 0x1000000000000000))
  {
    sub_1D5AB57E0();
    swift_bridgeObjectRelease();
    char v16 = v33;
  }
  else
  {
    MEMORY[0x1F4188790](v11);
    if ((v32 & 0x2000000000000000) != 0)
    {
      *(void *)&long long v33 = v13;
      *((void *)&v33 + 1) = v32 & 0xFFFFFFFFFFFFFFLL;
      char v16 = (v13 > 0x20u || ((0x100003E01uLL >> v13) & 1) == 0)
         && (uint64_t v27 = (unsigned char *)_swift_stdlib_strtof_clocale()) != 0
         && *v27 == 0;
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((v13 & 0x1000000000000000) != 0)
      {
        uint64_t v14 = (v32 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v15 = v13 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v14 = sub_1D5AB5870();
      }
      char v16 = sub_1D5A08874(v14, v15, (void (*)(uint64_t *__return_ptr))sub_1D5A097B0);
      swift_bridgeObjectRelease();
    }
  }
  if (v16) {
    float v8 = *(float *)&v31;
  }
  else {
    float v8 = 0.0;
  }
  char v9 = v16 ^ 1;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v35);
LABEL_29:
  LOBYTE(v35[0]) = v9 & 1;
  return LODWORD(v8) | ((unint64_t)(v9 & 1) << 32);
}

uint64_t sub_1D5A09558(void *a1)
{
  int v2 = (void *)sub_1D5AB4DE0();
  id v3 = objc_msgSend(a1, sel_valueForKey_, v2);

  if (v3)
  {
    sub_1D5AB56E0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_1D5A09640((uint64_t)v6, (uint64_t)v7);
  if (v8)
  {
    if (swift_dynamicCast()) {
      return v5;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_1D5A096A8((uint64_t)v7);
    return 0;
  }
}

uint64_t sub_1D5A09640(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5A096A8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5A09708(uint64_t a1)
{
  return sub_1D5A07F20(a1);
}

uint64_t sub_1D5A09728()
{
  return sub_1D5AB4FD0();
}

uint64_t dispatch thunk of static DefaultsStorable.read(from:key:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of DefaultsStorable.write(to:key:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

unsigned char *sub_1D5A09784@<X0>(unsigned char *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1D5A097F4(a1, MEMORY[0x1E4FBC880], a2);
}

void *sub_1D5A097B0@<X0>(unsigned char *a1@<X8>)
{
  return sub_1D5A0986C(a1);
}

unsigned char *sub_1D5A097C8@<X0>(unsigned char *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1D5A097F4(a1, MEMORY[0x1E4FBC878], a2);
}

unsigned char *sub_1D5A097F4@<X0>(unsigned char *result@<X0>, uint64_t (*a2)(void)@<X1>, BOOL *a3@<X8>)
{
  unsigned int v4 = *result;
  BOOL v5 = v4 > 0x20;
  uint64_t v6 = (1 << v4) & 0x100003E01;
  BOOL v7 = v5 || v6 == 0;
  BOOL v8 = v7 && (result = (unsigned char *)a2()) != 0 && *result == 0;
  *a3 = v8;
  return result;
}

void *sub_1D5A0986C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t SessionToken.__allocating_init(sessionIdentifier:state:)(uint64_t a1, uint64_t a2, char a3)
{
  char v5 = a3 & 1;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(unsigned char *)(result + 32) = v5;
  return result;
}

SeymourClient::SessionToken::State_optional __swiftcall SessionToken.State.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1 = sub_1D5AB5A40();
  swift_bridgeObjectRelease();
  if (v1 == 1) {
    v2.value = SeymourClient_SessionToken_State_inactive;
  }
  else {
    v2.value = SeymourClient_SessionToken_State_unknownDefault;
  }
  if (v1) {
    return v2;
  }
  else {
    return 0;
  }
}

uint64_t SessionToken.State.rawValue.getter(char a1)
{
  if (a1) {
    return 0x6576697463616E69;
  }
  else {
    return 0x657669746361;
  }
}

uint64_t sub_1D5A09980(unsigned char *a1, unsigned char *a2)
{
  BOOL v2 = *a1 == 0;
  if (*a1) {
    uint64_t v3 = 0x6576697463616E69;
  }
  else {
    uint64_t v3 = 0x657669746361;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (*a2) {
    uint64_t v5 = 0x6576697463616E69;
  }
  else {
    uint64_t v5 = 0x657669746361;
  }
  if (*a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1D5AB5AF0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D5A09A28()
{
  return sub_1D5AB5C60();
}

uint64_t sub_1D5A09AA8()
{
  sub_1D5AB4E60();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5A09B14()
{
  return sub_1D5AB5C60();
}

uint64_t sub_1D5A09B90@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1D5AB5A40();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1D5A09BF0(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x657669746361;
  if (*v1) {
    uint64_t v2 = 0x6576697463616E69;
  }
  unint64_t v3 = 0xE600000000000000;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t SessionToken.sessionIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SessionToken.init(sessionIdentifier:state:)(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  *(unsigned char *)(v3 + 32) = a3 & 1;
  return v3;
}

uint64_t SessionToken.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SessionToken.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D5A09CCC(uint64_t *a1, uint64_t *a2)
{
  return _s13SeymourClient12SessionTokenC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t SessionToken.hash(into:)()
{
  return sub_1D5AB5C30();
}

uint64_t SessionToken.hashValue.getter()
{
  return sub_1D5AB5C60();
}

uint64_t sub_1D5A09E40()
{
  return SessionToken.hashValue.getter();
}

uint64_t sub_1D5A09E64()
{
  return sub_1D5AB5C30();
}

uint64_t sub_1D5A09F14()
{
  return sub_1D5AB5C60();
}

uint64_t _s13SeymourClient12SessionTokenC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(unsigned char *)(a1 + 32) == 0;
  if (*(unsigned char *)(a1 + 32)) {
    uint64_t v5 = 0x6576697463616E69;
  }
  else {
    uint64_t v5 = 0x657669746361;
  }
  if (v4) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE800000000000000;
  }
  if (*(unsigned char *)(a2 + 32)) {
    uint64_t v7 = 0x6576697463616E69;
  }
  else {
    uint64_t v7 = 0x657669746361;
  }
  if (*(unsigned char *)(a2 + 32)) {
    unint64_t v8 = 0xE800000000000000;
  }
  else {
    unint64_t v8 = 0xE600000000000000;
  }
  if (v5 == v7 && v6 == v8)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v10 = sub_1D5AB5AF0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v10 & 1) == 0) {
      return result;
    }
  }
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
    return 1;
  }
  return sub_1D5AB5AF0();
}

unint64_t sub_1D5A0A0D8()
{
  unint64_t result = qword_1EA726990;
  if (!qword_1EA726990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726990);
  }
  return result;
}

unint64_t sub_1D5A0A130()
{
  unint64_t result = qword_1EA726998;
  if (!qword_1EA726998)
  {
    type metadata accessor for SessionToken();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726998);
  }
  return result;
}

uint64_t type metadata accessor for SessionToken()
{
  return self;
}

uint64_t method lookup function for SessionToken(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SessionToken);
}

uint64_t dispatch thunk of SessionToken.__allocating_init(sessionIdentifier:state:)(uint64_t a1, uint64_t a2, char a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v3 + 120))(a1, a2, a3 & 1);
}

unsigned char *storeEnumTagSinglePayload for SessionToken.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D5A0A2A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionToken.State()
{
  return &type metadata for SessionToken.State;
}

uint64_t HeartRateMetric.applyingTimestampOffset(_:)()
{
  return sub_1D5AB2DB0();
}

uint64_t sub_1D5A0A350()
{
  return sub_1D5AB2DB0();
}

double ArchivedSessionHealthKitStatistics.energyBurned.getter()
{
  return *(double *)v0;
}

uint64_t ArchivedSessionHealthKitStatistics.workoutIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t initializeBufferWithCopyOfBuffer for ArchivedSessionHealthKitStatistics(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ArchivedSessionHealthKitStatistics()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for ArchivedSessionHealthKitStatistics(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

void *assignWithTake for ArchivedSessionHealthKitStatistics(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a2[2];
  a1[1] = a2[1];
  a1[2] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ArchivedSessionHealthKitStatistics(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArchivedSessionHealthKitStatistics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArchivedSessionHealthKitStatistics()
{
  return &type metadata for ArchivedSessionHealthKitStatistics;
}

uint64_t sub_1D5A0A57C@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_onFire);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_1D5A0B7BC;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_1D5A0A740(v4);
}

uint64_t sub_1D5A0A61C(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1D5A0B794;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_onFire);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_1D5A0A740(v3);
  return sub_1D5A0A7B0(v8);
}

uint64_t sub_1D5A0A6E4()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_onFire);
  swift_beginAccess();
  uint64_t v2 = *v1;
  sub_1D5A0A740(*v1);
  return v2;
}

uint64_t sub_1D5A0A740(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1D5A0A750(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_onFire);
  swift_beginAccess();
  uint64_t v6 = *v5;
  *uint64_t v5 = a1;
  v5[1] = a2;
  return sub_1D5A0A7B0(v6);
}

uint64_t sub_1D5A0A7B0(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t (*sub_1D5A0A7C0())()
{
  return j__swift_endAccess;
}

uint64_t DispatchTimer.__allocating_init(fireInterval:leewayInterval:queue:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = (void *)(v6 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_onFire);
  *uint64_t v7 = 0;
  v7[1] = 0;
  *(void *)(v6 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_sourceTimer) = 0;
  *(double *)(v6 + 16) = a3;
  uint64_t v8 = v6 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_leewayInterval;
  uint64_t v9 = sub_1D5AB4C40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8, a1, v9);
  *(void *)(v6 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_queue) = a2;
  return v6;
}

uint64_t DispatchTimer.init(fireInterval:leewayInterval:queue:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6 = (void *)(v3 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_onFire);
  *uint64_t v6 = 0;
  v6[1] = 0;
  *(void *)(v3 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_sourceTimer) = 0;
  *(double *)(v3 + 16) = a3;
  uint64_t v7 = v3 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_leewayInterval;
  uint64_t v8 = sub_1D5AB4C40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7, a1, v8);
  *(void *)(v3 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_queue) = a2;
  return v3;
}

uint64_t DispatchTimer.deinit()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC13SeymourClient13DispatchTimer_sourceTimer;
  if (*(void *)(v0 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_sourceTimer))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1D5AB5510();
    swift_unknownObjectRelease();
  }
  *(void *)(v0 + v2) = 0;
  swift_unknownObjectRelease();
  uint64_t v3 = v0 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_leewayInterval;
  uint64_t v4 = sub_1D5AB4C40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  sub_1D5A0A7B0(*(void *)(v1 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_onFire));
  swift_unknownObjectRelease();
  return v1;
}

uint64_t DispatchTimer.__deallocating_deinit()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC13SeymourClient13DispatchTimer_sourceTimer;
  if (*(void *)(v0 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_sourceTimer))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1D5AB5510();
    swift_unknownObjectRelease();
  }
  *(void *)(v0 + v2) = 0;
  swift_unknownObjectRelease();
  uint64_t v3 = v0 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_leewayInterval;
  uint64_t v4 = sub_1D5AB4C40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  sub_1D5A0A7B0(*(void *)(v1 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_onFire));
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D5A0AB88()
{
  uint64_t v1 = sub_1D5AB4C90();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v10 - v6;
  sub_1D5AB4C80();
  MEMORY[0x1D94590A0](v5, *(double *)(v0 + 16));
  uint64_t v8 = *(void (**)(char *, uint64_t))(v2 + 8);
  v8(v5, v1);
  sub_1D5A0AD18((uint64_t)v7);
  return ((uint64_t (*)(char *, uint64_t))v8)(v7, v1);
}

uint64_t sub_1D5A0AC9C()
{
  uint64_t v1 = OBJC_IVAR____TtC13SeymourClient13DispatchTimer_sourceTimer;
  if (*(void *)(v0 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_sourceTimer))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1D5AB5510();
    swift_unknownObjectRelease();
  }
  *(void *)(v0 + v1) = 0;
  return swift_unknownObjectRelease();
}

uint64_t sub_1D5A0AD18(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D5AB4C50();
  uint64_t v30 = *(void *)(v4 - 8);
  uint64_t v31 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D5AB4C70();
  uint64_t v28 = *(void *)(v7 - 8);
  uint64_t v29 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D5AB54D0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1D5AB4C40();
  uint64_t v14 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  char v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v1 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_sourceTimer))
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v18 = v1 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_leewayInterval;
    sub_1D5A40678((uint64_t)v16);
    swift_unknownObjectRetain();
    MEMORY[0x1D9459970](a1, v16, v18, ObjectType);
    swift_unknownObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v32);
  }
  else
  {
    uint64_t v27 = OBJC_IVAR____TtC13SeymourClient13DispatchTimer_sourceTimer;
    unint64_t v25 = sub_1D5A0B7E4();
    aBlock[0] = MEMORY[0x1E4FBC860];
    sub_1D5A0B824();
    uint64_t v26 = a1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4DA0);
    sub_1D5A0B87C();
    sub_1D5AB56F0();
    uint64_t v20 = sub_1D5AB54E0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    uint64_t v21 = swift_getObjectType();
    uint64_t v22 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_1D5A0B910;
    aBlock[5] = v22;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D598EA50;
    aBlock[3] = &block_descriptor_11;
    uint64_t v23 = _Block_copy(aBlock);
    swift_retain();
    sub_1D5A406EC();
    sub_1D5A406F0();
    sub_1D5AB5500();
    _Block_release(v23);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v31);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v29);
    swift_release();
    swift_release();
    uint64_t v24 = v2 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_leewayInterval;
    sub_1D5A40678((uint64_t)v16);
    MEMORY[0x1D9459970](v26, v16, v24, v21);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v32);
    sub_1D5AB5530();
    *(void *)(v2 + v27) = v20;
    return swift_unknownObjectRelease();
  }
}

uint64_t sub_1D5A0B1AC()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = OBJC_IVAR____TtC13SeymourClient13DispatchTimer_sourceTimer;
    if (*(void *)(result + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_sourceTimer))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_1D5AB5510();
      swift_unknownObjectRelease();
    }
    *(void *)(v1 + v2) = 0;
    swift_unknownObjectRelease();
    uint64_t v3 = (void (**)(uint64_t))(v1 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_onFire);
    swift_beginAccess();
    uint64_t v4 = *v3;
    if (*v3)
    {
      uint64_t v5 = swift_retain();
      v4(v5);
      sub_1D5A0A7B0((uint64_t)v4);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1D5A0B298()
{
  uint64_t v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_onFire);
  swift_beginAccess();
  uint64_t v2 = *v1;
  sub_1D5A0A740(*v1);
  return v2;
}

uint64_t sub_1D5A0B2F8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(*v2 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_onFire);
  swift_beginAccess();
  uint64_t v6 = *v5;
  *uint64_t v5 = a1;
  v5[1] = a2;
  return sub_1D5A0A7B0(v6);
}

uint64_t (*sub_1D5A0B35C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1D5A0B3BC()
{
  uint64_t v1 = sub_1D5AB4C90();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v11 - v6;
  uint64_t v8 = *v0;
  sub_1D5AB4C80();
  MEMORY[0x1D94590A0](v5, *(double *)(v8 + 16));
  uint64_t v9 = *(void (**)(char *, uint64_t))(v2 + 8);
  v9(v5, v1);
  sub_1D5A0AD18((uint64_t)v7);
  return ((uint64_t (*)(char *, uint64_t))v9)(v7, v1);
}

uint64_t sub_1D5A0B4D4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = OBJC_IVAR____TtC13SeymourClient13DispatchTimer_sourceTimer;
  if (*(void *)(*v0 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_sourceTimer))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1D5AB5510();
    swift_unknownObjectRelease();
  }
  *(void *)(v1 + v2) = 0;
  return swift_unknownObjectRelease();
}

ValueMetadata *type metadata accessor for DispatchTimerProvider()
{
  return &type metadata for DispatchTimerProvider;
}

uint64_t sub_1D5A0B568()
{
  return type metadata accessor for DispatchTimer();
}

uint64_t type metadata accessor for DispatchTimer()
{
  uint64_t result = qword_1EA7269A8;
  if (!qword_1EA7269A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D5A0B5BC()
{
  uint64_t result = sub_1D5AB4C40();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DispatchTimer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DispatchTimer);
}

uint64_t dispatch thunk of DispatchTimer.onFire.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of DispatchTimer.onFire.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of DispatchTimer.onFire.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of DispatchTimer.__allocating_init(fireInterval:leewayInterval:queue:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of DispatchTimer.schedule()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of DispatchTimer.cancel()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t sub_1D5A0B75C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D5A0B794()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1D5A0B7BC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_1D5A0B7E4()
{
  unint64_t result = qword_1EBDE4DD0;
  if (!qword_1EBDE4DD0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBDE4DD0);
  }
  return result;
}

unint64_t sub_1D5A0B824()
{
  unint64_t result = qword_1EBDE4DC0;
  if (!qword_1EBDE4DC0)
  {
    sub_1D5AB54D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE4DC0);
  }
  return result;
}

unint64_t sub_1D5A0B87C()
{
  unint64_t result = qword_1EBDE4DB0;
  if (!qword_1EBDE4DB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBDE4DA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE4DB0);
  }
  return result;
}

uint64_t sub_1D5A0B8D8()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D5A0B910()
{
  return sub_1D5A0B1AC();
}

uint64_t PortableEnum<>.isGuided.getter(char a1, uint64_t a2, unsigned __int8 a3)
{
  return a3 & ((a1 & 0xFE) == 0);
}

BOOL CatalogMediaType.isGuided.getter(unsigned __int8 a1)
{
  return a1 < 2u;
}

uint64_t WorkoutUpdated.workout.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB48E0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t WorkoutUpdated.sessionIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for WorkoutUpdated() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for WorkoutUpdated()
{
  uint64_t result = qword_1EA726A20;
  if (!qword_1EA726A20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t WorkoutUpdated.init(workout:sessionIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1D5AB48E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t result = type metadata accessor for WorkoutUpdated();
  uint64_t v10 = (void *)(a4 + *(int *)(result + 20));
  *uint64_t v10 = a2;
  v10[1] = a3;
  return result;
}

void static WorkoutUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t *initializeBufferWithCopyOfBuffer for WorkoutUpdated(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1D5AB48E0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for WorkoutUpdated(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB48E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for WorkoutUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB48E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WorkoutUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB48E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for WorkoutUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB48E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for WorkoutUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB48E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D5A0BE58);
}

uint64_t sub_1D5A0BE58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB48E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for WorkoutUpdated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D5A0BF30);
}

uint64_t sub_1D5A0BF30(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1D5AB48E0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1D5A0BFF0()
{
  uint64_t result = sub_1D5AB48E0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

BOOL CommunityScores.isEmpty.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D5AB2D30();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v9 = (char *)&v21 - v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v21 - v10;
  uint64_t v12 = *(void *)(sub_1D5AB2D00() + 16);
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v13(v11, v1, v2);
  if (v12)
  {
    uint64_t v14 = *(void *)(sub_1D5AB2CE0() + 16);
    swift_bridgeObjectRelease();
    BOOL v15 = v14 == 0;
  }
  else
  {
    BOOL v15 = 1;
  }
  char v16 = *(void (**)(char *, uint64_t))(v3 + 8);
  v16(v11, v2);
  v13(v9, v1, v2);
  if (v15)
  {
    v16(v9, v2);
    v13(v6, v1, v2);
LABEL_8:
    BOOL v19 = 1;
    goto LABEL_9;
  }
  uint64_t v17 = *(void *)(sub_1D5AB2CF0() + 16);
  swift_bridgeObjectRelease();
  v16(v9, v2);
  v13(v6, v1, v2);
  if (!v17) {
    goto LABEL_8;
  }
  uint64_t v18 = *(void *)(sub_1D5AB2D10() + 16);
  swift_bridgeObjectRelease();
  BOOL v19 = v18 == 0;
LABEL_9:
  v16(v6, v2);
  return v19;
}

uint64_t BuildVersion.init(rawValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v61 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = sub_1D5AB2540();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D5AB2270();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v56 = a1;
  *((void *)&v56 + 1) = a2;
  uint64_t v59 = 46;
  unint64_t v60 = 0xE100000000000000;
  sub_1D59AA0A4();
  uint64_t v13 = (void *)sub_1D5AB56A0();
  swift_bridgeObjectRelease();
  unint64_t v14 = v13[2];
  if (!v14) {
    goto LABEL_46;
  }
  uint64_t v55 = v8;
  uint64_t v15 = v13[4];
  unint64_t v16 = v13[5];
  uint64_t v17 = v13 + 4;
  uint64_t v18 = HIBYTE(v16) & 0xF;
  uint64_t v19 = v15 & 0xFFFFFFFFFFFFLL;
  if (!((v16 & 0x2000000000000000) != 0 ? HIBYTE(v16) & 0xF : v15 & 0xFFFFFFFFFFFFLL)) {
    goto LABEL_46;
  }
  if ((v16 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1D5A74358(v15, v16, 10);
    LOBYTE(v15) = v50;
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  if ((v16 & 0x2000000000000000) != 0)
  {
    *(void *)&long long v56 = v13[4];
    *((void *)&v56 + 1) = v16 & 0xFFFFFFFFFFFFFFLL;
    if (v15 == 43)
    {
      if (!v18)
      {
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
      }
      if (v18 == 1 || (BYTE1(v15) - 48) > 9u) {
        goto LABEL_32;
      }
      uint64_t v22 = (BYTE1(v15) - 48);
      if (v18 == 2) {
        goto LABEL_34;
      }
      if ((BYTE2(v15) - 48) <= 9u)
      {
        uint64_t v22 = 10 * (BYTE1(v15) - 48) + (BYTE2(v15) - 48);
        uint64_t v24 = v18 - 3;
        if (v24)
        {
          unint64_t v25 = (unsigned __int8 *)&v56 + 3;
          while (1)
          {
            unsigned int v26 = *v25 - 48;
            if (v26 > 9) {
              goto LABEL_32;
            }
            uint64_t v27 = 10 * v22;
            if ((unsigned __int128)(v22 * (__int128)10) >> 64 != (10 * v22) >> 63) {
              goto LABEL_32;
            }
            uint64_t v22 = v27 + v26;
            if (__OFADD__(v27, v26)) {
              goto LABEL_32;
            }
            LOBYTE(v15) = 0;
            ++v25;
            if (!--v24) {
              goto LABEL_35;
            }
          }
        }
        goto LABEL_34;
      }
    }
    else
    {
      if (v15 == 45)
      {
        if (!v18)
        {
LABEL_74:
          __break(1u);
          goto LABEL_75;
        }
        if (v18 == 1 || (BYTE1(v15) - 48) > 9u) {
          goto LABEL_32;
        }
        if (v18 == 2)
        {
          LOBYTE(v15) = 0;
          uint64_t v22 = -(uint64_t)(BYTE1(v15) - 48);
          goto LABEL_35;
        }
        if ((BYTE2(v15) - 48) > 9u) {
          goto LABEL_32;
        }
        uint64_t v22 = -10 * (BYTE1(v15) - 48) - (BYTE2(v15) - 48);
        uint64_t v46 = v18 - 3;
        if (v46)
        {
          uint64_t v47 = (unsigned __int8 *)&v56 + 3;
          while (1)
          {
            unsigned int v48 = *v47 - 48;
            if (v48 > 9) {
              goto LABEL_32;
            }
            uint64_t v49 = 10 * v22;
            if ((unsigned __int128)(v22 * (__int128)10) >> 64 != (10 * v22) >> 63) {
              goto LABEL_32;
            }
            uint64_t v22 = v49 - v48;
            if (__OFSUB__(v49, v48)) {
              goto LABEL_32;
            }
            LOBYTE(v15) = 0;
            ++v47;
            if (!--v46) {
              goto LABEL_35;
            }
          }
        }
LABEL_34:
        LOBYTE(v15) = 0;
        goto LABEL_35;
      }
      if (v18 && (v15 - 48) <= 9u)
      {
        uint64_t v22 = (v15 - 48);
        if (v18 == 1) {
          goto LABEL_34;
        }
        if ((BYTE1(v15) - 48) <= 9u)
        {
          uint64_t v22 = 10 * (v15 - 48) + (BYTE1(v15) - 48);
          uint64_t v42 = v18 - 2;
          if (v42)
          {
            uint64_t v43 = (unsigned __int8 *)&v56 + 2;
            while (1)
            {
              unsigned int v44 = *v43 - 48;
              if (v44 > 9) {
                goto LABEL_32;
              }
              uint64_t v45 = 10 * v22;
              if ((unsigned __int128)(v22 * (__int128)10) >> 64 != (10 * v22) >> 63) {
                goto LABEL_32;
              }
              uint64_t v22 = v45 + v44;
              if (__OFADD__(v45, v44)) {
                goto LABEL_32;
              }
              LOBYTE(v15) = 0;
              ++v43;
              if (!--v42) {
                goto LABEL_35;
              }
            }
          }
          goto LABEL_34;
        }
      }
    }
LABEL_32:
    uint64_t v22 = 0;
    LOBYTE(v15) = 1;
    goto LABEL_35;
  }
  if ((v15 & 0x1000000000000000) != 0) {
    uint64_t v21 = (unsigned __int8 *)((v16 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else {
    uint64_t v21 = (unsigned __int8 *)sub_1D5AB5870();
  }
  uint64_t v22 = (uint64_t)sub_1D5A741E8(v21, v19, 10);
  LOBYTE(v15) = v23 & 1;
LABEL_35:
  if ((v15 & 1) == 0)
  {
    unint64_t v28 = v13[2];
    if (v28 < 3)
    {
      uint64_t v54 = v12;
      if (v28 == 2)
      {
        if (v14 > 2) {
          goto LABEL_76;
        }
        *(void *)&long long v56 = v13;
        *((void *)&v56 + 1) = v13 + 4;
        uint64_t v57 = 1;
        uint64_t v58 = (2 * v14) | 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726A30);
        sub_1D596DF9C(&qword_1EA726A38, &qword_1EA726A30);
        sub_1D5AB4DB0();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      sub_1D5AB24E0();
      uint64_t v12 = v54;
      sub_1D5AB2260();
      goto LABEL_52;
    }
    uint64_t v52 = v22;
    uint64_t v53 = a3;
    if (v14 >= 2) {
      uint64_t v29 = v14 - 2;
    }
    else {
      uint64_t v29 = 0;
    }
    if (v28 < v29)
    {
      __break(1u);
    }
    else
    {
      unint64_t v30 = v28 - 2;
      if (v29 >= 1) {
        uint64_t v31 = 1;
      }
      else {
        uint64_t v31 = v29;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE47C8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1D5AB90F0;
      long long v33 = &v17[2 * v28];
      uint64_t v34 = *(v33 - 1);
      *(void *)(inited + 32) = *(v33 - 2);
      *(void *)(inited + 40) = v34;
      *(void *)&long long v56 = v13;
      *((void *)&v56 + 1) = v13 + 4;
      uint64_t v57 = v31;
      uint64_t v58 = (2 * v29) | 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D5A0D114(inited);
      long long v51 = v56;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726A30);
      sub_1D596DF9C(&qword_1EA726A38, &qword_1EA726A30);
      sub_1D5AB4DB0();
      if (v30 < v13[2])
      {
        unint64_t v35 = &v17[2 * v30];
        uint64_t v36 = *v35;
        unint64_t v37 = v35[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v38 = sub_1D5A73E88(v36, v37);
        sub_1D59E3048(v38, v39 & 1);
        sub_1D5AB2260();
        swift_unknownObjectRelease();
        a3 = v53;
LABEL_52:
        sub_1D59E40EC((uint64_t)v12, a3);
        uint64_t v40 = 0;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a3, v40, 1, v9);
      }
    }
    __break(1u);
    goto LABEL_74;
  }
LABEL_46:
  swift_bridgeObjectRelease();
  uint64_t v40 = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a3, v40, 1, v9);
}

uint64_t BuildVersion.rawValue.getter()
{
  uint64_t v1 = sub_1D5AB2540();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v27 - v6;
  uint64_t v31 = *v0;
  uint64_t v8 = sub_1D5AB5AB0();
  unint64_t v10 = v9;
  unint64_t v11 = v0[2];
  uint64_t v12 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0) {
    uint64_t v12 = v0[1] & 0xFFFFFFFFFFFFLL;
  }
  if (v12)
  {
    uint64_t v31 = 46;
    unint64_t v32 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_1D5AB4E90();
    swift_bridgeObjectRelease();
  }
  uint64_t v31 = v8;
  unint64_t v32 = v10;
  swift_bridgeObjectRetain();
  sub_1D5AB4E90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v29 = 46;
  unint64_t v30 = 0xE100000000000000;
  sub_1D59AA0A4();
  uint64_t v13 = sub_1D5AB56A0();
  swift_bridgeObjectRelease();
  uint64_t v31 = v13;
  uint64_t v14 = sub_1D5AB2270();
  uint64_t v15 = *(void (**)(char *))(v2 + 16);
  unint64_t v28 = (char *)v0 + *(int *)(v14 + 24);
  v15(v7);
  swift_bridgeObjectRetain();
  sub_1D5AB24E0();
  sub_1D59E3360();
  char v16 = sub_1D5AB4DD0();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v2 + 8);
  v17(v5, v1);
  v17(v7, v1);
  if ((v16 & 1) != 0
    || (((void (*)(char *, char *, uint64_t))v15)(v7, v28, v1),
        sub_1D5AB2520(),
        char v18 = sub_1D5AB4DD0(),
        v17(v5, v1),
        v17(v7, v1),
        (v18 & 1) != 0)
    || (uint64_t v19 = sub_1D59E30A4(), (v20 & 1) != 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v29 = v19;
  uint64_t v21 = sub_1D5AB5AB0();
  uint64_t v23 = v22;
  uint64_t v24 = *(void *)(v13 + 16);
  swift_bridgeObjectRelease();
  uint64_t result = v24 - 1;
  if (*(void *)(v31 + 16) < v24 - 1)
  {
    __break(1u);
  }
  else if (v24)
  {
    sub_1D5A0CD14(result, result, v21, v23);
LABEL_12:
    uint64_t v29 = v31;
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE4C28);
    sub_1D596DF9C((unint64_t *)&qword_1EBDE33D0, qword_1EBDE4C28);
    uint64_t v26 = sub_1D5AB4DB0();
    swift_bridgeObjectRelease();
    return v26;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D5A0CCE0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return BuildVersion.init(rawValue:)(*a1, a1[1], a2);
}

uint64_t sub_1D5A0CCEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = BuildVersion.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

char *sub_1D5A0CD14(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = *(void **)v4;
  int64_t v7 = *(void *)(*(void *)v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11) {
      int64_t v15 = v7 + v10;
    }
    else {
      int64_t v15 = v7;
    }
    uint64_t v6 = sub_1D5A761E8(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  char v16 = &v6[2 * a1 + 4];
  uint64_t result = (char *)swift_arrayDestroy();
  if (!v10) {
    goto LABEL_20;
  }
  uint64_t v18 = v6[2];
  BOOL v19 = __OFSUB__(v18, a2);
  uint64_t v20 = v18 - a2;
  if (v19) {
    goto LABEL_26;
  }
  if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t result = (char *)(v16 + 2);
    uint64_t v21 = &v6[2 * a2 + 4];
    if (v16 + 2 != v21 || result >= (char *)&v21[2 * v20]) {
      uint64_t result = (char *)memmove(result, v21, 16 * v20);
    }
    uint64_t v22 = v6[2];
    BOOL v19 = __OFADD__(v22, v10);
    uint64_t v23 = v22 + v10;
    if (!v19)
    {
      _OWORD v6[2] = v23;
LABEL_20:
      *char v16 = a3;
      v16[1] = a4;
      *(void *)uint64_t v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = (char *)sub_1D5AB59C0();
  __break(1u);
  return result;
}

uint64_t sub_1D5A0CE98(uint64_t result)
{
  uint64_t v2 = result;
  unint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void **)v1;
  int64_t v5 = v3 >> 1;
  if ((v3 & 1) == 0 || (result = swift_isUniquelyReferenced_nonNull(), *(void *)uint64_t v1 = v4, (result & 1) == 0))
  {
    uint64_t v9 = v4;
    goto LABEL_9;
  }
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v8 = *(void *)(v1 + 8);
  sub_1D5AB5B10();
  swift_unknownObjectRetain();
  uint64_t result = swift_dynamicCastClass();
  if (!result)
  {
    swift_unknownObjectRelease();
    uint64_t result = MEMORY[0x1E4FBC860];
  }
  uint64_t v9 = *(void **)(result + 16);
  if (v8 + 16 * v6 + 16 * v7 == result + 16 * (void)v9 + 32) {
    goto LABEL_31;
  }
  uint64_t result = swift_release();
  while (1)
  {
    if (v7 >= v2) {
      goto LABEL_28;
    }
    uint64_t v9 = *(void **)v1;
LABEL_9:
    uint64_t v10 = *(void *)(v1 + 16);
    uint64_t v7 = v5 - v10;
    if (__OFSUB__(v5, v10))
    {
      __break(1u);
      goto LABEL_35;
    }
    uint64_t v11 = *(void *)(v1 + 8);
    if (v7 <= v2 ? v2 : v5 - v10) {
      break;
    }
    uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
    if (v5 >= v10) {
      goto LABEL_17;
    }
LABEL_30:
    __break(1u);
LABEL_31:
    unint64_t v19 = *(void *)(result + 24);
    uint64_t result = swift_release();
    unint64_t v20 = (v19 >> 1) - (void)v9;
    BOOL v21 = __OFADD__(v7, v20);
    v7 += v20;
    if (v21) {
      goto LABEL_40;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE47C8);
  uint64_t v4 = (void *)swift_allocObject();
  uint64_t result = _swift_stdlib_malloc_size(v4);
  uint64_t v13 = result - 32;
  if (result < 32) {
    uint64_t v13 = result - 17;
  }
  v4[2] = v7;
  v4[3] = 2 * (v13 >> 4);
  if (v5 < v10) {
    goto LABEL_30;
  }
LABEL_17:
  if ((v7 & 0x8000000000000000) == 0)
  {
    unint64_t v14 = (unint64_t)(v4 + 4);
    unint64_t v15 = v11 + 16 * v10;
    if (v15 >= (unint64_t)&v4[2 * v7 + 4] || v14 >= v15 + 16 * v7)
    {
      swift_arrayInitWithCopy();
      if (!__OFSUB__(0, v10))
      {
        uint64_t v17 = v4[2];
        uint64_t v18 = v10 + v17;
        if (!__OFADD__(v10, v17))
        {
          if (v18 >= v10)
          {
            uint64_t result = swift_unknownObjectRelease();
            if ((v18 & 0x8000000000000000) == 0)
            {
              *(void *)(v1 + 8) = v14 - 16 * v10;
              *(void *)(v1 + 16) = v10;
              *(void *)(v1 + 24) = (2 * v18) | 1;
LABEL_28:
              *(void *)uint64_t v1 = v4;
              return result;
            }
            goto LABEL_38;
          }
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
  }
LABEL_41:
  uint64_t result = sub_1D5AB59C0();
  __break(1u);
  return result;
}

uint64_t sub_1D5A0D114(uint64_t a1)
{
  uint64_t v3 = v1[2];
  unint64_t v2 = v1[3];
  uint64_t v4 = (v2 >> 1) - v3;
  if (__OFSUB__(v2 >> 1, v3))
  {
    __break(1u);
    goto LABEL_40;
  }
  uint64_t v6 = *(void *)(a1 + 16);
  if ((v2 & 1) == 0) {
    goto LABEL_7;
  }
  uint64_t v7 = v1[1];
  sub_1D5AB5B10();
  swift_unknownObjectRetain();
  uint64_t v8 = swift_dynamicCastClass();
  if (!v8)
  {
    swift_unknownObjectRelease();
    uint64_t v8 = MEMORY[0x1E4FBC860];
  }
  uint64_t v9 = *(void *)(v8 + 16);
  if (v7 + 16 * v3 + 16 * v4 != v8 + 16 * v9 + 32)
  {
    swift_release();
LABEL_7:
    uint64_t v10 = v4;
    goto LABEL_9;
  }
  unint64_t v11 = *(void *)(v8 + 24);
  swift_release();
  uint64_t v12 = (v11 >> 1) - v9;
  BOOL v13 = __OFADD__(v4, v12);
  uint64_t v10 = v4 + v12;
  if (v13)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
LABEL_9:
  uint64_t v14 = v4 + v6;
  if (__OFADD__(v4, v6))
  {
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v10 < v14)
  {
    if (v10 + 0x4000000000000000 < 0)
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    uint64_t v15 = 2 * v10;
    if (v15 > v14) {
      uint64_t v14 = v15;
    }
  }
  sub_1D5A0CE98(v14);
  uint64_t v17 = v1[2];
  unint64_t v16 = v1[3];
  uint64_t v18 = (v16 >> 1) - v17;
  if (__OFSUB__(v16 >> 1, v17)) {
    goto LABEL_41;
  }
  unint64_t v19 = v1[1] + 16 * v17 + 16 * v18;
  if ((v16 & 1) == 0)
  {
LABEL_20:
    uint64_t v22 = v18;
    goto LABEL_22;
  }
  sub_1D5AB5B10();
  swift_unknownObjectRetain();
  uint64_t v20 = swift_dynamicCastClass();
  if (!v20)
  {
    swift_unknownObjectRelease();
    uint64_t v20 = MEMORY[0x1E4FBC860];
  }
  uint64_t v21 = *(void *)(v20 + 16);
  if (v19 != v20 + 16 * v21 + 32)
  {
    swift_release();
    goto LABEL_20;
  }
  unint64_t v23 = *(void *)(v20 + 24);
  swift_release();
  uint64_t v24 = (v23 >> 1) - v21;
  BOOL v13 = __OFADD__(v18, v24);
  uint64_t v22 = v18 + v24;
  if (v13)
  {
LABEL_48:
    __break(1u);
LABEL_49:
    uint64_t result = sub_1D5AB59C0();
    __break(1u);
    return result;
  }
LABEL_22:
  uint64_t v25 = v22 - v18;
  if (__OFSUB__(v22, v18))
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  unint64_t v26 = *(void *)(a1 + 16);
  if (v26)
  {
    if (v25 >= v6)
    {
      if (a1 + 32 < v19 + 16 * v6 && v19 < a1 + 32 + 16 * v6) {
        goto LABEL_49;
      }
      swift_arrayInitWithCopy();
      if (v6 <= 0) {
        goto LABEL_32;
      }
      if (!__OFADD__(v18, v6))
      {
        sub_1D5A0D6C8(v18 + v6);
        goto LABEL_32;
      }
      goto LABEL_46;
    }
    goto LABEL_44;
  }
  if (v6 > 0)
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v6 = 0;
LABEL_32:
  if (v6 == v25)
  {
    return sub_1D5A0D780(a1, v26);
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1D5A0D3C4(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v5 = v4[2];
  uint64_t v6 = v4[3] >> 1;
  uint64_t v7 = v6 - v5;
  if (__OFSUB__(v6, v5))
  {
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v9 = *a1;
  uint64_t v10 = *(void *)(*a1 + 16);
  BOOL v11 = __OFSUB__(v10, a2);
  uint64_t v12 = v10 - a2;
  if (v11)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v14 = v12 - a3;
  if (__OFSUB__(v12, a3))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v15 = v7 - a2;
  if (__OFSUB__(v7, a2))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v32 = v15 - v14;
  if (__OFSUB__(v15, v14))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  __dst = (char *)(v9 + 32);
  uint64_t v16 = v9 + 32 + 16 * a2;
  uint64_t v17 = sub_1D5A0DCF0(v7);
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v29 = (char *)(v16 + 16 * a3);
    uint64_t v30 = v9;
    uint64_t v19 = v4[2];
    uint64_t v20 = (char *)(v4[1] + 16 * v19);
    swift_arrayDestroy();
    if (a2 < 0) {
      goto LABEL_43;
    }
    uint64_t v21 = &v20[16 * a2];
    if (__dst != v20 || __dst >= v21) {
      memmove(__dst, v20, 16 * a2);
    }
    swift_arrayDestroy();
    a4(v16, a3);
    if (v14 < 0) {
      goto LABEL_43;
    }
    uint64_t v22 = &v21[16 * v32];
    if (v29 != v22 || v29 >= &v22[16 * v14]) {
      memmove(v29, v22, 16 * v14);
    }
    swift_arrayDestroy();
    *(void *)(v18 + 16) = 0;
    swift_release();
    uint64_t v9 = v30;
LABEL_23:
    swift_retain();
    uint64_t result = swift_unknownObjectRelease();
    if (!__OFSUB__(0, v19))
    {
      uint64_t v27 = *(void *)(v9 + 16);
      BOOL v11 = __OFADD__(v19, v27);
      uint64_t v28 = v19 + v27;
      if (!v11)
      {
        if (v28 >= v19)
        {
          if ((v28 & 0x8000000000000000) == 0)
          {
            *uint64_t v4 = v9;
            v4[1] = &__dst[-16 * v19];
            v4[2] = v19;
            v4[3] = (2 * v28) | 1;
            return result;
          }
          goto LABEL_36;
        }
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v19 = v4[2];
  uint64_t v23 = v19 + a2;
  if (__OFADD__(v19, a2))
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if (v23 < v19)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if (__OFSUB__(v23, v19))
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  swift_arrayInitWithCopy();
  a4((uint64_t)&__dst[16 * a2], a3);
  uint64_t v24 = v23 + v32;
  if (__OFADD__(v23, v32))
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v25 = v4[3] >> 1;
  if (v25 < v24)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (!__OFSUB__(v25, v24))
  {
    swift_arrayInitWithCopy();
    goto LABEL_23;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  uint64_t result = sub_1D5AB59C0();
  __break(1u);
  return result;
}

uint64_t sub_1D5A0D6C8(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 + 16);
  unint64_t v3 = *(void *)(v1 + 24);
  unint64_t v4 = v3 >> 1;
  BOOL v5 = __OFSUB__(v3 >> 1, v2);
  uint64_t v6 = (v3 >> 1) - v2;
  if (v5)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v7 = result - v6;
  if (__OFSUB__(result, v6))
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!v7) {
    return result;
  }
  sub_1D5AB5B10();
  swift_unknownObjectRetain();
  uint64_t result = swift_dynamicCastClass();
  if (!result)
  {
    swift_unknownObjectRelease();
    uint64_t result = MEMORY[0x1E4FBC860];
  }
  uint64_t v8 = *(void *)(result + 16);
  BOOL v5 = __OFADD__(v8, v7);
  uint64_t v9 = v8 + v7;
  if (v5) {
    goto LABEL_13;
  }
  *(void *)(result + 16) = v9;
  uint64_t result = swift_release();
  uint64_t v10 = v4 + v7;
  if (__OFADD__(v4, v7))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v10 < 0)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  *(void *)(v1 + 24) = v3 & 1 | (2 * v10);
  return result;
}

uint64_t sub_1D5A0D780(uint64_t result, unint64_t a2)
{
  uint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  uint64_t v5 = (v3 >> 1) - v4;
  if (__OFSUB__(v3 >> 1, v4)) {
    goto LABEL_50;
  }
  unint64_t v6 = *(void *)(result + 16);
  if (v6 == a2)
  {
LABEL_39:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  if (v6 <= a2) {
    goto LABEL_51;
  }
  uint64_t v7 = result + 16 * a2;
  uint64_t v37 = result;
  unint64_t v38 = a2 + 1;
  uint64_t v8 = *(void *)(v7 + 32);
  unint64_t v9 = *(void *)(result + 16);
  uint64_t v10 = *(void *)(v7 + 40);
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v33 = v9;
  unint64_t v32 = 1 - v9;
  while (1)
  {
    uint64_t v11 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    uint64_t v39 = sub_1D5A0DAD0(v5, v5 + 1, *v2, v2[1], v4, v3);
    uint64_t v12 = sub_1D5A0DCD4();
    uint64_t v36 = v5;
    sub_1D5A0D3C4(&v39, v5, 0, (void (*)(uint64_t, uint64_t))v12);
    swift_release();
    uint64_t result = swift_release();
    uint64_t v4 = v2[2];
    unint64_t v3 = v2[3];
    unint64_t v13 = (v3 >> 1) - v4;
    if (__OFSUB__(v3 >> 1, v4)) {
      goto LABEL_44;
    }
    uint64_t v14 = v2[1];
    unint64_t v35 = v3 >> 1;
    if ((v3 & 1) == 0) {
      goto LABEL_14;
    }
    sub_1D5AB5B10();
    swift_unknownObjectRetain();
    uint64_t v15 = swift_dynamicCastClass();
    if (!v15)
    {
      swift_unknownObjectRelease();
      uint64_t v15 = MEMORY[0x1E4FBC860];
    }
    uint64_t v16 = *(void *)(v15 + 16);
    if (v14 + 16 * v4 + 16 * v13 != v15 + 16 * v16 + 32)
    {
      uint64_t result = swift_release();
LABEL_14:
      uint64_t v17 = (v3 >> 1) - v4;
      goto LABEL_16;
    }
    unint64_t v18 = *(void *)(v15 + 24);
    uint64_t result = swift_release();
    uint64_t v19 = (v18 >> 1) - v16;
    uint64_t v17 = v13 + v19;
    if (__OFADD__(v13, v19)) {
      goto LABEL_48;
    }
LABEL_16:
    uint64_t v5 = v36;
    if (v36 >= v17) {
      goto LABEL_19;
    }
    uint64_t v20 = (void *)(v14 + 16 * v4 + 16 * v36);
    *uint64_t v20 = v8;
    v20[1] = v10;
    if (v38 == v33)
    {
      uint64_t v8 = 0;
      uint64_t v10 = 0;
      uint64_t v5 = v11;
      unint64_t v38 = v33;
LABEL_19:
      unint64_t v21 = v5 - v13;
      if (__OFSUB__(v5, v13)) {
        goto LABEL_38;
      }
      goto LABEL_20;
    }
    if ((v38 & 0x8000000000000000) != 0) {
      goto LABEL_49;
    }
    uint64_t v34 = v4;
    if (v38 >= *(void *)(v37 + 16))
    {
LABEL_42:
      __break(1u);
      break;
    }
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    uint64_t v28 = v37 + 16 * v38;
    uint64_t v29 = v14 + 16 * v36 + 16 * v34;
    while (1)
    {
      uint64_t v8 = *(void *)(v28 + v26 + 32);
      uint64_t v30 = *(void *)(v28 + v26 + 40);
      if (!(v36 - v17 + 1 + v27))
      {
        v38 += v27 + 1;
        uint64_t v10 = *(void *)(v28 + v26 + 40);
        goto LABEL_36;
      }
      uint64_t v31 = v29 + v26;
      *(void *)(v31 + 16) = v8;
      *(void *)(v31 + 24) = v30;
      if (!(v32 + v38 + v27)) {
        break;
      }
      uint64_t result = swift_bridgeObjectRetain();
      ++v27;
      v26 += 16;
      if (v38 + v27 >= *(void *)(v37 + 16)) {
        goto LABEL_42;
      }
    }
    uint64_t v8 = 0;
    uint64_t v10 = 0;
    uint64_t v17 = v36 + v27 + 2;
    unint64_t v38 = v33;
LABEL_36:
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v5 = v17;
    uint64_t v4 = v34;
    unint64_t v21 = v17 - v13;
    if (__OFSUB__(v17, v13))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
LABEL_20:
    if (v21)
    {
      sub_1D5AB5B10();
      swift_unknownObjectRetain();
      uint64_t result = swift_dynamicCastClass();
      if (!result)
      {
        swift_unknownObjectRelease();
        uint64_t result = MEMORY[0x1E4FBC860];
      }
      uint64_t v22 = *(void *)(result + 16);
      BOOL v23 = __OFADD__(v22, v21);
      uint64_t v24 = v22 + v21;
      if (v23) {
        goto LABEL_45;
      }
      *(void *)(result + 16) = v24;
      uint64_t result = swift_release();
      unint64_t v25 = v35 + v21;
      if (__OFADD__(v35, v21)) {
        goto LABEL_46;
      }
      if ((v25 & 0x8000000000000000) != 0) {
        goto LABEL_47;
      }
      unint64_t v3 = v3 & 1 | (2 * v25);
      v2[3] = v3;
    }
    if (!v10) {
      goto LABEL_39;
    }
  }
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
  return result;
}

uint64_t sub_1D5A0DAD0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8 = (a6 >> 1) - a5;
  if (__OFSUB__(a6 >> 1, a5))
  {
    __break(1u);
LABEL_34:
    if (v8 >= v7) {
      goto LABEL_21;
    }
LABEL_18:
    if (v8 + 0x4000000000000000 >= 0)
    {
      v8 *= 2;
      goto LABEL_21;
    }
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v7 = a2;
  uint64_t v6 = result;
  if ((a6 & 1) == 0) {
    goto LABEL_34;
  }
  sub_1D5AB5B10();
  swift_unknownObjectRetain();
  uint64_t v11 = swift_dynamicCastClass();
  if (!v11)
  {
    swift_unknownObjectRelease();
    uint64_t v11 = MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = *(void *)(v11 + 16);
  uint64_t v13 = a4 + 16 * a5 + 16 * v8;
  if (v13 == v11 + 16 * v12 + 32)
  {
    unint64_t v15 = *(void *)(v11 + 24);
    uint64_t result = swift_release();
    uint64_t v16 = (v15 >> 1) - v12;
    uint64_t v14 = v8 + v16;
    if (__OFADD__(v8, v16))
    {
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
  }
  else
  {
    swift_release();
    uint64_t v14 = v8;
  }
  swift_unknownObjectRetain();
  uint64_t v17 = swift_dynamicCastClass();
  if (v14 < v7)
  {
    if (!v17)
    {
      swift_unknownObjectRelease();
      uint64_t v17 = MEMORY[0x1E4FBC860];
    }
    uint64_t v18 = *(void *)(v17 + 16);
    if (v13 == v17 + 16 * v18 + 32)
    {
      unint64_t v20 = *(void *)(v17 + 24);
      uint64_t result = swift_release();
      uint64_t v21 = (v20 >> 1) - v18;
      BOOL v22 = __OFADD__(v8, v21);
      v8 += v21;
      if (v22)
      {
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
    }
    else
    {
      uint64_t result = swift_release();
    }
    goto LABEL_18;
  }
  if (!v17)
  {
    swift_unknownObjectRelease();
    uint64_t v17 = MEMORY[0x1E4FBC860];
  }
  uint64_t v19 = *(void *)(v17 + 16);
  if (v13 == v17 + 16 * v19 + 32)
  {
    unint64_t v23 = *(void *)(v17 + 24);
    uint64_t result = swift_release();
    uint64_t v24 = (v23 >> 1) - v19;
    BOOL v22 = __OFADD__(v8, v24);
    v8 += v24;
    if (!v22) {
      goto LABEL_21;
    }
LABEL_39:
    __break(1u);
    return result;
  }
  swift_release();
LABEL_21:
  if (v8 <= v7) {
    uint64_t v25 = v7;
  }
  else {
    uint64_t v25 = v8;
  }
  if (v25 <= v6) {
    uint64_t v26 = v6;
  }
  else {
    uint64_t v26 = v25;
  }
  if (!v26) {
    return MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE47C8);
  uint64_t v27 = (void *)swift_allocObject();
  int64_t v28 = _swift_stdlib_malloc_size(v27);
  uint64_t v29 = v28 - 32;
  if (v28 < 32) {
    uint64_t v29 = v28 - 17;
  }
  v27[2] = v6;
  v27[3] = 2 * (v29 >> 4);
  return (uint64_t)v27;
}

uint64_t (*sub_1D5A0DCD4())()
{
  return nullsub_1;
}

uint64_t sub_1D5A0DCF0(uint64_t a1)
{
  uint64_t isUniquelyReferenced_nonNull = swift_isUniquelyReferenced_nonNull();
  if (!isUniquelyReferenced_nonNull) {
    return 0;
  }
  uint64_t v6 = v1[2];
  unint64_t v5 = v1[3];
  uint64_t v7 = (v5 >> 1) - v6;
  if (__OFSUB__(v5 >> 1, v6))
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v8 = v1[1];
  if ((v5 & 1) == 0) {
    goto LABEL_8;
  }
  sub_1D5AB5B10();
  swift_unknownObjectRetain();
  uint64_t v9 = swift_dynamicCastClass();
  if (!v9)
  {
    swift_unknownObjectRelease();
    uint64_t v9 = MEMORY[0x1E4FBC860];
  }
  uint64_t v10 = *(void *)(v9 + 16);
  if (v8 + 16 * v6 + 16 * v7 != v9 + 16 * v10 + 32)
  {
    swift_release();
LABEL_8:
    uint64_t v11 = v7;
    goto LABEL_10;
  }
  unint64_t v12 = *(void *)(v9 + 24);
  uint64_t result = swift_release();
  uint64_t v14 = (v12 >> 1) - v10;
  BOOL v15 = __OFADD__(v7, v14);
  uint64_t v11 = v7 + v14;
  if (!v15)
  {
LABEL_10:
    if (v11 < a1) {
      return 0;
    }
    sub_1D5AB5B10();
    swift_unknownObjectRetain();
    a1 = swift_dynamicCastClass();
    if (!a1)
    {
      swift_unknownObjectRelease();
      a1 = MEMORY[0x1E4FBC860];
    }
    uint64_t v16 = v8 + 16 * v6 - a1;
    uint64_t v17 = v16 - 32;
    uint64_t v18 = v16 - 17;
    if (v17 >= 0) {
      uint64_t v18 = v17;
    }
    uint64_t isUniquelyReferenced_nonNull = v7 + (v18 >> 4);
    if (!__OFADD__(v7, v18 >> 4))
    {
      uint64_t v4 = *(void *)(a1 + 16);
      if (isUniquelyReferenced_nonNull >= v4) {
        return a1;
      }
LABEL_21:
      sub_1D5A0DE60(isUniquelyReferenced_nonNull, v4, 0);
      return a1;
    }
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

char *sub_1D5A0DE60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v7 = *v3;
  uint64_t v8 = v7 + 32 + 16 * a1;
  uint64_t result = (char *)swift_arrayDestroy();
  BOOL v10 = __OFSUB__(a3, v4);
  uint64_t v11 = a3 - v4;
  if (v10)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!v11) {
    goto LABEL_14;
  }
  uint64_t v12 = *(void *)(v7 + 16);
  BOOL v10 = __OFSUB__(v12, a2);
  uint64_t v13 = v12 - a2;
  if (v10) {
    goto LABEL_18;
  }
  if (v13 < 0)
  {
LABEL_21:
    uint64_t result = (char *)sub_1D5AB59C0();
    __break(1u);
    return result;
  }
  uint64_t result = (char *)(v8 + 16 * a3);
  uint64_t v14 = (char *)(v7 + 32 + 16 * a2);
  if (result != v14 || result >= &v14[16 * v13]) {
    uint64_t result = (char *)memmove(result, v14, 16 * v13);
  }
  uint64_t v16 = *(void *)(v7 + 16);
  BOOL v10 = __OFADD__(v16, v11);
  uint64_t v17 = v16 + v11;
  if (v10) {
    goto LABEL_19;
  }
  *(void *)(v7 + 16) = v17;
LABEL_14:
  if (a3 > 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  return result;
}

uint64_t CatalogTipJournalsUpdated.tipIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CatalogTipJournalsUpdated.init(tipIdentifiers:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static CatalogTipJournalsUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for CatalogTipJournalsUpdated()
{
  return &type metadata for CatalogTipJournalsUpdated;
}

uint64_t sub_1D5A0DFA4()
{
  qword_1EBDE3CE0 = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "_os_activity_current");
  return swift_unknownObjectRetain();
}

uint64_t sub_1D5A0DFE0(char *description, uint64_t a2, char a3, void *dso)
{
  if ((a3 & 1) == 0)
  {
    *(void *)(v4 + 16) = description;
    *(void *)(v4 + 24) = a2;
    *(unsigned char *)(v4 + 32) = a3;
    if (description)
    {
      unint64_t v5 = dso;
      if (qword_1EBDE3CF0 == -1)
      {
LABEL_4:
        os_activity_t v7 = _os_activity_create(v5, description, (os_activity_t)qword_1EBDE3CE0, OS_ACTIVITY_FLAG_DEFAULT);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE3DA0);
        uint64_t v8 = swift_allocObject();
        *(_DWORD *)(v8 + 44) = 0;
        *(void *)(v8 + 24) = 0;
        *(void *)(v8 + 32) = 0;
        *(void *)(v8 + 16) = v7;
        *(unsigned char *)(v8 + 40) = 0;
        *(void *)(v4 + 40) = v8;
        return v4;
      }
    }
    else
    {
      __break(1u);
    }
    swift_once();
    goto LABEL_4;
  }
  sub_1D5AB57F0();
  sub_1D5AB5810();
  swift_bridgeObjectRelease();
  sub_1D5AB4E90();
  uint64_t result = sub_1D5AB5920();
  __break(1u);
  return result;
}

uint64_t sub_1D5A0E140()
{
  uint64_t v1 = *(void *)(v0 + 40);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 44));
  sub_1D5A0E484((uint64_t *)(v1 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 44));
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ActivityTrace()
{
  return self;
}

uint64_t destroy for ActivityTrace.State(uint64_t a1)
{
  return j__swift_unknownObjectRelease(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24));
}

uint64_t initializeWithCopy for ActivityTrace.State(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = *((unsigned __int8 *)a2 + 24);
  j__swift_unknownObjectRetain(*a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t *assignWithCopy for ActivityTrace.State(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = *((unsigned __int8 *)a2 + 24);
  j__swift_unknownObjectRetain(*a2, v4, v5, v6);
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v9 = a1[2];
  uint64_t v10 = *((unsigned __int8 *)a1 + 24);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  *((unsigned char *)a1 + 24) = v6;
  j__swift_unknownObjectRelease(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t *assignWithTake for ActivityTrace.State(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v8 = *((unsigned __int8 *)a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  *((unsigned char *)a1 + 24) = v4;
  j__swift_unknownObjectRelease(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityTrace.State(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityTrace.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1D5A0E3CC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_1D5A0E3D4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityTrace.State()
{
  return &type metadata for ActivityTrace.State;
}

double sub_1D5A0E3F0(uint64_t a1)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  if ((*(unsigned char *)(a1 + 24) & 1) == 0)
  {
    uint64_t v2 = *(NSObject **)a1;
    os_activity_scope_state_s v4 = (os_activity_scope_state_s)0;
    os_activity_scope_enter(v2, &v4);
    *(void *)a1 = v2;
    double result = *(double *)v4.opaque;
    *(os_activity_scope_state_s *)(a1 + 8) = v4;
    *(unsigned char *)(a1 + 24) = 1;
  }
  return result;
}

void sub_1D5A0E484(uint64_t *a1)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  if (*((unsigned char *)a1 + 24) == 1)
  {
    uint64_t v2 = *a1;
    os_activity_scope_state_s v3 = *(os_activity_scope_state_s *)(a1 + 1);
    os_activity_scope_leave(&v3);
    a1[1] = 0;
    a1[2] = 0;
    *a1 = v2;
    *((unsigned char *)a1 + 24) = 0;
  }
}

void *static FitnessMode.allCases.getter()
{
  return &unk_1F2DEC2A8;
}

uint64_t FitnessMode.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x6157646572696170;
  }
  if (a1 == 1) {
    return 0x73656C6863746177;
  }
  return 0x615765746F6D6572;
}

uint64_t sub_1D5A0E584(unsigned char *a1, unsigned char *a2)
{
  int v2 = *a1;
  uint64_t v3 = 0x73656C6863746177;
  unint64_t v4 = 0xE900000000000073;
  if (v2 != 1)
  {
    uint64_t v3 = 0x615765746F6D6572;
    unint64_t v4 = 0xEB00000000686374;
  }
  if (*a1) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = 0x6157646572696170;
  }
  if (v2) {
    unint64_t v6 = v4;
  }
  else {
    unint64_t v6 = 0xEB00000000686374;
  }
  uint64_t v7 = 0x73656C6863746177;
  unint64_t v8 = 0xE900000000000073;
  if (*a2 != 1)
  {
    uint64_t v7 = 0x615765746F6D6572;
    unint64_t v8 = 0xEB00000000686374;
  }
  if (*a2) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = 0x6157646572696170;
  }
  if (*a2) {
    unint64_t v10 = v8;
  }
  else {
    unint64_t v10 = 0xEB00000000686374;
  }
  if (v5 == v9 && v6 == v10) {
    char v11 = 1;
  }
  else {
    char v11 = sub_1D5AB5AF0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_1D5A0E690()
{
  return sub_1D5AB5C60();
}

uint64_t sub_1D5A0E73C()
{
  sub_1D5AB4E60();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5A0E7D4()
{
  return sub_1D5AB5C60();
}

uint64_t sub_1D5A0E87C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s13SeymourClient11FitnessModeO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_1D5A0E8AC(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEB00000000686374;
  int v3 = *v1;
  unint64_t v4 = 0xE900000000000073;
  uint64_t v5 = 0x73656C6863746177;
  if (v3 != 1)
  {
    uint64_t v5 = 0x615765746F6D6572;
    unint64_t v4 = 0xEB00000000686374;
  }
  BOOL v6 = v3 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6157646572696170;
  }
  if (!v6) {
    unint64_t v2 = v4;
  }
  *a1 = v7;
  a1[1] = v2;
}

void sub_1D5A0E914(void *a1@<X8>)
{
  *a1 = &unk_1F2DEC2D0;
}

uint64_t _s13SeymourClient11FitnessModeO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_1D5AB5A40();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

unint64_t sub_1D5A0E974()
{
  unint64_t result = qword_1EA726A40;
  if (!qword_1EA726A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726A40);
  }
  return result;
}

unint64_t sub_1D5A0E9CC()
{
  unint64_t result = qword_1EA726A48;
  if (!qword_1EA726A48)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA726A50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726A48);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FitnessMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D5A0EAF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FitnessMode()
{
  return &type metadata for FitnessMode;
}

uint64_t dispatch thunk of AnalyticsErrorProtocol.errorCode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AnalyticsErrorProtocol.errorDomain.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t MediaPlayerSyncCatchupRequested.init(activity:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB3100();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

uint64_t MediaPlayerSyncCatchupRequested.activity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB3100();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

void static MediaPlayerSyncCatchupRequested.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t getEnumTagSinglePayload for MediaPlayerSyncCatchupRequested(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D5A0EC4C);
}

uint64_t sub_1D5A0EC4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3100();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MediaPlayerSyncCatchupRequested(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D5A0ECCC);
}

uint64_t sub_1D5A0ECCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3100();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MediaPlayerSyncCatchupRequested()
{
  uint64_t result = qword_1EBDE3690;
  if (!qword_1EBDE3690) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t NullRemoteBrowsingSource.queryActiveParticipant()@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A0EDC4(MEMORY[0x1E4F9D178], a1);
}

uint64_t NullRemoteBrowsingSource.queryActiveEnvironment()@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A0EDC4(MEMORY[0x1E4F9E3B8], a1);
}

uint64_t sub_1D5A0EDC4@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1(0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
  return v4(a2, 1, 1, v3);
}

uint64_t NullRemoteBrowsingSource.applyActiveEnvironment<A>(to:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

uint64_t NullRemoteBrowsingSource.remoteDeviceForSession()()
{
  return 1;
}

uint64_t sub_1D5A0EE7C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A0EEAC(MEMORY[0x1E4F9D178], a1);
}

uint64_t sub_1D5A0EE94@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A0EEAC(MEMORY[0x1E4F9E3B8], a1);
}

uint64_t sub_1D5A0EEAC@<X0>(uint64_t (*a1)(void)@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1(0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
  return v4(a2, 1, 1, v3);
}

uint64_t sub_1D5A0EF1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return NullRemoteBrowsingSource.applyActiveEnvironment<A>(to:)(a1, a2, a3);
}

uint64_t sub_1D5A0EF34()
{
  return 1;
}

ValueMetadata *type metadata accessor for NullRemoteBrowsingSource()
{
  return &type metadata for NullRemoteBrowsingSource;
}

uint64_t dispatch thunk of RemoteBrowsingSourceQuerying.queryActiveParticipant()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RemoteBrowsingSourceQuerying.queryActiveEnvironment()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of RemoteBrowsingSourceQuerying.applyActiveEnvironment<A>(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of RemoteBrowsingSourceQuerying.remoteDeviceForSession()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of RemoteBrowsingSourceJournaling.appendJournalEntry(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of RemoteBrowsingSourceUpdating.updateActiveIdentity(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of RemoteBrowsingSourceUpdating.updateActiveEnvironment(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1D5A0EFD8(uint64_t a1)
{
  uint64_t v2 = a1 + 56;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 56);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v20 = MEMORY[0x1E4FBC860];
  if (!v5) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (unint64_t i = v9 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v8 << 6))
  {
    uint64_t v11 = *(void *)(a1 + 48) + 24 * i;
    uint64_t v12 = *(void *)v11;
    uint64_t v13 = *(void *)(v11 + 8);
    char v14 = *(unsigned char *)(v11 + 16);
    swift_getKeyPath();
    sub_1D5989390(v12, v13, v14);
    swift_getAtKeyPath();
    swift_release();
    uint64_t result = sub_1D59891FC(v12, v13, v14);
    if (v21 == 3)
    {
      if (v5) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1D5A762F8(0, *(void *)(v20 + 16) + 1, 1, (char *)v20);
        uint64_t v20 = result;
      }
      unint64_t v19 = *(void *)(v20 + 16);
      unint64_t v18 = *(void *)(v20 + 24);
      if (v19 >= v18 >> 1)
      {
        uint64_t result = (uint64_t)sub_1D5A762F8((char *)(v18 > 1), v19 + 1, 1, (char *)v20);
        uint64_t v20 = result;
      }
      *(void *)(v20 + 16) = v19 + 1;
      *(unsigned char *)(v20 + v19 + 32) = v21;
      if (v5) {
        goto LABEL_4;
      }
    }
LABEL_7:
    int64_t v15 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v15 >= v6) {
      goto LABEL_29;
    }
    unint64_t v16 = *(void *)(v2 + 8 * v15);
    ++v8;
    if (!v16)
    {
      int64_t v8 = v15 + 1;
      if (v15 + 1 >= v6) {
        goto LABEL_29;
      }
      unint64_t v16 = *(void *)(v2 + 8 * v8);
      if (!v16)
      {
        int64_t v8 = v15 + 2;
        if (v15 + 2 >= v6) {
          goto LABEL_29;
        }
        unint64_t v16 = *(void *)(v2 + 8 * v8);
        if (!v16)
        {
          int64_t v8 = v15 + 3;
          if (v15 + 3 >= v6) {
            goto LABEL_29;
          }
          unint64_t v16 = *(void *)(v2 + 8 * v8);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v5 = (v16 - 1) & v16;
  }
  int64_t v17 = v15 + 4;
  if (v17 >= v6)
  {
LABEL_29:
    swift_release();
    return v20;
  }
  unint64_t v16 = *(void *)(v2 + 8 * v17);
  if (v16)
  {
    int64_t v8 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v8 >= v6) {
      goto LABEL_29;
    }
    unint64_t v16 = *(void *)(v2 + 8 * v8);
    ++v17;
    if (v16) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1D5A0F228(uint64_t a1)
{
  uint64_t v33 = sub_1D5AB40E0();
  uint64_t v3 = *(void *)(v33 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v33);
  unint64_t v32 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v31 = (char *)v27 - v6;
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (!v7) {
    return v8;
  }
  v27[0] = v1;
  uint64_t v34 = MEMORY[0x1E4FBC860];
  sub_1D594E784(0, v7, 0);
  uint64_t result = sub_1D594F1A0(a1);
  uint64_t v10 = result;
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  uint64_t v29 = a1;
  uint64_t v30 = a1 + 56;
  v27[2] = v3 + 32;
  v27[3] = v3 + 16;
  v27[1] = v3 + 8;
  uint64_t v28 = v3;
  while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << *(unsigned char *)(a1 + 32))
  {
    if (((*(void *)(v30 + (((unint64_t)v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
      goto LABEL_15;
    }
    if (*(_DWORD *)(a1 + 36) != v12) {
      goto LABEL_16;
    }
    uint64_t v15 = *(void *)(a1 + 48) + *(void *)(v3 + 72) * v10;
    unint64_t v16 = v31;
    uint64_t v17 = v33;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v31, v15, v33);
    unint64_t v18 = v32;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v32, v16, v17);
    uint64_t v19 = sub_1D5AB40D0();
    uint64_t v21 = v20;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v18, v17);
    uint64_t v8 = v34;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1D594E784(0, *(void *)(v8 + 16) + 1, 1);
      uint64_t v8 = v34;
    }
    unint64_t v23 = *(void *)(v8 + 16);
    unint64_t v22 = *(void *)(v8 + 24);
    if (v23 >= v22 >> 1)
    {
      sub_1D594E784(v22 > 1, v23 + 1, 1);
      uint64_t v8 = v34;
    }
    *(void *)(v8 + 16) = v23 + 1;
    uint64_t v24 = v8 + 16 * v23;
    *(void *)(v24 + 32) = v19;
    *(void *)(v24 + 40) = v21;
    a1 = v29;
    uint64_t result = sub_1D594F244(v10, v12, v14 & 1, v29);
    uint64_t v10 = result;
    uint64_t v12 = v25;
    char v14 = v26 & 1;
    --v7;
    uint64_t v3 = v28;
    if (!v7)
    {
      sub_1D594B5F8(result, v25, v26 & 1);
      return v8;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1D5A0F4F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4900();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v45 = (char *)&v34 - v10;
  uint64_t result = MEMORY[0x1F4188790](v9);
  char v13 = (char *)&v34 - v12;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v14 = 0;
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v36 = a1;
  uint64_t v37 = a1 + 56;
  uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  int64_t v38 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v42 = v5 + 32;
  uint64_t v43 = a2 + 56;
  uint64_t v44 = v5 + 16;
  uint64_t v19 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v34 = v13;
  uint64_t v35 = v5;
  if (!v18) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v40 = (v18 - 1) & v18;
  int64_t v41 = v14;
  for (unint64_t i = __clz(__rbit64(v18)) | (v14 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v23 << 6))
  {
    uint64_t v25 = *(void *)(v5 + 72);
    char v26 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    v26(v13, *(void *)(a1 + 48) + v25 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v45, v13, v4);
    sub_1D5A1DE18(&qword_1EA7256C8, MEMORY[0x1E4F9EDF8]);
    uint64_t v27 = sub_1D5AB4D90();
    uint64_t v28 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v29 = v27 & ~v28;
    if (((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
      (*v19)(v45, v4);
      return 0;
    }
    uint64_t v39 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v30 = a2;
    uint64_t v31 = ~v28;
    while (1)
    {
      v26(v8, *(void *)(v30 + 48) + v29 * v25, v4);
      sub_1D5A1DE18(&qword_1EA727F80, MEMORY[0x1E4F9EDF8]);
      char v32 = sub_1D5AB4DD0();
      uint64_t v33 = *v19;
      (*v19)(v8, v4);
      if (v32) {
        break;
      }
      unint64_t v29 = (v29 + 1) & v31;
      if (((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        v33(v45, v4);
        return 0;
      }
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v33)(v45, v4);
    a2 = v30;
    uint64_t v5 = v35;
    a1 = v36;
    char v13 = v34;
    unint64_t v18 = v40;
    int64_t v14 = v41;
    if (v40) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v21 >= v38) {
      return 1;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v21);
    int64_t v23 = v14 + 1;
    if (!v22)
    {
      int64_t v23 = v14 + 2;
      if (v14 + 2 >= v38) {
        return 1;
      }
      unint64_t v22 = *(void *)(v37 + 8 * v23);
      if (!v22)
      {
        int64_t v23 = v14 + 3;
        if (v14 + 3 >= v38) {
          return 1;
        }
        unint64_t v22 = *(void *)(v37 + 8 * v23);
        if (!v22)
        {
          int64_t v23 = v14 + 4;
          if (v14 + 4 >= v38) {
            return 1;
          }
          unint64_t v22 = *(void *)(v37 + 8 * v23);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v40 = (v22 - 1) & v22;
    int64_t v41 = v23;
  }
  uint64_t v24 = v14 + 5;
  if (v14 + 5 >= v38) {
    return 1;
  }
  unint64_t v22 = *(void *)(v37 + 8 * v24);
  if (v22)
  {
    int64_t v23 = v14 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v23 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v23 >= v38) {
      return 1;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v23);
    ++v24;
    if (v22) {
      goto LABEL_24;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1D5A0F934(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB40E0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v45 = (char *)&v34 - v10;
  uint64_t result = MEMORY[0x1F4188790](v9);
  char v13 = (char *)&v34 - v12;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v14 = 0;
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v36 = a1;
  uint64_t v37 = a1 + 56;
  uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  int64_t v38 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v42 = v5 + 32;
  uint64_t v43 = a2 + 56;
  uint64_t v44 = v5 + 16;
  uint64_t v19 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v34 = v13;
  uint64_t v35 = v5;
  if (!v18) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v40 = (v18 - 1) & v18;
  int64_t v41 = v14;
  for (unint64_t i = __clz(__rbit64(v18)) | (v14 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v23 << 6))
  {
    uint64_t v25 = *(void *)(v5 + 72);
    char v26 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    v26(v13, *(void *)(a1 + 48) + v25 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v45, v13, v4);
    sub_1D5A1DE18((unint64_t *)&unk_1EA727F60, MEMORY[0x1E4F9E708]);
    uint64_t v27 = sub_1D5AB4D90();
    uint64_t v28 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v29 = v27 & ~v28;
    if (((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
      (*v19)(v45, v4);
      return 0;
    }
    uint64_t v39 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v30 = a2;
    uint64_t v31 = ~v28;
    while (1)
    {
      v26(v8, *(void *)(v30 + 48) + v29 * v25, v4);
      sub_1D5A1DE18(&qword_1EA726AC0, MEMORY[0x1E4F9E708]);
      char v32 = sub_1D5AB4DD0();
      uint64_t v33 = *v19;
      (*v19)(v8, v4);
      if (v32) {
        break;
      }
      unint64_t v29 = (v29 + 1) & v31;
      if (((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        v33(v45, v4);
        return 0;
      }
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v33)(v45, v4);
    a2 = v30;
    uint64_t v5 = v35;
    a1 = v36;
    char v13 = v34;
    unint64_t v18 = v40;
    int64_t v14 = v41;
    if (v40) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v21 >= v38) {
      return 1;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v21);
    int64_t v23 = v14 + 1;
    if (!v22)
    {
      int64_t v23 = v14 + 2;
      if (v14 + 2 >= v38) {
        return 1;
      }
      unint64_t v22 = *(void *)(v37 + 8 * v23);
      if (!v22)
      {
        int64_t v23 = v14 + 3;
        if (v14 + 3 >= v38) {
          return 1;
        }
        unint64_t v22 = *(void *)(v37 + 8 * v23);
        if (!v22)
        {
          int64_t v23 = v14 + 4;
          if (v14 + 4 >= v38) {
            return 1;
          }
          unint64_t v22 = *(void *)(v37 + 8 * v23);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v40 = (v22 - 1) & v22;
    int64_t v41 = v23;
  }
  uint64_t v24 = v14 + 5;
  if (v14 + 5 >= v38) {
    return 1;
  }
  unint64_t v22 = *(void *)(v37 + 8 * v24);
  if (v22)
  {
    int64_t v23 = v14 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v23 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v23 >= v38) {
      return 1;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v23);
    ++v24;
    if (v22) {
      goto LABEL_24;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1D5A0FD78(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v29 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v30 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v31 = v3;
      unint64_t v9 = v8 | (v3 << 6);
      goto LABEL_26;
    }
    int64_t v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v10 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v10);
    int64_t v12 = v3 + 1;
    if (!v11)
    {
      int64_t v12 = v3 + 2;
      if (v3 + 2 >= v30) {
        return 1;
      }
      unint64_t v11 = *(void *)(v29 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v3 + 3;
        if (v3 + 3 >= v30) {
          return 1;
        }
        unint64_t v11 = *(void *)(v29 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v3 + 4;
          if (v3 + 4 >= v30) {
            return 1;
          }
          unint64_t v11 = *(void *)(v29 + 8 * v12);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v6 = (v11 - 1) & v11;
    int64_t v31 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_26:
    uint64_t v14 = result;
    uint64_t v15 = (uint64_t *)(*(void *)(result + 48) + 16 * v9);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    sub_1D5AB5C20();
    swift_bridgeObjectRetain();
    sub_1D5AB4E60();
    uint64_t v18 = sub_1D5AB5C60();
    uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v20 = v18 & ~v19;
    if (((*(void *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
      goto LABEL_41;
    }
    uint64_t v21 = *(void *)(a2 + 48);
    unint64_t v22 = (void *)(v21 + 16 * v20);
    BOOL v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_1D5AB5AF0() & 1) == 0)
    {
      uint64_t v24 = ~v19;
      for (unint64_t i = v20 + 1; ; unint64_t i = v26 + 1)
      {
        uint64_t v26 = i & v24;
        if (((*(void *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        uint64_t v27 = (void *)(v21 + 16 * v26);
        BOOL v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_1D5AB5AF0() & 1) != 0) {
          goto LABEL_7;
        }
      }
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t result = v14;
    int64_t v3 = v31;
  }
  uint64_t v13 = v3 + 5;
  if (v3 + 5 >= v30) {
    return 1;
  }
  unint64_t v11 = *(void *)(v29 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v3 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_25;
    }
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_1D5A1001C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB37B0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v45 = (char *)&v34 - v10;
  uint64_t result = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v34 - v12;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v14 = 0;
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v36 = a1;
  uint64_t v37 = a1 + 56;
  uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  int64_t v38 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v42 = v5 + 32;
  uint64_t v43 = a2 + 56;
  uint64_t v44 = v5 + 16;
  uint64_t v19 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v34 = v13;
  uint64_t v35 = v5;
  if (!v18) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v40 = (v18 - 1) & v18;
  int64_t v41 = v14;
  for (unint64_t i = __clz(__rbit64(v18)) | (v14 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v23 << 6))
  {
    uint64_t v25 = *(void *)(v5 + 72);
    uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    v26(v13, *(void *)(a1 + 48) + v25 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v45, v13, v4);
    sub_1D5A1DE18(&qword_1EA7256D0, MEMORY[0x1E4F9DC50]);
    uint64_t v27 = sub_1D5AB4D90();
    uint64_t v28 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v29 = v27 & ~v28;
    if (((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
      (*v19)(v45, v4);
      return 0;
    }
    uint64_t v39 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v30 = a2;
    uint64_t v31 = ~v28;
    while (1)
    {
      v26(v8, *(void *)(v30 + 48) + v29 * v25, v4);
      sub_1D5A1DE18((unint64_t *)&unk_1EA727FE0, MEMORY[0x1E4F9DC50]);
      char v32 = sub_1D5AB4DD0();
      uint64_t v33 = *v19;
      (*v19)(v8, v4);
      if (v32) {
        break;
      }
      unint64_t v29 = (v29 + 1) & v31;
      if (((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        v33(v45, v4);
        return 0;
      }
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v33)(v45, v4);
    a2 = v30;
    uint64_t v5 = v35;
    a1 = v36;
    uint64_t v13 = v34;
    unint64_t v18 = v40;
    int64_t v14 = v41;
    if (v40) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v21 >= v38) {
      return 1;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v21);
    int64_t v23 = v14 + 1;
    if (!v22)
    {
      int64_t v23 = v14 + 2;
      if (v14 + 2 >= v38) {
        return 1;
      }
      unint64_t v22 = *(void *)(v37 + 8 * v23);
      if (!v22)
      {
        int64_t v23 = v14 + 3;
        if (v14 + 3 >= v38) {
          return 1;
        }
        unint64_t v22 = *(void *)(v37 + 8 * v23);
        if (!v22)
        {
          int64_t v23 = v14 + 4;
          if (v14 + 4 >= v38) {
            return 1;
          }
          unint64_t v22 = *(void *)(v37 + 8 * v23);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v40 = (v22 - 1) & v22;
    int64_t v41 = v23;
  }
  uint64_t v24 = v14 + 5;
  if (v14 + 5 >= v38) {
    return 1;
  }
  unint64_t v22 = *(void *)(v37 + 8 * v24);
  if (v22)
  {
    int64_t v23 = v14 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v23 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v23 >= v38) {
      return 1;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v23);
    ++v24;
    if (v22) {
      goto LABEL_24;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1D5A10460(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4100();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v45 = (char *)&v34 - v10;
  uint64_t result = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v34 - v12;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v14 = 0;
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v36 = a1;
  uint64_t v37 = a1 + 56;
  uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  int64_t v38 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v42 = v5 + 32;
  uint64_t v43 = a2 + 56;
  uint64_t v44 = v5 + 16;
  uint64_t v19 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v34 = v13;
  uint64_t v35 = v5;
  if (!v18) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v40 = (v18 - 1) & v18;
  int64_t v41 = v14;
  for (unint64_t i = __clz(__rbit64(v18)) | (v14 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v23 << 6))
  {
    uint64_t v25 = *(void *)(v5 + 72);
    uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    v26(v13, *(void *)(a1 + 48) + v25 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v45, v13, v4);
    sub_1D5A1DE18(&qword_1EA7256D8, MEMORY[0x1E4F9E7B8]);
    uint64_t v27 = sub_1D5AB4D90();
    uint64_t v28 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v29 = v27 & ~v28;
    if (((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
      (*v19)(v45, v4);
      return 0;
    }
    uint64_t v39 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v30 = a2;
    uint64_t v31 = ~v28;
    while (1)
    {
      v26(v8, *(void *)(v30 + 48) + v29 * v25, v4);
      sub_1D5A1DE18(&qword_1EA727FB0, MEMORY[0x1E4F9E7B8]);
      char v32 = sub_1D5AB4DD0();
      uint64_t v33 = *v19;
      (*v19)(v8, v4);
      if (v32) {
        break;
      }
      unint64_t v29 = (v29 + 1) & v31;
      if (((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        v33(v45, v4);
        return 0;
      }
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v33)(v45, v4);
    a2 = v30;
    uint64_t v5 = v35;
    a1 = v36;
    uint64_t v13 = v34;
    unint64_t v18 = v40;
    int64_t v14 = v41;
    if (v40) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v21 >= v38) {
      return 1;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v21);
    int64_t v23 = v14 + 1;
    if (!v22)
    {
      int64_t v23 = v14 + 2;
      if (v14 + 2 >= v38) {
        return 1;
      }
      unint64_t v22 = *(void *)(v37 + 8 * v23);
      if (!v22)
      {
        int64_t v23 = v14 + 3;
        if (v14 + 3 >= v38) {
          return 1;
        }
        unint64_t v22 = *(void *)(v37 + 8 * v23);
        if (!v22)
        {
          int64_t v23 = v14 + 4;
          if (v14 + 4 >= v38) {
            return 1;
          }
          unint64_t v22 = *(void *)(v37 + 8 * v23);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v40 = (v22 - 1) & v22;
    int64_t v41 = v23;
  }
  uint64_t v24 = v14 + 5;
  if (v14 + 5 >= v38) {
    return 1;
  }
  unint64_t v22 = *(void *)(v37 + 8 * v24);
  if (v22)
  {
    int64_t v23 = v14 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v23 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v23 >= v38) {
      return 1;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v23);
    ++v24;
    if (v22) {
      goto LABEL_24;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1D5A108A4(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) == *(void *)(a2 + 16))
  {
    uint64_t v29 = result + 56;
    uint64_t v3 = 1 << *(unsigned char *)(result + 32);
    if (v3 < 64) {
      uint64_t v4 = ~(-1 << v3);
    }
    else {
      uint64_t v4 = -1;
    }
    uint64_t v5 = v4 & *(void *)(result + 56);
    int64_t v30 = (unint64_t)(v3 + 63) >> 6;
    int64_t v31 = 0;
    uint64_t v6 = a2 + 56;
    do
    {
      while (1)
      {
LABEL_8:
        if (v5)
        {
          v5 &= v5 - 1;
          int64_t v7 = v31;
        }
        else
        {
          int64_t v8 = v31 + 1;
          if (__OFADD__(v31, 1))
          {
            __break(1u);
LABEL_44:
            __break(1u);
            return result;
          }
          if (v8 >= v30) {
            return 1;
          }
          uint64_t v9 = *(void *)(v29 + 8 * v8);
          int64_t v7 = v31 + 1;
          if (!v9)
          {
            int64_t v7 = v31 + 2;
            if (v31 + 2 >= v30) {
              return 1;
            }
            uint64_t v9 = *(void *)(v29 + 8 * v7);
            if (!v9)
            {
              int64_t v7 = v31 + 3;
              if (v31 + 3 >= v30) {
                return 1;
              }
              uint64_t v9 = *(void *)(v29 + 8 * v7);
              if (!v9)
              {
                int64_t v7 = v31 + 4;
                if (v31 + 4 >= v30) {
                  return 1;
                }
                uint64_t v9 = *(void *)(v29 + 8 * v7);
                if (!v9)
                {
                  int64_t v10 = v31 + 5;
                  if (v31 + 5 >= v30) {
                    return 1;
                  }
                  uint64_t v9 = *(void *)(v29 + 8 * v10);
                  if (!v9)
                  {
                    while (1)
                    {
                      int64_t v7 = v10 + 1;
                      if (__OFADD__(v10, 1)) {
                        goto LABEL_44;
                      }
                      if (v7 >= v30) {
                        return 1;
                      }
                      uint64_t v9 = *(void *)(v29 + 8 * v7);
                      ++v10;
                      if (v9) {
                        goto LABEL_25;
                      }
                    }
                  }
                  int64_t v7 = v31 + 5;
                }
              }
            }
          }
LABEL_25:
          uint64_t v5 = (v9 - 1) & v9;
        }
        sub_1D5AB5C20();
        sub_1D5AB25E0();
        sub_1D5AB4E60();
        swift_bridgeObjectRelease();
        uint64_t v11 = sub_1D5AB5C60();
        uint64_t v12 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v13 = v11 & ~v12;
        if (((*(void *)(v6 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          return 0;
        }
        int64_t v31 = v7;
        uint64_t v14 = sub_1D5AB25E0();
        uint64_t v16 = v15;
        if (v14 != sub_1D5AB25E0() || v16 != v17) {
          break;
        }
LABEL_7:
        uint64_t result = swift_bridgeObjectRelease_n();
      }
      char v19 = sub_1D5AB5AF0();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
    while ((v19 & 1) != 0);
    uint64_t v20 = ~v12;
    for (unint64_t i = v13 + 1; ; unint64_t i = v22 + 1)
    {
      uint64_t v22 = i & v20;
      if (((*(void *)(v6 + (((i & v20) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v20)) & 1) == 0) {
        break;
      }
      uint64_t v23 = sub_1D5AB25E0();
      uint64_t v25 = v24;
      if (v23 == sub_1D5AB25E0() && v25 == v26) {
        goto LABEL_7;
      }
      char v28 = sub_1D5AB5AF0();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v28) {
        goto LABEL_8;
      }
    }
  }
  return 0;
}

uint64_t sub_1D5A10BB8(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v24 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v25 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = a2 + 56;
  uint64_t v8 = MEMORY[0x1E4FBB1B0];
  uint64_t v23 = result;
  if (!v6) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v26 = (v6 - 1) & v6;
  int64_t v27 = v3;
  for (unint64_t i = __clz(__rbit64(v6)) | (v3 << 6); ; unint64_t i = __clz(__rbit64(v11)) + (v12 << 6))
  {
    uint64_t v14 = *(void *)(result + 48) + 24 * i;
    uint64_t v15 = *(void *)v14;
    uint64_t v16 = *(void *)(v14 + 8);
    char v17 = *(unsigned char *)(v14 + 16);
    sub_1D5AB5C20();
    sub_1D5989390(v15, v16, v17);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726B30);
    sub_1D59500C0();
    uint64_t v18 = v8;
    sub_1D5AB2360();
    uint64_t v19 = sub_1D5AB5C60();
    uint64_t v20 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v21 = v19 & ~v20;
    if (((*(void *)(v7 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
    {
LABEL_29:
      sub_1D59891FC(v15, v16, v17);
      return 0;
    }
    uint64_t v22 = ~v20;
    sub_1D5A1DC94();
    sub_1D5A1DC3C();
    while ((sub_1D5AB2370() & 1) == 0)
    {
      unint64_t v21 = (v21 + 1) & v22;
      if (((*(void *)(v7 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
        goto LABEL_29;
      }
    }
    sub_1D59891FC(v15, v16, v17);
    uint64_t result = v23;
    uint64_t v8 = v18;
    unint64_t v6 = v26;
    int64_t v3 = v27;
    if (v26) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v10 >= v25) {
      return 1;
    }
    unint64_t v11 = *(void *)(v24 + 8 * v10);
    int64_t v12 = v3 + 1;
    if (!v11)
    {
      int64_t v12 = v10 + 1;
      if (v10 + 1 >= v25) {
        return 1;
      }
      unint64_t v11 = *(void *)(v24 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v10 + 2;
        if (v10 + 2 >= v25) {
          return 1;
        }
        unint64_t v11 = *(void *)(v24 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v10 + 3;
          if (v10 + 3 >= v25) {
            return 1;
          }
          unint64_t v11 = *(void *)(v24 + 8 * v12);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v26 = (v11 - 1) & v11;
    int64_t v27 = v12;
  }
  int64_t v13 = v10 + 4;
  if (v13 >= v25) {
    return 1;
  }
  unint64_t v11 = *(void *)(v24 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v13;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v25) {
      return 1;
    }
    unint64_t v11 = *(void *)(v24 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_24;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1D5A10EBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2B60();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v45 = (char *)&v34 - v10;
  uint64_t result = MEMORY[0x1F4188790](v9);
  int64_t v13 = (char *)&v34 - v12;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v14 = 0;
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v36 = a1;
  uint64_t v37 = a1 + 56;
  uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  int64_t v38 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v42 = v5 + 32;
  uint64_t v43 = a2 + 56;
  uint64_t v44 = v5 + 16;
  uint64_t v19 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v34 = v13;
  uint64_t v35 = v5;
  if (!v18) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v40 = (v18 - 1) & v18;
  int64_t v41 = v14;
  for (unint64_t i = __clz(__rbit64(v18)) | (v14 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v23 << 6))
  {
    uint64_t v25 = *(void *)(v5 + 72);
    uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    v26(v13, *(void *)(a1 + 48) + v25 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v45, v13, v4);
    sub_1D5A1DE18(&qword_1EA726B18, MEMORY[0x1E4F9C7D0]);
    uint64_t v27 = sub_1D5AB4D90();
    uint64_t v28 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v29 = v27 & ~v28;
    if (((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
      (*v19)(v45, v4);
      return 0;
    }
    uint64_t v39 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v30 = a2;
    uint64_t v31 = ~v28;
    while (1)
    {
      v26(v8, *(void *)(v30 + 48) + v29 * v25, v4);
      sub_1D5A1DE18(&qword_1EA726B20, MEMORY[0x1E4F9C7D0]);
      char v32 = sub_1D5AB4DD0();
      uint64_t v33 = *v19;
      (*v19)(v8, v4);
      if (v32) {
        break;
      }
      unint64_t v29 = (v29 + 1) & v31;
      if (((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        v33(v45, v4);
        return 0;
      }
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v33)(v45, v4);
    a2 = v30;
    uint64_t v5 = v35;
    a1 = v36;
    int64_t v13 = v34;
    unint64_t v18 = v40;
    int64_t v14 = v41;
    if (v40) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v21 >= v38) {
      return 1;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v21);
    int64_t v23 = v14 + 1;
    if (!v22)
    {
      int64_t v23 = v14 + 2;
      if (v14 + 2 >= v38) {
        return 1;
      }
      unint64_t v22 = *(void *)(v37 + 8 * v23);
      if (!v22)
      {
        int64_t v23 = v14 + 3;
        if (v14 + 3 >= v38) {
          return 1;
        }
        unint64_t v22 = *(void *)(v37 + 8 * v23);
        if (!v22)
        {
          int64_t v23 = v14 + 4;
          if (v14 + 4 >= v38) {
            return 1;
          }
          unint64_t v22 = *(void *)(v37 + 8 * v23);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v40 = (v22 - 1) & v22;
    int64_t v41 = v23;
  }
  uint64_t v24 = v14 + 5;
  if (v14 + 5 >= v38) {
    return 1;
  }
  unint64_t v22 = *(void *)(v37 + 8 * v24);
  if (v22)
  {
    int64_t v23 = v14 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v23 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v23 >= v38) {
      return 1;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v23);
    ++v24;
    if (v22) {
      goto LABEL_24;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1D5A11300(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4120();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v45 = (char *)&v34 - v10;
  uint64_t result = MEMORY[0x1F4188790](v9);
  int64_t v13 = (char *)&v34 - v12;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v14 = 0;
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v36 = a1;
  uint64_t v37 = a1 + 56;
  uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  int64_t v38 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v42 = v5 + 32;
  uint64_t v43 = a2 + 56;
  uint64_t v44 = v5 + 16;
  uint64_t v19 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v34 = v13;
  uint64_t v35 = v5;
  if (!v18) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v40 = (v18 - 1) & v18;
  int64_t v41 = v14;
  for (unint64_t i = __clz(__rbit64(v18)) | (v14 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v23 << 6))
  {
    uint64_t v25 = *(void *)(v5 + 72);
    uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    v26(v13, *(void *)(a1 + 48) + v25 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v45, v13, v4);
    sub_1D5A1DE18(&qword_1EA726B08, MEMORY[0x1E4F9E800]);
    uint64_t v27 = sub_1D5AB4D90();
    uint64_t v28 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v29 = v27 & ~v28;
    if (((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
      (*v19)(v45, v4);
      return 0;
    }
    uint64_t v39 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v30 = a2;
    uint64_t v31 = ~v28;
    while (1)
    {
      v26(v8, *(void *)(v30 + 48) + v29 * v25, v4);
      sub_1D5A1DE18(&qword_1EA726B10, MEMORY[0x1E4F9E800]);
      char v32 = sub_1D5AB4DD0();
      uint64_t v33 = *v19;
      (*v19)(v8, v4);
      if (v32) {
        break;
      }
      unint64_t v29 = (v29 + 1) & v31;
      if (((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        v33(v45, v4);
        return 0;
      }
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v33)(v45, v4);
    a2 = v30;
    uint64_t v5 = v35;
    a1 = v36;
    int64_t v13 = v34;
    unint64_t v18 = v40;
    int64_t v14 = v41;
    if (v40) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v21 >= v38) {
      return 1;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v21);
    int64_t v23 = v14 + 1;
    if (!v22)
    {
      int64_t v23 = v14 + 2;
      if (v14 + 2 >= v38) {
        return 1;
      }
      unint64_t v22 = *(void *)(v37 + 8 * v23);
      if (!v22)
      {
        int64_t v23 = v14 + 3;
        if (v14 + 3 >= v38) {
          return 1;
        }
        unint64_t v22 = *(void *)(v37 + 8 * v23);
        if (!v22)
        {
          int64_t v23 = v14 + 4;
          if (v14 + 4 >= v38) {
            return 1;
          }
          unint64_t v22 = *(void *)(v37 + 8 * v23);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v40 = (v22 - 1) & v22;
    int64_t v41 = v23;
  }
  uint64_t v24 = v14 + 5;
  if (v14 + 5 >= v38) {
    return 1;
  }
  unint64_t v22 = *(void *)(v37 + 8 * v24);
  if (v22)
  {
    int64_t v23 = v14 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v23 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v23 >= v38) {
      return 1;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v23);
    ++v24;
    if (v22) {
      goto LABEL_24;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1D5A11744(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3010();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v45 = (char *)&v34 - v10;
  uint64_t result = MEMORY[0x1F4188790](v9);
  int64_t v13 = (char *)&v34 - v12;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v14 = 0;
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v36 = a1;
  uint64_t v37 = a1 + 56;
  uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  int64_t v38 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v42 = v5 + 32;
  uint64_t v43 = a2 + 56;
  uint64_t v44 = v5 + 16;
  uint64_t v19 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v34 = v13;
  uint64_t v35 = v5;
  if (!v18) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v40 = (v18 - 1) & v18;
  int64_t v41 = v14;
  for (unint64_t i = __clz(__rbit64(v18)) | (v14 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v23 << 6))
  {
    uint64_t v25 = *(void *)(v5 + 72);
    uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    v26(v13, *(void *)(a1 + 48) + v25 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v45, v13, v4);
    sub_1D5A1DE18((unint64_t *)&unk_1EA728070, MEMORY[0x1E4F9CE78]);
    uint64_t v27 = sub_1D5AB4D90();
    uint64_t v28 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v29 = v27 & ~v28;
    if (((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
      (*v19)(v45, v4);
      return 0;
    }
    uint64_t v39 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v30 = a2;
    uint64_t v31 = ~v28;
    while (1)
    {
      v26(v8, *(void *)(v30 + 48) + v29 * v25, v4);
      sub_1D5A1DE18(&qword_1EA726B00, MEMORY[0x1E4F9CE78]);
      char v32 = sub_1D5AB4DD0();
      uint64_t v33 = *v19;
      (*v19)(v8, v4);
      if (v32) {
        break;
      }
      unint64_t v29 = (v29 + 1) & v31;
      if (((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        v33(v45, v4);
        return 0;
      }
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v33)(v45, v4);
    a2 = v30;
    uint64_t v5 = v35;
    a1 = v36;
    int64_t v13 = v34;
    unint64_t v18 = v40;
    int64_t v14 = v41;
    if (v40) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v21 >= v38) {
      return 1;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v21);
    int64_t v23 = v14 + 1;
    if (!v22)
    {
      int64_t v23 = v14 + 2;
      if (v14 + 2 >= v38) {
        return 1;
      }
      unint64_t v22 = *(void *)(v37 + 8 * v23);
      if (!v22)
      {
        int64_t v23 = v14 + 3;
        if (v14 + 3 >= v38) {
          return 1;
        }
        unint64_t v22 = *(void *)(v37 + 8 * v23);
        if (!v22)
        {
          int64_t v23 = v14 + 4;
          if (v14 + 4 >= v38) {
            return 1;
          }
          unint64_t v22 = *(void *)(v37 + 8 * v23);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v40 = (v22 - 1) & v22;
    int64_t v41 = v23;
  }
  uint64_t v24 = v14 + 5;
  if (v14 + 5 >= v38) {
    return 1;
  }
  unint64_t v22 = *(void *)(v37 + 8 * v24);
  if (v22)
  {
    int64_t v23 = v14 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v23 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v23 >= v38) {
      return 1;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v23);
    ++v24;
    if (v22) {
      goto LABEL_24;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1D5A11B88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB49D0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v45 = (char *)&v34 - v10;
  uint64_t result = MEMORY[0x1F4188790](v9);
  int64_t v13 = (char *)&v34 - v12;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v14 = 0;
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v36 = a1;
  uint64_t v37 = a1 + 56;
  uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  int64_t v38 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v42 = v5 + 32;
  uint64_t v43 = a2 + 56;
  uint64_t v44 = v5 + 16;
  uint64_t v19 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v34 = v13;
  uint64_t v35 = v5;
  if (!v18) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v40 = (v18 - 1) & v18;
  int64_t v41 = v14;
  for (unint64_t i = __clz(__rbit64(v18)) | (v14 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v23 << 6))
  {
    uint64_t v25 = *(void *)(v5 + 72);
    uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    v26(v13, *(void *)(a1 + 48) + v25 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v45, v13, v4);
    sub_1D5A1DE18(&qword_1EA725208, MEMORY[0x1E4F9EED0]);
    uint64_t v27 = sub_1D5AB4D90();
    uint64_t v28 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v29 = v27 & ~v28;
    if (((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
      (*v19)(v45, v4);
      return 0;
    }
    uint64_t v39 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v30 = a2;
    uint64_t v31 = ~v28;
    while (1)
    {
      v26(v8, *(void *)(v30 + 48) + v29 * v25, v4);
      sub_1D5A1DE18((unint64_t *)&unk_1EA727F50, MEMORY[0x1E4F9EED0]);
      char v32 = sub_1D5AB4DD0();
      uint64_t v33 = *v19;
      (*v19)(v8, v4);
      if (v32) {
        break;
      }
      unint64_t v29 = (v29 + 1) & v31;
      if (((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        v33(v45, v4);
        return 0;
      }
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v33)(v45, v4);
    a2 = v30;
    uint64_t v5 = v35;
    a1 = v36;
    int64_t v13 = v34;
    unint64_t v18 = v40;
    int64_t v14 = v41;
    if (v40) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v21 >= v38) {
      return 1;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v21);
    int64_t v23 = v14 + 1;
    if (!v22)
    {
      int64_t v23 = v14 + 2;
      if (v14 + 2 >= v38) {
        return 1;
      }
      unint64_t v22 = *(void *)(v37 + 8 * v23);
      if (!v22)
      {
        int64_t v23 = v14 + 3;
        if (v14 + 3 >= v38) {
          return 1;
        }
        unint64_t v22 = *(void *)(v37 + 8 * v23);
        if (!v22)
        {
          int64_t v23 = v14 + 4;
          if (v14 + 4 >= v38) {
            return 1;
          }
          unint64_t v22 = *(void *)(v37 + 8 * v23);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v40 = (v22 - 1) & v22;
    int64_t v41 = v23;
  }
  uint64_t v24 = v14 + 5;
  if (v14 + 5 >= v38) {
    return 1;
  }
  unint64_t v22 = *(void *)(v37 + 8 * v24);
  if (v22)
  {
    int64_t v23 = v14 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v23 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v23 >= v38) {
      return 1;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v23);
    ++v24;
    if (v22) {
      goto LABEL_24;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1D5A11FCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3280();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v45 = (char *)&v34 - v10;
  uint64_t result = MEMORY[0x1F4188790](v9);
  int64_t v13 = (char *)&v34 - v12;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v14 = 0;
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v36 = a1;
  uint64_t v37 = a1 + 56;
  uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  int64_t v38 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v42 = v5 + 32;
  uint64_t v43 = a2 + 56;
  uint64_t v44 = v5 + 16;
  uint64_t v19 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v34 = v13;
  uint64_t v35 = v5;
  if (!v18) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v40 = (v18 - 1) & v18;
  int64_t v41 = v14;
  for (unint64_t i = __clz(__rbit64(v18)) | (v14 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v23 << 6))
  {
    uint64_t v25 = *(void *)(v5 + 72);
    uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    v26(v13, *(void *)(a1 + 48) + v25 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v45, v13, v4);
    sub_1D5A1DE18(&qword_1EA726AE8, MEMORY[0x1E4F9D2E8]);
    uint64_t v27 = sub_1D5AB4D90();
    uint64_t v28 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v29 = v27 & ~v28;
    if (((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
      (*v19)(v45, v4);
      return 0;
    }
    uint64_t v39 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v30 = a2;
    uint64_t v31 = ~v28;
    while (1)
    {
      v26(v8, *(void *)(v30 + 48) + v29 * v25, v4);
      sub_1D5A1DE18(&qword_1EA726AF0, MEMORY[0x1E4F9D2E8]);
      char v32 = sub_1D5AB4DD0();
      uint64_t v33 = *v19;
      (*v19)(v8, v4);
      if (v32) {
        break;
      }
      unint64_t v29 = (v29 + 1) & v31;
      if (((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        v33(v45, v4);
        return 0;
      }
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v33)(v45, v4);
    a2 = v30;
    uint64_t v5 = v35;
    a1 = v36;
    int64_t v13 = v34;
    unint64_t v18 = v40;
    int64_t v14 = v41;
    if (v40) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v21 >= v38) {
      return 1;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v21);
    int64_t v23 = v14 + 1;
    if (!v22)
    {
      int64_t v23 = v14 + 2;
      if (v14 + 2 >= v38) {
        return 1;
      }
      unint64_t v22 = *(void *)(v37 + 8 * v23);
      if (!v22)
      {
        int64_t v23 = v14 + 3;
        if (v14 + 3 >= v38) {
          return 1;
        }
        unint64_t v22 = *(void *)(v37 + 8 * v23);
        if (!v22)
        {
          int64_t v23 = v14 + 4;
          if (v14 + 4 >= v38) {
            return 1;
          }
          unint64_t v22 = *(void *)(v37 + 8 * v23);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v40 = (v22 - 1) & v22;
    int64_t v41 = v23;
  }
  uint64_t v24 = v14 + 5;
  if (v14 + 5 >= v38) {
    return 1;
  }
  unint64_t v22 = *(void *)(v37 + 8 * v24);
  if (v22)
  {
    int64_t v23 = v14 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v23 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v23 >= v38) {
      return 1;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v23);
    ++v24;
    if (v22) {
      goto LABEL_24;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1D5A12410(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3B90();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v45 = (char *)&v34 - v10;
  uint64_t result = MEMORY[0x1F4188790](v9);
  int64_t v13 = (char *)&v34 - v12;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v14 = 0;
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v36 = a1;
  uint64_t v37 = a1 + 56;
  uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  int64_t v38 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v42 = v5 + 32;
  uint64_t v43 = a2 + 56;
  uint64_t v44 = v5 + 16;
  uint64_t v19 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v34 = v13;
  uint64_t v35 = v5;
  if (!v18) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v40 = (v18 - 1) & v18;
  int64_t v41 = v14;
  for (unint64_t i = __clz(__rbit64(v18)) | (v14 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v23 << 6))
  {
    uint64_t v25 = *(void *)(v5 + 72);
    uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    v26(v13, *(void *)(a1 + 48) + v25 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v45, v13, v4);
    sub_1D5A1DE18(&qword_1EA725650, MEMORY[0x1E4F9E268]);
    uint64_t v27 = sub_1D5AB4D90();
    uint64_t v28 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v29 = v27 & ~v28;
    if (((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
      (*v19)(v45, v4);
      return 0;
    }
    uint64_t v39 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v30 = a2;
    uint64_t v31 = ~v28;
    while (1)
    {
      v26(v8, *(void *)(v30 + 48) + v29 * v25, v4);
      sub_1D5A1DE18(&qword_1EA728010, MEMORY[0x1E4F9E268]);
      char v32 = sub_1D5AB4DD0();
      uint64_t v33 = *v19;
      (*v19)(v8, v4);
      if (v32) {
        break;
      }
      unint64_t v29 = (v29 + 1) & v31;
      if (((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        v33(v45, v4);
        return 0;
      }
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v33)(v45, v4);
    a2 = v30;
    uint64_t v5 = v35;
    a1 = v36;
    int64_t v13 = v34;
    unint64_t v18 = v40;
    int64_t v14 = v41;
    if (v40) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v21 >= v38) {
      return 1;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v21);
    int64_t v23 = v14 + 1;
    if (!v22)
    {
      int64_t v23 = v14 + 2;
      if (v14 + 2 >= v38) {
        return 1;
      }
      unint64_t v22 = *(void *)(v37 + 8 * v23);
      if (!v22)
      {
        int64_t v23 = v14 + 3;
        if (v14 + 3 >= v38) {
          return 1;
        }
        unint64_t v22 = *(void *)(v37 + 8 * v23);
        if (!v22)
        {
          int64_t v23 = v14 + 4;
          if (v14 + 4 >= v38) {
            return 1;
          }
          unint64_t v22 = *(void *)(v37 + 8 * v23);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v40 = (v22 - 1) & v22;
    int64_t v41 = v23;
  }
  uint64_t v24 = v14 + 5;
  if (v14 + 5 >= v38) {
    return 1;
  }
  unint64_t v22 = *(void *)(v37 + 8 * v24);
  if (v22)
  {
    int64_t v23 = v14 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v23 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v23 >= v38) {
      return 1;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v23);
    ++v24;
    if (v22) {
      goto LABEL_24;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1D5A12854(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4090();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v45 = (char *)&v34 - v10;
  uint64_t result = MEMORY[0x1F4188790](v9);
  int64_t v13 = (char *)&v34 - v12;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v14 = 0;
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v36 = a1;
  uint64_t v37 = a1 + 56;
  uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  int64_t v38 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v42 = v5 + 32;
  uint64_t v43 = a2 + 56;
  uint64_t v44 = v5 + 16;
  uint64_t v19 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v34 = v13;
  uint64_t v35 = v5;
  if (!v18) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v40 = (v18 - 1) & v18;
  int64_t v41 = v14;
  for (unint64_t i = __clz(__rbit64(v18)) | (v14 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v23 << 6))
  {
    uint64_t v25 = *(void *)(v5 + 72);
    uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    v26(v13, *(void *)(a1 + 48) + v25 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v45, v13, v4);
    sub_1D5A1DE18(&qword_1EA726AD8, MEMORY[0x1E4F9E688]);
    uint64_t v27 = sub_1D5AB4D90();
    uint64_t v28 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v29 = v27 & ~v28;
    if (((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
      (*v19)(v45, v4);
      return 0;
    }
    uint64_t v39 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v30 = a2;
    uint64_t v31 = ~v28;
    while (1)
    {
      v26(v8, *(void *)(v30 + 48) + v29 * v25, v4);
      sub_1D5A1DE18(&qword_1EA726AE0, MEMORY[0x1E4F9E688]);
      char v32 = sub_1D5AB4DD0();
      uint64_t v33 = *v19;
      (*v19)(v8, v4);
      if (v32) {
        break;
      }
      unint64_t v29 = (v29 + 1) & v31;
      if (((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        v33(v45, v4);
        return 0;
      }
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v33)(v45, v4);
    a2 = v30;
    uint64_t v5 = v35;
    a1 = v36;
    int64_t v13 = v34;
    unint64_t v18 = v40;
    int64_t v14 = v41;
    if (v40) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v21 >= v38) {
      return 1;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v21);
    int64_t v23 = v14 + 1;
    if (!v22)
    {
      int64_t v23 = v14 + 2;
      if (v14 + 2 >= v38) {
        return 1;
      }
      unint64_t v22 = *(void *)(v37 + 8 * v23);
      if (!v22)
      {
        int64_t v23 = v14 + 3;
        if (v14 + 3 >= v38) {
          return 1;
        }
        unint64_t v22 = *(void *)(v37 + 8 * v23);
        if (!v22)
        {
          int64_t v23 = v14 + 4;
          if (v14 + 4 >= v38) {
            return 1;
          }
          unint64_t v22 = *(void *)(v37 + 8 * v23);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v40 = (v22 - 1) & v22;
    int64_t v41 = v23;
  }
  uint64_t v24 = v14 + 5;
  if (v14 + 5 >= v38) {
    return 1;
  }
  unint64_t v22 = *(void *)(v37 + 8 * v24);
  if (v22)
  {
    int64_t v23 = v14 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v23 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v23 >= v38) {
      return 1;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v23);
    ++v24;
    if (v22) {
      goto LABEL_24;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1D5A12C98(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = MEMORY[0x1E4FBC860];
  unint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t v6 = *(void *)(a3 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t (*)(long long *))result;
    unint64_t v5 = 0;
    uint64_t v8 = a3 + 32;
    unint64_t v9 = MEMORY[0x1E4FBC860];
    uint64_t v13 = *(void *)(a3 + 16);
    int64_t v14 = (uint64_t (*)(long long *))result;
    while (v5 < *(void *)(a3 + 16))
    {
      sub_1D5979948(v8, (uint64_t)v16);
      char v10 = v7(v16);
      if (v3)
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
        swift_release();
        swift_bridgeObjectRelease();
        return v5;
      }
      if (v10)
      {
        sub_1D5950B78(v16, (uint64_t)v15);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1D594E7E0(0, *(void *)(v9 + 16) + 1, 1);
        }
        unint64_t v9 = v17;
        unint64_t v12 = *(void *)(v17 + 16);
        unint64_t v11 = *(void *)(v17 + 24);
        if (v12 >= v11 >> 1)
        {
          sub_1D594E7E0(v11 > 1, v12 + 1, 1);
          unint64_t v9 = v17;
        }
        *(void *)(v9 + 16) = v12 + 1;
        uint64_t result = sub_1D5950B78(v15, v9 + 40 * v12 + 32);
        uint64_t v6 = v13;
        uint64_t v7 = v14;
      }
      else
      {
        uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
      }
      ++v5;
      v8 += 40;
      if (v6 == v5)
      {
        unint64_t v5 = v17;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

uint64_t sub_1D5A12E24(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v28 = sub_1D5AB2E90();
  uint64_t v7 = *(void *)(v28 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v28);
  uint64_t v27 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v8);
  unint64_t v12 = (char *)v20 - v11;
  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t v29 = MEMORY[0x1E4FBC860];
  uint64_t v26 = *(void *)(a3 + 16);
  if (v26)
  {
    unint64_t v14 = 0;
    uint64_t v21 = a3;
    unint64_t v22 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v24 = (void (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v25 = v7 + 16;
    v20[0] = a1;
    v20[1] = a2;
    while (v14 < *(void *)(a3 + 16))
    {
      unint64_t v15 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      uint64_t v13 = *(void *)(v7 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v12, a3 + v15 + v13 * v14, v28);
      char v16 = a1(v12);
      if (v3)
      {
        (*v22)(v12, v28);
        swift_bridgeObjectRelease();
        swift_release();
        return v13;
      }
      if (v16)
      {
        int64_t v23 = *v24;
        v23(v27, v12, v28);
        uint64_t v17 = v29;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D594E800(0, *(void *)(v17 + 16) + 1, 1);
          uint64_t v17 = v29;
        }
        unint64_t v19 = *(void *)(v17 + 16);
        unint64_t v18 = *(void *)(v17 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_1D594E800(v18 > 1, v19 + 1, 1);
          uint64_t v17 = v29;
        }
        *(void *)(v17 + 16) = v19 + 1;
        uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v23)(v17 + v15 + v19 * v13, v27, v28);
        uint64_t v29 = v17;
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        uint64_t result = ((uint64_t (*)(char *, uint64_t))*v22)(v12, v28);
      }
      if (v26 == ++v14)
      {
        uint64_t v13 = v29;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

uint64_t sub_1D5A130C8(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for RemoteBrowsingJournalEntry();
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v23 = (uint64_t)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v8);
  unint64_t v12 = (char *)v20 - v11;
  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t v25 = MEMORY[0x1E4FBC860];
  uint64_t v22 = *(void *)(a3 + 16);
  if (v22)
  {
    unint64_t v14 = 0;
    uint64_t v15 = MEMORY[0x1E4FBC860];
    v20[1] = a2;
    uint64_t v21 = a3;
    v20[0] = a1;
    while (v14 < *(void *)(a3 + 16))
    {
      unint64_t v16 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      uint64_t v13 = *(void *)(v24 + 72);
      sub_1D5A1DCE8(a3 + v16 + v13 * v14, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for RemoteBrowsingJournalEntry);
      char v17 = a1(v12);
      if (v3)
      {
        sub_1D5A1DDB8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for RemoteBrowsingJournalEntry);
        swift_release();
        swift_bridgeObjectRelease();
        return v13;
      }
      if (v17)
      {
        sub_1D5A1DD50((uint64_t)v12, v23, (uint64_t (*)(void))type metadata accessor for RemoteBrowsingJournalEntry);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1D594E87C(0, *(void *)(v15 + 16) + 1, 1);
        }
        uint64_t v15 = v25;
        unint64_t v19 = *(void *)(v25 + 16);
        unint64_t v18 = *(void *)(v25 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_1D594E87C(v18 > 1, v19 + 1, 1);
          uint64_t v15 = v25;
        }
        *(void *)(v15 + 16) = v19 + 1;
        uint64_t result = sub_1D5A1DD50(v23, v15 + v16 + v19 * v13, (uint64_t (*)(void))type metadata accessor for RemoteBrowsingJournalEntry);
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        uint64_t result = sub_1D5A1DDB8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for RemoteBrowsingJournalEntry);
      }
      if (v22 == ++v14)
      {
        uint64_t v13 = v25;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

id sub_1D5A13360(unint64_t a1, uint64_t a2)
{
  return sub_1D5A13388(a1, a2, (uint64_t)&qword_1EA726510);
}

id sub_1D5A13374(unint64_t a1, uint64_t a2)
{
  return sub_1D5A13388(a1, a2, (uint64_t)&qword_1EA726518);
}

id sub_1D5A13388(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_1D5AB5980();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_1D5AB5980();
    swift_bridgeObjectRelease();
    if (v7 == v28) {
      goto LABEL_5;
    }
LABEL_49:
    LOBYTE(v7) = 0;
    return (id)(v7 & 1);
  }
  if (v7 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_49;
  }
LABEL_5:
  if (!v7) {
    goto LABEL_38;
  }
  uint64_t v8 = v5 & 0xFFFFFFFFFFFFFF8;
  if (v5 < 0) {
    uint64_t v8 = v5;
  }
  if (!v6) {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v10 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v11 = a2;
  }
  else {
    uint64_t v11 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v10 = v11;
  }
  if (v8 == v10)
  {
LABEL_38:
    LOBYTE(v7) = 1;
    return (id)(v7 & 1);
  }
  if ((v7 & 0x8000000000000000) != 0) {
    goto LABEL_55;
  }
  unint64_t v29 = v5 & 0xC000000000000001;
  if ((v5 & 0xC000000000000001) != 0) {
    goto LABEL_56;
  }
  for (id result = *(id *)(v5 + 32); ; id result = (id)MEMORY[0x1D9459C10](0, v5))
  {
    uint64_t v13 = result;
    if ((a2 & 0xC000000000000001) == 0) {
      break;
    }
    id v14 = (id)MEMORY[0x1D9459C10](0, a2);
LABEL_22:
    uint64_t v15 = v14;
    sub_1D59E8AE0(0, (unint64_t *)a3);
    a3 = sub_1D5AB55B0();

    if ((a3 & 1) == 0) {
      goto LABEL_49;
    }
    unint64_t v16 = v7 - 1;
    if (v7 == 1) {
      return (id)(v7 & 1);
    }
    if (((a2 | v5) & 0xC000000000000001) != 0)
    {
      uint64_t v17 = 0;
      unint64_t v18 = v7 - 2;
      while (v16 != v17)
      {
        unint64_t v7 = v17 + 1;
        if (v29) {
          id v19 = (id)MEMORY[0x1D9459C10](v17 + 1, v5);
        }
        else {
          id v19 = *(id *)(v5 + 40 + 8 * v17);
        }
        a3 = (uint64_t)v19;
        if ((a2 & 0xC000000000000001) != 0)
        {
          id v20 = (id)MEMORY[0x1D9459C10](v17 + 1, a2);
        }
        else
        {
          if (v7 >= *(void *)(v9 + 16)) {
            goto LABEL_54;
          }
          id v20 = *(id *)(a2 + 40 + 8 * v17);
        }
        uint64_t v21 = v20;
        unint64_t v7 = sub_1D5AB55B0();

        if ((v7 & 1) != 0 && v18 != v17++) {
          continue;
        }
        return (id)(v7 & 1);
      }
      __break(1u);
    }
    else
    {
      unint64_t v23 = *(void *)(v9 + 16);
      if (v23 <= 1) {
        unint64_t v23 = 1;
      }
      a3 = v23 - 1;
      uint64_t v24 = (void **)(v5 + 40);
      uint64_t v9 = a2 + 40;
      while (v16)
      {
        if (!a3) {
          goto LABEL_53;
        }
        uint64_t v26 = *v24++;
        uint64_t v25 = v26;
        uint64_t v27 = *(void **)v9;
        v9 += 8;
        a2 = v25;
        uint64_t v5 = v27;
        unint64_t v7 = sub_1D5AB55B0();

        if (v7)
        {
          --a3;
          if (--v16) {
            continue;
          }
        }
        return (id)(v7 & 1);
      }
    }
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    ;
  }
  if (*(void *)(v9 + 16))
  {
    id v14 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D5A13674(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2E90();
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v28 - v8;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10 == *(void *)(a2 + 16))
  {
    if (!v10 || a1 == a2)
    {
      char v23 = 1;
    }
    else
    {
      uint64_t v11 = *(unsigned __int8 *)(v6 + 80);
      uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
      uint64_t v12 = v6 + 16;
      uint64_t v31 = v7;
      char v32 = v13;
      uint64_t v14 = (v11 + 32) & ~v11;
      uint64_t v15 = *(void *)(v12 + 56);
      uint64_t v33 = v12;
      uint64_t v29 = v15;
      uint64_t v30 = (void (**)(uint64_t, uint64_t))(v12 - 8);
      uint64_t v16 = v10 - 1;
      uint64_t v17 = v7;
      do
      {
        uint64_t v18 = a1;
        id v19 = v9;
        id v20 = v9;
        uint64_t v21 = v32;
        v32((uint64_t)v19, a1 + v14, v4);
        uint64_t v22 = a2;
        v21(v17, a2 + v14, v4);
        uint64_t v9 = v20;
        sub_1D5A1DE18(&qword_1EA726AF8, MEMORY[0x1E4F9CB40]);
        char v23 = sub_1D5AB4DD0();
        uint64_t v24 = *v30;
        (*v30)(v17, v4);
        v24((uint64_t)v20, v4);
        BOOL v26 = v16-- != 0;
        if ((v23 & 1) == 0) {
          break;
        }
        v14 += v29;
        a2 = v22;
        a1 = v18;
      }
      while (v26);
    }
  }
  else
  {
    char v23 = 0;
  }
  return v23 & 1;
}

void *RemoteBrowsingSource.__allocating_init(eventHub:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB37D0();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (void *)swift_allocObject();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726A58);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726A60);
  uint64_t v9 = swift_allocObject();
  *(_DWORD *)(v9 + ((*(unsigned int *)(*(void *)v9 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_1D5A1DCE8((uint64_t)v6, v9 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v9 + 16), MEMORY[0x1E4F9DC80]);
  sub_1D5A1DDB8((uint64_t)v6, MEMORY[0x1E4F9DC80]);
  v7[4] = a1;
  v7[5] = a2;
  uint64_t v10 = MEMORY[0x1E4FBC860];
  id v7[2] = v9;
  _OWORD v7[3] = v10;
  return v7;
}

void *RemoteBrowsingSource.init(eventHub:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1D5AB37D0();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726A58);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726A60);
  uint64_t v9 = swift_allocObject();
  *(_DWORD *)(v9 + ((*(unsigned int *)(*(void *)v9 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_1D5A1DCE8((uint64_t)v7, v9 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v9 + 16), MEMORY[0x1E4F9DC80]);
  sub_1D5A1DDB8((uint64_t)v7, MEMORY[0x1E4F9DC80]);
  v2[4] = a1;
  v2[5] = a2;
  uint64_t v10 = MEMORY[0x1E4FBC860];
  v2[2] = v9;
  v2[3] = v10;
  return v2;
}

uint64_t sub_1D5A13BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v258 = type metadata accessor for AchievementEnvironmentCacheUpdated();
  MEMORY[0x1F4188790](v258);
  v257 = (char *)&v234 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D5AB3F80();
  uint64_t v282 = *(void *)(v7 - 8);
  uint64_t v283 = v7;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  v281 = (char *)&v234 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  v280 = (char *)&v234 - v10;
  uint64_t v279 = sub_1D5AB3750();
  uint64_t v277 = *(void *)(v279 - 8);
  MEMORY[0x1F4188790](v279);
  v239 = (char *)&v234 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v276 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726A78);
  MEMORY[0x1F4188790](v276);
  uint64_t v278 = (uint64_t)&v234 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3340);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v256 = (uint64_t)&v234 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v292 = (uint64_t)&v234 - v17;
  MEMORY[0x1F4188790](v16);
  id v19 = (char *)&v234 - v18;
  uint64_t v255 = type metadata accessor for PersonalizationPrivacyPreferenceUpdated();
  MEMORY[0x1F4188790](v255);
  v254 = (char *)&v234 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v272 = sub_1D5AB4350();
  uint64_t v275 = *(void *)(v272 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v272);
  v274 = (char *)&v234 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  v273 = (char *)&v234 - v23;
  uint64_t v293 = sub_1D5AB2210();
  uint64_t v289 = *(void *)(v293 - 8);
  MEMORY[0x1F4188790](v293);
  v238 = (char *)&v234 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v271 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725B78);
  MEMORY[0x1F4188790](v271);
  v290 = (char *)&v234 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725B50);
  uint64_t v27 = MEMORY[0x1F4188790](v26 - 8);
  v262 = (char *)&v234 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  v287 = (char *)&v234 - v30;
  MEMORY[0x1F4188790](v29);
  v288 = (char *)&v234 - v31;
  uint64_t v253 = type metadata accessor for PlaylistsUpdated();
  MEMORY[0x1F4188790](v253);
  v251 = (char *)&v234 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v252 = sub_1D5AB3150();
  uint64_t v250 = *(void *)(v252 - 8);
  MEMORY[0x1F4188790](v252);
  v249 = (char *)&v234 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v241 = type metadata accessor for MindfulMinutesMetricUpdated();
  MEMORY[0x1F4188790](v241);
  v240 = (char *)&v234 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v248 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725B68);
  MEMORY[0x1F4188790](v248);
  uint64_t v261 = (uint64_t)&v234 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725130);
  uint64_t v37 = MEMORY[0x1F4188790](v36 - 8);
  uint64_t v237 = (uint64_t)&v234 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = MEMORY[0x1F4188790](v37);
  uint64_t v259 = (uint64_t)&v234 - v40;
  uint64_t v41 = MEMORY[0x1F4188790](v39);
  uint64_t v260 = (uint64_t)&v234 - v42;
  MEMORY[0x1F4188790](v41);
  v268 = (void (*)(char *, uint64_t, uint64_t))((char *)&v234 - v43);
  uint64_t v286 = sub_1D5AB35D0();
  uint64_t v291 = *(void *)(v286 - 8);
  uint64_t v44 = MEMORY[0x1F4188790](v286);
  v235 = (char *)&v234 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v44);
  v270 = (char *)&v234 - v46;
  uint64_t v267 = sub_1D5AB34D0();
  uint64_t v265 = *(void *)(v267 - 8);
  MEMORY[0x1F4188790](v267);
  v236 = (char *)&v234 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v263 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726A80);
  MEMORY[0x1F4188790](v263);
  v266 = (char *)&v234 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725B48);
  uint64_t v50 = MEMORY[0x1F4188790](v49 - 8);
  uint64_t v247 = (uint64_t)&v234 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = MEMORY[0x1F4188790](v50);
  v264 = (char *)&v234 - v53;
  MEMORY[0x1F4188790](v52);
  v285 = (void (*)(uint64_t, char *, uint64_t))((char *)&v234 - v54);
  uint64_t v246 = type metadata accessor for BookmarksUpdated();
  MEMORY[0x1F4188790](v246);
  v244 = (char *)&v234 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v245 = sub_1D5AB3070();
  uint64_t v243 = *(void *)(v245 - 8);
  MEMORY[0x1F4188790](v245);
  v242 = (char *)&v234 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_1D5AB40B0();
  uint64_t v58 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  unint64_t v60 = (char *)&v234 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v296 = a2;
  uint64_t v61 = sub_1D5AB3D40();
  uint64_t v62 = sub_1D5AB3D40();
  char v63 = sub_1D5A10BB8(v61, v62);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v294 = a1;
  uint64_t v295 = v3;
  v284 = v19;
  if (v63)
  {
    uint64_t v269 = 0;
  }
  else
  {
    uint64_t v64 = *(void *)(v3 + 40);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v66 = sub_1D5AB3D40();
    uint64_t v67 = sub_1D5A0EFD8(v66);
    swift_bridgeObjectRelease();
    sub_1D594F32C(v67);
    swift_bridgeObjectRelease();
    uint64_t v68 = sub_1D5AB3D40();
    uint64_t v69 = sub_1D5A0EFD8(v68);
    uint64_t v269 = 0;
    swift_bridgeObjectRelease();
    sub_1D594F32C(v69);
    swift_bridgeObjectRelease();
    sub_1D5AB40A0();
    (*(void (**)(char *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v64 + 8))(v60, v57, &protocol witness table for AllowedContentRatingsUpdated, ObjectType, v64);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v60, v57);
  }
  uint64_t v70 = sub_1D5AB3DF0();
  uint64_t v71 = sub_1D5AB3DF0();
  char v72 = sub_1D5A0F4F0(v70, v71);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v73 = (uint64_t)v266;
  uint64_t v74 = v265;
  uint64_t v75 = (uint64_t)v285;
  uint64_t v76 = (uint64_t)v264;
  if ((v72 & 1) == 0)
  {
    uint64_t v77 = sub_1D5AB3DF0();
    uint64_t v78 = sub_1D5AB3DF0();
    if (*(void *)(v78 + 16) <= *(void *)(v77 + 16) >> 3)
    {
      uint64_t v297 = v77;
      sub_1D5A1B448(v78, &qword_1EA726AA8, MEMORY[0x1E4F9EDF8], (void (*)(char *))sub_1D5A8E938);
    }
    else
    {
      sub_1D5A1C4E8(v78, v77);
    }
    swift_bridgeObjectRelease();
    uint64_t v79 = sub_1D5AB3DF0();
    uint64_t v80 = sub_1D5AB3DF0();
    if (*(void *)(v80 + 16) <= *(void *)(v79 + 16) >> 3)
    {
      uint64_t v297 = v79;
      sub_1D5A1B448(v80, &qword_1EA726AA8, MEMORY[0x1E4F9EDF8], (void (*)(char *))sub_1D5A8E938);
    }
    else
    {
      sub_1D5A1C4E8(v80, v79);
    }
    swift_bridgeObjectRelease();
    uint64_t v81 = v242;
    sub_1D5AB3060();
    uint64_t v82 = *(void *)(v295 + 40);
    uint64_t v83 = swift_getObjectType();
    uint64_t v84 = v243;
    uint64_t v85 = (uint64_t)v244;
    uint64_t v86 = v245;
    (*(void (**)(char *, char *, uint64_t))(v243 + 16))(v244, v81, v245);
    (*(void (**)(uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v82 + 8))(v85, v246, &protocol witness table for BookmarksUpdated, v83, v82);
    sub_1D5A1DDB8(v85, (uint64_t (*)(void))type metadata accessor for BookmarksUpdated);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v81, v86);
    uint64_t v75 = (uint64_t)v285;
  }
  uint64_t v87 = sub_1D5AB3C40();
  uint64_t v88 = sub_1D5AB3C40();
  char v89 = sub_1D5A10EBC(v87, v88);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v89 & 1) == 0)
  {
    uint64_t v90 = *(void *)(v295 + 40);
    uint64_t v91 = swift_getObjectType();
    (*(void (**)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v90 + 8))(v91, &type metadata for RecommendationsUpdated, &protocol witness table for RecommendationsUpdated, v91, v90);
  }
  sub_1D5AB3D10();
  sub_1D5AB3D10();
  uint64_t v92 = v73 + *(int *)(v263 + 48);
  sub_1D596E6CC(v75, v73, &qword_1EA725B48);
  sub_1D596E6CC(v76, v92, &qword_1EA725B48);
  uint64_t v93 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v74 + 48);
  uint64_t v94 = v267;
  if (v93(v73, 1, v267) == 1)
  {
    sub_1D594F53C(v76, &qword_1EA725B48);
    sub_1D594F53C(v75, &qword_1EA725B48);
    int v95 = v93(v92, 1, v94);
    uint64_t v96 = (uint64_t)v268;
    if (v95 == 1)
    {
      sub_1D594F53C(v73, &qword_1EA725B48);
      goto LABEL_22;
    }
  }
  else
  {
    uint64_t v97 = v247;
    sub_1D596E6CC(v73, v247, &qword_1EA725B48);
    if (v93(v92, 1, v94) != 1)
    {
      uint64_t v98 = v236;
      (*(void (**)(char *, uint64_t, uint64_t))(v74 + 32))(v236, v92, v94);
      sub_1D5A1DE18(&qword_1EA726AA0, MEMORY[0x1E4F9D538]);
      LODWORD(v285) = sub_1D5AB4DD0();
      unint64_t v99 = *(void (**)(char *, uint64_t))(v74 + 8);
      v99(v98, v94);
      sub_1D594F53C(v76, &qword_1EA725B48);
      sub_1D594F53C(v75, &qword_1EA725B48);
      v99((char *)v97, v94);
      sub_1D594F53C(v73, &qword_1EA725B48);
      uint64_t v96 = (uint64_t)v268;
      if (v285) {
        goto LABEL_22;
      }
      goto LABEL_21;
    }
    sub_1D594F53C(v76, &qword_1EA725B48);
    sub_1D594F53C(v75, &qword_1EA725B48);
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v97, v94);
    uint64_t v96 = (uint64_t)v268;
  }
  sub_1D594F53C(v73, &qword_1EA726A80);
LABEL_21:
  uint64_t v100 = *(void *)(v295 + 40);
  uint64_t v101 = swift_getObjectType();
  (*(void (**)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v100 + 8))(v101, &type metadata for ServiceSubscriptionUpdated, &protocol witness table for ServiceSubscriptionUpdated, v101, v100);
LABEL_22:
  sub_1D5AB3D20();
  uint64_t v102 = v291;
  unint64_t v103 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v291 + 48);
  if (v103(v96, 1, v286) != 1)
  {
    v104 = v270;
    uint64_t v105 = v286;
    v268 = *(void (**)(char *, uint64_t, uint64_t))(v102 + 32);
    v268(v270, v96, v286);
    uint64_t v106 = v260;
    v285 = *(void (**)(uint64_t, char *, uint64_t))(v102 + 16);
    v285(v260, v104, v105);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v102 + 56))(v106, 0, 1, v105);
    uint64_t v107 = v259;
    sub_1D5AB3D20();
    uint64_t v108 = v261;
    uint64_t v109 = v261 + *(int *)(v248 + 48);
    sub_1D596E6CC(v106, v261, &qword_1EA725130);
    sub_1D596E6CC(v107, v109, &qword_1EA725130);
    if (v103(v108, 1, v105) == 1)
    {
      sub_1D594F53C(v107, &qword_1EA725130);
      uint64_t v108 = v261;
      sub_1D594F53C(v106, &qword_1EA725130);
      if (v103(v109, 1, v105) == 1)
      {
        sub_1D594F53C(v108, &qword_1EA725130);
        (*(void (**)(char *, uint64_t))(v291 + 8))(v270, v105);
        goto LABEL_33;
      }
    }
    else
    {
      uint64_t v110 = v237;
      sub_1D596E6CC(v108, v237, &qword_1EA725130);
      if (v103(v109, 1, v105) != 1)
      {
        v111 = v235;
        v268(v235, v109, v105);
        sub_1D5A1DE18(&qword_1EA725BB8, MEMORY[0x1E4F9D770]);
        char v112 = sub_1D5AB4DD0();
        uint64_t v113 = *(void (**)(char *, uint64_t))(v291 + 8);
        v113(v111, v105);
        sub_1D594F53C(v259, &qword_1EA725130);
        sub_1D594F53C(v260, &qword_1EA725130);
        v113((char *)v110, v105);
        sub_1D594F53C(v108, &qword_1EA725130);
        if (v112)
        {
          v113(v270, v105);
          goto LABEL_33;
        }
LABEL_32:
        uint64_t v114 = *(void *)(v295 + 40);
        uint64_t v115 = swift_getObjectType();
        uint64_t v116 = (uint64_t)v240;
        uint64_t v117 = v270;
        v285((uint64_t)v240, v270, v105);
        (*(void (**)(uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v114 + 8))(v116, v241, &protocol witness table for MindfulMinutesMetricUpdated, v115, v114);
        sub_1D5A1DDB8(v116, (uint64_t (*)(void))type metadata accessor for MindfulMinutesMetricUpdated);
        (*(void (**)(char *, uint64_t))(v291 + 8))(v117, v105);
        goto LABEL_33;
      }
      sub_1D594F53C(v259, &qword_1EA725130);
      sub_1D594F53C(v260, &qword_1EA725130);
      (*(void (**)(uint64_t, uint64_t))(v291 + 8))(v110, v105);
    }
    sub_1D594F53C(v108, &qword_1EA725B68);
    goto LABEL_32;
  }
  sub_1D594F53C(v96, &qword_1EA725130);
LABEL_33:
  uint64_t v118 = sub_1D5AB3D50();
  uint64_t v119 = sub_1D5AB3D50();
  char v120 = sub_1D5A0F934(v118, v119);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v121 = sub_1D5AB3CD0();
  uint64_t v122 = sub_1D5AB3CD0();
  char v123 = sub_1D5A11300(v121, v122);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v124 = sub_1D5AB3C90();
  uint64_t v125 = sub_1D5AB3C90();
  char v126 = sub_1D5A11744(v124, v125);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v120 & 1) == 0 || (v123 & 1) == 0 || (v126 & 1) == 0)
  {
    if (qword_1EBDE3D80 != -1) {
      swift_once();
    }
    uint64_t v127 = sub_1D5AB4B50();
    __swift_project_value_buffer(v127, (uint64_t)qword_1EBDE4120);
    v128 = sub_1D5AB4B30();
    os_log_type_t v129 = sub_1D5AB5430();
    if (os_log_type_enabled(v128, v129))
    {
      uint64_t v130 = swift_slowAlloc();
      *(_DWORD *)uint64_t v130 = 67109632;
      LODWORD(v297) = (v120 & 1) == 0;
      sub_1D5AB5680();
      *(_WORD *)(v130 + 8) = 1024;
      LODWORD(v297) = (v123 & 1) == 0;
      sub_1D5AB5680();
      *(_WORD *)(v130 + 14) = 1024;
      LODWORD(v297) = (v126 & 1) == 0;
      sub_1D5AB5680();
      _os_log_impl(&dword_1D5947000, v128, v129, "isCompletedWorkoutCountsUpdated: %{BOOL}d, isProgramProgressionUpdated: %{BOOL}d, isResumableSessionUpdated: %{BOOL}d", (uint8_t *)v130, 0x14u);
      MEMORY[0x1D945AAC0](v130, -1, -1);
    }

    uint64_t v131 = sub_1D5AB3D50();
    uint64_t v132 = sub_1D5AB3D50();
    if (*(void *)(v132 + 16) <= *(void *)(v131 + 16) >> 3)
    {
      uint64_t v297 = v131;
      sub_1D5A1B448(v132, &qword_1EA726AB8, MEMORY[0x1E4F9E708], (void (*)(char *))sub_1D5A8E5F8);
      swift_bridgeObjectRelease();
      uint64_t v133 = v297;
    }
    else
    {
      uint64_t v133 = sub_1D5A1BE24(v132, v131);
      swift_bridgeObjectRelease();
    }
    uint64_t v134 = sub_1D5A0F228(v133);
    swift_bridgeObjectRelease();
    uint64_t v135 = *(void *)(v295 + 40);
    uint64_t v136 = swift_getObjectType();
    uint64_t v137 = sub_1D594F598(v134);
    swift_bridgeObjectRelease();
    uint64_t v297 = v137;
    (*(void (**)(uint64_t *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v135 + 8))(&v297, &type metadata for ArchivedSessionsUpdated, &protocol witness table for ArchivedSessionsUpdated, v136, v135);
    swift_bridgeObjectRelease();
  }
  uint64_t v138 = (uint64_t)v290;
  uint64_t v139 = sub_1D5AB3CB0();
  uint64_t v140 = sub_1D5AB3CB0();
  char v141 = sub_1D5A0F934(v139, v140);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v142 = (uint64_t)v287;
  uint64_t v143 = (uint64_t)v288;
  if ((v141 & 1) == 0)
  {
    if (qword_1EBDE3D80 != -1) {
      swift_once();
    }
    uint64_t v144 = sub_1D5AB4B50();
    __swift_project_value_buffer(v144, (uint64_t)qword_1EBDE4120);
    v145 = sub_1D5AB4B30();
    os_log_type_t v146 = sub_1D5AB5430();
    if (os_log_type_enabled(v145, v146))
    {
      v147 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v147 = 67109120;
      LODWORD(v297) = 1;
      sub_1D5AB5680();
      _os_log_impl(&dword_1D5947000, v145, v146, "isCompletedTipCountsUpdated: %{BOOL}d", v147, 8u);
      MEMORY[0x1D945AAC0](v147, -1, -1);
    }

    uint64_t v148 = sub_1D5AB3CB0();
    uint64_t v149 = sub_1D5AB3CB0();
    if (*(void *)(v149 + 16) <= *(void *)(v148 + 16) >> 3)
    {
      uint64_t v297 = v148;
      sub_1D5A1B448(v149, &qword_1EA726AB8, MEMORY[0x1E4F9E708], (void (*)(char *))sub_1D5A8E5F8);
      swift_bridgeObjectRelease();
      uint64_t v150 = v297;
    }
    else
    {
      uint64_t v150 = sub_1D5A1BE24(v149, v148);
      swift_bridgeObjectRelease();
    }
    uint64_t v151 = sub_1D5A0F228(v150);
    swift_bridgeObjectRelease();
    uint64_t v152 = *(void *)(v295 + 40);
    uint64_t v153 = swift_getObjectType();
    uint64_t v154 = sub_1D594F598(v151);
    swift_bridgeObjectRelease();
    uint64_t v297 = v154;
    (*(void (**)(uint64_t *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v152 + 8))(&v297, &type metadata for CatalogTipJournalsUpdated, &protocol witness table for CatalogTipJournalsUpdated, v153, v152);
    swift_bridgeObjectRelease();
    uint64_t v142 = (uint64_t)v287;
  }
  uint64_t v155 = sub_1D5AB3C60();
  uint64_t v156 = sub_1D5AB3C60();
  char v157 = sub_1D5A13674(v155, v156);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v157 & 1) == 0)
  {
    uint64_t v158 = *(void *)(v295 + 40);
    uint64_t v159 = swift_getObjectType();
    (*(void (**)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v158 + 8))(v159, &type metadata for UpNextQueueItemsUpdated, &protocol witness table for UpNextQueueItemsUpdated, v159, v158);
  }
  uint64_t v160 = sub_1D5AB3E00();
  uint64_t v161 = sub_1D5AB3E00();
  char v162 = sub_1D5A11B88(v160, v161);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v162 & 1) == 0)
  {
    uint64_t v163 = sub_1D5AB3E00();
    uint64_t v164 = sub_1D5AB3E00();
    if (*(void *)(v164 + 16) <= *(void *)(v163 + 16) >> 3)
    {
      uint64_t v297 = v163;
      sub_1D5A1B448(v164, &qword_1EA726AC8, MEMORY[0x1E4F9EED0], (void (*)(char *))sub_1D5A8E2B8);
    }
    else
    {
      sub_1D5A1B760(v164, v163);
    }
    swift_bridgeObjectRelease();
    uint64_t v165 = sub_1D5AB3E00();
    uint64_t v166 = sub_1D5AB3E00();
    if (*(void *)(v166 + 16) <= *(void *)(v165 + 16) >> 3)
    {
      uint64_t v297 = v165;
      sub_1D5A1B448(v166, &qword_1EA726AC8, MEMORY[0x1E4F9EED0], (void (*)(char *))sub_1D5A8E2B8);
    }
    else
    {
      sub_1D5A1B760(v166, v165);
    }
    swift_bridgeObjectRelease();
    v167 = v249;
    sub_1D5AB3140();
    uint64_t v168 = *(void *)(v295 + 40);
    uint64_t v169 = swift_getObjectType();
    uint64_t v170 = v250;
    uint64_t v171 = (uint64_t)v251;
    uint64_t v172 = v252;
    (*(void (**)(char *, char *, uint64_t))(v250 + 16))(v251, v167, v252);
    (*(void (**)(uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v168 + 8))(v171, v253, &protocol witness table for PlaylistsUpdated, v169, v168);
    sub_1D5A1DDB8(v171, (uint64_t (*)(void))type metadata accessor for PlaylistsUpdated);
    (*(void (**)(char *, uint64_t))(v170 + 8))(v167, v172);
    uint64_t v143 = (uint64_t)v288;
    uint64_t v138 = (uint64_t)v290;
  }
  sub_1D5AB3C70();
  sub_1D5AB3C70();
  uint64_t v173 = v138 + *(int *)(v271 + 48);
  sub_1D596E6CC(v143, v138, &qword_1EA725B50);
  sub_1D596E6CC(v142, v173, &qword_1EA725B50);
  v174 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v289 + 48);
  if (v174(v138, 1, v293) == 1)
  {
    sub_1D594F53C(v142, &qword_1EA725B50);
    sub_1D594F53C(v143, &qword_1EA725B50);
    int v175 = v174(v173, 1, v293);
    if (v175 == 1) {
      v176 = &qword_1EA725B50;
    }
    else {
      v176 = &qword_1EA725B78;
    }
    if (v175 == 1) {
      char v177 = -1;
    }
    else {
      char v177 = 0;
    }
  }
  else
  {
    uint64_t v178 = (uint64_t)v262;
    sub_1D596E6CC(v138, (uint64_t)v262, &qword_1EA725B50);
    if (v174(v173, 1, v293) == 1)
    {
      sub_1D594F53C(v142, &qword_1EA725B50);
      sub_1D594F53C(v143, &qword_1EA725B50);
      (*(void (**)(uint64_t, uint64_t))(v289 + 8))(v178, v293);
      char v177 = 0;
      v176 = &qword_1EA725B78;
    }
    else
    {
      uint64_t v179 = v289;
      v180 = v238;
      uint64_t v181 = v293;
      (*(void (**)(char *, uint64_t, uint64_t))(v289 + 32))(v238, v173, v293);
      sub_1D5A1DE18(&qword_1EA725BC8, MEMORY[0x1E4F9C2B8]);
      LODWORD(v291) = sub_1D5AB4DD0();
      v182 = *(void (**)(char *, uint64_t))(v179 + 8);
      v182(v180, v181);
      v176 = &qword_1EA725B50;
      sub_1D594F53C(v142, &qword_1EA725B50);
      sub_1D594F53C(v143, &qword_1EA725B50);
      v182(v262, v181);
      char v177 = v291;
    }
  }
  uint64_t v183 = v292;
  sub_1D594F53C(v138, v176);
  uint64_t v184 = sub_1D5AB3D30();
  uint64_t v185 = sub_1D5AB3D30();
  char v186 = sub_1D5A11FCC(v184, v185);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v187 = sub_1D5AB3D80();
  uint64_t v188 = sub_1D5AB3D80();
  char v189 = sub_1D5A12410(v187, v188);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v190 = sub_1D5AB3D90();
  uint64_t v191 = sub_1D5AB3D90();
  char v192 = sub_1D5A12854(v190, v191);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v177 & 1) == 0 || (v186 & 1) == 0 || (v189 & 1) == 0 || (v192 & 1) == 0)
  {
    if (qword_1EBDE3D80 != -1) {
      swift_once();
    }
    uint64_t v193 = sub_1D5AB4B50();
    __swift_project_value_buffer(v193, (uint64_t)qword_1EBDE4120);
    v194 = sub_1D5AB4B30();
    os_log_type_t v195 = sub_1D5AB5430();
    if (os_log_type_enabled(v194, v195))
    {
      uint64_t v196 = swift_slowAlloc();
      *(_DWORD *)uint64_t v196 = 67109888;
      LODWORD(v297) = (v177 & 1) == 0;
      sub_1D5AB5680();
      *(_WORD *)(v196 + 8) = 1024;
      LODWORD(v297) = (v186 & 1) == 0;
      sub_1D5AB5680();
      *(_WORD *)(v196 + 14) = 1024;
      LODWORD(v297) = (v189 & 1) == 0;
      sub_1D5AB5680();
      *(_WORD *)(v196 + 20) = 1024;
      uint64_t v183 = v292;
      LODWORD(v297) = (v192 & 1) == 0;
      sub_1D5AB5680();
      _os_log_impl(&dword_1D5947000, v194, v195, "workoutPlansUpdated: %{BOOL}d  %{BOOL}d  %{BOOL}d  %{BOOL}d", (uint8_t *)v196, 0x1Au);
      MEMORY[0x1D945AAC0](v196, -1, -1);
    }

    uint64_t v197 = *(void *)(v295 + 40);
    uint64_t v198 = swift_getObjectType();
    v199 = *(uint64_t (**)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v197 + 8);
    uint64_t v200 = v199(v198, &type metadata for WorkoutPlansUpdated, &protocol witness table for WorkoutPlansUpdated, v198, v197);
    if ((v177 & 1) == 0) {
      v199(v200, &type metadata for ActiveWorkoutPlanUpdated, &protocol witness table for ActiveWorkoutPlanUpdated, v198, v197);
    }
  }
  v201 = v273;
  sub_1D5AB3DC0();
  v202 = v274;
  sub_1D5AB3DC0();
  sub_1D5A1DE18(&qword_1EA726A88, MEMORY[0x1E4F9EA50]);
  uint64_t v203 = v272;
  char v204 = sub_1D5AB4DD0();
  v205 = *(void (**)(char *, uint64_t))(v275 + 8);
  v205(v202, v203);
  v205(v201, v203);
  if ((v204 & 1) == 0)
  {
    uint64_t v206 = *(void *)(v295 + 40);
    uint64_t v207 = swift_getObjectType();
    uint64_t v208 = (uint64_t)v254;
    sub_1D5AB3DC0();
    v209 = *(void (**)(uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v206 + 8);
    uint64_t v210 = v206;
    uint64_t v183 = v292;
    v209(v208, v255, &protocol witness table for PersonalizationPrivacyPreferenceUpdated, v207, v210);
    sub_1D5A1DDB8(v208, (uint64_t (*)(void))type metadata accessor for PersonalizationPrivacyPreferenceUpdated);
  }
  uint64_t v211 = v295;
  uint64_t v212 = (uint64_t)v284;
  sub_1D5AB3D60();
  sub_1D5AB3D60();
  uint64_t v213 = v278;
  uint64_t v214 = v278 + *(int *)(v276 + 48);
  sub_1D596E6CC(v212, v278, &qword_1EBDE3340);
  sub_1D596E6CC(v183, v214, &qword_1EBDE3340);
  uint64_t v215 = v277;
  v216 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v277 + 48);
  uint64_t v217 = v279;
  if (v216(v213, 1, v279) == 1)
  {
    sub_1D594F53C(v183, &qword_1EBDE3340);
    sub_1D594F53C(v212, &qword_1EBDE3340);
    if (v216(v214, 1, v217) == 1)
    {
      sub_1D594F53C(v213, &qword_1EBDE3340);
      goto LABEL_93;
    }
  }
  else
  {
    uint64_t v218 = v256;
    sub_1D596E6CC(v213, v256, &qword_1EBDE3340);
    if (v216(v214, 1, v217) != 1)
    {
      uint64_t v219 = v218;
      v220 = v239;
      (*(void (**)(char *, uint64_t, uint64_t))(v215 + 32))(v239, v214, v217);
      sub_1D5A1DE18(&qword_1EA726A98, MEMORY[0x1E4F9DB88]);
      char v221 = sub_1D5AB4DD0();
      v222 = *(void (**)(char *, uint64_t))(v215 + 8);
      v222(v220, v217);
      sub_1D594F53C(v292, &qword_1EBDE3340);
      sub_1D594F53C((uint64_t)v284, &qword_1EBDE3340);
      v222((char *)v219, v217);
      sub_1D594F53C(v213, &qword_1EBDE3340);
      if (v221) {
        goto LABEL_93;
      }
      goto LABEL_92;
    }
    sub_1D594F53C(v292, &qword_1EBDE3340);
    sub_1D594F53C(v212, &qword_1EBDE3340);
    (*(void (**)(uint64_t, uint64_t))(v215 + 8))(v218, v217);
  }
  sub_1D594F53C(v213, &qword_1EA726A78);
LABEL_92:
  uint64_t v223 = *(void *)(v211 + 40);
  uint64_t v224 = swift_getObjectType();
  (*(void (**)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v223 + 8))(v224, &type metadata for OnboardingSurveyResultsUpdated, &protocol witness table for OnboardingSurveyResultsUpdated, v224, v223);
LABEL_93:
  v225 = v280;
  sub_1D5AB3C10();
  v226 = v281;
  sub_1D5AB3C10();
  sub_1D5A1DE18(&qword_1EA726A90, MEMORY[0x1E4F9E508]);
  uint64_t v227 = v283;
  char v228 = sub_1D5AB4DD0();
  v229 = *(void (**)(char *, uint64_t))(v282 + 8);
  v229(v226, v227);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v229)(v225, v227);
  if ((v228 & 1) == 0)
  {
    uint64_t v231 = *(void *)(v211 + 40);
    uint64_t v232 = swift_getObjectType();
    uint64_t v233 = (uint64_t)v257;
    sub_1D5AB3C10();
    (*(void (**)(uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v231 + 8))(v233, v258, &protocol witness table for AchievementEnvironmentCacheUpdated, v232, v231);
    return sub_1D5A1DDB8(v233, (uint64_t (*)(void))type metadata accessor for AchievementEnvironmentCacheUpdated);
  }
  return result;
}

uint64_t sub_1D5A162C0@<X0>(unsigned char *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726B30);
  uint64_t result = sub_1D5AB2350();
  *a1 = v3;
  return result;
}

uint64_t RemoteBrowsingSource.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t RemoteBrowsingSource.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

void RemoteBrowsingSource.appendJournalEntry(_:)()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = v1 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v1 + 16);
  char v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_1D5A168F8(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_1D5A16430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v37 = a3;
  uint64_t v39 = a2;
  uint64_t v5 = type metadata accessor for RemoteBrowsingJournalEntry();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v38 = (uint64_t)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D5AB37D0();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D5AB3E10();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)v36 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)v36 - v19;
  sub_1D5A1DCE8(a1, (uint64_t)v10, MEMORY[0x1E4F9DC80]);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726A58);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v10, 1, v21) == 1) {
    return sub_1D5A1DDB8((uint64_t)v10, MEMORY[0x1E4F9DC80]);
  }
  v36[0] = v6;
  v36[1] = v3;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v20, &v10[*(int *)(v21 + 48)], v11);
  uint64_t v23 = sub_1D5AB3190();
  (*(void (**)(char *, uint64_t))(*(void *)(v23 - 8) + 8))(v10, v23);
  if (qword_1EBDE3D80 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_1D5AB4B50();
  __swift_project_value_buffer(v24, (uint64_t)qword_1EBDE4120);
  v25._countAndFlagsBits = 0xD000000000000075;
  v25._object = (void *)0x80000001D5AC8BD0;
  v26._object = (void *)0x80000001D5AC8C90;
  v26._countAndFlagsBits = 0xD000000000000016;
  Logger.trace(file:function:)(v25, v26);
  uint64_t v27 = v39;
  uint64_t v28 = (unint64_t *)(v39 + 24);
  swift_beginAccess();
  uint64_t v29 = swift_bridgeObjectRetain();
  RemoteBrowsingEnvironment.applyingJournal(_:)(v29, (uint64_t)v18);
  swift_bridgeObjectRelease();
  sub_1D5A1DCE8(v37, v38, (uint64_t (*)(void))type metadata accessor for RemoteBrowsingJournalEntry);
  swift_beginAccess();
  unint64_t v30 = *(void *)(v27 + 24);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v27 + 24) = v30;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v30 = sub_1D5A769CC(0, *(void *)(v30 + 16) + 1, 1, v30);
    *uint64_t v28 = v30;
  }
  unint64_t v33 = *(void *)(v30 + 16);
  unint64_t v32 = *(void *)(v30 + 24);
  if (v33 >= v32 >> 1)
  {
    unint64_t v30 = sub_1D5A769CC(v32 > 1, v33 + 1, 1, v30);
    *uint64_t v28 = v30;
  }
  *(void *)(v30 + 16) = v33 + 1;
  sub_1D5A1DD50(v38, v30+ ((*(unsigned __int8 *)(v36[0] + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36[0] + 80))+ *(void *)(v36[0] + 72) * v33, (uint64_t (*)(void))type metadata accessor for RemoteBrowsingJournalEntry);
  swift_endAccess();
  uint64_t v34 = swift_bridgeObjectRetain();
  RemoteBrowsingEnvironment.applyingJournal(_:)(v34, (uint64_t)v15);
  swift_bridgeObjectRelease();
  sub_1D5A13BFC((uint64_t)v18, (uint64_t)v15);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v12 + 8);
  v35(v15, v11);
  v35(v18, v11);
  return ((uint64_t (*)(char *, uint64_t))v35)(v20, v11);
}

uint64_t sub_1D5A168F8(uint64_t a1)
{
  return sub_1D5A16430(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1D5A16914()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  uint64_t v2 = v1 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v1 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_1D5A1DE90(v2);
  os_unfair_lock_unlock(v3);
}

void RemoteBrowsingSource.queryActiveParticipant()(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = v3 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v3 + 16);
  uint64_t v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_1D5A16A68(v4, a1);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_1D5A16A68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB37D0();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A1DCE8(a1, (uint64_t)v6, MEMORY[0x1E4F9DC80]);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726A58);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7) == 1)
  {
    uint64_t v8 = sub_1D5AB3190();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a2, 1, 1, v8);
  }
  else
  {
    uint64_t v10 = &v6[*(int *)(v7 + 48)];
    uint64_t v11 = sub_1D5AB3190();
    uint64_t v12 = *(void *)(v11 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a2, v6, v11);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(a2, 0, 1, v11);
    uint64_t v13 = sub_1D5AB3E10();
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v10, v13);
  }
}

void RemoteBrowsingSource.queryActiveEnvironment()(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = v3 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v3 + 16);
  uint64_t v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_1D5A16F7C(v4, a1);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_1D5A16D14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB3E10();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D5AB37D0();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A1DCE8(a1, (uint64_t)v10, MEMORY[0x1E4F9DC80]);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726A58);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11) == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, 1, 1, v4);
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, &v10[*(int *)(v11 + 48)], v4);
  swift_beginAccess();
  uint64_t v13 = swift_bridgeObjectRetain();
  RemoteBrowsingEnvironment.applyingJournal(_:)(v13, a2);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
  uint64_t v14 = sub_1D5AB3190();
  return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v10, v14);
}

uint64_t sub_1D5A16F7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D5A16D14(a1, a2);
}

uint64_t RemoteBrowsingSource.remoteDeviceForSession()()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = v1 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v1 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_1D5A1703C(v2, (char *)&v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

void sub_1D5A1703C(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v5 = sub_1D5AB3190();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v34 - v10;
  uint64_t v12 = sub_1D5AB37D0();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A1DCE8(a1, (uint64_t)v14, MEMORY[0x1E4F9DC80]);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726A58);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15) == 1)
  {
    if (qword_1EBDE5420 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1D5AB4B50();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EBDE5400);
    uint64_t v17 = sub_1D5AB4B30();
    os_log_type_t v18 = sub_1D5AB5410();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl(&dword_1D5947000, v17, v18, "[RemoteBrowsingSource] Couldn't determine remote device while in anonymous state.", v19, 2u);
      MEMORY[0x1D945AAC0](v19, -1, -1);
    }

    *a2 = 3;
  }
  else
  {
    uint64_t v20 = &v14[*(int *)(v15 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v14, v5);
    if (sub_1D5AB3160() == 4)
    {
      uint64_t v37 = v20;
      uint64_t v38 = a2;
      if (qword_1EBDE5420 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_1D5AB4B50();
      __swift_project_value_buffer(v21, (uint64_t)qword_1EBDE5400);
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
      uint64_t v22 = sub_1D5AB4B30();
      os_log_type_t v23 = sub_1D5AB5410();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        uint64_t v35 = swift_slowAlloc();
        uint64_t v40 = v35;
        uint64_t v36 = v2;
        *(_DWORD *)uint64_t v24 = 136315138;
        uint64_t v34 = v24 + 4;
        sub_1D5A1DE18(&qword_1EA726B50, MEMORY[0x1E4F9D178]);
        uint64_t v25 = sub_1D5AB5AB0();
        uint64_t v39 = sub_1D5951500(v25, v26, &v40);
        sub_1D5AB5680();
        swift_bridgeObjectRelease();
        uint64_t v27 = *(void (**)(char *, uint64_t))(v6 + 8);
        v27(v9, v5);
        _os_log_impl(&dword_1D5947000, v22, v23, "[RemoteBrowsingSource] Couldn't determine remote device with null device on participant %s", v24, 0xCu);
        uint64_t v28 = v35;
        swift_arrayDestroy();
        MEMORY[0x1D945AAC0](v28, -1, -1);
        MEMORY[0x1D945AAC0](v24, -1, -1);

        v27(v11, v5);
      }
      else
      {

        unint64_t v30 = *(void (**)(char *, uint64_t))(v6 + 8);
        v30(v9, v5);
        v30(v11, v5);
      }
      *uint64_t v38 = 3;
      uint64_t v31 = sub_1D5AB3E10();
      (*(void (**)(char *, uint64_t))(*(void *)(v31 - 8) + 8))(v37, v31);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      switch(v29)
      {
        case 1:
          char v32 = 1;
          goto LABEL_19;
        case 2:
          char v32 = 2;
          goto LABEL_19;
        case 3:
          char v32 = 3;
LABEL_19:
          *a2 = v32;
          break;
        default:
          *a2 = 0;
          break;
      }
      uint64_t v33 = sub_1D5AB3E10();
      (*(void (**)(char *, uint64_t))(*(void *)(v33 - 8) + 8))(v20, v33);
    }
  }
}

void sub_1D5A175C4(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 16);
  uint64_t v4 = v3 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v3 + 16);
  uint64_t v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_1D5A16A68(v4, a1);
  os_unfair_lock_unlock(v5);
}

void sub_1D5A17678(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 16);
  uint64_t v4 = v3 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v3 + 16);
  uint64_t v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_1D5A16F7C(v4, a1);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_1D5A17728@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return RemoteBrowsingSource.applyActiveEnvironment<A>(to:)(a1, a2, a3, a4);
}

uint64_t RemoteBrowsingSource.applyActiveEnvironment<A>(to:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v19[0] = a1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726A68);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D5AB3E10();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v4 + 16);
  uint64_t v16 = v15 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v15 + 16);
  uint64_t v17 = (os_unfair_lock_s *)(v15 + ((*(unsigned int *)(*(void *)v15 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v17);
  sub_1D5A16F7C(v16, (uint64_t)v10);
  os_unfair_lock_unlock(v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1D594F53C((uint64_t)v10, &qword_1EA726A68);
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(a2 - 8) + 16))(a4, v19[0], a2);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    (*(void (**)(char *, uint64_t, uint64_t))(a3 + 8))(v14, a2, a3);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_1D5A179A0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  uint64_t v2 = v1 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v1 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_1D5A1703C(v2, (char *)&v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

void RemoteBrowsingSource.updateActiveIdentity(_:)()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = v1 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v1 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_1D5A17D6C(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_1D5A17AE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for RemoteBrowsingIdentityUpdated();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D5AB37D0();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A1DCE8(a1, (uint64_t)v11, MEMORY[0x1E4F9DC80]);
  char v12 = MEMORY[0x1D9457BB0](a2, v11);
  uint64_t result = sub_1D5A1DDB8((uint64_t)v11, MEMORY[0x1E4F9DC80]);
  if ((v12 & 1) == 0)
  {
    sub_1D5A1DDB8(a1, MEMORY[0x1E4F9DC80]);
    if (qword_1EBDE3D80 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1D5AB4B50();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EBDE4120);
    v15._countAndFlagsBits = 0xD000000000000075;
    v15._object = (void *)0x80000001D5AC8BD0;
    v16._object = (void *)0x80000001D5AC8C70;
    v16._countAndFlagsBits = 0xD000000000000018;
    Logger.trace(file:function:)(v15, v16);
    uint64_t v17 = (uint64_t (*)(void))MEMORY[0x1E4F9DC80];
    sub_1D5A1DCE8(a2, a1, MEMORY[0x1E4F9DC80]);
    swift_beginAccess();
    *(void *)(a3 + 24) = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRelease();
    uint64_t v18 = *(void *)(a3 + 40);
    uint64_t ObjectType = swift_getObjectType();
    sub_1D5A1DCE8(a2, (uint64_t)v8, v17);
    (*(void (**)(char *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v18 + 8))(v8, v6, &protocol witness table for RemoteBrowsingIdentityUpdated, ObjectType, v18);
    return sub_1D5A1DDB8((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for RemoteBrowsingIdentityUpdated);
  }
  return result;
}

uint64_t sub_1D5A17D6C(uint64_t a1)
{
  return sub_1D5A17AE8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void RemoteBrowsingSource.updateActiveEnvironment(_:)()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = v1 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v1 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_1D5A183C4(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_1D5A17E28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v52 = a3;
  uint64_t v6 = sub_1D5AB37D0();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D5AB3E10();
  uint64_t v54 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v51 = (uint64_t)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v50 = (uint64_t)&v43 - v13;
  MEMORY[0x1F4188790](v12);
  Swift::String v15 = (char *)&v43 - v14;
  uint64_t v16 = sub_1D5AB3190();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a1;
  sub_1D5A1DCE8(a1, (uint64_t)v8, MEMORY[0x1E4F9DC80]);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726A58);
  uint64_t v48 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v8, 1, v20) == 1) {
    return sub_1D5A1DDB8((uint64_t)v8, MEMORY[0x1E4F9DC80]);
  }
  uint64_t v53 = v3;
  uint64_t v22 = &v8[*(int *)(v20 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v8, v16);
  (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v15, v22, v9);
  sub_1D5A1DE18(&qword_1EA726A70, MEMORY[0x1E4F9E3B8]);
  if (sub_1D5AB4DD0())
  {
    (*(void (**)(char *, uint64_t))(v54 + 8))(v15, v9);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  else
  {
    uint64_t v46 = v9;
    uint64_t v47 = v15;
    uint64_t v23 = v54;
    uint64_t v24 = v52;
    uint64_t v25 = swift_beginAccess();
    uint64_t v26 = *(void *)(v24 + 24);
    MEMORY[0x1F4188790](v25);
    *(&v43 - 2) = a2;
    swift_bridgeObjectRetain();
    uint64_t v27 = v26;
    uint64_t v28 = v53;
    uint64_t v29 = sub_1D5A130C8((uint64_t (*)(char *))sub_1D5A18EA0, (uint64_t)(&v43 - 4), v27);
    uint64_t v53 = v28;
    uint64_t v30 = v49;
    sub_1D5A1DDB8(v49, MEMORY[0x1E4F9DC80]);
    *(void *)(v24 + 24) = v29;
    swift_bridgeObjectRelease();
    if (qword_1EBDE3D80 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_1D5AB4B50();
    __swift_project_value_buffer(v31, (uint64_t)qword_1EBDE4120);
    v32._countAndFlagsBits = 0xD000000000000075;
    v32._object = (void *)0x80000001D5AC8BD0;
    v33._object = (void *)0x80000001D5AC8C50;
    v33._countAndFlagsBits = 0xD00000000000001BLL;
    Logger.trace(file:function:)(v32, v33);
    uint64_t v34 = v30 + *(int *)(v20 + 48);
    uint64_t v35 = *(void (**)(uint64_t, char *, uint64_t))(v17 + 16);
    uint64_t v44 = v16;
    uint64_t v45 = v19;
    v35(v30, v19, v16);
    uint64_t v36 = v46;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v34, a2, v46);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v48 + 56))(v30, 0, 1, v20);
    uint64_t v37 = swift_bridgeObjectRetain();
    uint64_t v38 = v50;
    uint64_t v39 = v47;
    RemoteBrowsingEnvironment.applyingJournal(_:)(v37, v50);
    swift_bridgeObjectRelease();
    uint64_t v40 = swift_bridgeObjectRetain();
    uint64_t v41 = v51;
    RemoteBrowsingEnvironment.applyingJournal(_:)(v40, v51);
    swift_bridgeObjectRelease();
    sub_1D5A13BFC(v38, v41);
    uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    v42(v41, v36);
    v42(v38, v36);
    v42((uint64_t)v39, v36);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v45, v44);
  }
}

uint64_t sub_1D5A183C4(uint64_t a1)
{
  return sub_1D5A17E28(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1D5A183E0(uint64_t a1, uint64_t a2)
{
  uint64_t v70 = a2;
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726B40);
  MEMORY[0x1F4188790](v68);
  uint64_t v69 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725B50);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v76 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726B48);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v67 = (uint64_t)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v71 = (uint64_t)&v62 - v10;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v78 = (uint64_t)&v62 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v77 = (char *)&v62 - v13;
  uint64_t v14 = sub_1D5AB3800();
  uint64_t v74 = *(void *)(v14 - 8);
  uint64_t v75 = v14;
  MEMORY[0x1F4188790](v14);
  char v72 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_1D5AB1D20();
  uint64_t v79 = *(void *)(v73 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v73);
  uint64_t v66 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v62 - v18;
  uint64_t v20 = type metadata accessor for RemoteBrowsingJournalEntry();
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v22 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for RemoteBrowsingJournalProperty();
  uint64_t v24 = MEMORY[0x1F4188790](v23);
  uint64_t v26 = (char *)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v28 = (char *)&v62 - v27;
  uint64_t v29 = sub_1D5AB4050();
  uint64_t v30 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  Swift::String v32 = (char *)&v62 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A1DCE8(a1, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for RemoteBrowsingJournalEntry);
  sub_1D5A1DD50((uint64_t)v22, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for RemoteBrowsingJournalProperty);
  sub_1D5A1DD50((uint64_t)v26, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for RemoteBrowsingJournalProperty);
  if (swift_getEnumCaseMultiPayload() == 24)
  {
    Swift::String v33 = v76;
    uint64_t v65 = v19;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v32, v28, v29);
    uint64_t v34 = v72;
    sub_1D5AB4020();
    uint64_t v35 = (uint64_t)v77;
    sub_1D5AB37E0();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v34, v75);
    uint64_t v36 = v79;
    uint64_t v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48);
    uint64_t v38 = v73;
    if (v37(v35, 1, v73) != 1)
    {
      char v72 = v32;
      uint64_t v74 = v30;
      uint64_t v75 = v29;
      uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v36 + 32);
      uint64_t v42 = v65;
      uint64_t v77 = (char *)(v36 + 32);
      char v63 = v41;
      uint64_t v64 = v37;
      v41(v65, v35, v38);
      uint64_t v43 = v78;
      (*(void (**)(uint64_t, char *, uint64_t))(v36 + 16))(v78, v42, v38);
      uint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56);
      uint64_t v45 = v43;
      uint64_t v46 = v38;
      v44(v45, 0, 1, v38);
      uint64_t v47 = (uint64_t)v33;
      sub_1D5AB3C70();
      uint64_t v48 = sub_1D5AB2210();
      uint64_t v49 = *(void *)(v48 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48) == 1)
      {
        sub_1D594F53C(v47, &qword_1EA725B50);
        uint64_t v50 = 1;
        uint64_t v51 = (uint64_t)v69;
        uint64_t v52 = v71;
      }
      else
      {
        uint64_t v52 = v71;
        sub_1D5AB2190();
        (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v47, v48);
        uint64_t v50 = 0;
        uint64_t v51 = (uint64_t)v69;
      }
      uint64_t v53 = v68;
      uint64_t v54 = v46;
      v44(v52, v50, 1, v46);
      uint64_t v55 = v51 + *(int *)(v53 + 48);
      uint64_t v56 = v78;
      sub_1D596E6CC(v78, v51, &qword_1EA726B48);
      sub_1D596E6CC(v52, v55, &qword_1EA726B48);
      uint64_t v57 = v64;
      if (v64(v51, 1, v54) == 1)
      {
        sub_1D594F53C(v52, &qword_1EA726B48);
        sub_1D594F53C(v56, &qword_1EA726B48);
        (*(void (**)(char *, uint64_t))(v79 + 8))(v65, v54);
        (*(void (**)(char *, uint64_t))(v74 + 8))(v72, v75);
        if (v57(v55, 1, v54) == 1)
        {
          sub_1D594F53C(v51, &qword_1EA726B48);
          char v39 = 1;
          return v39 & 1;
        }
      }
      else
      {
        uint64_t v58 = v67;
        sub_1D596E6CC(v51, v67, &qword_1EA726B48);
        if (v57(v55, 1, v54) != 1)
        {
          unint64_t v60 = v66;
          v63(v66, v55, v54);
          sub_1D5A1DE18(&qword_1EA7255C0, MEMORY[0x1E4F27990]);
          char v39 = sub_1D5AB4DD0();
          uint64_t v61 = *(void (**)(char *, uint64_t))(v79 + 8);
          v61(v60, v54);
          sub_1D594F53C(v71, &qword_1EA726B48);
          sub_1D594F53C(v78, &qword_1EA726B48);
          v61(v65, v54);
          (*(void (**)(char *, uint64_t))(v74 + 8))(v72, v75);
          v61((char *)v58, v54);
          sub_1D594F53C(v51, &qword_1EA726B48);
          return v39 & 1;
        }
        sub_1D594F53C(v71, &qword_1EA726B48);
        sub_1D594F53C(v78, &qword_1EA726B48);
        uint64_t v59 = *(void (**)(char *, uint64_t))(v79 + 8);
        v59(v65, v54);
        (*(void (**)(char *, uint64_t))(v74 + 8))(v72, v75);
        v59((char *)v58, v54);
      }
      sub_1D594F53C(v51, &qword_1EA726B40);
      char v39 = 0;
      return v39 & 1;
    }
    (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v29);
    sub_1D594F53C(v35, &qword_1EA726B48);
    char v39 = 0;
  }
  else
  {
    sub_1D5A1DDB8((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for RemoteBrowsingJournalProperty);
    char v39 = 1;
  }
  return v39 & 1;
}

void sub_1D5A18D08()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  uint64_t v2 = v1 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v1 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_1D5A1DE78(v2);
  os_unfair_lock_unlock(v3);
}

void sub_1D5A18DAC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  uint64_t v2 = v1 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v1 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_1D5A1DE60(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t type metadata accessor for RemoteBrowsingSource()
{
  return self;
}

uint64_t method lookup function for RemoteBrowsingSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RemoteBrowsingSource);
}

uint64_t dispatch thunk of RemoteBrowsingSource.__allocating_init(eventHub:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1D5A18EA0(uint64_t a1)
{
  return sub_1D5A183E0(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_1D5A18EC0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a1;
  uint64_t v7 = sub_1D5AB37B0();
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726B78);
  uint64_t result = sub_1D5AB57D0();
  uint64_t v10 = result;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v34;
  }
  uint64_t v13 = 0;
  uint64_t v14 = result + 56;
  uint64_t v35 = (uint64_t (**)(unint64_t, char *, uint64_t))(v37 + 32);
  uint64_t v36 = v37 + 16;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
    }
    else
    {
      uint64_t v17 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v33)
      {
LABEL_37:
        swift_release();
        return v10;
      }
      unint64_t v18 = v34[v17];
      ++v13;
      if (!v18)
      {
        uint64_t v13 = v17 + 1;
        if (v17 + 1 >= v33) {
          goto LABEL_37;
        }
        unint64_t v18 = v34[v13];
        if (!v18)
        {
          uint64_t v13 = v17 + 2;
          if (v17 + 2 >= v33) {
            goto LABEL_37;
          }
          unint64_t v18 = v34[v13];
          if (!v18)
          {
            uint64_t v19 = v17 + 3;
            if (v19 >= v33) {
              goto LABEL_37;
            }
            unint64_t v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                uint64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_37;
                }
                unint64_t v18 = v34[v13];
                ++v19;
                if (v18) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v13 = v19;
          }
        }
      }
LABEL_24:
      unint64_t v12 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    }
    uint64_t v20 = a4;
    uint64_t v21 = *(void *)(a4 + 48);
    uint64_t v22 = *(void *)(v37 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v9, v21 + v22 * v16, v7);
    sub_1D5A1DE18(&qword_1EA7256D0, MEMORY[0x1E4F9DC50]);
    uint64_t result = sub_1D5AB4D90();
    uint64_t v23 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v14 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v14 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t result = (*v35)(*(void *)(v10 + 48) + v26 * v22, v9, v7);
    ++*(void *)(v10 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v20;
    if (!a3) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1D5A1924C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a1;
  uint64_t v7 = sub_1D5AB2FF0();
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA728000);
  uint64_t result = sub_1D5AB57D0();
  uint64_t v10 = result;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v34;
  }
  uint64_t v13 = 0;
  uint64_t v14 = result + 56;
  uint64_t v35 = (uint64_t (**)(unint64_t, char *, uint64_t))(v37 + 32);
  uint64_t v36 = v37 + 16;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
    }
    else
    {
      uint64_t v17 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v33)
      {
LABEL_37:
        swift_release();
        return v10;
      }
      unint64_t v18 = v34[v17];
      ++v13;
      if (!v18)
      {
        uint64_t v13 = v17 + 1;
        if (v17 + 1 >= v33) {
          goto LABEL_37;
        }
        unint64_t v18 = v34[v13];
        if (!v18)
        {
          uint64_t v13 = v17 + 2;
          if (v17 + 2 >= v33) {
            goto LABEL_37;
          }
          unint64_t v18 = v34[v13];
          if (!v18)
          {
            uint64_t v19 = v17 + 3;
            if (v19 >= v33) {
              goto LABEL_37;
            }
            unint64_t v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                uint64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_37;
                }
                unint64_t v18 = v34[v13];
                ++v19;
                if (v18) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v13 = v19;
          }
        }
      }
LABEL_24:
      unint64_t v12 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    }
    uint64_t v20 = a4;
    uint64_t v21 = *(void *)(a4 + 48);
    uint64_t v22 = *(void *)(v37 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v9, v21 + v22 * v16, v7);
    sub_1D5A1DE18(&qword_1EA727FF0, MEMORY[0x1E4F9CE40]);
    uint64_t result = sub_1D5AB4D90();
    uint64_t v23 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v14 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v14 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t result = (*v35)(*(void *)(v10 + 48) + v26 * v22, v9, v7);
    ++*(void *)(v10 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v20;
    if (!a3) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1D5A195D8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a1;
  uint64_t v7 = sub_1D5AB3BF0();
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726B70);
  uint64_t result = sub_1D5AB57D0();
  uint64_t v10 = result;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v34;
  }
  uint64_t v13 = 0;
  uint64_t v14 = result + 56;
  uint64_t v35 = (uint64_t (**)(unint64_t, char *, uint64_t))(v37 + 32);
  uint64_t v36 = v37 + 16;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
    }
    else
    {
      uint64_t v17 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v33)
      {
LABEL_37:
        swift_release();
        return v10;
      }
      unint64_t v18 = v34[v17];
      ++v13;
      if (!v18)
      {
        uint64_t v13 = v17 + 1;
        if (v17 + 1 >= v33) {
          goto LABEL_37;
        }
        unint64_t v18 = v34[v13];
        if (!v18)
        {
          uint64_t v13 = v17 + 2;
          if (v17 + 2 >= v33) {
            goto LABEL_37;
          }
          unint64_t v18 = v34[v13];
          if (!v18)
          {
            uint64_t v19 = v17 + 3;
            if (v19 >= v33) {
              goto LABEL_37;
            }
            unint64_t v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                uint64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_37;
                }
                unint64_t v18 = v34[v13];
                ++v19;
                if (v18) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v13 = v19;
          }
        }
      }
LABEL_24:
      unint64_t v12 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    }
    uint64_t v20 = a4;
    uint64_t v21 = *(void *)(a4 + 48);
    uint64_t v22 = *(void *)(v37 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v9, v21 + v22 * v16, v7);
    sub_1D5A1DE18(&qword_1EA725670, MEMORY[0x1E4F9E380]);
    uint64_t result = sub_1D5AB4D90();
    uint64_t v23 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v14 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v14 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t result = (*v35)(*(void *)(v10 + 48) + v26 * v22, v9, v7);
    ++*(void *)(v10 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v20;
    if (!a3) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1D5A19964(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a1;
  uint64_t v7 = sub_1D5AB3B00();
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA728050);
  uint64_t result = sub_1D5AB57D0();
  uint64_t v10 = result;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v34;
  }
  uint64_t v13 = 0;
  uint64_t v14 = result + 56;
  uint64_t v35 = (uint64_t (**)(unint64_t, char *, uint64_t))(v37 + 32);
  uint64_t v36 = v37 + 16;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
    }
    else
    {
      uint64_t v17 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v33)
      {
LABEL_37:
        swift_release();
        return v10;
      }
      unint64_t v18 = v34[v17];
      ++v13;
      if (!v18)
      {
        uint64_t v13 = v17 + 1;
        if (v17 + 1 >= v33) {
          goto LABEL_37;
        }
        unint64_t v18 = v34[v13];
        if (!v18)
        {
          uint64_t v13 = v17 + 2;
          if (v17 + 2 >= v33) {
            goto LABEL_37;
          }
          unint64_t v18 = v34[v13];
          if (!v18)
          {
            uint64_t v19 = v17 + 3;
            if (v19 >= v33) {
              goto LABEL_37;
            }
            unint64_t v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                uint64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_37;
                }
                unint64_t v18 = v34[v13];
                ++v19;
                if (v18) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v13 = v19;
          }
        }
      }
LABEL_24:
      unint64_t v12 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    }
    uint64_t v20 = a4;
    uint64_t v21 = *(void *)(a4 + 48);
    uint64_t v22 = *(void *)(v37 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v9, v21 + v22 * v16, v7);
    sub_1D5A1DE18(&qword_1EA728040, MEMORY[0x1E4F9E170]);
    uint64_t result = sub_1D5AB4D90();
    uint64_t v23 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v14 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v14 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t result = (*v35)(*(void *)(v10 + 48) + v26 * v22, v9, v7);
    ++*(void *)(v10 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v20;
    if (!a3) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1D5A19CF0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a1;
  uint64_t v7 = sub_1D5AB3AA0();
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726B68);
  uint64_t result = sub_1D5AB57D0();
  uint64_t v10 = result;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v34;
  }
  uint64_t v13 = 0;
  uint64_t v14 = result + 56;
  uint64_t v35 = (uint64_t (**)(unint64_t, char *, uint64_t))(v37 + 32);
  uint64_t v36 = v37 + 16;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
    }
    else
    {
      uint64_t v17 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v33)
      {
LABEL_37:
        swift_release();
        return v10;
      }
      unint64_t v18 = v34[v17];
      ++v13;
      if (!v18)
      {
        uint64_t v13 = v17 + 1;
        if (v17 + 1 >= v33) {
          goto LABEL_37;
        }
        unint64_t v18 = v34[v13];
        if (!v18)
        {
          uint64_t v13 = v17 + 2;
          if (v17 + 2 >= v33) {
            goto LABEL_37;
          }
          unint64_t v18 = v34[v13];
          if (!v18)
          {
            uint64_t v19 = v17 + 3;
            if (v19 >= v33) {
              goto LABEL_37;
            }
            unint64_t v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                uint64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_37;
                }
                unint64_t v18 = v34[v13];
                ++v19;
                if (v18) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v13 = v19;
          }
        }
      }
LABEL_24:
      unint64_t v12 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    }
    uint64_t v20 = a4;
    uint64_t v21 = *(void *)(a4 + 48);
    uint64_t v22 = *(void *)(v37 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v9, v21 + v22 * v16, v7);
    sub_1D5A1DE18(&qword_1EA7256A0, MEMORY[0x1E4F9E0A0]);
    uint64_t result = sub_1D5AB4D90();
    uint64_t v23 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v14 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v14 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t result = (*v35)(*(void *)(v10 + 48) + v26 * v22, v9, v7);
    ++*(void *)(v10 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v20;
    if (!a3) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1D5A1A07C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a1;
  uint64_t v7 = sub_1D5AB2B60();
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726B60);
  uint64_t result = sub_1D5AB57D0();
  uint64_t v10 = result;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v34;
  }
  uint64_t v13 = 0;
  uint64_t v14 = result + 56;
  uint64_t v35 = (uint64_t (**)(unint64_t, char *, uint64_t))(v37 + 32);
  uint64_t v36 = v37 + 16;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
    }
    else
    {
      uint64_t v17 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v33)
      {
LABEL_37:
        swift_release();
        return v10;
      }
      unint64_t v18 = v34[v17];
      ++v13;
      if (!v18)
      {
        uint64_t v13 = v17 + 1;
        if (v17 + 1 >= v33) {
          goto LABEL_37;
        }
        unint64_t v18 = v34[v13];
        if (!v18)
        {
          uint64_t v13 = v17 + 2;
          if (v17 + 2 >= v33) {
            goto LABEL_37;
          }
          unint64_t v18 = v34[v13];
          if (!v18)
          {
            uint64_t v19 = v17 + 3;
            if (v19 >= v33) {
              goto LABEL_37;
            }
            unint64_t v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                uint64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_37;
                }
                unint64_t v18 = v34[v13];
                ++v19;
                if (v18) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v13 = v19;
          }
        }
      }
LABEL_24:
      unint64_t v12 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    }
    uint64_t v20 = a4;
    uint64_t v21 = *(void *)(a4 + 48);
    uint64_t v22 = *(void *)(v37 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v9, v21 + v22 * v16, v7);
    sub_1D5A1DE18(&qword_1EA726B18, MEMORY[0x1E4F9C7D0]);
    uint64_t result = sub_1D5AB4D90();
    uint64_t v23 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v14 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v14 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t result = (*v35)(*(void *)(v10 + 48) + v26 * v22, v9, v7);
    ++*(void *)(v10 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v20;
    if (!a3) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1D5A1A408(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a1;
  uint64_t v7 = sub_1D5AB40E0();
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA727F70);
  uint64_t result = sub_1D5AB57D0();
  uint64_t v10 = result;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v34;
  }
  uint64_t v13 = 0;
  uint64_t v14 = result + 56;
  uint64_t v35 = (uint64_t (**)(unint64_t, char *, uint64_t))(v37 + 32);
  uint64_t v36 = v37 + 16;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
    }
    else
    {
      uint64_t v17 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v33)
      {
LABEL_37:
        swift_release();
        return v10;
      }
      unint64_t v18 = v34[v17];
      ++v13;
      if (!v18)
      {
        uint64_t v13 = v17 + 1;
        if (v17 + 1 >= v33) {
          goto LABEL_37;
        }
        unint64_t v18 = v34[v13];
        if (!v18)
        {
          uint64_t v13 = v17 + 2;
          if (v17 + 2 >= v33) {
            goto LABEL_37;
          }
          unint64_t v18 = v34[v13];
          if (!v18)
          {
            uint64_t v19 = v17 + 3;
            if (v19 >= v33) {
              goto LABEL_37;
            }
            unint64_t v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                uint64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_37;
                }
                unint64_t v18 = v34[v13];
                ++v19;
                if (v18) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v13 = v19;
          }
        }
      }
LABEL_24:
      unint64_t v12 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    }
    uint64_t v20 = a4;
    uint64_t v21 = *(void *)(a4 + 48);
    uint64_t v22 = *(void *)(v37 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v9, v21 + v22 * v16, v7);
    sub_1D5A1DE18((unint64_t *)&unk_1EA727F60, MEMORY[0x1E4F9E708]);
    uint64_t result = sub_1D5AB4D90();
    uint64_t v23 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v14 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v14 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t result = (*v35)(*(void *)(v10 + 48) + v26 * v22, v9, v7);
    ++*(void *)(v10 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v20;
    if (!a3) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1D5A1A794(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a1;
  uint64_t v7 = sub_1D5AB4900();
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726AB0);
  uint64_t result = sub_1D5AB57D0();
  uint64_t v10 = result;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v34;
  }
  uint64_t v13 = 0;
  uint64_t v14 = result + 56;
  uint64_t v35 = (uint64_t (**)(unint64_t, char *, uint64_t))(v37 + 32);
  uint64_t v36 = v37 + 16;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
    }
    else
    {
      uint64_t v17 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v33)
      {
LABEL_37:
        swift_release();
        return v10;
      }
      unint64_t v18 = v34[v17];
      ++v13;
      if (!v18)
      {
        uint64_t v13 = v17 + 1;
        if (v17 + 1 >= v33) {
          goto LABEL_37;
        }
        unint64_t v18 = v34[v13];
        if (!v18)
        {
          uint64_t v13 = v17 + 2;
          if (v17 + 2 >= v33) {
            goto LABEL_37;
          }
          unint64_t v18 = v34[v13];
          if (!v18)
          {
            uint64_t v19 = v17 + 3;
            if (v19 >= v33) {
              goto LABEL_37;
            }
            unint64_t v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                uint64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_37;
                }
                unint64_t v18 = v34[v13];
                ++v19;
                if (v18) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v13 = v19;
          }
        }
      }
LABEL_24:
      unint64_t v12 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    }
    uint64_t v20 = a4;
    uint64_t v21 = *(void *)(a4 + 48);
    uint64_t v22 = *(void *)(v37 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v9, v21 + v22 * v16, v7);
    sub_1D5A1DE18(&qword_1EA7256C8, MEMORY[0x1E4F9EDF8]);
    uint64_t result = sub_1D5AB4D90();
    uint64_t v23 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v14 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v14 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t result = (*v35)(*(void *)(v10 + 48) + v26 * v22, v9, v7);
    ++*(void *)(v10 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v20;
    if (!a3) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1D5A1AB20(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a1;
  uint64_t v7 = sub_1D5AB3010();
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA728080);
  uint64_t result = sub_1D5AB57D0();
  uint64_t v10 = result;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v34;
  }
  uint64_t v13 = 0;
  uint64_t v14 = result + 56;
  uint64_t v35 = (uint64_t (**)(unint64_t, char *, uint64_t))(v37 + 32);
  uint64_t v36 = v37 + 16;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
    }
    else
    {
      uint64_t v17 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v33)
      {
LABEL_37:
        swift_release();
        return v10;
      }
      unint64_t v18 = v34[v17];
      ++v13;
      if (!v18)
      {
        uint64_t v13 = v17 + 1;
        if (v17 + 1 >= v33) {
          goto LABEL_37;
        }
        unint64_t v18 = v34[v13];
        if (!v18)
        {
          uint64_t v13 = v17 + 2;
          if (v17 + 2 >= v33) {
            goto LABEL_37;
          }
          unint64_t v18 = v34[v13];
          if (!v18)
          {
            uint64_t v19 = v17 + 3;
            if (v19 >= v33) {
              goto LABEL_37;
            }
            unint64_t v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                uint64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_37;
                }
                unint64_t v18 = v34[v13];
                ++v19;
                if (v18) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v13 = v19;
          }
        }
      }
LABEL_24:
      unint64_t v12 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    }
    uint64_t v20 = a4;
    uint64_t v21 = *(void *)(a4 + 48);
    uint64_t v22 = *(void *)(v37 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v9, v21 + v22 * v16, v7);
    sub_1D5A1DE18((unint64_t *)&unk_1EA728070, MEMORY[0x1E4F9CE78]);
    uint64_t result = sub_1D5AB4D90();
    uint64_t v23 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v14 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v14 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t result = (*v35)(*(void *)(v10 + 48) + v26 * v22, v9, v7);
    ++*(void *)(v10 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v20;
    if (!a3) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1D5A1AEAC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a1;
  uint64_t v7 = sub_1D5AB49D0();
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726AD0);
  uint64_t result = sub_1D5AB57D0();
  uint64_t v10 = result;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v34;
  }
  uint64_t v13 = 0;
  uint64_t v14 = result + 56;
  uint64_t v35 = (uint64_t (**)(unint64_t, char *, uint64_t))(v37 + 32);
  uint64_t v36 = v37 + 16;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
    }
    else
    {
      uint64_t v17 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v33)
      {
LABEL_37:
        swift_release();
        return v10;
      }
      unint64_t v18 = v34[v17];
      ++v13;
      if (!v18)
      {
        uint64_t v13 = v17 + 1;
        if (v17 + 1 >= v33) {
          goto LABEL_37;
        }
        unint64_t v18 = v34[v13];
        if (!v18)
        {
          uint64_t v13 = v17 + 2;
          if (v17 + 2 >= v33) {
            goto LABEL_37;
          }
          unint64_t v18 = v34[v13];
          if (!v18)
          {
            uint64_t v19 = v17 + 3;
            if (v19 >= v33) {
              goto LABEL_37;
            }
            unint64_t v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                uint64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_37;
                }
                unint64_t v18 = v34[v13];
                ++v19;
                if (v18) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v13 = v19;
          }
        }
      }
LABEL_24:
      unint64_t v12 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    }
    uint64_t v20 = a4;
    uint64_t v21 = *(void *)(a4 + 48);
    uint64_t v22 = *(void *)(v37 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v9, v21 + v22 * v16, v7);
    sub_1D5A1DE18(&qword_1EA725208, MEMORY[0x1E4F9EED0]);
    uint64_t result = sub_1D5AB4D90();
    uint64_t v23 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v14 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v14 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t result = (*v35)(*(void *)(v10 + 48) + v26 * v22, v9, v7);
    ++*(void *)(v10 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v20;
    if (!a3) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1D5A1B238(uint64_t a1)
{
  return sub_1D5A1B448(a1, &qword_1EA725740, MEMORY[0x1E4F9DC50], (void (*)(char *))sub_1D5A8DAA8);
}

uint64_t sub_1D5A1B26C(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v14 >= v7) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v3 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        if (!v15)
        {
          int64_t v8 = v14 + 3;
          if (v14 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v8);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    uint64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1D5A8DDE8(v12, v13);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 < v7)
  {
    unint64_t v15 = *(void *)(v3 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v8 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        ++v16;
        if (v15) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v16;
    goto LABEL_23;
  }
LABEL_24:
  return swift_release();
}

uint64_t sub_1D5A1B414(uint64_t a1)
{
  return sub_1D5A1B448(a1, &qword_1EA726B58, MEMORY[0x1E4F9E7B8], (void (*)(char *))sub_1D5A8DF78);
}

uint64_t sub_1D5A1B448(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void), void (*a4)(char *))
{
  uint64_t v33 = a2;
  uint64_t v34 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  MEMORY[0x1F4188790](v7 - 8);
  unint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a3(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  int64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v29 - v16;
  if (!*(void *)(*(void *)v4 + 16)) {
    return result;
  }
  uint64_t v18 = *(void *)(a1 + 56);
  uint64_t v29 = a1 + 56;
  uint64_t v19 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v18;
  uint64_t v32 = v11 + 16;
  int64_t v30 = (unint64_t)(v19 + 63) >> 6;
  uint64_t v31 = v11 + 32;
  uint64_t v22 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v23 = 0;
  while (1)
  {
    if (v21)
    {
      unint64_t v24 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      unint64_t v25 = v24 | (v23 << 6);
      goto LABEL_6;
    }
    int64_t v26 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v26 >= v30) {
      return swift_release();
    }
    unint64_t v27 = *(void *)(v29 + 8 * v26);
    ++v23;
    if (!v27)
    {
      int64_t v23 = v26 + 1;
      if (v26 + 1 >= v30) {
        return swift_release();
      }
      unint64_t v27 = *(void *)(v29 + 8 * v23);
      if (!v27)
      {
        int64_t v23 = v26 + 2;
        if (v26 + 2 >= v30) {
          return swift_release();
        }
        unint64_t v27 = *(void *)(v29 + 8 * v23);
        if (!v27)
        {
          int64_t v23 = v26 + 3;
          if (v26 + 3 >= v30) {
            return swift_release();
          }
          unint64_t v27 = *(void *)(v29 + 8 * v23);
          if (!v27) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v21 = (v27 - 1) & v27;
    unint64_t v25 = __clz(__rbit64(v27)) + (v23 << 6);
LABEL_6:
    (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v17, *(void *)(v22 + 48) + *(void *)(v11 + 72) * v25, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v17, v10);
    v34(v14);
    sub_1D594F53C((uint64_t)v9, v33);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
  int64_t v28 = v26 + 4;
  if (v28 >= v30) {
    return swift_release();
  }
  unint64_t v27 = *(void *)(v29 + 8 * v28);
  if (v27)
  {
    int64_t v23 = v28;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v23 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v23 >= v30) {
      return swift_release();
    }
    unint64_t v27 = *(void *)(v29 + 8 * v23);
    ++v28;
    if (v27) {
      goto LABEL_23;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1D5A1B760(uint64_t a1, uint64_t a2)
{
  uint64_t v65 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726AC8);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D5AB49D0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v59 = (char *)&v49 - v12;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  uint64_t v13 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = ~v13;
  uint64_t v15 = a1 + 56;
  uint64_t v16 = -v13;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & *(void *)(a1 + 56);
  uint64_t v60 = a1;
  uint64_t v61 = a1 + 56;
  uint64_t v54 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
  uint64_t v55 = v6;
  uint64_t v62 = v14;
  uint64_t v63 = 0;
  unint64_t v64 = v18;
  uint64_t v53 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  uint64_t v51 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
  uint64_t v57 = v8 + 16;
  uint64_t v58 = (char *)(a2 + 56);
  uint64_t v19 = (void (**)(char *, uint64_t))(v8 + 8);
  swift_bridgeObjectRetain();
  int64_t v20 = 0;
  uint64_t v56 = v8;
  uint64_t v52 = a2;
  uint64_t v50 = 0;
  if (!v18) {
    goto LABEL_8;
  }
LABEL_6:
  uint64_t v21 = (v18 - 1) & v18;
  unint64_t v22 = __clz(__rbit64(v18)) | (v20 << 6);
  int64_t v23 = v20;
LABEL_7:
  unint64_t v24 = *(void *)(a1 + 48) + *(void *)(v8 + 72) * v22;
  unint64_t v25 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v26 = (uint64_t)v55;
  v25(v55, v24, v7);
  uint64_t v27 = 0;
  while (1)
  {
    (*v54)(v26, v27, 1, v7);
    uint64_t v60 = a1;
    uint64_t v61 = v15;
    uint64_t v62 = v14;
    uint64_t v63 = v23;
    unint64_t v64 = v21;
    if ((*v53)(v26, 1, v7) == 1)
    {
      sub_1D59AE720();
      sub_1D594F53C(v26, &qword_1EA726AC8);
      return v52;
    }
    (*v51)(v59, v26, v7);
    uint64_t v31 = v52;
    sub_1D5A1DE18(&qword_1EA725208, MEMORY[0x1E4F9EED0]);
    uint64_t v32 = sub_1D5AB4D90();
    uint64_t v33 = -1 << *(unsigned char *)(v31 + 32);
    unint64_t v34 = v32 & ~v33;
    if ((*(void *)&v58[(v34 >> 3) & 0xFFFFFFFFFFFFFF8] >> v34)) {
      break;
    }
    uint64_t v40 = *v19;
    uint64_t v8 = v56;
LABEL_35:
    v40(v59, v7);
    int64_t v20 = v63;
    unint64_t v18 = v64;
    a1 = v60;
    uint64_t v15 = v61;
    uint64_t v14 = v62;
    uint64_t v50 = v63;
    if (v64) {
      goto LABEL_6;
    }
LABEL_8:
    int64_t v23 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      __break(1u);
    }
    int64_t v28 = (unint64_t)(v14 + 64) >> 6;
    if (v23 >= v28) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v15 + 8 * v23);
    if (v29) {
      goto LABEL_11;
    }
    v20 += 2;
    if (v23 + 1 >= v28) {
      goto LABEL_37;
    }
    unint64_t v29 = *(void *)(v15 + 8 * v20);
    if (v29) {
      goto LABEL_14;
    }
    if (v23 + 2 >= v28) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v15 + 8 * (v23 + 2));
    if (v29)
    {
      v23 += 2;
      goto LABEL_11;
    }
    int64_t v20 = v23 + 3;
    if (v23 + 3 < v28)
    {
      unint64_t v29 = *(void *)(v15 + 8 * v20);
      if (v29)
      {
LABEL_14:
        int64_t v23 = v20;
LABEL_11:
        uint64_t v21 = (v29 - 1) & v29;
        unint64_t v22 = __clz(__rbit64(v29)) + (v23 << 6);
        goto LABEL_7;
      }
      v23 += 4;
      if (v23 >= v28)
      {
LABEL_26:
        uint64_t v21 = 0;
        uint64_t v27 = 1;
        int64_t v23 = v20;
        goto LABEL_27;
      }
      unint64_t v29 = *(void *)(v15 + 8 * v23);
      if (v29) {
        goto LABEL_11;
      }
      int64_t v23 = v28 - 1;
      uint64_t v30 = v50 + 6;
      while (v28 != v30)
      {
        unint64_t v29 = *(void *)(v15 + 8 * v30++);
        if (v29)
        {
          int64_t v23 = v30 - 1;
          goto LABEL_11;
        }
      }
LABEL_37:
      uint64_t v21 = 0;
      uint64_t v27 = 1;
      goto LABEL_27;
    }
    uint64_t v21 = 0;
    uint64_t v27 = 1;
    v23 += 2;
LABEL_27:
    uint64_t v26 = (uint64_t)v55;
  }
  uint64_t v50 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v35 = v31;
  uint64_t v36 = ~v33;
  uint64_t v37 = *(void *)(v56 + 72);
  uint64_t v38 = *(void (**)(char *, unint64_t, uint64_t))(v56 + 16);
  while (1)
  {
    v38(v11, *(void *)(v35 + 48) + v37 * v34, v7);
    sub_1D5A1DE18((unint64_t *)&unk_1EA727F50, MEMORY[0x1E4F9EED0]);
    char v39 = sub_1D5AB4DD0();
    uint64_t v40 = *v19;
    (*v19)(v11, v7);
    if (v39) {
      break;
    }
    unint64_t v34 = (v34 + 1) & v36;
    if (((*(void *)&v58[(v34 >> 3) & 0xFFFFFFFFFFFFFF8] >> v34) & 1) == 0)
    {
      uint64_t v8 = v56;
      goto LABEL_35;
    }
  }
  uint64_t isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v40)(v59, v7);
  char v42 = *(unsigned char *)(v35 + 32);
  unint64_t v43 = (unint64_t)((1 << v42) + 63) >> 6;
  size_t v44 = 8 * v43;
  if ((v42 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    memcpy((char *)&v49 - ((v44 + 15) & 0x3FFFFFFFFFFFFFF0), v58, v44);
    uint64_t v45 = sub_1D5A1CBAC((unint64_t *)((char *)&v49 - ((v44 + 15) & 0x3FFFFFFFFFFFFFF0)), v43, v35, v34, &v60);
    swift_release();
    sub_1D59AE720();
    return v45;
  }
  else
  {
    uint64_t v47 = (void *)swift_slowAlloc();
    memcpy(v47, v58, v44);
    uint64_t v48 = sub_1D5A1CBAC((unint64_t *)v47, v43, v35, v34, &v60);
    swift_release();
    sub_1D59AE720();
    MEMORY[0x1D945AAC0](v47, -1, -1);
    return v48;
  }
}

uint64_t sub_1D5A1BE24(uint64_t a1, uint64_t a2)
{
  uint64_t v65 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726AB8);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D5AB40E0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v59 = (char *)&v49 - v12;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  uint64_t v13 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = ~v13;
  uint64_t v15 = a1 + 56;
  uint64_t v16 = -v13;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & *(void *)(a1 + 56);
  uint64_t v60 = a1;
  uint64_t v61 = a1 + 56;
  uint64_t v54 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
  uint64_t v55 = v6;
  uint64_t v62 = v14;
  uint64_t v63 = 0;
  unint64_t v64 = v18;
  uint64_t v53 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  uint64_t v51 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
  uint64_t v57 = v8 + 16;
  uint64_t v58 = (char *)(a2 + 56);
  uint64_t v19 = (void (**)(char *, uint64_t))(v8 + 8);
  swift_bridgeObjectRetain();
  int64_t v20 = 0;
  uint64_t v56 = v8;
  uint64_t v52 = a2;
  uint64_t v50 = 0;
  if (!v18) {
    goto LABEL_8;
  }
LABEL_6:
  uint64_t v21 = (v18 - 1) & v18;
  unint64_t v22 = __clz(__rbit64(v18)) | (v20 << 6);
  int64_t v23 = v20;
LABEL_7:
  unint64_t v24 = *(void *)(a1 + 48) + *(void *)(v8 + 72) * v22;
  unint64_t v25 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v26 = (uint64_t)v55;
  v25(v55, v24, v7);
  uint64_t v27 = 0;
  while (1)
  {
    (*v54)(v26, v27, 1, v7);
    uint64_t v60 = a1;
    uint64_t v61 = v15;
    uint64_t v62 = v14;
    uint64_t v63 = v23;
    unint64_t v64 = v21;
    if ((*v53)(v26, 1, v7) == 1)
    {
      sub_1D59AE720();
      sub_1D594F53C(v26, &qword_1EA726AB8);
      return v52;
    }
    (*v51)(v59, v26, v7);
    uint64_t v31 = v52;
    sub_1D5A1DE18((unint64_t *)&unk_1EA727F60, MEMORY[0x1E4F9E708]);
    uint64_t v32 = sub_1D5AB4D90();
    uint64_t v33 = -1 << *(unsigned char *)(v31 + 32);
    unint64_t v34 = v32 & ~v33;
    if ((*(void *)&v58[(v34 >> 3) & 0xFFFFFFFFFFFFFF8] >> v34)) {
      break;
    }
    uint64_t v40 = *v19;
    uint64_t v8 = v56;
LABEL_35:
    v40(v59, v7);
    int64_t v20 = v63;
    unint64_t v18 = v64;
    a1 = v60;
    uint64_t v15 = v61;
    uint64_t v14 = v62;
    uint64_t v50 = v63;
    if (v64) {
      goto LABEL_6;
    }
LABEL_8:
    int64_t v23 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      __break(1u);
    }
    int64_t v28 = (unint64_t)(v14 + 64) >> 6;
    if (v23 >= v28) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v15 + 8 * v23);
    if (v29) {
      goto LABEL_11;
    }
    v20 += 2;
    if (v23 + 1 >= v28) {
      goto LABEL_37;
    }
    unint64_t v29 = *(void *)(v15 + 8 * v20);
    if (v29) {
      goto LABEL_14;
    }
    if (v23 + 2 >= v28) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v15 + 8 * (v23 + 2));
    if (v29)
    {
      v23 += 2;
      goto LABEL_11;
    }
    int64_t v20 = v23 + 3;
    if (v23 + 3 < v28)
    {
      unint64_t v29 = *(void *)(v15 + 8 * v20);
      if (v29)
      {
LABEL_14:
        int64_t v23 = v20;
LABEL_11:
        uint64_t v21 = (v29 - 1) & v29;
        unint64_t v22 = __clz(__rbit64(v29)) + (v23 << 6);
        goto LABEL_7;
      }
      v23 += 4;
      if (v23 >= v28)
      {
LABEL_26:
        uint64_t v21 = 0;
        uint64_t v27 = 1;
        int64_t v23 = v20;
        goto LABEL_27;
      }
      unint64_t v29 = *(void *)(v15 + 8 * v23);
      if (v29) {
        goto LABEL_11;
      }
      int64_t v23 = v28 - 1;
      uint64_t v30 = v50 + 6;
      while (v28 != v30)
      {
        unint64_t v29 = *(void *)(v15 + 8 * v30++);
        if (v29)
        {
          int64_t v23 = v30 - 1;
          goto LABEL_11;
        }
      }
LABEL_37:
      uint64_t v21 = 0;
      uint64_t v27 = 1;
      goto LABEL_27;
    }
    uint64_t v21 = 0;
    uint64_t v27 = 1;
    v23 += 2;
LABEL_27:
    uint64_t v26 = (uint64_t)v55;
  }
  uint64_t v50 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v35 = v31;
  uint64_t v36 = ~v33;
  uint64_t v37 = *(void *)(v56 + 72);
  uint64_t v38 = *(void (**)(char *, unint64_t, uint64_t))(v56 + 16);
  while (1)
  {
    v38(v11, *(void *)(v35 + 48) + v37 * v34, v7);
    sub_1D5A1DE18(&qword_1EA726AC0, MEMORY[0x1E4F9E708]);
    char v39 = sub_1D5AB4DD0();
    uint64_t v40 = *v19;
    (*v19)(v11, v7);
    if (v39) {
      break;
    }
    unint64_t v34 = (v34 + 1) & v36;
    if (((*(void *)&v58[(v34 >> 3) & 0xFFFFFFFFFFFFFF8] >> v34) & 1) == 0)
    {
      uint64_t v8 = v56;
      goto LABEL_35;
    }
  }
  uint64_t isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v40)(v59, v7);
  char v42 = *(unsigned char *)(v35 + 32);
  unint64_t v43 = (unint64_t)((1 << v42) + 63) >> 6;
  size_t v44 = 8 * v43;
  if ((v42 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    memcpy((char *)&v49 - ((v44 + 15) & 0x3FFFFFFFFFFFFFF0), v58, v44);
    uint64_t v45 = sub_1D5A1D130((unint64_t *)((char *)&v49 - ((v44 + 15) & 0x3FFFFFFFFFFFFFF0)), v43, v35, v34, &v60);
    swift_release();
    sub_1D59AE720();
    return v45;
  }
  else
  {
    uint64_t v47 = (void *)swift_slowAlloc();
    memcpy(v47, v58, v44);
    uint64_t v48 = sub_1D5A1D130((unint64_t *)v47, v43, v35, v34, &v60);
    swift_release();
    sub_1D59AE720();
    MEMORY[0x1D945AAC0](v47, -1, -1);
    return v48;
  }
}

uint64_t sub_1D5A1C4E8(uint64_t a1, uint64_t a2)
{
  uint64_t v65 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726AA8);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D5AB4900();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v59 = (char *)&v49 - v12;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  uint64_t v13 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = ~v13;
  uint64_t v15 = a1 + 56;
  uint64_t v16 = -v13;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & *(void *)(a1 + 56);
  uint64_t v60 = a1;
  uint64_t v61 = a1 + 56;
  uint64_t v54 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
  uint64_t v55 = v6;
  uint64_t v62 = v14;
  uint64_t v63 = 0;
  unint64_t v64 = v18;
  uint64_t v53 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  uint64_t v51 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
  uint64_t v57 = v8 + 16;
  uint64_t v58 = (char *)(a2 + 56);
  uint64_t v19 = (void (**)(char *, uint64_t))(v8 + 8);
  swift_bridgeObjectRetain();
  int64_t v20 = 0;
  uint64_t v56 = v8;
  uint64_t v52 = a2;
  uint64_t v50 = 0;
  if (!v18) {
    goto LABEL_8;
  }
LABEL_6:
  uint64_t v21 = (v18 - 1) & v18;
  unint64_t v22 = __clz(__rbit64(v18)) | (v20 << 6);
  int64_t v23 = v20;
LABEL_7:
  unint64_t v24 = *(void *)(a1 + 48) + *(void *)(v8 + 72) * v22;
  unint64_t v25 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v26 = (uint64_t)v55;
  v25(v55, v24, v7);
  uint64_t v27 = 0;
  while (1)
  {
    (*v54)(v26, v27, 1, v7);
    uint64_t v60 = a1;
    uint64_t v61 = v15;
    uint64_t v62 = v14;
    uint64_t v63 = v23;
    unint64_t v64 = v21;
    if ((*v53)(v26, 1, v7) == 1)
    {
      sub_1D59AE720();
      sub_1D594F53C(v26, &qword_1EA726AA8);
      return v52;
    }
    (*v51)(v59, v26, v7);
    uint64_t v31 = v52;
    sub_1D5A1DE18(&qword_1EA7256C8, MEMORY[0x1E4F9EDF8]);
    uint64_t v32 = sub_1D5AB4D90();
    uint64_t v33 = -1 << *(unsigned char *)(v31 + 32);
    unint64_t v34 = v32 & ~v33;
    if ((*(void *)&v58[(v34 >> 3) & 0xFFFFFFFFFFFFFF8] >> v34)) {
      break;
    }
    uint64_t v40 = *v19;
    uint64_t v8 = v56;
LABEL_35:
    v40(v59, v7);
    int64_t v20 = v63;
    unint64_t v18 = v64;
    a1 = v60;
    uint64_t v15 = v61;
    uint64_t v14 = v62;
    uint64_t v50 = v63;
    if (v64) {
      goto LABEL_6;
    }
LABEL_8:
    int64_t v23 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      __break(1u);
    }
    int64_t v28 = (unint64_t)(v14 + 64) >> 6;
    if (v23 >= v28) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v15 + 8 * v23);
    if (v29) {
      goto LABEL_11;
    }
    v20 += 2;
    if (v23 + 1 >= v28) {
      goto LABEL_37;
    }
    unint64_t v29 = *(void *)(v15 + 8 * v20);
    if (v29) {
      goto LABEL_14;
    }
    if (v23 + 2 >= v28) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v15 + 8 * (v23 + 2));
    if (v29)
    {
      v23 += 2;
      goto LABEL_11;
    }
    int64_t v20 = v23 + 3;
    if (v23 + 3 < v28)
    {
      unint64_t v29 = *(void *)(v15 + 8 * v20);
      if (v29)
      {
LABEL_14:
        int64_t v23 = v20;
LABEL_11:
        uint64_t v21 = (v29 - 1) & v29;
        unint64_t v22 = __clz(__rbit64(v29)) + (v23 << 6);
        goto LABEL_7;
      }
      v23 += 4;
      if (v23 >= v28)
      {
LABEL_26:
        uint64_t v21 = 0;
        uint64_t v27 = 1;
        int64_t v23 = v20;
        goto LABEL_27;
      }
      unint64_t v29 = *(void *)(v15 + 8 * v23);
      if (v29) {
        goto LABEL_11;
      }
      int64_t v23 = v28 - 1;
      uint64_t v30 = v50 + 6;
      while (v28 != v30)
      {
        unint64_t v29 = *(void *)(v15 + 8 * v30++);
        if (v29)
        {
          int64_t v23 = v30 - 1;
          goto LABEL_11;
        }
      }
LABEL_37:
      uint64_t v21 = 0;
      uint64_t v27 = 1;
      goto LABEL_27;
    }
    uint64_t v21 = 0;
    uint64_t v27 = 1;
    v23 += 2;
LABEL_27:
    uint64_t v26 = (uint64_t)v55;
  }
  uint64_t v50 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v35 = v31;
  uint64_t v36 = ~v33;
  uint64_t v37 = *(void *)(v56 + 72);
  uint64_t v38 = *(void (**)(char *, unint64_t, uint64_t))(v56 + 16);
  while (1)
  {
    v38(v11, *(void *)(v35 + 48) + v37 * v34, v7);
    sub_1D5A1DE18(&qword_1EA727F80, MEMORY[0x1E4F9EDF8]);
    char v39 = sub_1D5AB4DD0();
    uint64_t v40 = *v19;
    (*v19)(v11, v7);
    if (v39) {
      break;
    }
    unint64_t v34 = (v34 + 1) & v36;
    if (((*(void *)&v58[(v34 >> 3) & 0xFFFFFFFFFFFFFF8] >> v34) & 1) == 0)
    {
      uint64_t v8 = v56;
      goto LABEL_35;
    }
  }
  uint64_t isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v40)(v59, v7);
  char v42 = *(unsigned char *)(v35 + 32);
  unint64_t v43 = (unint64_t)((1 << v42) + 63) >> 6;
  size_t v44 = 8 * v43;
  if ((v42 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    memcpy((char *)&v49 - ((v44 + 15) & 0x3FFFFFFFFFFFFFF0), v58, v44);
    uint64_t v45 = sub_1D5A1D6B4((unint64_t *)((char *)&v49 - ((v44 + 15) & 0x3FFFFFFFFFFFFFF0)), v43, v35, v34, &v60);
    swift_release();
    sub_1D59AE720();
    return v45;
  }
  else
  {
    uint64_t v47 = (void *)swift_slowAlloc();
    memcpy(v47, v58, v44);
    uint64_t v48 = sub_1D5A1D6B4((unint64_t *)v47, v43, v35, v34, &v60);
    swift_release();
    sub_1D59AE720();
    MEMORY[0x1D945AAC0](v47, -1, -1);
    return v48;
  }
}

uint64_t sub_1D5A1CBAC(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v52 = a2;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726AC8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1D5AB49D0();
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v13);
  uint64_t v65 = (char *)&v52 - v17;
  uint64_t v18 = *(void *)(a3 + 16);
  uint64_t v19 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  uint64_t v20 = *(unint64_t *)((char *)a1 + v19);
  uint64_t v54 = a1;
  uint64_t v55 = v11;
  *(unint64_t *)((char *)a1 + v19) = v20 & ((-1 << a4) - 1);
  uint64_t v22 = v21;
  uint64_t v23 = v18 - 1;
  uint64_t v63 = v21 + 16;
  uint64_t v64 = a3;
  uint64_t v58 = (unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  uint64_t v59 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v56 = a5;
  uint64_t v57 = (void (**)(char *, char *, uint64_t))(v21 + 32);
  uint64_t v62 = a3 + 56;
  unint64_t v24 = (void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v60 = v21;
  while (2)
  {
    uint64_t v53 = v23;
    do
    {
      while (1)
      {
        uint64_t v26 = *a5;
        uint64_t v27 = a5[1];
        uint64_t v29 = a5[2];
        int64_t v28 = a5[3];
        unint64_t v30 = a5[4];
        if (v30)
        {
          uint64_t v61 = (v30 - 1) & v30;
          unint64_t v31 = __clz(__rbit64(v30)) | (v28 << 6);
LABEL_7:
          unint64_t v32 = *(void *)(v26 + 48) + *(void *)(v22 + 72) * v31;
          uint64_t v33 = *(void (**)(char *, unint64_t, uint64_t))(v22 + 16);
          uint64_t v34 = v26;
          v33(v11, v32, v12);
          uint64_t v35 = 0;
          goto LABEL_8;
        }
        int64_t v44 = v28 + 1;
        if (__OFADD__(v28, 1))
        {
          __break(1u);
          goto LABEL_44;
        }
        int64_t v45 = (unint64_t)(v29 + 64) >> 6;
        if (v44 >= v45)
        {
          uint64_t v61 = 0;
          uint64_t v35 = 1;
          uint64_t v34 = v26;
          goto LABEL_8;
        }
        unint64_t v46 = *(void *)(v27 + 8 * v44);
        if (v46) {
          goto LABEL_17;
        }
        int64_t v49 = v28 + 2;
        if (v28 + 2 >= v45) {
          goto LABEL_35;
        }
        unint64_t v46 = *(void *)(v27 + 8 * v49);
        if (v46) {
          goto LABEL_23;
        }
        if (v28 + 3 >= v45) {
          goto LABEL_36;
        }
        unint64_t v46 = *(void *)(v27 + 8 * (v28 + 3));
        if (v46)
        {
          int64_t v44 = v28 + 3;
          goto LABEL_17;
        }
        int64_t v49 = v28 + 4;
        if (v28 + 4 < v45)
        {
          unint64_t v46 = *(void *)(v27 + 8 * v49);
          if (v46)
          {
LABEL_23:
            int64_t v44 = v49;
LABEL_17:
            uint64_t v61 = (v46 - 1) & v46;
            unint64_t v31 = __clz(__rbit64(v46)) + (v44 << 6);
            int64_t v28 = v44;
            goto LABEL_7;
          }
          int64_t v44 = v28 + 5;
          if (v28 + 5 < v45)
          {
            unint64_t v46 = *(void *)(v27 + 8 * v44);
            if (v46) {
              goto LABEL_17;
            }
            int64_t v44 = v45 - 1;
            int64_t v50 = v28 + 6;
            while (v45 != v50)
            {
              unint64_t v46 = *(void *)(v27 + 8 * v50++);
              if (v46)
              {
                int64_t v44 = v50 - 1;
                goto LABEL_17;
              }
            }
LABEL_35:
            uint64_t v61 = 0;
            uint64_t v35 = 1;
            int64_t v28 = v44;
            uint64_t v34 = v26;
            goto LABEL_8;
          }
LABEL_36:
          uint64_t v61 = 0;
          uint64_t v35 = 1;
          int64_t v28 = v49;
          uint64_t v34 = v26;
          goto LABEL_8;
        }
        uint64_t v61 = 0;
        uint64_t v35 = 1;
        v28 += 3;
        uint64_t v34 = v26;
LABEL_8:
        (*v59)(v11, v35, 1, v12);
        *a5 = v34;
        a5[1] = v27;
        a5[2] = v29;
        a5[3] = v28;
        a5[4] = v61;
        if ((*v58)(v11, 1, v12) == 1)
        {
          sub_1D594F53C((uint64_t)v11, &qword_1EA726AC8);
          uint64_t v51 = v64;
          swift_retain();
          return sub_1D5A1AEAC(v54, v52, v53, v51);
        }
        (*v57)(v65, v11, v12);
        uint64_t v36 = v64;
        sub_1D5A1DE18(&qword_1EA725208, MEMORY[0x1E4F9EED0]);
        uint64_t v37 = sub_1D5AB4D90();
        uint64_t v38 = -1 << *(unsigned char *)(v36 + 32);
        unint64_t v39 = v37 & ~v38;
        if ((*(void *)(v62 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39)) {
          break;
        }
        unint64_t v25 = *v24;
        uint64_t v22 = v60;
LABEL_4:
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v25)(v65, v12);
      }
      uint64_t v61 = (unint64_t)v24 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v40 = ~v38;
      uint64_t v41 = *(void *)(v60 + 72);
      char v42 = *(void (**)(char *, unint64_t, uint64_t))(v60 + 16);
      while (1)
      {
        v42(v15, *(void *)(v64 + 48) + v41 * v39, v12);
        sub_1D5A1DE18((unint64_t *)&unk_1EA727F50, MEMORY[0x1E4F9EED0]);
        char v43 = sub_1D5AB4DD0();
        unint64_t v25 = *v24;
        (*v24)(v15, v12);
        if (v43) {
          break;
        }
        unint64_t v39 = (v39 + 1) & v40;
        if (((*(void *)(v62 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39) & 1) == 0)
        {
          uint64_t v11 = v55;
          a5 = v56;
          uint64_t v22 = v60;
          goto LABEL_4;
        }
      }
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v25)(v65, v12);
      uint64_t v47 = (v39 >> 3) & 0x1FFFFFFFFFFFFFF8;
      uint64_t v11 = v55;
      uint64_t v48 = *(unint64_t *)((char *)v54 + v47);
      *(unint64_t *)((char *)v54 + v47) = v48 & ~(1 << v39);
      a5 = v56;
      uint64_t v22 = v60;
    }
    while ((v48 & (1 << v39)) == 0);
    uint64_t v23 = v53 - 1;
    if (__OFSUB__(v53, 1))
    {
LABEL_44:
      __break(1u);
      return result;
    }
    if (v53 != 1) {
      continue;
    }
    return MEMORY[0x1E4FBC870];
  }
}

uint64_t sub_1D5A1D130(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v52 = a2;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726AB8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1D5AB40E0();
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v13);
  uint64_t v65 = (char *)&v52 - v17;
  uint64_t v18 = *(void *)(a3 + 16);
  uint64_t v19 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  uint64_t v20 = *(unint64_t *)((char *)a1 + v19);
  uint64_t v54 = a1;
  uint64_t v55 = v11;
  *(unint64_t *)((char *)a1 + v19) = v20 & ((-1 << a4) - 1);
  uint64_t v22 = v21;
  uint64_t v23 = v18 - 1;
  uint64_t v63 = v21 + 16;
  uint64_t v64 = a3;
  uint64_t v58 = (unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  uint64_t v59 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v56 = a5;
  uint64_t v57 = (void (**)(char *, char *, uint64_t))(v21 + 32);
  uint64_t v62 = a3 + 56;
  unint64_t v24 = (void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v60 = v21;
  while (2)
  {
    uint64_t v53 = v23;
    do
    {
      while (1)
      {
        uint64_t v26 = *a5;
        uint64_t v27 = a5[1];
        uint64_t v29 = a5[2];
        int64_t v28 = a5[3];
        unint64_t v30 = a5[4];
        if (v30)
        {
          uint64_t v61 = (v30 - 1) & v30;
          unint64_t v31 = __clz(__rbit64(v30)) | (v28 << 6);
LABEL_7:
          unint64_t v32 = *(void *)(v26 + 48) + *(void *)(v22 + 72) * v31;
          uint64_t v33 = *(void (**)(char *, unint64_t, uint64_t))(v22 + 16);
          uint64_t v34 = v26;
          v33(v11, v32, v12);
          uint64_t v35 = 0;
          goto LABEL_8;
        }
        int64_t v44 = v28 + 1;
        if (__OFADD__(v28, 1))
        {
          __break(1u);
          goto LABEL_44;
        }
        int64_t v45 = (unint64_t)(v29 + 64) >> 6;
        if (v44 >= v45)
        {
          uint64_t v61 = 0;
          uint64_t v35 = 1;
          uint64_t v34 = v26;
          goto LABEL_8;
        }
        unint64_t v46 = *(void *)(v27 + 8 * v44);
        if (v46) {
          goto LABEL_17;
        }
        int64_t v49 = v28 + 2;
        if (v28 + 2 >= v45) {
          goto LABEL_35;
        }
        unint64_t v46 = *(void *)(v27 + 8 * v49);
        if (v46) {
          goto LABEL_23;
        }
        if (v28 + 3 >= v45) {
          goto LABEL_36;
        }
        unint64_t v46 = *(void *)(v27 + 8 * (v28 + 3));
        if (v46)
        {
          int64_t v44 = v28 + 3;
          goto LABEL_17;
        }
        int64_t v49 = v28 + 4;
        if (v28 + 4 < v45)
        {
          unint64_t v46 = *(void *)(v27 + 8 * v49);
          if (v46)
          {
LABEL_23:
            int64_t v44 = v49;
LABEL_17:
            uint64_t v61 = (v46 - 1) & v46;
            unint64_t v31 = __clz(__rbit64(v46)) + (v44 << 6);
            int64_t v28 = v44;
            goto LABEL_7;
          }
          int64_t v44 = v28 + 5;
          if (v28 + 5 < v45)
          {
            unint64_t v46 = *(void *)(v27 + 8 * v44);
            if (v46) {
              goto LABEL_17;
            }
            int64_t v44 = v45 - 1;
            int64_t v50 = v28 + 6;
            while (v45 != v50)
            {
              unint64_t v46 = *(void *)(v27 + 8 * v50++);
              if (v46)
              {
                int64_t v44 = v50 - 1;
                goto LABEL_17;
              }
            }
LABEL_35:
            uint64_t v61 = 0;
            uint64_t v35 = 1;
            int64_t v28 = v44;
            uint64_t v34 = v26;
            goto LABEL_8;
          }
LABEL_36:
          uint64_t v61 = 0;
          uint64_t v35 = 1;
          int64_t v28 = v49;
          uint64_t v34 = v26;
          goto LABEL_8;
        }
        uint64_t v61 = 0;
        uint64_t v35 = 1;
        v28 += 3;
        uint64_t v34 = v26;
LABEL_8:
        (*v59)(v11, v35, 1, v12);
        *a5 = v34;
        a5[1] = v27;
        a5[2] = v29;
        a5[3] = v28;
        a5[4] = v61;
        if ((*v58)(v11, 1, v12) == 1)
        {
          sub_1D594F53C((uint64_t)v11, &qword_1EA726AB8);
          uint64_t v51 = v64;
          swift_retain();
          return sub_1D5A1A408(v54, v52, v53, v51);
        }
        (*v57)(v65, v11, v12);
        uint64_t v36 = v64;
        sub_1D5A1DE18((unint64_t *)&unk_1EA727F60, MEMORY[0x1E4F9E708]);
        uint64_t v37 = sub_1D5AB4D90();
        uint64_t v38 = -1 << *(unsigned char *)(v36 + 32);
        unint64_t v39 = v37 & ~v38;
        if ((*(void *)(v62 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39)) {
          break;
        }
        unint64_t v25 = *v24;
        uint64_t v22 = v60;
LABEL_4:
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v25)(v65, v12);
      }
      uint64_t v61 = (unint64_t)v24 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v40 = ~v38;
      uint64_t v41 = *(void *)(v60 + 72);
      char v42 = *(void (**)(char *, unint64_t, uint64_t))(v60 + 16);
      while (1)
      {
        v42(v15, *(void *)(v64 + 48) + v41 * v39, v12);
        sub_1D5A1DE18(&qword_1EA726AC0, MEMORY[0x1E4F9E708]);
        char v43 = sub_1D5AB4DD0();
        unint64_t v25 = *v24;
        (*v24)(v15, v12);
        if (v43) {
          break;
        }
        unint64_t v39 = (v39 + 1) & v40;
        if (((*(void *)(v62 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39) & 1) == 0)
        {
          uint64_t v11 = v55;
          a5 = v56;
          uint64_t v22 = v60;
          goto LABEL_4;
        }
      }
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v25)(v65, v12);
      uint64_t v47 = (v39 >> 3) & 0x1FFFFFFFFFFFFFF8;
      uint64_t v11 = v55;
      uint64_t v48 = *(unint64_t *)((char *)v54 + v47);
      *(unint64_t *)((char *)v54 + v47) = v48 & ~(1 << v39);
      a5 = v56;
      uint64_t v22 = v60;
    }
    while ((v48 & (1 << v39)) == 0);
    uint64_t v23 = v53 - 1;
    if (__OFSUB__(v53, 1))
    {
LABEL_44:
      __break(1u);
      return result;
    }
    if (v53 != 1) {
      continue;
    }
    return MEMORY[0x1E4FBC870];
  }
}

uint64_t sub_1D5A1D6B4(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v52 = a2;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726AA8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1D5AB4900();
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v13);
  uint64_t v65 = (char *)&v52 - v17;
  uint64_t v18 = *(void *)(a3 + 16);
  uint64_t v19 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  uint64_t v20 = *(unint64_t *)((char *)a1 + v19);
  uint64_t v54 = a1;
  uint64_t v55 = v11;
  *(unint64_t *)((char *)a1 + v19) = v20 & ((-1 << a4) - 1);
  uint64_t v22 = v21;
  uint64_t v23 = v18 - 1;
  uint64_t v63 = v21 + 16;
  uint64_t v64 = a3;
  uint64_t v58 = (unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  uint64_t v59 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v56 = a5;
  uint64_t v57 = (void (**)(char *, char *, uint64_t))(v21 + 32);
  uint64_t v62 = a3 + 56;
  unint64_t v24 = (void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v60 = v21;
  while (2)
  {
    uint64_t v53 = v23;
    do
    {
      while (1)
      {
        uint64_t v26 = *a5;
        uint64_t v27 = a5[1];
        uint64_t v29 = a5[2];
        int64_t v28 = a5[3];
        unint64_t v30 = a5[4];
        if (v30)
        {
          uint64_t v61 = (v30 - 1) & v30;
          unint64_t v31 = __clz(__rbit64(v30)) | (v28 << 6);
LABEL_7:
          unint64_t v32 = *(void *)(v26 + 48) + *(void *)(v22 + 72) * v31;
          uint64_t v33 = *(void (**)(char *, unint64_t, uint64_t))(v22 + 16);
          uint64_t v34 = v26;
          v33(v11, v32, v12);
          uint64_t v35 = 0;
          goto LABEL_8;
        }
        int64_t v44 = v28 + 1;
        if (__OFADD__(v28, 1))
        {
          __break(1u);
          goto LABEL_44;
        }
        int64_t v45 = (unint64_t)(v29 + 64) >> 6;
        if (v44 >= v45)
        {
          uint64_t v61 = 0;
          uint64_t v35 = 1;
          uint64_t v34 = v26;
          goto LABEL_8;
        }
        unint64_t v46 = *(void *)(v27 + 8 * v44);
        if (v46) {
          goto LABEL_17;
        }
        int64_t v49 = v28 + 2;
        if (v28 + 2 >= v45) {
          goto LABEL_35;
        }
        unint64_t v46 = *(void *)(v27 + 8 * v49);
        if (v46) {
          goto LABEL_23;
        }
        if (v28 + 3 >= v45) {
          goto LABEL_36;
        }
        unint64_t v46 = *(void *)(v27 + 8 * (v28 + 3));
        if (v46)
        {
          int64_t v44 = v28 + 3;
          goto LABEL_17;
        }
        int64_t v49 = v28 + 4;
        if (v28 + 4 < v45)
        {
          unint64_t v46 = *(void *)(v27 + 8 * v49);
          if (v46)
          {
LABEL_23:
            int64_t v44 = v49;
LABEL_17:
            uint64_t v61 = (v46 - 1) & v46;
            unint64_t v31 = __clz(__rbit64(v46)) + (v44 << 6);
            int64_t v28 = v44;
            goto LABEL_7;
          }
          int64_t v44 = v28 + 5;
          if (v28 + 5 < v45)
          {
            unint64_t v46 = *(void *)(v27 + 8 * v44);
            if (v46) {
              goto LABEL_17;
            }
            int64_t v44 = v45 - 1;
            int64_t v50 = v28 + 6;
            while (v45 != v50)
            {
              unint64_t v46 = *(void *)(v27 + 8 * v50++);
              if (v46)
              {
                int64_t v44 = v50 - 1;
                goto LABEL_17;
              }
            }
LABEL_35:
            uint64_t v61 = 0;
            uint64_t v35 = 1;
            int64_t v28 = v44;
            uint64_t v34 = v26;
            goto LABEL_8;
          }
LABEL_36:
          uint64_t v61 = 0;
          uint64_t v35 = 1;
          int64_t v28 = v49;
          uint64_t v34 = v26;
          goto LABEL_8;
        }
        uint64_t v61 = 0;
        uint64_t v35 = 1;
        v28 += 3;
        uint64_t v34 = v26;
LABEL_8:
        (*v59)(v11, v35, 1, v12);
        *a5 = v34;
        a5[1] = v27;
        a5[2] = v29;
        a5[3] = v28;
        a5[4] = v61;
        if ((*v58)(v11, 1, v12) == 1)
        {
          sub_1D594F53C((uint64_t)v11, &qword_1EA726AA8);
          uint64_t v51 = v64;
          swift_retain();
          return sub_1D5A1A794(v54, v52, v53, v51);
        }
        (*v57)(v65, v11, v12);
        uint64_t v36 = v64;
        sub_1D5A1DE18(&qword_1EA7256C8, MEMORY[0x1E4F9EDF8]);
        uint64_t v37 = sub_1D5AB4D90();
        uint64_t v38 = -1 << *(unsigned char *)(v36 + 32);
        unint64_t v39 = v37 & ~v38;
        if ((*(void *)(v62 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39)) {
          break;
        }
        unint64_t v25 = *v24;
        uint64_t v22 = v60;
LABEL_4:
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v25)(v65, v12);
      }
      uint64_t v61 = (unint64_t)v24 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v40 = ~v38;
      uint64_t v41 = *(void *)(v60 + 72);
      char v42 = *(void (**)(char *, unint64_t, uint64_t))(v60 + 16);
      while (1)
      {
        v42(v15, *(void *)(v64 + 48) + v41 * v39, v12);
        sub_1D5A1DE18(&qword_1EA727F80, MEMORY[0x1E4F9EDF8]);
        char v43 = sub_1D5AB4DD0();
        unint64_t v25 = *v24;
        (*v24)(v15, v12);
        if (v43) {
          break;
        }
        unint64_t v39 = (v39 + 1) & v40;
        if (((*(void *)(v62 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39) & 1) == 0)
        {
          uint64_t v11 = v55;
          a5 = v56;
          uint64_t v22 = v60;
          goto LABEL_4;
        }
      }
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v25)(v65, v12);
      uint64_t v47 = (v39 >> 3) & 0x1FFFFFFFFFFFFFF8;
      uint64_t v11 = v55;
      uint64_t v48 = *(unint64_t *)((char *)v54 + v47);
      *(unint64_t *)((char *)v54 + v47) = v48 & ~(1 << v39);
      a5 = v56;
      uint64_t v22 = v60;
    }
    while ((v48 & (1 << v39)) == 0);
    uint64_t v23 = v53 - 1;
    if (__OFSUB__(v53, 1))
    {
LABEL_44:
      __break(1u);
      return result;
    }
    if (v53 != 1) {
      continue;
    }
    return MEMORY[0x1E4FBC870];
  }
}

unint64_t sub_1D5A1DC3C()
{
  unint64_t result = qword_1EA726B28;
  if (!qword_1EA726B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726B28);
  }
  return result;
}

unint64_t sub_1D5A1DC94()
{
  unint64_t result = qword_1EA726B38;
  if (!qword_1EA726B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726B38);
  }
  return result;
}

uint64_t sub_1D5A1DCE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D5A1DD50(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D5A1DDB8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1D5A1DE18(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D5A1DE60(uint64_t a1)
{
  return sub_1D5A183C4(a1);
}

uint64_t sub_1D5A1DE78(uint64_t a1)
{
  return sub_1D5A17D6C(a1);
}

uint64_t sub_1D5A1DE90(uint64_t a1)
{
  return sub_1D5A168F8(a1);
}

Swift::Int __swiftcall CatalogProgram.indexOfWorkout(_:)(Swift::String a1)
{
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  uint64_t v3 = sub_1D5AB2880();
  uint64_t v4 = sub_1D5A1DFEC(v3, countAndFlagsBits, (uint64_t)object);
  LOBYTE(countAndFlagsBits) = v5;
  swift_bridgeObjectRelease();
  if ((countAndFlagsBits & 1) == 0)
  {
    sub_1D5AB2880();
    sub_1D5AB2880();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    Swift::Int result = v4 + 1;
    if (!__OFADD__(v4, 1)) {
      return result;
    }
    __break(1u);
  }
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1D5AB4B50();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBDE5400);
  uint64_t v8 = sub_1D5AB4B30();
  os_log_type_t v9 = sub_1D5AB5410();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl(&dword_1D5947000, v8, v9, "Next workout was not present in program workout list", v10, 2u);
    MEMORY[0x1D945AAC0](v10, -1, -1);
  }

  return 0;
}

uint64_t sub_1D5A1DFEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return 0;
  }
  uint64_t v6 = 0;
  for (unint64_t i = (void *)(a1 + 40); ; i += 2)
  {
    BOOL v8 = *(i - 1) == a2 && *i == a3;
    if (v8 || (sub_1D5AB5AF0() & 1) != 0) {
      break;
    }
    if (v3 == ++v6) {
      return 0;
    }
  }
  return v6;
}

void *WorkoutPlanClient.__allocating_init(eventHub:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = objc_allocWithZone(MEMORY[0x1E4F29268]);
  id v7 = a3;
  BOOL v8 = (void *)sub_1D5AB4DE0();
  id v9 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v8, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  uint64_t v10 = sub_1D59968E8(v9, v7);
  uint64_t v11 = *(void *)(v10 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 16));
  if (*(unsigned char *)(v10 + 48) == 1)
  {
    *(unsigned char *)(v10 + 48) = 2;
    objc_msgSend(*(id *)(v10 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  type metadata accessor for WorkoutPlanClient();
  uint64_t v12 = (void *)swift_allocObject();
  uint64_t v13 = swift_retain();
  uint64_t v14 = sub_1D5A273F4(v13, a1, a2, v12);

  swift_release_n();
  return v14;
}

uint64_t WorkoutPlanClient.__allocating_init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5A1E208(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D5A276B8);
}

uint64_t type metadata accessor for WorkoutPlanClient()
{
  return self;
}

uint64_t WorkoutPlanClient.init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5A1E208(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D5A2755C);
}

uint64_t sub_1D5A1E208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = a6(a1, a4, a5, v6, ObjectType, a2, a3);
  swift_unknownObjectRelease();
  return v14;
}

uint64_t WorkoutPlanClient.deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t WorkoutPlanClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t WorkoutPlanClient.createWorkoutPlan(modalityPreferences:name:planIdentifier:schedule:startDate:workoutPlanLength:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v9[9] = a8;
  v9[10] = v8;
  v9[7] = a6;
  v9[8] = a7;
  v9[5] = a4;
  v9[6] = a5;
  v9[3] = a2;
  void v9[4] = a3;
  v9[2] = a1;
  uint64_t v10 = sub_1D5AB1EB0();
  v9[11] = v10;
  v9[12] = *(void *)(v10 - 8);
  v9[13] = swift_task_alloc();
  uint64_t v11 = sub_1D5AB34E0();
  v9[14] = v11;
  v9[15] = *(void *)(v11 - 8);
  v9[16] = swift_task_alloc();
  uint64_t v12 = sub_1D5AB1D20();
  v9[17] = v12;
  v9[18] = *(void *)(v12 - 8);
  v9[19] = swift_task_alloc();
  uint64_t v13 = sub_1D5AB3270();
  v9[20] = v13;
  v9[21] = *(void *)(v13 - 8);
  v9[22] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D5A1E4D8, 0, 0);
}

void sub_1D5A1E4D8()
{
  if (qword_1EBDE4E00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v13 = *(void *)(v0 + 152);
  uint64_t v14 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v5 = *(void *)(v0 + 104);
  uint64_t v18 = *(void *)(v0 + 80);
  uint64_t v15 = *(void *)(v0 + 112);
  uint64_t v16 = *(void *)(v0 + 64);
  uint64_t v6 = *(void *)(v0 + 48);
  uint64_t v12 = *(void *)(v0 + 56);
  uint64_t v17 = *(void *)(v0 + 88);
  uint64_t v7 = sub_1D5AB4B50();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBDE4DE0);
  v8._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
  v8._object = (void *)0x80000001D5AC8CB0;
  v9._object = (void *)0x80000001D5AC8D20;
  v9._uint64_t countAndFlagsBits = 0xD000000000000060;
  Logger.trace(file:function:)(v8, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v13, v6, v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v12, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v5, v16, v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D5AB3260();
  uint64_t v10 = *(void *)(v18 + 24);
  swift_getObjectType();
  *(_WORD *)(v0 + 200) = 294;
  uint64_t v19 = *(void *)(v10 + 64) + **(int **)(v10 + 64);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v11;
  sub_1D5AB2210();
  void *v11 = v0;
  v11[1] = sub_1D5A1E790;
  __asm { BRAA            X9, X16 }
}

uint64_t sub_1D5A1E790()
{
  *(void *)(*(void *)v1 + 192) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D5A27F88;
  }
  else {
    uint64_t v2 = sub_1D5A27F8C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t WorkoutPlanClient.createUnsavedWorkoutPlan(modalityPreferences:name:planIdentifier:schedule:startDate:workoutPlanLength:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v9[9] = a8;
  v9[10] = v8;
  v9[7] = a6;
  v9[8] = a7;
  v9[5] = a4;
  v9[6] = a5;
  v9[3] = a2;
  void v9[4] = a3;
  v9[2] = a1;
  uint64_t v10 = sub_1D5AB1EB0();
  v9[11] = v10;
  v9[12] = *(void *)(v10 - 8);
  v9[13] = swift_task_alloc();
  uint64_t v11 = sub_1D5AB34E0();
  v9[14] = v11;
  v9[15] = *(void *)(v11 - 8);
  v9[16] = swift_task_alloc();
  uint64_t v12 = sub_1D5AB1D20();
  v9[17] = v12;
  v9[18] = *(void *)(v12 - 8);
  v9[19] = swift_task_alloc();
  uint64_t v13 = sub_1D5AB3270();
  v9[20] = v13;
  v9[21] = *(void *)(v13 - 8);
  v9[22] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D5A1EA88, 0, 0);
}

void sub_1D5A1EA88()
{
  if (qword_1EBDE4E00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v13 = *(void *)(v0 + 152);
  uint64_t v14 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v5 = *(void *)(v0 + 104);
  uint64_t v18 = *(void *)(v0 + 80);
  uint64_t v15 = *(void *)(v0 + 112);
  uint64_t v16 = *(void *)(v0 + 64);
  uint64_t v6 = *(void *)(v0 + 48);
  uint64_t v12 = *(void *)(v0 + 56);
  uint64_t v17 = *(void *)(v0 + 88);
  uint64_t v7 = sub_1D5AB4B50();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBDE4DE0);
  v8._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
  v8._object = (void *)0x80000001D5AC8CB0;
  v9._object = (void *)0x80000001D5AC8D90;
  v9._uint64_t countAndFlagsBits = 0xD000000000000067;
  Logger.trace(file:function:)(v8, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v13, v6, v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v12, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v5, v16, v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D5AB3260();
  uint64_t v10 = *(void *)(v18 + 24);
  swift_getObjectType();
  *(_WORD *)(v0 + 200) = 327;
  uint64_t v19 = *(void *)(v10 + 64) + **(int **)(v10 + 64);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v11;
  sub_1D5AB2210();
  void *v11 = v0;
  v11[1] = sub_1D5A1ED40;
  __asm { BRAA            X9, X16 }
}

uint64_t sub_1D5A1ED40()
{
  *(void *)(*(void *)v1 + 192) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D5A1EEFC;
  }
  else {
    uint64_t v2 = sub_1D5A1EE54;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D5A1EE54()
{
  (*(void (**)(void, void))(v0[21] + 8))(v0[22], v0[20]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1D5A1EEFC()
{
  (*(void (**)(void, void))(v0[21] + 8))(v0[22], v0[20]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t WorkoutPlanClient.repeatWorkoutPlan(templateIdentifier:startingOn:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = sub_1D5AB1EB0();
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  uint64_t v6 = sub_1D5AB1D20();
  v4[9] = v6;
  v4[10] = *(void *)(v6 - 8);
  v4[11] = swift_task_alloc();
  uint64_t v7 = sub_1D5AB1D90();
  v4[12] = v7;
  v4[13] = *(void *)(v7 - 8);
  v4[14] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D5A1F120, 0, 0);
}

void sub_1D5A1F120()
{
  if (qword_1EBDE4E00 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v14 = *(void *)(v0 + 48);
  uint64_t v7 = *(void *)(v0 + 32);
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v8 = *(void *)(v0 + 24);
  uint64_t v9 = sub_1D5AB4B50();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EBDE4DE0);
  v10._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
  v10._object = (void *)0x80000001D5AC8CB0;
  v11._object = (void *)0x80000001D5AC8E00;
  v11._uint64_t countAndFlagsBits = 0xD000000000000031;
  Logger.trace(file:function:)(v10, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v8, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v7, v14);
  sub_1D5AB1D80();
  uint64_t v12 = *(void *)(v6 + 24);
  swift_getObjectType();
  *(_WORD *)(v0 + 136) = 304;
  uint64_t v15 = *(void *)(v12 + 64) + **(int **)(v12 + 64);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v13;
  sub_1D5AB2210();
  *uint64_t v13 = v0;
  v13[1] = sub_1D5A1F374;
  __asm { BRAA            X9, X16 }
}

uint64_t sub_1D5A1F374()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D5A1F524;
  }
  else {
    uint64_t v2 = sub_1D5A1F488;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D5A1F488()
{
  (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1D5A1F524()
{
  (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t WorkoutPlanClient.makeWorkoutPlanSchedule(request:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1D5A1F5E4, 0, 0);
}

void sub_1D5A1F5E4()
{
  if (qword_1EBDE4E00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE4DE0);
  v3._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001D5AC8CB0;
  v4._object = (void *)0x80000001D5AC8E40;
  v4._uint64_t countAndFlagsBits = 0xD000000000000021;
  Logger.trace(file:function:)(v3, v4);
  uint64_t v5 = *(void *)(v1 + 24);
  swift_getObjectType();
  *(_WORD *)(v0 + 56) = 298;
  uint64_t v7 = *(void *)(v5 + 64) + **(int **)(v5 + 64);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v6;
  sub_1D5AB3F00();
  sub_1D5AB34E0();
  *uint64_t v6 = v0;
  v6[1] = sub_1D5A1F7D0;
  __asm { BRAA            X9, X16 }
}

uint64_t sub_1D5A1F7D0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D5A27F70, 0, 0);
  }
  else
  {
    Swift::String v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t WorkoutPlanClient.updateWorkoutPlan(_:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1D5A1F928, 0, 0);
}

void sub_1D5A1F928()
{
  if (qword_1EBDE4E00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE4DE0);
  v3._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001D5AC8CB0;
  v4._object = (void *)0x80000001D5AC8E70;
  v4._uint64_t countAndFlagsBits = 0xD000000000000015;
  Logger.trace(file:function:)(v3, v4);
  uint64_t v5 = *(void *)(v1 + 24);
  swift_getObjectType();
  *(_WORD *)(v0 + 56) = 321;
  uint64_t v7 = *(void *)(v5 + 64) + **(int **)(v5 + 64);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v6;
  sub_1D5AB2210();
  *uint64_t v6 = v0;
  v6[1] = sub_1D5A1F7D0;
  __asm { BRAA            X9, X16 }
}

uint64_t WorkoutPlanClient.queryActiveWorkoutPlan()(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_1D5A1FB18, 0, 0);
}

uint64_t sub_1D5A1FB18()
{
  if (qword_1EBDE4E00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE4DE0);
  v3._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001D5AC8CB0;
  v4._object = (void *)0x80000001D5AC8E90;
  v4._uint64_t countAndFlagsBits = 0xD000000000000018;
  Logger.trace(file:function:)(v3, v4);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 48) = 299;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 + 56)
                                                                                              + **(int **)(v5 + 56));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v7;
  uint64_t v8 = sub_1D5AB2210();
  *uint64_t v7 = v0;
  v7[1] = sub_1D5A1FCD4;
  uint64_t v9 = *(void *)(v0 + 16);
  uint64_t v10 = MEMORY[0x1E4F9C2A0];
  uint64_t v11 = MEMORY[0x1E4F9C2A8];
  return v13(v9, v0 + 48, v8, v10, v11, ObjectType, v5);
}

uint64_t sub_1D5A1FCD4()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D5A1FE08, 0, 0);
  }
  else
  {
    Swift::String v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1D5A1FE08()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t WorkoutPlanClient.queryWorkoutPlanSummary(_:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1D5A1FE44, 0, 0);
}

void sub_1D5A1FE44()
{
  if (qword_1EBDE4E00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE4DE0);
  v3._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001D5AC8CB0;
  v4._object = (void *)0x80000001D5AC8EB0;
  v4._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  Logger.trace(file:function:)(v3, v4);
  uint64_t v5 = *(void *)(v1 + 24);
  swift_getObjectType();
  *(_WORD *)(v0 + 56) = 303;
  uint64_t v7 = *(void *)(v5 + 64) + **(int **)(v5 + 64);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v6;
  sub_1D5AB1D20();
  sub_1D5AB3280();
  *uint64_t v6 = v0;
  v6[1] = sub_1D5A1F7D0;
  __asm { BRAA            X9, X16 }
}

uint64_t WorkoutPlanClient.queryPendingWorkoutPlanSummary()(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_1D5A2004C, 0, 0);
}

uint64_t sub_1D5A2004C()
{
  if (qword_1EBDE4E00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE4DE0);
  v3._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001D5AC8CB0;
  v4._object = (void *)0x80000001D5AC8ED0;
  v4._uint64_t countAndFlagsBits = 0xD000000000000020;
  Logger.trace(file:function:)(v3, v4);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 48) = 324;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 + 56)
                                                                                              + **(int **)(v5 + 56));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v7;
  uint64_t v8 = sub_1D5AB3280();
  *uint64_t v7 = v0;
  v7[1] = sub_1D5A2020C;
  uint64_t v9 = *(void *)(v0 + 16);
  uint64_t v10 = MEMORY[0x1E4F9D2D8];
  uint64_t v11 = MEMORY[0x1E4F9D2E0];
  return v13(v9, v0 + 48, v8, v10, v11, ObjectType, v5);
}

uint64_t sub_1D5A2020C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D5A27F74, 0, 0);
  }
  else
  {
    Swift::String v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t WorkoutPlanClient.queryWorkoutPlanSummariesViewed()()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x1F4188298](sub_1D5A20360, 0, 0);
}

uint64_t sub_1D5A20360()
{
  if (qword_1EBDE4E00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE4DE0);
  v3._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001D5AC8CB0;
  v4._object = (void *)0x80000001D5AC8F00;
  v4._uint64_t countAndFlagsBits = 0xD000000000000021;
  Logger.trace(file:function:)(v3, v4);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 48) = 325;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(*(void *)(v5 + 56) + **(int **)(v5 + 56));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726BC8);
  uint64_t v9 = sub_1D59A3114(&qword_1EA726BD0, &qword_1EA726BC8);
  unint64_t v10 = sub_1D5A27738();
  *uint64_t v7 = v0;
  v7[1] = sub_1D5A20560;
  return v12(v0 + 16, v0 + 48, v8, v9, v10, ObjectType, v5);
}

uint64_t sub_1D5A20560()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D5A27F74;
  }
  else {
    uint64_t v2 = sub_1D5A27F78;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t WorkoutPlanClient.insertCompletedWorkoutPlanSummary(_:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_1D5A20694, 0, 0);
}

uint64_t sub_1D5A20694()
{
  if (qword_1EBDE4E00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE4DE0);
  v3._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001D5AC8CB0;
  v4._object = (void *)0x80000001D5AC8F30;
  v4._uint64_t countAndFlagsBits = 0xD000000000000025;
  Logger.trace(file:function:)(v3, v4);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 48) = 296;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 + 48)
                                                                                              + **(int **)(v5 + 48));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v7;
  uint64_t v8 = sub_1D5AB3B90();
  *uint64_t v7 = v0;
  v7[1] = sub_1D5A2020C;
  uint64_t v9 = *(void *)(v0 + 16);
  uint64_t v10 = MEMORY[0x1E4F9E250];
  uint64_t v11 = MEMORY[0x1E4F9E258];
  return v13(v0 + 48, v9, v8, v10, v11, ObjectType, v5);
}

uint64_t WorkoutPlanClient.requestWorkoutPlans(state:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 25) = a2;
  *(void *)(v3 + 56) = a1;
  *(void *)(v3 + 64) = v2;
  return MEMORY[0x1F4188298](sub_1D5A20878, 0, 0);
}

void sub_1D5A20878()
{
  if (qword_1EBDE4E00 != -1) {
    swift_once();
  }
  char v1 = *(unsigned char *)(v0 + 25);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v4 = sub_1D5AB4B50();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EBDE4DE0);
  v5._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
  v5._object = (void *)0x80000001D5AC8CB0;
  v6._object = (void *)0x80000001D5AC8F60;
  v6._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  Logger.trace(file:function:)(v5, v6);
  uint64_t v7 = *(void *)(v2 + 24);
  swift_getObjectType();
  *(_WORD *)(v0 + 26) = 305;
  *(void *)(v0 + 16) = v3;
  *(unsigned char *)(v0 + 24) = v1 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726BF8);
  sub_1D5AB2330();
  *(void *)(v0 + 48) = *(void *)(v0 + 40);
  uint64_t v9 = *(void *)(v7 + 64) + **(int **)(v7 + 64);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726C00);
  sub_1D59A3114(&qword_1EA726C08, &qword_1EA726C00);
  sub_1D5A277DC();
  *uint64_t v8 = v0;
  v8[1] = sub_1D5A20AD8;
  __asm { BRAA            X9, X16 }
}

uint64_t sub_1D5A20AD8()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D5A20C08;
  }
  else {
    uint64_t v2 = sub_1D5A20BEC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D5A20BEC()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 32));
}

uint64_t sub_1D5A20C08()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t WorkoutPlanClient.queryDailyNotificationSchedule(for:)(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return MEMORY[0x1F4188298](sub_1D5A20C40, 0, 0);
}

void sub_1D5A20C40()
{
  if (qword_1EBDE4E00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE4DE0);
  v3._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001D5AC8CB0;
  v4._object = (void *)0x80000001D5AC8F80;
  v4._uint64_t countAndFlagsBits = 0xD000000000000024;
  Logger.trace(file:function:)(v3, v4);
  uint64_t v5 = *(void *)(v1 + 24);
  swift_getObjectType();
  *(_WORD *)(v0 + 56) = 302;
  uint64_t v7 = *(void *)(v5 + 64) + **(int **)(v5 + 64);
  Swift::String v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v6;
  sub_1D5AB1CE0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE37E0);
  sub_1D5A27880();
  sub_1D5A278EC();
  *Swift::String v6 = v0;
  v6[1] = sub_1D5A20E4C;
  __asm { BRAA            X9, X16 }
}

uint64_t sub_1D5A20E4C()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D5A27F70;
  }
  else {
    uint64_t v2 = sub_1D5A27F78;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t WorkoutPlanClient.queryNextIncompleteWorkoutReference(after:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1D5A20F84, 0, 0);
}

void sub_1D5A20F84()
{
  if (qword_1EBDE4E00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE4DE0);
  v3._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001D5AC8CB0;
  v4._object = (void *)0x80000001D5AC8FB0;
  v4._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
  Logger.trace(file:function:)(v3, v4);
  uint64_t v5 = *(void *)(v1 + 24);
  swift_getObjectType();
  *(_WORD *)(v0 + 56) = 319;
  uint64_t v7 = *(void *)(v5 + 64) + **(int **)(v5 + 64);
  Swift::String v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v6;
  sub_1D5AB1CE0();
  sub_1D5AB3600();
  *Swift::String v6 = v0;
  v6[1] = sub_1D5983170;
  __asm { BRAA            X9, X16 }
}

uint64_t WorkoutPlanClient.queryIncompleteMatchingWorkoutReferences(plan:workout:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = sub_1D5AB1D20();
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  uint64_t v6 = sub_1D5AB44B0();
  v4[10] = v6;
  v4[11] = *(void *)(v6 - 8);
  v4[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D5A21290, 0, 0);
}

void sub_1D5A21290()
{
  uint64_t v1 = *(void *)(v0 + 48);
  (*(void (**)(void, void, void))(*(void *)(v0 + 64) + 16))(*(void *)(v0 + 72), *(void *)(v0 + 24), *(void *)(v0 + 56));
  swift_bridgeObjectRetain();
  sub_1D5AB44A0();
  uint64_t v2 = *(void *)(v1 + 24);
  swift_getObjectType();
  *(_WORD *)(v0 + 120) = 330;
  uint64_t v4 = *(void *)(v2 + 64) + **(int **)(v2 + 64);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726C38);
  sub_1D59A3114(&qword_1EA726C40, &qword_1EA726C38);
  sub_1D5A27990();
  *uint64_t v3 = v0;
  v3[1] = sub_1D5A21468;
  __asm { BRAA            X9, X16 }
}

uint64_t sub_1D5A21468()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D5A21614;
  }
  else {
    uint64_t v2 = sub_1D5A2157C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D5A2157C()
{
  (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
  uint64_t v1 = v0[2];
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  return v2(v1);
}

uint64_t sub_1D5A21614()
{
  (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t WorkoutPlanClient.evaluateActiveWorkoutPlanCompletion()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_1D5A216BC, 0, 0);
}

uint64_t sub_1D5A216BC()
{
  if (qword_1EBDE4E00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE4DE0);
  v3._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001D5AC8CB0;
  v4._object = (void *)0x80000001D5AC8FE0;
  v4._uint64_t countAndFlagsBits = 0xD000000000000025;
  Logger.trace(file:function:)(v3, v4);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 40) = 326;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 + 40) + **(int **)(v5 + 40));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1D5A21858;
  return v9(v0 + 40, ObjectType, v5);
}

uint64_t sub_1D5A21858()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 32) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D5A2198C, 0, 0);
  }
  else
  {
    Swift::String v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1D5A2198C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t WorkoutPlanClient.queryActiveWorkoutPlanItemMetrics()()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x1F4188298](sub_1D5A219C4, 0, 0);
}

uint64_t sub_1D5A219C4()
{
  if (qword_1EBDE4E00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE4DE0);
  v3._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001D5AC8CB0;
  v4._object = (void *)0x80000001D5AC9010;
  v4._uint64_t countAndFlagsBits = 0xD000000000000023;
  Logger.trace(file:function:)(v3, v4);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 48) = 300;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(*(void *)(v5 + 56) + **(int **)(v5 + 56));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726C68);
  uint64_t v9 = sub_1D59A3114(&qword_1EA726C70, &qword_1EA726C68);
  unint64_t v10 = sub_1D5A27A34();
  *uint64_t v7 = v0;
  v7[1] = sub_1D5A21BC4;
  return v12(v0 + 16, v0 + 48, v8, v9, v10, ObjectType, v5);
}

uint64_t sub_1D5A21BC4()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D5A1FE08;
  }
  else {
    uint64_t v2 = sub_1D5A21CD8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D5A21CD8()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t WorkoutPlanClient.queryWorkoutPlanItemMetrics(planIdentifier:)(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return MEMORY[0x1F4188298](sub_1D5A21D14, 0, 0);
}

void sub_1D5A21D14()
{
  if (qword_1EBDE4E00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE4DE0);
  v3._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001D5AC8CB0;
  v4._object = (void *)0x80000001D5AC9040;
  v4._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  Logger.trace(file:function:)(v3, v4);
  uint64_t v5 = *(void *)(v1 + 24);
  swift_getObjectType();
  *(_WORD *)(v0 + 56) = 329;
  uint64_t v7 = *(void *)(v5 + 64) + **(int **)(v5 + 64);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v6;
  sub_1D5AB1D20();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726C68);
  sub_1D59A3114(&qword_1EA726C70, &qword_1EA726C68);
  sub_1D5A27A34();
  *uint64_t v6 = v0;
  v6[1] = sub_1D5A21F40;
  __asm { BRAA            X9, X16 }
}

uint64_t sub_1D5A21F40()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D59832A4;
  }
  else {
    uint64_t v2 = sub_1D5A21CD8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t WorkoutPlanClient.requestWorkoutPlanAlternatives(workoutIdentifier:workoutPlan:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  uint64_t v6 = sub_1D5AB2210();
  v5[7] = v6;
  v5[8] = *(void *)(v6 - 8);
  v5[9] = swift_task_alloc();
  uint64_t v7 = sub_1D5AB4220();
  v5[10] = v7;
  v5[11] = *(void *)(v7 - 8);
  v5[12] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726C98);
  v5[13] = swift_task_alloc();
  uint64_t v8 = sub_1D5AB3500();
  v5[14] = v8;
  v5[15] = *(void *)(v8 - 8);
  v5[16] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D5A22204, 0, 0);
}

uint64_t sub_1D5A22204()
{
  if (qword_1EBDE4E00 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE4DE0);
  v2._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
  v2._object = (void *)0x80000001D5AC8CB0;
  v3._object = (void *)0x80000001D5AC9070;
  v3._uint64_t countAndFlagsBits = 0xD00000000000003ELL;
  Logger.trace(file:function:)(v2, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726CA0);
  sub_1D5AB1D20();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1D5AB90F0;
  sub_1D5AB21C0();
  uint64_t v5 = sub_1D5979F58(v4);
  v0[17] = v5;
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[18] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1D5A22418;
  uint64_t v7 = v0[6];
  v6[4] = v5;
  v6[5] = v7;
  return MEMORY[0x1F4188298](sub_1D5A22BC4, 0, 0);
}

uint64_t sub_1D5A22418(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 152) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1D5A22A4C;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)(v4 + 160) = a1;
    uint64_t v5 = sub_1D5A22548;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1D5A22548()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 104);
  sub_1D5971248(*(void *)(v0 + 160), v3);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) != 1)
  {
    uint64_t v9 = *(void *)(v0 + 64);
    uint64_t v8 = *(void *)(v0 + 72);
    uint64_t v11 = *(void *)(v0 + 48);
    uint64_t v10 = *(void *)(v0 + 56);
    uint64_t v12 = *(void *)(v0 + 40);
    (*(void (**)(void, void, void))(*(void *)(v0 + 120) + 32))(*(void *)(v0 + 128), *(void *)(v0 + 104), *(void *)(v0 + 112));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v12, v10);
    swift_bridgeObjectRetain();
    sub_1D5AB34F0();
    sub_1D5AB4210();
    uint64_t v13 = *(void *)(v11 + 24);
    swift_getObjectType();
    *(_WORD *)(v0 + 184) = 307;
    uint64_t v15 = *(void *)(v13 + 64) + **(int **)(v13 + 64);
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v14;
    sub_1D5AB3A60();
    *uint64_t v14 = v0;
    v14[1] = sub_1D5A22870;
    __asm { BRAA            X9, X16 }
  }
  sub_1D5A27AD8(*(void *)(v0 + 104));
  uint64_t v4 = sub_1D5AB3030();
  sub_1D5A27E6C(&qword_1EA726CB0, MEMORY[0x1E4F9CF68]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v4 - 8) + 104))(v5, *MEMORY[0x1E4F9CF18], v4);
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1D5A22870()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D5A22AE0;
  }
  else {
    uint64_t v2 = sub_1D5A22984;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D5A22984()
{
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[14];
  (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1D5A22A4C()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D5A22AE0()
{
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[14];
  (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t WorkoutPlanClient.queryWorkoutPlanTemplates(identifiers:)(uint64_t a1)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = v1;
  return MEMORY[0x1F4188298](sub_1D5A22BC4, 0, 0);
}

void sub_1D5A22BC4()
{
  if (qword_1EBDE4E00 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE4DE0);
  v4._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
  v4._object = (void *)0x80000001D5AC8CB0;
  v5._object = (void *)0x80000001D5AC90B0;
  v5._uint64_t countAndFlagsBits = 0xD000000000000027;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  swift_getObjectType();
  *(_WORD *)(v0 + 64) = 314;
  *(void *)(v0 + 24) = v2;
  uint64_t v8 = *(void *)(v6 + 64) + **(int **)(v6 + 64);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726CB8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726CC0);
  sub_1D59A3114(&qword_1EA726CC8, &qword_1EA726CB8);
  sub_1D5A27B38();
  sub_1D59A3114(&qword_1EA726CE0, &qword_1EA726CC0);
  sub_1D5A27BDC();
  *uint64_t v7 = v0;
  v7[1] = sub_1D5A22E28;
  __asm { BRAA            X9, X16 }
}

uint64_t sub_1D5A22E28()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D5A27F7C;
  }
  else {
    uint64_t v2 = sub_1D5A27F78;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t WorkoutPlanClient.updateWorkoutPlanAlternatives(planIdentifier:reference:workoutIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  _OWORD v6[2] = a1;
  _OWORD v6[3] = a2;
  uint64_t v7 = sub_1D5AB3600();
  v6[8] = v7;
  v6[9] = *(void *)(v7 - 8);
  v6[10] = swift_task_alloc();
  uint64_t v8 = sub_1D5AB1D20();
  v6[11] = v8;
  v6[12] = *(void *)(v8 - 8);
  v6[13] = swift_task_alloc();
  uint64_t v9 = sub_1D5AB41A0();
  v6[14] = v9;
  v6[15] = *(void *)(v9 - 8);
  v6[16] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D5A230BC, 0, 0);
}

void sub_1D5A230BC()
{
  if (qword_1EBDE4E00 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v13 = *(void *)(v0 + 88);
  uint64_t v14 = *(void *)(v0 + 64);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v6 = *(void *)(v0 + 32);
  uint64_t v7 = *(void *)(v0 + 24);
  uint64_t v8 = sub_1D5AB4B50();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EBDE4DE0);
  v9._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
  v9._object = (void *)0x80000001D5AC8CB0;
  v10._object = (void *)0x80000001D5AC90E0;
  v10._uint64_t countAndFlagsBits = 0xD00000000000004ALL;
  Logger.trace(file:function:)(v9, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v7, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6, v14);
  swift_bridgeObjectRetain();
  sub_1D5AB4190();
  uint64_t v11 = *(void *)(v5 + 24);
  swift_getObjectType();
  *(_WORD *)(v0 + 152) = 309;
  uint64_t v15 = *(void *)(v11 + 64) + **(int **)(v11 + 64);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v12;
  sub_1D5AB2210();
  *uint64_t v12 = v0;
  v12[1] = sub_1D5A2332C;
  __asm { BRAA            X9, X16 }
}

uint64_t sub_1D5A2332C()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D5A234DC;
  }
  else {
    uint64_t v2 = sub_1D5A23440;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D5A23440()
{
  (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1D5A234DC()
{
  (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t WorkoutPlanClient.deleteAllActiveWorkoutPlans()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_1D5A23598, 0, 0);
}

uint64_t sub_1D5A23598()
{
  if (qword_1EBDE4E00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE4DE0);
  v3._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001D5AC8CB0;
  v4._object = (void *)0x80000001D5AC9130;
  v4._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  Logger.trace(file:function:)(v3, v4);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 40) = 333;
  Swift::String v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 + 40) + **(int **)(v5 + 40));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1D5A23730;
  return v9(v0 + 40, ObjectType, v5);
}

uint64_t sub_1D5A23730()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 32) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D5A27F84, 0, 0);
  }
  else
  {
    Swift::String v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t WorkoutPlanClient.deleteWorkoutPlan(_:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_1D5A23884, 0, 0);
}

uint64_t sub_1D5A23884()
{
  if (qword_1EBDE4E00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE4DE0);
  v3._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001D5AC8CB0;
  v4._object = (void *)0x80000001D5AC9150;
  v4._uint64_t countAndFlagsBits = 0xD000000000000015;
  Logger.trace(file:function:)(v3, v4);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 48) = 295;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 + 48)
                                                                                              + **(int **)(v5 + 48));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v7;
  uint64_t v8 = sub_1D5AB1D20();
  *uint64_t v7 = v0;
  v7[1] = sub_1D5A2020C;
  uint64_t v9 = *(void *)(v0 + 16);
  uint64_t v10 = MEMORY[0x1E4F9BDD8];
  uint64_t v11 = MEMORY[0x1E4F9BDE0];
  return v13(v0 + 48, v9, v8, v10, v11, ObjectType, v5);
}

uint64_t WorkoutPlanClient.insertWorkoutPlan(_:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_1D5A23A60, 0, 0);
}

uint64_t sub_1D5A23A60()
{
  if (qword_1EBDE4E00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE4DE0);
  v3._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001D5AC8CB0;
  v4._object = (void *)0x80000001D5AC9170;
  v4._uint64_t countAndFlagsBits = 0xD000000000000015;
  Logger.trace(file:function:)(v3, v4);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 48) = 297;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 + 48)
                                                                                              + **(int **)(v5 + 48));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v7;
  uint64_t v8 = sub_1D5AB2210();
  *uint64_t v7 = v0;
  v7[1] = sub_1D5A2020C;
  uint64_t v9 = *(void *)(v0 + 16);
  uint64_t v10 = MEMORY[0x1E4F9C2A0];
  uint64_t v11 = MEMORY[0x1E4F9C2A8];
  return v13(v0 + 48, v9, v8, v10, v11, ObjectType, v5);
}

uint64_t WorkoutPlanClient.insertWorkoutPlanTemplate(_:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_1D5A23C3C, 0, 0);
}

uint64_t sub_1D5A23C3C()
{
  if (qword_1EBDE4E00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE4DE0);
  v3._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001D5AC8CB0;
  v4._object = (void *)0x80000001D5AC9190;
  v4._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  Logger.trace(file:function:)(v3, v4);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 48) = 323;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 + 48)
                                                                                              + **(int **)(v5 + 48));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v7;
  uint64_t v8 = sub_1D5AB3500();
  *uint64_t v7 = v0;
  v7[1] = sub_1D5A2020C;
  uint64_t v9 = *(void *)(v0 + 16);
  uint64_t v10 = MEMORY[0x1E4F9D5B8];
  uint64_t v11 = MEMORY[0x1E4F9D5C0];
  return v13(v0 + 48, v9, v8, v10, v11, ObjectType, v5);
}

uint64_t WorkoutPlanClient.requestWorkoutPlan(_:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1D5A23E1C, 0, 0);
}

void sub_1D5A23E1C()
{
  if (qword_1EBDE4E00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE4DE0);
  v3._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001D5AC8CB0;
  v4._object = (void *)0x80000001D5AC91B0;
  v4._uint64_t countAndFlagsBits = 0xD000000000000016;
  Logger.trace(file:function:)(v3, v4);
  uint64_t v5 = *(void *)(v1 + 24);
  swift_getObjectType();
  *(_WORD *)(v0 + 56) = 306;
  uint64_t v7 = *(void *)(v5 + 64) + **(int **)(v5 + 64);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v6;
  sub_1D5AB1D20();
  sub_1D5AB2210();
  *uint64_t v6 = v0;
  v6[1] = sub_1D5A1F7D0;
  __asm { BRAA            X9, X16 }
}

uint64_t WorkoutPlanClient.validateSchedule(request:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_1D5A24024, 0, 0);
}

uint64_t sub_1D5A24024()
{
  if (qword_1EBDE4E00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE4DE0);
  v3._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001D5AC8CB0;
  v4._object = (void *)0x80000001D5AC91D0;
  v4._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  Logger.trace(file:function:)(v3, v4);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 48) = 310;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 + 48)
                                                                                              + **(int **)(v5 + 48));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v7;
  uint64_t v8 = sub_1D5AB3F00();
  *uint64_t v7 = v0;
  v7[1] = sub_1D5A2020C;
  uint64_t v9 = *(void *)(v0 + 16);
  uint64_t v10 = MEMORY[0x1E4F9E4E8];
  uint64_t v11 = MEMORY[0x1E4F9E4F0];
  return v13(v0 + 48, v9, v8, v10, v11, ObjectType, v5);
}

uint64_t WorkoutPlanClient.queryAllWorkoutPlanTemplateReferences()()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x1F4188298](sub_1D5A24200, 0, 0);
}

uint64_t sub_1D5A24200()
{
  if (qword_1EBDE4E00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE4DE0);
  v3._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001D5AC8CB0;
  v4._object = (void *)0x80000001D5AC91F0;
  v4._uint64_t countAndFlagsBits = 0xD000000000000027;
  Logger.trace(file:function:)(v3, v4);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 48) = 313;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(*(void *)(v5 + 56) + **(int **)(v5 + 56));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726D38);
  uint64_t v9 = sub_1D59A3114(&qword_1EA726D40, &qword_1EA726D38);
  unint64_t v10 = sub_1D5A27C80();
  *uint64_t v7 = v0;
  v7[1] = sub_1D5A20560;
  return v12(v0 + 16, v0 + 48, v8, v9, v10, ObjectType, v5);
}

uint64_t WorkoutPlanClient.queryAllWorkoutPlanTemplatesCount()()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x1F4188298](sub_1D5A24420, 0, 0);
}

uint64_t sub_1D5A24420()
{
  if (qword_1EBDE4E00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE4DE0);
  v3._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001D5AC8CB0;
  v4._object = (void *)0x80000001D5AC9220;
  v4._uint64_t countAndFlagsBits = 0xD000000000000023;
  Logger.trace(file:function:)(v3, v4);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 48) = 332;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 + 56)
                                                                                              + **(int **)(v5 + 56));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1D5A20560;
  uint64_t v8 = MEMORY[0x1E4FBB550];
  uint64_t v9 = MEMORY[0x1E4F9F120];
  uint64_t v10 = MEMORY[0x1E4F9F128];
  return v12(v0 + 16, v0 + 48, v8, v9, v10, ObjectType, v5);
}

uint64_t WorkoutPlanClient.queryWorkoutPlanTemplateMetadata(identifiers:)(uint64_t a1)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = v1;
  return MEMORY[0x1F4188298](sub_1D5A24600, 0, 0);
}

void sub_1D5A24600()
{
  if (qword_1EBDE4E00 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE4DE0);
  v4._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
  v4._object = (void *)0x80000001D5AC8CB0;
  v5._object = (void *)0x80000001D5AC9250;
  v5._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  swift_getObjectType();
  *(_WORD *)(v0 + 64) = 316;
  *(void *)(v0 + 24) = v2;
  uint64_t v8 = *(void *)(v6 + 64) + **(int **)(v6 + 64);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726CB8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726D68);
  sub_1D59A3114(&qword_1EA726CC8, &qword_1EA726CB8);
  sub_1D5A27B38();
  sub_1D59A3114(&qword_1EA726D70, &qword_1EA726D68);
  sub_1D5A27D24();
  *uint64_t v7 = v0;
  v7[1] = sub_1D5A24864;
  __asm { BRAA            X9, X16 }
}

uint64_t sub_1D5A24864()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D5A24978;
  }
  else {
    uint64_t v2 = sub_1D5A27F78;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D5A24978()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t WorkoutPlanClient.queryAllWorkoutPlans(forTemplateIdentifier:)(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return MEMORY[0x1F4188298](sub_1D5A249B0, 0, 0);
}

void sub_1D5A249B0()
{
  if (qword_1EBDE4E00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE4DE0);
  v3._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001D5AC8CB0;
  v4._object = (void *)0x80000001D5AC9280;
  v4._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  Logger.trace(file:function:)(v3, v4);
  uint64_t v5 = *(void *)(v1 + 24);
  swift_getObjectType();
  *(_WORD *)(v0 + 56) = 315;
  uint64_t v7 = *(void *)(v5 + 64) + **(int **)(v5 + 64);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v6;
  sub_1D5AB1D20();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726C00);
  sub_1D59A3114(&qword_1EA726C08, &qword_1EA726C00);
  sub_1D5A277DC();
  *uint64_t v6 = v0;
  v6[1] = sub_1D5A20E4C;
  __asm { BRAA            X9, X16 }
}

uint64_t WorkoutPlanClient.deleteWorkoutPlanTemplate(_:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_1D5A24BFC, 0, 0);
}

uint64_t sub_1D5A24BFC()
{
  if (qword_1EBDE4E00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE4DE0);
  v3._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001D5AC8CB0;
  v4._object = (void *)0x80000001D5AC92B0;
  v4._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  Logger.trace(file:function:)(v3, v4);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 48) = 322;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 + 48)
                                                                                              + **(int **)(v5 + 48));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v7;
  uint64_t v8 = sub_1D5AB1D20();
  *uint64_t v7 = v0;
  v7[1] = sub_1D5A2020C;
  uint64_t v9 = *(void *)(v0 + 16);
  uint64_t v10 = MEMORY[0x1E4F9BDD8];
  uint64_t v11 = MEMORY[0x1E4F9BDE0];
  return v13(v0 + 48, v9, v8, v10, v11, ObjectType, v5);
}

uint64_t WorkoutPlanClient.updateWorkoutPlanTemplateName(identifier:name:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = sub_1D5AB1D20();
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  uint64_t v6 = sub_1D5AB4370();
  v4[9] = v6;
  v4[10] = *(void *)(v6 - 8);
  v4[11] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D5A24ED8, 0, 0);
}

uint64_t sub_1D5A24ED8()
{
  if (qword_1EBDE4E00 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = sub_1D5AB4B50();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EBDE4DE0);
  v7._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
  v7._object = (void *)0x80000001D5AC8CB0;
  v8._object = (void *)0x80000001D5AC92D0;
  v8._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
  Logger.trace(file:function:)(v7, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v5, v3);
  swift_bridgeObjectRetain();
  sub_1D5AB4360();
  uint64_t v9 = *(void *)(v4 + 24);
  uint64_t ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 112) = 317;
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 + 48)
                                                                                              + **(int **)(v9 + 48));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v11;
  void *v11 = v0;
  v11[1] = sub_1D5A250E0;
  uint64_t v12 = *(void *)(v0 + 88);
  uint64_t v13 = *(void *)(v0 + 72);
  uint64_t v14 = MEMORY[0x1E4F9EA78];
  uint64_t v15 = MEMORY[0x1E4F9EA80];
  return v17(v0 + 112, v12, v13, v14, v15, ObjectType, v9);
}

uint64_t sub_1D5A250E0()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D5A2527C;
  }
  else {
    uint64_t v2 = sub_1D5A251F4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D5A251F4()
{
  (*(void (**)(void, void))(v0[10] + 8))(v0[11], v0[9]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1D5A2527C()
{
  (*(void (**)(void, void))(v0[10] + 8))(v0[11], v0[9]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t WorkoutPlanClient.endWorkoutPlan(identifier:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_1D5A25324, 0, 0);
}

uint64_t sub_1D5A25324()
{
  if (qword_1EBDE4E00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE4DE0);
  v3._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001D5AC8CB0;
  v4._object = (void *)0x80000001D5AC9300;
  v4._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  Logger.trace(file:function:)(v3, v4);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 48) = 318;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 + 48)
                                                                                              + **(int **)(v5 + 48));
  Swift::String v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v7;
  uint64_t v8 = sub_1D5AB1D20();
  *Swift::String v7 = v0;
  v7[1] = sub_1D5A2020C;
  uint64_t v9 = *(void *)(v0 + 16);
  uint64_t v10 = MEMORY[0x1E4F9BDD8];
  uint64_t v11 = MEMORY[0x1E4F9BDE0];
  return v13(v0 + 48, v9, v8, v10, v11, ObjectType, v5);
}

uint64_t WorkoutPlanClient.queryAllArchivedPlanSessions()()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x1F4188298](sub_1D5A25500, 0, 0);
}

uint64_t sub_1D5A25500()
{
  if (qword_1EBDE4E00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE4DE0);
  v3._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001D5AC8CB0;
  v4._object = (void *)0x80000001D5AC9320;
  v4._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  Logger.trace(file:function:)(v3, v4);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 48) = 312;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(*(void *)(v5 + 56) + **(int **)(v5 + 56));
  Swift::String v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726DB0);
  uint64_t v9 = sub_1D59A3114(&qword_1EA726DB8, &qword_1EA726DB0);
  unint64_t v10 = sub_1D5A27DC8();
  *Swift::String v7 = v0;
  v7[1] = sub_1D5A20560;
  return v12(v0 + 16, v0 + 48, v8, v9, v10, ObjectType, v5);
}

uint64_t WorkoutPlanClient.insertArchivedPlanSession(session:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_1D5A2571C, 0, 0);
}

uint64_t sub_1D5A2571C()
{
  if (qword_1EBDE4E00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE4DE0);
  v3._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001D5AC8CB0;
  v4._object = (void *)0x80000001D5AC9340;
  v4._uint64_t countAndFlagsBits = 0xD000000000000023;
  Logger.trace(file:function:)(v3, v4);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 48) = 311;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 + 48)
                                                                                              + **(int **)(v5 + 48));
  Swift::String v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v7;
  uint64_t v8 = sub_1D5AB3E50();
  *Swift::String v7 = v0;
  v7[1] = sub_1D5A1FCD4;
  uint64_t v9 = *(void *)(v0 + 16);
  uint64_t v10 = MEMORY[0x1E4F9E3E8];
  uint64_t v11 = MEMORY[0x1E4F9E3F0];
  return v13(v0 + 48, v9, v8, v10, v11, ObjectType, v5);
}

uint64_t WorkoutPlanClient.filterCatalog(request:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1D5A25900, 0, 0);
}

void sub_1D5A25900()
{
  if (qword_1EBDE4E00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE4DE0);
  v3._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001D5AC8CB0;
  v4._object = (void *)0x80000001D5AC9370;
  v4._uint64_t countAndFlagsBits = 0xD000000000000017;
  Logger.trace(file:function:)(v3, v4);
  uint64_t v5 = *(void *)(v1 + 24);
  swift_getObjectType();
  *(_WORD *)(v0 + 56) = 331;
  uint64_t v7 = *(void *)(v5 + 64) + **(int **)(v5 + 64);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v6;
  sub_1D5AB44F0();
  sub_1D5AB3300();
  *uint64_t v6 = v0;
  v6[1] = sub_1D5A1F7D0;
  __asm { BRAA            X9, X16 }
}

uint64_t sub_1D5A25AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v17;
  *uint64_t v17 = v8;
  v17[1] = sub_1D598AF68;
  return WorkoutPlanClient.createWorkoutPlan(modalityPreferences:name:planIdentifier:schedule:startDate:workoutPlanLength:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1D5A25BE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v17;
  *uint64_t v17 = v8;
  v17[1] = sub_1D598AF68;
  return WorkoutPlanClient.createUnsavedWorkoutPlan(modalityPreferences:name:planIdentifier:schedule:startDate:workoutPlanLength:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1D5A25CD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D598AF68;
  return WorkoutPlanClient.repeatWorkoutPlan(templateIdentifier:startingOn:)(a1, a2, a3);
}

uint64_t sub_1D5A25D8C(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_1D598AF68;
  return MEMORY[0x1F4188298](sub_1D5A24024, 0, 0);
}

uint64_t sub_1D5A25E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  _OWORD v7[3] = a2;
  v7[4] = v6;
  v7[1] = sub_1D598AF68;
  id v7[2] = a1;
  return MEMORY[0x1F4188298](sub_1D5A1F5E4, 0, 0);
}

uint64_t sub_1D5A25EF8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  _OWORD v7[3] = a2;
  v7[4] = v6;
  v7[1] = sub_1D598AF68;
  id v7[2] = a1;
  return MEMORY[0x1F4188298](sub_1D5A1F928, 0, 0);
}

uint64_t sub_1D5A25FB4(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_1D5984480;
  return MEMORY[0x1F4188298](sub_1D5A1FB18, 0, 0);
}

uint64_t sub_1D5A26064(uint64_t a1, char a2)
{
  char v5 = a2 & 1;
  uint64_t v6 = *v2;
  uint64_t v7 = swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *(void *)uint64_t v7 = v3;
  *(void *)(v7 + 8) = sub_1D5A27F80;
  *(unsigned char *)(v7 + 25) = v5;
  *(void *)(v7 + 56) = a1;
  *(void *)(v7 + 64) = v6;
  return MEMORY[0x1F4188298](sub_1D5A20878, 0, 0);
}

uint64_t sub_1D5A26124(uint64_t a1)
{
  uint64_t v4 = *v1;
  char v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *char v5 = v2;
  v5[1] = sub_1D5A27F80;
  v5[3] = a1;
  v5[4] = v4;
  return MEMORY[0x1F4188298](sub_1D5A20C40, 0, 0);
}

uint64_t sub_1D5A261D4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  _OWORD v7[3] = a2;
  v7[4] = v6;
  v7[1] = sub_1D598AF68;
  id v7[2] = a1;
  return MEMORY[0x1F4188298](sub_1D5A20F84, 0, 0);
}

uint64_t sub_1D5A26290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D5A27F80;
  return WorkoutPlanClient.queryIncompleteMatchingWorkoutReferences(plan:workout:)(a1, a2, a3);
}

uint64_t sub_1D5A26340()
{
  uint64_t v2 = *v0;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1D5A27F80;
  v3[3] = v2;
  return MEMORY[0x1F4188298](sub_1D5A24200, 0, 0);
}

uint64_t sub_1D5A263EC()
{
  uint64_t v2 = *v0;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1D5A27F80;
  v3[3] = v2;
  return MEMORY[0x1F4188298](sub_1D5A24420, 0, 0);
}

uint64_t sub_1D5A26498(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D5A27F80;
  v5[4] = a1;
  v5[5] = v4;
  return MEMORY[0x1F4188298](sub_1D5A24600, 0, 0);
}

uint64_t sub_1D5A26548(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D5A27F80;
  v5[4] = a1;
  v5[5] = v4;
  return MEMORY[0x1F4188298](sub_1D5A22BC4, 0, 0);
}

uint64_t sub_1D5A265F8(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D5A27F80;
  v5[3] = a1;
  v5[4] = v4;
  return MEMORY[0x1F4188298](sub_1D5A249B0, 0, 0);
}

uint64_t sub_1D5A266A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1D598AF68;
  return WorkoutPlanClient.requestWorkoutPlanAlternatives(workoutIdentifier:workoutPlan:)(a1, a2, a3, a4);
}

uint64_t sub_1D5A2676C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  void *v11 = v5;
  v11[1] = sub_1D598AF68;
  return WorkoutPlanClient.updateWorkoutPlanAlternatives(planIdentifier:reference:workoutIdentifier:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1D5A26838()
{
  uint64_t v2 = *v0;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1D598AF68;
  v3[2] = v2;
  return MEMORY[0x1F4188298](sub_1D5A23598, 0, 0);
}

uint64_t sub_1D5A268E0(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_1D598AF68;
  return MEMORY[0x1F4188298](sub_1D5A23884, 0, 0);
}

uint64_t sub_1D5A26990(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_1D598AF68;
  return MEMORY[0x1F4188298](sub_1D5A23A60, 0, 0);
}

uint64_t sub_1D5A26A40(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_1D598AF68;
  return MEMORY[0x1F4188298](sub_1D5A23C3C, 0, 0);
}

uint64_t sub_1D5A26AF0(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_1D598AF68;
  return MEMORY[0x1F4188298](sub_1D5A24BFC, 0, 0);
}

uint64_t sub_1D5A26BA0(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  _OWORD v7[3] = a2;
  v7[4] = v6;
  v7[1] = sub_1D598AF68;
  id v7[2] = a1;
  return MEMORY[0x1F4188298](sub_1D5A23E1C, 0, 0);
}

uint64_t sub_1D5A26C5C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  _OWORD v7[3] = a2;
  v7[4] = v6;
  v7[1] = sub_1D598AF68;
  id v7[2] = a1;
  return MEMORY[0x1F4188298](sub_1D5A1FE44, 0, 0);
}

uint64_t sub_1D5A26D18(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_1D598AF68;
  return MEMORY[0x1F4188298](sub_1D5A2004C, 0, 0);
}

uint64_t sub_1D5A26DC8()
{
  uint64_t v2 = *v0;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1D5A27F80;
  v3[3] = v2;
  return MEMORY[0x1F4188298](sub_1D5A20360, 0, 0);
}

uint64_t sub_1D5A26E74(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_1D598AF68;
  return MEMORY[0x1F4188298](sub_1D5A20694, 0, 0);
}

uint64_t sub_1D5A26F24(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_1D598AF68;
  return MEMORY[0x1F4188298](sub_1D5A2571C, 0, 0);
}

uint64_t sub_1D5A26FD4()
{
  uint64_t v2 = *v0;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1D598AF68;
  v3[2] = v2;
  return MEMORY[0x1F4188298](sub_1D5A216BC, 0, 0);
}

uint64_t sub_1D5A2707C()
{
  uint64_t v2 = *v0;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1D596ECDC;
  v3[3] = v2;
  return MEMORY[0x1F4188298](sub_1D5A219C4, 0, 0);
}

uint64_t sub_1D5A27128(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D5A27F80;
  v5[3] = a1;
  v5[4] = v4;
  return MEMORY[0x1F4188298](sub_1D5A21D14, 0, 0);
}

uint64_t sub_1D5A271D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D598AF68;
  return WorkoutPlanClient.updateWorkoutPlanTemplateName(identifier:name:)(a1, a2, a3);
}

uint64_t sub_1D5A27288(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_1D598AF68;
  return MEMORY[0x1F4188298](sub_1D5A25324, 0, 0);
}

uint64_t sub_1D5A27338(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  _OWORD v7[3] = a2;
  v7[4] = v6;
  v7[1] = sub_1D598AF68;
  id v7[2] = a1;
  return MEMORY[0x1F4188298](sub_1D5A25900, 0, 0);
}

void *sub_1D5A273F4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[2] = a1;
  a4[3] = &protocol witness table for XPCClient;
  a4[4] = &protocol witness table for XPCClient;
  a4[5] = a2;
  a4[6] = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = a1;
  char v10 = 47;
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v10, (uint64_t)sub_1D5A27F18, v7, ObjectType, (uint64_t)&protocol witness table for XPCClient);
  swift_release_n();
  uint64_t v11 = a1;
  char v10 = 48;
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v10, (uint64_t)sub_1D5A27F44, v8, ObjectType, (uint64_t)&protocol witness table for XPCClient);
  swift_release_n();
  swift_unknownObjectRelease();
  return a4;
}

void *sub_1D5A2755C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  a4[2] = a1;
  a4[3] = a6;
  a4[4] = a7;
  a4[5] = a2;
  a4[6] = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v15 = a1;
  char v14 = 47;
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v14, (uint64_t)sub_1D5A27F18, v11, ObjectType, a7);
  swift_release_n();
  uint64_t v15 = a1;
  char v14 = 48;
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v14, (uint64_t)sub_1D5A27F44, v12, ObjectType, a7);
  swift_release_n();
  swift_unknownObjectRelease();
  return a4;
}

void *sub_1D5A276B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  type metadata accessor for WorkoutPlanClient();
  uint64_t v13 = (void *)swift_allocObject();
  return sub_1D5A2755C(a1, a2, a3, v13, a5, a6, a7);
}

unint64_t sub_1D5A27738()
{
  unint64_t result = qword_1EA726BD8;
  if (!qword_1EA726BD8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA726BC8);
    sub_1D5A27E6C(&qword_1EA726BE0, MEMORY[0x1E4F9E268]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726BD8);
  }
  return result;
}

unint64_t sub_1D5A277DC()
{
  unint64_t result = qword_1EA726C10;
  if (!qword_1EA726C10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA726C00);
    sub_1D5A27E6C(&qword_1EA726C18, MEMORY[0x1E4F9C2B8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726C10);
  }
  return result;
}

unint64_t sub_1D5A27880()
{
  unint64_t result = qword_1EBDE37E8;
  if (!qword_1EBDE37E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBDE37E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE37E8);
  }
  return result;
}

unint64_t sub_1D5A278EC()
{
  unint64_t result = qword_1EBDE37F0;
  if (!qword_1EBDE37F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBDE37E0);
    sub_1D5A27E6C(&qword_1EBDE37D8, MEMORY[0x1E4F9E628]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE37F0);
  }
  return result;
}

unint64_t sub_1D5A27990()
{
  unint64_t result = qword_1EA726C48;
  if (!qword_1EA726C48)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA726C38);
    sub_1D5A27E6C(&qword_1EA726C50, MEMORY[0x1E4F9D800]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726C48);
  }
  return result;
}

unint64_t sub_1D5A27A34()
{
  unint64_t result = qword_1EA726C78;
  if (!qword_1EA726C78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA726C68);
    sub_1D5A27E6C(&qword_1EA726C80, MEMORY[0x1E4F9E658]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726C78);
  }
  return result;
}

uint64_t sub_1D5A27AD8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726C98);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1D5A27B38()
{
  unint64_t result = qword_1EA726CD0;
  if (!qword_1EA726CD0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA726CB8);
    sub_1D5A27E6C(&qword_1EA726CD8, MEMORY[0x1E4F27990]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726CD0);
  }
  return result;
}

unint64_t sub_1D5A27BDC()
{
  unint64_t result = qword_1EA726CE8;
  if (!qword_1EA726CE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA726CC0);
    sub_1D5A27E6C(&qword_1EA726CF0, MEMORY[0x1E4F9D5D0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726CE8);
  }
  return result;
}

unint64_t sub_1D5A27C80()
{
  unint64_t result = qword_1EA726D48;
  if (!qword_1EA726D48)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA726D38);
    sub_1D5A27E6C(&qword_1EA726D50, MEMORY[0x1E4F9E790]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726D48);
  }
  return result;
}

unint64_t sub_1D5A27D24()
{
  unint64_t result = qword_1EA726D78;
  if (!qword_1EA726D78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA726D68);
    sub_1D5A27E6C(&qword_1EA726D80, MEMORY[0x1E4F9E688]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726D78);
  }
  return result;
}

unint64_t sub_1D5A27DC8()
{
  unint64_t result = qword_1EA726DC0;
  if (!qword_1EA726DC0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA726DB0);
    sub_1D5A27E6C(&qword_1EA726DC8, MEMORY[0x1E4F9E400]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA726DC0);
  }
  return result;
}

uint64_t sub_1D5A27E6C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for WorkoutPlanClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WorkoutPlanClient);
}

uint64_t dispatch thunk of WorkoutPlanClient.__allocating_init(connection:eventHub:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1D5A27EE0()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D5A27F18()
{
  return sub_1D59A1854(v0, (uint64_t)&type metadata for WorkoutPlansUpdated, (uint64_t)&protocol witness table for WorkoutPlansUpdated);
}

uint64_t sub_1D5A27F44()
{
  return sub_1D59A1854(v0, (uint64_t)&type metadata for ActiveWorkoutPlanUpdated, (uint64_t)&protocol witness table for ActiveWorkoutPlanUpdated);
}

id sub_1D5A27F90@<X0>(unsigned char *a1@<X8>)
{
  id result = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_cellularData), sel_restrictedState);
  if ((unint64_t)result >= 3)
  {
    sub_1D5AB57F0();
    sub_1D5AB4E90();
    type metadata accessor for CTCellularDataRestrictedState(0);
    sub_1D5AB58C0();
    sub_1D5AB4E90();
    id result = (id)sub_1D5AB5920();
    __break(1u);
  }
  else
  {
    *a1 = 2 - (_BYTE)result;
  }
  return result;
}

void sub_1D5A280B4()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_coreTelephonyClient);
  objc_msgSend(v1, sel_setDelegate_, v0);
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_cellularData);
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v5[4] = sub_1D5A290FC;
  v5[5] = v3;
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 1107296256;
  v5[2] = sub_1D5A2870C;
  v5[3] = &block_descriptor_12;
  uint64_t v4 = _Block_copy(v5);
  swift_release();
  objc_msgSend(v2, sel_setCellularDataRestrictionDidUpdateNotifier_, v4);
  _Block_release(v4);
  objc_msgSend(v1, sel_activate);
  sub_1D5A28760();
  sub_1D5A28904();
}

uint64_t sub_1D5A281D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4C50();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D5AB4C70();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = MEMORY[0x1D945ABB0](a2 + 16);
  if (result)
  {
    uint64_t v13 = (void *)result;
    id v14 = *(id *)(result + OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_queue);

    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a1;
    *(void *)(v15 + 24) = a2;
    aBlock[4] = sub_1D5A2913C;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D598EA50;
    aBlock[3] = &block_descriptor_16;
    uint64_t v16 = _Block_copy(aBlock);
    swift_retain();
    sub_1D5AB4C60();
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1D5A29144((unint64_t *)&qword_1EBDE50F0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE5100);
    sub_1D5990440();
    sub_1D5AB56F0();
    MEMORY[0x1D94598A0](0, v11, v7, v16);
    _Block_release(v16);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return swift_release();
  }
  return result;
}

void sub_1D5A284AC(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4CA0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1 >= 3) {
    goto LABEL_10;
  }
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x1D945ABB0](a2 + 16);
  if (!v8) {
    return;
  }
  uint64_t v9 = (void *)v8;
  a1 = MEMORY[0x1D945ABB0](v8 + OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_delegate);

  if (!a1) {
    return;
  }
  uint64_t v10 = *(void **)(a1 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue);
  *uint64_t v7 = v10;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBF0], v4);
  id v11 = v10;
  LOBYTE(v10) = sub_1D5AB4CC0();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if ((v10 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    v12[0] = 0;
    v12[1] = 0xE000000000000000;
    sub_1D5AB57F0();
    sub_1D5AB4E90();
    v12[3] = a1;
    type metadata accessor for CTCellularDataRestrictedState(0);
    sub_1D5AB58C0();
    sub_1D5AB4E90();
    sub_1D5AB5920();
    __break(1u);
    return;
  }
  if (MEMORY[0x1D945ABB0](a1 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_delegate))
  {
    sub_1D59B4898();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRelease();
}

uint64_t sub_1D5A2870C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

void sub_1D5A28760()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  char v5 = 0;
  if ((unint64_t)objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_coreTelephonyClient), sel_cellularDataEnabled_, &v5) >> 32)
  {
    if (qword_1EBDE5420 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_1D5AB4B50();
    __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE5400);
    uint64_t v2 = sub_1D5AB4B30();
    os_log_type_t v3 = sub_1D5AB5410();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 67240448;
      sub_1D5AB5680();
      *(_WORD *)(v4 + 8) = 1026;
      sub_1D5AB5680();
      _os_log_impl(&dword_1D5947000, v2, v3, "Core Telephony operation failed with domain: %{public}d and error code: %{public}d", (uint8_t *)v4, 0xEu);
      MEMORY[0x1D945AAC0](v4, -1, -1);
    }
  }
  else
  {
    *(unsigned char *)(v0 + OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_isCellularDataEnabled) = v5 != 0;
  }
}

void sub_1D5A28904()
{
  v16[1] = *(id *)MEMORY[0x1E4F143B8];
  char v15 = 0;
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_coreTelephonyClient);
  v16[0] = 0;
  objc_msgSend(v1, sel_roaming_error_, &v15, v16);
  id v2 = v16[0];
  if (v16[0])
  {
    uint64_t v3 = qword_1EBDE5420;
    id v4 = v16[0];
    if (v3 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1D5AB4B50();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EBDE5400);
    id v6 = v4;
    uint64_t v7 = sub_1D5AB4B30();
    os_log_type_t v8 = sub_1D5AB5410();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      v16[0] = v10;
      *(_DWORD *)uint64_t v9 = 136446210;
      unint64_t v11 = sub_1D5A29084();
      uint64_t v12 = sub_1D5A29144(&qword_1EA726FA0, (void (*)(uint64_t))sub_1D5A29084);
      uint64_t v13 = MEMORY[0x1D9459FA0](v11, v12);
      sub_1D5951500(v13, v14, (uint64_t *)v16);
      sub_1D5AB5680();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D5947000, v7, v8, "Core Telephony operation failed with error: %{public}s", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v10, -1, -1);
      MEMORY[0x1D945AAC0](v9, -1, -1);
    }
    else
    {
    }
  }
  else
  {
    *(unsigned char *)(v0 + OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_isRoaming) = v15 != 0;
  }
}

id sub_1D5A28BB4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CoreTelephonyObserver();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for CoreTelephonyObserver()
{
  return self;
}

uint64_t sub_1D5A28C78()
{
  uint64_t v1 = sub_1D5AB4CA0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  id v4 = (uint64_t *)((char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D5A28760();
  sub_1D5A28904();
  uint64_t result = MEMORY[0x1D945ABB0](v0 + OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_delegate);
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = *(void **)(result + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue);
    *id v4 = v7;
    (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FBCBF0], v1);
    id v8 = v7;
    LOBYTE(v7) = sub_1D5AB4CC0();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v2 + 8))(v4, v1);
    if (v7)
    {
      if (MEMORY[0x1D945ABB0](v6 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_delegate))
      {
        sub_1D59B4898();
        swift_unknownObjectRelease();
      }
      return swift_unknownObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1D5A28E94(char a1, void *a2, void (*a3)(uint64_t))
{
  uint64_t v7 = sub_1D5AB4CA0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  unint64_t v11 = (uint64_t *)((char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(unsigned char *)(v3 + *a2) = a1;
  a3(v9);
  uint64_t result = MEMORY[0x1D945ABB0](v3 + OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_delegate);
  if (result)
  {
    uint64_t v13 = result;
    unint64_t v14 = *(void **)(result + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue);
    void *v11 = v14;
    (*(void (**)(void *, void, uint64_t))(v8 + 104))(v11, *MEMORY[0x1E4FBCBF0], v7);
    id v15 = v14;
    LOBYTE(v14) = sub_1D5AB4CC0();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v8 + 8))(v11, v7);
    if (v14)
    {
      if (MEMORY[0x1D945ABB0](v13 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_delegate))
      {
        sub_1D59B4898();
        swift_unknownObjectRelease();
      }
      return swift_unknownObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

unint64_t sub_1D5A29084()
{
  unint64_t result = qword_1EA726F98;
  if (!qword_1EA726F98)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA726F98);
  }
  return result;
}

uint64_t sub_1D5A290C4()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D5A290FC(uint64_t a1)
{
  return sub_1D5A281D0(a1, v1);
}

uint64_t sub_1D5A29104()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1D5A2913C()
{
  sub_1D5A284AC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1D5A29144(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1D5A2918C(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v1[OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_isCellularDataEnabled] = 0;
  v1[OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_isRoaming] = 0;
  uint64_t v3 = OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_cellularData;
  id v4 = objc_allocWithZone(MEMORY[0x1E4F23948]);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = objc_msgSend(v4, sel_init);
  *(void *)&v5[OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_queue] = a1;
  id v6 = objc_msgSend(objc_allocWithZone((Class)SMCCoreTelephonyClient), sel_initWithQueue_, a1);
  *(void *)&v5[OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_coreTelephonyClient] = v6;

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for CoreTelephonyObserver();
  return objc_msgSendSuper2(&v8, sel_init);
}

uint64_t BadgingCountsUpdated.appBadgeCount.getter()
{
  return *(void *)v0;
}

uint64_t BadgingCountsUpdated.seymourTabBadges.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BadgingCountsUpdated.init(appBadgeCount:seymourTabBadges:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

void static BadgingCountsUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for BadgingCountsUpdated()
{
  return &type metadata for BadgingCountsUpdated;
}

id NetworkMonitor.__allocating_init(queue:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_1D5A2BBD0(a1);

  return v4;
}

uint64_t NetworkMonitor.queryCurrentNetwork()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  v23[1] = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE2FE0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v23 - v8;
  uint64_t v10 = sub_1D5AB4CA0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (void *)((char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v14 = *(void **)&v2[OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue];
  *uint64_t v13 = v14;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4FBCBF0], v10);
  id v15 = v14;
  LOBYTE(v14) = sub_1D5AB4CC0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  if (v14)
  {
    sub_1D5A416F8((uint64_t)v9);
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v2;
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = sub_1D5A2BE28;
    *(void *)(v18 + 24) = v17;
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    unint64_t v19 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v20 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v20 + v19, v7, v3);
    uint64_t v21 = (uint64_t (**)(void *))(v20 + ((v5 + v19 + 7) & 0xFFFFFFFFFFFFFFF8));
    void *v21 = sub_1D5A2BE4C;
    v21[1] = (uint64_t (*)(void *))v18;
    uint64_t v22 = v2;
    sub_1D5AB4540();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t NetworkMonitor.queryInterfaceAvailability()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v41 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE2FE0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  uint64_t v36 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v36 - v7;
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE2FD0);
  uint64_t v9 = *(void *)(v40 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v40);
  uint64_t v37 = v11;
  uint64_t v38 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  unint64_t v39 = (char *)&v36 - v12;
  uint64_t v13 = sub_1D5AB4CA0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char **)((char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = *(void **)&v2[OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue];
  *uint64_t v16 = v17;
  (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E4FBCBF0], v13);
  id v18 = v17;
  LOBYTE(v17) = sub_1D5AB4CC0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v14 + 8))(v16, v13);
  if (v17)
  {
    sub_1D5A416F8((uint64_t)v8);
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v2;
    uint64_t v21 = v36;
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v36, v8, v3);
    unint64_t v22 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v23 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v23 + v22, v21, v3);
    unint64_t v24 = (uint64_t (**)(char *))(v23 + ((v5 + v22 + 7) & 0xFFFFFFFFFFFFFFF8));
    *unint64_t v24 = sub_1D5A2BEC0;
    v24[1] = (uint64_t (*)(char *))v20;
    unint64_t v25 = v2;
    uint64_t v26 = v39;
    sub_1D5AB4540();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v3);
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = v25;
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = sub_1D5A2BE28;
    *(void *)(v28 + 24) = v27;
    uint64_t v29 = v38;
    uint64_t v30 = v40;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v38, v26, v40);
    unint64_t v31 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    unint64_t v32 = (v37 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v33 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v33 + v31, v29, v30);
    uint64_t v34 = (uint64_t (**)(void *))(v33 + v32);
    *uint64_t v34 = sub_1D5A2C008;
    v34[1] = (uint64_t (*)(void *))v28;
    uint64_t v35 = v25;
    sub_1D5AB4540();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v26, v30);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t NetworkMonitor.isCellularDataEnabled.getter()
{
  return sub_1D5A2B088(&OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_coreTelephonyObserver, &OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_isCellularDataEnabled);
}

id NetworkMonitor.cellularDataRestrictedState.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = sub_1D5AB4CA0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue);
  *uint64_t v6 = v7;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCBF0], v3);
  id v8 = v7;
  LOBYTE(v7) = sub_1D5AB4CC0();
  id result = (id)(*(uint64_t (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  if (v7) {
    return sub_1D5A27F90(a1);
  }
  __break(1u);
  return result;
}

uint64_t NetworkMonitor.isWiFiEnabled.getter()
{
  return sub_1D5A2B088(&OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_wifiObserver, &OBJC_IVAR____TtC13SeymourClient12WiFiObserver_isEnabled);
}

id NetworkMonitor.init(queue:)(void *a1)
{
  id v2 = sub_1D5A2BBD0(a1);

  return v2;
}

uint64_t sub_1D5A29C00()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D5AB4CA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBF0], v2);
  id v7 = v6;
  LOBYTE(v6) = sub_1D5AB4CC0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_airplaneModeObserver), sel_setDelegate_, v1);
    *(void *)(*(void *)(v1 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_coreTelephonyObserver)
              + OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_delegate
              + 8) = &off_1F2DF2EC8;
    swift_unknownObjectWeakAssign();
    sub_1D5A280B4();
    *(void *)(*(void *)(v1 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_wifiObserver)
              + OBJC_IVAR____TtC13SeymourClient12WiFiObserver_delegate
              + 8) = &off_1F2DF2EF0;
    swift_unknownObjectWeakAssign();
    sub_1D59C94F8();
    *(void *)(*(void *)(v1 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_reachabilityObserver) + 24) = &off_1F2DF2EE0;
    swift_unknownObjectWeakAssign();
    return sub_1D5A41BEC();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1D5A29DC8(char a1@<W0>, char a2@<W1>, char a3@<W2>, unsigned __int8 *a4@<X3>, char *a5@<X8>)
{
  int v9 = *a4;
  if (qword_1EBDE3148 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1D5AB4B50();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EBDE3130);
  v11._uint64_t countAndFlagsBits = 0xD000000000000076;
  v12._object = (void *)0x80000001D5AC9600;
  v11._object = (void *)0x80000001D5AC9680;
  v12._uint64_t countAndFlagsBits = 0xD000000000000073;
  Logger.trace(file:function:)(v12, v11);
  if ((a2 & 1) == 0)
  {
    if (a3)
    {
      char v13 = 0;
      goto LABEL_16;
    }
LABEL_13:
    uint64_t v14 = sub_1D5AB4B30();
    os_log_type_t v23 = sub_1D5AB5430();
    if (os_log_type_enabled(v14, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 67109376;
      sub_1D5AB5680();
      *(_WORD *)(v24 + 8) = 1024;
      sub_1D5AB5680();
      _os_log_impl(&dword_1D5947000, v14, v23, "[NetworkMonitor] Interface unavailable.\nWi-Fi: %{BOOL}d\nCellular data: %{BOOL}d", (uint8_t *)v24, 0xEu);
      MEMORY[0x1D945AAC0](v24, -1, -1);
    }
LABEL_15:

    char v13 = 1;
    goto LABEL_16;
  }
  if ((a3 & 1) == 0 && v9) {
    goto LABEL_13;
  }
  char v13 = 0;
  if ((a1 & 1) != 0 && (a3 & 1) == 0)
  {
    uint64_t v14 = sub_1D5AB4B30();
    os_log_type_t v15 = sub_1D5AB5430();
    BOOL v16 = os_log_type_enabled(v14, v15);
    if (v9)
    {
      if (v16)
      {
        uint64_t v17 = swift_slowAlloc();
        *(_DWORD *)uint64_t v17 = 67109632;
        char v13 = 1;
        sub_1D5AB5680();
        *(_WORD *)(v17 + 8) = 1024;
        sub_1D5AB5680();
        *(_WORD *)(v17 + 14) = 1024;
        sub_1D5AB5680();
        os_log_type_t v18 = v15;
        unint64_t v19 = "[NetworkMonitor] Interface unavailable.\n"
              "Airplane mode: %{BOOL}d\n"
              "Wi-Fi: %{BOOL}d\n"
              "Cellular data: %{BOOL}d";
        uint64_t v20 = v14;
        uint64_t v21 = (uint8_t *)v17;
        uint32_t v22 = 20;
LABEL_19:
        _os_log_impl(&dword_1D5947000, v20, v18, v19, v21, v22);
        MEMORY[0x1D945AAC0](v17, -1, -1);

        goto LABEL_16;
      }
    }
    else if (v16)
    {
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 67109376;
      char v13 = 1;
      sub_1D5AB5680();
      *(_WORD *)(v17 + 8) = 1024;
      sub_1D5AB5680();
      os_log_type_t v18 = v15;
      unint64_t v19 = "[NetworkMonitor] Interface unavailable.\nAirplane mode: %{BOOL}d\nWi-Fi: %{BOOL}d";
      uint64_t v20 = v14;
      uint64_t v21 = (uint8_t *)v17;
      uint32_t v22 = 14;
      goto LABEL_19;
    }
    goto LABEL_15;
  }
LABEL_16:
  *a5 = v13;
}

uint64_t sub_1D5A2A0DC(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D5AB4CA0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v8 = *a1;
  char v9 = a1[1];
  char v10 = a1[2];
  char v11 = a1[3];
  Swift::String v12 = *(void **)&v2[OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue];
  *id v7 = v12;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBF0], v4);
  id v13 = v12;
  LOBYTE(v12) = sub_1D5AB4CC0();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if (v12)
  {
    if (qword_1EBDE3148 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v14 = sub_1D5AB4B50();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EBDE3130);
  os_log_type_t v15 = sub_1D5AB4B30();
  os_log_type_t v16 = sub_1D5AB5430();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl(&dword_1D5947000, v15, v16, "[NetworkMonitor:InterfaceAvailability] Querying interface availability", v17, 2u);
    MEMORY[0x1D945AAC0](v17, -1, -1);
  }

  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v2;
  *(unsigned char *)(v18 + 24) = v8;
  *(unsigned char *)(v18 + 25) = v9;
  *(unsigned char *)(v18 + 26) = v10;
  *(unsigned char *)(v18 + 27) = v11;
  unint64_t v19 = v2;
  return sub_1D5AB4540();
}

uint64_t sub_1D5A2A324(uint64_t a1, uint64_t a2, char *a3, unsigned int a4)
{
  unsigned int v8 = HIBYTE(a4);
  uint64_t v9 = sub_1D5AB4C50();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  Swift::String v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1D5AB4C70();
  uint64_t v13 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  os_log_type_t v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = *(void *)&a3[OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue];
  uint64_t v16 = swift_allocObject();
  *(unsigned char *)(v16 + 16) = a4;
  *(unsigned char *)(v16 + 17) = BYTE1(a4) & 1;
  *(unsigned char *)(v16 + 18) = BYTE2(a4) & 1;
  *(unsigned char *)(v16 + 19) = v8;
  *(void *)(v16 + 24) = a1;
  *(void *)(v16 + 32) = a2;
  *(void *)(v16 + 40) = a3;
  aBlock[4] = sub_1D5A2C278;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D598EA50;
  aBlock[3] = &block_descriptor_13;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v18 = a3;
  sub_1D5AB4C60();
  uint64_t v22 = MEMORY[0x1E4FBC860];
  sub_1D59903E8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE5100);
  sub_1D5990440();
  sub_1D5AB56F0();
  MEMORY[0x1D94598A0](0, v15, v12, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v21);
  return swift_release();
}

uint64_t sub_1D5A2A5C8(char a1, uint64_t (*a2)(uint64_t *), uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1D5AB4CA0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (uint64_t *)((char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1 != 1)
  {
    uint64_t v35 = a3;
    uint64_t v36 = a4;
    uint64_t v17 = *(void **)(a4 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue);
    void *v11 = v17;
    uint64_t v18 = *MEMORY[0x1E4FBCBF0];
    uint64_t v37 = *(void (**)(void *, uint64_t, uint64_t))(v9 + 104);
    v37(v11, v18, v8);
    id v19 = v17;
    char v20 = sub_1D5AB4CC0();
    uint64_t v21 = *(uint64_t (**)(void *, uint64_t))(v9 + 8);
    uint64_t result = v21(v11, v8);
    if (v20)
    {
      uint64_t v34 = a2;
      uint64_t v22 = v36;
      unsigned int v23 = objc_msgSend(*(id *)(v36 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_airplaneModeObserver), sel_enabled);
      void *v11 = v19;
      v37(v11, v18, v8);
      id v24 = v19;
      char v25 = sub_1D5AB4CC0();
      uint64_t result = v21(v11, v8);
      if (v25)
      {
        unsigned int v33 = v23;
        int v32 = *(unsigned __int8 *)(*(void *)(v22
                                             + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_coreTelephonyObserver)
                                 + OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_isCellularDataEnabled);
        void *v11 = v24;
        v37(v11, v18, v8);
        id v26 = v24;
        char v27 = sub_1D5AB4CC0();
        uint64_t result = v21(v11, v8);
        if (v27)
        {
          char v28 = *(unsigned char *)(*(void *)(v22 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_wifiObserver)
                         + OBJC_IVAR____TtC13SeymourClient12WiFiObserver_isEnabled);
          void *v11 = v26;
          v37(v11, v18, v8);
          id v29 = v26;
          char v30 = sub_1D5AB4CC0();
          uint64_t result = v21(v11, v8);
          if (v30)
          {
            sub_1D5A27F90(&v40);
            sub_1D5A29DC8(v33, v32, v28, &v40, (char *)&v38);
            uint64_t v38 = v38;
            char v39 = 0;
            return v34(&v38);
          }
          goto LABEL_15;
        }
LABEL_14:
        __break(1u);
LABEL_15:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_14;
  }
  if (qword_1EBDE3148 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1D5AB4B50();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EBDE3130);
  uint64_t v13 = sub_1D5AB4B30();
  os_log_type_t v14 = sub_1D5AB5430();
  if (os_log_type_enabled(v13, v14))
  {
    os_log_type_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v15 = 0;
    _os_log_impl(&dword_1D5947000, v13, v14, "[NetworkMonitor:InterfaceAvailability] Ethernet interface found", v15, 2u);
    MEMORY[0x1D945AAC0](v15, -1, -1);
  }

  uint64_t v38 = 0;
  char v39 = 0;
  return a2(&v38);
}

id NetworkMonitor.isAirplaneModeEnabled.getter()
{
  uint64_t v1 = sub_1D5AB4CA0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (uint64_t *)((char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue);
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FBCBF0], v1);
  id v6 = v5;
  LOBYTE(v5) = sub_1D5AB4CC0();
  id result = (id)(*(uint64_t (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if (v5) {
    return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_airplaneModeObserver), sel_enabled);
  }
  __break(1u);
  return result;
}

id sub_1D5A2AA98(void *a1)
{
  id v2 = a1;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE5130);
  if (swift_dynamicCast())
  {
    sub_1D5A2C410();
    swift_allocError();
    *uint64_t v3 = v5;
    return (id)swift_willThrow();
  }
  else
  {
    swift_willThrow();
    return a1;
  }
}

id NetworkMonitor.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void NetworkMonitor.init()()
{
}

id NetworkMonitor.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NetworkMonitor();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall NetworkMonitor.airplaneModeChanged()()
{
  uint64_t v1 = sub_1D5AB4CA0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (uint64_t *)((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v5 = *(void **)(v0 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue);
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FBCBF0], v1);
  id v6 = v5;
  LOBYTE(v5) = sub_1D5AB4CC0();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if (v5)
  {
    if (MEMORY[0x1D945ABB0](v0 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_delegate))
    {
      sub_1D59B4870();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall NetworkMonitor.cellularDataStateChanged(isCellularDataEnabled:isRoaming:)(Swift::Bool isCellularDataEnabled, Swift::Bool isRoaming)
{
  uint64_t v3 = sub_1D5AB4CA0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = (uint64_t *)((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(void **)(v2 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue);
  *id v6 = v7;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCBF0], v3);
  id v8 = v7;
  LOBYTE(v7) = sub_1D5AB4CC0();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  if (v7)
  {
    if (MEMORY[0x1D945ABB0](v2 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_delegate))
    {
      sub_1D59B4898();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall NetworkMonitor.cellularDataRestrictedStateChanged(_:)(SeymourClient::CellularDataRestrictedState a1)
{
  uint64_t v2 = sub_1D5AB4CA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v6 = *(void **)(v1 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBF0], v2);
  id v7 = v6;
  LOBYTE(v6) = sub_1D5AB4CC0();
  (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if (MEMORY[0x1D945ABB0](v1 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_delegate))
    {
      sub_1D59B4898();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t NetworkMonitor.isRoaming.getter()
{
  return sub_1D5A2B088(&OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_coreTelephonyObserver, &OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_isRoaming);
}

uint64_t sub_1D5A2B088(void *a1, void *a2)
{
  uint64_t v5 = sub_1D5AB4CA0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (uint64_t *)((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void **)(v2 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue);
  *uint64_t v8 = v9;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBCBF0], v5);
  id v10 = v9;
  LOBYTE(v9) = sub_1D5AB4CC0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  if (v9) {
    return *(unsigned __int8 *)(*(void *)(v2 + *a1) + *a2);
  }
  __break(1u);
  return result;
}

id sub_1D5A2B1B8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = sub_1D5AB4CA0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(void **)(*v1 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue);
  *uint64_t v6 = v7;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCBF0], v3);
  id v8 = v7;
  LOBYTE(v7) = sub_1D5AB4CC0();
  id result = (id)(*(uint64_t (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  if (v7) {
    return sub_1D5A27F90(a1);
  }
  __break(1u);
  return result;
}

id sub_1D5A2B2E4()
{
  uint64_t v1 = sub_1D5AB4CA0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (uint64_t *)((char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *v0;
  uint64_t v6 = *(void **)(*v0 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue);
  *uint64_t v4 = v6;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FBCBF0], v1);
  id v7 = v6;
  LOBYTE(v6) = sub_1D5AB4CC0();
  id result = (id)(*(uint64_t (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if (v6) {
    return objc_msgSend(*(id *)(v5 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_airplaneModeObserver), sel_enabled);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D5A2B410(uint64_t a1, uint64_t a2)
{
  return sub_1D5A2B44C(a1, a2, &OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_coreTelephonyObserver, &OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_isCellularDataEnabled);
}

uint64_t sub_1D5A2B424(uint64_t a1, uint64_t a2)
{
  return sub_1D5A2B44C(a1, a2, &OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_coreTelephonyObserver, &OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_isRoaming);
}

uint64_t sub_1D5A2B438(uint64_t a1, uint64_t a2)
{
  return sub_1D5A2B44C(a1, a2, &OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_wifiObserver, &OBJC_IVAR____TtC13SeymourClient12WiFiObserver_isEnabled);
}

uint64_t sub_1D5A2B44C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7 = sub_1D5AB4CA0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *v4;
  uint64_t v12 = *(void **)(*v4 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue);
  *uint64_t v10 = v12;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBCBF0], v7);
  id v13 = v12;
  LOBYTE(v12) = sub_1D5AB4CC0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if (v12) {
    return *(unsigned __int8 *)(*(void *)(v11 + *a3) + *a4);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D5A2B580@<X0>(uint64_t a1@<X8>)
{
  return NetworkMonitor.queryCurrentNetwork()(a1);
}

uint64_t sub_1D5A2B5A4@<X0>(uint64_t a1@<X8>)
{
  return NetworkMonitor.queryInterfaceAvailability()(a1);
}

uint64_t sub_1D5A2B5C8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1D5A2B5F4(a1, a2, a3);
}

uint64_t sub_1D5A2B5F4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = a2;
  _OWORD v6[3] = a3;
  v6[4] = a1;
  swift_retain();
  id v7 = a1;
  return sub_1D5AB4540();
}

void sub_1D5A2B68C(void (*a1)(void **), uint64_t a2, void (*a3)(void **__return_ptr, uint64_t), uint64_t a4, uint64_t a5)
{
  a3(&v7, a5);
  uint64_t v6 = v7;
  char v8 = 0;
  a1(&v7);
  sub_1D596EA00(v6, 0);
}

uint64_t sub_1D5A2B720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5A2B770(a1, a2, a3, a4, a5, &qword_1EBDE4E10, (uint64_t)&unk_1F2DF3018, (uint64_t)sub_1D5A2C330);
}

uint64_t sub_1D5A2B748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5A2B770(a1, a2, a3, a4, a5, &qword_1EBDE2FF0, (uint64_t)&unk_1F2DF2FC8, (uint64_t)sub_1D5A2C2BC);
}

uint64_t sub_1D5A2B770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8)
{
  __swift_instantiateConcreteTypeFromMangledName(a6);
  id v13 = (void (*)(uint64_t, void *))sub_1D5AB45B0();
  os_log_type_t v14 = (void *)swift_allocObject();
  v14[2] = a1;
  v14[3] = a2;
  v14[4] = a4;
  v14[5] = a5;
  swift_retain();
  swift_retain();
  v13(a8, v14);
  swift_release();
  return swift_release();
}

uint64_t sub_1D5A2B82C(void *a1, char a2, uint64_t (*a3)(void **), uint64_t a4, void (*a5)(void *), uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9, void (*a10)(void *, uint64_t))
{
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(a7);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v24 = a10;
    id v20 = a1;
    a5(a1);
    uint64_t v21 = (void (*)(uint64_t, uint64_t))sub_1D5AB45B0();
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = a3;
    *(void *)(v22 + 24) = a4;
    swift_retain();
    v21(a9, v22);
    swift_release();
    swift_release();
    v24(a1, 1);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  else
  {
    char v25 = a1;
    char v26 = 0;
    return a3(&v25);
  }
}

void sub_1D5A2B9C4(void *a1, unint64_t a2, char a3, void (*a4)(void *), uint64_t a5, void (*a6)(void *))
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE2FF0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    id v16 = a1;
    a6(a1);
    uint64_t v17 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_1D5AB45B0();
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = a4;
    *(void *)(v18 + 24) = a5;
    swift_retain();
    v17(sub_1D5A2C2D8, v18);
    swift_release();
    swift_release();
    sub_1D5A2C320(a1, a2, 1);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  else
  {
    v20[0] = a1;
    v20[1] = a2;
    char v21 = 0;
    sub_1D599FF54((uint64_t)a1, a2);
    a4(v20);
    sub_1D5A2C320(a1, a2, 0);
  }
}

uint64_t sub_1D5A2BB88(uint64_t result, uint64_t (*a2)(long long *))
{
  char v2 = *(unsigned char *)(result + 16);
  long long v3 = *(_OWORD *)result;
  char v4 = v2;
  if (a2) {
    return a2(&v3);
  }
  return result;
}

id sub_1D5A2BBD0(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  id v3 = objc_allocWithZone((Class)SMCAirplaneModeObserver);
  char v4 = v1;
  id v5 = objc_msgSend(v3, sel_initWithQueue_, a1);
  *(void *)&v4[OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_airplaneModeObserver] = v5;
  id v6 = objc_allocWithZone((Class)type metadata accessor for CoreTelephonyObserver());
  id v7 = a1;
  id v8 = sub_1D5A2918C(v7);

  *(void *)&v4[OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_coreTelephonyObserver] = v8;
  *(void *)&v4[OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue] = v7;
  type metadata accessor for ReachabilityObserver();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v9 + 80) = 0x3FB999999999999ALL;
  sub_1D5AB4BD0();
  swift_allocObject();
  id v10 = v7;
  *(void *)(v9 + 88) = sub_1D5AB4BC0();
  *(void *)(v9 + 96) = v10;
  *(_OWORD *)(v9 + 32) = 0u;
  *(_OWORD *)(v9 + 48) = 0u;
  *(void *)(v9 + 64) = 0;
  *(unsigned char *)(v9 + 72) = 2;
  *(void *)&v4[OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_reachabilityObserver] = v9;
  uint64_t v11 = (objc_class *)type metadata accessor for WiFiObserver();
  uint64_t v12 = objc_allocWithZone(v11);
  *(void *)&v12[OBJC_IVAR____TtC13SeymourClient12WiFiObserver_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v12[OBJC_IVAR____TtC13SeymourClient12WiFiObserver_isEnabled] = 0;
  uint64_t v13 = OBJC_IVAR____TtC13SeymourClient12WiFiObserver_wifiInterface;
  id v14 = objc_allocWithZone(MEMORY[0x1E4F5E318]);
  id v15 = v10;
  id v16 = v12;
  *(void *)&v12[v13] = objc_msgSend(v14, sel_init);
  *(void *)&v16[OBJC_IVAR____TtC13SeymourClient12WiFiObserver_queue] = v15;
  id v17 = v15;

  v21.receiver = v16;
  v21.super_class = v11;
  id v18 = objc_msgSendSuper2(&v21, sel_init);

  *(void *)&v4[OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_wifiObserver] = v18;
  v20.receiver = v4;
  v20.super_class = (Class)type metadata accessor for NetworkMonitor();
  return objc_msgSendSuper2(&v20, sel_init);
}

uint64_t sub_1D5A2BDF0()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

id sub_1D5A2BE28(void *a1)
{
  return sub_1D5A2AA98(a1);
}

uint64_t sub_1D5A2BE4C(void *a1)
{
  return sub_1D5A2B5F4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1D5A2BE8C()
{
  return objectdestroy_7Tm((uint64_t *)&unk_1EBDE2FE0);
}

uint64_t sub_1D5A2BE98(uint64_t a1, uint64_t a2)
{
  return sub_1D5A2C07C(a1, a2, (uint64_t *)&unk_1EBDE2FE0, (uint64_t)&unk_1F2DF3108, (uint64_t)sub_1D5A2C468);
}

uint64_t sub_1D5A2BEC0(char *a1)
{
  char v1 = a1[1];
  char v2 = a1[2];
  char v3 = a1[3];
  v5[0] = *a1;
  v5[1] = v1;
  v5[2] = v2;
  v5[3] = v3;
  return sub_1D5A2A0DC(v5);
}

uint64_t sub_1D5A2BF10()
{
  return objectdestroy_7Tm((uint64_t *)&unk_1EBDE2FE0);
}

uint64_t sub_1D5A2BF1C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE2FE0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v2 + v6;
  id v8 = (uint64_t *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  return sub_1D5986E90(a1, a2, v7, v9, v10);
}

uint64_t sub_1D5A2BFD0()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D5A2C008(void *a1)
{
  return sub_1D5A2B5F4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1D5A2C048()
{
  return objectdestroy_7Tm((uint64_t *)&unk_1EBDE2FD0);
}

uint64_t sub_1D5A2C054(uint64_t a1, uint64_t a2)
{
  return sub_1D5A2C07C(a1, a2, (uint64_t *)&unk_1EBDE2FD0, (uint64_t)&unk_1F2DF3090, (uint64_t)sub_1D5A2C384);
}

uint64_t sub_1D5A2C07C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v13 = (*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1D5A2B770(a1, a2, v5 + v12, *(void *)(v5 + v13), *(void *)(v5 + v13 + 8), a3, a4, a5);
}

uint64_t type metadata accessor for NetworkMonitor()
{
  return self;
}

uint64_t method lookup function for NetworkMonitor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NetworkMonitor);
}

uint64_t dispatch thunk of NetworkMonitor.__allocating_init(queue:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of NetworkMonitor.activate()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t sub_1D5A2C1C4()
{
  return MEMORY[0x1F4186498](v0, 28, 7);
}

uint64_t sub_1D5A2C1FC(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(v2 + 26)) {
    int v3 = 0x10000;
  }
  else {
    int v3 = 0;
  }
  int v4 = v3 | (*(unsigned __int8 *)(v2 + 27) << 24);
  if (*(unsigned char *)(v2 + 25)) {
    int v5 = 256;
  }
  else {
    int v5 = 0;
  }
  return sub_1D5A2A324(a1, a2, *(char **)(v2 + 16), v4 | v5 | *(unsigned __int8 *)(v2 + 24));
}

uint64_t sub_1D5A2C238()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1D5A2C278()
{
  return sub_1D5A2A5C8(*(unsigned char *)(v0 + 16), *(uint64_t (**)(uint64_t *))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

void sub_1D5A2C2BC(uint64_t a1)
{
  sub_1D5A2B9C4(*(void **)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void (**)(void *))(v1 + 16), *(void *)(v1 + 24), *(void (**)(void *))(v1 + 32));
}

uint64_t sub_1D5A2C2D8(uint64_t result)
{
  uint64_t v2 = *(uint64_t (**)(long long *))(v1 + 16);
  char v3 = *(unsigned char *)(result + 16);
  long long v4 = *(_OWORD *)result;
  char v5 = v3;
  if (v2) {
    return v2(&v4);
  }
  return result;
}

void sub_1D5A2C320(id a1, unint64_t a2, char a3)
{
  if (a3) {

  }
  else {
    sub_1D5956DF8((uint64_t)a1, a2);
  }
}

uint64_t sub_1D5A2C330(uint64_t a1)
{
  return sub_1D5A2C3C0(a1, &qword_1EBDE4E10, (uint64_t)&unk_1F2DF3040, (uint64_t)sub_1D599F530, (void (*)(void *, uint64_t))sub_1D596EA00);
}

void sub_1D5A2C374(void (*a1)(void **), uint64_t a2)
{
  sub_1D5A2B68C(a1, a2, *(void (**)(void **__return_ptr, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1D5A2C384(uint64_t a1)
{
  return sub_1D5A2C3C0(a1, (uint64_t *)&unk_1EBDE2FD0, (uint64_t)&unk_1F2DF30B8, (uint64_t)sub_1D599F530, (void (*)(void *, uint64_t))sub_1D596EA00);
}

uint64_t sub_1D5A2C3C0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(void *, uint64_t))
{
  return sub_1D5A2B82C(*(void **)a1, *(unsigned char *)(a1 + 8), *(uint64_t (**)(void **))(v5 + 16), *(void *)(v5 + 24), *(void (**)(void *))(v5 + 32), *(void *)(v5 + 40), a2, a3, a4, a5);
}

unint64_t sub_1D5A2C410()
{
  unint64_t result = qword_1EA727048;
  if (!qword_1EA727048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA727048);
  }
  return result;
}

uint64_t sub_1D5A2C468(uint64_t a1)
{
  return sub_1D5A2C3C0(a1, (uint64_t *)&unk_1EBDE2FE0, (uint64_t)&unk_1F2DF3130, (uint64_t)sub_1D599F530, (void (*)(void *, uint64_t))sub_1D5A2C4EC);
}

uint64_t objectdestroy_50Tm()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void static UpNextQueueItemsAdded.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for UpNextQueueItemsAdded()
{
  return &type metadata for UpNextQueueItemsAdded;
}

uint64_t sub_1D5A2C520(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727368);
}

uint64_t sub_1D5A2C530()
{
  return v0;
}

uint64_t sub_1D5A2C53C(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727360);
}

uint64_t sub_1D5A2C548(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EBDE1698);
}

uint64_t sub_1D5A2C554(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727358);
}

uint64_t sub_1D5A2C560(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727350);
}

uint64_t sub_1D5A2C56C(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EBDE0C48);
}

uint64_t sub_1D5A2C578(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727348);
}

uint64_t sub_1D5A2C584(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727340);
}

uint64_t sub_1D5A2C590(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727338);
}

uint64_t sub_1D5A2C59C(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727330);
}

uint64_t sub_1D5A2C5A8(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727328);
}

uint64_t sub_1D5A2C5B4(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727320);
}

uint64_t sub_1D5A2C5C0(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727318);
}

uint64_t sub_1D5A2C5CC(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727310);
}

uint64_t sub_1D5A2C5D8(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EBDE30E0);
}

uint64_t sub_1D5A2C5E4(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727308);
}

uint64_t sub_1D5A2C5F0(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727300);
}

uint64_t sub_1D5A2C5FC(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA7272F8);
}

uint64_t sub_1D5A2C608(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA7272F0);
}

uint64_t sub_1D5A2C614(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA7272E8);
}

uint64_t sub_1D5A2C620(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA7272E0);
}

uint64_t sub_1D5A2C62C(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA7272D8);
}

uint64_t sub_1D5A2C638(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA7272D0);
}

uint64_t sub_1D5A2C644(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA7272C8);
}

uint64_t sub_1D5A2C650(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA7272C0);
}

uint64_t sub_1D5A2C65C(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA7272B8);
}

uint64_t sub_1D5A2C668(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA7272B0);
}

uint64_t sub_1D5A2C674(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA7272A8);
}

uint64_t sub_1D5A2C680(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA7272A0);
}

uint64_t sub_1D5A2C68C(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727298);
}

uint64_t sub_1D5A2C698(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727290);
}

uint64_t sub_1D5A2C6A4(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727288);
}

uint64_t sub_1D5A2C6B0(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727280);
}

uint64_t sub_1D5A2C6BC(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727278);
}

uint64_t sub_1D5A2C6C8(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727270);
}

uint64_t sub_1D5A2C6D4(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727268);
}

uint64_t sub_1D5A2C6E0(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727260);
}

uint64_t sub_1D5A2C6EC(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EBDE3A60);
}

uint64_t sub_1D5A2C6F8(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727258);
}

uint64_t sub_1D5A2C704(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727250);
}

uint64_t sub_1D5A2C710(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727248);
}

uint64_t sub_1D5A2C71C(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727240);
}

uint64_t sub_1D5A2C728(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727238);
}

uint64_t sub_1D5A2C734(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727230);
}

uint64_t sub_1D5A2C740(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727228);
}

uint64_t sub_1D5A2C74C(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727220);
}

uint64_t sub_1D5A2C758(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727218);
}

uint64_t sub_1D5A2C764(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727210);
}

uint64_t sub_1D5A2C770(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727208);
}

uint64_t sub_1D5A2C77C(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727200);
}

uint64_t sub_1D5A2C788(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA7271F8);
}

uint64_t sub_1D5A2C794(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA7271F0);
}

uint64_t sub_1D5A2C7A0(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA7271E8);
}

uint64_t sub_1D5A2C7AC(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727050);
}

uint64_t sub_1D5A2C7B8(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA7271E0);
}

uint64_t sub_1D5A2C7C4(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EBDE0DE0);
}

uint64_t sub_1D5A2C7D0(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA7271D8);
}

uint64_t sub_1D5A2C7DC(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA7271D0);
}

uint64_t sub_1D5A2C7E8(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA7271C8);
}

uint64_t sub_1D5A2C7F4(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA7271C0);
}

uint64_t sub_1D5A2C800(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA7271B8);
}

uint64_t sub_1D5A2C80C(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EBDE3048);
}

uint64_t sub_1D5A2C818(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA7271B0);
}

uint64_t sub_1D5A2C828(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA7271A8);
}

uint64_t sub_1D5A2C834(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA7271A0);
}

uint64_t sub_1D5A2C840(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727198);
}

uint64_t sub_1D5A2C84C(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727190);
}

uint64_t sub_1D5A2C858(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727188);
}

uint64_t sub_1D5A2C864(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727180);
}

uint64_t sub_1D5A2C870(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727178);
}

uint64_t sub_1D5A2C87C(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727170);
}

uint64_t sub_1D5A2C888(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727168);
}

uint64_t sub_1D5A2C894(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727160);
}

uint64_t sub_1D5A2C8A0(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727158);
}

uint64_t sub_1D5A2C8AC(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727150);
}

uint64_t sub_1D5A2C8B8(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727148);
}

uint64_t sub_1D5A2C8C4(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727140);
}

uint64_t sub_1D5A2C8D0(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727138);
}

uint64_t sub_1D5A2C8DC(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727130);
}

uint64_t sub_1D5A2C8E8(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727128);
}

uint64_t sub_1D5A2C8F4(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727120);
}

uint64_t sub_1D5A2C900(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727058);
}

uint64_t sub_1D5A2C90C(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727118);
}

uint64_t sub_1D5A2C918(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EBDE4DD8);
}

uint64_t sub_1D5A2C924(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EBDE15C0);
}

uint64_t sub_1D5A2C930(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727110);
}

uint64_t sub_1D5A2C93C(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727108);
}

uint64_t sub_1D5A2C948(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727100);
}

uint64_t sub_1D5A2C954(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA7270F8);
}

uint64_t sub_1D5A2C960(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA7270F0);
}

uint64_t sub_1D5A2C96C(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA7270E8);
}

uint64_t sub_1D5A2C978(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EBDE3B38);
}

uint64_t sub_1D5A2C984(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA7270E0);
}

uint64_t sub_1D5A2C990(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA7270D8);
}

uint64_t sub_1D5A2C99C(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA7270D0);
}

uint64_t sub_1D5A2C9A8()
{
  return sub_1D5AB4E10();
}

uint64_t sub_1D5A2C9E0(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA7270C0);
}

uint64_t sub_1D5A2C9EC(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA7270B8);
}

uint64_t sub_1D5A2C9F8(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA7270B0);
}

uint64_t sub_1D5A2CA04(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA7270A8);
}

uint64_t sub_1D5A2CA10(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA7270A0);
}

uint64_t sub_1D5A2CA1C(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727098);
}

uint64_t sub_1D5A2CA28(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727090);
}

uint64_t sub_1D5A2CA34(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727088);
}

uint64_t sub_1D5A2CA40(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727080);
}

uint64_t sub_1D5A2CA4C(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727078);
}

uint64_t sub_1D5A2CA58(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727070);
}

uint64_t sub_1D5A2CA64(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EBDE0DE8);
}

uint64_t sub_1D5A2CA70(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727068);
}

uint64_t sub_1D5A2CA7C(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EA727060);
}

uint64_t sub_1D5A2CA88(uint64_t a1, uint64_t a2)
{
  return sub_1D59A7BA8(a1, a2, &qword_1EBDE0ED0);
}

uint64_t _s13SeymourClient5EventPAAE18debounceIdentifierSSvg_0()
{
  return sub_1D5AB4E10();
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for EventDeliveryStyle(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for EventDeliveryStyle(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_1D5A2CB28(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1D5A2CB44(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for EventDeliveryStyle()
{
  return &type metadata for EventDeliveryStyle;
}

uint64_t dispatch thunk of static Event.deliveryStyle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Event.debounceIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static Event.objectIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of HealthDataClientProtocol.queryAllHealthKitWorkouts()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HealthDataClientProtocol.queryHealthKitWorkoutsUsingThreshold(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of HealthDataClientProtocol.insertHealthKitWorkout(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of HealthDataClientProtocol.insertHealthKitStandaloneWorkoutJob(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of HealthDataClientProtocol.queryHealthKitWorkout(sessionIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of HealthDataClientProtocol.insertHealthKitMindfulSession(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of HealthDataClientProtocol.insertHealthKitStandaloneMindfulSessionJob(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of HealthDataClientProtocol.queryHealthKitMindfulSessionsUsingThreshold(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t CommentaryEventEnded.commentaryEvent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB2CD0();
  long long v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t CommentaryEventEnded.init(commentaryEvent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB2CD0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static CommentaryEventEnded.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t getEnumTagSinglePayload for CommentaryEventEnded(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D5A2CD48);
}

uint64_t sub_1D5A2CD48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2CD0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for CommentaryEventEnded(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D5A2CDC8);
}

uint64_t sub_1D5A2CDC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2CD0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for CommentaryEventEnded()
{
  uint64_t result = qword_1EA727370;
  if (!qword_1EA727370) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t PublishRecord.init(lastDelivery:queuedEvent:timer:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double *a3@<X8>, double a4@<D0>)
{
  *a3 = a4;
  uint64_t v7 = type metadata accessor for PublishRecord();
  id v8 = (char *)a3 + *(int *)(v7 + 28);
  uint64_t v9 = sub_1D5AB5620();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8, a1, v9);
  *(void *)((char *)a3 + *(int *)(v7 + 32)) = a2;
  return result;
}

uint64_t type metadata accessor for PublishRecord()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1D5A2CF3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 24);
}

uint64_t sub_1D5A2CF44()
{
  uint64_t result = sub_1D5AB5620();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1D5A2CFEC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  int v7 = *(_DWORD *)(v5 + 80);
  uint64_t v8 = v7;
  if (*(_DWORD *)(v5 + 84)) {
    size_t v9 = *(void *)(v5 + 64);
  }
  else {
    size_t v9 = *(void *)(v5 + 64) + 1;
  }
  unint64_t v10 = ((v9 + 7 + ((v7 + 8) & ~(unint64_t)v7)) & 0xFFFFFFFFFFFFFFF8) + 8;
  int v11 = v7 & 0x100000;
  if (v8 > 7 || v11 != 0 || v10 > 0x18)
  {
    uint64_t v14 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v14 + ((v8 & 0xF8 ^ 0x1F8) & (v8 + 16)));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    id v15 = (void *)(((unint64_t)a1 + v8 + 8) & ~v8);
    id v16 = (const void *)(((unint64_t)a2 + v8 + 8) & ~v8);
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(((unint64_t)a2 + v8 + 8) & ~v8, 1, v4))
    {
      memcpy(v15, v16, v9);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v15, v16, v4);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v15, 0, 1, v4);
    }
    *(void *)(((unint64_t)v15 + v9 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v16 + v9 + 7) & 0xFFFFFFFFFFFFFFF8);
    swift_unknownObjectRetain();
  }
  return v3;
}

uint64_t sub_1D5A2D188(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v3 = *(void *)(v2 - 8);
  unint64_t v4 = (a1 + *(unsigned __int8 *)(v3 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2)) {
    (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v4, v2);
  }
  return swift_unknownObjectRelease();
}

void *sub_1D5A2D270(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  int v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  uint64_t v8 = (const void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(v8, 1, v4))
  {
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
    if (v9) {
      size_t v11 = v10;
    }
    else {
      size_t v11 = v10 + 1;
    }
    memcpy(v7, v8, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v7, v8, v4);
    unint64_t v13 = *(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56);
    uint64_t v12 = v5 + 56;
    v13(v7, 0, 1, v4);
    int v9 = *(_DWORD *)(v12 + 28);
    size_t v10 = *(void *)(v12 + 8);
  }
  if (v9) {
    size_t v14 = v10;
  }
  else {
    size_t v14 = v10 + 1;
  }
  *(void *)(((unint64_t)v7 + v14 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v8 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
  swift_unknownObjectRetain();
  return a1;
}

void *sub_1D5A2D3C0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  int v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  uint64_t v8 = (void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  int v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v10 = v9(v7, 1, v4);
  int v11 = v9(v8, 1, v4);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(v7, v8, v4);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, v4);
      goto LABEL_12;
    }
    int v12 = *(_DWORD *)(v5 + 84);
    size_t v13 = *(void *)(v5 + 64);
  }
  else
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(v7, v8, v4);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
    int v12 = *(_DWORD *)(v5 + 84);
    size_t v13 = *(void *)(v5 + 64);
  }
  if (v12) {
    size_t v14 = v13;
  }
  else {
    size_t v14 = v13 + 1;
  }
  memcpy(v7, v8, v14);
LABEL_12:
  if (*(_DWORD *)(v5 + 84)) {
    uint64_t v15 = *(void *)(v5 + 64);
  }
  else {
    uint64_t v15 = *(void *)(v5 + 64) + 1;
  }
  *(void *)(((unint64_t)v7 + v15 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v8 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

void *sub_1D5A2D598(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  int v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  uint64_t v8 = (const void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(v8, 1, v4))
  {
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
    if (v9) {
      size_t v11 = v10;
    }
    else {
      size_t v11 = v10 + 1;
    }
    memcpy(v7, v8, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(v7, v8, v4);
    size_t v13 = *(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56);
    uint64_t v12 = v5 + 56;
    v13(v7, 0, 1, v4);
    int v9 = *(_DWORD *)(v12 + 28);
    size_t v10 = *(void *)(v12 + 8);
  }
  if (v9) {
    size_t v14 = v10;
  }
  else {
    size_t v14 = v10 + 1;
  }
  *(void *)(((unint64_t)v7 + v14 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v8 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_1D5A2D6E4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  int v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  uint64_t v8 = (void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  int v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v10 = v9(v7, 1, v4);
  int v11 = v9(v8, 1, v4);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 32))(v7, v8, v4);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, v4);
      goto LABEL_12;
    }
    int v12 = *(_DWORD *)(v5 + 84);
    size_t v13 = *(void *)(v5 + 64);
  }
  else
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(v7, v8, v4);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
    int v12 = *(_DWORD *)(v5 + 84);
    size_t v13 = *(void *)(v5 + 64);
  }
  if (v12) {
    size_t v14 = v13;
  }
  else {
    size_t v14 = v13 + 1;
  }
  memcpy(v7, v8, v14);
LABEL_12:
  if (*(_DWORD *)(v5 + 84)) {
    uint64_t v15 = *(void *)(v5 + 64);
  }
  else {
    uint64_t v15 = *(void *)(v5 + 64) + 1;
  }
  *(void *)(((unint64_t)v7 + v15 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v8 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  swift_unknownObjectRelease();
  return a1;
}

uint64_t sub_1D5A2D8B4(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4;
  int v6 = *(_DWORD *)(v4 + 84);
  if (v6) {
    unsigned int v7 = v6 - 1;
  }
  else {
    unsigned int v7 = 0;
  }
  if (v7 <= 0x7FFFFFFE) {
    unsigned int v8 = 2147483646;
  }
  else {
    unsigned int v8 = v7;
  }
  uint64_t v9 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v10 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!v6) {
    ++v10;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = v10 + 7;
  if (v8 < a2)
  {
    unint64_t v12 = ((v11 + ((v9 + 8) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v13 = a2 - v8;
    uint64_t v14 = v12 & 0xFFFFFFF8;
    if ((v12 & 0xFFFFFFF8) != 0) {
      unsigned int v15 = 2;
    }
    else {
      unsigned int v15 = v13 + 1;
    }
    if (v15 >= 0x10000) {
      LODWORD(v16) = 4;
    }
    else {
      LODWORD(v16) = 2;
    }
    if (v15 < 0x100) {
      LODWORD(v16) = 1;
    }
    if (v15 >= 2) {
      uint64_t v16 = v16;
    }
    else {
      uint64_t v16 = 0;
    }
    switch(v16)
    {
      case 1:
        int v17 = *((unsigned __int8 *)a1 + v12);
        if (!v17) {
          break;
        }
        goto LABEL_27;
      case 2:
        int v17 = *(unsigned __int16 *)((char *)a1 + v12);
        if (v17) {
          goto LABEL_27;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1D5A2DA60);
      case 4:
        int v17 = *(_DWORD *)((char *)a1 + v12);
        if (!v17) {
          break;
        }
LABEL_27:
        int v19 = v17 - 1;
        if (v14)
        {
          int v19 = 0;
          LODWORD(v14) = *a1;
        }
        return v8 + (v14 | v19) + 1;
      default:
        break;
    }
  }
  uint64_t v20 = ((unint64_t)a1 + v9 + 8) & ~v9;
  if (v7 < 0x7FFFFFFE)
  {
    unint64_t v22 = *(void *)((v11 + v20) & 0xFFFFFFFFFFFFFFF8);
    if (v22 >= 0xFFFFFFFF) {
      LODWORD(v22) = -1;
    }
    if ((v22 + 1) >= 2) {
      return v22;
    }
    else {
      return 0;
    }
  }
  else
  {
    unsigned int v21 = (*(uint64_t (**)(uint64_t))(v5 + 48))(v20);
    if (v21 >= 2) {
      return v21 - 1;
    }
    else {
      return 0;
    }
  }
}

void sub_1D5A2DA74(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (!v8) {
    unsigned int v9 = 0;
  }
  if (v9 <= 0x7FFFFFFE) {
    unsigned int v10 = 2147483646;
  }
  else {
    unsigned int v10 = v9;
  }
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  size_t v12 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (!v8) {
    ++v12;
  }
  size_t v13 = ((v12 + 7 + ((v11 + 8) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v10 < a3)
  {
    unsigned int v14 = a3 - v10;
    if (((v12 + 7 + ((v11 + 8) & ~v11)) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v15 = v14 + 1;
    }
    else {
      unsigned int v15 = 2;
    }
    if (v15 >= 0x10000) {
      int v16 = 4;
    }
    else {
      int v16 = 2;
    }
    if (v15 < 0x100) {
      int v16 = 1;
    }
    if (v15 >= 2) {
      int v6 = v16;
    }
    else {
      int v6 = 0;
    }
  }
  if (a2 > v10)
  {
    if (((v12 + 7 + ((v11 + 8) & ~v11)) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v17 = a2 - v10;
    }
    else {
      int v17 = 1;
    }
    if (((v12 + 7 + ((v11 + 8) & ~v11)) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      unsigned int v18 = ~v10 + a2;
      bzero(a1, v13);
      *(_DWORD *)a1 = v18;
    }
    switch(v6)
    {
      case 1:
        a1[v13] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v13] = v17;
        return;
      case 3:
        goto LABEL_58;
      case 4:
        *(_DWORD *)&a1[v13] = v17;
        return;
      default:
        return;
    }
  }
  switch(v6)
  {
    case 1:
      a1[v13] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 2:
      *(_WORD *)&a1[v13] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 3:
LABEL_58:
      __break(1u);
      JUMPOUT(0x1D5A2DD24);
    case 4:
      *(_DWORD *)&a1[v13] = 0;
      goto LABEL_34;
    default:
LABEL_34:
      if (a2)
      {
LABEL_35:
        unint64_t v19 = (unint64_t)&a1[v11 + 8] & ~v11;
        if (v9 < 0x7FFFFFFE)
        {
          uint64_t v23 = (void *)((v12 + 7 + v19) & 0xFFFFFFFFFFFFFFF8);
          if (a2 > 0x7FFFFFFE)
          {
            *uint64_t v23 = 0;
            *(_DWORD *)uint64_t v23 = a2 - 0x7FFFFFFF;
          }
          else
          {
            *uint64_t v23 = a2;
          }
        }
        else if (v9 >= a2)
        {
          uint64_t v24 = a2 + 1;
          char v25 = *(void (**)(unint64_t, uint64_t))(v7 + 56);
          unint64_t v26 = (unint64_t)&a1[v11 + 8] & ~v11;
          v25(v26, v24);
        }
        else
        {
          if (v12 <= 3) {
            int v20 = ~(-1 << (8 * v12));
          }
          else {
            int v20 = -1;
          }
          if (v12)
          {
            int v21 = v20 & (~v9 + a2);
            if (v12 <= 3) {
              int v22 = v12;
            }
            else {
              int v22 = 4;
            }
            bzero((void *)((unint64_t)&a1[v11 + 8] & ~v11), v12);
            switch(v22)
            {
              case 2:
                *(_WORD *)unint64_t v19 = v21;
                break;
              case 3:
                *(_WORD *)unint64_t v19 = v21;
                *(unsigned char *)(v19 + 2) = BYTE2(v21);
                break;
              case 4:
                *(_DWORD *)unint64_t v19 = v21;
                break;
              default:
                *(unsigned char *)unint64_t v19 = v21;
                break;
            }
          }
        }
      }
      return;
  }
}

uint64_t sub_1D5A2DD5C@<X0>(double a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, double *a6@<X8>)
{
  uint64_t v7 = v6;
  uint64_t v49 = a4;
  int64_t v50 = a6;
  uint64_t v52 = a3;
  LODWORD(v51) = a2;
  double v46 = a1;
  uint64_t v9 = *(void *)(a5 + 16);
  uint64_t v10 = sub_1D5AB5620();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  unsigned int v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v48 = (char *)&v45 - v16;
  uint64_t v17 = *(void *)(a5 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  uint64_t v47 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  int v22 = (char *)&v45 - v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (double *)((char *)&v45 - v23);
  uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v54 = v7;
  v53((char *)&v45 - v23, v7, a5);
  uint64_t v25 = v9;
  if (v51) {
    double v26 = *v24;
  }
  else {
    double v26 = v46;
  }
  uint64_t v27 = v11;
  uint64_t v45 = v10;
  id v29 = *(void (**)(char *, uint64_t))(v17 + 8);
  uint64_t v28 = v17 + 8;
  uint64_t v51 = v29;
  v29((char *)v24, a5);
  char v30 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v30(v14, v52, v10);
  v53(v22, v54, a5);
  uint64_t v31 = v27;
  uint64_t v32 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v14, 1, v25) == 1)
  {
    unsigned int v33 = &v22[*(int *)(a5 + 28)];
    uint64_t v34 = v48;
    uint64_t v52 = v28;
    uint64_t v35 = v45;
    v30(v48, (uint64_t)v33, v45);
    uint64_t v36 = (uint64_t)v34;
    uint64_t v37 = v22;
    uint64_t v38 = v51;
    v51(v37, a5);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v35);
    uint64_t v40 = v49;
    char v39 = v50;
    uint64_t v41 = v47;
    char v42 = v38;
  }
  else
  {
    char v42 = v51;
    v51(v22, a5);
    uint64_t v36 = (uint64_t)v48;
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v48, v14, v25);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56))(v36, 0, 1, v25);
    uint64_t v40 = v49;
    char v39 = v50;
    uint64_t v41 = v47;
  }
  v53(v41, v54, a5);
  uint64_t v43 = v40;
  if (!v40)
  {
    uint64_t v43 = *(void *)&v41[*(int *)(a5 + 32)];
    swift_unknownObjectRetain();
  }
  swift_unknownObjectRetain();
  v42(v41, a5);
  return PublishRecord.init(lastDelivery:queuedEvent:timer:)(v36, v43, v39, v26);
}

uint64_t sub_1D5A2E140(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = a8;
  uint64_t v44 = a5;
  uint64_t v9 = v8;
  uint64_t v58 = a2;
  uint64_t v59 = a4;
  uint64_t v57 = a1;
  uint64_t v42 = *(void *)(a5 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](a1);
  uint64_t v55 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v53 = (char *)&v40 - v13;
  uint64_t v15 = v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v41 = (char *)&v40 - v17;
  uint64_t v18 = sub_1D5AB5620();
  uint64_t v45 = *(void *)(v18 - 8);
  uint64_t v46 = v18;
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  uint64_t v51 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v40 - v22;
  uint64_t v24 = MEMORY[0x1F4188790](v21);
  uint64_t v40 = (char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v50 = *((void *)v15 - 1);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v40 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a6;
  uint64_t v52 = v15;
  uint64_t v60 = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  char v30 = (char *)&v40 - v29;
  uint64_t v31 = sub_1D5AB4F60();
  uint64_t v61 = sub_1D5AB4D30();
  uint64_t v56 = sub_1D5AB58B0();
  sub_1D5AB5880();
  (*(void (**)(char *, uint64_t, void))(v50 + 16))(v28, v48, v52);
  uint64_t v59 = v30;
  uint64_t result = sub_1D5AB4F50();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    unsigned int v33 = (uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
    uint64_t v34 = (uint64_t (**)(char *, uint64_t))(v54 + 8);
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_1D5AB5670();
      uint64_t result = (*v33)(v23, 1, AssociatedTypeWitness);
      if (result == 1) {
        goto LABEL_18;
      }
      v57(v23, v55);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v55, v44);
        return (*v34)(v23, AssociatedTypeWitness);
      }
      uint64_t v9 = 0;
      (*v34)(v23, AssociatedTypeWitness);
      sub_1D5AB5890();
      if (!--v31)
      {
        uint64_t v35 = v54;
        uint64_t v36 = v51;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  uint64_t v35 = v54;
  uint64_t v36 = v51;
LABEL_9:
  sub_1D5AB5670();
  uint64_t v55 = *(char **)(v35 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v36, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v37 = v51;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v46);
    return v61;
  }
  else
  {
    uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    uint64_t v54 = v35 + 32;
    uint64_t v38 = (void (**)(char *, uint64_t))(v35 + 8);
    char v39 = v41;
    uint64_t v37 = v51;
    while (1)
    {
      v52(v39, v37, AssociatedTypeWitness);
      v57(v39, v53);
      if (v9) {
        break;
      }
      uint64_t v9 = 0;
      (*v38)(v39, AssociatedTypeWitness);
      sub_1D5AB5890();
      sub_1D5AB5670();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v37, 1, AssociatedTypeWitness) == 1) {
        goto LABEL_14;
      }
    }
    (*v38)(v39, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v53, v44);
  }
}

uint64_t Digest.hexString.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D5A2E140((void (*)(char *, char *))sub_1D5A2E8F4, 0, a1, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], *(void *)(a2 + 32), MEMORY[0x1E4FBC278], a8);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE4C28);
  sub_1D59A899C();
  uint64_t v8 = sub_1D5AB4DB0();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1D5A2E8F4@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  char v3 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE33E0);
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = MEMORY[0x1E4FBC358];
  *(_OWORD *)(v4 + 16) = xmmword_1D5AB90F0;
  uint64_t v6 = MEMORY[0x1E4FBC3B0];
  *(void *)(v4 + 56) = v5;
  *(void *)(v4 + 64) = v6;
  *(unsigned char *)(v4 + 32) = v3;
  uint64_t result = sub_1D5AB4E00();
  *a2 = result;
  a2[1] = v8;
  return result;
}

uint64_t HashAlgorithm.hash(into:)()
{
  return sub_1D5AB5C30();
}

BOOL static HashAlgorithm.== infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t HashAlgorithm.hashValue.getter()
{
  return sub_1D5AB5C60();
}

uint64_t sub_1D5A2EA24()
{
  return sub_1D5AB5C60();
}

uint64_t sub_1D5A2EA78()
{
  return sub_1D5AB5C30();
}

uint64_t sub_1D5A2EAB8()
{
  return sub_1D5AB5C60();
}

unint64_t sub_1D5A2EB0C()
{
  unint64_t result = qword_1EA727400;
  if (!qword_1EA727400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA727400);
  }
  return result;
}

BOOL sub_1D5A2EB60(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t getEnumTagSinglePayload for HashAlgorithm(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for HashAlgorithm(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

uint64_t sub_1D5A2EBBC()
{
  return 0;
}

ValueMetadata *type metadata accessor for HashAlgorithm()
{
  return &type metadata for HashAlgorithm;
}

uint64_t static HashFunction.hash(data:chunkSizeInBytes:)()
{
  return sub_1D5AB1C00();
}

uint64_t sub_1D5A2EC70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v49 = a4;
  uint64_t v59 = *MEMORY[0x1E4F143B8];
  uint64_t v57 = sub_1D5AB1BE0();
  uint64_t v51 = *(void (***)(char *, uint64_t))(v57 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v57);
  uint64_t v56 = (char *)v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5AB4D00();
  uint64_t v54 = a1;
  if (a1)
  {
    uint64_t v55 = v17;
    v45[1] = a7;
    v45[2] = v7;
    uint64_t v18 = v49;
    uint64_t v19 = v56;
    switch(a3 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(a2), a2)) {
          goto LABEL_48;
        }
        uint64_t v20 = HIDWORD(a2) - (int)a2;
LABEL_8:
        if (v20 < 1) {
          goto LABEL_40;
        }
        uint64_t v25 = 0;
        unsigned int v53 = *MEMORY[0x1E4F27740];
        uint64_t v26 = v51++;
        uint64_t v52 = (void (**)(char *, void, uint64_t))(v26 + 13);
        uint64_t v47 = a6;
        uint64_t v48 = a5;
        uint64_t v50 = v20;
        break;
      case 2uLL:
        uint64_t v23 = *(void *)(a2 + 16);
        uint64_t v22 = *(void *)(a2 + 24);
        BOOL v24 = __OFSUB__(v22, v23);
        uint64_t v20 = v22 - v23;
        if (!v24) {
          goto LABEL_8;
        }
        goto LABEL_49;
      case 3uLL:
        goto LABEL_40;
      default:
        uint64_t v20 = BYTE6(a3);
        goto LABEL_8;
    }
    while (1)
    {
      if (__OFSUB__(v20, v25))
      {
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
      }
      if (v20 - v25 >= v18) {
        uint64_t v27 = v18;
      }
      else {
        uint64_t v27 = v20 - v25;
      }
      uint64_t v28 = v54 + v25;
      (*v52)(v19, v53, v57);
      sub_1D5AB1BD0();
      if (v27)
      {
        sub_1D5AB1B10();
        swift_allocObject();
        swift_retain();
        uint64_t v29 = sub_1D5AB1AD0();
        if (v27 < 15)
        {
          if (v27 < 0) {
            goto LABEL_44;
          }
          unsigned int v33 = (char *)sub_1D5AB1AE0();
          if (v33)
          {
            uint64_t v34 = sub_1D5AB1B00();
            if (__OFSUB__(0, v34)) {
              goto LABEL_47;
            }
            v33 -= v34;
          }
          uint64_t v35 = sub_1D5AB1AF0();
          if (v35 >= v27) {
            uint64_t v36 = v27;
          }
          else {
            uint64_t v36 = v35;
          }
          uint64_t v37 = &v33[v36];
          if (v33)
          {
            unint64_t v38 = v37 - v33;
          }
          else
          {
            uint64_t v37 = 0;
            unint64_t v38 = 0;
          }
          if ((v38 & 0x8000000000000000) != 0) {
            goto LABEL_45;
          }
          if (v38 > 0xFF) {
            goto LABEL_46;
          }
          uint64_t v39 = 0;
          *(void *)((char *)&__dst + 6) = 0;
          uint64_t v40 = v38;
          *(void *)&long long __dst = 0;
          BYTE14(__dst) = v38;
          uint64_t v41 = 0;
          if (v33 && v37 != v33)
          {
            memcpy(&__dst, v33, v37 - v33);
            uint64_t v41 = BYTE12(__dst);
            uint64_t v39 = BYTE13(__dst);
            uint64_t v40 = BYTE14(__dst);
          }
          uint64_t v30 = __dst;
          uint64_t v42 = DWORD2(__dst);
          swift_release();
          swift_release();
          unint64_t v31 = v42 | (v41 << 32) | (v39 << 40) | (v40 << 48);
          uint64_t v43 = v47;
          a5 = v48;
          uint64_t v18 = v49;
          uint64_t v19 = v56;
          goto LABEL_38;
        }
        if ((unint64_t)v27 >= 0x7FFFFFFF)
        {
          sub_1D5AB1BF0();
          uint64_t v30 = swift_allocObject();
          *(void *)(v30 + 16) = 0;
          *(void *)(v30 + 24) = v27;
          swift_release();
          unint64_t v31 = v29 | 0x8000000000000000;
        }
        else
        {
          swift_release();
          uint64_t v30 = v27 << 32;
          unint64_t v31 = v29 | 0x4000000000000000;
        }
        uint64_t v19 = v56;
      }
      else
      {
        uint64_t v32 = (void (*)(uint64_t, void))sub_1D5AB1BD0();
        v32(v28, 0);
        swift_release();
        swift_release();
        uint64_t v30 = 0;
        unint64_t v31 = 0xC000000000000000;
      }
      uint64_t v43 = a6;
LABEL_38:
      (*v51)(v19, v57);
      *(void *)&long long __dst = v30;
      *((void *)&__dst + 1) = v31;
      sub_1D5A2F188();
      a6 = v43;
      sub_1D5AB4CF0();
      sub_1D5956DF8(v30, v31);
      BOOL v24 = __OFADD__(v25, v27);
      v25 += v27;
      if (v24) {
        goto LABEL_43;
      }
      uint64_t v20 = v50;
      uint64_t v19 = v56;
      if (v25 >= v50)
      {
LABEL_40:
        uint64_t v21 = v55;
        sub_1D5AB4CE0();
        return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v21, a5);
      }
    }
  }
  uint64_t v21 = v17;
  sub_1D5AB4CE0();
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v21, a5);
}

uint64_t sub_1D5A2F164@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D5A2EC70(a1, *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

unint64_t sub_1D5A2F188()
{
  unint64_t result = qword_1EA727408;
  if (!qword_1EA727408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA727408);
  }
  return result;
}

uint64_t TransportDataSerializable.hash(_:)(uint64_t *a1)
{
  v17[3] = *MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1D5AB4D20();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  uint64_t v9 = sub_1D5AB3E40();
  if (!v2)
  {
    unint64_t v11 = v10;
    uint64_t v12 = v9;
    switch(v10 >> 62)
    {
      case 1uLL:
        if (v9 >> 32 < (int)v9) {
          __break(1u);
        }
        unint64_t v16 = v10 & 0x3FFFFFFFFFFFFFFFLL;
        sub_1D599FF54(v9, v10);
        sub_1D599FF54(v12, v11);
        sub_1D5A30428((int)v12, v12 >> 32, v12, v11, v8, (uint64_t)v7);
        break;
      case 2uLL:
        uint64_t v13 = *(void *)(v9 + 16);
        unint64_t v16 = *(void *)(v9 + 24);
        sub_1D599FF54(v9, v10);
        sub_1D599FF54(v12, v11);
        swift_retain();
        swift_retain();
        sub_1D5A30428(v13, v16, v12, v11, v8, (uint64_t)v7);
        swift_release();
        swift_release();
        break;
      case 3uLL:
        memset(v17, 0, 14);
        goto LABEL_6;
      default:
        v17[0] = v9;
        LOWORD(v17[1]) = v10;
        BYTE2(v17[1]) = BYTE2(v10);
        BYTE3(v17[1]) = BYTE3(v10);
        BYTE4(v17[1]) = BYTE4(v10);
        BYTE5(v17[1]) = BYTE5(v10);
LABEL_6:
        sub_1D5A2FD0C((uint64_t)v17, v9, v10, v8, (uint64_t)v7);
        sub_1D5956DF8(v12, v11);
        break;
    }
    sub_1D5956DF8(v12, v11);
    v17[0] = sub_1D5A2F984((uint64_t)v7);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE4C28);
    sub_1D59A899C();
    uint64_t v1 = sub_1D5AB4DB0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1D5956DF8(v12, v11);
  }
  return v1;
}

void *Array<A>.hash(_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v21[4] = *MEMORY[0x1E4F143B8];
  uint64_t v8 = sub_1D5AB4D20();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)&v21[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  v21[0] = a2;
  sub_1D5AB5100();
  v21[3] = a4;
  swift_getWitnessTable();
  uint64_t v13 = v21;
  uint64_t v14 = sub_1D5AB4150();
  if (!v4)
  {
    unint64_t v16 = v15;
    uint64_t v17 = v14;
    switch(v15 >> 62)
    {
      case 1uLL:
        if (v14 >> 32 < (int)v14) {
          __break(1u);
        }
        unint64_t v20 = v15 & 0x3FFFFFFFFFFFFFFFLL;
        sub_1D599FF54(v14, v15);
        sub_1D599FF54(v17, v16);
        sub_1D5A30428((int)v17, v17 >> 32, v17, v16, v12, (uint64_t)v11);
        break;
      case 2uLL:
        uint64_t v18 = *(void *)(v14 + 16);
        unint64_t v20 = *(void *)(v14 + 24);
        sub_1D599FF54(v14, v15);
        sub_1D599FF54(v17, v16);
        swift_retain();
        swift_retain();
        sub_1D5A30428(v18, v20, v17, v16, v12, (uint64_t)v11);
        swift_release();
        swift_release();
        break;
      case 3uLL:
        memset(v21, 0, 14);
        goto LABEL_6;
      default:
        v21[0] = v14;
        LOWORD(v21[1]) = v15;
        BYTE2(v21[1]) = BYTE2(v15);
        BYTE3(v21[1]) = BYTE3(v15);
        BYTE4(v21[1]) = BYTE4(v15);
        BYTE5(v21[1]) = BYTE5(v15);
LABEL_6:
        sub_1D5A2FD0C((uint64_t)v21, v14, v15, v12, (uint64_t)v11);
        sub_1D5956DF8(v17, v16);
        break;
    }
    sub_1D5956DF8(v17, v16);
    v21[0] = sub_1D5A2F984((uint64_t)v11);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE4C28);
    sub_1D59A899C();
    uint64_t v13 = (void *)sub_1D5AB4DB0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    sub_1D5956DF8(v17, v16);
  }
  return v13;
}

uint64_t sub_1D5A2F984(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB4D20();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A304F8(&qword_1EBDE33B8, MEMORY[0x1E4F25200]);
  uint64_t v6 = sub_1D5AB4F60();
  uint64_t v37 = MEMORY[0x1E4FBC860];
  sub_1D594E784(0, v6 & ~(v6 >> 63), 0);
  uint64_t v7 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t result = sub_1D5AB4F50();
  if ((v6 & 0x8000000000000000) == 0)
  {
    unint64_t v9 = v36;
    if (v6)
    {
      uint64_t v10 = *(void *)(v35 + 16);
      uint64_t v33 = v35;
      *(void *)&long long v34 = v10;
      uint64_t v32 = v35 + 32;
      long long v31 = xmmword_1D5AB90F0;
      unint64_t v11 = v36;
      while ((void)v34 != v11)
      {
        if ((v9 & 0x8000000000000000) != 0) {
          goto LABEL_21;
        }
        if (v11 >= *(void *)(v33 + 16)) {
          goto LABEL_22;
        }
        char v12 = *(unsigned char *)(v32 + v11);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE33E0);
        uint64_t v13 = swift_allocObject();
        *(_OWORD *)(v13 + 16) = v31;
        *(void *)(v13 + 56) = MEMORY[0x1E4FBC358];
        *(void *)(v13 + 64) = MEMORY[0x1E4FBC3B0];
        *(unsigned char *)(v13 + 32) = v12;
        uint64_t result = sub_1D5AB4E00();
        uint64_t v14 = result;
        uint64_t v16 = v15;
        uint64_t v37 = v7;
        unint64_t v18 = *(void *)(v7 + 16);
        unint64_t v17 = *(void *)(v7 + 24);
        if (v18 >= v17 >> 1)
        {
          uint64_t result = sub_1D594E784(v17 > 1, v18 + 1, 1);
          uint64_t v7 = v37;
        }
        *(void *)(v7 + 16) = v18 + 1;
        uint64_t v19 = v7 + 16 * v18;
        *(void *)(v19 + 32) = v14;
        *(void *)(v19 + 40) = v16;
        ++v11;
        if (!--v6)
        {
          unint64_t v36 = v11;
          goto LABEL_12;
        }
      }
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
    }
    else
    {
      unint64_t v11 = v36;
LABEL_12:
      uint64_t v20 = v35;
      unint64_t v21 = *(void *)(v35 + 16);
      if (v11 == v21)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        return v7;
      }
      long long v34 = xmmword_1D5AB90F0;
      while (v11 < v21)
      {
        char v22 = *(unsigned char *)(v20 + 32 + v11);
        unint64_t v36 = v11 + 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE33E0);
        uint64_t v23 = swift_allocObject();
        *(_OWORD *)(v23 + 16) = v34;
        *(void *)(v23 + 56) = MEMORY[0x1E4FBC358];
        *(void *)(v23 + 64) = MEMORY[0x1E4FBC3B0];
        *(unsigned char *)(v23 + 32) = v22;
        uint64_t result = sub_1D5AB4E00();
        uint64_t v24 = result;
        uint64_t v26 = v25;
        uint64_t v37 = v7;
        unint64_t v28 = *(void *)(v7 + 16);
        unint64_t v27 = *(void *)(v7 + 24);
        if (v28 >= v27 >> 1)
        {
          uint64_t result = sub_1D594E784(v27 > 1, v28 + 1, 1);
          uint64_t v7 = v37;
        }
        *(void *)(v7 + 16) = v28 + 1;
        uint64_t v29 = v7 + 16 * v28;
        *(void *)(v29 + 32) = v24;
        *(void *)(v29 + 40) = v26;
        unint64_t v11 = v36;
        unint64_t v21 = *(void *)(v20 + 16);
        if (v36 == v21) {
          goto LABEL_13;
        }
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D5A2FD0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v52 = a4;
  uint64_t v55 = a2;
  uint64_t v58 = *MEMORY[0x1E4F143B8];
  uint64_t v46 = sub_1D5AB1BE0();
  uint64_t v9 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  uint64_t v54 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D5AB4D10();
  uint64_t v43 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1D5A304F8(&qword_1EBDE33B0, MEMORY[0x1E4F251D8]);
  sub_1D5AB4D00();
  uint64_t v51 = a1;
  if (a1)
  {
    uint64_t v53 = v14;
    uint64_t v44 = v13;
    uint64_t v45 = v11;
    v42[0] = a5;
    v42[1] = v5;
    uint64_t v15 = v46;
    uint64_t v16 = v54;
    switch(a3 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v55), v55)) {
          goto LABEL_62;
        }
        uint64_t v17 = HIDWORD(v55) - (int)v55;
LABEL_8:
        if (v17 < 1) {
          goto LABEL_51;
        }
        uint64_t v21 = 0;
        unsigned int v50 = *MEMORY[0x1E4F27740];
        uint64_t v48 = (void (**)(char *, uint64_t))(v9 + 8);
        uint64_t v49 = (void (**)(char *, void, uint64_t))(v9 + 104);
        uint64_t v47 = v17;
        break;
      case 2uLL:
        uint64_t v19 = *(void *)(v55 + 16);
        uint64_t v18 = *(void *)(v55 + 24);
        BOOL v20 = __OFSUB__(v18, v19);
        uint64_t v17 = v18 - v19;
        if (!v20) {
          goto LABEL_8;
        }
        goto LABEL_63;
      case 3uLL:
        goto LABEL_51;
      default:
        uint64_t v17 = BYTE6(a3);
        goto LABEL_8;
    }
    do
    {
      if (__OFSUB__(v17, v21))
      {
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
      }
      if (v17 - v21 >= v52) {
        uint64_t v22 = v52;
      }
      else {
        uint64_t v22 = v17 - v21;
      }
      uint64_t v23 = v51 + v21;
      (*v49)(v16, v50, v15);
      sub_1D5AB1BD0();
      uint64_t v55 = v22;
      if (v22)
      {
        sub_1D5AB1B10();
        swift_allocObject();
        swift_retain();
        uint64_t v24 = sub_1D5AB1AD0();
        if (v22 < 15)
        {
          if (v22 < 0) {
            goto LABEL_54;
          }
          unint64_t v28 = (char *)sub_1D5AB1AE0();
          if (v28)
          {
            uint64_t v29 = sub_1D5AB1B00();
            if (__OFSUB__(0, v29)) {
              goto LABEL_57;
            }
            v28 -= v29;
          }
          uint64_t v30 = sub_1D5AB1AF0();
          if (v30 >= v22) {
            uint64_t v31 = v22;
          }
          else {
            uint64_t v31 = v30;
          }
          uint64_t v32 = &v28[v31];
          if (v28)
          {
            unint64_t v33 = v32 - v28;
          }
          else
          {
            uint64_t v32 = 0;
            unint64_t v33 = 0;
          }
          if ((v33 & 0x8000000000000000) != 0) {
            goto LABEL_55;
          }
          if (v33 > 0xFF) {
            goto LABEL_56;
          }
          uint64_t v34 = 0;
          uint64_t v35 = v33;
          memset(__dst, 0, sizeof(__dst));
          unsigned __int8 v57 = v33;
          uint64_t v36 = 0;
          if (v28 && v32 != v28)
          {
            memcpy(__dst, v28, v32 - v28);
            uint64_t v36 = __dst[12];
            uint64_t v34 = __dst[13];
            uint64_t v35 = v57;
          }
          uint64_t v25 = *(void *)__dst;
          uint64_t v37 = *(unsigned int *)&__dst[8];
          swift_release();
          swift_release();
          unint64_t v26 = v37 | (v36 << 32) | (v34 << 40) | (v35 << 48);
          uint64_t v11 = v45;
          uint64_t v15 = v46;
          uint64_t v13 = v44;
        }
        else
        {
          swift_release();
          if ((unint64_t)v22 >= 0x7FFFFFFF)
          {
            sub_1D5AB1BF0();
            uint64_t v25 = swift_allocObject();
            *(void *)(v25 + 16) = 0;
            *(void *)(v25 + 24) = v22;
            unint64_t v26 = v24 | 0x8000000000000000;
          }
          else
          {
            uint64_t v25 = v22 << 32;
            unint64_t v26 = v24 | 0x4000000000000000;
          }
        }
        (*v48)(v54, v15);
        switch(v26 >> 62)
        {
          case 1uLL:
            if (v25 >> 32 < (int)v25) {
              goto LABEL_58;
            }
            sub_1D599FF54(v25, v26);
            if (sub_1D5AB1AE0() && __OFSUB__((int)v25, sub_1D5AB1B00())) {
              goto LABEL_61;
            }
            sub_1D5AB1AF0();
            uint64_t v13 = v44;
            uint64_t v11 = v45;
            sub_1D5AB4CD0();
            break;
          case 2uLL:
            uint64_t v38 = *(void *)(v25 + 16);
            uint64_t v39 = *(void *)(v25 + 24);
            sub_1D599FF54(v25, v26);
            swift_retain();
            if (sub_1D5AB1AE0() && __OFSUB__(v38, sub_1D5AB1B00())) {
              goto LABEL_60;
            }
            if (__OFSUB__(v39, v38)) {
              goto LABEL_59;
            }
            sub_1D5AB1AF0();
            uint64_t v40 = v44;
            uint64_t v11 = v45;
            sub_1D5AB4CD0();
            uint64_t v13 = v40;
            swift_release();
            break;
          case 3uLL:
            goto LABEL_38;
          default:
            *(void *)long long __dst = v25;
            *(_WORD *)&__dst[8] = v26;
            __dst[10] = BYTE2(v26);
            __dst[11] = BYTE3(v26);
            __dst[12] = BYTE4(v26);
            __dst[13] = BYTE5(v26);
            goto LABEL_39;
        }
        sub_1D5956DF8(v25, v26);
        sub_1D5956DF8(v25, v26);
        uint64_t v15 = v46;
      }
      else
      {
        unint64_t v27 = (void (*)(uint64_t, void))sub_1D5AB1BD0();
        v27(v23, 0);
        swift_release();
        swift_release();
        (*v48)(v16, v15);
        uint64_t v25 = 0;
        unint64_t v26 = 0xC000000000000000;
LABEL_38:
        memset(__dst, 0, sizeof(__dst));
LABEL_39:
        sub_1D5AB4CD0();
        sub_1D5956DF8(v25, v26);
        sub_1D5956DF8(v25, v26);
      }
      uint64_t v16 = v54;
      BOOL v20 = __OFADD__(v21, v55);
      v21 += v55;
      uint64_t v17 = v47;
      if (v20) {
        goto LABEL_53;
      }
    }
    while (v21 < v47);
  }
LABEL_51:
  sub_1D5AB4CE0();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v13, v11);
}

uint64_t sub_1D5A30428@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, unint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t result = sub_1D5AB1AE0();
  uint64_t v13 = result;
  if (result)
  {
    uint64_t result = sub_1D5AB1B00();
    if (__OFSUB__(a1, result)) {
      goto LABEL_7;
    }
    v13 += a1 - result;
  }
  if (!__OFSUB__(a2, a1))
  {
    sub_1D5AB1AF0();
    sub_1D5A2FD0C(v13, a3, a4, a5, a6);
    return sub_1D5956DF8(a3, a4);
  }
  __break(1u);
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1D5A304F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void static SupportedDeviceChanged.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for SupportedDeviceChanged()
{
  return &type metadata for SupportedDeviceChanged;
}

uint64_t Data.hash(_:)(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  v16[4] = *MEMORY[0x1E4F143B8];
  uint64_t v6 = sub_1D5AB4D20();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v16[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  switch(a3 >> 62)
  {
    case 1uLL:
      if (a2 >> 32 < (int)a2) {
        __break(1u);
      }
      sub_1D599FF54(a2, a3);
      sub_1D5A30428((int)a2, a2 >> 32, a2, a3, v10, (uint64_t)v9);
      break;
    case 2uLL:
      uint64_t v11 = *(void *)(a2 + 16);
      uint64_t v12 = *(void *)(a2 + 24);
      sub_1D599FF54(a2, a3);
      swift_retain();
      swift_retain();
      sub_1D5A30428(v11, v12, a2, a3, v10, (uint64_t)v9);
      swift_release();
      swift_release();
      break;
    case 3uLL:
      memset(v16, 0, 14);
      goto LABEL_7;
    default:
      v16[0] = a2;
      LOWORD(v16[1]) = a3;
      BYTE2(v16[1]) = BYTE2(a3);
      BYTE3(v16[1]) = BYTE3(a3);
      BYTE4(v16[1]) = BYTE4(a3);
      BYTE5(v16[1]) = BYTE5(a3);
LABEL_7:
      sub_1D5A2FD0C((uint64_t)v16, a2, a3, v10, (uint64_t)v9);
      sub_1D5956DF8(a2, a3);
      sub_1D5956DF8(a2, a3);
      break;
  }
  v16[0] = sub_1D5A2F984((uint64_t)v9);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE4C28);
  sub_1D59A899C();
  uint64_t v13 = sub_1D5AB4DB0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v13;
}

void static OnboardingSurveyResultsUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for OnboardingSurveyResultsUpdated()
{
  return &type metadata for OnboardingSurveyResultsUpdated;
}

uint64_t MusicTrackStarted.musicTrack.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB1E40();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t MusicTrackStarted.init(musicTrack:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB1E40();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static MusicTrackStarted.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t getEnumTagSinglePayload for MusicTrackStarted(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D5A30980);
}

uint64_t sub_1D5A30980(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB1E40();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MusicTrackStarted(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D5A30A00);
}

uint64_t sub_1D5A30A00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB1E40();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MusicTrackStarted()
{
  uint64_t result = qword_1EA727410;
  if (!qword_1EA727410) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *SessionClient.__allocating_init(eventHub:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = objc_allocWithZone(MEMORY[0x1E4F29268]);
  id v7 = a3;
  uint64_t v8 = (void *)sub_1D5AB4DE0();
  id v9 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v8, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  uint64_t v10 = sub_1D59968E8(v9, v7);
  uint64_t v11 = *(void *)(v10 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 16));
  if (*(unsigned char *)(v10 + 48) == 1)
  {
    *(unsigned char *)(v10 + 48) = 2;
    objc_msgSend(*(id *)(v10 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  type metadata accessor for SessionClient();
  uint64_t v12 = (void *)swift_allocObject();
  uint64_t v13 = swift_retain();
  uint64_t v14 = sub_1D5A378DC(v13, a1, a2, v12);

  swift_release_n();
  return v14;
}

uint64_t SessionClient.__allocating_init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5A30C44(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D5A37DC8);
}

uint64_t type metadata accessor for SessionClient()
{
  return self;
}

uint64_t SessionClient.init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5A30C44(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D5A37B58);
}

uint64_t sub_1D5A30C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = a6(a1, a4, a5, v6, ObjectType, a2, a3);
  swift_unknownObjectRelease();
  return v14;
}

uint64_t sub_1D5A30CC8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(void *)(result + 48);
    swift_unknownObjectRetain();
    swift_release();
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v1 + 8))(ObjectType, &type metadata for DistributedSessionCancelled, &protocol witness table for DistributedSessionCancelled, ObjectType, v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D5A30D6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t a5, uint64_t (*a6)(void))
{
  uint64_t v10 = a3(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v17 - v11;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v14 = *(void *)(result + 48);
    swift_unknownObjectRetain();
    swift_release();
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v16 = a4(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v12, a1, v16);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 8))(v12, v10, a5, ObjectType, v14);
    swift_unknownObjectRelease();
    return sub_1D5A3852C((uint64_t)v12, a6);
  }
  return result;
}

uint64_t SessionClient.deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t SessionClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t SessionClient.queryActiveSession()()
{
  if (qword_1EA724E10 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EA727C70);
  v2._uint64_t countAndFlagsBits = 0xD000000000000066;
  v2._object = (void *)0x80000001D5AC9700;
  v3._object = (void *)0x80000001D5AC9770;
  v3._uint64_t countAndFlagsBits = 0xD000000000000014;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v9 = 225;
  uint64_t v6 = *(uint64_t (**)(__int16 *, uint64_t, void, void, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = sub_1D5AB4800();
  return v6(&v9, v7, MEMORY[0x1E4F9ED28], MEMORY[0x1E4F9ED30], ObjectType, v4);
}

uint64_t SessionClient.createSession(token:catalogWorkout:supportedMetrics:workoutActivityType:startTime:queueIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t, char *, uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v166 = a5;
  uint64_t v171 = a4;
  uint64_t v190 = a3;
  uint64_t v154 = a2;
  uint64_t v192 = a6;
  uint64_t v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v7 = *(void *)(v172 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v172);
  v174 = (char *)v148 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  char v189 = (char *)v148 - v11;
  uint64_t v173 = v12;
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)v148 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250D0);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v170 = (char *)v148 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727930);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v169 = (char *)v148 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250D8);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v168 = (char *)v148 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250E0);
  MEMORY[0x1F4188790](v21 - 8);
  v167 = (char *)v148 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250E8);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v165 = (char *)v148 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250F0);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v164 = (char *)v148 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250F8);
  MEMORY[0x1F4188790](v27 - 8);
  uint64_t v163 = (char *)v148 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA727900);
  MEMORY[0x1F4188790](v29 - 8);
  uint64_t v162 = (uint64_t)v148 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725100);
  MEMORY[0x1F4188790](v31 - 8);
  uint64_t v161 = (char *)v148 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7251C8);
  MEMORY[0x1F4188790](v157);
  uint64_t v153 = (char *)v148 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725110);
  MEMORY[0x1F4188790](v34 - 8);
  uint64_t v160 = (char *)v148 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725118);
  MEMORY[0x1F4188790](v36 - 8);
  uint64_t v188 = (char *)v148 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725120);
  MEMORY[0x1F4188790](v38 - 8);
  uint64_t v187 = (char *)v148 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725128);
  MEMORY[0x1F4188790](v40 - 8);
  char v186 = (char *)v148 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725130);
  MEMORY[0x1F4188790](v42 - 8);
  uint64_t v185 = (char *)v148 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725138);
  MEMORY[0x1F4188790](v44 - 8);
  uint64_t v184 = (char *)v148 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725140);
  MEMORY[0x1F4188790](v46 - 8);
  v182 = (char *)v148 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725148);
  MEMORY[0x1F4188790](v48 - 8);
  uint64_t v181 = (char *)v148 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725150);
  MEMORY[0x1F4188790](v50 - 8);
  v180 = (char *)v148 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725158);
  MEMORY[0x1F4188790](v52 - 8);
  uint64_t v179 = (char *)v148 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725178);
  MEMORY[0x1F4188790](v54 - 8);
  uint64_t v178 = (char *)v148 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725180);
  MEMORY[0x1F4188790](v56 - 8);
  char v177 = (char *)v148 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725188);
  MEMORY[0x1F4188790](v58 - 8);
  v176 = (char *)v148 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725190);
  MEMORY[0x1F4188790](v60 - 8);
  int v175 = (char *)v148 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725198);
  MEMORY[0x1F4188790](v62 - 8);
  uint64_t v64 = (char *)v148 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7251B8);
  MEMORY[0x1F4188790](v65 - 8);
  uint64_t v67 = (char *)v148 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_1D5AB2AC0();
  uint64_t v69 = *(void *)(v68 - 8);
  MEMORY[0x1F4188790](v68);
  uint64_t v71 = (char *)v148 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1D5AB4800();
  uint64_t v73 = MEMORY[0x1F4188790](v72);
  MEMORY[0x1F4188790](v73);
  if (*(unsigned char *)(a1 + 32) == 1)
  {
    uint64_t v155 = v77;
    uint64_t v156 = v76;
    uint64_t v183 = (char *)v148 - v74;
    uint64_t v158 = v75;
    uint64_t v159 = v72;
    uint64_t v151 = v14;
    uint64_t v152 = v7;
    if (qword_1EA724E10 != -1) {
      swift_once();
    }
    uint64_t v78 = sub_1D5AB4B50();
    __swift_project_value_buffer(v78, (uint64_t)qword_1EA727C70);
    v79._uint64_t countAndFlagsBits = 0xD000000000000063;
    v80._uint64_t countAndFlagsBits = 0xD000000000000066;
    v80._object = (void *)0x80000001D5AC9700;
    v79._object = (void *)0x80000001D5AC9790;
    Logger.trace(file:function:)(v80, v79);
    id v81 = objc_msgSend(self, sel_mainBundle);
    id v82 = objc_msgSend(v81, sel_bundleIdentifier);

    if (v82)
    {
      uint64_t v149 = sub_1D5AB4DF0();
      unint64_t v150 = v83;
    }
    else
    {
      unint64_t v150 = 0x80000001D5AC9800;
      uint64_t v149 = 0xD000000000000017;
    }
    v148[5] = a1;
    uint64_t v88 = *(void *)(a1 + 24);
    v148[4] = *(void *)(a1 + 16);
    v148[0] = v88;
    char v89 = *(void (**)(char *, uint64_t, uint64_t))(v69 + 16);
    v148[3] = v71;
    v89(v71, v154, v68);
    uint64_t v90 = sub_1D5AB2490();
    uint64_t v91 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56);
    v148[2] = v67;
    v91(v67, 1, 1, v90);
    uint64_t v92 = sub_1D5AB3530();
    uint64_t v93 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56);
    v148[1] = v64;
    v93(v64, 1, 1, v92);
    uint64_t v94 = sub_1D5AB2570();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v94 - 8) + 56))(v175, 1, 1, v94);
    uint64_t v95 = sub_1D5AB4A30();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 56))(v176, 1, 1, v95);
    uint64_t v96 = sub_1D5AB2D60();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 56))(v177, 1, 1, v96);
    uint64_t v97 = sub_1D5AB31E0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v97 - 8) + 56))(v178, 1, 1, v97);
    uint64_t v98 = sub_1D5AB2AF0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v98 - 8) + 56))(v179, 1, 1, v98);
    uint64_t v99 = sub_1D5AB22E0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v99 - 8) + 56))(v180, 1, 1, v99);
    uint64_t v100 = sub_1D5AB2F30();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 56))(v181, 1, 1, v100);
    uint64_t v101 = sub_1D5AB2DC0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v101 - 8) + 56))(v182, 1, 1, v101);
    uint64_t v102 = sub_1D5AB1E10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v102 - 8) + 56))(v184, 1, 1, v102);
    uint64_t v103 = sub_1D5AB35D0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v103 - 8) + 56))(v185, 1, 1, v103);
    uint64_t v104 = sub_1D5AB2FC0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 56))(v186, 1, 1, v104);
    uint64_t v105 = sub_1D5AB3E90();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v105 - 8) + 56))(v187, 1, 1, v105);
    uint64_t v106 = sub_1D5AB1E70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v106 - 8) + 56))(v188, 1, 1, v106);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D5AB5300();
    uint64_t v107 = *MEMORY[0x1E4F9EE68];
    uint64_t v108 = sub_1D5AB4950();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v108 - 8) + 104))(v153, v107, v108);
    swift_storeEnumTagMultiPayload();
    char v193 = 1;
    uint64_t v109 = v160;
    sub_1D5AB4930();
    uint64_t v110 = sub_1D5AB4970();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v110 - 8) + 56))(v109, 0, 1, v110);
    uint64_t v111 = sub_1D5AB2B30();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v111 - 8) + 56))(v161, 1, 1, v111);
    sub_1D596E6CC(v166, v162, (uint64_t *)&unk_1EA727900);
    uint64_t v112 = sub_1D5AB3A00();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v112 - 8) + 56))(v163, 1, 1, v112);
    uint64_t v113 = sub_1D5AB2180();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 56))(v164, 1, 1, v113);
    uint64_t v114 = sub_1D5AB2E60();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v114 - 8) + 56))(v165, 1, 1, v114);
    uint64_t v115 = sub_1D5AB3250();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v115 - 8) + 56))(v167, 1, 1, v115);
    uint64_t v116 = sub_1D5AB3B50();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v116 - 8) + 56))(v168, 1, 1, v116);
    uint64_t v117 = sub_1D5AB48E0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v117 - 8) + 56))(v169, 1, 1, v117);
    uint64_t v118 = sub_1D5AB3A50();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v118 - 8) + 56))(v170, 1, 1, v118);
    uint64_t v119 = v183;
    sub_1D5AB4600();
    swift_retain();
    uint64_t v187 = (char *)(MEMORY[0x1E4FBC848] + 8);
    char v120 = v189;
    sub_1D5AB4550();
    uint64_t v121 = v158;
    uint64_t v122 = *(void (**)(uint64_t, char *, uint64_t))(v158 + 16);
    char v186 = (char *)(v158 + 16);
    uint64_t v190 = v122;
    uint64_t v123 = v156;
    uint64_t v124 = v159;
    v122(v156, v119, v159);
    uint64_t v125 = *(unsigned __int8 *)(v121 + 80);
    uint64_t v126 = v121;
    uint64_t v188 = (char *)(v125 | 7);
    uint64_t v127 = swift_allocObject();
    *(void *)(v127 + 16) = v191;
    v128 = *(char **)(v126 + 32);
    v182 = (char *)(v126 + 32);
    uint64_t v185 = v128;
    ((void (*)(uint64_t, uint64_t, uint64_t))v128)(v127 + ((v125 + 24) & ~v125), v123, v124);
    uint64_t v129 = swift_allocObject();
    *(void *)(v129 + 16) = sub_1D5A37F84;
    *(void *)(v129 + 24) = v127;
    uint64_t v130 = v152;
    uint64_t v184 = *(char **)(v152 + 16);
    uint64_t v131 = v174;
    uint64_t v132 = v172;
    ((void (*)(char *, char *, uint64_t))v184)(v174, v120, v172);
    uint64_t v133 = *(unsigned __int8 *)(v130 + 80);
    v180 = (char *)(v133 | 7);
    uint64_t v134 = (v133 + 16) & ~v133;
    uint64_t v181 = (char *)v134;
    unint64_t v135 = (v173 + v134 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v178 = (char *)v135;
    uint64_t v179 = (char *)(v135 + 16);
    uint64_t v136 = swift_allocObject();
    char v177 = *(char **)(v130 + 32);
    ((void (*)(uint64_t, char *, uint64_t))v177)(v136 + v134, v131, v132);
    uint64_t v137 = (uint64_t (**)(uint64_t))(v136 + v135);
    *uint64_t v137 = sub_1D5A37FF8;
    v137[1] = (uint64_t (*)(uint64_t))v129;
    swift_retain();
    uint64_t v138 = v151;
    sub_1D5AB4540();
    uint64_t v191 = *(void (**)(char *, uint64_t))(v130 + 8);
    uint64_t v139 = v189;
    v191(v189, v132);
    uint64_t v140 = v156;
    uint64_t v141 = v159;
    v190(v156, v183, v159);
    uint64_t v142 = swift_allocObject();
    uint64_t v143 = v142 + ((v125 + 16) & ~v125);
    uint64_t v144 = v141;
    ((void (*)(uint64_t, uint64_t, uint64_t))v185)(v143, v140, v141);
    uint64_t v145 = swift_allocObject();
    *(void *)(v145 + 16) = sub_1D5A38020;
    *(void *)(v145 + 24) = v142;
    ((void (*)(char *, char *, uint64_t))v184)(v139, v138, v132);
    uint64_t v146 = swift_allocObject();
    ((void (*)(char *, char *, uint64_t))v177)(&v181[v146], v139, v132);
    v147 = (uint64_t (**)())&v178[v146];
    uint8_t *v147 = sub_1D59B4F90;
    v147[1] = (uint64_t (*)())v145;
    sub_1D5AB4540();
    v191(v138, v132);
    return (*(uint64_t (**)(char *, uint64_t))(v158 + 8))(v183, v144);
  }
  else
  {
    uint64_t v84 = sub_1D5AB2420();
    sub_1D5A38258(&qword_1EA727420, MEMORY[0x1E4F9C480]);
    uint64_t v85 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v84 - 8) + 104))(v86, *MEMORY[0x1E4F9C448], v84);
    *(void *)(swift_allocObject() + 16) = v85;
    return sub_1D5AB4550();
  }
}

uint64_t sub_1D5A328C4(uint64_t result)
{
  if (*(unsigned char *)(result + 32))
  {
    *(unsigned char *)(result + 32) = 0;
  }
  else
  {
    uint64_t v1 = sub_1D5AB2420();
    sub_1D5A38258(&qword_1EA727420, MEMORY[0x1E4F9C480]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v1 - 8) + 104))(v2, *MEMORY[0x1E4F9C448], v1);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1D5A32994(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v8 = 224;
  uint64_t v5 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, void, void, uint64_t, uint64_t))(v3 + 16);
  uint64_t v6 = sub_1D5AB4800();
  return v5(&v8, a2, v6, MEMORY[0x1E4F9ED28], MEMORY[0x1E4F9ED30], ObjectType, v3);
}

uint64_t sub_1D5A32A38(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB4800();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v6 + v5, (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  return sub_1D5AB4550();
}

Swift::Void __swiftcall SessionClient.detachRemoteDisplay()()
{
  if (qword_1EA724E10 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EA727C70);
  v2._uint64_t countAndFlagsBits = 0xD000000000000066;
  v2._object = (void *)0x80000001D5AC9700;
  v3._object = (void *)0x80000001D5AC9820;
  v3._uint64_t countAndFlagsBits = 0xD000000000000015;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  char v6 = 28;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 72))(&v6, ObjectType, v4);
}

uint64_t SessionClient.requestDistributedSessionWithParticipant(havingRole:)(char a1)
{
  if (qword_1EA724E10 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EA727C70);
  v4._uint64_t countAndFlagsBits = 0xD000000000000066;
  v4._object = (void *)0x80000001D5AC9700;
  v5._object = (void *)0x80000001D5AC9840;
  v5._uint64_t countAndFlagsBits = 0xD000000000000035;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v10 = 230;
  char v9 = a1;
  return (*(uint64_t (**)(__int16 *, char *, void, void, void, uint64_t, uint64_t))(v6 + 16))(&v10, &v9, MEMORY[0x1E4F9D988], MEMORY[0x1E4F9D978], MEMORY[0x1E4F9D980], ObjectType, v6);
}

uint64_t SessionClient.requestDistributedSessionWithParticipant(_:)(uint64_t a1)
{
  return sub_1D5A33E94(a1, 0xD00000000000002CLL, (void *)0x80000001D5AC9880, 229);
}

uint64_t SessionClient.activateDistributedSession(identifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v122 = a2;
  uint64_t v121 = a1;
  uint64_t v124 = a3;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727930);
  MEMORY[0x1F4188790](v3 - 8);
  char v120 = (char *)v107 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250D8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v119 = (char *)v107 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250D0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v118 = (char *)v107 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250E0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v117 = (char *)v107 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250E8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v116 = (char *)v107 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250F0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v115 = (char *)v107 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7257D8);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v114 = (char *)v107 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250F8);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v113 = (char *)v107 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725110);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v112 = (char *)v107 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725100);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v131 = (char *)v107 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725118);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v130 = (char *)v107 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725120);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v129 = (char *)v107 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725128);
  MEMORY[0x1F4188790](v27 - 8);
  v128 = (char *)v107 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725130);
  MEMORY[0x1F4188790](v29 - 8);
  uint64_t v127 = (char *)v107 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725138);
  MEMORY[0x1F4188790](v31 - 8);
  uint64_t v126 = (char *)v107 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725140);
  MEMORY[0x1F4188790](v33 - 8);
  uint64_t v125 = (char *)v107 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725148);
  MEMORY[0x1F4188790](v35 - 8);
  uint64_t v37 = (char *)v107 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725150);
  MEMORY[0x1F4188790](v38 - 8);
  uint64_t v40 = (char *)v107 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725158);
  MEMORY[0x1F4188790](v41 - 8);
  uint64_t v43 = (char *)v107 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725178);
  MEMORY[0x1F4188790](v44 - 8);
  uint64_t v46 = (char *)v107 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725188);
  MEMORY[0x1F4188790](v47 - 8);
  uint64_t v49 = (char *)v107 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725180);
  MEMORY[0x1F4188790](v50 - 8);
  uint64_t v52 = (char *)v107 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725190);
  MEMORY[0x1F4188790](v53 - 8);
  uint64_t v55 = (char *)v107 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725198);
  MEMORY[0x1F4188790](v56 - 8);
  uint64_t v58 = (char *)v107 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7251B8);
  MEMORY[0x1F4188790](v59 - 8);
  uint64_t v61 = (char *)v107 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_1D5AB27E0();
  uint64_t v110 = *(void *)(v111 - 8);
  MEMORY[0x1F4188790](v111);
  uint64_t v109 = (char *)v107 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA724E10 != -1) {
    swift_once();
  }
  uint64_t v63 = sub_1D5AB4B50();
  __swift_project_value_buffer(v63, (uint64_t)qword_1EA727C70);
  v64._uint64_t countAndFlagsBits = 0xD000000000000066;
  v64._object = (void *)0x80000001D5AC9700;
  v65._object = (void *)0x80000001D5AC98B0;
  v65._uint64_t countAndFlagsBits = 0xD000000000000027;
  Logger.trace(file:function:)(v64, v65);
  int v108 = sub_1D5AB5CC0();
  uint64_t v66 = sub_1D5AB2490();
  uint64_t v67 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56);
  v107[9] = v61;
  v67(v61, 1, 1, v66);
  uint64_t v68 = sub_1D5AB3530();
  uint64_t v69 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56);
  v107[8] = v58;
  v69(v58, 1, 1, v68);
  uint64_t v70 = sub_1D5AB2570();
  uint64_t v71 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56);
  v107[7] = v55;
  v71(v55, 1, 1, v70);
  uint64_t v72 = sub_1D5AB2D60();
  uint64_t v73 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56);
  v107[6] = v52;
  v73(v52, 1, 1, v72);
  uint64_t v74 = sub_1D5AB4A30();
  uint64_t v75 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56);
  v107[5] = v49;
  v75(v49, 1, 1, v74);
  uint64_t v76 = sub_1D5AB31E0();
  uint64_t v77 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56);
  v107[4] = v46;
  v77(v46, 1, 1, v76);
  uint64_t v78 = sub_1D5AB2AF0();
  Swift::String v79 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56);
  v107[3] = v43;
  v79(v43, 1, 1, v78);
  uint64_t v80 = sub_1D5AB22E0();
  id v81 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56);
  v107[2] = v40;
  v81(v40, 1, 1, v80);
  uint64_t v82 = sub_1D5AB2F30();
  unint64_t v83 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56);
  v107[1] = v37;
  v83(v37, 1, 1, v82);
  uint64_t v84 = sub_1D5AB2DC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56))(v125, 1, 1, v84);
  uint64_t v85 = sub_1D5AB1E10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v126, 1, 1, v85);
  uint64_t v86 = sub_1D5AB35D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v127, 1, 1, v86);
  uint64_t v87 = sub_1D5AB2FC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56))(v128, 1, 1, v87);
  uint64_t v88 = sub_1D5AB3E90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v129, 1, 1, v88);
  uint64_t v89 = sub_1D5AB1E70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 56))(v130, 1, 1, v89);
  uint64_t v90 = sub_1D5AB2B30();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56))(v131, 1, 1, v90);
  uint64_t v91 = sub_1D5AB4970();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 56))(v112, 1, 1, v91);
  uint64_t v92 = sub_1D5AB3A00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56))(v113, 1, 1, v92);
  uint64_t v93 = sub_1D5AB2150();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v114, 1, 1, v93);
  uint64_t v94 = sub_1D5AB2180();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v94 - 8) + 56))(v115, 1, 1, v94);
  uint64_t v95 = sub_1D5AB2E60();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 56))(v116, 1, 1, v95);
  uint64_t v96 = sub_1D5AB3250();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 56))(v117, 1, 1, v96);
  uint64_t v97 = sub_1D5AB3A50();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v97 - 8) + 56))(v118, 1, 1, v97);
  uint64_t v98 = sub_1D5AB3B50();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v98 - 8) + 56))(v119, 1, 1, v98);
  uint64_t v99 = sub_1D5AB48E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v99 - 8) + 56))(v120, 1, 1, v99);
  swift_bridgeObjectRetain();
  sub_1D5AB5300();
  uint64_t v100 = v109;
  sub_1D5AB2720();
  uint64_t v101 = *(void *)(v123 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v132 = 222;
  uint64_t v103 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, void, void, void, void, uint64_t, uint64_t))(v101 + 32);
  uint64_t v104 = sub_1D5AB4800();
  uint64_t v105 = v111;
  v103(&v132, v100, v111, v104, MEMORY[0x1E4F9C650], MEMORY[0x1E4F9C658], MEMORY[0x1E4F9ED28], MEMORY[0x1E4F9ED30], ObjectType, v101);
  return (*(uint64_t (**)(char *, uint64_t))(v110 + 8))(v100, v105);
}

uint64_t SessionClient.cancelDistributedSessionWithParticipant(_:)(uint64_t a1)
{
  return sub_1D5A33E94(a1, 0xD00000000000002BLL, (void *)0x80000001D5AC98E0, 223);
}

uint64_t sub_1D5A33E94(uint64_t a1, uint64_t a2, void *a3, __int16 a4)
{
  if (qword_1EA724E10 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1D5AB4B50();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EA727C70);
  v10._object = (void *)0x80000001D5AC9700;
  v10._uint64_t countAndFlagsBits = 0xD000000000000066;
  v11._uint64_t countAndFlagsBits = a2;
  v11._object = a3;
  Logger.trace(file:function:)(v10, v11);
  uint64_t v12 = *(void *)(v4 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v17 = a4;
  uint64_t v14 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, void, void, uint64_t, uint64_t))(v12 + 16);
  uint64_t v15 = sub_1D5AB3190();
  return v14(&v17, a1, v15, MEMORY[0x1E4F9D168], MEMORY[0x1E4F9D170], ObjectType, v12);
}

uint64_t SessionClient.reportAppRequirementCompleted()()
{
  return sub_1D5A33FEC(0xD00000000000001FLL, (void *)0x80000001D5AC9910, 235);
}

uint64_t SessionClient.reportAppRequirementFailed()()
{
  return sub_1D5A33FEC(0xD00000000000001CLL, (void *)0x80000001D5AC9930, 236);
}

uint64_t sub_1D5A33FEC(uint64_t a1, void *a2, __int16 a3)
{
  if (qword_1EA724E10 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1D5AB4B50();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EA727C70);
  v8._object = (void *)0x80000001D5AC9700;
  v8._uint64_t countAndFlagsBits = 0xD000000000000066;
  v9._uint64_t countAndFlagsBits = a1;
  v9._object = a2;
  Logger.trace(file:function:)(v8, v9);
  uint64_t v10 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v13 = a3;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v10 + 8))(&v13, ObjectType, v10);
}

void SessionClient.sendCountdownIntent(_:token:)(uint64_t a1, uint64_t a2)
{
  uint64_t v131 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727930);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v125 = (char *)&v110 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250D8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v124 = (char *)&v110 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250D0);
  MEMORY[0x1F4188790](v7 - 8);
  Swift::String v9 = (char *)&v110 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250E0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v110 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250E8);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v110 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250F0);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v110 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7257D8);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v123 = (char *)&v110 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250F8);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v122 = (char *)&v110 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725110);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v121 = (char *)&v110 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725100);
  MEMORY[0x1F4188790](v25 - 8);
  os_log_t v142 = (os_log_t)((char *)&v110 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725118);
  MEMORY[0x1F4188790](v27 - 8);
  uint64_t v141 = (char *)&v110 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725120);
  MEMORY[0x1F4188790](v29 - 8);
  uint64_t v140 = (char *)&v110 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725128);
  MEMORY[0x1F4188790](v31 - 8);
  uint64_t v33 = (char *)&v110 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725130);
  MEMORY[0x1F4188790](v34 - 8);
  uint64_t v139 = (char *)&v110 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725138);
  MEMORY[0x1F4188790](v36 - 8);
  uint64_t v138 = (char *)&v110 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725140);
  MEMORY[0x1F4188790](v38 - 8);
  uint64_t v137 = (char *)&v110 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725148);
  MEMORY[0x1F4188790](v40 - 8);
  uint64_t v136 = (char *)&v110 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725150);
  MEMORY[0x1F4188790](v42 - 8);
  unint64_t v135 = (char *)&v110 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725158);
  MEMORY[0x1F4188790](v44 - 8);
  uint64_t v134 = (char *)&v110 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725178);
  MEMORY[0x1F4188790](v46 - 8);
  uint64_t v133 = (char *)&v110 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725188);
  MEMORY[0x1F4188790](v48 - 8);
  __int16 v132 = (char *)&v110 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725180);
  MEMORY[0x1F4188790](v50 - 8);
  uint64_t v130 = (char *)&v110 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725190);
  MEMORY[0x1F4188790](v52 - 8);
  uint64_t v129 = (char *)&v110 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725198);
  MEMORY[0x1F4188790](v54 - 8);
  v128 = (char *)&v110 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7251B8);
  MEMORY[0x1F4188790](v56 - 8);
  uint64_t v127 = (char *)&v110 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_1D5AB27E0();
  uint64_t v119 = *(void *)(v120 - 8);
  MEMORY[0x1F4188790](v120);
  uint64_t v118 = (char *)&v110 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_1D5AB2D60();
  uint64_t v60 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  uint64_t v62 = (char *)&v110 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(a2 + 32))
  {
    if (qword_1EA724E10 != -1) {
      swift_once();
    }
    uint64_t v63 = sub_1D5AB4B50();
    __swift_project_value_buffer(v63, (uint64_t)qword_1EA727C70);
    os_log_t v142 = (os_log_t)sub_1D5AB4B30();
    os_log_type_t v64 = sub_1D5AB5410();
    if (os_log_type_enabled(v142, v64))
    {
      Swift::String v65 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::String v65 = 0;
      _os_log_impl(&dword_1D5947000, v142, v64, "Send countdown intent failed with inactive token", v65, 2u);
      MEMORY[0x1D945AAC0](v65, -1, -1);
    }
    os_log_t v66 = v142;
  }
  else
  {
    uint64_t v67 = a2;
    uint64_t v113 = v18;
    uint64_t v114 = v15;
    uint64_t v115 = v12;
    uint64_t v116 = v9;
    if (qword_1EBDE5420 != -1) {
      swift_once();
    }
    uint64_t v68 = sub_1D5AB4B50();
    __swift_project_value_buffer(v68, (uint64_t)qword_1EBDE5400);
    uint64_t v69 = *(void (**)(char *, uint64_t, uint64_t))(v60 + 16);
    v69(v62, v131, v59);
    uint64_t v70 = v67;
    swift_retain_n();
    uint64_t v71 = sub_1D5AB4B30();
    os_log_type_t v72 = sub_1D5AB5430();
    int v73 = v72;
    BOOL v74 = os_log_type_enabled(v71, v72);
    uint64_t v117 = v33;
    if (v74)
    {
      uint64_t v75 = swift_slowAlloc();
      uint64_t v111 = swift_slowAlloc();
      uint64_t v144 = v111;
      *(_DWORD *)uint64_t v75 = 136446466;
      uint64_t v112 = v69;
      sub_1D5A38258(&qword_1EA727428, MEMORY[0x1E4F9C9C8]);
      LODWORD(v110) = v73;
      uint64_t v76 = sub_1D5AB5AB0();
      uint64_t v143 = sub_1D5951500(v76, v77, &v144);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v62, v59);
      *(_WORD *)(v75 + 12) = 2082;
      uint64_t v78 = *(void *)(v70 + 16);
      unint64_t v79 = *(void *)(v70 + 24);
      swift_bridgeObjectRetain();
      uint64_t v143 = sub_1D5951500(v78, v79, &v144);
      uint64_t v33 = v117;
      sub_1D5AB5680();
      swift_release_n();
      uint64_t v69 = v112;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D5947000, v71, (os_log_type_t)v110, "Sending countdown intent %{public}s for session: %{public}s", (uint8_t *)v75, 0x16u);
      uint64_t v80 = v111;
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v80, -1, -1);
      MEMORY[0x1D945AAC0](v75, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v60 + 8))(v62, v59);

      swift_release_n();
    }
    LODWORD(v112) = sub_1D5AB5CC0();
    uint64_t v111 = *(void *)(v70 + 16);
    uint64_t v110 = *(void *)(v70 + 24);
    uint64_t v81 = sub_1D5AB2490();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v127, 1, 1, v81);
    uint64_t v82 = sub_1D5AB3530();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v128, 1, 1, v82);
    uint64_t v83 = sub_1D5AB2570();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v129, 1, 1, v83);
    uint64_t v84 = v130;
    v69(v130, v131, v59);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v84, 0, 1, v59);
    uint64_t v85 = sub_1D5AB4A30();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v132, 1, 1, v85);
    uint64_t v86 = sub_1D5AB31E0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v133, 1, 1, v86);
    uint64_t v87 = sub_1D5AB2AF0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56))(v134, 1, 1, v87);
    uint64_t v88 = sub_1D5AB22E0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v135, 1, 1, v88);
    uint64_t v89 = sub_1D5AB2F30();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 56))(v136, 1, 1, v89);
    uint64_t v90 = sub_1D5AB2DC0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56))(v137, 1, 1, v90);
    uint64_t v91 = sub_1D5AB1E10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 56))(v138, 1, 1, v91);
    uint64_t v92 = sub_1D5AB35D0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56))(v139, 1, 1, v92);
    uint64_t v93 = sub_1D5AB2FC0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v33, 1, 1, v93);
    uint64_t v94 = sub_1D5AB3E90();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v94 - 8) + 56))(v140, 1, 1, v94);
    uint64_t v95 = sub_1D5AB1E70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 56))(v141, 1, 1, v95);
    uint64_t v96 = sub_1D5AB2B30();
    (*(void (**)(os_log_t, uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 56))(v142, 1, 1, v96);
    uint64_t v97 = sub_1D5AB4970();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v97 - 8) + 56))(v121, 1, 1, v97);
    uint64_t v98 = sub_1D5AB3A00();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v98 - 8) + 56))(v122, 1, 1, v98);
    uint64_t v99 = sub_1D5AB2150();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v99 - 8) + 56))(v123, 1, 1, v99);
    uint64_t v100 = sub_1D5AB2180();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 56))(v113, 1, 1, v100);
    uint64_t v101 = sub_1D5AB2E60();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v101 - 8) + 56))(v114, 1, 1, v101);
    uint64_t v102 = sub_1D5AB3250();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v102 - 8) + 56))(v115, 1, 1, v102);
    uint64_t v103 = sub_1D5AB3A50();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v103 - 8) + 56))(v116, 1, 1, v103);
    uint64_t v104 = sub_1D5AB3B50();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 56))(v124, 1, 1, v104);
    uint64_t v105 = sub_1D5AB48E0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v105 - 8) + 56))(v125, 1, 1, v105);
    swift_bridgeObjectRetain();
    sub_1D5AB5300();
    uint64_t v106 = v118;
    sub_1D5AB2720();
    uint64_t v107 = *(void *)(v126 + 24);
    uint64_t ObjectType = swift_getObjectType();
    LOBYTE(v144) = 31;
    uint64_t v109 = v120;
    (*(void (**)(uint64_t *, char *, uint64_t, void, void, uint64_t, uint64_t))(v107 + 80))(&v144, v106, v120, MEMORY[0x1E4F9C650], MEMORY[0x1E4F9C658], ObjectType, v107);
    (*(void (**)(char *, uint64_t))(v119 + 8))(v106, v109);
  }
}

void SessionClient.startCountdown(_:token:)(uint64_t a1, uint64_t a2)
{
  uint64_t v123 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727930);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v109 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250D8);
  MEMORY[0x1F4188790](v6 - 8);
  __int16 v132 = (char *)v109 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250D0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v131 = (char *)v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250E0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v130 = (char *)v109 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250E8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v129 = (char *)v109 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250F0);
  MEMORY[0x1F4188790](v14 - 8);
  v128 = (char *)v109 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7257D8);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v127 = (char *)v109 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250F8);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v126 = (char *)v109 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725110);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v125 = (char *)v109 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725100);
  MEMORY[0x1F4188790](v22 - 8);
  os_log_t v140 = (os_log_t)((char *)v109 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725118);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v139 = (char *)v109 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725120);
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v138 = (char *)v109 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725128);
  MEMORY[0x1F4188790](v28 - 8);
  uint64_t v137 = (char *)v109 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725130);
  MEMORY[0x1F4188790](v30 - 8);
  uint64_t v136 = (char *)v109 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725138);
  MEMORY[0x1F4188790](v32 - 8);
  unint64_t v135 = (char *)v109 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725140);
  MEMORY[0x1F4188790](v34 - 8);
  uint64_t v134 = (char *)v109 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725148);
  MEMORY[0x1F4188790](v36 - 8);
  uint64_t v133 = (char *)v109 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725150);
  MEMORY[0x1F4188790](v38 - 8);
  uint64_t v40 = (char *)v109 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725158);
  MEMORY[0x1F4188790](v41 - 8);
  uint64_t v43 = (char *)v109 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725178);
  MEMORY[0x1F4188790](v44 - 8);
  uint64_t v46 = (char *)v109 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725188);
  MEMORY[0x1F4188790](v47 - 8);
  uint64_t v49 = (char *)v109 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725180);
  MEMORY[0x1F4188790](v50 - 8);
  uint64_t v52 = (char *)v109 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725190);
  MEMORY[0x1F4188790](v53 - 8);
  uint64_t v55 = (char *)v109 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725198);
  MEMORY[0x1F4188790](v56 - 8);
  uint64_t v58 = (char *)v109 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7251B8);
  MEMORY[0x1F4188790](v59 - 8);
  uint64_t v61 = (char *)v109 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_1D5AB27E0();
  uint64_t v63 = MEMORY[0x1F4188790](v62);
  if (*(unsigned char *)(a2 + 32))
  {
    if (qword_1EA724E10 != -1) {
      swift_once();
    }
    uint64_t v66 = sub_1D5AB4B50();
    __swift_project_value_buffer(v66, (uint64_t)qword_1EA727C70);
    os_log_t v140 = (os_log_t)sub_1D5AB4B30();
    os_log_type_t v67 = sub_1D5AB5410();
    if (os_log_type_enabled(v140, v67))
    {
      uint64_t v68 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v68 = 0;
      _os_log_impl(&dword_1D5947000, v140, v67, "Start countdown failed with inactive token", v68, 2u);
      MEMORY[0x1D945AAC0](v68, -1, -1);
    }
    os_log_t v69 = v140;
  }
  else
  {
    uint64_t v121 = v63;
    uint64_t v122 = v65;
    uint64_t v120 = (char *)v109 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
    int v119 = sub_1D5AB5CC0();
    uint64_t v118 = *(void *)(a2 + 16);
    uint64_t v115 = *(void *)(a2 + 24);
    uint64_t v70 = sub_1D5AB2490();
    uint64_t v71 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56);
    uint64_t v117 = v61;
    v71(v61, 1, 1, v70);
    uint64_t v72 = sub_1D5AB3530();
    int v73 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56);
    uint64_t v116 = v58;
    v73(v58, 1, 1, v72);
    uint64_t v74 = sub_1D5AB2570();
    uint64_t v75 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56);
    uint64_t v114 = v55;
    v75(v55, 1, 1, v74);
    uint64_t v76 = sub_1D5AB2D60();
    unint64_t v77 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56);
    uint64_t v113 = v52;
    v77(v52, 1, 1, v76);
    uint64_t v78 = sub_1D5AB4A30();
    uint64_t v79 = *(void *)(v78 - 8);
    uint64_t v110 = v5;
    uint64_t v80 = v79;
    uint64_t v81 = *(void (**)(char *, uint64_t, uint64_t))(v79 + 16);
    uint64_t v112 = v49;
    v81(v49, v123, v78);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v49, 0, 1, v78);
    uint64_t v82 = sub_1D5AB31E0();
    uint64_t v83 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56);
    uint64_t v111 = v46;
    v83(v46, 1, 1, v82);
    uint64_t v84 = sub_1D5AB2AF0();
    uint64_t v85 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56);
    v109[2] = v43;
    v85(v43, 1, 1, v84);
    uint64_t v86 = sub_1D5AB22E0();
    uint64_t v87 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56);
    v109[1] = v40;
    v87(v40, 1, 1, v86);
    uint64_t v88 = sub_1D5AB2F30();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v133, 1, 1, v88);
    uint64_t v89 = sub_1D5AB2DC0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 56))(v134, 1, 1, v89);
    uint64_t v90 = sub_1D5AB1E10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56))(v135, 1, 1, v90);
    uint64_t v91 = sub_1D5AB35D0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 56))(v136, 1, 1, v91);
    uint64_t v92 = sub_1D5AB2FC0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56))(v137, 1, 1, v92);
    uint64_t v93 = sub_1D5AB3E90();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v138, 1, 1, v93);
    uint64_t v94 = sub_1D5AB1E70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v94 - 8) + 56))(v139, 1, 1, v94);
    uint64_t v95 = sub_1D5AB2B30();
    (*(void (**)(os_log_t, uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 56))(v140, 1, 1, v95);
    uint64_t v96 = sub_1D5AB4970();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 56))(v125, 1, 1, v96);
    uint64_t v97 = sub_1D5AB3A00();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v97 - 8) + 56))(v126, 1, 1, v97);
    uint64_t v98 = sub_1D5AB2150();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v98 - 8) + 56))(v127, 1, 1, v98);
    uint64_t v99 = sub_1D5AB2180();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v99 - 8) + 56))(v128, 1, 1, v99);
    uint64_t v100 = sub_1D5AB2E60();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 56))(v129, 1, 1, v100);
    uint64_t v101 = sub_1D5AB3250();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v101 - 8) + 56))(v130, 1, 1, v101);
    uint64_t v102 = sub_1D5AB3A50();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v102 - 8) + 56))(v131, 1, 1, v102);
    uint64_t v103 = sub_1D5AB3B50();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v103 - 8) + 56))(v132, 1, 1, v103);
    uint64_t v104 = sub_1D5AB48E0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 56))(v110, 1, 1, v104);
    swift_bridgeObjectRetain();
    sub_1D5AB5300();
    uint64_t v105 = v120;
    sub_1D5AB2720();
    uint64_t v106 = *(void *)(v124 + 24);
    uint64_t ObjectType = swift_getObjectType();
    char v141 = 31;
    uint64_t v108 = v121;
    (*(void (**)(char *, char *, uint64_t, void, void, uint64_t, uint64_t))(v106 + 80))(&v141, v105, v121, MEMORY[0x1E4F9C650], MEMORY[0x1E4F9C658], ObjectType, v106);
    (*(void (**)(char *, uint64_t))(v122 + 8))(v105, v108);
  }
}

void SessionClient.applySessionUpdate(token:activityRings:audioFocusPreference:cadenceMetric:displayPreferences:distanceMetric:energyMetric:gymKitConnection:heartRateMetric:meditation:mindfulMinutesMetric:multiUserSession:multiUserSessionIdentities:paceMetric:playbackIntent:playback:remoteDisplayConnection:scoreMetric:termination:unitPreferences:userMassMetric:workoutDeviceConnection:watchConnectionRejection:workout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v133 = a8;
  uint64_t v131 = a7;
  uint64_t v129 = a6;
  uint64_t v127 = a5;
  uint64_t v126 = a4;
  uint64_t v125 = a3;
  uint64_t v124 = a2;
  uint64_t v145 = a23;
  uint64_t v146 = a24;
  uint64_t v143 = a21;
  uint64_t v144 = a22;
  uint64_t v141 = a19;
  uint64_t v142 = a20;
  uint64_t v139 = a17;
  uint64_t v140 = a18;
  uint64_t v137 = a15;
  uint64_t v138 = a16;
  uint64_t v136 = a14;
  uint64_t v135 = a13;
  uint64_t v134 = a12;
  uint64_t v132 = a11;
  uint64_t v130 = a10;
  uint64_t v128 = a9;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727930);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v123 = (uint64_t)v109 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250D8);
  MEMORY[0x1F4188790](v27 - 8);
  uint64_t v122 = (uint64_t)v109 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250D0);
  MEMORY[0x1F4188790](v29 - 8);
  uint64_t v121 = (uint64_t)v109 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250E0);
  MEMORY[0x1F4188790](v31 - 8);
  uint64_t v120 = (uint64_t)v109 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250E8);
  MEMORY[0x1F4188790](v33 - 8);
  uint64_t v118 = (uint64_t)v109 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250F0);
  MEMORY[0x1F4188790](v35 - 8);
  uint64_t v117 = (uint64_t)v109 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7257D8);
  MEMORY[0x1F4188790](v37 - 8);
  uint64_t v116 = (uint64_t)v109 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7250F8);
  MEMORY[0x1F4188790](v39 - 8);
  uint64_t v115 = (uint64_t)v109 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725110);
  MEMORY[0x1F4188790](v41 - 8);
  uint64_t v114 = (uint64_t)v109 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725100);
  MEMORY[0x1F4188790](v43 - 8);
  os_log_t v155 = (os_log_t)((char *)v109 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725118);
  MEMORY[0x1F4188790](v45 - 8);
  uint64_t v154 = (uint64_t)v109 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725120);
  MEMORY[0x1F4188790](v47 - 8);
  uint64_t v153 = (uint64_t)v109 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725128);
  MEMORY[0x1F4188790](v49 - 8);
  uint64_t v152 = (uint64_t)v109 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725130);
  MEMORY[0x1F4188790](v51 - 8);
  uint64_t v151 = (uint64_t)v109 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725138);
  MEMORY[0x1F4188790](v53 - 8);
  uint64_t v150 = (uint64_t)v109 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725140);
  MEMORY[0x1F4188790](v55 - 8);
  uint64_t v149 = (uint64_t)v109 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725148);
  MEMORY[0x1F4188790](v57 - 8);
  uint64_t v148 = (uint64_t)v109 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725150);
  MEMORY[0x1F4188790](v59 - 8);
  uint64_t v61 = (char *)v109 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725158);
  MEMORY[0x1F4188790](v62 - 8);
  uint64_t v64 = (char *)v109 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725178);
  MEMORY[0x1F4188790](v65 - 8);
  os_log_type_t v67 = (char *)v109 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725188);
  MEMORY[0x1F4188790](v68 - 8);
  uint64_t v70 = (char *)v109 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725180);
  MEMORY[0x1F4188790](v71 - 8);
  int v73 = (char *)v109 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725190);
  MEMORY[0x1F4188790](v74 - 8);
  uint64_t v76 = (char *)v109 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725198);
  MEMORY[0x1F4188790](v77 - 8);
  uint64_t v79 = (char *)v109 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7251B8);
  MEMORY[0x1F4188790](v80 - 8);
  uint64_t v82 = (char *)v109 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = sub_1D5AB27E0();
  uint64_t v113 = *(void *)(v119 - 8);
  uint64_t v83 = MEMORY[0x1F4188790](v119);
  MEMORY[0x1F4188790](v83);
  if (*(unsigned char *)(a1 + 32))
  {
    if (qword_1EA724E10 != -1) {
      swift_once();
    }
    uint64_t v86 = sub_1D5AB4B50();
    __swift_project_value_buffer(v86, (uint64_t)qword_1EA727C70);
    os_log_t v155 = (os_log_t)sub_1D5AB4B30();
    os_log_type_t v87 = sub_1D5AB5410();
    if (os_log_type_enabled(v155, v87))
    {
      uint64_t v88 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v88 = 0;
      _os_log_impl(&dword_1D5947000, v155, v87, "Apply session update failed with inactive token", v88, 2u);
      MEMORY[0x1D945AAC0](v88, -1, -1);
    }
    os_log_t v89 = v155;
  }
  else
  {
    uint64_t v111 = v85;
    uint64_t v112 = (char *)v109 - v84;
    int v110 = sub_1D5AB5CC0();
    v109[10] = *(void *)(a1 + 16);
    v109[5] = *(void *)(a1 + 24);
    v109[9] = v82;
    sub_1D596E6CC(v124, (uint64_t)v82, &qword_1EA7251B8);
    v109[8] = v79;
    sub_1D596E6CC(v125, (uint64_t)v79, &qword_1EA725198);
    v109[7] = v76;
    sub_1D596E6CC(v126, (uint64_t)v76, &qword_1EA725190);
    uint64_t v90 = sub_1D5AB2D60();
    uint64_t v91 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56);
    v109[6] = v73;
    v91(v73, 1, 1, v90);
    uint64_t v92 = sub_1D5AB4A30();
    uint64_t v93 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56);
    v109[4] = v70;
    v93(v70, 1, 1, v92);
    void v109[3] = v67;
    sub_1D596E6CC(v127, (uint64_t)v67, &qword_1EA725178);
    v109[2] = v64;
    sub_1D596E6CC(v129, (uint64_t)v64, &qword_1EA725158);
    v109[1] = v61;
    sub_1D596E6CC(v131, (uint64_t)v61, &qword_1EA725150);
    sub_1D596E6CC(v133, v148, &qword_1EA725148);
    sub_1D596E6CC(v128, v149, &qword_1EA725140);
    sub_1D596E6CC(v130, v150, &qword_1EA725138);
    sub_1D596E6CC(v132, v151, &qword_1EA725130);
    sub_1D596E6CC(v134, v152, &qword_1EA725128);
    sub_1D596E6CC(v135, v153, &qword_1EA725120);
    sub_1D596E6CC(v136, v154, &qword_1EA725118);
    sub_1D596E6CC(v137, (uint64_t)v155, &qword_1EA725100);
    sub_1D596E6CC(v138, v114, &qword_1EA725110);
    sub_1D596E6CC(v139, v115, &qword_1EA7250F8);
    sub_1D596E6CC(v140, v116, &qword_1EA7257D8);
    sub_1D596E6CC(v141, v117, &qword_1EA7250F0);
    sub_1D596E6CC(v142, v118, &qword_1EA7250E8);
    sub_1D596E6CC(v143, v120, &qword_1EA7250E0);
    sub_1D596E6CC(v144, v121, &qword_1EA7250D0);
    sub_1D596E6CC(v145, v122, &qword_1EA7250D8);
    sub_1D596E6CC(v146, v123, &qword_1EA727930);
    swift_bridgeObjectRetain();
    sub_1D5AB5300();
    uint64_t v94 = v112;
    sub_1D5AB2720();
    if (qword_1EA724E10 != -1) {
      swift_once();
    }
    uint64_t v95 = sub_1D5AB4B50();
    __swift_project_value_buffer(v95, (uint64_t)qword_1EA727C70);
    uint64_t v96 = v113;
    uint64_t v97 = v111;
    uint64_t v98 = v119;
    (*(void (**)(uint64_t, char *, uint64_t))(v113 + 16))(v111, v94, v119);
    uint64_t v99 = sub_1D5AB4B30();
    os_log_type_t v100 = sub_1D5AB5430();
    if (os_log_type_enabled(v99, v100))
    {
      uint64_t v101 = (uint8_t *)swift_slowAlloc();
      uint64_t v102 = swift_slowAlloc();
      uint64_t v157 = v102;
      *(_DWORD *)uint64_t v101 = 136315138;
      sub_1D5A38258(&qword_1EA727430, MEMORY[0x1E4F9C660]);
      uint64_t v103 = sub_1D5AB5AB0();
      uint64_t v156 = sub_1D5951500(v103, v104, &v157);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();
      uint64_t v105 = *(void (**)(uint64_t, uint64_t))(v96 + 8);
      v105(v97, v98);
      _os_log_impl(&dword_1D5947000, v99, v100, "Updating session: %s", v101, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v102, -1, -1);
      uint64_t v106 = v101;
      uint64_t v94 = v112;
      MEMORY[0x1D945AAC0](v106, -1, -1);
    }
    else
    {
      uint64_t v105 = *(void (**)(uint64_t, uint64_t))(v96 + 8);
      v105(v97, v98);
    }

    uint64_t v107 = *(void *)(v147 + 24);
    uint64_t ObjectType = swift_getObjectType();
    LOBYTE(v157) = 31;
    (*(void (**)(uint64_t *, char *, uint64_t, void, void, uint64_t, uint64_t))(v107 + 80))(&v157, v94, v98, MEMORY[0x1E4F9C650], MEMORY[0x1E4F9C658], ObjectType, v107);
    v105((uint64_t)v94, v98);
  }
}

uint64_t sub_1D5A376FC()
{
  return SessionClient.queryActiveSession()();
}

uint64_t sub_1D5A37720@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t, char *, uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return SessionClient.createSession(token:catalogWorkout:supportedMetrics:workoutActivityType:startTime:queueIdentifier:)(a1, a2, a3, a4, a5, a6);
}

void sub_1D5A37744()
{
}

uint64_t sub_1D5A37768(char a1)
{
  return SessionClient.requestDistributedSessionWithParticipant(havingRole:)(a1);
}

uint64_t sub_1D5A3778C(uint64_t a1)
{
  return SessionClient.requestDistributedSessionWithParticipant(_:)(a1);
}

uint64_t sub_1D5A377B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return SessionClient.activateDistributedSession(identifier:)(a1, a2, a3);
}

uint64_t sub_1D5A377D4(uint64_t a1)
{
  return SessionClient.cancelDistributedSessionWithParticipant(_:)(a1);
}

void sub_1D5A377F8(uint64_t a1, uint64_t a2)
{
}

void sub_1D5A3781C(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1D5A37840()
{
  return SessionClient.reportAppRequirementCompleted()();
}

uint64_t sub_1D5A37864()
{
  return SessionClient.reportAppRequirementFailed()();
}

__n128 sub_1D5A37888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  SessionClient.applySessionUpdate(token:activityRings:audioFocusPreference:cadenceMetric:displayPreferences:distanceMetric:energyMetric:gymKitConnection:heartRateMetric:meditation:mindfulMinutesMetric:multiUserSession:multiUserSessionIdentities:paceMetric:playbackIntent:playback:remoteDisplayConnection:scoreMetric:termination:unitPreferences:userMassMetric:workoutDeviceConnection:watchConnectionRejection:workout:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24);
  return result;
}

void *sub_1D5A378DC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[2] = a1;
  a4[3] = &protocol witness table for XPCClient;
  a4[4] = &protocol witness table for XPCClient;
  a4[5] = a2;
  a4[6] = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v17 = a1;
  char v16 = 31;
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  uint64_t v8 = sub_1D5AB27E0();
  swift_retain();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v16, (uint64_t)sub_1D5A38404, v7, ObjectType, v8, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E4F9C650], MEMORY[0x1E4F9C658]);
  swift_release();
  uint64_t v17 = a1;
  char v16 = 27;
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v16, (uint64_t)sub_1D5A38464, v9, ObjectType, (uint64_t)&protocol witness table for XPCClient);
  swift_release_n();
  uint64_t v17 = a1;
  char v16 = 29;
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  uint64_t v11 = sub_1D5AB4800();
  uint64_t v12 = MEMORY[0x1E4F9ED28];
  uint64_t v13 = MEMORY[0x1E4F9ED30];
  TransportDispatching.register<A>(event:handler:)(&v16, (uint64_t)sub_1D5A3846C, v10, ObjectType, v11, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E4F9ED28], MEMORY[0x1E4F9ED30]);
  swift_release();
  uint64_t v17 = a1;
  char v16 = 30;
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  TransportDispatching.register<A>(event:handler:)(&v16, (uint64_t)sub_1D5A384CC, v14, ObjectType, v11, (uint64_t)&protocol witness table for XPCClient, v12, v13);
  swift_release();
  swift_unknownObjectRelease();
  return a4;
}

void *sub_1D5A37B58(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  a4[2] = a1;
  a4[3] = a6;
  a4[4] = a7;
  a4[5] = a2;
  a4[6] = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v21 = a1;
  char v20 = 31;
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  uint64_t v12 = sub_1D5AB27E0();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v20, (uint64_t)sub_1D5A38404, v11, ObjectType, v12, a7, MEMORY[0x1E4F9C650], MEMORY[0x1E4F9C658]);
  swift_release();
  uint64_t v21 = a1;
  char v20 = 27;
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v20, (uint64_t)sub_1D5A38464, v13, ObjectType, a7);
  swift_release_n();
  uint64_t v21 = a1;
  char v20 = 29;
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  uint64_t v15 = sub_1D5AB4800();
  uint64_t v16 = MEMORY[0x1E4F9ED28];
  uint64_t v17 = MEMORY[0x1E4F9ED30];
  TransportDispatching.register<A>(event:handler:)(&v20, (uint64_t)sub_1D5A3846C, v14, ObjectType, v15, a7, MEMORY[0x1E4F9ED28], MEMORY[0x1E4F9ED30]);
  swift_release();
  uint64_t v21 = a1;
  char v20 = 30;
  uint64_t v18 = swift_allocObject();
  swift_weakInit();
  TransportDispatching.register<A>(event:handler:)(&v20, (uint64_t)sub_1D5A384CC, v18, ObjectType, v15, a7, v16, v17);
  swift_release();
  swift_unknownObjectRelease();
  return a4;
}

void *sub_1D5A37DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  type metadata accessor for SessionClient();
  uint64_t v13 = (void *)swift_allocObject();
  return sub_1D5A37B58(a1, a2, a3, v13, a5, a6, a7);
}

uint64_t sub_1D5A37E48()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

id sub_1D5A37E80()
{
  return sub_1D598A944(*(void **)(v0 + 16));
}

uint64_t sub_1D5A37E9C()
{
  return sub_1D5A328C4(v0);
}

uint64_t sub_1D5A37EB8()
{
  uint64_t v1 = sub_1D5AB4800();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D5A37F84()
{
  uint64_t v1 = *(void *)(sub_1D5AB4800() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_1D5A32994(v2, v3);
}

uint64_t sub_1D5A37FF8(uint64_t a1)
{
  return sub_1D59B3628(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1D5A38004(uint64_t a1, uint64_t a2)
{
  return sub_1D5A38190(a1, a2, sub_1D5986CB0);
}

uint64_t sub_1D5A38020()
{
  uint64_t v1 = *(void *)(sub_1D5AB4800() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_1D5A32A38(v2);
}

uint64_t sub_1D5A38090()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t objectdestroy_8Tm()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1D5A38178(uint64_t a1, uint64_t a2)
{
  return sub_1D5A38190(a1, a2, sub_1D5986F58);
}

uint64_t sub_1D5A38190(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10) - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v3 + v7;
  uint64_t v9 = (uint64_t *)(v3 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  return a3(a1, a2, v8, v10, v11);
}

uint64_t sub_1D5A38258(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for SessionClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SessionClient);
}

uint64_t dispatch thunk of SessionClient.__allocating_init(connection:eventHub:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t objectdestroy_11Tm()
{
  uint64_t v1 = sub_1D5AB4800();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D5A38360@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_1D5AB4800() - 8);
  return sub_1D5A433D0(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

uint64_t sub_1D5A383CC()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D5A38404(uint64_t a1)
{
  return sub_1D5A30D6C(a1, v1, (uint64_t (*)(void))type metadata accessor for SessionUpdated, MEMORY[0x1E4F9C660], (uint64_t)&protocol witness table for SessionUpdated, (uint64_t (*)(void))type metadata accessor for SessionUpdated);
}

uint64_t sub_1D5A38464()
{
  return sub_1D5A30CC8();
}

uint64_t sub_1D5A3846C(uint64_t a1)
{
  return sub_1D5A30D6C(a1, v1, (uint64_t (*)(void))type metadata accessor for SessionActivated, MEMORY[0x1E4F9ED38], (uint64_t)&protocol witness table for SessionActivated, (uint64_t (*)(void))type metadata accessor for SessionActivated);
}

uint64_t sub_1D5A384CC(uint64_t a1)
{
  return sub_1D5A30D6C(a1, v1, (uint64_t (*)(void))type metadata accessor for SessionDeactivated, MEMORY[0x1E4F9ED38], (uint64_t)&protocol witness table for SessionDeactivated, (uint64_t (*)(void))type metadata accessor for SessionDeactivated);
}

uint64_t sub_1D5A3852C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1D5A38590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v42 = a7;
  uint64_t v43 = a3;
  uint64_t v16 = a10;
  uint64_t v40 = a9;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4C10);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v41 = (char *)v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v19 = sub_1D5A3D260(0x65uLL);
  if (qword_1EBDE4BB8 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_1D5AB4B50();
  __swift_project_value_buffer(v20, (uint64_t)qword_1EBDE49B8);
  uint64_t v21 = sub_1D5AB4B30();
  os_log_type_t v22 = sub_1D5AB5430();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v37 = a1;
    uint64_t v24 = v23;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v38 = a10;
    uint64_t v36 = v25;
    uint64_t v44 = v19;
    uint64_t v45 = v25;
    *(_DWORD *)uint64_t v24 = 134218498;
    uint64_t v39 = a4;
    sub_1D5AB5680();
    *(_WORD *)(v24 + 12) = 2080;
    v35[1] = v24 + 14;
    uint64_t v26 = sub_1D5AB5810();
    uint64_t v44 = sub_1D5951500(v26, v27, &v45);
    sub_1D5AB5680();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 22) = 2048;
    uint64_t v44 = a6;
    a4 = v39;
    sub_1D5AB5680();
    _os_log_impl(&dword_1D5947000, v21, v22, "Converting from Async-Await to Promise: %ld:%s:%lu", (uint8_t *)v24, 0x20u);
    uint64_t v28 = v36;
    swift_arrayDestroy();
    uint64_t v16 = v38;
    MEMORY[0x1D945AAC0](v28, -1, -1);
    uint64_t v29 = v24;
    a1 = v37;
    MEMORY[0x1D945AAC0](v29, -1, -1);
  }

  uint64_t v30 = sub_1D5AB51C0();
  uint64_t v31 = (uint64_t)v41;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v41, 1, 1, v30);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = 0;
  *(void *)(v32 + 24) = 0;
  *(void *)(v32 + 32) = v42;
  *(void *)(v32 + 40) = a8;
  uint64_t v33 = v43;
  *(void *)(v32 + 48) = v19;
  *(void *)(v32 + 56) = v33;
  *(void *)(v32 + 64) = a4;
  *(unsigned char *)(v32 + 72) = a5;
  *(void *)(v32 + 80) = a6;
  *(void *)(v32 + 88) = a1;
  *(void *)(v32 + 96) = a2;
  swift_retain();
  swift_retain();
  sub_1D5A3D404(v31, v16, v32);
  return swift_release();
}

uint64_t sub_1D5A388AC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 104) = v18;
  *(_OWORD *)(v8 + 88) = v17;
  *(unsigned char *)(v8 + 168) = v16;
  *(void *)(v8 + 72) = a7;
  *(void *)(v8 + 80) = a8;
  *(void *)(v8 + 64) = a6;
  *(void *)(v8 + 112) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725530);
  *(void *)(v8 + 120) = swift_task_alloc();
  uint64_t v10 = sub_1D5AB2210();
  *(void *)(v8 + 128) = v10;
  *(void *)(v8 + 136) = *(void *)(v10 - 8);
  uint64_t v11 = swift_task_alloc();
  *(void *)(v8 + 144) = v11;
  uint64_t v14 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v8 + 152) = v12;
  *uint64_t v12 = v8;
  v12[1] = sub_1D5A38A44;
  return v14(v11);
}

uint64_t sub_1D5A38A44()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D5A38E04;
  }
  else {
    uint64_t v2 = sub_1D5A38B58;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D5A38B58()
{
  uint64_t v18 = v0;
  if (qword_1EBDE4BB8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE49B8);
  uint64_t v2 = sub_1D5AB4B30();
  os_log_type_t v3 = sub_1D5AB5430();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[8];
    uint64_t v16 = v0[11];
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v17 = v6;
    *(_DWORD *)uint64_t v5 = 134218498;
    v0[5] = v4;
    sub_1D5AB5680();
    *(_WORD *)(v5 + 12) = 2080;
    uint64_t v7 = sub_1D5AB5810();
    v0[6] = sub_1D5951500(v7, v8, &v17);
    sub_1D5AB5680();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 22) = 2048;
    v0[7] = v16;
    sub_1D5AB5680();
    _os_log_impl(&dword_1D5947000, v2, v3, "Finished A->P conversion: %ld:%s:%lu", (uint8_t *)v5, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v6, -1, -1);
    MEMORY[0x1D945AAC0](v5, -1, -1);
  }

  uint64_t v10 = v0[17];
  uint64_t v9 = v0[18];
  uint64_t v12 = v0[15];
  uint64_t v11 = v0[16];
  uint64_t v13 = (void (*)(uint64_t))v0[12];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v12, v9, v11);
  swift_storeEnumTagMultiPayload();
  v13(v12);
  sub_1D594F53C(v12, &qword_1EA725530);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_1D5A38E04()
{
  uint64_t v17 = v0;
  if (qword_1EBDE4BB8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE49B8);
  uint64_t v2 = sub_1D5AB4B30();
  os_log_type_t v3 = sub_1D5AB5430();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v15 = v0[11];
    uint64_t v4 = v0[8];
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v16 = v6;
    *(_DWORD *)uint64_t v5 = 134218498;
    v0[2] = v4;
    sub_1D5AB5680();
    *(_WORD *)(v5 + 12) = 2080;
    uint64_t v7 = sub_1D5AB5810();
    v0[3] = sub_1D5951500(v7, v8, &v16);
    sub_1D5AB5680();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 22) = 2048;
    v0[4] = v15;
    sub_1D5AB5680();
    _os_log_impl(&dword_1D5947000, v2, v3, "Finished A->P conversion: %ld:%s:%lu", (uint8_t *)v5, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v6, -1, -1);
    MEMORY[0x1D945AAC0](v5, -1, -1);
  }

  uint64_t v9 = (void *)v0[20];
  uint64_t v10 = (void *)v0[15];
  uint64_t v11 = (void (*)(void *))v0[12];
  *uint64_t v10 = v9;
  swift_storeEnumTagMultiPayload();
  id v12 = v9;
  v11(v10);

  sub_1D594F53C((uint64_t)v10, &qword_1EA725530);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1D5A3907C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 104) = v15;
  *(_OWORD *)(v8 + 88) = v14;
  *(unsigned char *)(v8 + 128) = v13;
  *(void *)(v8 + 72) = a7;
  *(void *)(v8 + 80) = a8;
  *(void *)(v8 + 64) = a6;
  uint64_t v11 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v8 + 112) = v9;
  *uint64_t v9 = v8;
  v9[1] = sub_1D5A3916C;
  return v11();
}

uint64_t sub_1D5A3916C()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D5A394BC;
  }
  else {
    uint64_t v2 = sub_1D5A39280;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D5A39280()
{
  uint64_t v15 = v0;
  if (qword_1EBDE4BB8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE49B8);
  uint64_t v2 = sub_1D5AB4B30();
  os_log_type_t v3 = sub_1D5AB5430();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[8];
    uint64_t v12 = v0[11];
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v13 = v6;
    *(_DWORD *)uint64_t v5 = 134218498;
    v0[5] = v4;
    sub_1D5AB5680();
    *(_WORD *)(v5 + 12) = 2080;
    uint64_t v7 = sub_1D5AB5810();
    v0[6] = sub_1D5951500(v7, v8, &v13);
    sub_1D5AB5680();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 22) = 2048;
    v0[7] = v12;
    sub_1D5AB5680();
    _os_log_impl(&dword_1D5947000, v2, v3, "Finished A->P conversion: %ld:%s:%lu", (uint8_t *)v5, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v6, -1, -1);
    MEMORY[0x1D945AAC0](v5, -1, -1);
  }

  uint64_t v9 = (void (*)(uint64_t *))v0[12];
  uint64_t v13 = 0;
  char v14 = 0;
  v9(&v13);
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1D5A394BC()
{
  uint64_t v17 = v0;
  if (qword_1EBDE4BB8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE49B8);
  uint64_t v2 = sub_1D5AB4B30();
  os_log_type_t v3 = sub_1D5AB5430();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v14 = v0[11];
    uint64_t v4 = v0[8];
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v15 = v6;
    *(_DWORD *)uint64_t v5 = 134218498;
    v0[2] = v4;
    sub_1D5AB5680();
    *(_WORD *)(v5 + 12) = 2080;
    uint64_t v7 = sub_1D5AB5810();
    v0[3] = sub_1D5951500(v7, v8, &v15);
    sub_1D5AB5680();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 22) = 2048;
    v0[4] = v14;
    sub_1D5AB5680();
    _os_log_impl(&dword_1D5947000, v2, v3, "Finished A->P conversion: %ld:%s:%lu", (uint8_t *)v5, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v6, -1, -1);
    MEMORY[0x1D945AAC0](v5, -1, -1);
  }

  uint64_t v9 = (void *)v0[15];
  uint64_t v10 = (void (*)(uint64_t *))v0[12];
  uint64_t v15 = (uint64_t)v9;
  char v16 = 1;
  id v11 = v9;
  v10(&v15);

  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1D5A39710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D596ECDC;
  return WorkoutPlanClientProtocol.queryRemainingWorkouts(for:)(a1, a2, a3);
}

uint64_t WorkoutPlanClientProtocol.queryRemainingWorkouts(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1D5AB4010();
  v3[2] = v7;
  v3[3] = *(void *)(v7 - 8);
  v3[4] = swift_task_alloc();
  v3[5] = swift_task_alloc();
  v3[6] = swift_task_alloc();
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 72) + **(int **)(a3 + 72));
  unint64_t v8 = (void *)swift_task_alloc();
  v3[7] = v8;
  *unint64_t v8 = v3;
  v8[1] = sub_1D5A39938;
  return v10(a1, a2, a3);
}

uint64_t sub_1D5A39938(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 64) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return MEMORY[0x1F4188298](sub_1D5A39A94, 0, 0);
  }
}

void sub_1D5A39A94()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = MEMORY[0x1E4FBC860];
  uint64_t v34 = MEMORY[0x1E4FBC860];
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    unint64_t v4 = 0;
    uint64_t v5 = v0[3];
    uint64_t v33 = (void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32);
    uint64_t v6 = MEMORY[0x1E4FBC860];
    uint64_t v29 = *(void *)(v1 + 16);
    uint64_t v31 = v0[8];
    while (v4 < *(void *)(v1 + 16))
    {
      unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v8 = *(void *)(v5 + 72);
      (*(void (**)(void, unint64_t, void))(v5 + 16))(v0[6], v0[8] + v7 + v8 * v4, v0[2]);
      if (sub_1D5AB4000())
      {
        (*(void (**)(void, void))(v5 + 8))(v0[6], v0[2]);
      }
      else
      {
        uint64_t v9 = *v33;
        (*v33)(v0[5], v0[6], v0[2]);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D594E8B8(0, *(void *)(v6 + 16) + 1, 1);
          uint64_t v6 = v34;
        }
        unint64_t v11 = *(void *)(v6 + 16);
        unint64_t v10 = *(void *)(v6 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_1D594E8B8(v10 > 1, v11 + 1, 1);
          uint64_t v6 = v34;
        }
        uint64_t v12 = v0[5];
        uint64_t v13 = v0[2];
        *(void *)(v6 + 16) = v11 + 1;
        v9(v6 + v7 + v11 * v8, v12, v13);
        uint64_t v34 = v6;
        uint64_t v3 = v29;
        uint64_t v1 = v31;
      }
      if (v3 == ++v4)
      {
        uint64_t v2 = MEMORY[0x1E4FBC860];
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v6 = MEMORY[0x1E4FBC860];
LABEL_14:
    swift_bridgeObjectRelease();
    int64_t v14 = *(void *)(v6 + 16);
    if (v14)
    {
      uint64_t v15 = v0[3];
      uint64_t v35 = v2;
      sub_1D594E784(0, v14, 0);
      char v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
      v15 += 16;
      uint64_t v17 = v6 + ((*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64));
      uint64_t v30 = *(void *)(v15 + 56);
      uint64_t v32 = v16;
      uint64_t v18 = (void (**)(uint64_t, uint64_t))(v15 - 8);
      uint64_t v19 = v2;
      do
      {
        uint64_t v20 = v0[4];
        uint64_t v21 = v0[2];
        v32(v20, v17, v21);
        uint64_t v22 = sub_1D5AB3FF0();
        uint64_t v24 = v23;
        (*v18)(v20, v21);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D594E784(0, *(void *)(v19 + 16) + 1, 1);
          uint64_t v19 = v35;
        }
        unint64_t v26 = *(void *)(v19 + 16);
        unint64_t v25 = *(void *)(v19 + 24);
        if (v26 >= v25 >> 1)
        {
          sub_1D594E784(v25 > 1, v26 + 1, 1);
          uint64_t v19 = v35;
        }
        *(void *)(v19 + 16) = v26 + 1;
        uint64_t v27 = v19 + 16 * v26;
        *(void *)(v27 + 32) = v22;
        *(void *)(v27 + 40) = v24;
        v17 += v30;
        --v14;
      }
      while (v14);
      swift_release();
    }
    else
    {
      swift_release();
      uint64_t v19 = MEMORY[0x1E4FBC860];
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v28 = (void (*)(uint64_t))v0[1];
    v28(v19);
  }
}

uint64_t sub_1D5A39DE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *unint64_t v7 = v3;
  v7[1] = sub_1D5A27F80;
  return WorkoutPlanClientProtocol.queryRemainingWorkouts(for:)(a1, a2, a3);
}

uint64_t WorkoutPlanClientProtocol.requestWorkoutPlan(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(a3 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](a1);
  unint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v8 + 16))(v10, v11);
  unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v13 = (v9 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a3;
  *(void *)(v14 + 24) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v14 + v12, v10, a3);
  uint64_t v15 = (void *)(v14 + v13);
  *uint64_t v15 = a1;
  v15[1] = a2;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = "/Library/Caches/com.apple.xbs/Sources/FitCore_clients/SeymourClient/Workout Plan/Client/Workou"
                          "tPlanClientProtocol.swift";
  *(void *)(v16 + 24) = 119;
  *(unsigned char *)(v16 + 32) = 2;
  *(void *)(v16 + 40) = 87;
  *(void *)(v16 + 48) = &unk_1EA727448;
  *(void *)(v16 + 56) = v14;
  sub_1D5AB2210();
  swift_bridgeObjectRetain();
  return sub_1D5AB4540();
}

uint64_t sub_1D5A3A050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  _OWORD v6[2] = a1;
  _OWORD v6[3] = a2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7253B8);
  v6[8] = v7;
  v6[9] = *(void *)(v7 - 8);
  v6[10] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D5A3A11C, 0, 0);
}

uint64_t sub_1D5A3A11C()
{
  uint64_t v1 = v0[10];
  WorkoutPlanClientProtocol.requestWorkoutPlan(_:)(v0[4], v0[5], v0[6], v0[7]);
  uint64_t v2 = swift_task_alloc();
  v0[11] = v2;
  *(void *)(v2 + 16) = "/Library/Caches/com.apple.xbs/Sources/FitCore_clients/SeymourClient/Workout Plan/Client/Workout"
                         "PlanClientProtocol.swift";
  *(void *)(v2 + 24) = 119;
  *(unsigned char *)(v2 + 32) = 2;
  *(void *)(v2 + 40) = 87;
  *(void *)(v2 + 48) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[12] = v3;
  uint64_t v4 = sub_1D5AB2210();
  *uint64_t v3 = v0;
  v3[1] = sub_1D5A3A240;
  uint64_t v5 = v0[2];
  return MEMORY[0x1F4188160](v5, 0, 0, 0xD000000000000013, 0x80000001D5AC6250, sub_1D5A3D9D4, v2, v4);
}

uint64_t sub_1D5A3A240()
{
  uint64_t v2 = (void *)*v1;
  v2[13] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D5A3A3B0, 0, 0);
  }
  else
  {
    uint64_t v3 = v2[10];
    uint64_t v4 = v2[8];
    uint64_t v5 = v2[9];
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v2[1];
    return v6();
  }
}

uint64_t sub_1D5A3A3B0()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t WorkoutPlanClientProtocol.insertCompletedWorkoutPlanSummary(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  v21[0] = a3;
  v21[1] = a4;
  uint64_t v8 = sub_1D5AB3B90();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = *(void *)(a2 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v5, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v16 = (v13 + *(unsigned __int8 *)(v9 + 80) + v15) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = v21[0];
  *(void *)(v17 + 16) = a2;
  *(void *)(v17 + 24) = v18;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v17 + v15, v14, a2);
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v17 + v16, (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = "/Library/Caches/com.apple.xbs/Sources/FitCore_clients/SeymourClient/Workout Plan/Client/Workou"
                          "tPlanClientProtocol.swift";
  *(void *)(v19 + 24) = 119;
  *(unsigned char *)(v19 + 32) = 2;
  *(void *)(v19 + 40) = 91;
  *(void *)(v19 + 48) = &unk_1EA727458;
  *(void *)(v19 + 56) = v17;
  return sub_1D5AB4540();
}

uint64_t sub_1D5A3A6A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 232) + **(int **)(a5 + 232));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v9;
  *uint64_t v9 = v5;
  v9[1] = sub_1D5984480;
  return v11(a3, a4, a5);
}

uint64_t sub_1D5A3A7B0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, v5 + 16, v4);
}

uint64_t sub_1D5A3A850(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  unint64_t v6 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v7 = v1 + v6;
  uint64_t v8 = (uint64_t *)(v1 + ((*(void *)(*(void *)(v4 - 8) + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_1D598AF68;
  return sub_1D5A3A050(a1, v7, v9, v10, v4, v5);
}

uint64_t sub_1D5A3A974(uint64_t a1, uint64_t a2)
{
  return sub_1D5A3AC80(a1, a2, (uint64_t)&unk_1F2DF36C0, (uint64_t)&unk_1EA7275B8);
}

uint64_t sub_1D5A3A994()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_1D5AB3B90();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return MEMORY[0x1F4186498](v0, v10, v11);
}

uint64_t sub_1D5A3AADC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(sub_1D5AB3B90() - 8) + 80);
  unint64_t v9 = v7 + v6 + v8;
  uint64_t v10 = v1 + v7;
  uint64_t v11 = v1 + (v9 & ~v8);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_1D598AF68;
  return sub_1D5A3A6A4(a1, v10, v11, v4, v5);
}

uint64_t sub_1D5A3AC28()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1D5A3AC60(uint64_t a1, uint64_t a2)
{
  return sub_1D5A3AC80(a1, a2, (uint64_t)&unk_1F2DF3670, (uint64_t)&unk_1EA727598);
}

uint64_t sub_1D5A3AC80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D5A38590(a1, a2, *(void *)(v4 + 16), *(void *)(v4 + 24), *(unsigned char *)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48), *(void *)(v4 + 56), a3, a4);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.createWorkoutPlan(modalityPreferences:name:planIdentifier:schedule:startDate:workoutPlanLength:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a10 + 8) + **(int **)(a10 + 8));
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v10 + 16) = v18;
  *uint64_t v18 = v10;
  v18[1] = sub_1D598AF68;
  return v20(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.createUnsavedWorkoutPlan(modalityPreferences:name:planIdentifier:schedule:startDate:workoutPlanLength:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a10 + 16) + **(int **)(a10 + 16));
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v10 + 16) = v18;
  *uint64_t v18 = v10;
  v18[1] = sub_1D598AF68;
  return v20(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.repeatWorkoutPlan(templateIdentifier:startingOn:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 24) + **(int **)(a5 + 24));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  void *v11 = v5;
  v11[1] = sub_1D598AF68;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.validateSchedule(request:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 32) + **(int **)(a3 + 32));
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *unint64_t v7 = v3;
  v7[1] = sub_1D598AF68;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.makeWorkoutPlanSchedule(request:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 40) + **(int **)(a4 + 40));
  unint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *unint64_t v9 = v4;
  v9[1] = sub_1D598AF68;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.updateWorkoutPlan(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 48) + **(int **)(a4 + 48));
  unint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *unint64_t v9 = v4;
  v9[1] = sub_1D598AF68;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.queryActiveWorkoutPlan()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 56) + **(int **)(a3 + 56));
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *unint64_t v7 = v3;
  v7[1] = sub_1D5984480;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.requestWorkoutPlans(state:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 64) + **(int **)(a4 + 64));
  uint64_t v8 = a2 & 1;
  unint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *unint64_t v9 = v4;
  v9[1] = sub_1D59CD6A4;
  return v11(a1, v8, a3, a4);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.queryDailyNotificationSchedule(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 72) + **(int **)(a3 + 72));
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *unint64_t v7 = v3;
  v7[1] = sub_1D59CD6A4;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.queryRemainingWorkouts(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 80) + **(int **)(a3 + 80));
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *unint64_t v7 = v3;
  v7[1] = sub_1D59CD6A4;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.queryNextIncompleteWorkoutReference(after:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 88) + **(int **)(a4 + 88));
  unint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *unint64_t v9 = v4;
  v9[1] = sub_1D598AF68;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.queryIncompleteMatchingWorkoutReferences(plan:workout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 96) + **(int **)(a5 + 96));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  void *v11 = v5;
  v11[1] = sub_1D59CD6A4;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.queryAllWorkoutPlanTemplateReferences()(uint64_t a1, uint64_t a2)
{
  unint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 104) + **(int **)(a2 + 104));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D59CD6A4;
  return v7(a1, a2);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.queryAllWorkoutPlanTemplatesCount()(uint64_t a1, uint64_t a2)
{
  unint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 112) + **(int **)(a2 + 112));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D59CD6A4;
  return v7(a1, a2);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.queryWorkoutPlanTemplateMetadata(identifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 120) + **(int **)(a3 + 120));
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *unint64_t v7 = v3;
  v7[1] = sub_1D59CD6A4;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.queryWorkoutPlanTemplates(identifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 128) + **(int **)(a3 + 128));
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *unint64_t v7 = v3;
  v7[1] = sub_1D59CD6A4;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.queryAllWorkoutPlans(forTemplateIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 136) + **(int **)(a3 + 136));
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *unint64_t v7 = v3;
  v7[1] = sub_1D59CD6A4;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.requestWorkoutPlanAlternatives(workoutIdentifier:workoutPlan:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 144)
                                                                                     + **(int **)(a6 + 144));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_1D598AF68;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.updateWorkoutPlanAlternatives(planIdentifier:reference:workoutIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a7 + 152)
                                                                                              + **(int **)(a7 + 152));
  unint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *unint64_t v15 = v7;
  v15[1] = sub_1D598AF68;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.deleteAllActiveWorkoutPlans()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 160) + **(int **)(a2 + 160));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D598AF68;
  return v7(a1, a2);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.deleteWorkoutPlan(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 168) + **(int **)(a3 + 168));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D598AF68;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.insertWorkoutPlan(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 176) + **(int **)(a3 + 176));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D598AF68;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.insertWorkoutPlanTemplate(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 184) + **(int **)(a3 + 184));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D598AF68;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.deleteWorkoutPlanTemplate(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 192) + **(int **)(a3 + 192));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D598AF68;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.requestWorkoutPlan(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 200) + **(int **)(a4 + 200));
  unint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *unint64_t v9 = v4;
  v9[1] = sub_1D598AF68;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.queryWorkoutPlanSummary(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 208) + **(int **)(a4 + 208));
  unint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *unint64_t v9 = v4;
  v9[1] = sub_1D598AF68;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.queryPendingWorkoutPlanSummary()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 216) + **(int **)(a3 + 216));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D598AF68;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.queryWorkoutPlanSummariesViewed()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 224) + **(int **)(a2 + 224));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D59CD6A4;
  return v7(a1, a2);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.insertCompletedWorkoutPlanSummary(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 232) + **(int **)(a3 + 232));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D598AF68;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.insertArchivedPlanSession(session:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 240) + **(int **)(a3 + 240));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D598AF68;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.evaluateActiveWorkoutPlanCompletion()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 248) + **(int **)(a2 + 248));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D598AF68;
  return v7(a1, a2);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.queryActiveWorkoutPlanItemMetrics()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 256) + **(int **)(a2 + 256));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D597984C;
  return v7(a1, a2);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.queryWorkoutPlanItemMetrics(planIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 264) + **(int **)(a3 + 264));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D59CD6A4;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.updateWorkoutPlanTemplateName(identifier:name:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 272)
                                                                            + **(int **)(a5 + 272));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  void *v11 = v5;
  v11[1] = sub_1D598AF68;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.endWorkoutPlan(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 280) + **(int **)(a3 + 280));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D598AF68;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.filterCatalog(request:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 288) + **(int **)(a4 + 288));
  unint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *unint64_t v9 = v4;
  v9[1] = sub_1D598AF68;
  return v11(a1, a2, a3, a4);
}

unint64_t sub_1D5A3D260(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    unint64_t v3 = 0;
    MEMORY[0x1D945AAE0](&v3, 8);
    uint64_t result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      unint64_t v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          unint64_t v3 = 0;
          MEMORY[0x1D945AAE0](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1D5A3D2F0()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_1D598AF68;
  unint64_t v2 = (char *)&dword_1EA727590 + dword_1EA727590;
  __asm { BR              X9; sub_1D5A3907C }
}

uint64_t sub_1D5A3D404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB51C0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1D5AB51B0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1D594F53C(a1, (uint64_t *)&unk_1EBDE4C10);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1D5AB5120();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1D5A3D5B0(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D5A3D68C;
  return v6(a1);
}

uint64_t sub_1D5A3D68C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1D5A3D784()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D5A3D7BC(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D598AF68;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA7275A0 + dword_1EA7275A0);
  return v6(a1, v4);
}

uint64_t objectdestroy_55Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 104, 7);
}

void sub_1D5A3D8C0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1D5984480;
  uint64_t v2 = (char *)&dword_1EA7275B0 + dword_1EA7275B0;
  __asm { BR              X9; sub_1D5A388AC }
}

uint64_t sub_1D5A3D9D4(uint64_t a1)
{
  return sub_1D5972374(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t HealthKitStandaloneWorkoutJobAdded.healthKitStandaloneWorkoutJob.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB4110();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t HealthKitStandaloneWorkoutJobAdded.init(healthKitStandaloneWorkoutJob:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB4110();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static HealthKitStandaloneWorkoutJobAdded.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t getEnumTagSinglePayload for HealthKitStandaloneWorkoutJobAdded(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D5A3DAE0);
}

uint64_t sub_1D5A3DAE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4110();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for HealthKitStandaloneWorkoutJobAdded(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D5A3DB60);
}

uint64_t sub_1D5A3DB60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4110();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for HealthKitStandaloneWorkoutJobAdded()
{
  uint64_t result = qword_1EBDE0ED8;
  if (!qword_1EBDE0ED8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void CoreAnalyticsReporter.report(_:)(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  sub_1D5AB4E90();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)sub_1D5AB4DE0();
  swift_bridgeObjectRelease();
  sub_1D5979948((uint64_t)a1, (uint64_t)v8);
  uint64_t v5 = swift_allocObject();
  sub_1D5950B78(v8, v5 + 16);
  aBlock[4] = sub_1D5A3DDB0;
  aBlock[5] = v5;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D5A3DE04;
  aBlock[3] = &block_descriptor_14;
  uint64_t v6 = _Block_copy(aBlock);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v6);
}

uint64_t sub_1D5A3DD78()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1D5A3DDB0()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

id sub_1D5A3DE04(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_1D599F620();
    uint64_t v4 = (void *)sub_1D5AB4D60();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = 0;
  }
  return v4;
}

void sub_1D5A3DE90(void *a1)
{
}

ValueMetadata *type metadata accessor for CoreAnalyticsReporter()
{
  return &type metadata for CoreAnalyticsReporter;
}

uint64_t retryWithBackoff<A>(_:maximumAttempts:backoffIntervalProvider:retryCondition:)(uint64_t a1, int *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v17;
  *uint64_t v17 = v8;
  v17[1] = sub_1D5984480;
  return sub_1D5A3DFA0(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1D5A3DFA0(uint64_t a1, int *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[13] = a7;
  v8[14] = a8;
  v8[11] = a5;
  v8[12] = a6;
  v8[9] = a3;
  v8[10] = a4;
  v8[7] = a1;
  v8[8] = a2;
  uint64_t v12 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v10 = (void *)swift_task_alloc();
  v8[15] = v10;
  *uint64_t v10 = v8;
  v10[1] = sub_1D5A3E08C;
  return v12(a1);
}

uint64_t sub_1D5A3E08C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D5A3E1C0, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1D5A3E1C0()
{
  uint64_t v1 = (uint64_t (*)(void))v0[12];
  if (v1)
  {
    uint64_t v2 = v0[10];
    if ((v1(v0[16]) & 1) != 0 && v2 > 1)
    {
LABEL_4:
      sub_1D5979948(v0[11], (uint64_t)(v0 + 2));
      uint64_t v3 = v0[5];
      uint64_t v4 = v0[6];
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 2), v3);
      double v6 = (*(double (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4) * 1000000000.0;
      if ((~*(void *)&v6 & 0x7FF0000000000000) != 0)
      {
        if (v6 > -1.0)
        {
          if (v6 < 1.84467441e19)
          {
            unint64_t v7 = (unint64_t)v6;
            uint64_t v8 = (void *)swift_task_alloc();
            v0[17] = v8;
            *uint64_t v8 = v0;
            v8[1] = sub_1D5A3E35C;
            unint64_t v5 = v7;
            return MEMORY[0x1F4187DE0](v5);
          }
LABEL_16:
          __break(1u);
          return MEMORY[0x1F4187DE0](v5);
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_16;
    }
  }
  else if ((uint64_t)v0[10] >= 2)
  {
    goto LABEL_4;
  }
  swift_willThrow();
  unint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1D5A3E35C()
{
  uint64_t v2 = (void *)*v1;
  v2[18] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D5A3E60C, 0, 0);
  }
  else
  {
    uint64_t v3 = v2[10] - 1;
    uint64_t v4 = (void *)swift_task_alloc();
    v2[19] = v4;
    *uint64_t v4 = v2;
    v4[1] = sub_1D5A3E4F8;
    uint64_t v5 = v2[13];
    uint64_t v6 = v2[14];
    uint64_t v7 = v2[12];
    uint64_t v8 = v2[8];
    uint64_t v9 = v2[9];
    uint64_t v10 = v2[7];
    return sub_1D5A3DFA0(v10, v8, v9, v3, v2 + 2, v7, v5, v6);
  }
}

uint64_t sub_1D5A3E4F8()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D5A3E6EC;
  }
  else {
    uint64_t v2 = sub_1D5A3E67C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D5A3E60C()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D5A3E67C()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D5A3E6EC()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t Promise.retryWithBackoff(maximumAttempts:backoffIntervalProvider:queue:retryCondition:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v25 = a4;
  uint64_t v26 = a5;
  uint64_t v24 = a1;
  uint64_t v27 = a7;
  uint64_t v11 = *(void *)(a6 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v7, v13);
  sub_1D5979948(a2, (uint64_t)v28);
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v15 = (v12 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = *(void *)(a6 + 16);
  *(void *)(v17 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v17 + v14, (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a6);
  *(void *)(v17 + v15) = v24;
  sub_1D5950B78(v28, v17 + v16);
  uint64_t v18 = (uint64_t *)(v17 + ((v16 + 47) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v20 = v25;
  uint64_t v19 = v26;
  *uint64_t v18 = v25;
  v18[1] = v19;
  id v21 = a3;
  sub_1D5A0A740(v20);
  return sub_1D5AB4540();
}

uint64_t sub_1D5A3E908(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v43 = a7;
  uint64_t v44 = a8;
  uint64_t v38 = a5;
  uint64_t v40 = a3;
  uint64_t v41 = a1;
  uint64_t v42 = a2;
  uint64_t v37 = a9;
  uint64_t v46 = sub_1D5AB4C50();
  uint64_t v49 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  uint64_t v45 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1D5AB4C70();
  uint64_t v47 = *(void *)(v12 - 8);
  uint64_t v48 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v39 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1D5AB45D0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v37 - v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v37 - v17, a4, v14);
  sub_1D5979948(a6, (uint64_t)v52);
  unint64_t v19 = (*(unsigned __int8 *)(v15 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v20 = (v16 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v21 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = (v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v37;
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v25 + v19, v18, v14);
  *(void *)(v25 + v20) = v38;
  sub_1D5950B78(v52, v25 + v21);
  uint64_t v26 = v40;
  *(void *)(v25 + v22) = v40;
  uint64_t v27 = (uint64_t *)(v25 + v23);
  uint64_t v29 = v43;
  uint64_t v28 = v44;
  *uint64_t v27 = v43;
  v27[1] = v28;
  uint64_t v30 = (void *)(v25 + v24);
  uint64_t v31 = v42;
  *uint64_t v30 = v41;
  v30[1] = v31;
  aBlock[4] = sub_1D5A3F104;
  aBlock[5] = v25;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D598EA50;
  aBlock[3] = &block_descriptor_15;
  uint64_t v32 = _Block_copy(aBlock);
  v26;
  sub_1D5A0A740(v29);
  swift_retain();
  uint64_t v33 = v39;
  sub_1D5AB4C60();
  uint64_t v50 = MEMORY[0x1E4FBC860];
  sub_1D59903E8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE5100);
  sub_1D5990440();
  uint64_t v35 = v45;
  uint64_t v34 = v46;
  sub_1D5AB56F0();
  MEMORY[0x1D94598A0](0, v33, v35, v32);
  _Block_release(v32);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v35, v34);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v33, v48);
  return swift_release();
}

uint64_t sub_1D5A3ED04()
{
  uint64_t v1 = sub_1D5AB45D0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  unint64_t v5 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 47) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + v5);
  if (*(void *)(v0 + v6)) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, v6 + 16, v3 | 7);
}

uint64_t sub_1D5A3EE0C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(sub_1D5AB45D0() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1D5A3E908(a1, a2, *(void **)(v2 + 24), v2 + v7, *(void *)(v2 + v8), v2 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(v2 + ((((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v2 + ((((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 8), v5);
}

uint64_t sub_1D5A3EEE0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v18[1] = a8;
  uint64_t v13 = sub_1D5AB45D0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v18 - v15;
  sub_1D5A3F1D8(a2, a3, a4, a5, a6, v13, (uint64_t)v18 - v15);
  sub_1D5AB45A0();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_1D5A3F00C()
{
  uint64_t v1 = sub_1D5AB45D0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  unint64_t v5 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + v5);

  if (*(void *)(v0 + v7)) {
    swift_release();
  }
  swift_release();
  return MEMORY[0x1F4186498](v0, ((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 16, v3 | 7);
}

uint64_t sub_1D5A3F104()
{
  uint64_t v1 = *(void *)(sub_1D5AB45D0() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 47) & 0xFFFFFFFFFFFFFFF8;
  return sub_1D5A3EEE0(v0 + v2, *(void *)(v0 + v3), v0 + v4, *(void **)(v0 + v5), *(void *)(v0 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v0 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1D5A3F1D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v25 = a4;
  uint64_t v26 = a5;
  uint64_t v27 = a3;
  uint64_t v28 = a7;
  uint64_t v24 = a1;
  uint64_t v10 = *(void *)(a6 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v7, v12);
  sub_1D5979948(a2, (uint64_t)v29);
  unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v14 = (v11 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = *(void *)(a6 + 16);
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v17 + v13, (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a6);
  uint64_t v18 = v25;
  *(void *)(v17 + v14) = v24;
  unint64_t v19 = (uint64_t *)(v17 + v15);
  uint64_t v20 = v26;
  uint64_t *v19 = v18;
  v19[1] = v20;
  sub_1D5950B78(v29, v17 + v16);
  unint64_t v21 = v27;
  *(void *)(v17 + ((v16 + 47) & 0xFFFFFFFFFFFFFFF8)) = v27;
  sub_1D5A0A740(v18);
  id v22 = v21;
  return sub_1D5AB4540();
}

uint64_t sub_1D5A3F390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9)
{
  uint64_t v25 = a1;
  uint64_t v26 = a8;
  uint64_t v24 = a4;
  uint64_t v14 = sub_1D5AB45D0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v24 - v16;
  sub_1D5979948(a7, (uint64_t)v27);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a3, v14);
  unint64_t v18 = (*(unsigned __int8 *)(v15 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v19 = (char *)swift_allocObject();
  uint64_t v20 = v24;
  *((void *)v19 + 2) = a9;
  *((void *)v19 + 3) = v20;
  *((void *)v19 + 4) = a5;
  *((void *)v19 + 5) = a6;
  *((void *)v19 + 6) = v25;
  *((void *)v19 + 7) = a2;
  sub_1D5950B78(v27, (uint64_t)(v19 + 64));
  unint64_t v21 = v26;
  *((void *)v19 + 13) = v26;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v19[v18], v17, v14);
  sub_1D5A0A740(a5);
  swift_retain();
  id v22 = v21;
  sub_1D5AB45A0();
  return swift_release();
}

uint64_t sub_1D5A3F548()
{
  uint64_t v1 = sub_1D5AB45D0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  unint64_t v5 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  if (*(void *)(v0 + v5)) {
    swift_release();
  }
  unint64_t v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + v6);

  return MEMORY[0x1F4186498](v0, v7 + 8, v3 | 7);
}

uint64_t sub_1D5A3F624(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(sub_1D5AB45D0() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1D5A3F390(a1, a2, v2 + v7, *(void *)(v2 + v8), *(void *)(v2 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v2 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), v2 + ((((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8), *(void **)(v2+ ((((((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)), v5);
}

uint64_t sub_1D5A3F700(uint64_t a1, uint64_t a2, uint64_t (*a3)(void *), uint64_t (*a4)(void *), uint64_t (*a5)(uint64_t), uint64_t (*a6)(uint64_t), void *a7, void *a8, unint64_t a9, uint64_t a10)
{
  uint64_t v57 = a8;
  id v54 = a7;
  uint64_t v68 = a5;
  uint64_t v69 = a6;
  uint64_t v63 = a4;
  uint64_t v66 = a3;
  uint64_t v56 = sub_1D5AB4C50();
  uint64_t v62 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v60 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1D5AB4C70();
  uint64_t v59 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  uint64_t v58 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1D5AB45D0();
  uint64_t v55 = *(void *)(v14 - 8);
  uint64_t v15 = *(void *)(v55 + 64);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v50 - v16;
  uint64_t v65 = sub_1D5AB4C90();
  uint64_t v67 = *(void *)(v65 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v65);
  uint64_t v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v64 = (char *)&v50 - v21;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE5130);
  uint64_t v22 = sub_1D5AB5CB0();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (void **)((char *)&v50 - v24);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))((char *)&v50 - v24, a1, v22);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v26 = *v25;
    if (a2 >= 2 && (!v66 || (v66(v26) & 1) != 0))
    {
      unint64_t v50 = a9;
      uint64_t v27 = swift_allocObject();
      uint64_t v28 = v27 + 16;
      sub_1D5979948((uint64_t)v54, v27 + 16);
      sub_1D5AB4C80();
      uint64_t v52 = a2;
      id v54 = v26;
      uint64_t v51 = v27;
      uint64_t v30 = *(void *)(v27 + 40);
      uint64_t v29 = *(void *)(v27 + 48);
      __swift_mutable_project_boxed_opaque_existential_1(v28, v30);
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v30, v29);
      MEMORY[0x1D94590A0](v20);
      uint64_t v31 = *(void (**)(char *, uint64_t))(v67 + 8);
      v67 += 8;
      uint64_t v53 = v31;
      v31(v20, v65);
      uint64_t v32 = v55;
      (*(void (**)(char *, unint64_t, uint64_t))(v55 + 16))(v17, v50, v14);
      unint64_t v33 = (*(unsigned __int8 *)(v32 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
      unint64_t v50 = (v15 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v34 = (v50 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v35 = (v34 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v37 = swift_allocObject();
      *(void *)(v37 + 16) = a10;
      (*(void (**)(unint64_t, char *, uint64_t))(v32 + 32))(v37 + v33, v17, v14);
      *(void *)(v37 + v50) = v52;
      *(void *)(v37 + v34) = v51;
      uint64_t v38 = v57;
      *(void *)(v37 + v35) = v57;
      uint64_t v39 = (uint64_t (**)(void *))(v37 + v36);
      uint64_t v40 = (uint64_t)v66;
      uint64_t v41 = v63;
      *uint64_t v39 = v66;
      v39[1] = v41;
      uint64_t v42 = (uint64_t (**)(uint64_t))(v37 + ((v36 + 23) & 0xFFFFFFFFFFFFFFF8));
      uint64_t v43 = v69;
      *uint64_t v42 = v68;
      v42[1] = v43;
      aBlock[4] = sub_1D5A401E8;
      aBlock[5] = v37;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1D598EA50;
      aBlock[3] = &block_descriptor_20;
      uint64_t v44 = _Block_copy(aBlock);
      swift_retain();
      v38;
      sub_1D5A0A740(v40);
      swift_retain();
      uint64_t v45 = v58;
      sub_1D5AB4C60();
      uint64_t v70 = MEMORY[0x1E4FBC860];
      sub_1D59903E8();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE5100);
      sub_1D5990440();
      uint64_t v46 = v60;
      uint64_t v47 = v56;
      sub_1D5AB56F0();
      uint64_t v48 = v64;
      MEMORY[0x1D9459870](v64, v45, v46, v44);
      _Block_release(v44);

      (*(void (**)(char *, uint64_t))(v62 + 8))(v46, v47);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v45, v61);
      v53(v48, v65);
      swift_release();
      return swift_release();
    }
  }
  else
  {
    (*(void (**)(void **, uint64_t))(v23 + 8))(v25, v22);
  }
  return v68(a1);
}

uint64_t sub_1D5A3FDC8()
{
  uint64_t v1 = sub_1D5AB45D0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  uint64_t v5 = (v3 + 112) & ~v3;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 64);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v5, v1);
  return MEMORY[0x1F4186498](v0, v5 + v4, v3 | 7);
}

uint64_t sub_1D5A3FEC0(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(sub_1D5AB45D0() - 8);
  return sub_1D5A3F700(a1, *(void *)(v1 + 24), *(uint64_t (**)(void *))(v1 + 32), *(uint64_t (**)(void *))(v1 + 40), *(uint64_t (**)(uint64_t))(v1 + 48), *(uint64_t (**)(uint64_t))(v1 + 56), (void *)(v1 + 64), *(void **)(v1 + 104), v1 + ((*(unsigned __int8 *)(v4 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)), v3);
}

uint64_t sub_1D5A3FF54()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1D5A3FF8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v20[1] = a8;
  uint64_t v13 = sub_1D5AB45D0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t result = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)v20 - v16;
  BOOL v18 = __OFSUB__(a2, 1);
  uint64_t v19 = a2 - 1;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    sub_1D5979948(a3 + 16, (uint64_t)v21);
    sub_1D5A3F1D8(v19, v21, a4, a5, a6, v13);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
    sub_1D5AB45A0();
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  }
  return result;
}

uint64_t sub_1D5A400F0()
{
  uint64_t v1 = sub_1D5AB45D0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  unint64_t v5 = (((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  if (*(void *)(v0 + v6)) {
    swift_release();
  }
  swift_release();
  return MEMORY[0x1F4186498](v0, ((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 16, v3 | 7);
}

uint64_t sub_1D5A401E8()
{
  uint64_t v1 = *(void *)(sub_1D5AB45D0() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_1D5A3FF8C(v0 + v2, *(void *)(v0 + v3), *(void *)(v0 + v4), *(void *)(v0 + v5), *(void *)(v0 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v0 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t RemoteParticipantDiscovered.init(participant:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB3190();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

uint64_t RemoteParticipantDiscovered.participant.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB3190();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

void static RemoteParticipantDiscovered.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t getEnumTagSinglePayload for RemoteParticipantDiscovered(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D5A403BC);
}

uint64_t sub_1D5A403BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3190();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for RemoteParticipantDiscovered(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D5A4043C);
}

uint64_t sub_1D5A4043C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3190();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for RemoteParticipantDiscovered()
{
  uint64_t result = qword_1EBDE3090;
  if (!qword_1EBDE3090) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void Network.interfaceType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *Network.interfaceType.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*Network.interfaceType.modify())()
{
  return nullsub_1;
}

uint64_t Network.isConstrained.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t Network.isConstrained.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*Network.isConstrained.modify())()
{
  return nullsub_1;
}

uint64_t Network.isExpensive.getter()
{
  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t Network.isExpensive.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 2) = result;
  return result;
}

uint64_t (*Network.isExpensive.modify())()
{
  return nullsub_1;
}

void Network.status.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 3);
}

unsigned char *Network.status.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 3) = *result;
  return result;
}

uint64_t (*Network.status.modify())()
{
  return nullsub_1;
}

_DWORD *__swift_memcpy4_1(_DWORD *result, _DWORD *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for Network(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 4)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 1);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Network(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_DWORD *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 4) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 4) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 1) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Network()
{
  return &type metadata for Network;
}

uint64_t sub_1D5A40678@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4FBCAD0];
  uint64_t v3 = sub_1D5AB4C40();
  BOOL v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);
  return v4(a1, v2, v3);
}

uint64_t sub_1D5A406F0()
{
  return sub_1D5AB56F0();
}

uint64_t DispatchTimerProvider.makeTimer(fireAfter:queue:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v49 = a2;
  uint64_t v50 = a3;
  uint64_t v47 = a1;
  uint64_t v5 = sub_1D5AB4C50();
  uint64_t v54 = *(void *)(v5 - 8);
  uint64_t v55 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v51 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D5AB4C70();
  uint64_t v52 = *(void *)(v7 - 8);
  uint64_t v53 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v48 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D5AB4C40();
  uint64_t v45 = *(void *)(v9 - 8);
  uint64_t v46 = v9;
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v43 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v44 = (char *)&v40 - v12;
  uint64_t v42 = sub_1D5AB4C90();
  uint64_t v56 = *(void *)(v42 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v42);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v40 - v16;
  uint64_t v18 = sub_1D5AB54D0();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A0B7E4();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1D5A41664((unint64_t *)&qword_1EBDE4DC0, MEMORY[0x1E4FBCC70]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4DA0);
  sub_1D59B5388((unint64_t *)&qword_1EBDE4DB0, (uint64_t *)&unk_1EBDE4DA0);
  sub_1D5AB56F0();
  uint64_t v22 = sub_1D5AB54E0();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v47 = ObjectType;
  sub_1D5AB4C80();
  MEMORY[0x1D94590A0](v15, a4);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v56 + 8);
  v56 += 8;
  uint64_t v41 = v24;
  uint64_t v25 = v42;
  v24(v15, v42);
  uint64_t v27 = v44;
  uint64_t v26 = v45;
  uint64_t v28 = *(void (**)(char *, void, uint64_t))(v45 + 104);
  uint64_t v29 = v46;
  v28(v44, *MEMORY[0x1E4FBCAD0], v46);
  uint64_t v30 = v43;
  *(void *)uint64_t v43 = 0;
  v28(v30, *MEMORY[0x1E4FBCAA8], v29);
  MEMORY[0x1D9459970](v17, v27, v30, ObjectType);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v26 + 8);
  v31(v30, v29);
  v31(v27, v29);
  v41(v17, v25);
  uint64_t v32 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t v33 = (void *)swift_allocObject();
  uint64_t v35 = v49;
  uint64_t v34 = v50;
  _OWORD v33[2] = v32;
  v33[3] = v35;
  v33[4] = v34;
  aBlock[4] = sub_1D5A416B4;
  aBlock[5] = v33;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D598EA50;
  aBlock[3] = &block_descriptor_16;
  unint64_t v36 = _Block_copy(aBlock);
  swift_retain();
  sub_1D5A0A740(v35);
  uint64_t v37 = v48;
  sub_1D5AB4C60();
  uint64_t v38 = v51;
  sub_1D5A406F0();
  sub_1D5AB5500();
  _Block_release(v36);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v38, v55);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v37, v53);
  swift_release();
  swift_release();
  sub_1D5AB5520();
  return v22;
}

uint64_t sub_1D5A40DD4@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  uint64_t v2 = *MEMORY[0x1E4FBCAA8];
  uint64_t v3 = sub_1D5AB4C40();
  BOOL v4 = *(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);
  return v4(a1, v2, v3);
}

uint64_t sub_1D5A40E4C()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t DispatchTimerProvider.makeRepeatingTimer(fireAfter:fireInterval:leewayInterval:queue:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  uint64_t v38 = a3;
  uint64_t v39 = a4;
  v35[1] = a2;
  uint64_t v36 = a1;
  uint64_t v8 = sub_1D5AB4C50();
  uint64_t v43 = *(void *)(v8 - 8);
  uint64_t v44 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v40 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D5AB4C70();
  uint64_t v41 = *(void *)(v10 - 8);
  uint64_t v42 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v37 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35[0] = sub_1D5AB4C90();
  uint64_t v12 = *(void *)(v35[0] - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v35[0]);
  uint64_t v15 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)v35 - v16;
  uint64_t v18 = sub_1D5AB54D0();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A0B7E4();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1D5A41664((unint64_t *)&qword_1EBDE4DC0, MEMORY[0x1E4FBCC70]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4DA0);
  sub_1D59B5388((unint64_t *)&qword_1EBDE4DB0, (uint64_t *)&unk_1EBDE4DA0);
  sub_1D5AB56F0();
  uint64_t v22 = sub_1D5AB54E0();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  uint64_t ObjectType = swift_getObjectType();
  sub_1D5AB4C80();
  MEMORY[0x1D94590A0](v15, a5);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v25 = v15;
  uint64_t v26 = v35[0];
  v24(v25, v35[0]);
  MEMORY[0x1D9459980](v17, v36, ObjectType, a6);
  v24(v17, v26);
  uint64_t v27 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v28 = (void *)swift_allocObject();
  uint64_t v30 = v38;
  uint64_t v29 = v39;
  long long v28[2] = v27;
  v28[3] = v30;
  v28[4] = v29;
  aBlock[4] = sub_1D5A413D8;
  aBlock[5] = v28;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D598EA50;
  aBlock[3] = &block_descriptor_10;
  uint64_t v31 = _Block_copy(aBlock);
  swift_retain();
  sub_1D5A0A740(v30);
  uint64_t v32 = v37;
  sub_1D5AB4C60();
  unint64_t v33 = v40;
  sub_1D5A406F0();
  sub_1D5AB5500();
  _Block_release(v31);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v33, v44);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v32, v42);
  swift_release();
  swift_release();
  sub_1D5AB5520();
  return v22;
}

uint64_t sub_1D5A41350(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1D945ABB0](v3);
  if (!result || (swift_getObjectType(), char v5 = sub_1D5AB54F0(), result = swift_unknownObjectRelease(), (v5 & 1) == 0))
  {
    if (a2) {
      return a2();
    }
  }
  return result;
}

uint64_t sub_1D5A413D8()
{
  return sub_1D5A41350(*(void *)(v0 + 16), *(uint64_t (**)(void))(v0 + 24));
}

id DispatchTimerProvider.makeScheduledTimer(fireInterval:leewayInterval:queue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>, double a4@<D0>)
{
  uint64_t v17 = a2;
  uint64_t v7 = sub_1D5AB4C40();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  uint64_t v11 = type metadata accessor for DispatchTimer();
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = (void *)(v12 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_onFire);
  *uint64_t v13 = 0;
  v13[1] = 0;
  *(void *)(v12 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_sourceTimer) = 0;
  *(double *)(v12 + 16) = a4;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v12 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_leewayInterval, v10, v7);
  uint64_t v14 = v17;
  *(void *)(v12 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_queue) = v17;
  a3[3] = v11;
  a3[4] = (uint64_t)&protocol witness table for DispatchTimer;
  *a3 = v12;
  return v14;
}

uint64_t DispatchTimerProvider.cancelTimer(_:)()
{
  return sub_1D5AB5510();
}

uint64_t sub_1D5A415A4(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  return DispatchTimerProvider.makeTimer(fireAfter:queue:handler:)(a1, a2, a3, a4);
}

uint64_t sub_1D5A415BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  return DispatchTimerProvider.makeRepeatingTimer(fireAfter:fireInterval:leewayInterval:queue:handler:)(a1, a2, a3, a4, a5, a6);
}

id sub_1D5A415D4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>, double a4@<D0>)
{
  return DispatchTimerProvider.makeScheduledTimer(fireInterval:leewayInterval:queue:)(a1, a2, a3, a4);
}

uint64_t sub_1D5A415EC()
{
  return sub_1D5AB5510();
}

uint64_t dispatch thunk of DispatchTimerProviding.makeTimer(fireAfter:queue:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of DispatchTimerProviding.makeRepeatingTimer(fireAfter:fireInterval:leewayInterval:queue:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t dispatch thunk of DispatchTimerProviding.makeScheduledTimer(fireInterval:leewayInterval:queue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of DispatchTimerProviding.cancelTimer(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_1D5A41664(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D5A416B8(uint64_t a1, char a2, uint64_t (*a3)(uint64_t *))
{
  uint64_t v4 = a1;
  char v5 = a2 & 1;
  return a3(&v4);
}

uint64_t sub_1D5A416F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v28 - v7;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE2FC0);
  uint64_t v9 = *(void *)(v32 - 8);
  uint64_t v30 = *(void *)(v9 + 64);
  uint64_t v10 = MEMORY[0x1F4188790](v32);
  uint64_t v31 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v29 = (char *)&v28 - v12;
  sub_1D5A420A0();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1D5A439AC;
  *(void *)(v13 + 24) = v1;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  unint64_t v14 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v15 = (v4 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v16 + v14, v6, v2);
  uint64_t v17 = (uint64_t (**)())(v16 + v15);
  *uint64_t v17 = sub_1D59B4F90;
  v17[1] = (uint64_t (*)())v13;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3020);
  uint64_t v18 = v29;
  sub_1D5AB4540();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1D5A41A94;
  *(void *)(v19 + 24) = 0;
  uint64_t v21 = v31;
  uint64_t v20 = v32;
  uint64_t v22 = v18;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v31, v18, v32);
  unint64_t v23 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v24 = (v30 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v25 + v23, v21, v20);
  uint64_t v26 = (uint64_t (**)(uint64_t))(v25 + v24);
  *uint64_t v26 = sub_1D5A439DC;
  v26[1] = (uint64_t (*)(uint64_t))v19;
  sub_1D5AB4540();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v22, v20);
}

uint64_t sub_1D5A41A94@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  sub_1D5979948(a1, (uint64_t)v9);
  sub_1D5979948((uint64_t)v9, (uint64_t)v8);
  sub_1D597A398(v8, &v11);
  char v3 = v11;
  __swift_project_boxed_opaque_existential_1(v9, v10);
  char v4 = sub_1D5AB4BF0();
  __swift_project_boxed_opaque_existential_1(v9, v10);
  char v5 = sub_1D5AB4BE0();
  sub_1D5979948((uint64_t)v9, (uint64_t)v8);
  sub_1D59C9FD0(v8, &v11);
  char v6 = v11;
  *a2 = v3;
  a2[1] = v4 & 1;
  a2[2] = v5 & 1;
  a2[3] = v6;
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
}

uint64_t sub_1D5A41B64()
{
  sub_1D5AB4BB0();
  sub_1D59586BC(v0 + 16);
  sub_1D5A43598(v0 + 32);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ReachabilityObserver()
{
  return self;
}

uint64_t sub_1D5A41BEC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D5AB4CA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v6 = *(void **)(v1 + 96);
  *char v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBF0], v2);
  id v7 = v6;
  char v8 = sub_1D5AB4CC0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if (v8)
  {
    swift_beginAccess();
    sub_1D5A43288(v1 + 32, (uint64_t)&v20);
    if (v21)
    {
      if (v21 == 1)
      {
        uint64_t v10 = v20;
        swift_unknownObjectRelease();

        return sub_1D5A420A0();
      }
      else
      {
        uint64_t v13 = dispatch_group_create();
        dispatch_group_enter(v13);
        uint64_t v14 = sub_1D5A42614();
        swift_getObjectType();
        sub_1D5AB5520();
        sub_1D5AB5530();
        *(void *)&long long v18 = v13;
        *((void *)&v18 + 1) = v14;
        char v19 = 1;
        sub_1D5A432C0(&v18, v17);
        swift_beginAccess();
        unint64_t v15 = v13;
        swift_unknownObjectRetain();
        sub_1D5A432D8((uint64_t)v17, v1 + 32);
        swift_endAccess();
        swift_allocObject();
        swift_weakInit();
        swift_retain();
        sub_1D5A0A740((uint64_t)sub_1D5A435C8);
        sub_1D5AB4B90();
        swift_release_n();
        sub_1D5AB4BA0();
        sub_1D5A420A0();

        return swift_unknownObjectRelease();
      }
    }
    else
    {
      sub_1D5A43350();
      uint64_t v11 = swift_allocError();
      *uint64_t v12 = 0;
      *(void *)(swift_allocObject() + 16) = v11;
      sub_1D5AB4550();
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v20);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D5A41EE0(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1D5A435D0(a1, result);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D5A41F44()
{
  swift_beginAccess();
  sub_1D5A43288(v0 + 32, (uint64_t)v8);
  if (v9)
  {
    if (v9 == 1)
    {
      uint64_t v1 = *(void **)&v8[0];
      swift_unknownObjectRelease();
    }
    sub_1D5A43350();
    uint64_t v2 = swift_allocError();
    *uint64_t v3 = 1;
    *(void *)(swift_allocObject() + 16) = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3020);
    return sub_1D5AB4550();
  }
  else
  {
    sub_1D5950B78(v8, (uint64_t)v7);
    sub_1D5979948((uint64_t)v7, (uint64_t)v6);
    uint64_t v5 = swift_allocObject();
    sub_1D5950B78(v6, v5 + 16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3020);
    sub_1D5AB4550();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
  }
}

uint64_t sub_1D5A420A0()
{
  uint64_t v1 = sub_1D5AB4CA0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (uint64_t *)((char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void **)(v0 + 96);
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FBCBF0], v1);
  id v6 = v5;
  LOBYTE(v5) = sub_1D5AB4CC0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if (v5)
  {
    swift_beginAccess();
    sub_1D5A43288(v0 + 32, (uint64_t)&v13);
    if (v14)
    {
      if (v14 == 1)
      {
        uint64_t v8 = v13;
        swift_unknownObjectRelease();
        uint64_t v9 = swift_allocObject();
        *(void *)(v9 + 16) = v8;
        *(void *)(v9 + 24) = v0;
        swift_retain();
        return sub_1D5AB4540();
      }
      else
      {
        sub_1D5A43350();
        uint64_t v10 = swift_allocError();
        unsigned char *v11 = 1;
        *(void *)(swift_allocObject() + 16) = v10;
        return sub_1D5AB4550();
      }
    }
    else
    {
      sub_1D5AB45C0();
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v13);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D5A422C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a3;
  uint64_t v5 = sub_1D5AB4C50();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1D5AB4C70();
  uint64_t v9 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1D59A0F94;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_1D5A43528;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D598EA50;
  aBlock[3] = &block_descriptor_24;
  char v14 = _Block_copy(aBlock);
  swift_retain();
  sub_1D5AB4C60();
  uint64_t v19 = MEMORY[0x1E4FBC860];
  sub_1D5A41664((unint64_t *)&qword_1EBDE50F0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE5100);
  sub_1D59B5388((unint64_t *)&qword_1EBDE5110, (uint64_t *)&unk_1EBDE5100);
  sub_1D5AB56F0();
  sub_1D5AB5460();
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v17);
  return swift_release();
}

void sub_1D5A425A0(void (*a1)(void *, void))
{
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE5130);
  sub_1D5AB5CA0();
  a1(v2, v3);
  sub_1D596EA00(v2, v3);
}

uint64_t sub_1D5A42614()
{
  uint64_t v1 = sub_1D5AB4C40();
  uint64_t v51 = *(void *)(v1 - 8);
  uint64_t v52 = v1;
  uint64_t v2 = MEMORY[0x1F4188790](v1);
  uint64_t v50 = (uint64_t *)((char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v2);
  uint64_t v49 = (uint64_t)&v38 - v4;
  uint64_t v5 = sub_1D5AB4C90();
  uint64_t v47 = *(void *)(v5 - 8);
  uint64_t v48 = v5;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v45 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v46 = (char *)&v38 - v8;
  uint64_t v9 = sub_1D5AB4C50();
  uint64_t v42 = *(void *)(v9 - 8);
  uint64_t v43 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v40 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_1D5AB4C70();
  uint64_t v39 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1D5AB54D0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1D5AB4CA0();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (uint64_t *)((char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v44 = v0;
  char v21 = *(void **)(v0 + 96);
  *uint64_t v20 = v21;
  (*(void (**)(void *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E4FBCBF0], v17);
  id v22 = v21;
  LOBYTE(v21) = sub_1D5AB4CC0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v18 + 8))(v20, v17);
  if (v21)
  {
    sub_1D5A0B7E4();
    aBlock[0] = MEMORY[0x1E4FBC860];
    sub_1D5A41664((unint64_t *)&qword_1EBDE4DC0, MEMORY[0x1E4FBCC70]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4DA0);
    sub_1D59B5388((unint64_t *)&qword_1EBDE4DB0, (uint64_t *)&unk_1EBDE4DA0);
    sub_1D5AB56F0();
    uint64_t v24 = sub_1D5AB54E0();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v26 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_1D5A43348;
    aBlock[5] = v26;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D598EA50;
    aBlock[3] = &block_descriptor_17;
    uint64_t v27 = _Block_copy(aBlock);
    swift_retain();
    sub_1D5A406EC();
    uint64_t v28 = v40;
    sub_1D5A406F0();
    sub_1D5AB5500();
    _Block_release(v27);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v28, v43);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v12, v41);
    swift_release();
    swift_release();
    uint64_t v29 = v45;
    sub_1D5AB4C80();
    uint64_t v30 = v46;
    MEMORY[0x1D94590A0](v29, 0.1);
    uint64_t v31 = v48;
    uint64_t v32 = *(void (**)(char *, uint64_t))(v47 + 8);
    v32(v29, v48);
    uint64_t v33 = v49;
    sub_1D5A40678(v49);
    uint64_t v34 = v50;
    sub_1D5A40DD4(v50);
    MEMORY[0x1D9459970](v30, v33, v34, ObjectType);
    uint64_t v35 = *(void (**)(void *, uint64_t))(v51 + 8);
    uint64_t v36 = v34;
    uint64_t v37 = v52;
    v35(v36, v52);
    v35((void *)v33, v37);
    v32(v30, v31);
    return v24;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D5A42C74()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1D5A42CCC();
    return swift_release();
  }
  return result;
}

void sub_1D5A42CCC()
{
  uint64_t v1 = sub_1D5AB4CA0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = &v8[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = *(void **)(v0 + 96);
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FBCBF0], v1);
  id v6 = v5;
  LOBYTE(v5) = sub_1D5AB4CC0();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if (v5)
  {
    swift_beginAccess();
    sub_1D5A43288(v0 + 32, (uint64_t)&v14);
    if (v15)
    {
      if (v15 == 1)
      {
        uint64_t v7 = v14;
        swift_unknownObjectRelease();
        uint64_t v11 = sub_1D5AB4C30();
        uint64_t v12 = &off_1F2DF4898;
        __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v10);
        sub_1D5AB4B80();
        char v13 = 0;
        sub_1D5A432C0(&v10, v9);
        swift_beginAccess();
        sub_1D5A432D8((uint64_t)v9, v0 + 32);
        swift_endAccess();
        dispatch_group_leave(v7);
      }
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v14);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t destroy for ReachabilityObserver.State(uint64_t result)
{
  unsigned int v1 = *(unsigned __int8 *)(result + 40);
  if (v1 >= 2) {
    unsigned int v1 = *(_DWORD *)result + 2;
  }
  if (v1 == 1)
  {

    return swift_unknownObjectRelease();
  }
  else if (!v1)
  {
    return __swift_destroy_boxed_opaque_existential_1Tm(result);
  }
  return result;
}

uint64_t initializeWithCopy for ReachabilityObserver.State(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2) {
    unsigned int v3 = *(_DWORD *)a2 + 2;
  }
  if (v3 == 1)
  {
    uint64_t v5 = *(void **)a2;
    uint64_t v6 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v6;
    *(unsigned char *)(a1 + 40) = 1;
    id v7 = v5;
    swift_unknownObjectRetain();
  }
  else if (v3)
  {
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v4;
    (**(void (***)(uint64_t))(v4 - 8))(a1);
    *(unsigned char *)(a1 + 40) = 0;
  }
  return a1;
}

uint64_t assignWithCopy for ReachabilityObserver.State(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1)
    {

      swift_unknownObjectRelease();
    }
    else if (!v4)
    {
      __swift_destroy_boxed_opaque_existential_1Tm(a1);
    }
    unsigned int v5 = *((unsigned __int8 *)a2 + 40);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      id v7 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(unsigned char *)(a1 + 40) = 1;
      id v8 = v7;
      swift_unknownObjectRetain();
    }
    else if (v5)
    {
      long long v9 = *a2;
      long long v10 = a2[1];
      *(_OWORD *)(a1 + 25) = *(long long *)((char *)a2 + 25);
      *(_OWORD *)a1 = v9;
      *(_OWORD *)(a1 + 16) = v10;
    }
    else
    {
      uint64_t v6 = *((void *)a2 + 3);
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v6 - 8))(a1, a2);
      *(unsigned char *)(a1 + 40) = 0;
    }
  }
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ReachabilityObserver.State(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1)
    {

      swift_unknownObjectRelease();
    }
    else if (!v4)
    {
      __swift_destroy_boxed_opaque_existential_1Tm(a1);
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 40) = 1;
    }
    else
    {
      long long v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      if (v5)
      {
        *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
      }
      else
      {
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(unsigned char *)(a1 + 40) = 0;
      }
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ReachabilityObserver.State(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 3) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ReachabilityObserver.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1D5A43234(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 2) {
    return (*(_DWORD *)a1 + 2);
  }
  return result;
}

uint64_t sub_1D5A43250(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ReachabilityObserver.State()
{
  return &type metadata for ReachabilityObserver.State;
}

uint64_t sub_1D5A43288(uint64_t a1, uint64_t a2)
{
  return a2;
}

_OWORD *sub_1D5A432C0(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(_OWORD *)((char *)a2 + 25) = *(long long *)((char *)a1 + 25);
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

uint64_t sub_1D5A432D8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1D5A43310()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D5A43348()
{
  return sub_1D5A42C74();
}

unint64_t sub_1D5A43350()
{
  unint64_t result = qword_1EA7275D8;
  if (!qword_1EA7275D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7275D8);
  }
  return result;
}

uint64_t sub_1D5A433A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D5A433FC(a1, MEMORY[0x1E4F9DC50], a2);
}

uint64_t sub_1D5A433D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D5A433FC(a1, MEMORY[0x1E4F9ED38], a2);
}

uint64_t sub_1D5A433FC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a2(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a3, a1, v5);
}

uint64_t sub_1D5A43470()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D5A434A8()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D5A434E8(uint64_t a1, uint64_t a2)
{
  return sub_1D5A422C0(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1D5A434F0()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1D5A43528()
{
  sub_1D5A425A0(*(void (**)(void *, void))(v0 + 16));
}

uint64_t sub_1D5A43530()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1D5A43568@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5979948(v1 + 16, a1);
}

uint64_t sub_1D5A43598(uint64_t a1)
{
  return a1;
}

uint64_t sub_1D5A435C8(uint64_t a1)
{
  return sub_1D5A41EE0(a1);
}

uint64_t sub_1D5A435D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4CA0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (uint64_t *)((char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_1D5AB4C30();
  v33[3] = v8;
  v33[4] = (uint64_t)&off_1F2DF4898;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v33);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(boxed_opaque_existential_1, a1, v8);
  long long v10 = *(void **)(a2 + 96);
  *id v7 = v10;
  uint64_t v11 = *MEMORY[0x1E4FBCBF0];
  uint64_t v12 = *(void (**)(void *, uint64_t, uint64_t))(v5 + 104);
  v12(v7, v11, v4);
  id v13 = v10;
  LOBYTE(v10) = sub_1D5AB4CC0();
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t))(v5 + 8);
  uint64_t result = v14(v7, v4);
  if ((v10 & 1) == 0)
  {
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  swift_beginAccess();
  sub_1D5A43288(a2 + 32, (uint64_t)v31);
  if (v32)
  {
    if (v32 == 1)
    {
      uint64_t v16 = v31[1];
      uint64_t v27 = v31[0];
      swift_getObjectType();
      sub_1D5AB5510();
      sub_1D5979948((uint64_t)v33, (uint64_t)v29);
      char v30 = 0;
      sub_1D5A432C0(v29, v28);
      swift_beginAccess();
      uint64_t v17 = v27;
      sub_1D5A432D8((uint64_t)v28, a2 + 32);
      swift_endAccess();
      dispatch_group_leave(v17);
      uint64_t v18 = MEMORY[0x1D945ABB0](a2 + 16);
      if (v18)
      {
        uint64_t v19 = v18;
        uint64_t v26 = v16;
        uint64_t v20 = *(void **)(v18 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue);
        *id v7 = v20;
        v12(v7, v11, v4);
        id v21 = v20;
        LOBYTE(v20) = sub_1D5AB4CC0();
        uint64_t result = v14(v7, v4);
        if (v20)
        {
          if (MEMORY[0x1D945ABB0](v19 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_delegate))
          {
            sub_1D59B48C0();
            swift_unknownObjectRelease();

            swift_unknownObjectRelease();
          }
          else
          {
            swift_unknownObjectRelease();
          }
          swift_unknownObjectRelease();
          return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
        }
        goto LABEL_19;
      }
      swift_unknownObjectRelease();
    }
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
  }
  sub_1D5979948((uint64_t)v33, (uint64_t)v29);
  char v30 = 0;
  sub_1D5A432C0(v29, v28);
  swift_beginAccess();
  sub_1D5A432D8((uint64_t)v28, a2 + 32);
  swift_endAccess();
  uint64_t v22 = MEMORY[0x1D945ABB0](a2 + 16);
  if (!v22)
  {
LABEL_13:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
  }
  uint64_t v23 = v22;
  uint64_t v24 = *(void **)(v22 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue);
  *id v7 = v24;
  v12(v7, v11, v4);
  id v25 = v24;
  LOBYTE(v24) = sub_1D5AB4CC0();
  uint64_t result = v14(v7, v4);
  if (v24)
  {
    if (MEMORY[0x1D945ABB0](v23 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_delegate))
    {
      sub_1D59B48C0();
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
    goto LABEL_13;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_1D5A439B0()
{
  return objectdestroy_7Tm(&qword_1EBDE4E10);
}

uint64_t sub_1D5A439BC(uint64_t a1, uint64_t a2)
{
  return sub_1D5A43A10(a1, a2, &qword_1EBDE4E10, sub_1D5986E40);
}

uint64_t sub_1D5A439DC(uint64_t a1)
{
  return sub_1D5A91140(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1D5A439E4()
{
  return objectdestroy_7Tm((uint64_t *)&unk_1EBDE2FC0);
}

uint64_t sub_1D5A439F0(uint64_t a1, uint64_t a2)
{
  return sub_1D5A43A10(a1, a2, (uint64_t *)&unk_1EBDE2FC0, sub_1D5986E18);
}

uint64_t sub_1D5A43A10(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v4 + v8;
  long long v10 = (uint64_t *)(v4 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  return a4(a1, a2, v9, v11, v12);
}

id sub_1D5A43AD4()
{
  return sub_1D5A37E80();
}

uint64_t Trainer.reference()()
{
  uint64_t v0 = sub_1D5AB4870();
  uint64_t v1 = sub_1D5AB4810();
  uint64_t v3 = v2;
  uint64_t v4 = sub_1D5AB4830();
  uint64_t v6 = v5;
  uint64_t v8 = sub_1D5AB4860();
  return MEMORY[0x1F414D5C0](v0, v1, v3, v4, v6, v8, v7);
}

uint64_t WorkoutDeviceConnection.applyingTimestampOffset(_:)()
{
  return sub_1D5AB3A40();
}

uint64_t sub_1D5A43C04()
{
  return sub_1D5AB3A40();
}

uint64_t RemoteBrowsingIdentityUpdated.init(identity:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D5A43C84(a1, a2);
}

uint64_t sub_1D5A43C84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB37D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t RemoteBrowsingIdentityUpdated.identity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A43CF4(v1, a1);
}

uint64_t sub_1D5A43CF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB37D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void static RemoteBrowsingIdentityUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t *initializeBufferWithCopyOfBuffer for RemoteBrowsingIdentityUpdated(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(sub_1D5AB37D0() - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726A58);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = sub_1D5AB3190();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      uint64_t v11 = *(int *)(v7 + 48);
      uint64_t v12 = (char *)a1 + v11;
      id v13 = (char *)a2 + v11;
      uint64_t v14 = sub_1D5AB3E10();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for RemoteBrowsingIdentityUpdated(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726A58);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = sub_1D5AB3190();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
    uint64_t v5 = a1 + *(int *)(v2 + 48);
    uint64_t v6 = sub_1D5AB3E10();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(v5, v6);
  }
  return result;
}

char *initializeWithCopy for RemoteBrowsingIdentityUpdated(char *a1, char *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726A58);
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = sub_1D5AB37D0();
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_1D5AB3190();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(v4 + 48);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_1D5AB3E10();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

char *assignWithCopy for RemoteBrowsingIdentityUpdated(char *a1, char *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726A58);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      uint64_t v16 = sub_1D5AB3190();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24))(a1, a2, v16);
      uint64_t v17 = *(int *)(v4 + 48);
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      uint64_t v20 = sub_1D5AB3E10();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 24))(v18, v19, v20);
      return a1;
    }
    sub_1D5A443D0((uint64_t)a1);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v14 = sub_1D5AB37D0();
    memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  uint64_t v9 = sub_1D5AB3190();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
  uint64_t v10 = *(int *)(v4 + 48);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = sub_1D5AB3E10();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_1D5A443D0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726A58);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *initializeWithTake for RemoteBrowsingIdentityUpdated(char *a1, char *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726A58);
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = sub_1D5AB37D0();
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_1D5AB3190();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    uint64_t v8 = *(int *)(v4 + 48);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_1D5AB3E10();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

char *assignWithTake for RemoteBrowsingIdentityUpdated(char *a1, char *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726A58);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      uint64_t v16 = sub_1D5AB3190();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40))(a1, a2, v16);
      uint64_t v17 = *(int *)(v4 + 48);
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      uint64_t v20 = sub_1D5AB3E10();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
      return a1;
    }
    sub_1D5A443D0((uint64_t)a1);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v14 = sub_1D5AB37D0();
    memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  uint64_t v9 = sub_1D5AB3190();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
  uint64_t v10 = *(int *)(v4 + 48);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = sub_1D5AB3E10();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteBrowsingIdentityUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D5A447F8);
}

uint64_t sub_1D5A447F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB37D0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for RemoteBrowsingIdentityUpdated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D5A44878);
}

uint64_t sub_1D5A44878(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB37D0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for RemoteBrowsingIdentityUpdated()
{
  uint64_t result = qword_1EBDE30A0;
  if (!qword_1EBDE30A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D5A44934()
{
  uint64_t result = sub_1D5AB37D0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t CacheResult.map<A>(transform:)@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](a1);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v14 + 16))(v13, v15);
  uint64_t v16 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v13, v7);
    a1(v11);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    uint64_t v16 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56))(a4, v16, 1, a3);
}

uint64_t sub_1D5A44BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 8);
}

uint64_t sub_1D5A44BC0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1D5A44C3C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v7 = *(void *)(v6 + 64);
  }
  else {
    size_t v7 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v8 = *(_DWORD *)(v6 + 80);
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v7 > 0x18)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v8 + 16) & ~v8));
    swift_retain();
  }
  else if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

uint64_t sub_1D5A44D78(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(a1, v3);
  }
  return result;
}

void *sub_1D5A44E3C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84)) {
      size_t v7 = *(void *)(v6 + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64) + 1;
    }
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_1D5A44F34(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  size_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      return a1;
    }
    uint64_t v13 = *(void (**)(void *, uint64_t))(v6 + 8);
    uint64_t v12 = v6 + 8;
    v13(a1, v5);
    int v10 = *(_DWORD *)(v12 + 76);
    size_t v11 = *(void *)(v12 + 56);
  }
  if (v10) {
    size_t v14 = v11;
  }
  else {
    size_t v14 = v11 + 1;
  }
  memcpy(a1, a2, v14);
  return a1;
}

void *sub_1D5A450A0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84)) {
      size_t v7 = *(void *)(v6 + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64) + 1;
    }
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_1D5A45198(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  size_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      return a1;
    }
    uint64_t v13 = *(void (**)(void *, uint64_t))(v6 + 8);
    uint64_t v12 = v6 + 8;
    v13(a1, v5);
    int v10 = *(_DWORD *)(v12 + 76);
    size_t v11 = *(void *)(v12 + 56);
  }
  if (v10) {
    size_t v14 = v11;
  }
  else {
    size_t v14 = v11 + 1;
  }
  memcpy(a1, a2, v14);
  return a1;
}

uint64_t sub_1D5A45304(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  unsigned int v6 = v5 - 1;
  if (!v5) {
    unsigned int v6 = 0;
  }
  uint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!v5) {
    ++v7;
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v6;
  if (a2 > v6)
  {
    char v9 = 8 * v7;
    if (v7 > 3) {
      goto LABEL_8;
    }
    unsigned int v11 = ((v8 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v7);
      if (v10) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2) {
          goto LABEL_25;
        }
LABEL_8:
        int v10 = *((unsigned __int8 *)a1 + v7);
        if (!*((unsigned char *)a1 + v7)) {
          goto LABEL_25;
        }
LABEL_15:
        int v12 = (v10 - 1) << v9;
        if (v7 > 3) {
          int v12 = 0;
        }
        if (v7)
        {
          if (v7 <= 3) {
            int v13 = v7;
          }
          else {
            int v13 = 4;
          }
          switch(v13)
          {
            case 2:
              int v14 = *a1;
              break;
            case 3:
              int v14 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              int v14 = *(_DWORD *)a1;
              break;
            default:
              int v14 = *(unsigned __int8 *)a1;
              break;
          }
        }
        else
        {
          int v14 = 0;
        }
        return v6 + (v14 | v12) + 1;
      }
      int v10 = *(unsigned __int16 *)((char *)a1 + v7);
      if (*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_15;
      }
    }
  }
LABEL_25:
  if (v5 < 2) {
    return 0;
  }
  unsigned int v16 = (*(uint64_t (**)(void))(v4 + 48))();
  if (v16 >= 2) {
    return v16 - 1;
  }
  else {
    return 0;
  }
}

void sub_1D5A454A4(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (v8)
  {
    size_t v10 = *(void *)(v7 + 64);
  }
  else
  {
    unsigned int v9 = 0;
    size_t v10 = *(void *)(v7 + 64) + 1;
  }
  BOOL v11 = a3 >= v9;
  unsigned int v12 = a3 - v9;
  if (v12 == 0 || !v11)
  {
LABEL_13:
    if (v9 < a2) {
      goto LABEL_14;
    }
    goto LABEL_21;
  }
  if (v10 > 3)
  {
    int v6 = 1;
    if (v9 < a2) {
      goto LABEL_14;
    }
    goto LABEL_21;
  }
  unsigned int v13 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
  if (!HIWORD(v13))
  {
    if (v13 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v13 > 1;
    }
    goto LABEL_13;
  }
  int v6 = 4;
  if (v9 < a2)
  {
LABEL_14:
    unsigned int v14 = ~v9 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v16 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
LABEL_21:
  switch(v6)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x1D5A456E0);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v8 >= 2)
        {
          uint64_t v17 = *(void (**)(void))(v7 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t sub_1D5A45708(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 48))(a1, 1);
}

uint64_t sub_1D5A45738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 56))(a1, a2, 1);
}

uint64_t type metadata accessor for CacheResult()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t Error.sanitized()(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(a1 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  uint64_t v95 = &v90[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v102 = &v90[-v10];
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  unsigned int v13 = &v90[-v12];
  MEMORY[0x1F4188790](v11);
  int v15 = &v90[-v14];
  uint64_t v16 = *(void *)(sub_1D5AB5BA0() + 16);
  swift_bridgeObjectRelease();
  os_log_type_t v100 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v101 = v6 + 16;
  v100(v15, v3, a1);
  if (v16)
  {
    uint64_t v98 = *(void (**)(unsigned char *, uint64_t))(v6 + 8);
    uint64_t v99 = v6;
    v98(v15, a1);
  }
  else
  {
    uint64_t v17 = (void *)sub_1D5AB5B70();
    uint64_t v18 = *(void (**)(unsigned char *, uint64_t))(v6 + 8);
    v18(v15, a1);

    if (!v17)
    {
      v100(v13, v3, a1);
      uint64_t v79 = sub_1D5AB5AD0();
      if (v79)
      {
        id v80 = (id)v79;
        v18(v13, a1);
      }
      else
      {
        id v80 = (id)swift_allocError();
        (*(void (**)(uint64_t, unsigned char *, uint64_t))(v6 + 32))(v89, v13, a1);
      }
      return (uint64_t)v80;
    }
    uint64_t v98 = v18;
    uint64_t v99 = v6;
  }
  uint64_t v19 = sub_1D5AB5BA0();
  uint64_t v105 = a2;
  uint64_t v106 = a1;
  uint64_t v104 = v3;
  uint64_t v20 = sub_1D5AB5B70();
  uint64_t v21 = *MEMORY[0x1E4F28A50];
  if (v20)
  {
    uint64_t v22 = (void *)v20;
    uint64_t v23 = sub_1D5AB4DF0();
    uint64_t v25 = v24;
    swift_getErrorValue();
    uint64_t v26 = (void *)Error.sanitized()(v113, v114);
    swift_getErrorValue();
    uint64_t v27 = v111;
    uint64_t v28 = v112;
    *((void *)&v122 + 1) = v112;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v121);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(boxed_opaque_existential_1, v27, v28);

    sub_1D5979A10(&v121, &v119);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v118[0] = v19;
    sub_1D5975ED8(&v119, v23, v25, isUniquelyReferenced_nonNull_native);
    uint64_t v19 = *(void *)&v118[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v31 = *(void *)(v19 + 64);
  uint64_t v108 = v19 + 64;
  uint64_t v32 = 1 << *(unsigned char *)(v19 + 32);
  uint64_t v33 = -1;
  if (v32 < 64) {
    uint64_t v33 = ~(-1 << v32);
  }
  unint64_t v34 = v33 & v31;
  unint64_t v35 = (unint64_t)(v32 + 63) >> 6;
  int v110 = v120;
  uint64_t v96 = *MEMORY[0x1E4F281F8];
  unint64_t v92 = v35 - 1;
  swift_bridgeObjectRetain();
  int v103 = 0;
  uint64_t v36 = 0;
  uint64_t v109 = (void *)v35;
  uint64_t v93 = v19 + 104;
  unint64_t v94 = v35 - 5;
  uint64_t v97 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v107 = v19;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        if (v34)
        {
          unint64_t v38 = __clz(__rbit64(v34));
          v34 &= v34 - 1;
          unint64_t v39 = v38 | (v36 << 6);
LABEL_14:
          uint64_t v40 = *(void *)(v19 + 56);
          uint64_t v41 = (void *)(*(void *)(v19 + 48) + 16 * v39);
          uint64_t v42 = v41[1];
          *(void *)&long long v119 = *v41;
          *((void *)&v119 + 1) = v42;
          sub_1D5951F00(v40 + 32 * v39, (uint64_t)v110);
          swift_bridgeObjectRetain();
          goto LABEL_21;
        }
        uint64_t v43 = v36 + 1;
        if (__OFADD__(v36, 1))
        {
          __break(1u);
          goto LABEL_78;
        }
        if (v43 >= (uint64_t)v109)
        {
          unint64_t v45 = v36;
        }
        else
        {
          unint64_t v44 = *(void *)(v108 + 8 * v43);
          if (v44) {
            goto LABEL_18;
          }
          unint64_t v45 = v36 + 1;
          if (v36 + 2 < (uint64_t)v109)
          {
            unint64_t v44 = *(void *)(v108 + 8 * (v36 + 2));
            if (v44)
            {
              uint64_t v43 = v36 + 2;
LABEL_18:
              unint64_t v34 = (v44 - 1) & v44;
              unint64_t v39 = __clz(__rbit64(v44)) + (v43 << 6);
              uint64_t v36 = v43;
              goto LABEL_14;
            }
            unint64_t v45 = v36 + 2;
            if (v36 + 3 < (uint64_t)v109)
            {
              unint64_t v44 = *(void *)(v108 + 8 * (v36 + 3));
              if (v44)
              {
                uint64_t v43 = v36 + 3;
                goto LABEL_18;
              }
              uint64_t v43 = v36 + 4;
              unint64_t v45 = v36 + 3;
              if (v36 + 4 < (uint64_t)v109)
              {
                unint64_t v44 = *(void *)(v108 + 8 * v43);
                if (v44) {
                  goto LABEL_18;
                }
                while (v94 != v36)
                {
                  unint64_t v44 = *(void *)(v93 + 8 * v36++);
                  if (v44)
                  {
                    uint64_t v43 = v36 + 4;
                    goto LABEL_18;
                  }
                }
                unint64_t v45 = v92;
              }
            }
          }
        }
        unint64_t v34 = 0;
        memset(v120, 0, sizeof(v120));
        uint64_t v36 = v45;
        long long v119 = 0u;
LABEL_21:
        sub_1D59799AC((uint64_t)&v119, (uint64_t)&v121, &qword_1EBDE3700);
        uint64_t v3 = *((void *)&v121 + 1);
        if (!*((void *)&v121 + 1))
        {
          swift_release();
          uint64_t v3 = v106;
          uint64_t v21 = v104;
          if ((v103 & 1) == 0)
          {
LABEL_74:
            sub_1D5AB5B90();
            uint64_t v84 = sub_1D5AB5B80();
            id v85 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
            uint64_t v86 = (void *)sub_1D5AB4DE0();
            swift_bridgeObjectRelease();
            os_log_type_t v87 = (void *)sub_1D5AB4D60();
            swift_bridgeObjectRelease();
            id v80 = objc_msgSend(v85, sel_initWithDomain_code_userInfo_, v86, v84, v87);

            return (uint64_t)v80;
          }
          if (qword_1EBDE5420 == -1)
          {
LABEL_65:
            uint64_t v70 = sub_1D5AB4B50();
            __swift_project_value_buffer(v70, (uint64_t)qword_1EBDE5400);
            uint64_t v71 = v102;
            uint64_t v72 = (void (*)(unsigned char *, unsigned char *, uint64_t))v100;
            v100(v102, v21, v3);
            int v73 = sub_1D5AB4B30();
            os_log_type_t v74 = sub_1D5AB5410();
            int v110 = v73;
            if (os_log_type_enabled(v73, v74))
            {
              uint64_t v75 = (uint8_t *)swift_slowAlloc();
              uint64_t v109 = (void *)swift_slowAlloc();
              *(_DWORD *)uint64_t v75 = 138412290;
              uint64_t v76 = v95;
              v72(v95, v71, v3);
              if (sub_1D5AB5AD0())
              {
                uint64_t v77 = v76;
                uint64_t v78 = v98;
                v98(v77, v3);
              }
              else
              {
                swift_allocError();
                (*(void (**)(uint64_t, unsigned char *, uint64_t))(v99 + 32))(v81, v76, v3);
                uint64_t v78 = v98;
              }
              uint64_t v82 = _swift_stdlib_bridgeErrorToNSError();
              *(void *)&long long v121 = v82;
              sub_1D5AB5680();
              uint64_t v83 = v109;
              *uint64_t v109 = v82;
              v78(v102, v3);
              _os_log_impl(&dword_1D5947000, v110, v74, "Found Errors from Core Data, original error before sanitization: %@", v75, 0xCu);
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725C30);
              swift_arrayDestroy();
              MEMORY[0x1D945AAC0](v83, -1, -1);
              MEMORY[0x1D945AAC0](v75, -1, -1);
            }
            else
            {
              v98(v71, v3);
            }

            goto LABEL_74;
          }
LABEL_78:
          swift_once();
          goto LABEL_65;
        }
        uint64_t v46 = v121;
        sub_1D5979A10(&v122, v118);
        if (v46 == sub_1D5AB4DF0() && v47 == v3)
        {
          swift_bridgeObjectRelease();
          goto LABEL_11;
        }
        char v37 = sub_1D5AB5AF0();
        swift_bridgeObjectRelease();
        if (v37) {
          goto LABEL_11;
        }
        sub_1D5951F00((uint64_t)v118, (uint64_t)&v119);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE3710);
        if (!swift_dynamicCast())
        {
          sub_1D5951F00((uint64_t)v118, (uint64_t)&v119);
          goto LABEL_35;
        }
        swift_unknownObjectRelease();
        sub_1D5951F00((uint64_t)v118, (uint64_t)&v119);
        sub_1D5951F00((uint64_t)&v119, (uint64_t)v117);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3720);
        char v48 = swift_dynamicCast();
        sub_1D5951F00((uint64_t)&v119, (uint64_t)v117);
        if (v48)
        {
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v117);
LABEL_35:
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v119);
          sub_1D5951F00((uint64_t)v118, (uint64_t)v117);
LABEL_36:
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v117);
          break;
        }
        sub_1D5979A10(v117, v116);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3728);
        char v67 = swift_dynamicCast();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v119);
        sub_1D5951F00((uint64_t)v118, (uint64_t)v117);
        if (v67) {
          goto LABEL_36;
        }
        sub_1D5979A10(v117, v116);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3708);
        if (swift_dynamicCast())
        {
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v119);
          if ((Error.isContainerSanitized(object:)((uint64_t)v118, v106, v105) & 1) == 0) {
            break;
          }
        }
LABEL_11:
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v118);
        swift_bridgeObjectRelease();
      }
      uint64_t v49 = sub_1D5AB5B90();
      uint64_t v51 = v50;
      if (v49 == sub_1D5AB4DF0() && v51 == v52)
      {
        swift_bridgeObjectRelease_n();
        break;
      }
      int v91 = sub_1D5AB5AF0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v91) {
        break;
      }
      *(void *)&long long v119 = 0;
      *((void *)&v119 + 1) = 0xE000000000000000;
      sub_1D5AB58C0();
      v120[1] = MEMORY[0x1E4FBB1A0];
      sub_1D5979A10(&v119, v116);
      uint64_t v68 = (void *)v107;
      char v69 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v115 = v68;
      sub_1D5975ED8(v116, v46, v3, v69);
      uint64_t v107 = (uint64_t)v115;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v118);
    }
    v120[1] = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v119 = 0x657070697274733CLL;
    *((void *)&v119 + 1) = 0xEA00000000003E64;
    sub_1D5979A10(&v119, v116);
    uint64_t v53 = (void *)v107;
    int v103 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v115 = v53;
    unint64_t v55 = sub_1D5952584(v46, v3);
    uint64_t v56 = v53[2];
    BOOL v57 = (v54 & 1) == 0;
    uint64_t v58 = v56 + v57;
    if (__OFADD__(v56, v57)) {
      break;
    }
    if (v53[3] >= v58)
    {
      if ((v103 & 1) == 0)
      {
        LODWORD(v107) = v54;
        sub_1D59776F8();
        LOBYTE(v54) = v107;
      }
    }
    else
    {
      LODWORD(v107) = v54;
      sub_1D59748A0(v58, v103);
      unint64_t v59 = sub_1D5952584(v46, v3);
      int v60 = v54 & 1;
      LOBYTE(v54) = v107;
      if ((v107 & 1) != v60) {
        goto LABEL_81;
      }
      unint64_t v55 = v59;
    }
    uint64_t v61 = v115;
    uint64_t v107 = (uint64_t)v115;
    if (v54)
    {
      uint64_t v62 = (_OWORD *)(v115[7] + 32 * v55);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v62);
      sub_1D5979A10(v116, v62);
    }
    else
    {
      v115[(v55 >> 6) + 8] |= 1 << v55;
      uint64_t v63 = (uint64_t *)(v61[6] + 16 * v55);
      *uint64_t v63 = v46;
      v63[1] = v3;
      sub_1D5979A10(v116, (_OWORD *)(v61[7] + 32 * v55));
      uint64_t v64 = v61[2];
      BOOL v65 = __OFADD__(v64, 1);
      uint64_t v66 = v64 + 1;
      if (v65) {
        goto LABEL_80;
      }
      v61[2] = v66;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v118);
    int v103 = 1;
  }
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  uint64_t result = sub_1D5AB5B50();
  __break(1u);
  return result;
}

uint64_t Error.isContainerSanitized(object:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D5951F00(a1, (uint64_t)&v41);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE38A0);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    int64_t v7 = 0;
    uint64_t v8 = v37;
    uint64_t v9 = *(void *)(v37 + 64);
    uint64_t v36 = v37 + 64;
    uint64_t v10 = 1 << *(unsigned char *)(v37 + 32);
    uint64_t v11 = -1;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    unint64_t v12 = v11 & v9;
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    int64_t v35 = v13 - 1;
    while (!v12)
    {
      int64_t v16 = v7 + 1;
      if (__OFADD__(v7, 1))
      {
        __break(1u);
        goto LABEL_43;
      }
      if (v16 < v13)
      {
        unint64_t v17 = *(void *)(v36 + 8 * v16);
        if (v17) {
          goto LABEL_11;
        }
        int64_t v18 = v7 + 2;
        ++v7;
        if (v16 + 1 < v13)
        {
          unint64_t v17 = *(void *)(v36 + 8 * v18);
          if (v17) {
            goto LABEL_14;
          }
          int64_t v7 = v16 + 1;
          if (v16 + 2 < v13)
          {
            unint64_t v17 = *(void *)(v36 + 8 * (v16 + 2));
            if (v17)
            {
              v16 += 2;
              goto LABEL_11;
            }
            int64_t v18 = v16 + 3;
            int64_t v7 = v16 + 2;
            if (v16 + 3 < v13)
            {
              unint64_t v17 = *(void *)(v36 + 8 * v18);
              if (!v17)
              {
                while (1)
                {
                  int64_t v16 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    break;
                  }
                  if (v16 >= v13)
                  {
                    int64_t v7 = v35;
                    goto LABEL_25;
                  }
                  unint64_t v17 = *(void *)(v36 + 8 * v16);
                  ++v18;
                  if (v17) {
                    goto LABEL_11;
                  }
                }
LABEL_43:
                __break(1u);
                return result;
              }
LABEL_14:
              int64_t v16 = v18;
LABEL_11:
              unint64_t v12 = (v17 - 1) & v17;
              unint64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
              int64_t v7 = v16;
LABEL_7:
              sub_1D5952D54(*(void *)(v8 + 48) + 40 * v15, (uint64_t)&v37);
              sub_1D5951F00(*(void *)(v8 + 56) + 32 * v15, (uint64_t)v39 + 8);
              goto LABEL_26;
            }
          }
        }
      }
LABEL_25:
      unint64_t v12 = 0;
      uint64_t v40 = 0;
      memset(v39, 0, sizeof(v39));
      long long v38 = 0u;
      long long v37 = 0u;
LABEL_26:
      sub_1D59799AC((uint64_t)&v37, (uint64_t)&v41, (uint64_t *)&unk_1EA727650);
      if (!*((void *)&v42 + 1))
      {
        swift_release();
        return 1;
      }
      sub_1D5979A10(&v44, &v37);
      uint64_t v48 = MEMORY[0x1E4FBB960];
      uint64_t v19 = swift_allocObject();
      *(void *)&long long v47 = v19;
      long long v20 = v42;
      *(_OWORD *)(v19 + 16) = v41;
      *(_OWORD *)(v19 + 32) = v20;
      *(void *)(v19 + 48) = v43;
      char v21 = Error.isValidElement(_:)((uint64_t)&v47, a2, a3);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v47);
      if ((v21 & 1) == 0)
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v37);
LABEL_38:
        swift_release();
        return 0;
      }
      char v22 = Error.isValidElement(_:)((uint64_t)&v37, a2, a3);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v37);
      if ((v22 & 1) == 0) {
        goto LABEL_38;
      }
    }
    unint64_t v14 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    unint64_t v15 = v14 | (v7 << 6);
    goto LABEL_7;
  }
  sub_1D5951F00(a1, (uint64_t)&v47);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3708);
  if (swift_dynamicCast())
  {
    sub_1D5950B78(&v37, (uint64_t)&v41);
    uint64_t v23 = __swift_project_boxed_opaque_existential_1(&v41, *((uint64_t *)&v42 + 1));
    MEMORY[0x1F4188790](v23);
    (*(void (**)(char *))(v25 + 16))((char *)&v34 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
    *((void *)&v38 + 1) = swift_getAssociatedTypeWitness();
    *(void *)&v39[0] = swift_getAssociatedConformanceWitness();
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v37);
    sub_1D5AB4F50();
    while (1)
    {
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v37, *((uint64_t *)&v38 + 1));
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t v27 = sub_1D5AB5620();
      uint64_t v28 = *(void *)(v27 - 8);
      MEMORY[0x1F4188790](v27);
      char v30 = (char *)&v34 - v29;
      sub_1D5AB5670();
      uint64_t v31 = *(void *)(AssociatedTypeWitness - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v30, 1, AssociatedTypeWitness) == 1) {
        break;
      }
      uint64_t v46 = AssociatedTypeWitness;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v45);
      (*(void (**)(uint64_t *, char *, uint64_t))(v31 + 32))(boxed_opaque_existential_1, v30, AssociatedTypeWitness);
      sub_1D5979A10(&v45, &v47);
      char v33 = Error.isValidElement(_:)((uint64_t)&v47, a2, a3);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v47);
      if ((v33 & 1) == 0)
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v37);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v41);
        return 0;
      }
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v37);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v41);
  }
  else
  {
    *(void *)&v39[0] = 0;
    long long v38 = 0u;
    long long v37 = 0u;
    sub_1D5A46DF8((uint64_t)&v37);
  }
  return 1;
}

uint64_t Error.isValidElement(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(a2 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](a1);
  uint64_t v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1D5951F00(v8, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3708);
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v10, v3, a2);
    sub_1D5951F00(a1, (uint64_t)v16);
    char v11 = Error.isContainerSanitized(object:)(v16, a2, a3);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v10, a2);
    if ((v11 & 1) == 0) {
      goto LABEL_8;
    }
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v10, v3, a2);
    sub_1D5951F00(a1, (uint64_t)v16);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v10, a2);
  }
  sub_1D5951F00(a1, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE3710);
  if (!swift_dynamicCast())
  {
    sub_1D5951F00(a1, (uint64_t)v17);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
LABEL_8:
    char v13 = 0;
    return v13 & 1;
  }
  swift_unknownObjectRelease();
  sub_1D5951F00(a1, (uint64_t)v17);
  char v12 = sub_1D5A46CA0((uint64_t)v17);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
  char v13 = v12 ^ 1;
  return v13 & 1;
}

uint64_t sub_1D5A46CA0(uint64_t a1)
{
  sub_1D5951F00(a1, (uint64_t)v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3720);
  int v2 = swift_dynamicCast();
  sub_1D5951F00(a1, (uint64_t)v5);
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v5);
    return 1;
  }
  else
  {
    sub_1D5979A10(v5, &v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3728);
    return swift_dynamicCast();
  }
}

uint64_t _ss5ErrorP13SeymourClientE17isObjectSanitized6objectSbyp_tF_0(uint64_t a1)
{
  sub_1D5951F00(a1, (uint64_t)v4);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE3710);
  if (swift_dynamicCast())
  {
    swift_unknownObjectRelease();
    sub_1D5951F00(a1, (uint64_t)v4);
    char v2 = sub_1D5A46CA0((uint64_t)v4) ^ 1;
  }
  else
  {
    sub_1D5951F00(a1, (uint64_t)v4);
    char v2 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
  return v2 & 1;
}

uint64_t sub_1D5A46DF8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727648);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D5A46E58()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t MindfulMinutesMetricUpdated.init(mindfulMinutesMetric:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB35D0();
  unsigned int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

uint64_t MindfulMinutesMetricUpdated.mindfulMinutesMetric.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB35D0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

void static MindfulMinutesMetricUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for MindfulMinutesMetricUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB35D0();
  unsigned int v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for MindfulMinutesMetricUpdated(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB35D0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for MindfulMinutesMetricUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB35D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for MindfulMinutesMetricUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB35D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for MindfulMinutesMetricUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB35D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for MindfulMinutesMetricUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB35D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for MindfulMinutesMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D5A471E8);
}

uint64_t sub_1D5A471E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB35D0();
  unsigned int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MindfulMinutesMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D5A47268);
}

uint64_t sub_1D5A47268(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB35D0();
  unsigned int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MindfulMinutesMetricUpdated()
{
  uint64_t result = qword_1EBDE13A0;
  if (!qword_1EBDE13A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D5A47324()
{
  uint64_t result = sub_1D5AB35D0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void static CatalogMetadataUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for CatalogMetadataUpdated()
{
  return &type metadata for CatalogMetadataUpdated;
}

uint64_t Countdown.applyingTimestampOffset(_:)()
{
  sub_1D5AB4A10();
  return sub_1D5AB4A20();
}

uint64_t sub_1D5A47434()
{
  sub_1D5AB4A10();
  return sub_1D5AB4A20();
}

uint64_t DistanceMetric.applyingTimestampOffset(_:)()
{
  sub_1D5AB2AD0();
  return sub_1D5AB2AE0();
}

uint64_t sub_1D5A474EC()
{
  sub_1D5AB2AD0();
  return sub_1D5AB2AE0();
}

SeymourClient::NetworkInterfaceAvailability_optional __swiftcall NetworkInterfaceAvailability.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1D5AB5A40();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t NetworkInterfaceAvailability.rawValue.getter()
{
  if (*v0) {
    return 0x616C696176616E75;
  }
  else {
    return 0x6C62616C69617661;
  }
}

uint64_t sub_1D5A475F0(char *a1, char *a2)
{
  return sub_1D59B2AA4(*a1, *a2);
}

uint64_t sub_1D5A475FC()
{
  return sub_1D5AB5C60();
}

uint64_t sub_1D5A4768C()
{
  sub_1D5AB4E60();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5A47708()
{
  return sub_1D5AB5C60();
}

SeymourClient::NetworkInterfaceAvailability_optional sub_1D5A47794(Swift::String *a1)
{
  return NetworkInterfaceAvailability.init(rawValue:)(*a1);
}

void sub_1D5A477A0(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6C62616C69617661;
  if (*v1) {
    uint64_t v2 = 0x616C696176616E75;
  }
  unint64_t v3 = 0xE900000000000065;
  if (*v1) {
    unint64_t v3 = 0xEB00000000656C62;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t NetworkInterfaceAvailability.description.getter()
{
  if (*v0) {
    return 0x616C696176616E75;
  }
  else {
    return 0x6C62616C69617661;
  }
}

unint64_t sub_1D5A47838()
{
  unint64_t result = qword_1EA727660;
  if (!qword_1EA727660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA727660);
  }
  return result;
}

uint64_t sub_1D5A4788C()
{
  if (*v0) {
    return 0x616C696176616E75;
  }
  else {
    return 0x6C62616C69617661;
  }
}

unsigned char *storeEnumTagSinglePayload for NetworkInterfaceAvailability(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D5A479A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkInterfaceAvailability()
{
  return &type metadata for NetworkInterfaceAvailability;
}

uint64_t DebounceDelay.__allocating_init(delay:max:callback:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v10 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v10 + 152) = 0;
  *(void *)(v10 + 160) = 0;
  *(double *)(v10 + 112) = a5;
  *(void *)(v10 + 120) = a1;
  *(unsigned char *)(v10 + 128) = a2 & 1;
  *(void *)(v10 + 136) = a3;
  *(void *)(v10 + 144) = a4;
  return v10;
}

uint64_t DebounceDelay.init(delay:max:callback:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, double a5)
{
  swift_defaultActor_initialize();
  *(void *)(v5 + 152) = 0;
  *(void *)(v5 + 160) = 0;
  *(double *)(v5 + 112) = a5;
  *(void *)(v5 + 120) = a1;
  *(unsigned char *)(v5 + 128) = a2 & 1;
  *(void *)(v5 + 136) = a3;
  *(void *)(v5 + 144) = a4;
  return v5;
}

uint64_t sub_1D5A47AC0()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4C10);
  MEMORY[0x1F4188790](v2 - 8);
  unsigned int v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D5AB51C0();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  uint64_t v7 = (void *)swift_allocObject();
  id v7[2] = 0;
  _OWORD v7[3] = 0;
  v7[4] = v1;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_1D59AE9EC((uint64_t)v4);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    sub_1D5AB51B0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = sub_1D5AB5120();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_1EA727670;
  *(void *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1D5A47CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x1F4188298](sub_1D5A47D1C, a4, 0);
}

uint64_t sub_1D5A47D1C()
{
  sub_1D5A47E28();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D5A47D80()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1D5984480;
  v3[2] = v2;
  return MEMORY[0x1F4188298](sub_1D5A47D1C, v2, 0);
}

uint64_t sub_1D5A47E28()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4C10);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(v0 + 152) && (*(unsigned char *)(v0 + 128) & 1) == 0)
  {
    uint64_t v4 = *(void *)(v0 + 120);
    uint64_t v5 = sub_1D5AB51C0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v3, 1, 1, v5);
    unint64_t v6 = sub_1D5A4871C();
    uint64_t v7 = (void *)swift_allocObject();
    id v7[2] = v0;
    _OWORD v7[3] = v6;
    v7[4] = v4;
    v7[5] = v0;
    swift_retain_n();
    *(void *)(v0 + 152) = sub_1D59F48C8((uint64_t)v3, (uint64_t)&unk_1EA7276A0, (uint64_t)v7);
    swift_release();
  }
  if (*(void *)(v0 + 160))
  {
    swift_retain();
    sub_1D5AB5230();
    swift_release();
  }
  uint64_t v8 = *(void *)(v0 + 112);
  uint64_t v9 = sub_1D5AB51C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v3, 1, 1, v9);
  unint64_t v10 = sub_1D5A4871C();
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = v0;
  v11[3] = v10;
  v11[4] = v8;
  v11[5] = v0;
  swift_retain_n();
  *(void *)(v0 + 160) = sub_1D59F48C8((uint64_t)v3, (uint64_t)&unk_1EA727698, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_1D5A48040(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 24) = a5;
  *(double *)(v5 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1D5A48064, 0, 0);
}

uint64_t sub_1D5A48064(unint64_t a1)
{
  double v2 = *(double *)(v1 + 16) * 1000000000.0;
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v2 <= -1.0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v2 >= 1.84467441e19)
  {
LABEL_9:
    __break(1u);
    return MEMORY[0x1F4187DE0](a1);
  }
  unint64_t v3 = (unint64_t)v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 32) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1D5A48148;
  a1 = v3;
  return MEMORY[0x1F4187DE0](a1);
}

uint64_t sub_1D5A48148()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 24);
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0) {
    unint64_t v3 = sub_1D5A482F0;
  }
  else {
    unint64_t v3 = sub_1D5A48270;
  }
  return MEMORY[0x1F4188298](v3, v2, 0);
}

uint64_t sub_1D5A48270()
{
  uint64_t v1 = *(void **)(v0 + 40);
  sub_1D5AB5250();
  if (v1) {

  }
  else {
    sub_1D5A48350();
  }
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1D5A482F0()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D5A48350()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4C10);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1D5AB51C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  unint64_t v5 = sub_1D5A4871C();
  uint64_t v6 = (void *)swift_allocObject();
  long long v6[2] = v0;
  _OWORD v6[3] = v5;
  v6[4] = v0;
  swift_retain_n();
  sub_1D59F48C8((uint64_t)v3, (uint64_t)&unk_1EA727688, (uint64_t)v6);
  swift_release();
  if (*(void *)(v0 + 152))
  {
    swift_retain();
    sub_1D5AB5230();
    swift_release();
  }
  *(void *)(v0 + 152) = 0;
  swift_release();
  if (*(void *)(v0 + 160))
  {
    swift_retain();
    sub_1D5AB5230();
    swift_release();
  }
  *(void *)(v0 + 160) = 0;
  return swift_release();
}

uint64_t sub_1D5A484E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x1F4188298](sub_1D5A48508, a4, 0);
}

uint64_t sub_1D5A48508()
{
  uint64_t v3 = (uint64_t (*)(void))(*(void *)(*(void *)(v0 + 16) + 136) + **(int **)(*(void *)(v0 + 16) + 136));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1D5959284;
  return v3();
}

uint64_t DebounceDelay.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t DebounceDelay.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_defaultActor_destroy();
  return MEMORY[0x1F4188210](v0);
}

uint64_t DebounceDelay.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_1D5A48660()
{
  return v0;
}

uint64_t sub_1D5A4866C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t type metadata accessor for DebounceDelay()
{
  return self;
}

uint64_t method lookup function for DebounceDelay(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DebounceDelay);
}

uint64_t dispatch thunk of DebounceDelay.__allocating_init(delay:max:callback:)(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(v2 + 176))(a1, a2 & 1);
}

uint64_t dispatch thunk of DebounceDelay.poke()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

unint64_t sub_1D5A4871C()
{
  unint64_t result = qword_1EBDE1540;
  if (!qword_1EBDE1540)
  {
    type metadata accessor for DebounceDelay();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE1540);
  }
  return result;
}

uint64_t sub_1D5A48774()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1D598AF68;
  v3[2] = v2;
  return MEMORY[0x1F4188298](sub_1D5A48508, v2, 0);
}

uint64_t sub_1D5A48820()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1D598AF68;
  v4[3] = v3;
  v4[2] = v2;
  return MEMORY[0x1F4188298](sub_1D5A48064, 0, 0);
}

uint64_t objectdestroy_20Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t PlaybackInformationUpdated.duration.getter()
{
  return *(void *)v0;
}

uint64_t PlaybackInformationUpdated.elapsedTime.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t PlaybackInformationUpdated.itemAlbumTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_1D5A48984(v1, *(void *)(v0 + 40));
  return v1;
}

uint64_t sub_1D5A48984(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t PlaybackInformationUpdated.itemArtist.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  sub_1D5A48984(v1, *(void *)(v0 + 56));
  return v1;
}

uint64_t PlaybackInformationUpdated.itemArtwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlaybackInformationUpdated() + 32);
  return sub_1D5A48A5C(v3, a1);
}

uint64_t type metadata accessor for PlaybackInformationUpdated()
{
  uint64_t result = qword_1EA7276B0;
  if (!qword_1EA7276B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D5A48A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7276A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t PlaybackInformationUpdated.itemTitle.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for PlaybackInformationUpdated() + 36));
  uint64_t v2 = *v1;
  sub_1D5A48984(*v1, v1[1]);
  return v2;
}

uint64_t PlaybackInformationUpdated.playbackRate.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for PlaybackInformationUpdated() + 40));
}

uint64_t PlaybackInformationUpdated.init(duration:elapsedTime:itemAlbumTitle:itemArtist:itemArtwork:itemTitle:playbackRate:)@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, __int16 a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, char a15)
{
  *(void *)a9 = a1;
  *(unsigned char *)(a9 + 8) = a2;
  *(unsigned char *)(a9 + 9) = HIBYTE(a2) & 1;
  *(void *)(a9 + 16) = a3;
  *(unsigned char *)(a9 + 24) = a4;
  *(unsigned char *)(a9 + 25) = HIBYTE(a4) & 1;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  int64_t v16 = (int *)type metadata accessor for PlaybackInformationUpdated();
  uint64_t result = sub_1D5A48BF0(a10, a9 + v16[8]);
  int64_t v18 = (void *)(a9 + v16[9]);
  *int64_t v18 = a11;
  v18[1] = a12;
  uint64_t v19 = a9 + v16[10];
  *(void *)uint64_t v19 = a13;
  *(unsigned char *)(v19 + 8) = a14;
  *(unsigned char *)(v19 + 9) = a15 & 1;
  return result;
}

uint64_t sub_1D5A48BF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7276A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void static PlaybackInformationUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for PlaybackInformationUpdated(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(_WORD *)(a1 + 8) = *((_WORD *)a2 + 4);
    *(void *)(a1 + 16) = a2[2];
    *(_WORD *)(a1 + 24) = *((_WORD *)a2 + 12);
    uint64_t v7 = a2 + 4;
    uint64_t v8 = a2[5];
    if (v8 == 1)
    {
      *(_OWORD *)(v4 + 32) = *v7;
    }
    else
    {
      *(void *)(v4 + 32) = *(void *)v7;
      *(void *)(v4 + 40) = v8;
      swift_bridgeObjectRetain();
    }
    unint64_t v10 = a2 + 6;
    uint64_t v11 = a2[7];
    if (v11 == 1)
    {
      *(_OWORD *)(v4 + 48) = *v10;
    }
    else
    {
      *(void *)(v4 + 48) = *(void *)v10;
      *(void *)(v4 + 56) = v11;
      swift_bridgeObjectRetain();
    }
    uint64_t v12 = a3[8];
    uint64_t v13 = (void *)(v4 + v12);
    unint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3358);
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7276A8);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      uint64_t v18 = sub_1D5AB4530();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v14, 1, v18))
      {
        memcpy(v13, v14, *(void *)(v16 + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v19 + 16))(v13, v14, v18);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v13, 0, 1, v18);
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    uint64_t v20 = a3[9];
    uint64_t v21 = v4 + v20;
    uint64_t v22 = (uint64_t)a2 + v20;
    uint64_t v23 = *(void *)(v22 + 8);
    if (v23 == 1)
    {
      *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
    }
    else
    {
      *(void *)uint64_t v21 = *(void *)v22;
      *(void *)(v21 + 8) = v23;
      swift_bridgeObjectRetain();
    }
    uint64_t v24 = a3[10];
    uint64_t v25 = v4 + v24;
    uint64_t v26 = (uint64_t)a2 + v24;
    *(void *)uint64_t v25 = *(void *)v26;
    *(_WORD *)(v25 + 8) = *(_WORD *)(v26 + 8);
  }
  return v4;
}

uint64_t destroy for PlaybackInformationUpdated(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 40) != 1) {
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 56) != 1) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3358);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    uint64_t v6 = sub_1D5AB4530();
    uint64_t v7 = *(void *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
    }
  }
  uint64_t result = *(void *)(a1 + *(int *)(a2 + 36) + 8);
  if (result != 1)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for PlaybackInformationUpdated(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  uint64_t v6 = (_OWORD *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  if (v7 == 1)
  {
    *(_OWORD *)(a1 + 32) = *v6;
  }
  else
  {
    *(void *)(a1 + 32) = *(void *)v6;
    *(void *)(a1 + 40) = v7;
    swift_bridgeObjectRetain();
  }
  uint64_t v8 = (_OWORD *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 56);
  if (v9 == 1)
  {
    *(_OWORD *)(a1 + 48) = *v8;
  }
  else
  {
    *(void *)(a1 + 48) = *(void *)v8;
    *(void *)(a1 + 56) = v9;
    swift_bridgeObjectRetain();
  }
  uint64_t v10 = a3[8];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3358);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7276A8);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    uint64_t v16 = sub_1D5AB4530();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v12, 1, v16))
    {
      memcpy(v11, v12, *(void *)(v14 + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(v11, v12, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v11, 0, 1, v16);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v18 = a3[9];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = *(void *)(v20 + 8);
  if (v21 == 1)
  {
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  }
  else
  {
    *(void *)uint64_t v19 = *(void *)v20;
    *(void *)(v19 + 8) = v21;
    swift_bridgeObjectRetain();
  }
  uint64_t v22 = a3[10];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  *(void *)uint64_t v23 = *(void *)v24;
  *(_WORD *)(v23 + 8) = *(_WORD *)(v24 + 8);
  return a1;
}

uint64_t assignWithCopy for PlaybackInformationUpdated(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  *(_WORD *)(a1 + 8) = *((_WORD *)a2 + 4);
  *(void *)a1 = v6;
  uint64_t v7 = a2[2];
  *(_WORD *)(a1 + 24) = *((_WORD *)a2 + 12);
  *(void *)(a1 + 16) = v7;
  uint64_t v8 = (_OWORD *)(a1 + 32);
  uint64_t v9 = a2 + 4;
  uint64_t v10 = a2[5];
  if (*(void *)(a1 + 40) == 1)
  {
    if (v10 != 1)
    {
      *(void *)(a1 + 32) = a2[4];
      *(void *)(a1 + 40) = a2[5];
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v10 == 1)
  {
    sub_1D594F53C(a1 + 32, &qword_1EBDE1030);
LABEL_6:
    *uint64_t v8 = *v9;
    goto LABEL_8;
  }
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  uint64_t v11 = a2[7];
  if (*(void *)(a1 + 56) == 1)
  {
    if (v11 != 1)
    {
      *(void *)(a1 + 48) = a2[6];
      *(void *)(a1 + 56) = a2[7];
      swift_bridgeObjectRetain();
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v11 == 1)
  {
    sub_1D594F53C(a1 + 48, &qword_1EBDE1030);
LABEL_13:
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    goto LABEL_15;
  }
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_15:
  uint64_t v12 = a3[8];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3358);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      uint64_t v23 = sub_1D5AB4530();
      uint64_t v37 = *(void *)(v23 - 8);
      uint64_t v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v37 + 48);
      int v25 = v24(v13, 1, v23);
      int v26 = v24(v14, 1, v23);
      if (v25)
      {
        if (!v26)
        {
          (*(void (**)(void *, char *, uint64_t))(v37 + 16))(v13, v14, v23);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v37 + 56))(v13, 0, 1, v23);
          goto LABEL_28;
        }
      }
      else
      {
        if (!v26)
        {
          (*(void (**)(void *, char *, uint64_t))(v37 + 24))(v13, v14, v23);
          goto LABEL_28;
        }
        (*(void (**)(void *, uint64_t))(v37 + 8))(v13, v23);
      }
      size_t v22 = *(void *)(v16 + 64);
LABEL_22:
      memcpy(v13, v14, v22);
      goto LABEL_28;
    }
    sub_1D594F53C((uint64_t)v13, &qword_1EBDE3358);
LABEL_21:
    size_t v22 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA7276A8) - 8) + 64);
    goto LABEL_22;
  }
  if (v19) {
    goto LABEL_21;
  }
  uint64_t v20 = sub_1D5AB4530();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v14, 1, v20))
  {
    memcpy(v13, v14, *(void *)(v16 + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v21 + 16))(v13, v14, v20);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v13, 0, 1, v20);
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_28:
  uint64_t v27 = a3[9];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (uint64_t *)((char *)a2 + v27);
  uint64_t v30 = *(void *)(a1 + v27 + 8);
  uint64_t v31 = *(uint64_t *)((char *)a2 + v27 + 8);
  if (v30 != 1)
  {
    if (v31 != 1)
    {
      *uint64_t v28 = *v29;
      v28[1] = v29[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    sub_1D594F53C((uint64_t)v28, &qword_1EBDE1030);
    goto LABEL_33;
  }
  if (v31 == 1)
  {
LABEL_33:
    *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
    goto LABEL_35;
  }
  *uint64_t v28 = *v29;
  v28[1] = v29[1];
  swift_bridgeObjectRetain();
LABEL_35:
  uint64_t v32 = a3[10];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = (uint64_t *)((char *)a2 + v32);
  uint64_t v35 = *v34;
  *(_WORD *)(v33 + 8) = *((_WORD *)v34 + 4);
  *(void *)uint64_t v33 = v35;
  return a1;
}

uint64_t initializeWithTake for PlaybackInformationUpdated(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  long long v6 = *(_OWORD *)(a2 + 48);
  uint64_t v7 = a3[8];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3358);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7276A8);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v13 = sub_1D5AB4530();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13))
    {
      memcpy(v8, v9, *(void *)(v11 + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v8, v9, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v15 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(void *)uint64_t v16 = *(void *)v17;
  *(_WORD *)(v16 + 8) = *(_WORD *)(v17 + 8);
  return a1;
}

uint64_t assignWithTake for PlaybackInformationUpdated(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  long long v6 = (_OWORD *)(a1 + 32);
  uint64_t v7 = (_OWORD *)(a2 + 32);
  if (*(void *)(a1 + 40) == 1) {
    goto LABEL_4;
  }
  uint64_t v8 = *(void *)(a2 + 40);
  if (v8 == 1)
  {
    sub_1D594F53C((uint64_t)v6, &qword_1EBDE1030);
LABEL_4:
    *long long v6 = *v7;
    goto LABEL_6;
  }
  *(void *)(a1 + 32) = *(void *)v7;
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v9 = (_OWORD *)(a2 + 48);
  if (*(void *)(a1 + 56) == 1)
  {
LABEL_9:
    *(_OWORD *)(a1 + 48) = *v9;
    goto LABEL_11;
  }
  uint64_t v10 = *(void *)(a2 + 56);
  if (v10 == 1)
  {
    sub_1D594F53C(a1 + 48, &qword_1EBDE1030);
    goto LABEL_9;
  }
  *(void *)(a1 + 48) = *(void *)v9;
  *(void *)(a1 + 56) = v10;
  swift_bridgeObjectRelease();
LABEL_11:
  uint64_t v11 = a3[8];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3358);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      uint64_t v22 = sub_1D5AB4530();
      uint64_t v34 = *(void *)(v22 - 8);
      uint64_t v23 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v34 + 48);
      int v24 = v23(v12, 1, v22);
      int v25 = v23(v13, 1, v22);
      if (v24)
      {
        if (!v25)
        {
          (*(void (**)(void *, void *, uint64_t))(v34 + 32))(v12, v13, v22);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(v12, 0, 1, v22);
          goto LABEL_24;
        }
      }
      else
      {
        if (!v25)
        {
          (*(void (**)(void *, void *, uint64_t))(v34 + 40))(v12, v13, v22);
          goto LABEL_24;
        }
        (*(void (**)(void *, uint64_t))(v34 + 8))(v12, v22);
      }
      size_t v21 = *(void *)(v15 + 64);
LABEL_18:
      memcpy(v12, v13, v21);
      goto LABEL_24;
    }
    sub_1D594F53C((uint64_t)v12, &qword_1EBDE3358);
LABEL_17:
    size_t v21 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA7276A8) - 8) + 64);
    goto LABEL_18;
  }
  if (v18) {
    goto LABEL_17;
  }
  uint64_t v19 = sub_1D5AB4530();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v20 + 48))(v13, 1, v19))
  {
    memcpy(v12, v13, *(void *)(v15 + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v20 + 32))(v12, v13, v19);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v12, 0, 1, v19);
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_24:
  uint64_t v26 = a3[9];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (void *)(a2 + v26);
  if (*(void *)(a1 + v26 + 8) != 1)
  {
    uint64_t v29 = v28[1];
    if (v29 != 1)
    {
      *uint64_t v27 = *v28;
      v27[1] = v29;
      swift_bridgeObjectRelease();
      goto LABEL_29;
    }
    sub_1D594F53C((uint64_t)v27, &qword_1EBDE1030);
  }
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
LABEL_29:
  uint64_t v30 = a3[10];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  *(void *)uint64_t v31 = *(void *)v32;
  *(_WORD *)(v31 + 8) = *(_WORD *)(v32 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaybackInformationUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D5A49ECC);
}

uint64_t sub_1D5A49ECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483645)
  {
    unint64_t v4 = *(void *)(a1 + 40);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 - 1) & ~(((int)v4 - 1) >> 31);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7276A8);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PlaybackInformationUpdated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D5A49F9C);
}

uint64_t sub_1D5A49F9C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483645)
  {
    *(void *)(result + 40) = (a2 + 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7276A8);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1D5A4A04C()
{
  sub_1D5A4A0FC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1D5A4A0FC()
{
  if (!qword_1EA7276C0[0])
  {
    sub_1D5AB4530();
    unint64_t v0 = type metadata accessor for PlaybackInformationUpdated.InfoType();
    if (!v1) {
      atomic_store(v0, qword_1EA7276C0);
    }
  }
}

uint64_t type metadata accessor for PlaybackInformationUpdated.InfoType()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1D5A4A16C()
{
  uint64_t result = sub_1D5AB5620();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void *sub_1D5A4A1E8(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7) {
    size_t v8 = *(void *)(v6 + 64);
  }
  else {
    size_t v8 = *(void *)(v6 + 64) + 1;
  }
  if (v7 >= 2) {
    size_t v9 = v8;
  }
  else {
    size_t v9 = v8 + 1;
  }
  uint64_t v10 = *(_DWORD *)(v6 + 80);
  if (v10 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v9 > 0x18)
  {
    uint64_t v13 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v13 + ((v10 + 16) & ~v10));
    swift_retain();
  }
  else
  {
    if (v7 > 1)
    {
      if ((*(unsigned int (**)(unsigned __int8 *, void, uint64_t))(v6 + 48))(a2, *(unsigned int *)(v6 + 84), v5) >= 2)
      {
LABEL_37:
        memcpy(a1, a2, v9);
        return a1;
      }
    }
    else if (a2[v8])
    {
      int v14 = (a2[v8] - 1) << (8 * v8);
      if (v8 > 3) {
        int v14 = 0;
      }
      if (v8)
      {
        int v15 = v8 <= 3 ? v8 : 4;
        switch(v15)
        {
          case 2:
            int v16 = *(unsigned __int16 *)a2;
            break;
          case 3:
            int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            break;
          case 4:
            int v16 = *(_DWORD *)a2;
            break;
          default:
            int v16 = *a2;
            break;
        }
      }
      else
      {
        int v16 = 0;
      }
      if ((v16 | v14) != 0xFFFFFFFF) {
        goto LABEL_37;
      }
    }
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
    {
      memcpy(a1, a2, v8);
      if (v7 > 1) {
        return a1;
      }
      goto LABEL_31;
    }
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    if (v7 <= 1) {
LABEL_31:
    }
      *((unsigned char *)a1 + v8) = 0;
  }
  return a1;
}

unsigned __int16 *sub_1D5A4A424(unsigned __int16 *result, uint64_t a2)
{
  uint64_t v2 = result;
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (v5) {
    uint64_t v6 = *(void *)(v4 + 64);
  }
  else {
    uint64_t v6 = *(void *)(v4 + 64) + 1;
  }
  uint64_t v9 = *(void *)(v3 - 8);
  if (v5 > 1)
  {
    uint64_t result = (unsigned __int16 *)(*(uint64_t (**)(unsigned __int16 *))(v4 + 48))(result);
    uint64_t v4 = v9;
    if (result >= 2) {
      return result;
    }
    goto LABEL_19;
  }
  if (!*((unsigned char *)result + v6)) {
    goto LABEL_19;
  }
  int v7 = (*((unsigned __int8 *)result + v6) - 1) << (8 * v6);
  if (v6 > 3) {
    int v7 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *result;
        break;
      case 3:
        LODWORD(v6) = *result | (*((unsigned __int8 *)result + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)result;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)result;
        break;
    }
  }
  if ((v6 | v7) == 0xFFFFFFFF)
  {
LABEL_19:
    uint64_t result = (unsigned __int16 *)(*(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
    if (!result)
    {
      size_t v8 = *(uint64_t (**)(unsigned __int16 *, uint64_t))(v9 + 8);
      return (unsigned __int16 *)v8(v2, v3);
    }
  }
  return result;
}

void *sub_1D5A4A5C4(void *a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7) {
    size_t v8 = *(void *)(v6 + 64);
  }
  else {
    size_t v8 = *(void *)(v6 + 64) + 1;
  }
  if (v7 <= 1)
  {
    if (*((unsigned char *)a2 + v8))
    {
      int v9 = (*((unsigned __int8 *)a2 + v8) - 1) << (8 * v8);
      if (v8 > 3) {
        int v9 = 0;
      }
      if (v8)
      {
        int v10 = v8 <= 3 ? v8 : 4;
        switch(v10)
        {
          case 2:
            int v11 = *a2;
            break;
          case 3:
            int v11 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
            break;
          case 4:
            int v11 = *(_DWORD *)a2;
            break;
          default:
            int v11 = *(unsigned __int8 *)a2;
            break;
        }
      }
      else
      {
        int v11 = 0;
      }
      if ((v11 | v9) != 0xFFFFFFFF) {
        goto LABEL_25;
      }
    }
LABEL_15:
    if ((*(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
    {
      memcpy(a1, a2, v8);
      if (v7 > 1) {
        return a1;
      }
    }
    else
    {
      (*(void (**)(void *, unsigned __int16 *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      if (v7 > 1) {
        return a1;
      }
    }
    *((unsigned char *)a1 + v8) = 0;
    return a1;
  }
  if ((*(unsigned int (**)(unsigned __int16 *, void, uint64_t))(v6 + 48))(a2, *(unsigned int *)(v6 + 84), v5) < 2)goto LABEL_15; {
LABEL_25:
  }
  if (v7 >= 2) {
    size_t v12 = v8;
  }
  else {
    size_t v12 = v8 + 1;
  }
  memcpy(a1, a2, v12);
  return a1;
}

unsigned __int16 *sub_1D5A4A7BC(unsigned __int16 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  if (v7) {
    size_t v8 = *(void *)(v6 + 64);
  }
  else {
    size_t v8 = *(void *)(v6 + 64) + 1;
  }
  if (v7 <= 1)
  {
    char v9 = 8 * v8;
    if (*((unsigned char *)a1 + v8))
    {
      int v10 = (*((unsigned __int8 *)a1 + v8) - 1) << v9;
      if (v8 > 3) {
        int v10 = 0;
      }
      if (v8)
      {
        int v11 = v8 <= 3 ? v8 : 4;
        switch(v11)
        {
          case 2:
            int v12 = *a1;
            break;
          case 3:
            int v12 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v12 = *(_DWORD *)a1;
            break;
          default:
            int v12 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v12 = 0;
      }
      if ((v12 | v10) != 0xFFFFFFFF)
      {
        if (a2[v8])
        {
          int v16 = (a2[v8] - 1) << v9;
          if (v8 > 3) {
            int v16 = 0;
          }
          if (v8)
          {
            int v17 = v8 <= 3 ? v8 : 4;
            switch(v17)
            {
              case 2:
                int v18 = *(unsigned __int16 *)a2;
                break;
              case 3:
                int v18 = *(unsigned __int16 *)a2 | (a2[2] << 16);
                break;
              case 4:
                int v18 = *(_DWORD *)a2;
                break;
              default:
                int v18 = *a2;
                break;
            }
          }
          else
          {
            int v18 = 0;
          }
          if ((v18 | v16) != 0xFFFFFFFF) {
            goto LABEL_62;
          }
        }
LABEL_66:
        if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
        {
          memcpy(a1, a2, v8);
          if (v7 > 1) {
            return a1;
          }
        }
        else
        {
          (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
          (*(void (**)(unsigned __int16 *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
          if (v7 > 1) {
            return a1;
          }
        }
        *((unsigned char *)a1 + v8) = 0;
        return a1;
      }
    }
    if (a2[v8])
    {
      int v19 = (a2[v8] - 1) << v9;
      if (v8 > 3) {
        int v19 = 0;
      }
      if (v8)
      {
        int v20 = v8 <= 3 ? v8 : 4;
        switch(v20)
        {
          case 2:
            int v21 = *(unsigned __int16 *)a2;
            break;
          case 3:
            int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            break;
          case 4:
            int v21 = *(_DWORD *)a2;
            break;
          default:
            int v21 = *a2;
            break;
        }
      }
      else
      {
        int v21 = 0;
      }
      if ((v21 | v19) != 0xFFFFFFFF)
      {
        uint64_t v13 = *(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
LABEL_49:
        if (!v13(a1, 1, v5)) {
          (*(void (**)(unsigned __int16 *, uint64_t))(v6 + 8))(a1, v5);
        }
        goto LABEL_62;
      }
    }
LABEL_51:
    uint64_t v22 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
    int v23 = v22(a1, 1, v5);
    int v24 = v22((unsigned __int16 *)a2, 1, v5);
    if (v23)
    {
      if (!v24)
      {
        (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
        (*(void (**)(unsigned __int16 *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
        return a1;
      }
    }
    else
    {
      if (!v24)
      {
        (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v6 + 24))(a1, a2, v5);
        return a1;
      }
      (*(void (**)(unsigned __int16 *, uint64_t))(v6 + 8))(a1, v5);
    }
    memcpy(a1, a2, v8);
    return a1;
  }
  uint64_t v13 = *(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
  unsigned int v14 = v13(a1, *(unsigned int *)(v6 + 84), v5);
  unsigned int v15 = v13((unsigned __int16 *)a2, v7, v5);
  if (v14 < 2)
  {
    if (v15 >= 2) {
      goto LABEL_49;
    }
    goto LABEL_51;
  }
  if (v15 < 2) {
    goto LABEL_66;
  }
LABEL_62:
  if (v7 >= 2) {
    size_t v25 = v8;
  }
  else {
    size_t v25 = v8 + 1;
  }
  memcpy(a1, a2, v25);
  return a1;
}

void *sub_1D5A4AC34(void *a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7) {
    size_t v8 = *(void *)(v6 + 64);
  }
  else {
    size_t v8 = *(void *)(v6 + 64) + 1;
  }
  if (v7 <= 1)
  {
    if (*((unsigned char *)a2 + v8))
    {
      int v9 = (*((unsigned __int8 *)a2 + v8) - 1) << (8 * v8);
      if (v8 > 3) {
        int v9 = 0;
      }
      if (v8)
      {
        int v10 = v8 <= 3 ? v8 : 4;
        switch(v10)
        {
          case 2:
            int v11 = *a2;
            break;
          case 3:
            int v11 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
            break;
          case 4:
            int v11 = *(_DWORD *)a2;
            break;
          default:
            int v11 = *(unsigned __int8 *)a2;
            break;
        }
      }
      else
      {
        int v11 = 0;
      }
      if ((v11 | v9) != 0xFFFFFFFF) {
        goto LABEL_25;
      }
    }
LABEL_15:
    if ((*(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
    {
      memcpy(a1, a2, v8);
      if (v7 > 1) {
        return a1;
      }
    }
    else
    {
      (*(void (**)(void *, unsigned __int16 *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      if (v7 > 1) {
        return a1;
      }
    }
    *((unsigned char *)a1 + v8) = 0;
    return a1;
  }
  if ((*(unsigned int (**)(unsigned __int16 *, void, uint64_t))(v6 + 48))(a2, *(unsigned int *)(v6 + 84), v5) < 2)goto LABEL_15; {
LABEL_25:
  }
  if (v7 >= 2) {
    size_t v12 = v8;
  }
  else {
    size_t v12 = v8 + 1;
  }
  memcpy(a1, a2, v12);
  return a1;
}

unsigned __int16 *sub_1D5A4AE2C(unsigned __int16 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  if (v7) {
    size_t v8 = *(void *)(v6 + 64);
  }
  else {
    size_t v8 = *(void *)(v6 + 64) + 1;
  }
  if (v7 <= 1)
  {
    char v9 = 8 * v8;
    if (*((unsigned char *)a1 + v8))
    {
      int v10 = (*((unsigned __int8 *)a1 + v8) - 1) << v9;
      if (v8 > 3) {
        int v10 = 0;
      }
      if (v8)
      {
        int v11 = v8 <= 3 ? v8 : 4;
        switch(v11)
        {
          case 2:
            int v12 = *a1;
            break;
          case 3:
            int v12 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v12 = *(_DWORD *)a1;
            break;
          default:
            int v12 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v12 = 0;
      }
      if ((v12 | v10) != 0xFFFFFFFF)
      {
        if (a2[v8])
        {
          int v16 = (a2[v8] - 1) << v9;
          if (v8 > 3) {
            int v16 = 0;
          }
          if (v8)
          {
            int v17 = v8 <= 3 ? v8 : 4;
            switch(v17)
            {
              case 2:
                int v18 = *(unsigned __int16 *)a2;
                break;
              case 3:
                int v18 = *(unsigned __int16 *)a2 | (a2[2] << 16);
                break;
              case 4:
                int v18 = *(_DWORD *)a2;
                break;
              default:
                int v18 = *a2;
                break;
            }
          }
          else
          {
            int v18 = 0;
          }
          if ((v18 | v16) != 0xFFFFFFFF) {
            goto LABEL_62;
          }
        }
LABEL_66:
        if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
        {
          memcpy(a1, a2, v8);
          if (v7 > 1) {
            return a1;
          }
        }
        else
        {
          (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
          (*(void (**)(unsigned __int16 *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
          if (v7 > 1) {
            return a1;
          }
        }
        *((unsigned char *)a1 + v8) = 0;
        return a1;
      }
    }
    if (a2[v8])
    {
      int v19 = (a2[v8] - 1) << v9;
      if (v8 > 3) {
        int v19 = 0;
      }
      if (v8)
      {
        int v20 = v8 <= 3 ? v8 : 4;
        switch(v20)
        {
          case 2:
            int v21 = *(unsigned __int16 *)a2;
            break;
          case 3:
            int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            break;
          case 4:
            int v21 = *(_DWORD *)a2;
            break;
          default:
            int v21 = *a2;
            break;
        }
      }
      else
      {
        int v21 = 0;
      }
      if ((v21 | v19) != 0xFFFFFFFF)
      {
        uint64_t v13 = *(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
LABEL_49:
        if (!v13(a1, 1, v5)) {
          (*(void (**)(unsigned __int16 *, uint64_t))(v6 + 8))(a1, v5);
        }
        goto LABEL_62;
      }
    }
LABEL_51:
    uint64_t v22 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
    int v23 = v22(a1, 1, v5);
    int v24 = v22((unsigned __int16 *)a2, 1, v5);
    if (v23)
    {
      if (!v24)
      {
        (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
        (*(void (**)(unsigned __int16 *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
        return a1;
      }
    }
    else
    {
      if (!v24)
      {
        (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v6 + 40))(a1, a2, v5);
        return a1;
      }
      (*(void (**)(unsigned __int16 *, uint64_t))(v6 + 8))(a1, v5);
    }
    memcpy(a1, a2, v8);
    return a1;
  }
  uint64_t v13 = *(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
  unsigned int v14 = v13(a1, *(unsigned int *)(v6 + 84), v5);
  unsigned int v15 = v13((unsigned __int16 *)a2, v7, v5);
  if (v14 < 2)
  {
    if (v15 >= 2) {
      goto LABEL_49;
    }
    goto LABEL_51;
  }
  if (v15 < 2) {
    goto LABEL_66;
  }
LABEL_62:
  if (v7 >= 2) {
    size_t v25 = v8;
  }
  else {
    size_t v25 = v8 + 1;
  }
  memcpy(a1, a2, v25);
  return a1;
}

uint64_t sub_1D5A4B2A4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  unsigned int v6 = v5 - 1;
  if (!v5) {
    unsigned int v6 = 0;
  }
  unsigned int v7 = v6 - 1;
  uint64_t v8 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!v5) {
    ++v8;
  }
  if (v5 < 2)
  {
    unsigned int v7 = 0;
    ++v8;
  }
  if (!a2) {
    return 0;
  }
  int v9 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_27;
  }
  char v10 = 8 * v8;
  if (v8 > 3) {
    goto LABEL_10;
  }
  unsigned int v12 = ((v9 + ~(-1 << v10)) >> v10) + 1;
  if (HIWORD(v12))
  {
    int v11 = *(_DWORD *)((char *)a1 + v8);
    if (v11) {
      goto LABEL_17;
    }
  }
  else
  {
    if (v12 <= 0xFF)
    {
      if (v12 < 2) {
        goto LABEL_27;
      }
LABEL_10:
      int v11 = *((unsigned __int8 *)a1 + v8);
      if (!*((unsigned char *)a1 + v8)) {
        goto LABEL_27;
      }
LABEL_17:
      int v13 = (v11 - 1) << v10;
      if (v8 > 3) {
        int v13 = 0;
      }
      if (v8)
      {
        if (v8 <= 3) {
          int v14 = v8;
        }
        else {
          int v14 = 4;
        }
        switch(v14)
        {
          case 2:
            int v15 = *a1;
            break;
          case 3:
            int v15 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v15 = *(_DWORD *)a1;
            break;
          default:
            int v15 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v15 = 0;
      }
      return v7 + (v15 | v13) + 1;
    }
    int v11 = *(unsigned __int16 *)((char *)a1 + v8);
    if (*(unsigned __int16 *)((char *)a1 + v8)) {
      goto LABEL_17;
    }
  }
LABEL_27:
  if (!v7) {
    return 0;
  }
  if (v5 < 2) {
    return 0;
  }
  unsigned int v16 = (*(uint64_t (**)(void))(v4 + 48))();
  BOOL v17 = v16 >= 2;
  uint64_t result = v16 - 2;
  if (result == 0 || !v17) {
    return 0;
  }
  return result;
}

void sub_1D5A4B44C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  if (v8) {
    unsigned int v9 = v8 - 1;
  }
  else {
    unsigned int v9 = 0;
  }
  size_t v10 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (!v8) {
    ++v10;
  }
  if (v8 >= 2) {
    unsigned int v11 = v9 - 1;
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8 >= 2) {
    size_t v12 = v10;
  }
  else {
    size_t v12 = v10 + 1;
  }
  BOOL v13 = a3 >= v11;
  unsigned int v14 = a3 - v11;
  if (v14 == 0 || !v13)
  {
LABEL_21:
    if (v11 < a2) {
      goto LABEL_22;
    }
    goto LABEL_29;
  }
  if (v12 > 3)
  {
    int v6 = 1;
    if (v11 < a2) {
      goto LABEL_22;
    }
    goto LABEL_29;
  }
  unsigned int v15 = ((v14 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
  if (!HIWORD(v15))
  {
    if (v15 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v15 > 1;
    }
    goto LABEL_21;
  }
  int v6 = 4;
  if (v11 < a2)
  {
LABEL_22:
    unsigned int v16 = ~v11 + a2;
    if (v12 < 4)
    {
      int v17 = (v16 >> (8 * v12)) + 1;
      if (v12)
      {
        int v18 = v16 & ~(-1 << (8 * v12));
        bzero(a1, v12);
        if (v12 == 3)
        {
          *(_WORD *)a1 = v18;
          a1[2] = BYTE2(v18);
        }
        else if (v12 == 2)
        {
          *(_WORD *)a1 = v18;
        }
        else
        {
          *a1 = v18;
        }
      }
    }
    else
    {
      bzero(a1, v12);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v12] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v12] = v17;
        return;
      case 3:
        goto LABEL_61;
      case 4:
        *(_DWORD *)&a1[v12] = v17;
        return;
      default:
        return;
    }
  }
LABEL_29:
  switch(v6)
  {
    case 1:
      a1[v12] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_34;
    case 2:
      *(_WORD *)&a1[v12] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_34;
    case 3:
LABEL_61:
      __break(1u);
      JUMPOUT(0x1D5A4B72CLL);
    case 4:
      *(_DWORD *)&a1[v12] = 0;
      goto LABEL_33;
    default:
LABEL_33:
      if (a2)
      {
LABEL_34:
        if (a2 + 1 <= v9)
        {
          if (a2 != -1 && v8 >= 2)
          {
            uint64_t v22 = *(void (**)(void))(v7 + 56);
            v22();
          }
        }
        else
        {
          if (v10 <= 3) {
            int v19 = ~(-1 << (8 * v10));
          }
          else {
            int v19 = -1;
          }
          if (v10)
          {
            int v20 = v19 & (a2 - v9);
            if (v10 <= 3) {
              int v21 = v10;
            }
            else {
              int v21 = 4;
            }
            bzero(a1, v10);
            switch(v21)
            {
              case 2:
                *(_WORD *)a1 = v20;
                break;
              case 3:
                *(_WORD *)a1 = v20;
                a1[2] = BYTE2(v20);
                break;
              case 4:
                *(_DWORD *)a1 = v20;
                break;
              default:
                *a1 = v20;
                break;
            }
          }
        }
      }
      return;
  }
}

uint64_t sub_1D5A4B764(unsigned __int16 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  unsigned int v3 = *(_DWORD *)(v2 + 84);
  if (v3) {
    uint64_t v4 = *(void *)(v2 + 64);
  }
  else {
    uint64_t v4 = *(void *)(v2 + 64) + 1;
  }
  if (v3 > 1)
  {
    unsigned int v6 = (*(uint64_t (**)(void))(v2 + 48))();
    if (v6 >= 2) {
      return v6 - 1;
    }
    else {
      return 0;
    }
  }
  else if (*((unsigned char *)a1 + v4))
  {
    int v5 = (*((unsigned __int8 *)a1 + v4) - 1) << (8 * v4);
    if (v4 > 3) {
      int v5 = 0;
    }
    if (v4)
    {
      if (v4 > 3) {
        LODWORD(v4) = 4;
      }
      switch((int)v4)
      {
        case 2:
          LODWORD(v4) = *a1;
          break;
        case 3:
          LODWORD(v4) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          LODWORD(v4) = *(_DWORD *)a1;
          break;
        default:
          LODWORD(v4) = *(unsigned __int8 *)a1;
          break;
      }
    }
    return (v4 | v5) + 1;
  }
  else
  {
    return 0;
  }
}

void sub_1D5A4B890(unsigned int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(unsigned int *)(v4 + 84);
  unsigned int v6 = v5 - 1;
  if (v5)
  {
    size_t v7 = *(void *)(v4 + 64);
  }
  else
  {
    unsigned int v6 = 0;
    size_t v7 = *(void *)(v4 + 64) + 1;
  }
  if (v6 < a2)
  {
    unsigned int v8 = ~v6 + a2;
    if (v7 >= 4)
    {
      bzero(a1, v7);
      *a1 = v8;
      LOBYTE(v9) = 1;
      if (v5 > 1) {
        return;
      }
LABEL_21:
      *((unsigned char *)a1 + v7) = v9;
      return;
    }
    int v9 = (v8 >> (8 * v7)) + 1;
    if (v7)
    {
      int v10 = v8 & ~(-1 << (8 * v7));
      bzero(a1, v7);
      if (v7 != 3)
      {
        if (v7 == 2)
        {
          *(_WORD *)a1 = v10;
          if (v5 > 1) {
            return;
          }
        }
        else
        {
          *(unsigned char *)a1 = v10;
          if (v5 > 1) {
            return;
          }
        }
        goto LABEL_21;
      }
      *(_WORD *)a1 = v10;
      *((unsigned char *)a1 + 2) = BYTE2(v10);
    }
    if (v5 > 1) {
      return;
    }
    goto LABEL_21;
  }
  if (v5 > 1)
  {
    if (a2)
    {
      uint64_t v11 = a2 + 1;
      size_t v12 = *(void (**)(unsigned int *, uint64_t, uint64_t))(v4 + 56);
      v12(a1, v11, v5);
    }
  }
  else
  {
    *((unsigned char *)a1 + v7) = 0;
  }
}

uint64_t WorkoutDeviceConnectionUpdated.workoutDeviceConnection.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB3A50();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t WorkoutDeviceConnectionUpdated.init(workoutDeviceConnection:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB3A50();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static WorkoutDeviceConnectionUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for WorkoutDeviceConnectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3A50();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for WorkoutDeviceConnectionUpdated(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB3A50();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for WorkoutDeviceConnectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3A50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for WorkoutDeviceConnectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3A50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for WorkoutDeviceConnectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3A50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for WorkoutDeviceConnectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3A50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutDeviceConnectionUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D5A4BD6C);
}

uint64_t sub_1D5A4BD6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3A50();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for WorkoutDeviceConnectionUpdated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D5A4BDEC);
}

uint64_t sub_1D5A4BDEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3A50();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for WorkoutDeviceConnectionUpdated()
{
  uint64_t result = qword_1EA727748;
  if (!qword_1EA727748) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D5A4BEA8()
{
  uint64_t result = sub_1D5AB3A50();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t EventHubProtocol.makeAsyncStream<A>(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  size_t v12 = (void *)swift_allocObject();
  v12[2] = a2;
  v12[3] = a3;
  void v12[4] = a4;
  v12[5] = a5;
  EventHubProtocol.makeAsyncStream<A, B>(for:transforming:)(a1, (uint64_t)&unk_1EA727760, (uint64_t)v12, a2, a3, a3, a4, a5, a6);
  return swift_release();
}

uint64_t sub_1D5A4BFEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a2;
  v4[4] = a4;
  v4[2] = a1;
  return MEMORY[0x1F4188298](sub_1D5A4C010, 0, 0);
}

uint64_t sub_1D5A4C010()
{
  (*(void (**)(void, void))(*(void *)(v0[4] - 8) + 16))(v0[2], v0[3]);
  unint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1D5A4C09C()
{
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1D5A4C0AC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 24);
  size_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *size_t v7 = v3;
  _OWORD v7[3] = a2;
  v7[4] = v6;
  v7[1] = sub_1D598AF68;
  id v7[2] = a1;
  return MEMORY[0x1F4188298](sub_1D5A4C010, 0, 0);
}

uint64_t EventHubProtocol.makeAsyncStream<A, B>(for:transforming:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v10 = v9;
  uint64_t v24 = a8;
  uint64_t v25 = a3;
  uint64_t v23 = a2;
  uint64_t v26 = a9;
  uint64_t v16 = sub_1D5AB51F0();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  int v19 = (char *)&v23 - v18;
  type metadata accessor for SubscriptionToken();
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = sub_1D5958664(v10, v20, a4, a7);
  uint64_t v27 = a4;
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  uint64_t v30 = a7;
  uint64_t v31 = v24;
  uint64_t v32 = v10;
  uint64_t v33 = a1;
  uint64_t v34 = v21;
  uint64_t v35 = v23;
  uint64_t v36 = v25;
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, *MEMORY[0x1E4FBD028], v16);
  sub_1D5AB5220();
  return swift_release();
}

uint64_t sub_1D5A4C2EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  void (*v22)(void *__return_ptr, uint64_t, uint64_t, void *, char *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void v38[5];

  uint64_t v32 = a5;
  uint64_t v33 = a6;
  uint64_t v34 = a3;
  uint64_t v35 = a4;
  uint64_t v36 = a2;
  uint64_t v37 = a1;
  uint64_t v30 = a7;
  uint64_t v31 = a9;
  uint64_t v14 = sub_1D5AB5210();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v29 - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v29 - v16, a1, v14);
  unint64_t v18 = (*(unsigned __int8 *)(v15 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  int v19 = (char *)swift_allocObject();
  *((void *)v19 + 2) = a7;
  *((void *)v19 + 3) = a8;
  *((void *)v19 + 4) = a9;
  *((void *)v19 + 5) = a10;
  uint64_t v20 = v32;
  uint64_t v21 = v33;
  *((void *)v19 + 6) = a11;
  *((void *)v19 + 7) = v20;
  *((void *)v19 + 8) = v21;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v19[v18], v17, v14);
  uint64_t v22 = *(void (**)(void *__return_ptr, uint64_t, uint64_t, void *, char *, uint64_t, uint64_t, uint64_t, uint64_t))(a10 + 48);
  swift_retain();
  uint64_t v23 = v35;
  uint64_t v24 = a8;
  uint64_t v25 = a8;
  uint64_t v26 = v30;
  v22(v38, v34, v35, &unk_1EA727770, v19, v25, a11, v30, a10);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v38);
  uint64_t v27 = (void *)swift_allocObject();
  long long v27[2] = v26;
  v27[3] = v24;
  void v27[4] = v31;
  v27[5] = a10;
  void v27[6] = a11;
  v27[7] = v23;
  swift_retain();
  return sub_1D5AB51E0();
}

uint64_t sub_1D5A4C504(uint64_t a1, int *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v7[2] = a4;
  _OWORD v7[3] = a7;
  uint64_t v11 = sub_1D5AB51D0();
  v7[4] = v11;
  v7[5] = *(void *)(v11 - 8);
  v7[6] = swift_task_alloc();
  v7[7] = *(void *)(a7 - 8);
  v7[8] = swift_task_alloc();
  uint64_t v12 = swift_task_alloc();
  v7[9] = v12;
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))((char *)a2 + *a2);
  BOOL v13 = (void *)swift_task_alloc();
  v7[10] = v13;
  *BOOL v13 = v7;
  v13[1] = sub_1D5A4C6C0;
  return v15(v12, a1);
}

uint64_t sub_1D5A4C6C0()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D5A4C8DC;
  }
  else {
    uint64_t v2 = sub_1D5A4C7D4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D5A4C7D4()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[3];
  (*(void (**)(void, uint64_t, uint64_t))(v3 + 16))(v0[8], v1, v6);
  sub_1D5AB5210();
  sub_1D5AB5200();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  size_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1D5A4C8DC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D5A4C954(uint64_t a1)
{
  return sub_1D5A4C2EC(a1, v1[7], v1[8], v1[9], v1[10], v1[11], v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1D5A4C990()
{
  uint64_t v1 = sub_1D5AB5210();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 72) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D5A4CA60(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = *(void *)(sub_1D5AB5210() - 8);
  unsigned int v8 = (int *)v1[7];
  uint64_t v9 = v1[8];
  uint64_t v10 = (uint64_t)v1 + ((*(unsigned __int8 *)(v7 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_1D5984480;
  return sub_1D5A4C504(a1, v8, v9, v10, v4, v5, v6);
}

uint64_t sub_1D5A4CB88()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t CatalogLockup.init(tile:bundleDateRequested:bundleLoadStatus:bundleProgress:bundleReason:completedCount:dateBookmarked:isIncompletePlanWorkout:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, unsigned __int8 a11)
{
  uint64_t v92 = a9;
  uint64_t v93 = a8;
  int v94 = a7;
  uint64_t v95 = a6;
  uint64_t v96 = a3;
  uint64_t v84 = a5;
  int v97 = a4;
  uint64_t v87 = a2;
  int v91 = a11;
  uint64_t v79 = a10;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3330);
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  uint64_t v90 = (char *)v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v89 = (char *)v52 - v17;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4740);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v88 = (char *)v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3358);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v98 = (char *)v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3320);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v61 = (char *)v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3338);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v26 = (char *)v52 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v80 = v26;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4380);
  uint64_t v28 = MEMORY[0x1F4188790](v27 - 8);
  uint64_t v30 = (char *)v52 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v73 = v30;
  MEMORY[0x1F4188790](v28);
  uint64_t v32 = (char *)v52 - v31;
  uint64_t v81 = (char *)v52 - v31;
  uint64_t v33 = sub_1D5AB3040();
  MEMORY[0x1F4188790](v33 - 8);
  uint64_t v82 = (char *)v52 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1D5AB1F80();
  uint64_t v85 = v36;
  uint64_t v86 = v35;
  uint64_t v83 = sub_1D5AB1EC0();
  sub_1D5AB1F60();
  sub_1D596E6CC(a2, (uint64_t)v32, &qword_1EBDE4380);
  sub_1D596E6CC(a5, (uint64_t)v26, &qword_1EBDE3338);
  uint64_t v78 = sub_1D5AB1F20();
  uint64_t v77 = v37;
  int v76 = v38 & 1;
  uint64_t v75 = sub_1D5AB1FD0();
  uint64_t v74 = sub_1D5AB1FA0();
  sub_1D596E6CC(a10, (uint64_t)v30, &qword_1EBDE4380);
  uint64_t v72 = sub_1D5AB1ED0();
  uint64_t v71 = sub_1D5AB2020();
  int v70 = v39 & 1;
  uint64_t v69 = sub_1D5AB1FF0();
  uint64_t v68 = v40;
  int v67 = v41;
  uint64_t v66 = sub_1D5AB1FE0();
  uint64_t v65 = v42;
  uint64_t v64 = sub_1D5AB1FC0();
  uint64_t v63 = sub_1D5AB1EE0();
  uint64_t v62 = v43;
  sub_1D5AB2010();
  uint64_t v60 = sub_1D5AB2030();
  uint64_t v59 = v44;
  int v58 = v45;
  uint64_t v57 = sub_1D5AB1EF0();
  uint64_t v56 = v46;
  uint64_t v55 = sub_1D5AB1F30();
  uint64_t v54 = v47;
  int v53 = v48 & 1;
  sub_1D5AB1F50();
  v52[2] = sub_1D5AB2000();
  v52[1] = v49;
  sub_1D5AB1F70();
  sub_1D5AB1F40();
  sub_1D5AB1F00();
  sub_1D5AB1F10();
  sub_1D5AB1FB0();
  sub_1D5AB2040();
  sub_1D5AB1F90();
  sub_1D5AB2590();
  sub_1D594F53C(v79, &qword_1EBDE4380);
  sub_1D594F53C(v84, &qword_1EBDE3338);
  sub_1D594F53C(v87, &qword_1EBDE4380);
  uint64_t v50 = sub_1D5AB2050();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v50 - 8) + 8))(a1, v50);
}

BOOL sub_1D5A4D264(void *a1, void *a2)
{
  BOOL v4 = *a2 == *a1 && a2[1] == a1[1];
  if (v4 || (sub_1D5AB5AF0())
    && (a2[2] == a1[2] ? (BOOL v5 = a2[3] == a1[3]) : (BOOL v5 = 0),
        (v5 || (sub_1D5AB5AF0() & 1) != 0) && a2[4] == a1[4] && a2[5] == a1[5]))
  {
    char v6 = 0;
  }
  else
  {
    char v6 = sub_1D5AB5AF0();
  }
  return (v6 & 1) == 0;
}

BOOL sub_1D5A4D338(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (sub_1D5AB5AF0())
    && (a1[2] == a2[2] ? (BOOL v5 = a1[3] == a2[3]) : (BOOL v5 = 0),
        (v5 || (sub_1D5AB5AF0() & 1) != 0) && a1[4] == a2[4] && a1[5] == a2[5]))
  {
    char v6 = 0;
  }
  else
  {
    char v6 = sub_1D5AB5AF0();
  }
  return (v6 & 1) == 0;
}

uint64_t sub_1D5A4D40C(void *a1, void *a2)
{
  BOOL v4 = *a2 == *a1 && a2[1] == a1[1];
  if (v4 || (sub_1D5AB5AF0() & 1) != 0)
  {
    BOOL v5 = a2[2] == a1[2] && a2[3] == a1[3];
    if (v5 || (sub_1D5AB5AF0()) && a2[4] == a1[4] && a2[5] == a1[5]) {
      return 0;
    }
  }
  return sub_1D5AB5AF0();
}

uint64_t SystemVersion.prefix.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SystemVersion.letter.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SystemVersion.suffix.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SystemVersion.rawValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall SystemVersion.init(rawValue:)(SeymourClient::SystemVersion_optional *__return_ptr retstr, Swift::String rawValue)
{
  object = rawValue._object;
  uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  id v5 = objc_allocWithZone(MEMORY[0x1E4F28FD8]);
  swift_bridgeObjectRetain();
  id v6 = sub_1D5A4DE6C(0xD000000000000034, 0x80000001D5AC9AF0, 0);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727778);
  sub_1D5A4DF48();
  sub_1D59AA0A4();
  uint64_t v20 = sub_1D5AB55D0();
  uint64_t v8 = v7;
  uint64_t v26 = 0;
  uint64_t v27 = 0;
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  uint64_t v9 = (void *)sub_1D5AB4DE0();
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = countAndFlagsBits;
  v10[3] = object;
  v10[4] = &v26;
  v10[5] = &v24;
  v10[6] = &v22;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1D5A4DFDC;
  *(void *)(v11 + 24) = v10;
  aBlock[4] = sub_1D5A4DFFC;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D5A4DAA0;
  aBlock[3] = &block_descriptor_18;
  uint64_t v12 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_enumerateMatchesInString_options_range_usingBlock_, v9, 0, v20, v8, v12);

  _Block_release(v12);
  uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    uint64_t v14 = v27;
    if (v27 && (uint64_t v15 = v25) != 0 && (v16 = v23) != 0)
    {
      uint64_t v17 = v26;
      uint64_t v18 = v24;
      uint64_t v19 = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      retstr->value.prefix._uint64_t countAndFlagsBits = v17;
      retstr->value.prefix._object = v14;
      retstr->value.letter._uint64_t countAndFlagsBits = v18;
      retstr->value.letter._object = v15;
      retstr->value.suffix._uint64_t countAndFlagsBits = v19;
      retstr->value.suffix._object = v16;
      retstr->value.rawValue._uint64_t countAndFlagsBits = countAndFlagsBits;
      retstr->value.rawValue._object = object;
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1D5A0A7B0((uint64_t)sub_1D5A4DFDC);
      retstr->value.suffix = 0u;
      retstr->value.rawValue = 0u;
      retstr->value.prefix = 0u;
      retstr->value.letter = 0u;
    }
  }
}

void sub_1D5A4D914(void *a1, uint64_t a2, unsigned char *a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7, uint64_t *a8)
{
  if (a1)
  {
    id v27 = a1;
    if (objc_msgSend(v27, sel_numberOfRanges) == (id)4)
    {
      objc_msgSend(v27, sel_rangeAtIndex_, 1);
      sub_1D5AB53F0();
      if ((v12 & 1) == 0)
      {
        uint64_t v13 = sub_1D5AB4F40();
        uint64_t v14 = MEMORY[0x1D9459230](v13);
        uint64_t v16 = v15;
        swift_bridgeObjectRelease();
        *a6 = v14;
        a6[1] = v16;
        swift_bridgeObjectRelease();
        objc_msgSend(v27, sel_rangeAtIndex_, 2);
        sub_1D5AB53F0();
        if ((v17 & 1) == 0)
        {
          uint64_t v18 = sub_1D5AB4F40();
          uint64_t v19 = MEMORY[0x1D9459230](v18);
          uint64_t v21 = v20;
          swift_bridgeObjectRelease();
          *a7 = v19;
          a7[1] = v21;
          swift_bridgeObjectRelease();
          objc_msgSend(v27, sel_rangeAtIndex_, 3);
          sub_1D5AB53F0();
          if ((v22 & 1) == 0)
          {
            uint64_t v23 = sub_1D5AB4F40();
            uint64_t v24 = MEMORY[0x1D9459230](v23);
            uint64_t v26 = v25;
            swift_bridgeObjectRelease();
            *a8 = v24;
            a8[1] = v26;
            swift_bridgeObjectRelease();
            *a3 = 0;
          }
        }
      }
    }
  }
}

void sub_1D5A4DAA0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void (**)(void *, uint64_t, uint64_t))(a1 + 32);
  id v8 = a2;
  v7(a2, a3, a4);
}

void __swiftcall SystemVersion.init(prefix:letter:suffix:)(SeymourClient::SystemVersion *__return_ptr retstr, Swift::String prefix, Swift::String letter, Swift::String suffix)
{
  object = suffix._object;
  uint64_t countAndFlagsBits = suffix._countAndFlagsBits;
  id v6 = letter._object;
  uint64_t v7 = letter._countAndFlagsBits;
  id v8 = prefix._object;
  uint64_t v9 = prefix._countAndFlagsBits;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D5AB4E90();
  swift_bridgeObjectRelease();
  sub_1D5AB4E90();
  swift_bridgeObjectRelease();
  retstr->prefix._uint64_t countAndFlagsBits = v9;
  retstr->prefix._object = v8;
  retstr->letter._uint64_t countAndFlagsBits = v7;
  retstr->letter._object = v6;
  retstr->suffix._uint64_t countAndFlagsBits = countAndFlagsBits;
  retstr->suffix._object = object;
  retstr->rawValue = prefix;
}

void sub_1D5A4DBCC(Swift::String *a1@<X0>, SeymourClient::SystemVersion_optional *a2@<X8>)
{
}

uint64_t sub_1D5A4DBD8@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 56);
  *a1 = *(void *)(v1 + 48);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t SystemVersion.description.getter()
{
  return 0x203A776152;
}

BOOL sub_1D5A4DD58(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = a1[3];
  id v7[2] = a1[2];
  _OWORD v7[3] = v3;
  long long v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  long long v5 = a2[3];
  long long v8[2] = a2[2];
  v8[3] = v5;
  return sub_1D5A4D264(v7, v8);
}

BOOL sub_1D5A4DDA4(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = a1[3];
  id v7[2] = a1[2];
  _OWORD v7[3] = v3;
  long long v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  long long v5 = a2[3];
  long long v8[2] = a2[2];
  v8[3] = v5;
  return sub_1D5A4D338(v7, v8);
}

uint64_t sub_1D5A4DDF0(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = a1[3];
  id v7[2] = a1[2];
  _OWORD v7[3] = v3;
  long long v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  long long v5 = a2[3];
  long long v8[2] = a2[2];
  v8[3] = v5;
  return sub_1D5A4D40C(v7, v8) & 1;
}

uint64_t sub_1D5A4DE3C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 48) == *(void *)(a2 + 48) && *(void *)(a1 + 56) == *(void *)(a2 + 56)) {
    return 1;
  }
  else {
    return sub_1D5AB5AF0();
  }
}

id sub_1D5A4DE6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v10[1] = *(id *)MEMORY[0x1E4F143B8];
  long long v5 = (void *)sub_1D5AB4DE0();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  id v6 = objc_msgSend(v3, sel_initWithPattern_options_error_, v5, a3, v10);

  if (v6)
  {
    id v7 = v10[0];
  }
  else
  {
    id v8 = v10[0];
    sub_1D5AB1B50();

    swift_willThrow();
  }
  return v6;
}

unint64_t sub_1D5A4DF48()
{
  unint64_t result = qword_1EA727780;
  if (!qword_1EA727780)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA727778);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA727780);
  }
  return result;
}

uint64_t sub_1D5A4DFA4()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_1D5A4DFDC(void *a1, uint64_t a2, unsigned char *a3)
{
  sub_1D5A4D914(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(uint64_t **)(v3 + 32), *(uint64_t **)(v3 + 40), *(uint64_t **)(v3 + 48));
}

uint64_t sub_1D5A4DFEC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D5A4DFFC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t _s13SeymourClient13SystemVersionV1loiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v9 = a1[4];
  uint64_t v10 = a1[5];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v6 = a2[5];
  if (*a1 == *a2 && a1[1] == a2[1] || (sub_1D5AB5AF0())
    && (v2 == v4 && v3 == v5 || (sub_1D5AB5AF0() & 1) != 0)
    && v9 == v7
    && v10 == v6)
  {
    return 0;
  }
  return sub_1D5AB5AF0();
}

unint64_t sub_1D5A4E160()
{
  unint64_t result = qword_1EA727788;
  if (!qword_1EA727788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA727788);
  }
  return result;
}

uint64_t destroy for SystemVersion()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SystemVersion(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SystemVersion(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void *assignWithTake for SystemVersion(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SystemVersion(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SystemVersion(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SystemVersion()
{
  return &type metadata for SystemVersion;
}

uint64_t MediaMomentStarted.mediaMoment.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB2080();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t MediaMomentStarted.init(mediaMoment:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB2080();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static MediaMomentStarted.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t getEnumTagSinglePayload for MediaMomentStarted(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D5A4E534);
}

uint64_t sub_1D5A4E534(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2080();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MediaMomentStarted(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D5A4E5B4);
}

uint64_t sub_1D5A4E5B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2080();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MediaMomentStarted()
{
  uint64_t result = qword_1EA727790;
  if (!qword_1EA727790) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t MultiUserWorkoutUpdated.init(multiUserWorkoutUpdate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB3700();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

uint64_t MultiUserWorkoutUpdated.multiUserWorkoutUpdate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB3700();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

void static MultiUserWorkoutUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for MultiUserWorkoutUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3700();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for MultiUserWorkoutUpdated(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB3700();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for MultiUserWorkoutUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3700();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for MultiUserWorkoutUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3700();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for MultiUserWorkoutUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3700();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for MultiUserWorkoutUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3700();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for MultiUserWorkoutUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D5A4E9C8);
}

uint64_t sub_1D5A4E9C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3700();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MultiUserWorkoutUpdated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D5A4EA48);
}

uint64_t sub_1D5A4EA48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3700();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MultiUserWorkoutUpdated()
{
  uint64_t result = qword_1EA7277A0;
  if (!qword_1EA7277A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D5A4EB04()
{
  uint64_t result = sub_1D5AB3700();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ReachabilityObserverError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D5A4EC5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReachabilityObserverError()
{
  return &type metadata for ReachabilityObserverError;
}

unint64_t sub_1D5A4EC98()
{
  unint64_t result = qword_1EA7277B0;
  if (!qword_1EA7277B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7277B0);
  }
  return result;
}

void static RemoteParticipantHostAdvertisingExpired.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for RemoteParticipantHostAdvertisingExpired()
{
  return &type metadata for RemoteParticipantHostAdvertisingExpired;
}

uint64_t static AssetBundleProgress.+ infix(_:_:)()
{
  uint64_t v0 = _s13SeymourClient26AssetBundleProgressUpdatedV18debounceIdentifierSSvg_0();
  uint64_t v2 = v1;
  uint64_t v3 = sub_1D5AB3290();
  uint64_t v4 = sub_1D5AB24A0();
  BOOL v10 = __OFADD__(v3, v4);
  uint64_t v11 = v3 + v4;
  if (v10)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v12 = sub_1D5AB32A0();
  uint64_t v4 = sub_1D5AB24B0();
  uint64_t v13 = v12 + v4;
  if (__OFADD__(v12, v4))
  {
LABEL_7:
    __break(1u);
    return MEMORY[0x1F414DA88](v4, v5, v6, v7, v8, v9);
  }
  uint64_t v8 = sub_1D5AB32D0();
  uint64_t v9 = v14;
  uint64_t v4 = v0;
  uint64_t v5 = v2;
  uint64_t v6 = v11;
  uint64_t v7 = v13;
  return MEMORY[0x1F414DA88](v4, v5, v6, v7, v8, v9);
}

uint64_t URL.init(multiUserActivity:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v17[0] = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4740);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D5AB1AC0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5AB1AB0();
  sub_1D5AB1A90();
  MEMORY[0x1D9455E70](0x65735569746C756DLL, 0xE900000000000072);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7277B8);
  sub_1D5AB1A40();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1D5AC1250;
  sub_1D5AB30E0();
  sub_1D5AB1A10();
  swift_bridgeObjectRelease();
  sub_1D5AB30F0();
  sub_1D5AB1A10();
  swift_bridgeObjectRelease();
  v17[1] = sub_1D5AB30D0();
  sub_1D5AB5AB0();
  sub_1D5AB1A10();
  swift_bridgeObjectRelease();
  sub_1D5AB1A60();
  sub_1D5AB1AA0();
  sub_1D5AB1B60();
  uint64_t v10 = sub_1D5AB3100();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(a1, v10);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v11 = sub_1D5AB1BB0();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v5, 1, v11))
  {
    sub_1D59C8ABC((uint64_t)v5);
    uint64_t v13 = 1;
    uint64_t v14 = v17[0];
  }
  else
  {
    uint64_t v15 = v17[0];
    (*(void (**)(void, char *, uint64_t))(v12 + 32))(v17[0], v5, v11);
    uint64_t v13 = 0;
    uint64_t v14 = v15;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v14, v13, 1, v11);
}

void sub_1D5A4F1AC()
{
  word_1EA7277C0 = 79;
}

uint64_t static Platform.internalOnlyFailure<A>(message:fallback:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  if (qword_1EBDE4BD0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if ((Platform.internalInstall.getter() & 1) == 0) {
    return a3();
  }
  if (qword_1EA724DB8 != -1) {
    swift_once();
  }
  if (sub_1D59579B8(word_1EA7277C0, SHIBYTE(word_1EA7277C0))) {
    return a3();
  }
  uint64_t result = sub_1D5AB5920();
  __break(1u);
  return result;
}

uint64_t static Platform.internalOnlyFailure(message:fallback:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  if (qword_1EBDE4BD0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = (uint64_t)Platform.internalInstall.getter();
  if ((result & 1) == 0) {
    goto LABEL_7;
  }
  if (qword_1EA724DB8 != -1) {
    swift_once();
  }
  uint64_t result = sub_1D59579B8(word_1EA7277C0, SHIBYTE(word_1EA7277C0));
  if ((result & 1) == 0)
  {
    uint64_t result = sub_1D5AB5920();
    __break(1u);
  }
  else
  {
LABEL_7:
    if (a3) {
      return a3();
    }
  }
  return result;
}

unint64_t static XPCStreamConstants.distEventName.getter()
{
  return 0xD00000000000001CLL;
}

unint64_t static XPCStreamConstants.notifyEventName.getter()
{
  return 0xD00000000000001ALL;
}

ValueMetadata *type metadata accessor for XPCStreamConstants()
{
  return &type metadata for XPCStreamConstants;
}

uint64_t UnitPreferencesUpdated.unitPreferences.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB2E60();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t UnitPreferencesUpdated.init(unitPreferences:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB2E60();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static UnitPreferencesUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for UnitPreferencesUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2E60();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for UnitPreferencesUpdated(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB2E60();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for UnitPreferencesUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2E60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for UnitPreferencesUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2E60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for UnitPreferencesUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2E60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for UnitPreferencesUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2E60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for UnitPreferencesUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D5A4F7C4);
}

uint64_t sub_1D5A4F7C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2E60();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for UnitPreferencesUpdated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D5A4F844);
}

uint64_t sub_1D5A4F844(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2E60();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for UnitPreferencesUpdated()
{
  uint64_t result = qword_1EA7277C8;
  if (!qword_1EA7277C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D5A4F900()
{
  uint64_t result = sub_1D5AB2E60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *EstimatedCaloriesClient.__allocating_init(queue:)(void *a1)
{
  id v2 = objc_allocWithZone(MEMORY[0x1E4F29268]);
  id v3 = a1;
  uint64_t v4 = (void *)sub_1D5AB4DE0();
  id v5 = objc_msgSend(v2, sel_initWithMachServiceName_options_, v4, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  uint64_t v6 = sub_1D59968E8(v5, v3);
  uint64_t v7 = *(void *)(v6 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 16));
  if (*(unsigned char *)(v6 + 48) == 1)
  {
    *(unsigned char *)(v6 + 48) = 2;
    objc_msgSend(*(id *)(v6 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));

  type metadata accessor for EstimatedCaloriesClient();
  uint64_t result = (void *)swift_allocObject();
  result[2] = v6;
  result[3] = &protocol witness table for XPCClient;
  result[4] = &protocol witness table for XPCClient;
  return result;
}

void *EstimatedCaloriesClient.__allocating_init(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  return sub_1D5A4FFDC(a1, v3, ObjectType, a2, a3);
}

uint64_t type metadata accessor for EstimatedCaloriesClient()
{
  return self;
}

void *EstimatedCaloriesClient.init(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  return sub_1D595A0B0(a1, v3, ObjectType, a2, a3);
}

uint64_t EstimatedCaloriesClient.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t EstimatedCaloriesClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t EstimatedCaloriesClient.queryEstimatedCalories(activityType:)(uint64_t a1)
{
  return sub_1D5A4FD30(a1, 0xD000000000000025, (void *)0x80000001D5AC9C60, 288);
}

uint64_t EstimatedCaloriesClient.queryEstimatedCalories()()
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE5400);
  v2._uint64_t countAndFlagsBits = 0xD000000000000074;
  v2._object = (void *)0x80000001D5AC9BE0;
  v3._object = (void *)0x80000001D5AC9C90;
  v3._uint64_t countAndFlagsBits = 0xD000000000000018;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 289;
  uint64_t v6 = *(uint64_t (**)(__int16 *, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7277D8);
  unint64_t v8 = sub_1D5A50024();
  unint64_t v9 = sub_1D5A50098();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t EstimatedCaloriesClient.lookupEstimatedCalories(activityType:)(uint64_t a1)
{
  return sub_1D5A4FD30(a1, 0xD000000000000026, (void *)0x80000001D5AC9CB0, 290);
}

uint64_t sub_1D5A4FD30(uint64_t a1, uint64_t a2, void *a3, __int16 a4)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1D5AB4B50();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EBDE5400);
  v10._object = (void *)0x80000001D5AC9BE0;
  v10._uint64_t countAndFlagsBits = 0xD000000000000074;
  v11._uint64_t countAndFlagsBits = a2;
  v11._object = a3;
  Logger.trace(file:function:)(v10, v11);
  uint64_t v12 = *(void *)(v4 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v18 = a4;
  uint64_t v17 = a1;
  uint64_t v14 = *(uint64_t (**)(__int16 *, uint64_t *, void, uint64_t, void, void, void, void, uint64_t, uint64_t))(v12 + 32);
  uint64_t v15 = sub_1D5AB30B0();
  return v14(&v18, &v17, MEMORY[0x1E4FBB808], v15, MEMORY[0x1E4F9F138], MEMORY[0x1E4F9F140], MEMORY[0x1E4F9D068], MEMORY[0x1E4F9D070], ObjectType, v12);
}

uint64_t EstimatedCaloriesClient.generateEstimatedCalories()()
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE5400);
  v2._uint64_t countAndFlagsBits = 0xD000000000000074;
  v2._object = (void *)0x80000001D5AC9BE0;
  v3._object = (void *)0x80000001D5AC9CE0;
  v3._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v7 = 291;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v4 + 8))(&v7, ObjectType, v4);
}

uint64_t sub_1D5A4FF4C(uint64_t a1)
{
  return EstimatedCaloriesClient.queryEstimatedCalories(activityType:)(a1);
}

uint64_t sub_1D5A4FF70()
{
  return EstimatedCaloriesClient.queryEstimatedCalories()();
}

uint64_t sub_1D5A4FF94(uint64_t a1)
{
  return EstimatedCaloriesClient.lookupEstimatedCalories(activityType:)(a1);
}

uint64_t sub_1D5A4FFB8()
{
  return EstimatedCaloriesClient.generateEstimatedCalories()();
}

void *sub_1D5A4FFDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for EstimatedCaloriesClient();
  uint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a4;
  result[4] = a5;
  return result;
}

unint64_t sub_1D5A50024()
{
  unint64_t result = qword_1EA7277E0;
  if (!qword_1EA7277E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA7277D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7277E0);
  }
  return result;
}

unint64_t sub_1D5A50098()
{
  unint64_t result = qword_1EA7277E8;
  if (!qword_1EA7277E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA7277D8);
    sub_1D5A5010C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7277E8);
  }
  return result;
}

unint64_t sub_1D5A5010C()
{
  unint64_t result = qword_1EA7277F0;
  if (!qword_1EA7277F0)
  {
    sub_1D5AB30B0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7277F0);
  }
  return result;
}

uint64_t dispatch thunk of EstimatedCaloriesClientProtocol.queryEstimatedCalories(activityType:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of EstimatedCaloriesClientProtocol.queryEstimatedCalories()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of EstimatedCaloriesClientProtocol.lookupEstimatedCalories(activityType:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of EstimatedCaloriesClientProtocol.generateEstimatedCalories()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t method lookup function for EstimatedCaloriesClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EstimatedCaloriesClient);
}

uint64_t dispatch thunk of EstimatedCaloriesClient.__allocating_init(connection:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t CountdownIntent.applyingTimestampOffset(_:)()
{
  sub_1D5AB2D40();
  return sub_1D5AB2D50();
}

uint64_t sub_1D5A50230()
{
  sub_1D5AB2D40();
  return sub_1D5AB2D50();
}

void static NetworkConditionsChanged.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for NetworkConditionsChanged()
{
  return &type metadata for NetworkConditionsChanged;
}

BOOL ServiceSubscription.isSubscribed(date:)(uint64_t a1)
{
  uint64_t v2 = v1;
  v28[1] = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4380);
  MEMORY[0x1F4188790](v3 - 8);
  id v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D5AB1CE0();
  uint64_t v29 = *(void *)(v6 - 8);
  uint64_t v30 = v6;
  MEMORY[0x1F4188790](v6);
  v28[0] = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D5AB34D0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)v28 - v13;
  char v15 = sub_1D5AB3400();
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v16(v14, v2, v8);
  if (v15) {
    char v17 = 1;
  }
  else {
    char v17 = sub_1D5AB33E0();
  }
  __int16 v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v14, v8);
  v16(v12, v2, v8);
  if (v17)
  {
    v18(v12, v8);
    return 1;
  }
  else
  {
    char v20 = sub_1D5AB33D0();
    v18(v12, v8);
    if (v20)
    {
      return 1;
    }
    else
    {
      sub_1D5AB33B0();
      uint64_t v22 = v29;
      uint64_t v21 = v30;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v5, 1, v30) == 1)
      {
        sub_1D59A9880((uint64_t)v5);
        return 0;
      }
      else
      {
        uint64_t v23 = v28[0];
        (*(void (**)(void, char *, uint64_t))(v22 + 32))(v28[0], v5, v21);
        sub_1D5AB1C30();
        double v25 = v24;
        sub_1D5AB1C30();
        double v27 = v26;
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v21);
        return v27 < v25;
      }
    }
  }
}

uint64_t dispatch thunk of ContentAvailabilityClientProtocol.queryAllowedContentRatings()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ContentAvailabilityClientProtocol.queryContentAvailability()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ContentAvailabilityClientProtocol.queryStorefrontLanguageCode()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ContentAvailabilityClientProtocol.queryAccountContainsSupportedWatch()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ContentAvailabilityClientProtocol.queryAccountContainsSupportedDevice()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t Trainer.metadata()()
{
  uint64_t v0 = sub_1D5AB1BB0();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7257C8);
  MEMORY[0x1F4188790](v1 - 8);
  sub_1D5AB4850();
  sub_1D5AB4810();
  sub_1D5AB4830();
  sub_1D5AB4880();
  sub_1D5AB4820();
  sub_1D5AB4840();
  return sub_1D5AB2E00();
}

uint64_t RemoteParticipantPasswordRequired.init(challenge:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB4420();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

uint64_t RemoteParticipantPasswordRequired.challenge.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB4420();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

void static RemoteParticipantPasswordRequired.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for RemoteParticipantPasswordRequired(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4420();
  id v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for RemoteParticipantPasswordRequired(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB4420();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for RemoteParticipantPasswordRequired(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4420();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for RemoteParticipantPasswordRequired(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4420();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for RemoteParticipantPasswordRequired(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4420();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for RemoteParticipantPasswordRequired(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4420();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteParticipantPasswordRequired(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D5A50AA0);
}

uint64_t sub_1D5A50AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4420();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for RemoteParticipantPasswordRequired(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D5A50B20);
}

uint64_t sub_1D5A50B20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4420();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for RemoteParticipantPasswordRequired()
{
  uint64_t result = qword_1EBDE30E8;
  if (!qword_1EBDE30E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D5A50BDC()
{
  uint64_t result = sub_1D5AB4420();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

BOOL SessionStatus.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

unint64_t sub_1D5A50C90()
{
  unint64_t result = qword_1EA7277F8;
  if (!qword_1EA7277F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7277F8);
  }
  return result;
}

uint64_t sub_1D5A50CE4()
{
  return sub_1D5AB5C60();
}

uint64_t sub_1D5A50D2C()
{
  return sub_1D5AB5C50();
}

uint64_t sub_1D5A50D58()
{
  return sub_1D5AB5C60();
}

void *sub_1D5A50D9C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result != 1 && *result != 0;
  *(void *)a2 = *result == 1;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

void sub_1D5A50DCC(void *a1@<X8>)
{
  *a1 = *v1;
}

ValueMetadata *type metadata accessor for SessionStatus()
{
  return &type metadata for SessionStatus;
}

unint64_t static HealthDataConstants.catalogWorkoutIdentifierProperty.getter()
{
  return 0xD000000000000029;
}

unint64_t static HealthDataConstants.workoutSessionIdentifierProperty.getter()
{
  return 0xD000000000000022;
}

unint64_t static HealthDataConstants.mediaTypeProperty.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1D5A50E3C()
{
  uint64_t result = sub_1D5AB4DF0();
  qword_1EA727800 = result;
  *(void *)algn_1EA727808 = v1;
  return result;
}

uint64_t static HealthDataConstants.moveModeWorkoutProperty.getter()
{
  if (qword_1EA724DC0 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EA727800;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t static HealthDataConstants.workoutSessionQueueIdentifierProperty.getter()
{
  return 0xD00000000000002BLL;
}

unint64_t static HealthDataConstants.workoutSessionPlaylistIdentifierProperty.getter()
{
  return 0xD00000000000002CLL;
}

ValueMetadata *type metadata accessor for HealthDataConstants()
{
  return &type metadata for HealthDataConstants;
}

uint64_t sub_1D5A50F1C()
{
  uint64_t v0 = sub_1D5AB35F0();
  __swift_allocate_value_buffer(v0, qword_1EA727810);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA727810);
  uint64_t v2 = *MEMORY[0x1E4F9D7C8];
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);
  return v3(v1, v2, v0);
}

uint64_t static TransportCompression.standard.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EA724DC8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D5AB35F0();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA727810);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

void (*Data.compressed(using:)(uint64_t a1, void (*a2)(char *, uint64_t), unint64_t a3))(char *, uint64_t)
{
  return sub_1D5A511C4(a1, a2, a3, (uint64_t (*)(void, void (*)(void, void), unint64_t))Data.compressed(using:));
}

uint64_t sub_1D5A51078(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727828);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5A510E0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727828);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1D5A51140()
{
  unint64_t result = qword_1EA727E10;
  if (!qword_1EA727E10)
  {
    sub_1D5AB2B90();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA727E10);
  }
  return result;
}

void (*Data.decompressed(using:)(uint64_t a1, void (*a2)(char *, uint64_t), unint64_t a3))(char *, uint64_t)
{
  return sub_1D5A511C4(a1, a2, a3, (uint64_t (*)(void, void (*)(void, void), unint64_t))Data.decompressed(using:));
}

void (*sub_1D5A511C4(uint64_t a1, void (*a2)(char *, uint64_t), unint64_t a3, uint64_t (*a4)(void, void (*)(void, void), unint64_t)))(char *, uint64_t)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727828);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D5AB35F0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  char v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  char v17 = (char *)v23 - v16;
  sub_1D5A51078(a1, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1D5A510E0((uint64_t)v10);
    sub_1D599FF54((uint64_t)a2, a3);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
    if ((*(unsigned int (**)(char *, uint64_t))(v12 + 88))(v15, v11) == *MEMORY[0x1E4F9D7C8])
    {
      uint64_t v18 = v23[1];
      uint64_t v19 = a4(0, (void (*)(void, void))a2, a3);
      if (!v18) {
        a2 = (void (*)(char *, uint64_t))v19;
      }
      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    }
    else
    {
      uint64_t v20 = sub_1D5AB2B90();
      sub_1D5A51140();
      swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9C838], v20);
      swift_willThrow();
      a2 = *(void (**)(char *, uint64_t))(v12 + 8);
      a2(v17, v11);
      a2(v15, v11);
    }
  }
  return a2;
}

uint64_t TransportEvent.rawValue.getter()
{
  return qword_1D5AC16C8[*v0];
}

SeymourClient::TransportEvent_optional __swiftcall TransportEvent.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue > 999)
  {
    if (rawValue > 1299)
    {
      if (rawValue <= 1599)
      {
        if (rawValue > 1401)
        {
          if (rawValue == 1402)
          {
            *uint64_t v1 = 48;
            return (SeymourClient::TransportEvent_optional)rawValue;
          }
          if (rawValue == 1500)
          {
            *uint64_t v1 = 49;
            return (SeymourClient::TransportEvent_optional)rawValue;
          }
        }
        else
        {
          if (rawValue == 1300)
          {
            *uint64_t v1 = 46;
            return (SeymourClient::TransportEvent_optional)rawValue;
          }
          if (rawValue == 1401)
          {
            *uint64_t v1 = 47;
            return (SeymourClient::TransportEvent_optional)rawValue;
          }
        }
        goto LABEL_84;
      }
      if (rawValue > 1601)
      {
        if (rawValue == 1602)
        {
          *uint64_t v1 = 52;
          return (SeymourClient::TransportEvent_optional)rawValue;
        }
        if (rawValue == 1700)
        {
          *uint64_t v1 = 53;
          return (SeymourClient::TransportEvent_optional)rawValue;
        }
        goto LABEL_84;
      }
      if (rawValue == 1600) {
        *uint64_t v1 = 50;
      }
      else {
        *uint64_t v1 = 51;
      }
    }
    else
    {
      char v2 = 36;
      switch(rawValue)
      {
        case 1100:
          *uint64_t v1 = 34;
          break;
        case 1101:
          *uint64_t v1 = 35;
          break;
        case 1102:
          goto LABEL_44;
        case 1103:
          *uint64_t v1 = 37;
          break;
        case 1104:
          *uint64_t v1 = 38;
          break;
        case 1105:
          *uint64_t v1 = 39;
          break;
        case 1106:
          *uint64_t v1 = 40;
          break;
        case 1107:
        case 1110:
        case 1111:
        case 1112:
        case 1113:
        case 1114:
        case 1115:
        case 1116:
        case 1117:
        case 1118:
        case 1119:
        case 1120:
        case 1121:
        case 1122:
        case 1123:
        case 1124:
        case 1125:
        case 1126:
        case 1127:
        case 1128:
        case 1129:
        case 1130:
        case 1131:
        case 1132:
        case 1133:
        case 1134:
        case 1135:
        case 1136:
        case 1137:
        case 1138:
        case 1139:
        case 1140:
        case 1141:
        case 1142:
        case 1143:
        case 1144:
        case 1145:
        case 1146:
        case 1147:
        case 1148:
        case 1149:
        case 1150:
        case 1151:
        case 1152:
        case 1153:
        case 1154:
        case 1155:
        case 1156:
        case 1157:
        case 1158:
        case 1159:
        case 1160:
        case 1161:
        case 1162:
        case 1163:
        case 1164:
        case 1165:
        case 1166:
        case 1167:
        case 1168:
        case 1169:
        case 1170:
        case 1171:
        case 1172:
        case 1173:
        case 1174:
        case 1175:
        case 1176:
        case 1177:
        case 1178:
        case 1179:
        case 1180:
        case 1181:
        case 1182:
        case 1183:
        case 1184:
        case 1185:
        case 1186:
        case 1187:
        case 1188:
        case 1189:
        case 1190:
        case 1191:
        case 1192:
        case 1193:
        case 1194:
        case 1195:
        case 1196:
        case 1197:
        case 1198:
        case 1199:
          goto LABEL_84;
        case 1108:
          *uint64_t v1 = 41;
          break;
        case 1109:
          *uint64_t v1 = 42;
          break;
        case 1200:
          *uint64_t v1 = 43;
          break;
        case 1201:
          *uint64_t v1 = 44;
          break;
        case 1202:
          *uint64_t v1 = 45;
          break;
        default:
          if (rawValue != 1000) {
            goto LABEL_84;
          }
          *uint64_t v1 = 33;
          break;
      }
    }
  }
  else if (rawValue > 700)
  {
    if (rawValue <= 799)
    {
      switch(rawValue)
      {
        case 701:
          *uint64_t v1 = 17;
          return (SeymourClient::TransportEvent_optional)rawValue;
        case 702:
          *uint64_t v1 = 18;
          return (SeymourClient::TransportEvent_optional)rawValue;
        case 703:
          *uint64_t v1 = 19;
          return (SeymourClient::TransportEvent_optional)rawValue;
      }
      goto LABEL_84;
    }
    switch(rawValue)
    {
      case 800:
        *uint64_t v1 = 20;
        break;
      case 801:
        *uint64_t v1 = 21;
        break;
      case 802:
        *uint64_t v1 = 22;
        break;
      case 803:
        *uint64_t v1 = 23;
        break;
      case 804:
        *uint64_t v1 = 24;
        break;
      case 805:
        *uint64_t v1 = 25;
        break;
      case 806:
        *uint64_t v1 = 26;
        break;
      case 900:
        *uint64_t v1 = 27;
        break;
      case 901:
        *uint64_t v1 = 28;
        break;
      case 902:
        *uint64_t v1 = 29;
        break;
      case 903:
        *uint64_t v1 = 30;
        break;
      case 904:
        *uint64_t v1 = 31;
        break;
      case 905:
        *uint64_t v1 = 32;
        break;
      default:
        goto LABEL_84;
    }
  }
  else if (rawValue > 399)
  {
    if (rawValue > 499)
    {
      switch(rawValue)
      {
        case 500:
          *uint64_t v1 = 14;
          return (SeymourClient::TransportEvent_optional)rawValue;
        case 600:
          *uint64_t v1 = 15;
          return (SeymourClient::TransportEvent_optional)rawValue;
        case 601:
          *uint64_t v1 = 16;
          return (SeymourClient::TransportEvent_optional)rawValue;
      }
      goto LABEL_84;
    }
    switch(rawValue)
    {
      case 400:
        *uint64_t v1 = 9;
        break;
      case 401:
        *uint64_t v1 = 10;
        break;
      case 402:
        *uint64_t v1 = 11;
        break;
      case 403:
        *uint64_t v1 = 12;
        break;
      case 404:
        *uint64_t v1 = 13;
        break;
      default:
        goto LABEL_84;
    }
  }
  else if (rawValue > 199)
  {
    switch(rawValue)
    {
      case 300:
        *uint64_t v1 = 5;
        break;
      case 301:
        *uint64_t v1 = 6;
        break;
      case 302:
        *uint64_t v1 = 7;
        break;
      case 303:
        *uint64_t v1 = 8;
        break;
      default:
        if (rawValue == 200)
        {
          *uint64_t v1 = 3;
        }
        else
        {
          if (rawValue != 201) {
            goto LABEL_84;
          }
          *uint64_t v1 = 4;
        }
        break;
    }
  }
  else
  {
    if (!rawValue)
    {
      *uint64_t v1 = 0;
      return (SeymourClient::TransportEvent_optional)rawValue;
    }
    if (rawValue != 100)
    {
      if (rawValue == 101)
      {
        *uint64_t v1 = 2;
        return (SeymourClient::TransportEvent_optional)rawValue;
      }
LABEL_84:
      *uint64_t v1 = 54;
      return (SeymourClient::TransportEvent_optional)rawValue;
    }
    char v2 = 1;
LABEL_44:
    *uint64_t v1 = v2;
  }
  return (SeymourClient::TransportEvent_optional)rawValue;
}

BOOL sub_1D5A51C5C(char *a1, char *a2)
{
  return qword_1D5AC16C8[*a1] == qword_1D5AC16C8[*a2];
}

unint64_t sub_1D5A51C84()
{
  unint64_t result = qword_1EBDE4F60;
  if (!qword_1EBDE4F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE4F60);
  }
  return result;
}

uint64_t sub_1D5A51CD8()
{
  return sub_1D5AB5C60();
}

uint64_t sub_1D5A51D28()
{
  return sub_1D5AB5C30();
}

uint64_t sub_1D5A51D60()
{
  return sub_1D5AB5C60();
}

SeymourClient::TransportEvent_optional sub_1D5A51DAC(Swift::Int *a1)
{
  return TransportEvent.init(rawValue:)(*a1);
}

void sub_1D5A51DB4(void *a1@<X8>)
{
  *a1 = qword_1D5AC16C8[*v1];
}

uint64_t sub_1D5A51DCC()
{
  return sub_1D5AB5020();
}

uint64_t sub_1D5A51E2C()
{
  return sub_1D5AB5000();
}

uint64_t getEnumTagSinglePayload for TransportEvent(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xCB) {
    goto LABEL_17;
  }
  if (a2 + 53 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 53) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 53;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 53;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 53;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x36;
  int v8 = v6 - 54;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TransportEvent(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 53 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 53) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xCB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xCA)
  {
    unsigned int v6 = ((a2 - 203) >> 8) + 1;
    *unint64_t result = a2 + 53;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D5A51FD8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 53;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TransportEvent()
{
  return &type metadata for TransportEvent;
}

unint64_t sub_1D5A52010()
{
  unint64_t result = qword_1EA727830;
  if (!qword_1EA727830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA727830);
  }
  return result;
}

uint64_t PaceMetricUpdated.paceMetric.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB1E70();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t PaceMetricUpdated.sessionIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PaceMetricUpdated() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for PaceMetricUpdated()
{
  uint64_t result = qword_1EA727838;
  if (!qword_1EA727838) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t PaceMetricUpdated.init(paceMetric:sessionIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1D5AB1E70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t result = type metadata accessor for PaceMetricUpdated();
  uint64_t v10 = (void *)(a4 + *(int *)(result + 20));
  *uint64_t v10 = a2;
  v10[1] = a3;
  return result;
}

void static PaceMetricUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t *initializeBufferWithCopyOfBuffer for PaceMetricUpdated(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1D5AB1E70();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for PaceMetricUpdated(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB1E70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PaceMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB1E70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PaceMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB1E70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for PaceMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB1E70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for PaceMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB1E70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PaceMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D5A5257C);
}

uint64_t sub_1D5A5257C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB1E70();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for PaceMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D5A52654);
}

uint64_t sub_1D5A52654(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1D5AB1E70();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1D5A52714()
{
  uint64_t result = sub_1D5AB1E70();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.insertConnectionRecord(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.queryConnectionRecord()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.requestEnvironment(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.requestEnvironmentWithConfirmation(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.cancelRemoteBrowsingEnvironmentRequest(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.requestServiceSubscription(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.allowPendingConfirmationRequest()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.denyPendingConfirmationRequest()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.requestGuestAuthentication(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.tryPassword(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.updateAudioFocusSelection(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.updateBurnBarDisplayPreference(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.updateMetricsDisplayPreference(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.updateProgressDisplayPreference(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.updateNoticePrivacyPreference(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.updateOptInPrivacyPreference(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 128))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.queryAllPrivacyAcknowledgements()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.insertPrivacyAcknowledgement(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 144))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.insertBookmarks(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 152))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.removeBookmarks(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 160))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.insertArchivedSession(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 168))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.insertCatalogTipJournal(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 176))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.insertPlaylist(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 184))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.deletePlaylist(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 192))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.insertCompletedMarketingVideo(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 200))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.processUpNextQueueUpdates(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 208))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.repeatWorkoutPlan(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 216))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.updateWorkoutPlan(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 224))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.requestEndWorkoutPlan(request:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 232))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.requestWorkoutPlanTemplateUpdate(request:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 240))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.requestWorkoutPlanAlternatives(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 248))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.showWorkoutPlanCreationPrompt(on:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 256))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.requireActiveWorkoutPlan(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 264))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.insertWorkoutPlanSummaryViewed(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 272))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.insertArchivedWorkoutPlanSession(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 280))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.updateOnboardingSurveyResult(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 288))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.insertRecentSearchTerm(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 296))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.deleteRecentSearchTerms(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 304))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.insertAchievementNotificationRecord(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 312))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.insertPersonalizationPrivacyPreference(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 320))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.requestRemoteSyncableCounts(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 328))();
}

uint64_t sub_1D5A52ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3E60();
  int v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t sub_1D5A52B48(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB3E60();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t sub_1D5A52BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3E60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1D5A52C10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3E60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1D5A52C74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3E60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1D5A52CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3E60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1D5A52D3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D5A52D50);
}

uint64_t sub_1D5A52D50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3E60();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1D5A52DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D5A52DD0);
}

uint64_t sub_1D5A52DD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3E60();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MultiUserParticipantUpdated()
{
  uint64_t result = qword_1EA727848;
  if (!qword_1EA727848) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D5A52E8C()
{
  uint64_t result = sub_1D5AB3E60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t RemoteDisplayConnectionUpdated.connection.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB3A00();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t RemoteDisplayConnectionUpdated.init(connection:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB3A00();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static RemoteDisplayConnectionUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for RemoteDisplayConnectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3A00();
  int v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for RemoteDisplayConnectionUpdated(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB3A00();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for RemoteDisplayConnectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3A00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for RemoteDisplayConnectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3A00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for RemoteDisplayConnectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3A00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for RemoteDisplayConnectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3A00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteDisplayConnectionUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D5A53270);
}

uint64_t sub_1D5A53270(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3A00();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for RemoteDisplayConnectionUpdated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D5A532F0);
}

uint64_t sub_1D5A532F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3A00();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for RemoteDisplayConnectionUpdated()
{
  uint64_t result = qword_1EA727858;
  if (!qword_1EA727858) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D5A533AC()
{
  uint64_t result = sub_1D5AB3A00();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t Set<>.themes()(uint64_t a1)
{
  return sub_1D5A53D40(a1, (void (*)(void))sub_1D5A536E4, (uint64_t (*)(void))sub_1D594FD14);
}

uint64_t sub_1D5A53464@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_1D5AB22A0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D5AB3560();
  int64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    v22[0] = a1;
    v22[1] = v1;
    uint64_t v29 = MEMORY[0x1E4FBC860];
    sub_1D594E8F4(0, v8, 0);
    uint64_t v9 = v29;
    uint64_t result = sub_1D594F1A0(v7);
    uint64_t v12 = result;
    int v14 = v13 & 1;
    uint64_t v25 = v4 + 16;
    uint64_t v26 = v7 + 56;
    uint64_t v23 = v7;
    uint64_t v24 = v4 + 32;
    while ((v12 & 0x8000000000000000) == 0 && v12 < 1 << *(unsigned char *)(v7 + 32))
    {
      if (((*(void *)(v26 + (((unint64_t)v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
        goto LABEL_14;
      }
      if (*(_DWORD *)(v7 + 36) != v11) {
        goto LABEL_15;
      }
      int v27 = v14;
      uint64_t v28 = v11;
      char v15 = v6;
      uint64_t v16 = *(void *)(v4 + 72);
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v15, *(void *)(v7 + 48) + v16 * v12, v3);
      uint64_t v29 = v9;
      uint64_t v17 = v4;
      unint64_t v19 = *(void *)(v9 + 16);
      unint64_t v18 = *(void *)(v9 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1D594E8F4(v18 > 1, v19 + 1, 1);
        uint64_t v9 = v29;
      }
      *(void *)(v9 + 16) = v19 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(v9 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)) + v19 * v16, v15, v3);
      uint64_t v20 = v23;
      uint64_t result = sub_1D594F244(v12, v28, v27 & 1, v23);
      uint64_t v12 = result;
      int v14 = v21 & 1;
      --v8;
      uint64_t v4 = v17;
      uint64_t v7 = v20;
      uint64_t v6 = v15;
      if (!v8)
      {
        sub_1D594B5F8(result, v11, v14);
        uint64_t result = swift_bridgeObjectRelease();
        a1 = (void *)v22[0];
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v9 = MEMORY[0x1E4FBC860];
LABEL_12:
    *a1 = v9;
  }
  return result;
}

uint64_t sub_1D5A536E4(uint64_t a1)
{
  uint64_t v3 = sub_1D5AB3570();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v22 - v8;
  uint64_t v28 = MEMORY[0x1E4FBC860];
  uint64_t v10 = *(void *)(a1 + 56);
  uint64_t v22 = a1 + 56;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  uint64_t v25 = v4 + 16;
  uint64_t v26 = a1;
  int64_t v23 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v24 = v4 + 32;
  int v14 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v16 = 0;
  if (!v13) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v17 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v17 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v9, *(void *)(v26 + 48) + *(void *)(v4 + 72) * i, v3);
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v9, v3);
    sub_1D5A53464(&v27);
    if (v1)
    {
      (*v14)(v7, v3);
      swift_release();
      return swift_bridgeObjectRelease();
    }
    (*v14)(v7, v3);
    uint64_t result = sub_1D5A54CB8(v27, (uint64_t (*)(void))sub_1D5A76A00, MEMORY[0x1E4F9C378]);
    if (v13) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v16++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v16 >= v23) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v22 + 8 * v16);
    if (!v20) {
      break;
    }
LABEL_17:
    unint64_t v13 = (v20 - 1) & v20;
  }
  int64_t v21 = v16 + 1;
  if (v16 + 1 >= v23) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v22 + 8 * v21);
  if (v20) {
    goto LABEL_16;
  }
  int64_t v21 = v16 + 2;
  if (v16 + 2 >= v23) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v22 + 8 * v21);
  if (v20) {
    goto LABEL_16;
  }
  int64_t v21 = v16 + 3;
  if (v16 + 3 >= v23) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v22 + 8 * v21);
  if (v20) {
    goto LABEL_16;
  }
  int64_t v21 = v16 + 4;
  if (v16 + 4 >= v23)
  {
LABEL_26:
    swift_release();
    return v28;
  }
  unint64_t v20 = *(void *)(v22 + 8 * v21);
  if (v20)
  {
LABEL_16:
    int64_t v16 = v21;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v16 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v16 >= v23) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v22 + 8 * v16);
    ++v21;
    if (v20) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1D5A53A10(uint64_t a1)
{
  uint64_t v3 = sub_1D5AB3570();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v22 - v8;
  uint64_t v28 = MEMORY[0x1E4FBC860];
  uint64_t v10 = *(void *)(a1 + 56);
  uint64_t v22 = a1 + 56;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  uint64_t v25 = v4 + 16;
  uint64_t v26 = a1;
  int64_t v23 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v24 = v4 + 32;
  int v14 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v16 = 0;
  if (!v13) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v17 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v17 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v9, *(void *)(v26 + 48) + *(void *)(v4 + 72) * i, v3);
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v9, v3);
    sub_1D5A53D98(&v27);
    if (v1)
    {
      (*v14)(v7, v3);
      swift_release();
      return swift_bridgeObjectRelease();
    }
    (*v14)(v7, v3);
    uint64_t result = sub_1D5A54E74(v27);
    if (v13) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v16++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v16 >= v23) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v22 + 8 * v16);
    if (!v20) {
      break;
    }
LABEL_17:
    unint64_t v13 = (v20 - 1) & v20;
  }
  int64_t v21 = v16 + 1;
  if (v16 + 1 >= v23) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v22 + 8 * v21);
  if (v20) {
    goto LABEL_16;
  }
  int64_t v21 = v16 + 2;
  if (v16 + 2 >= v23) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v22 + 8 * v21);
  if (v20) {
    goto LABEL_16;
  }
  int64_t v21 = v16 + 3;
  if (v16 + 3 >= v23) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v22 + 8 * v21);
  if (v20) {
    goto LABEL_16;
  }
  int64_t v21 = v16 + 4;
  if (v16 + 4 >= v23)
  {
LABEL_26:
    swift_release();
    return v28;
  }
  unint64_t v20 = *(void *)(v22 + 8 * v21);
  if (v20)
  {
LABEL_16:
    int64_t v16 = v21;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v16 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v16 >= v23) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v22 + 8 * v16);
    ++v21;
    if (v20) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t Set<>.themeIdentifiers()(uint64_t a1)
{
  return sub_1D5A53D40(a1, (void (*)(void))sub_1D5A53A10, (uint64_t (*)(void))sub_1D594F598);
}

uint64_t sub_1D5A53D40(uint64_t a1, void (*a2)(void), uint64_t (*a3)(void))
{
  a2();
  uint64_t v4 = a3();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1D5A53D98@<X0>(void *a1@<X8>)
{
  uint64_t v39 = sub_1D5AB22A0();
  uint64_t v3 = *(void *)(v39 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v39);
  char v38 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v37 = (char *)&v28 - v6;
  uint64_t v7 = sub_1D5AB3560();
  int64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v29 = a1;
    uint64_t v30 = v1;
    uint64_t v40 = MEMORY[0x1E4FBC860];
    sub_1D594E784(0, v8, 0);
    uint64_t result = sub_1D594F1A0(v7);
    uint64_t v10 = result;
    uint64_t v12 = v11;
    char v14 = v13 & 1;
    uint64_t v35 = v3;
    uint64_t v36 = v7 + 56;
    uint64_t v32 = v3 + 32;
    uint64_t v33 = v3 + 16;
    uint64_t v31 = v3 + 8;
    uint64_t v34 = v7;
    while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << *(unsigned char *)(v7 + 32))
    {
      if (((*(void *)(v36 + (((unint64_t)v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_16;
      }
      if (*(_DWORD *)(v7 + 36) != v12) {
        goto LABEL_17;
      }
      uint64_t v15 = *(void *)(v7 + 48) + *(void *)(v3 + 72) * v10;
      int64_t v16 = v37;
      uint64_t v17 = v39;
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v37, v15, v39);
      unint64_t v18 = v38;
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v38, v16, v17);
      uint64_t v19 = sub_1D5AB2290();
      uint64_t v21 = v20;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v18, v17);
      uint64_t v22 = v40;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D594E784(0, *(void *)(v22 + 16) + 1, 1);
        uint64_t v22 = v40;
      }
      unint64_t v24 = *(void *)(v22 + 16);
      unint64_t v23 = *(void *)(v22 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_1D594E784(v23 > 1, v24 + 1, 1);
        uint64_t v22 = v40;
      }
      *(void *)(v22 + 16) = v24 + 1;
      uint64_t v25 = v22 + 16 * v24;
      *(void *)(v25 + 32) = v19;
      *(void *)(v25 + 40) = v21;
      uint64_t v7 = v34;
      uint64_t result = sub_1D594F244(v10, v12, v14 & 1, v34);
      uint64_t v10 = result;
      uint64_t v12 = v26;
      char v14 = v27 & 1;
      --v8;
      uint64_t v3 = v35;
      if (!v8)
      {
        sub_1D594B5F8(result, v26, v27 & 1);
        uint64_t result = swift_bridgeObjectRelease();
        a1 = v29;
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v22 = MEMORY[0x1E4FBC860];
LABEL_14:
    *a1 = v22;
  }
  return result;
}

uint64_t sub_1D5A54088(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1D5A763F4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2) {
    goto LABEL_24;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4B88);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1D5AB59C0();
  __break(1u);
  return result;
}

uint64_t sub_1D5A541F4(uint64_t a1)
{
  return sub_1D5A54CB8(a1, (uint64_t (*)(void))sub_1D5A76614, MEMORY[0x1E4F9CE40]);
}

uint64_t sub_1D5A54220(uint64_t a1)
{
  return sub_1D5A54308(a1, MEMORY[0x1E4F9CE40], &qword_1EA725B58, (uint64_t (*)(void))sub_1D5A76614, MEMORY[0x1E4F9CE40]);
}

uint64_t sub_1D5A54268(uint64_t a1)
{
  return sub_1D5A54CB8(a1, (uint64_t (*)(void))sub_1D5A76648, MEMORY[0x1E4F9CB40]);
}

uint64_t sub_1D5A54294(uint64_t a1)
{
  return sub_1D5A54CB8(a1, (uint64_t (*)(void))sub_1D5A768FC, MEMORY[0x1E4F9CE78]);
}

uint64_t sub_1D5A542C0(uint64_t a1)
{
  return sub_1D5A54308(a1, MEMORY[0x1E4F9CE78], &qword_1EA727870, (uint64_t (*)(void))sub_1D5A768FC, MEMORY[0x1E4F9CE78]);
}

uint64_t sub_1D5A54308(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v99 = a4;
  uint64_t v95 = a2(0);
  uint64_t v10 = *(void *)(v95 - 8);
  MEMORY[0x1F4188790](v95);
  uint64_t v96 = (char *)&v80 - v11;
  uint64_t v98 = a3;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v97 = (uint64_t)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  MEMORY[0x1F4188790](v15);
  uint64_t v20 = (char *)&v80 - v19;
  uint64_t v21 = *(void *)(a1 + 16);
  uint64_t v22 = (void *)*v5;
  uint64_t v23 = *(void *)(*v5 + 16);
  uint64_t v24 = v23 + v21;
  if (__OFADD__(v23, v21))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v94 = v16;
  uint64_t v6 = v10;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *int64_t v5 = (uint64_t)v22;
  if (!isUniquelyReferenced_nonNull_native || (uint64_t v26 = v22[3] >> 1, v26 < v24))
  {
    uint64_t v22 = (void *)v99();
    *int64_t v5 = (uint64_t)v22;
    uint64_t v26 = v22[3] >> 1;
  }
  uint64_t v27 = v22[2];
  uint64_t v24 = *(void *)(v10 + 72);
  int64_t v28 = v26 - v27;
  unint64_t v93 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v29 = sub_1D5A54FC8(&v100, (uint64_t)v22 + v93 + v24 * v27, v26 - v27, a1, a5);
  if (v29 < v21) {
    goto LABEL_14;
  }
  if (v29)
  {
    uint64_t v32 = v22[2];
    BOOL v33 = __OFADD__(v32, v29);
    uint64_t v34 = v32 + v29;
    if (v33)
    {
      __break(1u);
      goto LABEL_19;
    }
    void v22[2] = v34;
  }
  if (v29 == v28)
  {
LABEL_15:
    int64_t v28 = v22[2];
    uint64_t v22 = v100;
    uint64_t v31 = v101;
    uint64_t v30 = v102;
    a1 = v103;
    int64_t v89 = v102;
    uint64_t v91 = v101;
    if (v104)
    {
      unint64_t v36 = (v104 - 1) & v104;
      unint64_t v37 = __clz(__rbit64(v104)) | (v103 << 6);
LABEL_17:
      uint64_t v38 = v95;
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v20, v22[6] + v37 * v24, v95);
      uint64_t v85 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v85(v20, 0, 1, v38);
      uint64_t v21 = a1;
      unint64_t v39 = v36;
LABEL_40:
      unint64_t v92 = v39;
      uint64_t v88 = (void (**)(void, void, void))v22;
      os_log_type_t v100 = v22;
      uint64_t v101 = v91;
      uint64_t v102 = v89;
      uint64_t v103 = v21;
      unint64_t v104 = v39;
      uint64_t v45 = v94;
      sub_1D596E6CC((uint64_t)v20, v94, v98);
      uint64_t v90 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
      if (v90(v45, 1, v95) == 1)
      {
LABEL_79:
        uint64_t v79 = v98;
        sub_1D594F53C((uint64_t)v20, v98);
        sub_1D59AE720();
        return sub_1D594F53C(v94, v79);
      }
      uint64_t v88 = (void (**)(void, void, void))(v10 + 32);
      uint64_t v84 = v10 + 56;
      uint64_t v83 = (void (**)(char *, unint64_t, uint64_t))(v10 + 16);
      uint64_t v81 = (void (**)(char *, uint64_t))(v10 + 8);
      uint64_t v46 = v98;
      uint64_t v47 = v94;
      uint64_t v48 = v95;
      while (1)
      {
        sub_1D594F53C(v47, v46);
        uint64_t v50 = *v5;
        unint64_t v51 = *(void *)(*v5 + 24);
        int64_t v52 = v51 >> 1;
        if ((uint64_t)(v51 >> 1) < v28 + 1)
        {
          uint64_t v50 = ((uint64_t (*)(BOOL))v99)(v51 > 1);
          *int64_t v5 = v50;
          int64_t v52 = *(void *)(v50 + 24) >> 1;
        }
        uint64_t v53 = v97;
        sub_1D596E6CC((uint64_t)v20, v97, v46);
        if (v90(v53, 1, v48) != 1) {
          break;
        }
        uint64_t v54 = v97;
        unint64_t v55 = v28;
LABEL_48:
        uint64_t v49 = v98;
        sub_1D594F53C(v54, v98);
        int64_t v28 = v55;
        unint64_t v56 = v55;
LABEL_43:
        *(void *)(*v5 + 16) = v56;
        uint64_t v47 = v94;
        sub_1D596E6CC((uint64_t)v20, v94, v49);
        uint64_t v46 = v49;
        if (v90(v47, 1, v48) == 1)
        {
          unint64_t v92 = v104;
          goto LABEL_79;
        }
      }
      unint64_t v87 = v50 + v93;
      uint64_t v57 = *v88;
      unint64_t v55 = v28;
      if (v28 <= v52) {
        int64_t v58 = v52;
      }
      else {
        int64_t v58 = v28;
      }
      int64_t v89 = v58;
      uint64_t v54 = v97;
      uint64_t v86 = v57;
      while (1)
      {
        uint64_t v65 = v96;
        uint64_t v66 = v48;
        unint64_t v67 = v55;
        uint64_t v68 = v48;
        uint64_t v69 = (uint64_t (*)(unint64_t, char *, uint64_t))v57;
        v57(v96, v54, v66);
        unint64_t v56 = v89;
        if (v67 == v89)
        {
          (*v81)(v65, v68);
          int64_t v28 = v56;
          uint64_t v48 = v68;
          uint64_t v49 = v98;
          goto LABEL_43;
        }
        sub_1D594F53C((uint64_t)v20, v98);
        unint64_t v92 = v67;
        uint64_t result = v69(v87 + v67 * v24, v65, v68);
        uint64_t v63 = v100;
        uint64_t v70 = v101;
        int64_t v71 = v103;
        uint64_t v91 = v102;
        if (v104) {
          break;
        }
        uint64_t v82 = v100;
        int64_t v74 = v103 + 1;
        if (__OFADD__(v103, 1))
        {
          __break(1u);
          return result;
        }
        int64_t v75 = (unint64_t)(v102 + 64) >> 6;
        int64_t v73 = v103;
        unint64_t v59 = v92;
        if (v74 < v75)
        {
          unint64_t v76 = *(void *)(v101 + 8 * v74);
          if (v76) {
            goto LABEL_63;
          }
          int64_t v77 = v103 + 2;
          int64_t v73 = v103 + 1;
          if (v103 + 2 < v75)
          {
            unint64_t v76 = *(void *)(v101 + 8 * v77);
            if (v76) {
              goto LABEL_66;
            }
            int64_t v73 = v103 + 2;
            if (v103 + 3 < v75)
            {
              unint64_t v76 = *(void *)(v101 + 8 * (v103 + 3));
              if (v76)
              {
                int64_t v74 = v103 + 3;
                goto LABEL_63;
              }
              int64_t v77 = v103 + 4;
              int64_t v73 = v103 + 3;
              if (v103 + 4 < v75)
              {
                unint64_t v76 = *(void *)(v101 + 8 * v77);
                if (v76)
                {
LABEL_66:
                  int64_t v74 = v77;
                  goto LABEL_63;
                }
                int64_t v74 = v103 + 5;
                int64_t v73 = v103 + 4;
                unint64_t v59 = v92;
                if (v103 + 5 < v75)
                {
                  unint64_t v76 = *(void *)(v101 + 8 * v74);
                  if (!v76)
                  {
                    int64_t v73 = v75 - 1;
                    uint64_t v78 = v103 + 6;
                    do
                    {
                      if (v75 == v78)
                      {
                        unint64_t v59 = v92;
                        goto LABEL_54;
                      }
                      unint64_t v76 = *(void *)(v101 + 8 * v78++);
                    }
                    while (!v76);
                    int64_t v74 = v78 - 1;
                  }
LABEL_63:
                  unint64_t v62 = (v76 - 1) & v76;
                  unint64_t v72 = __clz(__rbit64(v76)) + (v74 << 6);
                  int64_t v71 = v74;
                  uint64_t v63 = v82;
LABEL_59:
                  uint64_t v48 = v95;
                  (*v83)(v20, v63[6] + v72 * v24, v95);
                  v85(v20, 0, 1, v48);
                  int64_t v73 = v71;
                  unint64_t v61 = v92;
                  goto LABEL_55;
                }
              }
            }
          }
        }
LABEL_54:
        uint64_t v48 = v95;
        unint64_t v60 = v59;
        v85(v20, 1, 1, v95);
        unint64_t v61 = v60;
        unint64_t v62 = 0;
        uint64_t v63 = v82;
LABEL_55:
        os_log_type_t v100 = v63;
        uint64_t v101 = v70;
        uint64_t v102 = v91;
        uint64_t v103 = v73;
        unint64_t v104 = v62;
        uint64_t v54 = v97;
        unint64_t v55 = v61 + 1;
        sub_1D596E6CC((uint64_t)v20, v97, v98);
        unsigned int v64 = v90(v54, 1, v48);
        uint64_t v57 = v86;
        if (v64 == 1) {
          goto LABEL_48;
        }
      }
      unint64_t v62 = (v104 - 1) & v104;
      unint64_t v72 = __clz(__rbit64(v104)) | (v103 << 6);
      goto LABEL_59;
    }
LABEL_19:
    int64_t v40 = a1 + 1;
    if (__OFADD__(a1, 1))
    {
      __break(1u);
LABEL_38:
      uint64_t v22 = v17;
      int64_t v28 = v18;
    }
    else
    {
      int64_t v41 = (unint64_t)(v30 + 64) >> 6;
      uint64_t v21 = a1;
      if (v40 < v41)
      {
        unint64_t v42 = *(void *)(v31 + 8 * v40);
        if (v42)
        {
LABEL_22:
          unint64_t v36 = (v42 - 1) & v42;
          unint64_t v37 = __clz(__rbit64(v42)) + (v40 << 6);
          a1 = v40;
          goto LABEL_17;
        }
        uint64_t v43 = a1 + 2;
        uint64_t v21 = a1 + 1;
        if (a1 + 2 < v41)
        {
          int64_t v18 = v28;
          uint64_t v17 = v22;
          unint64_t v42 = *(void *)(v31 + 8 * v43);
          if (v42)
          {
LABEL_25:
            int64_t v40 = v43;
            goto LABEL_22;
          }
          uint64_t v21 = a1 + 2;
          if (a1 + 3 < v41)
          {
            unint64_t v42 = *(void *)(v91 + 8 * (a1 + 3));
            if (v42)
            {
              int64_t v40 = a1 + 3;
              goto LABEL_22;
            }
            uint64_t v43 = a1 + 4;
            uint64_t v21 = a1 + 3;
            if (a1 + 4 < v41)
            {
              unint64_t v42 = *(void *)(v91 + 8 * v43);
              if (v42) {
                goto LABEL_25;
              }
              int64_t v40 = a1 + 5;
              uint64_t v21 = a1 + 4;
              if (a1 + 5 < v41)
              {
                unint64_t v42 = *(void *)(v91 + 8 * v40);
                if (!v42)
                {
                  uint64_t v21 = v41 - 1;
                  uint64_t v44 = a1 + 6;
                  do
                  {
                    if (v41 == v44) {
                      goto LABEL_38;
                    }
                    unint64_t v42 = *(void *)(v91 + 8 * v44++);
                  }
                  while (!v42);
                  int64_t v40 = v44 - 1;
                }
                goto LABEL_22;
              }
            }
          }
        }
      }
    }
    uint64_t v85 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v85(v20, 1, 1, v95);
    unint64_t v39 = 0;
    goto LABEL_40;
  }
  return sub_1D59AE720();
}

uint64_t sub_1D5A54BD0(uint64_t a1)
{
  return sub_1D5A54CB8(a1, (uint64_t (*)(void))sub_1D5A76930, MEMORY[0x1E4F9EED0]);
}

uint64_t sub_1D5A54BFC(uint64_t a1)
{
  return sub_1D5A54308(a1, MEMORY[0x1E4F9EED0], &qword_1EA726AC8, (uint64_t (*)(void))sub_1D5A76930, MEMORY[0x1E4F9EED0]);
}

uint64_t sub_1D5A54C44(uint64_t a1)
{
  return sub_1D5A54CB8(a1, (uint64_t (*)(void))sub_1D5A76964, MEMORY[0x1E4F9E868]);
}

uint64_t sub_1D5A54C70(uint64_t a1)
{
  return sub_1D5A54308(a1, MEMORY[0x1E4F9E868], &qword_1EA727868, (uint64_t (*)(void))sub_1D5A76964, MEMORY[0x1E4F9E868]);
}

uint64_t sub_1D5A54CB8(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(void *)(v5 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
  uint64_t v5 = a2();
  if (!*(void *)(a1 + 16))
  {
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v10 = *(void *)(v5 + 16);
  uint64_t v11 = (*(void *)(v5 + 24) >> 1) - v10;
  uint64_t v12 = *(void *)(a3(0) - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v15 = v5 + v14 + v13 * v10;
  unint64_t v16 = a1 + v14;
  uint64_t v17 = v13 * v4;
  unint64_t v18 = v15 + v17;
  unint64_t v19 = v16 + v17;
  if (v16 < v18 && v15 < v19) {
    goto LABEL_21;
  }
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v3 = v5;
    return result;
  }
  uint64_t v21 = *(void *)(v5 + 16);
  BOOL v22 = __OFADD__(v21, v4);
  uint64_t v23 = v21 + v4;
  if (!v22)
  {
    *(void *)(v5 + 16) = v23;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_1D5AB59C0();
  __break(1u);
  return result;
}

uint64_t sub_1D5A54E74(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1D5A761E8(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1D5AB59C0();
  __break(1u);
  return result;
}

uint64_t sub_1D5A54FC8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v9 = a5(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v43 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v11);
  unint64_t v42 = (char *)&v33 - v14;
  uint64_t v44 = a4;
  uint64_t v17 = *(void *)(a4 + 56);
  uint64_t v16 = a4 + 56;
  uint64_t v15 = v17;
  uint64_t v38 = v16;
  uint64_t v18 = -1 << *(unsigned char *)(v16 - 24);
  if (-v18 < 64) {
    uint64_t v19 = ~(-1 << -(char)v18);
  }
  else {
    uint64_t v19 = -1;
  }
  unint64_t v20 = v19 & v15;
  if (!a2)
  {
    int64_t v21 = 0;
    a3 = 0;
LABEL_38:
    uint64_t v32 = v38;
    *a1 = v44;
    a1[1] = v32;
    a1[2] = ~v18;
    a1[3] = v21;
    a1[4] = v20;
    return a3;
  }
  if (!a3)
  {
    int64_t v21 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v35 = -1 << *(unsigned char *)(v16 - 24);
  unint64_t v36 = a1;
  int64_t v21 = 0;
  uint64_t v22 = 0;
  uint64_t v39 = v10 + 32;
  uint64_t v40 = v10 + 16;
  int64_t v37 = (unint64_t)(63 - v18) >> 6;
  int64_t v34 = v37 - 1;
  uint64_t v41 = a3;
  uint64_t v23 = v42;
  if (!v20) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v24 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  unint64_t v25 = v24 | (v21 << 6);
  while (1)
  {
    ++v22;
    uint64_t v29 = v43;
    uint64_t v30 = *(void *)(v10 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v43, *(void *)(v44 + 48) + v30 * v25, v9);
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v31(v23, v29, v9);
    uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v31)(a2, v23, v9);
    a3 = v41;
    if (v22 == v41) {
      goto LABEL_37;
    }
    a2 += v30;
    if (v20) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v26 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v26 >= v37) {
      goto LABEL_32;
    }
    unint64_t v27 = *(void *)(v38 + 8 * v26);
    if (!v27) {
      break;
    }
LABEL_18:
    unint64_t v20 = (v27 - 1) & v27;
    unint64_t v25 = __clz(__rbit64(v27)) + (v26 << 6);
    int64_t v21 = v26;
  }
  v21 += 2;
  if (v26 + 1 >= v37)
  {
    unint64_t v20 = 0;
    int64_t v21 = v26;
    goto LABEL_36;
  }
  unint64_t v27 = *(void *)(v38 + 8 * v21);
  if (v27) {
    goto LABEL_14;
  }
  int64_t v28 = v26 + 2;
  if (v26 + 2 >= v37) {
    goto LABEL_32;
  }
  unint64_t v27 = *(void *)(v38 + 8 * v28);
  if (v27) {
    goto LABEL_17;
  }
  int64_t v21 = v26 + 3;
  if (v26 + 3 >= v37)
  {
    unint64_t v20 = 0;
    int64_t v21 = v26 + 2;
    goto LABEL_36;
  }
  unint64_t v27 = *(void *)(v38 + 8 * v21);
  if (v27)
  {
LABEL_14:
    int64_t v26 = v21;
    goto LABEL_18;
  }
  int64_t v28 = v26 + 4;
  if (v26 + 4 >= v37)
  {
LABEL_32:
    unint64_t v20 = 0;
LABEL_36:
    a3 = v22;
LABEL_37:
    uint64_t v18 = v35;
    a1 = v36;
    goto LABEL_38;
  }
  unint64_t v27 = *(void *)(v38 + 8 * v28);
  if (v27)
  {
LABEL_17:
    int64_t v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v26 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v26 >= v37)
    {
      unint64_t v20 = 0;
      int64_t v21 = v34;
      goto LABEL_36;
    }
    unint64_t v27 = *(void *)(v38 + 8 * v26);
    ++v28;
    if (v27) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t MultiUserSessionIdentities.applyingTimestampOffset(_:)()
{
  sub_1D5AB3E70();
  return sub_1D5AB3E80();
}

uint64_t sub_1D5A55370()
{
  sub_1D5AB3E70();
  return sub_1D5AB3E80();
}

uint64_t static RemoteParticipant.localIdentifier.getter()
{
  swift_beginAccess();
  uint64_t v0 = qword_1EA727878;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static RemoteParticipant.localIdentifier.setter(uint64_t a1, void *a2)
{
  qword_1EA727878 = a1;
  off_1EA727880 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static RemoteParticipant.localIdentifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t static RemoteParticipant.local.getter()
{
  uint64_t v0 = sub_1D5AB40F0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F9E738], v0);
  swift_bridgeObjectRetain();
  return sub_1D5AB3170();
}

uint64_t dispatch thunk of FetchedResourceGating.query()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FetchedResourceGating.fetch()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 24) + **(int **)(a3 + 24));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D5984480;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of FetchedResourceGating.activate(fetching:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of FetchedResourceGating.deactivate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t CatalogUpdated.requestMode.getter()
{
  return *v0;
}

uint64_t CatalogUpdated.init(requestMode:)@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static CatalogUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t getEnumTagSinglePayload for CatalogUpdated(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  if (*a1 <= 3u) {
    int v6 = 3;
  }
  else {
    int v6 = *a1;
  }
  int v7 = v6 - 4;
  if (*a1 < 2u) {
    int v8 = -1;
  }
  else {
    int v8 = v7;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CatalogUpdated(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D5A558F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CatalogUpdated()
{
  return &type metadata for CatalogUpdated;
}

uint64_t dispatch thunk of ScriptClientProtocol.updateJetPack()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ScriptClientProtocol.queryJetPackInfo()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t ContentAvailabilityUpdated.init(availability:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB3330();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

uint64_t ContentAvailabilityUpdated.availability.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB3330();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

void static ContentAvailabilityUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t getEnumTagSinglePayload for ContentAvailabilityUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D5A55A4C);
}

uint64_t sub_1D5A55A4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3330();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ContentAvailabilityUpdated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D5A55ACC);
}

uint64_t sub_1D5A55ACC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3330();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ContentAvailabilityUpdated()
{
  uint64_t result = qword_1EBDE3AD0;
  if (!qword_1EBDE3AD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *SyncClient.__allocating_init(eventHub:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = objc_allocWithZone(MEMORY[0x1E4F29268]);
  id v7 = a3;
  int v8 = (void *)sub_1D5AB4DE0();
  id v9 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v8, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  uint64_t v10 = sub_1D59968E8(v9, v7);
  uint64_t v11 = *(void *)(v10 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 16));
  if (*(unsigned char *)(v10 + 48) == 1)
  {
    *(unsigned char *)(v10 + 48) = 2;
    objc_msgSend(*(id *)(v10 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));

  type metadata accessor for SyncClient();
  uint64_t result = (void *)swift_allocObject();
  result[2] = v10;
  result[3] = &protocol witness table for XPCClient;
  result[4] = &protocol witness table for XPCClient;
  result[5] = a1;
  result[6] = a2;
  return result;
}

void *SyncClient.__allocating_init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();
  return sub_1D5A56350(a1, a4, a5, v5, ObjectType, a2, a3);
}

uint64_t type metadata accessor for SyncClient()
{
  return self;
}

void *SyncClient.init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();
  return sub_1D5A563AC(a1, a4, a5, v5, ObjectType, a2, a3);
}

uint64_t SyncClient.deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t SyncClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t SyncClient.fetchRemoteSyncables()()
{
  return sub_1D5A55F04(239);
}

uint64_t SyncClient.fetchRemoteSyncableCounts(for:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v12 = 244;
  uint64_t v11 = a1;
  uint64_t v5 = *(uint64_t (**)(__int16 *, uint64_t *, uint64_t, uint64_t, unint64_t, unint64_t, void, void, uint64_t, uint64_t))(v3 + 32);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727890);
  uint64_t v7 = sub_1D5AB2B80();
  unint64_t v8 = sub_1D5A563C0();
  unint64_t v9 = sub_1D5A56434();
  return v5(&v12, &v11, v6, v7, v8, v9, MEMORY[0x1E4F9C818], MEMORY[0x1E4F9C820], ObjectType, v3);
}

uint64_t SyncClient.submitRemoteSyncables()()
{
  return sub_1D5A55F04(240);
}

uint64_t SyncClient.startPairedSync()()
{
  return sub_1D5A55F04(241);
}

uint64_t sub_1D5A55F04(__int16 a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v6 = a1;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v3 + 8))(&v6, ObjectType, v3);
}

Swift::Void __swiftcall SyncClient.startSync()()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  char v3 = 33;
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 72))(&v3, ObjectType, v1);
}

uint64_t SyncClient.shouldShowUpgradeUI()()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v4 = 243;
  return (*(uint64_t (**)(__int16 *, void, void, void, uint64_t, uint64_t))(v1 + 24))(&v4, MEMORY[0x1E4FBB390], MEMORY[0x1E4F9F0E8], MEMORY[0x1E4F9F0F0], ObjectType, v1);
}

uint64_t SyncClient.requireKeysExist(for:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 246;
  uint64_t v10 = a1;
  uint64_t v5 = *(uint64_t (**)(__int16 *, uint64_t *, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v3 + 16);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727890);
  unint64_t v7 = sub_1D5A563C0();
  unint64_t v8 = sub_1D5A56434();
  return v5(&v11, &v10, v6, v7, v8, ObjectType, v3);
}

uint64_t sub_1D5A56114(uint64_t a1, uint64_t a2)
{
  return sub_1D5A56204(a1, a2, 239);
}

uint64_t sub_1D5A5611C(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v12 = 244;
  uint64_t v11 = a1;
  uint64_t v5 = *(uint64_t (**)(__int16 *, uint64_t *, uint64_t, uint64_t, unint64_t, unint64_t, void, void, uint64_t, uint64_t))(v3 + 32);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727890);
  uint64_t v7 = sub_1D5AB2B80();
  unint64_t v8 = sub_1D5A563C0();
  unint64_t v9 = sub_1D5A56434();
  return v5(&v12, &v11, v6, v7, v8, v9, MEMORY[0x1E4F9C818], MEMORY[0x1E4F9C820], ObjectType, v3);
}

uint64_t sub_1D5A561F4(uint64_t a1, uint64_t a2)
{
  return sub_1D5A56204(a1, a2, 240);
}

uint64_t sub_1D5A561FC(uint64_t a1, uint64_t a2)
{
  return sub_1D5A56204(a1, a2, 241);
}

uint64_t sub_1D5A56204(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t v5 = *(void *)(*(void *)v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v8 = a3;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v5 + 8))(&v8, ObjectType, v5);
}

uint64_t sub_1D5A56270()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v4 = 243;
  return (*(uint64_t (**)(__int16 *, void, void, void, uint64_t, uint64_t))(v1 + 24))(&v4, MEMORY[0x1E4FBB390], MEMORY[0x1E4F9F0E8], MEMORY[0x1E4F9F0F0], ObjectType, v1);
}

uint64_t sub_1D5A562F4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  char v4 = 33;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 72))(&v4, ObjectType, v1);
}

void *sub_1D5A56350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  type metadata accessor for SyncClient();
  uint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a6;
  result[4] = a7;
  result[5] = a2;
  result[6] = a3;
  return result;
}

void *sub_1D5A563AC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  a4[2] = a1;
  a4[3] = a6;
  a4[4] = a7;
  a4[5] = a2;
  a4[6] = a3;
  return a4;
}

unint64_t sub_1D5A563C0()
{
  unint64_t result = qword_1EA727898;
  if (!qword_1EA727898)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA727890);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA727898);
  }
  return result;
}

unint64_t sub_1D5A56434()
{
  unint64_t result = qword_1EA7278A0;
  if (!qword_1EA7278A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA727890);
    sub_1D5A564A8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7278A0);
  }
  return result;
}

unint64_t sub_1D5A564A8()
{
  unint64_t result = qword_1EA7278A8;
  if (!qword_1EA7278A8)
  {
    sub_1D5AB49E0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7278A8);
  }
  return result;
}

uint64_t dispatch thunk of SyncClientProtocol.fetchRemoteSyncables()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SyncClientProtocol.fetchRemoteSyncableCounts(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of SyncClientProtocol.submitRemoteSyncables()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of SyncClientProtocol.startPairedSync()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of SyncClientProtocol.shouldShowUpgradeUI()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of SyncClientProtocol.startSync()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t method lookup function for SyncClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SyncClient);
}

uint64_t dispatch thunk of SyncClient.__allocating_init(connection:eventHub:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t SessionUpdated.init(sessionUpdate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB27E0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

uint64_t SessionUpdated.sessionUpdate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB27E0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

void static SessionUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for SessionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB27E0();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for SessionUpdated(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB27E0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for SessionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB27E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for SessionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB27E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for SessionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB27E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for SessionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB27E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D5A568FC);
}

uint64_t sub_1D5A568FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB27E0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SessionUpdated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D5A5697C);
}

uint64_t sub_1D5A5697C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB27E0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SessionUpdated()
{
  uint64_t result = qword_1EBDE4748;
  if (!qword_1EBDE4748) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D5A56A38()
{
  uint64_t result = sub_1D5AB27E0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t SessionDeactivated.init(session:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB4800();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

uint64_t SessionDeactivated.session.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB4800();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

void static SessionDeactivated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for SessionDeactivated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4800();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for SessionDeactivated(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB4800();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for SessionDeactivated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4800();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for SessionDeactivated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4800();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for SessionDeactivated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4800();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for SessionDeactivated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4800();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionDeactivated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D5A56E1C);
}

uint64_t sub_1D5A56E1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4800();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SessionDeactivated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D5A56E9C);
}

uint64_t sub_1D5A56E9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4800();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SessionDeactivated()
{
  uint64_t result = qword_1EBDE4758;
  if (!qword_1EBDE4758) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D5A56F58()
{
  uint64_t result = sub_1D5AB4800();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t PlaybackUpdated.playback.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB4970();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t PlaybackUpdated.sessionIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PlaybackUpdated() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for PlaybackUpdated()
{
  uint64_t result = qword_1EBDE3038;
  if (!qword_1EBDE3038) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t PlaybackUpdated.init(playback:sessionIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1D5AB4970();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t result = type metadata accessor for PlaybackUpdated();
  uint64_t v10 = (void *)(a4 + *(int *)(result + 20));
  *uint64_t v10 = a2;
  v10[1] = a3;
  return result;
}

void static PlaybackUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t *initializeBufferWithCopyOfBuffer for PlaybackUpdated(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1D5AB4970();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    unint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *unint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for PlaybackUpdated(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB4970();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PlaybackUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB4970();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  unint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PlaybackUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB4970();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  unint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for PlaybackUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB4970();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for PlaybackUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB4970();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  unint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaybackUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D5A574FC);
}

uint64_t sub_1D5A574FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB4970();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for PlaybackUpdated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D5A575D4);
}

uint64_t sub_1D5A575D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1D5AB4970();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1D5A57694()
{
  uint64_t result = sub_1D5AB4970();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t DistributedSessionActivated.session.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB4800();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t DistributedSessionActivated.init(session:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB4800();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static DistributedSessionActivated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t getEnumTagSinglePayload for DistributedSessionActivated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D5A57820);
}

uint64_t sub_1D5A57820(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4800();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for DistributedSessionActivated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D5A578A0);
}

uint64_t sub_1D5A578A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4800();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for DistributedSessionActivated()
{
  uint64_t result = qword_1EBDE3680;
  if (!qword_1EBDE3680) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t static EngagementRequestProcessor.isAppInstalledRequest(_:)(uint64_t a1)
{
  sub_1D5951F00(a1, (uint64_t)v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE38A0);
  if (!swift_dynamicCast()) {
    goto LABEL_18;
  }
  uint64_t v1 = v15;
  uint64_t v11 = sub_1D5AB3350();
  sub_1D5AB5790();
  if (*(void *)(v1 + 16) && (unint64_t v2 = sub_1D5952770((uint64_t)v14), (v3 & 1) != 0))
  {
    sub_1D5951F00(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v15);
  }
  else
  {
    long long v15 = 0u;
    long long v16 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1D5952DB0((uint64_t)v14);
  if (!*((void *)&v16 + 1)) {
    goto LABEL_17;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_18:
    char v9 = 0;
    return v9 & 1;
  }
  uint64_t v4 = v11;
  uint64_t v12 = sub_1D5AB3370();
  uint64_t v13 = v5;
  sub_1D5AB5790();
  if (*(void *)(v4 + 16) && (unint64_t v6 = sub_1D5952770((uint64_t)v14), (v7 & 1) != 0))
  {
    sub_1D5951F00(*(void *)(v4 + 56) + 32 * v6, (uint64_t)&v15);
  }
  else
  {
    long long v15 = 0u;
    long long v16 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1D5952DB0((uint64_t)v14);
  if (!*((void *)&v16 + 1))
  {
LABEL_17:
    sub_1D5A096A8((uint64_t)&v15);
    goto LABEL_18;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_18;
  }
  if (v12 == sub_1D5AB3380() && v13 == v8)
  {
    swift_bridgeObjectRelease_n();
    char v9 = 1;
  }
  else
  {
    char v9 = sub_1D5AB5AF0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v9 & 1;
}

uint64_t static EngagementRequestProcessor.validateEngagementRequest(_:)(uint64_t a1)
{
  sub_1D5951F00(a1, (uint64_t)v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE38A0);
  if (!swift_dynamicCast())
  {
    uint64_t v5 = sub_1D5AB2D80();
    sub_1D5A57E8C();
    uint64_t v6 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v5 - 8) + 104))(v7, *MEMORY[0x1E4F9CA30], v5);
    *(void *)(swift_allocObject() + 16) = v6;
    return sub_1D5AB4550();
  }
  uint64_t v1 = v20;
  uint64_t v17 = sub_1D5AB3340();
  uint64_t v18 = v2;
  sub_1D5AB5790();
  if (*(void *)(v1 + 16) && (unint64_t v3 = sub_1D5952770((uint64_t)v19), (v4 & 1) != 0))
  {
    sub_1D5951F00(*(void *)(v1 + 56) + 32 * v3, (uint64_t)&v20);
  }
  else
  {
    long long v20 = 0u;
    long long v21 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1D5952DB0((uint64_t)v19);
  if (!*((void *)&v21 + 1))
  {
    sub_1D5A096A8((uint64_t)&v20);
    goto LABEL_12;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    uint64_t v10 = sub_1D5AB2D80();
    sub_1D5A57E8C();
    uint64_t v11 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v10 - 8) + 104))(v12, *MEMORY[0x1E4F9CA38], v10);
    *(void *)(swift_allocObject() + 16) = v11;
    return sub_1D5AB4550();
  }
  uint64_t v8 = sub_1D5AB4E70();
  if (v8 >= sub_1D5AB3360())
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_1D5AB2D80();
    sub_1D5A57E8C();
    uint64_t v15 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v14 - 8) + 104))(v16, *MEMORY[0x1E4F9CA20], v14);
    *(void *)(swift_allocObject() + 16) = v15;
  }
  else
  {
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v17;
    *(void *)(v9 + 24) = v18;
  }
  return sub_1D5AB4550();
}

unint64_t sub_1D5A57E8C()
{
  unint64_t result = qword_1EA7278B0;
  if (!qword_1EA7278B0)
  {
    sub_1D5AB2D80();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7278B0);
  }
  return result;
}

uint64_t sub_1D5A57EE4()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D5A57F1C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D5A57F54@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

ValueMetadata *type metadata accessor for EngagementRequestProcessor()
{
  return &type metadata for EngagementRequestProcessor;
}

id HealthWorkoutSession.__allocating_init(session:healthStore:)(void *a1, void *a2)
{
  id v5 = objc_allocWithZone(v2);
  return HealthWorkoutSession.init(session:healthStore:)(a1, a2);
}

unint64_t HealthWorkoutSession.SessionState.state.getter()
{
  return *v0 | ((unint64_t)*((unsigned __int8 *)v0 + 4) << 32);
}

double HealthWorkoutSession.SessionState.elapsedTime.getter()
{
  return *(double *)(v0 + 8);
}

uint64_t HealthWorkoutSession.SessionState.init(state:elapsedTime:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  *(_DWORD *)a2 = result;
  *(unsigned char *)(a2 + 4) = BYTE4(result) & 1;
  *(double *)(a2 + 8) = a3;
  return result;
}

uint64_t sub_1D5A58014@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7278C0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7278C8);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v18 - v11;
  uint64_t v13 = v1 + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession____lazy_storage___calorieStream;
  swift_beginAccess();
  sub_1D596E6CC(v13, (uint64_t)v12, &qword_1EA7278C8);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7278D8);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a1, v12, v14);
  }
  uint64_t v16 = sub_1D594F53C((uint64_t)v12, &qword_1EA7278C8);
  v18[1] = v18;
  MEMORY[0x1F4188790](v16);
  v18[-2] = v1;
  sub_1D5AB22E0();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBD028], v3);
  sub_1D5AB5220();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v10, a1, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
  swift_beginAccess();
  sub_1D5A5FFA0((uint64_t)v10, v13, &qword_1EA7278C8);
  return swift_endAccess();
}

uint64_t sub_1D5A58308(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727B10);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  uint64_t v9 = (uint64_t (**)(uint64_t))(a2 + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_caloriesUpdated);
  uint64_t v10 = *(void *)(a2 + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_caloriesUpdated);
  *uint64_t v9 = sub_1D5A60090;
  v9[1] = (uint64_t (*)(uint64_t))v8;
  return sub_1D5A0A7B0(v10);
}

uint64_t sub_1D5A5844C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727B18);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v32 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D5AB22E0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v31 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v26 - v11;
  if (qword_1EBDE3740 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1D5AB4B50();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EBDE37B0);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v33 = a1;
  uint64_t v30 = v14;
  v14(v12, a1, v7);
  uint64_t v15 = sub_1D5AB4B30();
  os_log_type_t v16 = sub_1D5AB5430();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v28 = v4;
    uint64_t v18 = (uint8_t *)v17;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v29 = a2;
    uint64_t v20 = v19;
    uint64_t v35 = v19;
    uint64_t v27 = v5;
    *(_DWORD *)uint64_t v18 = 136315138;
    int64_t v26 = v18 + 4;
    sub_1D5A60104((unint64_t *)&unk_1EA727B20, MEMORY[0x1E4F9C398]);
    uint64_t v21 = sub_1D5AB5AB0();
    uint64_t v34 = sub_1D5951500(v21, v22, &v35);
    uint64_t v5 = v27;
    sub_1D5AB5680();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    _os_log_impl(&dword_1D5947000, v15, v16, "HealthWorkoutSession: caloriesUpdated: %s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v20, -1, -1);
    uint64_t v23 = v18;
    uint64_t v4 = v28;
    MEMORY[0x1D945AAC0](v23, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
  }

  v30(v31, v33, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727B10);
  unint64_t v24 = v32;
  sub_1D5AB5200();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v24, v4);
}

uint64_t sub_1D5A587F8(uint64_t a1)
{
  return sub_1D5A59108(a1, &qword_1EA7278C8, &qword_1EA7278D8, &OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession____lazy_storage___calorieStream);
}

void (*sub_1D5A58814(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[6] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7278C8);
  v3[7] = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7278D8);
  v3[8] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[9] = v6;
  size_t v7 = *(void *)(v6 + 64);
  v3[10] = malloc(v7);
  uint64_t v8 = malloc(v7);
  v3[11] = v8;
  sub_1D5A58014((uint64_t)v8);
  return sub_1D5A58908;
}

void sub_1D5A58908(uint64_t a1, char a2)
{
}

uint64_t sub_1D5A5891C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6, void *a7)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(a6);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, v15);
  uint64_t v19 = *a2;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v14, v18, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  uint64_t v20 = v19 + *a7;
  swift_beginAccess();
  sub_1D5A5FFA0((uint64_t)v14, v20, a5);
  return swift_endAccess();
}

uint64_t sub_1D5A58AC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7278E0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7278E8);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v18 - v11;
  uint64_t v13 = v1 + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession____lazy_storage___sessionStateStream;
  swift_beginAccess();
  sub_1D596E6CC(v13, (uint64_t)v12, &qword_1EA7278E8);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7278F8);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a1, v12, v14);
  }
  uint64_t v16 = sub_1D594F53C((uint64_t)v12, &qword_1EA7278E8);
  v18[1] = v18;
  MEMORY[0x1F4188790](v16);
  v18[-2] = v1;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBD028], v3);
  sub_1D5AB5220();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v10, a1, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
  swift_beginAccess();
  sub_1D5A5FFA0((uint64_t)v10, v13, &qword_1EA7278E8);
  return swift_endAccess();
}

uint64_t sub_1D5A58DAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727B00);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  uint64_t v9 = (uint64_t (**)(int *))(a2 + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_sessionStateUpdated);
  uint64_t v10 = *(void *)(a2 + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_sessionStateUpdated);
  *uint64_t v9 = sub_1D5A60010;
  v9[1] = (uint64_t (*)(int *))v8;
  return sub_1D5A0A7B0(v10);
}

uint64_t sub_1D5A58EF0(int *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727B08);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v6 = *a1;
  char v7 = *((unsigned char *)a1 + 4);
  uint64_t v8 = *((void *)a1 + 1);
  if (qword_1EBDE3740 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1D5AB4B50();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EBDE37B0);
  uint64_t v10 = sub_1D5AB4B30();
  os_log_type_t v11 = sub_1D5AB5430();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 134217984;
    v14[0] = v8;
    sub_1D5AB5680();
    _os_log_impl(&dword_1D5947000, v10, v11, "HealthWorkoutSession: sessionStateUpdated: %f", v12, 0xCu);
    MEMORY[0x1D945AAC0](v12, -1, -1);
  }

  LODWORD(v14[0]) = v6;
  BYTE4(v14[0]) = v7;
  v14[1] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727B00);
  sub_1D5AB5200();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1D5A590EC(uint64_t a1)
{
  return sub_1D5A59108(a1, &qword_1EA7278E8, &qword_1EA7278F8, &OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession____lazy_storage___sessionStateStream);
}

uint64_t sub_1D5A59108(uint64_t a1, uint64_t *a2, uint64_t *a3, void *a4)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(a2);
  MEMORY[0x1F4188790](v9 - 8);
  os_log_type_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v11, a1, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  uint64_t v14 = v4 + *a4;
  swift_beginAccess();
  sub_1D5A5FFA0((uint64_t)v11, v14, a2);
  return swift_endAccess();
}

void (*sub_1D5A59244(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[6] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7278E8);
  v3[7] = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7278F8);
  v3[8] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[9] = v6;
  size_t v7 = *(void *)(v6 + 64);
  v3[10] = malloc(v7);
  uint64_t v8 = malloc(v7);
  v3[11] = v8;
  sub_1D5A58AC0((uint64_t)v8);
  return sub_1D5A59338;
}

void sub_1D5A59338(uint64_t a1, char a2)
{
}

void sub_1D5A5934C(uint64_t a1, char a2, void *a3, uint64_t *a4)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v8 = *(void **)(*(void *)a1 + 80);
  size_t v7 = *(void **)(*(void *)a1 + 88);
  if (a2)
  {
    uint64_t v9 = v6[8];
    uint64_t v10 = v6[9];
    uint64_t v12 = v6[6];
    os_log_type_t v11 = (void *)v6[7];
    (*(void (**)(void, void, uint64_t))(v10 + 16))(v6[10], v6[11], v9);
    (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v11, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v11, 0, 1, v9);
    uint64_t v13 = v12 + *a3;
    swift_beginAccess();
    sub_1D5A5FFA0((uint64_t)v11, v13, a4);
    swift_endAccess();
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
  }
  else
  {
    uint64_t v14 = v6[8];
    uint64_t v15 = v6[9];
    uint64_t v16 = v6[6];
    os_log_type_t v11 = (void *)v6[7];
    (*(void (**)(void *, void, uint64_t))(v15 + 32))(v11, v6[11], v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
    uint64_t v17 = v16 + *a3;
    swift_beginAccess();
    sub_1D5A5FFA0((uint64_t)v11, v17, a4);
    swift_endAccess();
  }
  free(v7);
  free(v8);
  free(v11);
  free(v6);
}

id HealthWorkoutSession.init(session:healthStore:)(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v130 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA727900);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v117 = (char *)v111 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v116 = (char *)v111 - v8;
  uint64_t v119 = sub_1D5AB2AC0();
  uint64_t v121 = *(void *)(v119 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v119);
  uint64_t v118 = (char *)v111 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v115 = (char *)v111 - v11;
  uint64_t v12 = sub_1D5AB2ED0();
  uint64_t v113 = *(void *)(v12 - 8);
  uint64_t v114 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v111 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7251B8);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)v111 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1D5AB4800();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)v111 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = &v2[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_workout];
  uint64_t v23 = sub_1D5AB48E0();
  unint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
  uint64_t v126 = v22;
  v24(v22, 1, 1, v23);
  unint64_t v25 = (uint64_t *)&v3[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_caloriesUpdated];
  *unint64_t v25 = 0;
  v25[1] = 0;
  uint64_t v124 = v25;
  int64_t v26 = &v3[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession____lazy_storage___calorieStream];
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7278D8);
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56);
  uint64_t v125 = v26;
  v28(v26, 1, 1, v27);
  uint64_t v29 = (uint64_t *)&v3[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_sessionStateUpdated];
  *uint64_t v29 = 0;
  v29[1] = 0;
  long long v122 = v29;
  uint64_t v30 = &v3[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession____lazy_storage___sessionStateStream];
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7278F8);
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56);
  uint64_t v123 = v30;
  v32(v30, 1, 1, v31);
  sub_1D59E8AE0(0, &qword_1EA727928);
  uint64_t v128 = v19;
  uint64_t v129 = a1;
  (*(void (**)(char *, void *, uint64_t))(v19 + 16))(v21, a1, v18);
  uint64_t v33 = v3;
  uint64_t v34 = v127;
  id v35 = sub_1D598B490(v21);
  if (!v34)
  {
    uint64_t v48 = v35;
    v111[1] = v14;
    v111[2] = v17;
    uint64_t v127 = v33;
    uint64_t v120 = v18;
    uint64_t v49 = v130[4];
    __swift_project_boxed_opaque_existential_1(v130, v130[3]);
    uint64_t v50 = *(uint64_t (**)(void))(v49 + 152);
    id v51 = v48;
    id v53 = (id)v50();
    id v54 = objc_msgSend(v53, sel_associatedWorkoutBuilder);
    unint64_t v55 = v130;
    uint64_t v56 = v130[3];
    uint64_t v57 = v130[4];
    __swift_project_boxed_opaque_existential_1(v130, v56);
    int64_t v58 = (void *)(*(uint64_t (**)(id, uint64_t, uint64_t))(v57 + 160))(v51, v56, v57);
    id v112 = v51;

    objc_msgSend(v54, sel_setDataSource_, v58);
    unint64_t v59 = v127;
    *(void *)&v127[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_workoutSession] = v53;
    *(void *)&v59[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_builder] = v54;
    unint64_t v60 = (char *)v53;
    uint64_t v125 = (char *)v54;
    uint64_t v61 = sub_1D5AB4610();
    unint64_t v62 = (uint64_t *)&v59[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_sessionIdentifier];
    *unint64_t v62 = v61;
    v62[1] = v63;
    uint64_t v64 = v55[3];
    uint64_t v65 = v55[4];
    __swift_project_boxed_opaque_existential_1(v55, v64);
    char v66 = (*(uint64_t (**)(uint64_t, uint64_t))(v65 + 128))(v64, v65);
    uint64_t v126 = v60;
    uint64_t v124 = 0;
    char v68 = v66 & 1;
    uint64_t v69 = v119;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727950);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1D5AC1BA0;
    *(void *)(inited + 32) = 0xD000000000000029;
    *(void *)(inited + 40) = 0x80000001D5AC9D30;
    int64_t v71 = v115;
    sub_1D5AB4690();
    uint64_t v72 = sub_1D5AB28C0();
    uint64_t v74 = v73;
    int64_t v75 = *(char **)(v121 + 8);
    v121 += 8;
    uint64_t v123 = v75;
    ((void (*)(char *, uint64_t))v75)(v71, v69);
    uint64_t v76 = MEMORY[0x1E4FBB1A0];
    *(void *)(inited + 48) = v72;
    *(void *)(inited + 56) = v74;
    *(void *)(inited + 72) = v76;
    *(void *)(inited + 80) = 0xD000000000000022;
    *(void *)(inited + 88) = 0x80000001D5AC88D0;
    *(void *)(inited + 96) = sub_1D5AB4610();
    *(void *)(inited + 104) = v77;
    *(void *)(inited + 120) = v76;
    *(void *)(inited + 128) = 0xD00000000000001ALL;
    *(void *)(inited + 136) = 0x80000001D5AC9D60;
    uint64_t v78 = sub_1D5AB2F00();
    *(void *)(inited + 168) = v76;
    *(void *)(inited + 144) = v78;
    *(void *)(inited + 152) = v79;
    if (qword_1EA724DC0 != -1) {
      swift_once();
    }
    uint64_t v80 = *(void *)algn_1EA727808;
    *(void *)(inited + 176) = qword_1EA727800;
    *(void *)(inited + 184) = v80;
    uint64_t v81 = v116;
    if (v68) {
      uint64_t v82 = 2;
    }
    else {
      uint64_t v82 = 1;
    }
    uint64_t v83 = MEMORY[0x1E4FBB550];
    *(void *)(inited + 192) = v82;
    *(void *)(inited + 216) = v83;
    *(void *)(inited + 224) = 0xD00000000000002BLL;
    *(void *)(inited + 232) = 0x80000001D5AC9D80;
    swift_bridgeObjectRetain();
    sub_1D5AB46F0();
    uint64_t v84 = sub_1D5AB2DF0();
    uint64_t v85 = (uint64_t)v81;
    uint64_t v86 = *(void *)(v84 - 8);
    unint64_t v87 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v86 + 48);
    if (v87(v85, 1, v84) == 1)
    {
      sub_1D594F53C(v85, (uint64_t *)&unk_1EA727900);
      *(_OWORD *)(inited + 240) = 0u;
      *(_OWORD *)(inited + 256) = 0u;
    }
    else
    {
      uint64_t v88 = sub_1D5AB2DE0();
      *(void *)(inited + 264) = v76;
      *(void *)(inited + 240) = v88;
      *(void *)(inited + 248) = v89;
      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v85, v84);
    }
    *(void *)(inited + 272) = 0xD00000000000002CLL;
    *(void *)(inited + 280) = 0x80000001D5AC9DB0;
    uint64_t v90 = (uint64_t)v117;
    sub_1D5AB46F0();
    if (v87(v90, 1, v84) == 1)
    {
      sub_1D594F53C(v90, (uint64_t *)&unk_1EA727900);
      uint64_t v91 = v130;
      unint64_t v92 = v127;
      unint64_t v93 = v118;
    }
    else
    {
      uint64_t v94 = sub_1D5AB2DD0();
      uint64_t v95 = v90;
      uint64_t v97 = v96;
      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v95, v84);
      uint64_t v91 = v130;
      unint64_t v92 = v127;
      unint64_t v93 = v118;
      if (v97)
      {
        *(void *)(inited + 312) = v76;
        *(void *)(inited + 288) = v94;
        *(void *)(inited + 296) = v97;
LABEL_23:
        uint64_t v98 = v129;
        *(void *)(inited + 320) = sub_1D5AB4DF0();
        *(void *)(inited + 328) = v99;
        *(void *)(inited + 360) = MEMORY[0x1E4FBB390];
        *(unsigned char *)(inited + 336) = 1;
        *(void *)(inited + 368) = sub_1D5AB4DF0();
        *(void *)(inited + 376) = v100;
        sub_1D5AB4690();
        uint64_t v101 = sub_1D5AB28C0();
        uint64_t v102 = v93;
        uint64_t v104 = v103;
        ((void (*)(char *, uint64_t))v123)(v102, v119);
        *(void *)(inited + 408) = v76;
        *(void *)(inited + 384) = v101;
        *(void *)(inited + 392) = v104;
        unint64_t v105 = sub_1D5971A3C(inited);
        uint64_t v106 = sub_1D5A5A424(v105);
        swift_bridgeObjectRelease();
        *(void *)&v92[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_metadata] = v106;

        uint64_t v107 = (objc_class *)type metadata accessor for HealthWorkoutSession();
        v132.receiver = v92;
        v132.super_class = v107;
        id v108 = objc_msgSendSuper2(&v132, sel_init);
        uint64_t v109 = v126;
        objc_msgSend(v126, sel_setDelegate_, v108);

        id v52 = v108;
        int v110 = v125;
        objc_msgSend(v125, sel_setDelegate_, v52);

        (*(void (**)(void *, uint64_t))(v128 + 8))(v98, v120);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v91);
        return v52;
      }
    }
    *(_OWORD *)(inited + 288) = 0u;
    *(_OWORD *)(inited + 304) = 0u;
    goto LABEL_23;
  }
  unint64_t v36 = v130;
  if (qword_1EA724E10 != -1) {
    swift_once();
  }
  uint64_t v37 = sub_1D5AB4B50();
  __swift_project_value_buffer(v37, (uint64_t)qword_1EA727C70);
  id v38 = v34;
  id v39 = v34;
  uint64_t v40 = sub_1D5AB4B30();
  os_log_type_t v41 = sub_1D5AB5430();
  if (os_log_type_enabled(v40, v41))
  {
    unint64_t v42 = (uint8_t *)swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    uint64_t v120 = v18;
    uint64_t v44 = v43;
    v131[0] = v43;
    uint64_t v127 = v33;
    *(_DWORD *)unint64_t v42 = 136315138;
    swift_getErrorValue();
    uint64_t v45 = MEMORY[0x1D9459FA0](v134, v135);
    uint64_t v133 = sub_1D5951500(v45, v46, v131);
    unint64_t v36 = v130;
    uint64_t v33 = v127;
    sub_1D5AB5680();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D5947000, v40, v41, "HealthWorkoutSession - failed to make HKWorkoutConfiguration: %s", v42, 0xCu);
    swift_arrayDestroy();
    uint64_t v47 = v44;
    uint64_t v18 = v120;
    MEMORY[0x1D945AAC0](v47, -1, -1);
    MEMORY[0x1D945AAC0](v42, -1, -1);
  }
  else
  {
  }
  id v52 = v129;
  swift_willThrow();
  (*(void (**)(id, uint64_t))(v128 + 8))(v52, v18);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
  sub_1D594F53C((uint64_t)v126, &qword_1EA727930);
  sub_1D5A0A7B0(*v124);
  sub_1D594F53C((uint64_t)v125, &qword_1EA7278C8);
  sub_1D5A0A7B0(*v122);
  sub_1D594F53C((uint64_t)v123, &qword_1EA7278E8);

  type metadata accessor for HealthWorkoutSession();
  swift_deallocPartialClassInstance();
  return v52;
}

uint64_t sub_1D5A5A414(uint64_t a1)
{
  return sub_1D5A58308(a1, *(void *)(v1 + 16));
}

uint64_t sub_1D5A5A41C(uint64_t a1)
{
  return sub_1D5A58DAC(a1, *(void *)(v1 + 16));
}

uint64_t sub_1D5A5A424(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBC868];
  uint64_t v41 = MEMORY[0x1E4FBC868];
  uint64_t v31 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v30 = (unint64_t)(63 - v3) >> 6;
  unint64_t v42 = &v35;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v7 << 6);
      goto LABEL_25;
    }
    int64_t v11 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v11 >= v30) {
      goto LABEL_40;
    }
    unint64_t v12 = *(void *)(v31 + 8 * v11);
    int64_t v13 = v7 + 1;
    if (!v12)
    {
      int64_t v13 = v7 + 2;
      if (v7 + 2 >= v30) {
        goto LABEL_40;
      }
      unint64_t v12 = *(void *)(v31 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v7 + 3;
        if (v7 + 3 >= v30) {
          goto LABEL_40;
        }
        unint64_t v12 = *(void *)(v31 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v7 + 4;
          if (v7 + 4 >= v30) {
            goto LABEL_40;
          }
          unint64_t v12 = *(void *)(v31 + 8 * v13);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v7 = v13;
LABEL_25:
    uint64_t v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    sub_1D596E6CC(*(void *)(a1 + 56) + 32 * v10, (uint64_t)v40, &qword_1EBDE4E20);
    *(void *)&long long v39 = v17;
    *((void *)&v39 + 1) = v16;
    long long v37 = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    sub_1D596E6CC((uint64_t)v38, (uint64_t)&v32, &qword_1EBDE4E20);
    if (v33)
    {
      sub_1D5979A10(&v32, v36);
      long long v18 = v37;
      v34[2] = v37;
      sub_1D59799AC((uint64_t)v38, (uint64_t)v42, &qword_1EBDE4E20);
      sub_1D5979A10(v36, v34);
      unint64_t v19 = *(void *)(v2 + 16);
      if (*(void *)(v2 + 24) <= v19)
      {
        uint64_t v20 = v19 + 1;
        swift_bridgeObjectRetain();
        sub_1D59748A0(v20, 1);
        uint64_t v2 = v41;
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_1D5AB5C20();
      sub_1D5AB4E60();
      uint64_t result = sub_1D5AB5C60();
      uint64_t v21 = v2 + 64;
      uint64_t v22 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v2 + 64 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v25 = __clz(__rbit64((-1 << v23) & ~*(void *)(v2 + 64 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v28 = v24 == v27;
          if (v24 == v27) {
            unint64_t v24 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v21 + 8 * v24);
        }
        while (v29 == -1);
        unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
      }
      *(void *)(v21 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
      *(_OWORD *)(*(void *)(v2 + 48) + 16 * v25) = v18;
      sub_1D5979A10(v34, (_OWORD *)(*(void *)(v2 + 56) + 32 * v25));
      ++*(void *)(v2 + 16);
      uint64_t v8 = (long long *)v42;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1D594F53C((uint64_t)&v37, &qword_1EA727AF8);
      uint64_t v8 = &v32;
    }
    uint64_t result = sub_1D594F53C((uint64_t)v8, &qword_1EBDE4E20);
  }
  int64_t v14 = v7 + 5;
  if (v7 + 5 >= v30)
  {
LABEL_40:
    sub_1D59AE720();
    return v2;
  }
  unint64_t v12 = *(void *)(v31 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v7 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v30) {
      goto LABEL_40;
    }
    unint64_t v12 = *(void *)(v31 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_24;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

id HealthWorkoutSession.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void HealthWorkoutSession.init()()
{
}

id HealthWorkoutSession.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HealthWorkoutSession();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t HealthWorkoutSession.activate()()
{
  *(void *)(v1 + 184) = v0;
  return MEMORY[0x1F4188298](sub_1D5A5A9BC, 0, 0);
}

uint64_t sub_1D5A5A9BC()
{
  uint64_t v1 = *(void **)(v0[23] + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_builder);
  uint64_t v2 = sub_1D5AB4D60();
  v0[24] = v2;
  v0[2] = v0;
  v0[3] = sub_1D5A5AAF8;
  uint64_t v3 = swift_continuation_init();
  v0[18] = MEMORY[0x1E4F143A8];
  v0[19] = 0x40000000;
  v0[20] = sub_1D59F76F4;
  v0[21] = &block_descriptor_0;
  v0[22] = v3;
  objc_msgSend(v1, sel_addMetadata_completion_, v2, v0 + 18);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1D5A5AAF8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 200) = v1;
  if (v1) {
    uint64_t v2 = sub_1D5A5AE84;
  }
  else {
    uint64_t v2 = sub_1D5A5AC08;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D5A5AC08()
{
  uint64_t v1 = *(void *)(v0 + 184);

  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_workoutSession);
  *(void *)(v0 + 80) = v0;
  *(void *)(v0 + 88) = sub_1D5A5AD0C;
  uint64_t v3 = swift_continuation_init();
  *(void *)(v0 + 144) = MEMORY[0x1E4F143A8];
  *(void *)(v0 + 152) = 0x40000000;
  *(void *)(v0 + 160) = sub_1D59F76F4;
  *(void *)(v0 + 168) = &block_descriptor_1;
  *(void *)(v0 + 176) = v3;
  objc_msgSend(v2, sel_prepareWithCompletion_, v0 + 144);
  return MEMORY[0x1F41881E8](v0 + 80);
}

uint64_t sub_1D5A5AD0C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  *(void *)(*(void *)v0 + 208) = v1;
  if (v1) {
    uint64_t v2 = sub_1D5A5AEF4;
  }
  else {
    uint64_t v2 = sub_1D5A5AE1C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D5A5AE1C()
{
  sub_1D5A5AF60(0);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D5A5AE84()
{
  uint64_t v1 = *(void **)(v0 + 192);
  swift_willThrow();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1D5A5AEF4()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D5A5AF60(unsigned __int8 a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727930);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_builder), sel_elapsedTime);
  uint64_t v7 = v6;
  sub_1D5AB5300();
  LOBYTE(v13) = 1;
  sub_1D5AB48A0();
  uint64_t v8 = sub_1D5AB48E0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 0, 1, v8);
  uint64_t v9 = v1 + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_workout;
  swift_beginAccess();
  sub_1D5A5FFA0((uint64_t)v5, v9, &qword_1EA727930);
  uint64_t result = swift_endAccess();
  int64_t v11 = *(void (**)(int *))(v1 + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_sessionStateUpdated);
  if (v11)
  {
    int v13 = a1;
    char v14 = 1;
    uint64_t v15 = v7;
    swift_retain();
    v11(&v13);
    return sub_1D5A0A7B0((uint64_t)v11);
  }
  return result;
}

uint64_t HealthWorkoutSession.pause()()
{
  *(void *)(v1 + 120) = v0;
  return MEMORY[0x1F4188298](sub_1D5A5B110, 0, 0);
}

uint64_t sub_1D5A5B110()
{
  uint64_t v1 = *(void **)(v0[15] + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_workoutSession);
  uint64_t v2 = (char *)objc_msgSend(v1, sel_state);
  if ((unint64_t)(v2 - 3) < 4 || v2 == (char *)1)
  {
    if (qword_1EBDE3740 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1D5AB4B50();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EBDE37B0);
    uint64_t v5 = sub_1D5AB4B30();
    os_log_type_t v6 = sub_1D5AB5430();
    if (!os_log_type_enabled(v5, v6)) {
      goto LABEL_11;
    }
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_1D5947000, v5, v6, "HealthWorkoutSession: The workout is not going.", v7, 2u);
    uint64_t v8 = v7;
  }
  else
  {
    if (v2 == (char *)2)
    {
      v0[2] = v0;
      v0[3] = sub_1D5A5B440;
      uint64_t v11 = swift_continuation_init();
      v0[10] = MEMORY[0x1E4F143A8];
      v0[11] = 0x40000000;
      v0[12] = sub_1D59F76F4;
      v0[13] = &block_descriptor_3;
      v0[14] = v11;
      objc_msgSend(v1, sel_pauseWithCompletion_, v0 + 10);
      return MEMORY[0x1F41881E8](v0 + 2);
    }
    if (qword_1EBDE3740 != -1) {
      swift_once();
    }
    uint64_t v12 = (void *)v0[15];
    uint64_t v13 = sub_1D5AB4B50();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EBDE37B0);
    id v14 = v12;
    uint64_t v5 = sub_1D5AB4B30();
    os_log_type_t v15 = sub_1D5AB5430();
    BOOL v16 = os_log_type_enabled(v5, v15);
    uint64_t v17 = (void *)v0[15];
    if (!v16)
    {

      goto LABEL_11;
    }
    long long v18 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)long long v18 = 134217984;
    v0[10] = objc_msgSend(v1, sel_state);
    sub_1D5AB5680();

    _os_log_impl(&dword_1D5947000, v5, v15, "HealthWorkoutSession: Unknown HealthWorkoutSession state: %ld", v18, 0xCu);
    uint64_t v8 = v18;
  }
  MEMORY[0x1D945AAC0](v8, -1, -1);
LABEL_11:

  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1D5A5B440()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 128) = v1;
  if (v1) {
    uint64_t v2 = sub_1D5A5B5B8;
  }
  else {
    uint64_t v2 = sub_1D5A5B550;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D5A5B550()
{
  sub_1D5A5AF60(1u);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D5A5B5B8()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t HealthWorkoutSession.resume()()
{
  v1[42] = v0;
  uint64_t v2 = sub_1D5AB1CE0();
  v1[43] = v2;
  v1[44] = *(void *)(v2 - 8);
  v1[45] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D5A5B6E4, 0, 0);
}

uint64_t sub_1D5A5B6E4()
{
  uint64_t v1 = *(void **)(v0[42] + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_workoutSession);
  switch((unint64_t)objc_msgSend(v1, sel_state))
  {
    case 1uLL:
    case 5uLL:
      uint64_t v2 = v0 + 2;
      uint64_t v4 = v0[44];
      uint64_t v3 = v0[45];
      uint64_t v5 = v0[43];
      sub_1D5AB1CD0();
      uint64_t v6 = sub_1D5AB1C80();
      v0[46] = v6;
      uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
      v0[47] = v7;
      v0[48] = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v7(v3, v5);
      v0[2] = v0;
      v0[3] = sub_1D5A5BB38;
      uint64_t v8 = swift_continuation_init();
      v0[31] = MEMORY[0x1E4F143A8];
      v0[32] = 0x40000000;
      v0[33] = sub_1D59F76F4;
      v0[34] = &block_descriptor_7_0;
      v0[35] = v8;
      objc_msgSend(v1, sel_startActivityWithDate_completion_, v6, v0 + 31);
      goto LABEL_13;
    case 2uLL:
      goto LABEL_18;
    case 3uLL:
    case 6uLL:
      if (qword_1EBDE3740 != -1) {
        swift_once();
      }
      uint64_t v9 = sub_1D5AB4B50();
      __swift_project_value_buffer(v9, (uint64_t)qword_1EBDE37B0);
      unint64_t v10 = sub_1D5AB4B30();
      os_log_type_t v11 = sub_1D5AB5430();
      if (!os_log_type_enabled(v10, v11)) {
        goto LABEL_17;
      }
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_1D5947000, v10, v11, "HealthWorkoutSession: The workout has ended. Cannot resume.", v12, 2u);
      uint64_t v13 = v12;
      goto LABEL_11;
    case 4uLL:
      uint64_t v2 = v0 + 10;
      v0[10] = v0;
      v0[11] = sub_1D5A5BF14;
      uint64_t v22 = swift_continuation_init();
      v0[36] = MEMORY[0x1E4F143A8];
      v0[37] = 0x40000000;
      v0[38] = sub_1D59F76F4;
      v0[39] = &block_descriptor_5_0;
      v0[40] = v22;
      objc_msgSend(v1, sel_resumeWithCompletion_, v0 + 36);
LABEL_13:
      return MEMORY[0x1F41881E8](v2);
    default:
      id v14 = (void **)(v0 + 42);
      if (qword_1EBDE3740 != -1) {
        swift_once();
      }
      os_log_type_t v15 = *v14;
      uint64_t v16 = sub_1D5AB4B50();
      __swift_project_value_buffer(v16, (uint64_t)qword_1EBDE37B0);
      id v17 = v15;
      unint64_t v10 = sub_1D5AB4B30();
      os_log_type_t v18 = sub_1D5AB5430();
      BOOL v19 = os_log_type_enabled(v10, v18);
      uint64_t v20 = *v14;
      if (v19)
      {
        uint64_t v21 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v21 = 134217984;
        v0[41] = objc_msgSend(v1, sel_state);
        sub_1D5AB5680();

        _os_log_impl(&dword_1D5947000, v10, v18, "HealthWorkoutSession: Unknown HealthWorkoutSession state: %ld", v21, 0xCu);
        uint64_t v13 = v21;
LABEL_11:
        MEMORY[0x1D945AAC0](v13, -1, -1);
      }
      else
      {
      }
LABEL_17:

LABEL_18:
      swift_task_dealloc();
      unint64_t v23 = (uint64_t (*)(void))v0[1];
      return v23();
  }
}

uint64_t sub_1D5A5BB38()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 392) = v1;
  if (v1) {
    uint64_t v2 = sub_1D5A5C108;
  }
  else {
    uint64_t v2 = sub_1D5A5BC48;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D5A5BC48()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 376);
  uint64_t v2 = *(void *)(v0 + 360);
  uint64_t v4 = *(void *)(v0 + 336);
  uint64_t v3 = *(void *)(v0 + 344);

  uint64_t v5 = *(void **)(v4 + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_builder);
  sub_1D5AB1CD0();
  uint64_t v6 = sub_1D5AB1C80();
  *(void *)(v0 + 400) = v6;
  v1(v2, v3);
  *(void *)(v0 + 144) = v0;
  *(void *)(v0 + 152) = sub_1D5A5BD8C;
  uint64_t v7 = swift_continuation_init();
  *(void *)(v0 + 208) = MEMORY[0x1E4F143A8];
  *(void *)(v0 + 216) = 0x40000000;
  *(void *)(v0 + 224) = sub_1D59F76F4;
  *(void *)(v0 + 232) = &block_descriptor_8;
  *(void *)(v0 + 240) = v7;
  objc_msgSend(v5, sel_beginCollectionWithStartDate_completion_, v6, v0 + 208);
  return MEMORY[0x1F41881E8](v0 + 144);
}

uint64_t sub_1D5A5BD8C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 176);
  *(void *)(*(void *)v0 + 408) = v1;
  if (v1) {
    uint64_t v2 = sub_1D5A5C184;
  }
  else {
    uint64_t v2 = sub_1D5A5BE9C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D5A5BE9C()
{
  sub_1D5A5AF60(0);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D5A5BF14()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  *(void *)(*(void *)v0 + 416) = v1;
  if (v1) {
    uint64_t v2 = sub_1D5A5C094;
  }
  else {
    uint64_t v2 = sub_1D5A5C024;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D5A5C024()
{
  sub_1D5A5AF60(0);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D5A5C094()
{
  swift_willThrow();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D5A5C108()
{
  uint64_t v1 = *(void **)(v0 + 368);
  swift_willThrow();

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1D5A5C184()
{
  uint64_t v1 = *(void **)(v0 + 400);
  swift_willThrow();

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t HealthWorkoutSession.deactivate()()
{
  v1[73] = v0;
  uint64_t v2 = sub_1D5AB1CE0();
  v1[74] = v2;
  v1[75] = *(void *)(v2 - 8);
  v1[76] = swift_task_alloc();
  v1[77] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D5A5C2CC, 0, 0);
}

uint64_t sub_1D5A5C2CC()
{
  uint64_t v43 = v0;
  sub_1D5AB1CD0();
  if (qword_1EBDE3740 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[77];
  uint64_t v2 = v0[76];
  uint64_t v3 = v0[75];
  uint64_t v4 = v0[74];
  uint64_t v5 = (id *)(v0 + 73);
  uint64_t v6 = (void *)v0[73];
  uint64_t v7 = sub_1D5AB4B50();
  v0[78] = __swift_project_value_buffer(v7, (uint64_t)qword_1EBDE37B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  id v8 = v6;
  uint64_t v9 = sub_1D5AB4B30();
  os_log_type_t v10 = sub_1D5AB5430();
  BOOL v11 = os_log_type_enabled(v9, v10);
  uint64_t v12 = v0[76];
  uint64_t v13 = v0[75];
  uint64_t v14 = v0[74];
  os_log_type_t v15 = (char *)v0[73];
  if (v11)
  {
    os_log_type_t type = v10;
    uint64_t v39 = v0[74];
    uint64_t v16 = swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    uint64_t v42 = v40;
    *(_DWORD *)uint64_t v16 = 136315394;
    uint64_t v17 = v12;
    uint64_t v19 = *(void *)&v15[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_sessionIdentifier];
    unint64_t v18 = *(void *)&v15[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_sessionIdentifier + 8];
    swift_bridgeObjectRetain();
    v0[71] = sub_1D5951500(v19, v18, &v42);
    sub_1D5AB5680();
    swift_bridgeObjectRelease();

    *(_WORD *)(v16 + 12) = 2080;
    sub_1D5A60104((unint64_t *)&unk_1EA727980, MEMORY[0x1E4F27928]);
    uint64_t v20 = sub_1D5AB5AB0();
    v0[72] = sub_1D5951500(v20, v21, &v42);
    uint64_t v5 = (id *)(v0 + 73);
    sub_1D5AB5680();
    swift_bridgeObjectRelease();
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v22(v17, v39);
    _os_log_impl(&dword_1D5947000, v9, type, "HealthWorkoutSession: Ending workout: %s at %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v40, -1, -1);
    MEMORY[0x1D945AAC0](v16, -1, -1);
  }
  else
  {

    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v22(v12, v14);
  }

  v0[79] = v22;
  unint64_t v23 = *(void **)(v0[73] + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_workoutSession);
  v0[80] = v23;
  unint64_t v24 = (unint64_t)objc_msgSend(v23, sel_state);
  if (v24 > 6) {
    goto LABEL_10;
  }
  if (((1 << v24) & 0x14) != 0)
  {
    uint64_t v31 = sub_1D5AB1C80();
    v0[82] = v31;
    v0[26] = v0;
    v0[27] = sub_1D5A5CB2C;
    v0[66] = swift_continuation_init();
    v0[62] = MEMORY[0x1E4F143A8];
    v0[63] = 0x40000000;
    v0[64] = sub_1D59F76F4;
    v0[65] = &block_descriptor_12;
    objc_msgSend(v23, sel_stopActivityWithDate_completion_, v31, v0 + 62);
    long long v32 = v0 + 26;
    goto LABEL_18;
  }
  if (((1 << v24) & 0x22) == 0)
  {
    if (((1 << v24) & 0x48) != 0)
    {
LABEL_16:
      uint64_t v33 = v0 + 2;
      uint64_t v35 = *(void **)(v0[73] + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_builder);
      v0[85] = v35;
      uint64_t v36 = sub_1D5AB1C80();
      v0[86] = v36;
      v0[2] = v0;
      v0[3] = sub_1D5A5CE48;
      uint64_t v37 = swift_continuation_init();
      v0[52] = MEMORY[0x1E4F143A8];
      v0[53] = 0x40000000;
      v0[54] = sub_1D59F76F4;
      v0[55] = &block_descriptor_9_0;
      v0[56] = v37;
      objc_msgSend(v35, sel_endCollectionWithEndDate_completion_, v36, v0 + 52);
      goto LABEL_17;
    }
LABEL_10:
    id v25 = *v5;
    char v26 = sub_1D5AB4B30();
    os_log_type_t v27 = sub_1D5AB5430();
    BOOL v28 = os_log_type_enabled(v26, v27);
    id v29 = *v5;
    if (v28)
    {
      int64_t v30 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)int64_t v30 = 134217984;
      v0[69] = objc_msgSend(v23, sel_state);
      sub_1D5AB5680();

      _os_log_impl(&dword_1D5947000, v26, v27, "HealthWorkoutSession: Unknown HealthWorkoutSession state: %ld", v30, 0xCu);
      MEMORY[0x1D945AAC0](v30, -1, -1);
    }
    else
    {
    }
    goto LABEL_16;
  }
  uint64_t v33 = v0 + 10;
  v0[10] = v0;
  v0[11] = sub_1D5A5C904;
  uint64_t v34 = swift_continuation_init();
  v0[47] = MEMORY[0x1E4F143A8];
  v0[48] = 0x40000000;
  v0[49] = sub_1D59F76F4;
  v0[50] = &block_descriptor_14;
  v0[51] = v34;
  objc_msgSend(v23, sel_endWithCompletion_, v0 + 47);
LABEL_17:
  long long v32 = v33;
LABEL_18:
  return MEMORY[0x1F41881E8](v32);
}

uint64_t sub_1D5A5C904()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  *(void *)(*(void *)v0 + 648) = v1;
  if (v1) {
    uint64_t v2 = sub_1D5A5D574;
  }
  else {
    uint64_t v2 = sub_1D5A5CA14;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D5A5CA14()
{
  uint64_t v1 = *(void **)(v0[73] + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_builder);
  v0[85] = v1;
  uint64_t v2 = sub_1D5AB1C80();
  v0[86] = v2;
  v0[2] = v0;
  v0[3] = sub_1D5A5CE48;
  uint64_t v3 = swift_continuation_init();
  v0[52] = MEMORY[0x1E4F143A8];
  v0[53] = 0x40000000;
  v0[54] = sub_1D59F76F4;
  v0[55] = &block_descriptor_9_0;
  v0[56] = v3;
  objc_msgSend(v1, sel_endCollectionWithEndDate_completion_, v2, v0 + 52);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1D5A5CB2C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 240);
  *(void *)(*(void *)v0 + 664) = v1;
  if (v1) {
    uint64_t v2 = sub_1D5A5D624;
  }
  else {
    uint64_t v2 = sub_1D5A5CC3C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D5A5CC3C()
{
  uint64_t v1 = *(void **)(v0 + 640);

  *(void *)(v0 + 144) = v0;
  *(void *)(v0 + 152) = sub_1D5A5CD38;
  uint64_t v2 = swift_continuation_init();
  *(void *)(v0 + 456) = MEMORY[0x1E4F143A8];
  *(void *)(v0 + 464) = 0x40000000;
  *(void *)(v0 + 472) = sub_1D59F76F4;
  *(void *)(v0 + 480) = &block_descriptor_13;
  *(void *)(v0 + 488) = v2;
  objc_msgSend(v1, sel_endWithCompletion_, v0 + 456);
  return MEMORY[0x1F41881E8](v0 + 144);
}

uint64_t sub_1D5A5CD38()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 176);
  *(void *)(*(void *)v0 + 672) = v1;
  if (v1) {
    uint64_t v2 = sub_1D5A5D6E4;
  }
  else {
    uint64_t v2 = sub_1D5A6014C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D5A5CE48()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 696) = v1;
  if (v1) {
    uint64_t v2 = sub_1D5A5D794;
  }
  else {
    uint64_t v2 = sub_1D5A5CF58;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D5A5CF58()
{
  uint64_t v27 = v0;
  uint64_t v1 = *(void **)(v0 + 680);

  objc_msgSend(v1, sel_elapsedTime);
  double v3 = v2;
  if (qword_1EA724DA0 != -1) {
    swift_once();
  }
  uint64_t v4 = *(void **)(v0 + 584);
  double v5 = sub_1D5957C6C(byte_1EA726480, *(double *)&qword_1EA726488);
  id v6 = v4;
  uint64_t v7 = sub_1D5AB4B30();
  os_log_type_t v8 = sub_1D5AB5430();
  BOOL v9 = os_log_type_enabled(v7, v8);
  os_log_type_t v10 = *(char **)(v0 + 584);
  if (v5 >= v3)
  {
    if (v9)
    {
      os_log_type_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v26 = v16;
      *(_DWORD *)os_log_type_t v15 = 136315138;
      uint64_t v17 = *(void *)&v10[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_sessionIdentifier];
      unint64_t v18 = *(void *)&v10[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_sessionIdentifier + 8];
      swift_bridgeObjectRetain();
      *(void *)(v0 + 536) = sub_1D5951500(v17, v18, &v26);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D5947000, v7, v8, "HealthWorkoutSession: Discarding workout: %s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v16, -1, -1);
      MEMORY[0x1D945AAC0](v15, -1, -1);
    }
    else
    {
    }
    objc_msgSend(*(id *)(v0 + 680), sel_discardWorkout);
    unint64_t v21 = *(void (**)(uint64_t, uint64_t))(v0 + 632);
    uint64_t v22 = *(void *)(v0 + 616);
    uint64_t v23 = *(void *)(v0 + 592);
    sub_1D5A5AF60(4u);
    v21(v22, v23);
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
    return v24();
  }
  else
  {
    if (v9)
    {
      BOOL v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v26 = v12;
      *(_DWORD *)BOOL v11 = 136315138;
      uint64_t v13 = *(void *)&v10[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_sessionIdentifier];
      unint64_t v14 = *(void *)&v10[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_sessionIdentifier + 8];
      swift_bridgeObjectRetain();
      *(void *)(v0 + 560) = sub_1D5951500(v13, v14, &v26);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D5947000, v7, v8, "HealthWorkoutSession: Saving workout: %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v12, -1, -1);
      MEMORY[0x1D945AAC0](v11, -1, -1);
    }
    else
    {
    }
    uint64_t v19 = *(void **)(v0 + 680);
    *(void *)(v0 + 272) = v0;
    *(void *)(v0 + 312) = v0 + 544;
    *(void *)(v0 + 280) = sub_1D5A5D3A8;
    uint64_t v20 = swift_continuation_init();
    *(void *)(v0 + 336) = MEMORY[0x1E4F143A8];
    *(void *)(v0 + 344) = 0x40000000;
    *(void *)(v0 + 352) = sub_1D5A5D904;
    *(void *)(v0 + 360) = &block_descriptor_11;
    *(void *)(v0 + 368) = v20;
    objc_msgSend(v19, sel_finishWorkoutWithCompletion_, v0 + 336);
    return MEMORY[0x1F41881E8](v0 + 272);
  }
}

uint64_t sub_1D5A5D3A8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 304);
  *(void *)(*(void *)v0 + 704) = v1;
  if (v1) {
    double v2 = sub_1D5A5D854;
  }
  else {
    double v2 = sub_1D5A5D4B8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D5A5D4B8()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 632);
  uint64_t v2 = *(void *)(v0 + 616);
  uint64_t v3 = *(void *)(v0 + 592);
  sub_1D5A5AF60(3u);
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1D5A5D574()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[79];
  uint64_t v2 = v0[77];
  uint64_t v3 = v0[74];
  swift_willThrow();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1D5A5D624()
{
  uint64_t v1 = (void *)v0[82];
  uint64_t v2 = (void (*)(uint64_t, uint64_t))v0[79];
  uint64_t v3 = v0[77];
  uint64_t v4 = v0[74];
  swift_willThrow();
  v2(v3, v4);

  swift_task_dealloc();
  swift_task_dealloc();
  double v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1D5A5D6E4()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[79];
  uint64_t v2 = v0[77];
  uint64_t v3 = v0[74];
  swift_willThrow();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1D5A5D794()
{
  uint64_t v1 = (void *)v0[86];
  uint64_t v2 = (void (*)(uint64_t, uint64_t))v0[79];
  uint64_t v3 = v0[77];
  uint64_t v4 = v0[74];
  swift_willThrow();
  v2(v3, v4);

  swift_task_dealloc();
  swift_task_dealloc();
  double v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1D5A5D854()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[79];
  uint64_t v2 = v0[77];
  uint64_t v3 = v0[74];
  swift_willThrow();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1D5A5D904(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE5130);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x1F4188208](v3, v5);
  }
  else
  {
    BOOL v11 = a2;
    uint64_t v8 = *(void *)(*(void *)(v3 + 64) + 40);
    id v9 = a2;
    sub_1D59799AC((uint64_t)&v11, v8, &qword_1EA727AF0);
    return swift_continuation_throwingResume();
  }
}

id HealthWorkoutSession.makeQuantityQuery(type:callback:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1D59E8AE0(0, (unint64_t *)&qword_1EBDE32E0);
  uint64_t v8 = (void *)MEMORY[0x1D9459830](a1);
  uint64_t v9 = *(void *)(v4 + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_builder);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  id v11 = objc_allocWithZone(MEMORY[0x1E4F2B740]);
  v15[4] = sub_1D5A5F118;
  v15[5] = v10;
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 1107296256;
  long long v15[2] = sub_1D5A5F028;
  v15[3] = &block_descriptor_15;
  uint64_t v12 = _Block_copy(v15);
  swift_retain();
  id v13 = objc_msgSend(v11, sel_initWithQuantityType_workoutBuilder_quantitiesAddedHandler_, v8, v9, v12);

  _Block_release(v12);
  swift_release();
  return v13;
}

void sub_1D5A5DB1C(uint64_t a1, uint64_t a2, void *a3, void (*a4)(void *, void))
{
  swift_bridgeObjectRetain();
  id v6 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727AE8);
  sub_1D5AB5C80();
  a4(v7, v8);
  sub_1D596E44C(v7, v8);
}

uint64_t sub_1D5A5DBAC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A58014(a1);
}

uint64_t sub_1D5A5DBD0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A58AC0(a1);
}

uint64_t sub_1D5A5DBF4()
{
  uint64_t v2 = *v0;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1D598AF68;
  v3[23] = v2;
  return MEMORY[0x1F4188298](sub_1D5A5A9BC, 0, 0);
}

uint64_t sub_1D5A5DCA0()
{
  uint64_t v2 = *v0;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1D598AF68;
  v3[15] = v2;
  return MEMORY[0x1F4188298](sub_1D5A5B110, 0, 0);
}

uint64_t sub_1D5A5DD4C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1D598AF68;
  return HealthWorkoutSession.resume()();
}

uint64_t sub_1D5A5DDDC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1D5984480;
  return HealthWorkoutSession.deactivate()();
}

id sub_1D5A5DE6C(void *a1, uint64_t a2, uint64_t a3)
{
  return HealthWorkoutSession.makeQuantityQuery(type:callback:)(a1, a2, a3);
}

uint64_t HealthWorkoutSession.workoutBuilder(_:didCollectDataOf:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1D5AB22E0();
  uint64_t v55 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unsigned __int8 v8 = (char *)v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D5AB48E0();
  uint64_t v56 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v53 = (char *)v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727930);
  MEMORY[0x1F4188790](v11 - 8);
  id v13 = (char *)v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBDE3740 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1D5AB4B50();
  uint64_t v15 = __swift_project_value_buffer(v14, (uint64_t)qword_1EBDE37B0);
  swift_bridgeObjectRetain_n();
  uint64_t v16 = sub_1D5AB4B30();
  os_log_type_t v17 = sub_1D5AB5400();
  BOOL v18 = os_log_type_enabled(v16, v17);
  id v54 = v8;
  if (v18)
  {
    v50[2] = v15;
    uint64_t v19 = swift_slowAlloc();
    v50[3] = a1;
    uint64_t v20 = (uint8_t *)v19;
    uint64_t v21 = swift_slowAlloc();
    id v51 = v3;
    uint64_t v22 = v21;
    v59[0] = v21;
    *(_DWORD *)uint64_t v20 = 136315138;
    v50[1] = v20 + 4;
    sub_1D59E8AE0(0, (unint64_t *)&unk_1EBDE15D8);
    uint64_t v52 = v6;
    sub_1D5A5F120();
    uint64_t v23 = v9;
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1D5AB5360();
    unint64_t v26 = v25;
    swift_bridgeObjectRelease();
    uint64_t v27 = v24;
    uint64_t v9 = v23;
    uint64_t v58 = sub_1D5951500(v27, v26, v59);
    sub_1D5AB5680();
    swift_bridgeObjectRelease_n();
    uint64_t v6 = v52;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D5947000, v16, v17, "Got event for %s types.", v20, 0xCu);
    swift_arrayDestroy();
    uint64_t v28 = v22;
    uint64_t v3 = v51;
    MEMORY[0x1D945AAC0](v28, -1, -1);
    MEMORY[0x1D945AAC0](v20, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  char v29 = sub_1D5A5E51C(a2);
  uint64_t v30 = (uint64_t)v3 + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_workout;
  swift_beginAccess();
  sub_1D596E6CC(v30, (uint64_t)v13, &qword_1EA727930);
  uint64_t v31 = v56;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v13, 1, v9))
  {
    uint64_t result = sub_1D594F53C((uint64_t)v13, &qword_1EA727930);
  }
  else
  {
    uint64_t v33 = v53;
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v53, v13, v9);
    sub_1D594F53C((uint64_t)v13, &qword_1EA727930);
    uint64_t v34 = sub_1D5AB48C0();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v9);
    LODWORD(v58) = v34;
    BYTE4(v58) = BYTE4(v34) & 1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA727990);
    sub_1D5AB2350();
    uint64_t result = v57;
    if (v57 != 5) {
      uint64_t result = sub_1D5A5AF60(v57);
    }
  }
  if (v29)
  {
    double v35 = COERCE_DOUBLE(sub_1D5A5E8F8((void *)*MEMORY[0x1E4F2A600]));
    double v37 = 0.0;
    if (v36) {
      double v38 = 0.0;
    }
    else {
      double v38 = v35;
    }
    double v39 = COERCE_DOUBLE(sub_1D5A5E8F8((void *)*MEMORY[0x1E4F2A5C0]));
    if ((v40 & 1) == 0) {
      double v37 = v39;
    }
    uint64_t v41 = v3;
    uint64_t v42 = sub_1D5AB4B30();
    os_log_type_t v43 = sub_1D5AB5430();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      uint64_t v58 = v45;
      *(_DWORD *)uint64_t v44 = 136315650;
      uint64_t v46 = *(void *)&v41[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_sessionIdentifier];
      unint64_t v47 = *(void *)&v41[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_sessionIdentifier + 8];
      swift_bridgeObjectRetain();
      uint64_t v57 = sub_1D5951500(v46, v47, &v58);
      sub_1D5AB5680();

      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 12) = 2048;
      uint64_t v57 = *(void *)&v38;
      sub_1D5AB5680();
      *(_WORD *)(v44 + 22) = 2048;
      uint64_t v57 = *(void *)&v37;
      sub_1D5AB5680();
      _os_log_impl(&dword_1D5947000, v42, v43, "HealthWorkoutSession: Updating calories for session %s: Basal: %f Active: %f", (uint8_t *)v44, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v45, -1, -1);
      MEMORY[0x1D945AAC0](v44, -1, -1);
    }
    else
    {
    }
    uint64_t v48 = v54;
    sub_1D5AB5300();
    sub_1D5AB22C0();
    uint64_t v49 = *(void (**)(char *))&v41[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_caloriesUpdated];
    if (v49)
    {
      swift_retain();
      v49(v48);
      sub_1D5A0A7B0((uint64_t)v49);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v48, v6);
  }
  return result;
}

uint64_t sub_1D5A5E51C(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1D5AB5720();
    sub_1D59E8AE0(0, (unint64_t *)&unk_1EBDE15D8);
    sub_1D5A5F120();
    uint64_t result = sub_1D5AB5390();
    uint64_t v1 = v29;
    uint64_t v28 = v30;
    uint64_t v4 = v31;
    uint64_t v3 = v32;
    unint64_t v5 = v33;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v28 = a1 + 56;
    uint64_t v4 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v3 = 0;
  }
  int64_t v27 = (unint64_t)(v4 + 64) >> 6;
  while (1)
  {
    uint64_t v22 = v3;
    if (v1 < 0)
    {
      uint64_t v26 = sub_1D5AB5750();
      if (!v26) {
        goto LABEL_34;
      }
      sub_1D59E8AE0(0, (unint64_t *)&unk_1EBDE15D8);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v11 = v34;
      swift_unknownObjectRelease();
      uint64_t v9 = v5;
      if (!v34) {
        goto LABEL_33;
      }
      goto LABEL_10;
    }
    if (!v5) {
      break;
    }
    uint64_t v9 = (v5 - 1) & v5;
    unint64_t v10 = __clz(__rbit64(v5)) | (v3 << 6);
LABEL_9:
    id v11 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v11) {
      goto LABEL_33;
    }
LABEL_10:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE47C8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1D5AC1BB0;
    uint64_t v13 = v1;
    *(void *)(inited + 32) = sub_1D5AB4DF0();
    *(void *)(inited + 40) = v14;
    *(void *)(inited + 48) = sub_1D5AB4DF0();
    *(void *)(inited + 56) = v15;
    unint64_t v5 = v9;
    uint64_t v16 = sub_1D5977C44(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    id v17 = objc_msgSend(v11, sel_identifier);
    uint64_t v18 = sub_1D5AB4DF0();
    uint64_t v20 = v19;

    uint64_t v21 = v18;
    uint64_t v1 = v13;
    LOBYTE(v17) = sub_1D598BAC0(v21, v20, v16);

    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v17)
    {
      uint64_t v26 = 1;
      goto LABEL_34;
    }
  }
  int64_t v23 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v23 >= v27) {
      goto LABEL_33;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    ++v3;
    if (!v24)
    {
      uint64_t v3 = v22 + 2;
      if (v22 + 2 >= v27) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v28 + 8 * v3);
      if (!v24)
      {
        uint64_t v3 = v22 + 3;
        if (v22 + 3 >= v27) {
          goto LABEL_33;
        }
        unint64_t v24 = *(void *)(v28 + 8 * v3);
        if (!v24)
        {
          uint64_t v3 = v22 + 4;
          if (v22 + 4 >= v27) {
            goto LABEL_33;
          }
          unint64_t v24 = *(void *)(v28 + 8 * v3);
          if (!v24)
          {
            uint64_t v3 = v22 + 5;
            if (v22 + 5 >= v27) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v28 + 8 * v3);
            if (!v24)
            {
              uint64_t v25 = v22 + 6;
              while (v27 != v25)
              {
                unint64_t v24 = *(void *)(v28 + 8 * v25++);
                if (v24)
                {
                  uint64_t v3 = v25 - 1;
                  goto LABEL_28;
                }
              }
LABEL_33:
              uint64_t v26 = 0;
LABEL_34:
              sub_1D59AE720();
              return v26;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v9 = (v24 - 1) & v24;
    unint64_t v10 = __clz(__rbit64(v24)) + (v3 << 6);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D5A5E8F8(void *a1)
{
  uint64_t v2 = v1;
  sub_1D59E8AE0(0, (unint64_t *)&qword_1EBDE32E0);
  uint64_t v4 = (void *)MEMORY[0x1D9459830](a1);
  id v5 = objc_msgSend(v2, sel_statisticsForType_, v4);

  if (v5)
  {
    id v6 = objc_msgSend(v5, sel_sumQuantity);
    if (v6)
    {
      uint64_t v7 = v6;
      id v8 = objc_msgSend(self, sel_kilocalorieUnit);
      objc_msgSend(v7, sel_doubleValueForUnit_, v8);
      uint64_t v10 = v9;

      return v10;
    }
  }
  return 0;
}

Swift::Void __swiftcall HealthWorkoutSession.workoutBuilderDidCollectEvent(_:)(HKLiveWorkoutBuilder a1)
{
  if (qword_1EBDE3740 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE37B0);
  oslog = sub_1D5AB4B30();
  os_log_type_t v2 = sub_1D5AB5430();
  if (os_log_type_enabled(oslog, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_1D5947000, oslog, v2, "HealthWorkoutSession: Workout Builder Collected Event.", v3, 2u);
    MEMORY[0x1D945AAC0](v3, -1, -1);
  }
}

Swift::Void __swiftcall HealthWorkoutSession.workoutBuilder(_:didEnd:)(HKLiveWorkoutBuilder _, HKWorkoutActivity didEnd)
{
  if (qword_1EBDE3740 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE37B0);
  v3._uint64_t countAndFlagsBits = 0xD000000000000072;
  v3._object = (void *)0x80000001D5AC9ED0;
  v4._object = (void *)0x80000001D5AC9F50;
  v4._uint64_t countAndFlagsBits = 0xD000000000000019;
  Logger.trace(file:function:)(v3, v4);
  sub_1D5A5AF60(3u);
}

void HealthWorkoutSession.workoutSession(_:didChangeTo:from:date:)()
{
}

void HealthWorkoutSession.workoutSession(_:didFailWithError:)(uint64_t a1, void *a2)
{
}

uint64_t type metadata accessor for HealthWorkoutSession()
{
  uint64_t result = qword_1EA7279F0;
  if (!qword_1EA7279F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D5A5F028(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a3;
  uint64_t v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_1D59E8AE0(0, &qword_1EA727AE0);
    uint64_t v5 = sub_1D5AB5050();
  }
  swift_retain();
  id v8 = a2;
  id v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5A5F0E0()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1D5A5F118(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1D5A5DB1C(a1, a2, a3, *(void (**)(void *, void))(v3 + 16));
}

unint64_t sub_1D5A5F120()
{
  unint64_t result = qword_1EA7279A0;
  if (!qword_1EA7279A0)
  {
    sub_1D59E8AE0(255, (unint64_t *)&unk_1EBDE15D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7279A0);
  }
  return result;
}

void sub_1D5A5F188()
{
  id v1 = (id)HKWorkoutSessionStateToString();
  uint64_t v2 = sub_1D5AB4DF0();
  unint64_t v4 = v3;

  id v5 = (id)HKWorkoutSessionStateToString();
  uint64_t v6 = sub_1D5AB4DF0();
  unint64_t v8 = v7;

  if (qword_1EBDE3740 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1D5AB4B50();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EBDE37B0);
  id v17 = v0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1D5AB4B30();
  os_log_type_t v11 = sub_1D5AB5430();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v18 = v13;
    *(_DWORD *)uint64_t v12 = 136315650;
    uint64_t v16 = v6;
    uint64_t v15 = *(void *)&v17[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_sessionIdentifier];
    unint64_t v14 = *(void *)&v17[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_sessionIdentifier + 8];
    swift_bridgeObjectRetain();
    sub_1D5951500(v15, v14, &v18);
    sub_1D5AB5680();

    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1D5951500(v2, v4, &v18);
    sub_1D5AB5680();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 22) = 2080;
    swift_bridgeObjectRetain();
    sub_1D5951500(v16, v8, &v18);
    sub_1D5AB5680();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D5947000, v10, v11, "HealthWorkoutSession (%s) changed from %s to %s", (uint8_t *)v12, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v13, -1, -1);
    MEMORY[0x1D945AAC0](v12, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
}

void sub_1D5A5F480(void *a1)
{
  if (qword_1EBDE3740 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE37B0);
  id v4 = a1;
  id v5 = a1;
  uint64_t v6 = v1;
  oslog = sub_1D5AB4B30();
  os_log_type_t v7 = sub_1D5AB5410();
  if (os_log_type_enabled(oslog, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v15 = v9;
    *(_DWORD *)uint64_t v8 = 136315394;
    uint64_t v10 = *(void *)&v6[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_sessionIdentifier];
    unint64_t v11 = *(void *)&v6[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_sessionIdentifier + 8];
    swift_bridgeObjectRetain();
    sub_1D5951500(v10, v11, &v15);
    sub_1D5AB5680();

    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v12 = MEMORY[0x1D9459FA0]();
    sub_1D5951500(v12, v13, &v15);
    sub_1D5AB5680();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D5947000, oslog, v7, "HealthWorkoutSession (%s) error: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v9, -1, -1);
    MEMORY[0x1D945AAC0](v8, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_1D5A5F6D8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A58014(a1);
}

uint64_t sub_1D5A5F6FC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1D5A5891C(a1, a2, a3, a4, &qword_1EA7278C8, &qword_1EA7278D8, &OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession____lazy_storage___calorieStream);
}

uint64_t sub_1D5A5F72C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A58AC0(a1);
}

uint64_t sub_1D5A5F750(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1D5A5891C(a1, a2, a3, a4, &qword_1EA7278E8, &qword_1EA7278F8, &OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession____lazy_storage___sessionStateStream);
}

uint64_t dispatch thunk of HealthWorkoutSessionProtocol.calorieStream.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HealthWorkoutSessionProtocol.sessionStateStream.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of HealthWorkoutSessionProtocol.activate()(uint64_t a1, uint64_t a2)
{
  os_log_type_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 24) + **(int **)(a2 + 24));
  id v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *id v5 = v2;
  v5[1] = sub_1D598AF68;
  return v7(a1, a2);
}

uint64_t dispatch thunk of HealthWorkoutSessionProtocol.pause()(uint64_t a1, uint64_t a2)
{
  os_log_type_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 32) + **(int **)(a2 + 32));
  id v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *id v5 = v2;
  v5[1] = sub_1D598AF68;
  return v7(a1, a2);
}

uint64_t dispatch thunk of HealthWorkoutSessionProtocol.resume()(uint64_t a1, uint64_t a2)
{
  os_log_type_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 40) + **(int **)(a2 + 40));
  id v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *id v5 = v2;
  v5[1] = sub_1D598AF68;
  return v7(a1, a2);
}

uint64_t dispatch thunk of HealthWorkoutSessionProtocol.deactivate()(uint64_t a1, uint64_t a2)
{
  os_log_type_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 48) + **(int **)(a2 + 48));
  id v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *id v5 = v2;
  v5[1] = sub_1D5984480;
  return v7(a1, a2);
}

uint64_t dispatch thunk of HealthWorkoutSessionProtocol.makeQuantityQuery(type:callback:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t sub_1D5A5FB7C()
{
  return type metadata accessor for HealthWorkoutSession();
}

void sub_1D5A5FB84()
{
  sub_1D5A5FE60();
  if (v0 <= 0x3F)
  {
    sub_1D5A5FEB8(319, &qword_1EA727A08, &qword_1EA7278D8);
    if (v1 <= 0x3F)
    {
      sub_1D5A5FEB8(319, &qword_1EA727A10, &qword_1EA7278F8);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for HealthWorkoutSession(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HealthWorkoutSession);
}

uint64_t dispatch thunk of HealthWorkoutSession.calorieStream.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of HealthWorkoutSession.calorieStream.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of HealthWorkoutSession.calorieStream.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of HealthWorkoutSession.sessionStateStream.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of HealthWorkoutSession.sessionStateStream.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of HealthWorkoutSession.sessionStateStream.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of HealthWorkoutSession.__allocating_init(session:healthStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 272))();
}

void sub_1D5A5FE60()
{
  if (!qword_1EA727A00)
  {
    sub_1D5AB48E0();
    unint64_t v0 = sub_1D5AB5620();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA727A00);
    }
  }
}

void sub_1D5A5FEB8(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    unint64_t v4 = sub_1D5AB5620();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for HealthWorkoutSession.SessionState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 4);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for HealthWorkoutSession.SessionState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 4) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthWorkoutSession.SessionState()
{
  return &type metadata for HealthWorkoutSession.SessionState;
}

uint64_t sub_1D5A5FFA0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D5A60004()
{
  return objectdestroy_4Tm(&qword_1EA727B00);
}

uint64_t sub_1D5A60010(int *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727B00);
  return sub_1D5A58EF0(a1);
}

uint64_t sub_1D5A60084()
{
  return objectdestroy_4Tm(&qword_1EA727B10);
}

uint64_t sub_1D5A60090(uint64_t a1)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA727B10) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_1D5A5844C(a1, v4);
}

uint64_t sub_1D5A60104(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *CatalogClient.__allocating_init(eventHub:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = objc_allocWithZone(MEMORY[0x1E4F29268]);
  id v7 = a3;
  uint64_t v8 = (void *)sub_1D5AB4DE0();
  id v9 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v8, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  uint64_t v10 = sub_1D59968E8(v9, v7);
  uint64_t v11 = *(void *)(v10 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 16));
  if (*(unsigned char *)(v10 + 48) == 1)
  {
    *(unsigned char *)(v10 + 48) = 2;
    objc_msgSend(*(id *)(v10 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  uint64_t v12 = (void *)swift_allocObject();
  uint64_t v13 = swift_retain();
  unint64_t v14 = sub_1D5A65134(v13, a1, a2, v12);

  swift_release_n();
  return v14;
}

uint64_t CatalogClient.__allocating_init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5A602B8(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D5A656B0);
}

uint64_t CatalogClient.init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5A602B8(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D5A653F8);
}

uint64_t sub_1D5A602B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = a6(a1, a4, a5, v6, ObjectType, a2, a3);
  swift_unknownObjectRelease();
  return v14;
}

uint64_t sub_1D5A6033C(char *a1)
{
  char v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    if (qword_1EBDE5420 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1D5AB4B50();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EBDE5400);
    v5._uint64_t countAndFlagsBits = 0xD000000000000066;
    v5._object = (void *)0x80000001D5ACA090;
    v6._object = (void *)0x80000001D5ACA980;
    v6._uint64_t countAndFlagsBits = 0xD000000000000018;
    Logger.trace(file:function:)(v5, v6);
    uint64_t v7 = *(void *)(v3 + 48);
    uint64_t ObjectType = swift_getObjectType();
    char v9 = v1;
    (*(void (**)(char *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v7 + 8))(&v9, &type metadata for CatalogUpdated, &protocol witness table for CatalogUpdated, ObjectType, v7);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D5A6045C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v10 = result;
    if (qword_1EBDE5420 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1D5AB4B50();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EBDE5400);
    v12._object = (void *)0x80000001D5ACA090;
    v12._uint64_t countAndFlagsBits = 0xD000000000000066;
    v13._uint64_t countAndFlagsBits = a2;
    v13._object = a3;
    Logger.trace(file:function:)(v12, v13);
    uint64_t v14 = *(void *)(v10 + 48);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 8))(ObjectType, a4, a5, ObjectType, v14);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D5A60570(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    if (qword_1EBDE5420 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1D5AB4B50();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EBDE5400);
    v5._uint64_t countAndFlagsBits = 0xD000000000000066;
    v5._object = (void *)0x80000001D5ACA090;
    v6._object = (void *)0x80000001D5ACA920;
    v6._uint64_t countAndFlagsBits = 0xD000000000000030;
    Logger.trace(file:function:)(v5, v6);
    uint64_t v7 = *(void *)(v3 + 48);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v10 = v1;
    char v9 = *(void (**)(uint64_t *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v7 + 8);
    swift_bridgeObjectRetain();
    v9(&v10, &type metadata for CatalogTipJournalsUpdated, &protocol witness table for CatalogTipJournalsUpdated, ObjectType, v7);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D5A606B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[6] = a3;
  v4[7] = v3;
  v4[4] = a1;
  v4[5] = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3778);
  v4[8] = v5;
  v4[9] = *(void *)(v5 - 8);
  v4[10] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D5A6077C, 0, 0);
}

uint64_t sub_1D5A6077C()
{
  uint64_t v19 = v0;
  uint64_t v1 = v0;
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  id v17 = v0 + 3;
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[4];
  uint64_t v5 = sub_1D5AB4B50();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EBDE5400);
  v6._uint64_t countAndFlagsBits = 0xD000000000000032;
  v7._uint64_t countAndFlagsBits = 0xD000000000000066;
  v7._object = (void *)0x80000001D5ACA090;
  v6._object = (void *)0x80000001D5ACA8E0;
  Logger.trace(file:function:)(v7, v6);
  uint64_t v8 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v18 = 99;
  v1[2] = v4;
  uint64_t v10 = *(void (**)(__int16 *, void *, void, uint64_t, void, void, uint64_t, unint64_t, uint64_t, uint64_t))(v8 + 32);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3798);
  uint64_t v12 = sub_1D59A3114(&qword_1EBDE37A0, &qword_1EBDE3798);
  unint64_t v13 = sub_1D5A65CBC();
  v10(&v18, v1 + 2, MEMORY[0x1E4FBB550], v11, MEMORY[0x1E4F9F120], MEMORY[0x1E4F9F128], v12, v13, ObjectType, v8);
  uint64_t v14 = swift_task_alloc();
  v1[11] = v14;
  *(void *)(v14 + 16) = "/Library/Caches/com.apple.xbs/Sources/FitCore_clients/SeymourClient/Catalog/Client/CatalogClient.swift";
  *(void *)(v14 + 24) = 102;
  *(unsigned char *)(v14 + 32) = 2;
  *(void *)(v14 + 40) = 66;
  *(void *)(v14 + 48) = v2;
  uint64_t v15 = (void *)swift_task_alloc();
  v1[12] = v15;
  *uint64_t v15 = v1;
  v15[1] = sub_1D5A609D8;
  return MEMORY[0x1F4188160](v17, 0, 0, 0xD000000000000013, 0x80000001D5AC6250, sub_1D5978E44, v14, v11);
}

uint64_t sub_1D5A609D8()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1D5A60C40;
  }
  else
  {
    uint64_t v4 = v2[10];
    uint64_t v5 = v2[8];
    uint64_t v6 = v2[9];
    v2[14] = v2[3];
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    uint64_t v3 = sub_1D5A60B20;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1D5A60B20()
{
  if (*(void *)(v0[14] + 16))
  {
    uint64_t v5 = (uint64_t (*)(uint64_t))(v0[5] + *(int *)v0[5]);
    uint64_t v1 = (void *)swift_task_alloc();
    v0[15] = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_1D5A60CD0;
    uint64_t v2 = v0[14];
    return v5(v2);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_1D5A60C40()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1D5A60CD0()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D5A60FB0;
  }
  else {
    uint64_t v2 = sub_1D5A60DE4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D5A60DE4()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = *(void *)(v0[14] + 16);
  uint64_t result = swift_bridgeObjectRelease();
  BOOL v4 = __OFADD__(v1, v2);
  uint64_t v5 = v1 + v2;
  if (v4)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = (void *)swift_task_alloc();
    v0[17] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1D5A60E98;
    uint64_t v7 = v0[6];
    uint64_t v8 = v0[5];
    return sub_1D5A606B4(v5, v8, v7);
  }
  return result;
}

uint64_t sub_1D5A60E98()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1D5A60FB0()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t CatalogClient.deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t CatalogClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t CatalogClient.deleteAllCatalogTipJournals()()
{
  return sub_1D5A610EC(0xD00000000000001DLL, (void *)0x80000001D5ACA100, 90);
}

uint64_t CatalogClient.deleteCatalog()()
{
  return sub_1D5A610EC(0x61436574656C6564, (void *)0xEF2928676F6C6174, 60);
}

uint64_t CatalogClient.deleteCatalogSyncAnchor()()
{
  return sub_1D5A610EC(0xD000000000000019, (void *)0x80000001D5ACA120, 61);
}

uint64_t sub_1D5A610EC(uint64_t a1, void *a2, __int16 a3)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1D5AB4B50();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBDE5400);
  v8._object = (void *)0x80000001D5ACA090;
  v8._uint64_t countAndFlagsBits = 0xD000000000000066;
  v9._uint64_t countAndFlagsBits = a1;
  v9._object = a2;
  Logger.trace(file:function:)(v8, v9);
  uint64_t v10 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v13 = a3;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v10 + 8))(&v13, ObjectType, v10);
}

uint64_t CatalogClient.fetchRemoteCatalogEditorialCollectionDetail(_:)(uint64_t a1, uint64_t a2)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1D5AB4B50();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EBDE5400);
  v6._uint64_t countAndFlagsBits = 0xD000000000000066;
  v6._object = (void *)0x80000001D5ACA090;
  v7._object = (void *)0x80000001D5ACA140;
  v7._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
  Logger.trace(file:function:)(v6, v7);
  uint64_t v8 = *(void *)(v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v14 = 86;
  v13[0] = a1;
  v13[1] = a2;
  uint64_t v10 = *(uint64_t (**)(__int16 *, void *, void, uint64_t, void, void, void, void, uint64_t, uint64_t))(v8 + 32);
  uint64_t v11 = sub_1D5AB4310();
  return v10(&v14, v13, MEMORY[0x1E4FBB1A0], v11, MEMORY[0x1E4F9F0B8], MEMORY[0x1E4F9F0C0], MEMORY[0x1E4F9E9B8], MEMORY[0x1E4F9E9C0], ObjectType, v8);
}

uint64_t CatalogClient.fetchRemoteCatalogModalityDetail(_:)(uint64_t a1, uint64_t a2)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1D5AB4B50();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EBDE5400);
  v6._uint64_t countAndFlagsBits = 0xD000000000000066;
  v6._object = (void *)0x80000001D5ACA090;
  v7._object = (void *)0x80000001D5ACA170;
  v7._uint64_t countAndFlagsBits = 0xD000000000000024;
  Logger.trace(file:function:)(v6, v7);
  uint64_t v8 = *(void *)(v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v14 = 63;
  v13[0] = a1;
  v13[1] = a2;
  uint64_t v10 = *(uint64_t (**)(__int16 *, void *, void, uint64_t, void, void, void, void, uint64_t, uint64_t))(v8 + 32);
  uint64_t v11 = sub_1D5AB3610();
  return v10(&v14, v13, MEMORY[0x1E4FBB1A0], v11, MEMORY[0x1E4F9F0B8], MEMORY[0x1E4F9F0C0], MEMORY[0x1E4F9D878], MEMORY[0x1E4F9D880], ObjectType, v8);
}

uint64_t CatalogClient.fetchRemoteCatalogProgramDetail(_:)(uint64_t a1, uint64_t a2)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1D5AB4B50();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EBDE5400);
  v6._uint64_t countAndFlagsBits = 0xD000000000000066;
  v6._object = (void *)0x80000001D5ACA090;
  v7._object = (void *)0x80000001D5ACA1A0;
  v7._uint64_t countAndFlagsBits = 0xD000000000000023;
  Logger.trace(file:function:)(v6, v7);
  uint64_t v8 = *(void *)(v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v14 = 64;
  v13[0] = a1;
  v13[1] = a2;
  uint64_t v10 = *(uint64_t (**)(__int16 *, void *, void, uint64_t, void, void, void, void, uint64_t, uint64_t))(v8 + 32);
  uint64_t v11 = sub_1D5AB3550();
  return v10(&v14, v13, MEMORY[0x1E4FBB1A0], v11, MEMORY[0x1E4F9F0B8], MEMORY[0x1E4F9F0C0], MEMORY[0x1E4F9D650], MEMORY[0x1E4F9D658], ObjectType, v8);
}

uint64_t CatalogClient.fetchRemoteCatalogWorkoutDetail(_:completedCountOverride:)@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A63AE8((void *)0x80000001D5ACA1D0, 66, a1);
}

uint64_t CatalogClient.fetchRemoteCatalogWorkouts(_:)(uint64_t a1)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE5400);
  v4._uint64_t countAndFlagsBits = 0xD000000000000066;
  v4._object = (void *)0x80000001D5ACA090;
  v5._object = (void *)0x80000001D5ACA210;
  v5._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v14 = 84;
  uint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, void, void, uint64_t, unint64_t, uint64_t, uint64_t))(v6 + 32);
  uint64_t v9 = sub_1D5AB3FB0();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727B30);
  uint64_t v11 = sub_1D597B6AC(&qword_1EA727B38, &qword_1EA727B30);
  unint64_t v12 = sub_1D5A65730();
  return v8(&v14, a1, v9, v10, MEMORY[0x1E4F9E588], MEMORY[0x1E4F9E590], v11, v12, ObjectType, v6);
}

uint64_t CatalogClient.fetchRemoteNavigationEditorialContent()()
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE5400);
  v2._uint64_t countAndFlagsBits = 0xD000000000000066;
  v2._object = (void *)0x80000001D5ACA090;
  v3._object = (void *)0x80000001D5ACA230;
  v3._uint64_t countAndFlagsBits = 0xD000000000000027;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v9 = 104;
  uint64_t v6 = *(uint64_t (**)(__int16 *, uint64_t, void, void, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = sub_1D5AB3EA0();
  return v6(&v9, v7, MEMORY[0x1E4F9E488], MEMORY[0x1E4F9E490], ObjectType, v4);
}

uint64_t CatalogClient.fetchRemoteTipShelfLockupDescriptors()()
{
  return sub_1D5A61BA0(0xD000000000000026, (void *)0x80000001D5ACA260, 88);
}

uint64_t CatalogClient.fetchRemoteTrainerDetail(_:)(uint64_t a1, uint64_t a2)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1D5AB4B50();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EBDE5400);
  v6._uint64_t countAndFlagsBits = 0xD000000000000066;
  v6._object = (void *)0x80000001D5ACA090;
  v7._object = (void *)0x80000001D5ACA290;
  v7._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  Logger.trace(file:function:)(v6, v7);
  uint64_t v8 = *(void *)(v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v14 = 71;
  v13[0] = a1;
  v13[1] = a2;
  uint64_t v10 = *(uint64_t (**)(__int16 *, void *, void, uint64_t, void, void, void, void, uint64_t, uint64_t))(v8 + 32);
  uint64_t v11 = sub_1D5AB27F0();
  return v10(&v14, v13, MEMORY[0x1E4FBB1A0], v11, MEMORY[0x1E4F9F0B8], MEMORY[0x1E4F9F0C0], MEMORY[0x1E4F9C6B0], MEMORY[0x1E4F9C6B8], ObjectType, v8);
}

uint64_t CatalogClient.fetchRemoteCatalogLockups(displayStyle:placeholders:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v16 = a1;
  uint64_t v2 = sub_1D5AB31B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1D5AB4B50();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EBDE5400);
  v7._uint64_t countAndFlagsBits = 0xD000000000000066;
  v7._object = (void *)0x80000001D5ACA090;
  v8._object = (void *)0x80000001D5ACA2B0;
  v8._uint64_t countAndFlagsBits = 0xD000000000000035;
  Logger.trace(file:function:)(v7, v8);
  swift_bridgeObjectRetain();
  sub_1D5AB31A0();
  uint64_t v9 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v17 = 65;
  uint64_t v11 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, void, void, uint64_t, unint64_t, uint64_t, uint64_t))(v9 + 32);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3178);
  uint64_t v13 = sub_1D597B6AC(&qword_1EBDE3180, &qword_1EBDE3178);
  unint64_t v14 = sub_1D5A65878();
  v11(&v17, v5, v2, v12, MEMORY[0x1E4F9D218], MEMORY[0x1E4F9D220], v13, v14, ObjectType, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t CatalogClient.fetchRemoteExploreShelfLockupDescriptors()()
{
  return sub_1D5A61BA0(0xD00000000000002ALL, (void *)0x80000001D5ACA2F0, 100);
}

uint64_t sub_1D5A61BA0(uint64_t a1, void *a2, __int16 a3)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1D5AB4B50();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBDE5400);
  v8._object = (void *)0x80000001D5ACA090;
  v8._uint64_t countAndFlagsBits = 0xD000000000000066;
  v9._uint64_t countAndFlagsBits = a1;
  v9._object = a2;
  Logger.trace(file:function:)(v8, v9);
  uint64_t v10 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v17 = a3;
  uint64_t v12 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v10 + 24);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE31A8);
  uint64_t v14 = sub_1D597B6AC(&qword_1EBDE31B0, &qword_1EBDE31A8);
  unint64_t v15 = sub_1D5A657D4();
  return v12(&v17, v13, v14, v15, ObjectType, v10);
}

uint64_t CatalogClient.fetchRemoteGalleryLockups(displayStyle:identifier:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v16 = a1;
  uint64_t v2 = sub_1D5AB3BB0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1D5AB4B50();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EBDE5400);
  v7._uint64_t countAndFlagsBits = 0xD000000000000066;
  v7._object = (void *)0x80000001D5ACA090;
  v8._object = (void *)0x80000001D5ACA320;
  v8._uint64_t countAndFlagsBits = 0xD000000000000033;
  Logger.trace(file:function:)(v7, v8);
  swift_bridgeObjectRetain();
  sub_1D5AB3BA0();
  uint64_t v9 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v17 = 67;
  uint64_t v11 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, void, void, uint64_t, unint64_t, uint64_t, uint64_t))(v9 + 32);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727B50);
  uint64_t v13 = sub_1D597B6AC(&qword_1EA727B58, &qword_1EA727B50);
  unint64_t v14 = sub_1D5A6591C();
  v11(&v17, v5, v2, v12, MEMORY[0x1E4F9E2C0], MEMORY[0x1E4F9E2C8], v13, v14, ObjectType, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t CatalogClient.fetchRemoteShelfLockupDescriptors()()
{
  return sub_1D5A61BA0(0xD000000000000023, (void *)0x80000001D5ACA360, 68);
}

uint64_t CatalogClient.fetchRemoteShowcaseLockupContent()()
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE5400);
  v2._uint64_t countAndFlagsBits = 0xD000000000000066;
  v2._object = (void *)0x80000001D5ACA090;
  v3._object = (void *)0x80000001D5ACA390;
  v3._uint64_t countAndFlagsBits = 0xD000000000000022;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 69;
  uint64_t v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727B70);
  uint64_t v8 = sub_1D597B6AC(&qword_1EA727B78, &qword_1EA727B70);
  unint64_t v9 = sub_1D5A659C0();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t CatalogClient.fetchRemoteTopShelfCatalogWorkoutDetails()()
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE5400);
  v2._uint64_t countAndFlagsBits = 0xD000000000000066;
  v2._object = (void *)0x80000001D5ACA090;
  v3._object = (void *)0x80000001D5ACA3C0;
  v3._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 70;
  uint64_t v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727B90);
  uint64_t v8 = sub_1D597B6AC(&qword_1EA727B98, &qword_1EA727B90);
  unint64_t v9 = sub_1D5A65A64();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t CatalogClient.fetchRemoteTrainerTipGalleryDetail()()
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE5400);
  v2._uint64_t countAndFlagsBits = 0xD000000000000066;
  v2._object = (void *)0x80000001D5ACA090;
  v3._object = (void *)0x80000001D5ACA3F0;
  v3._uint64_t countAndFlagsBits = 0xD000000000000024;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v9 = 102;
  uint64_t v6 = *(uint64_t (**)(__int16 *, uint64_t, void, void, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = sub_1D5AB3A20();
  return v6(&v9, v7, MEMORY[0x1E4F9DFD8], MEMORY[0x1E4F9DFE0], ObjectType, v4);
}

uint64_t CatalogClient.fetchRemoteExploreTrainerTipShelfLockupDescriptor()()
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE5400);
  v2._uint64_t countAndFlagsBits = 0xD000000000000066;
  v2._object = (void *)0x80000001D5ACA090;
  v3._object = (void *)0x80000001D5ACA420;
  v3._uint64_t countAndFlagsBits = 0xD000000000000033;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v9 = 107;
  uint64_t v6 = *(uint64_t (**)(__int16 *, uint64_t, void, void, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = sub_1D5AB3660();
  return v6(&v9, v7, MEMORY[0x1E4F9D9B0], MEMORY[0x1E4F9D9B8], ObjectType, v4);
}

uint64_t CatalogClient.filterCatalog(filter:)(uint64_t a1)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE5400);
  v4._uint64_t countAndFlagsBits = 0xD000000000000066;
  v4._object = (void *)0x80000001D5ACA090;
  v5._object = (void *)0x80000001D5ACA460;
  v5._uint64_t countAndFlagsBits = 0xD000000000000016;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v12 = 72;
  uint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, void, void, void, void, uint64_t, uint64_t))(v6 + 32);
  uint64_t v9 = sub_1D5AB2580();
  uint64_t v10 = sub_1D5AB3300();
  return v8(&v12, a1, v9, v10, MEMORY[0x1E4F9C528], MEMORY[0x1E4F9C530], MEMORY[0x1E4F9D340], MEMORY[0x1E4F9D348], ObjectType, v6);
}

uint64_t CatalogClient.queryFilterOptions(for:)(uint64_t a1)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE5400);
  v4._uint64_t countAndFlagsBits = 0xD000000000000066;
  v4._object = (void *)0x80000001D5ACA090;
  v5._object = (void *)0x80000001D5ACA480;
  v5._uint64_t countAndFlagsBits = 0xD000000000000018;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v12 = 79;
  uint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, void, void, void, void, uint64_t, uint64_t))(v6 + 32);
  uint64_t v9 = sub_1D5AB3080();
  uint64_t v10 = sub_1D5AB3540();
  return v8(&v12, a1, v9, v10, MEMORY[0x1E4F9CFC0], MEMORY[0x1E4F9CFC8], MEMORY[0x1E4F9D640], MEMORY[0x1E4F9D648], ObjectType, v6);
}

uint64_t CatalogClient.insertCatalogTipJournal(_:)(uint64_t a1)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE5400);
  v4._uint64_t countAndFlagsBits = 0xD000000000000066;
  v4._object = (void *)0x80000001D5ACA090;
  v5._object = (void *)0x80000001D5ACA4A0;
  v5._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 89;
  uint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, void, void, uint64_t, uint64_t))(v6 + 16);
  uint64_t v9 = sub_1D5AB30A0();
  return v8(&v11, a1, v9, MEMORY[0x1E4F9D038], MEMORY[0x1E4F9D040], ObjectType, v6);
}

uint64_t CatalogClient.insertChangeset(_:)(uint64_t a1)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE5400);
  v4._uint64_t countAndFlagsBits = 0xD000000000000066;
  v4._object = (void *)0x80000001D5ACA090;
  v5._object = (void *)0x80000001D5ACA4C0;
  v5._uint64_t countAndFlagsBits = 0xD000000000000013;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 73;
  uint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, void, void, uint64_t, uint64_t))(v6 + 16);
  uint64_t v9 = sub_1D5AB2EF0();
  return v8(&v11, a1, v9, MEMORY[0x1E4F9CBF8], MEMORY[0x1E4F9CC00], ObjectType, v6);
}

uint64_t CatalogClient.queryAllCatalogModalityReferences()()
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE5400);
  v2._uint64_t countAndFlagsBits = 0xD000000000000066;
  v2._object = (void *)0x80000001D5ACA090;
  v3._object = (void *)0x80000001D5ACA4E0;
  v3._uint64_t countAndFlagsBits = 0xD000000000000023;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 74;
  uint64_t v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3280);
  uint64_t v8 = sub_1D59A3114(&qword_1EBDE3288, &qword_1EBDE3280);
  unint64_t v9 = sub_1D5A65B08();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t CatalogClient.queryAllCatalogProgramReferences()()
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE5400);
  v2._uint64_t countAndFlagsBits = 0xD000000000000066;
  v2._object = (void *)0x80000001D5ACA090;
  v3._object = (void *)0x80000001D5ACA510;
  v3._uint64_t countAndFlagsBits = 0xD000000000000022;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 75;
  uint64_t v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3780);
  uint64_t v8 = sub_1D59A3114(&qword_1EBDE3788, &qword_1EBDE3780);
  unint64_t v9 = sub_1D5A65BAC();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t CatalogClient.queryCatalogWorkoutReferenceCount()()
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE5400);
  v2._uint64_t countAndFlagsBits = 0xD000000000000066;
  v2._object = (void *)0x80000001D5ACA090;
  v3._object = (void *)0x80000001D5ACA540;
  v3._uint64_t countAndFlagsBits = 0xD000000000000023;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v7 = 105;
  return (*(uint64_t (**)(__int16 *, void, void, void, uint64_t, uint64_t))(v4 + 24))(&v7, MEMORY[0x1E4FBB550], MEMORY[0x1E4F9F120], MEMORY[0x1E4F9F128], ObjectType, v4);
}

uint64_t CatalogClient.queryCatalogWorkoutReferences(workoutIdentifiers:)(uint64_t a1)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE5400);
  v4._uint64_t countAndFlagsBits = 0xD000000000000066;
  v4._object = (void *)0x80000001D5ACA090;
  v5._object = (void *)0x80000001D5ACA570;
  v5._uint64_t countAndFlagsBits = 0xD000000000000032;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v17 = 87;
  uint64_t v16 = a1;
  uint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v6 + 32);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4898);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3798);
  uint64_t v11 = sub_1D59A3114(&qword_1EBDE48A0, &qword_1EBDE4898);
  uint64_t v12 = sub_1D5A65C50(qword_1EBDE48A8, &qword_1EBDE4898, (void (*)(void))sub_1D59A2F78);
  uint64_t v13 = sub_1D59A3114(&qword_1EBDE37A0, &qword_1EBDE3798);
  unint64_t v14 = sub_1D5A65CBC();
  return v8(&v17, &v16, v9, v10, v11, v12, v13, v14, ObjectType, v6);
}

uint64_t CatalogClient.filterCatalogWorkoutReferenceIdentifiers(_:)(uint64_t a1)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE5400);
  v3._uint64_t countAndFlagsBits = 0xD000000000000066;
  v3._object = (void *)0x80000001D5ACA090;
  v4._object = (void *)0x80000001D5ACA5B0;
  v4._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  Logger.trace(file:function:)(v3, v4);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v14 = 96;
  __int16 v7 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 32);
  uint64_t v8 = sub_1D5AB3590();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4898);
  uint64_t v10 = sub_1D59A3114(&qword_1EBDE48A0, &qword_1EBDE4898);
  uint64_t v11 = sub_1D5A65C50(qword_1EBDE48A8, &qword_1EBDE4898, (void (*)(void))sub_1D59A2F78);
  return v7(&v14, a1, v8, v9, MEMORY[0x1E4F9D738], MEMORY[0x1E4F9D740], v10, v11, ObjectType, v5);
}

uint64_t CatalogClient.queryAllBodyFocuses()()
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE5400);
  v2._uint64_t countAndFlagsBits = 0xD000000000000066;
  v2._object = (void *)0x80000001D5ACA090;
  v3._object = (void *)0x80000001D5ACA5E0;
  v3._uint64_t countAndFlagsBits = 0xD000000000000015;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 92;
  uint64_t v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE32B0);
  uint64_t v8 = sub_1D59A3114(&qword_1EBDE32B8, &qword_1EBDE32B0);
  unint64_t v9 = sub_1D5A65D60();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t CatalogClient.queryAllCatalogThemeCategories()()
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE5400);
  v2._uint64_t countAndFlagsBits = 0xD000000000000066;
  v2._object = (void *)0x80000001D5ACA090;
  v3._object = (void *)0x80000001D5ACA600;
  v3._uint64_t countAndFlagsBits = 0xD000000000000020;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 93;
  uint64_t v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727BB0);
  uint64_t v8 = sub_1D59A3114(&qword_1EA727BB8, &qword_1EA727BB0);
  unint64_t v9 = sub_1D5A65E04();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t CatalogClient.queryAllCatalogThemes()()
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE5400);
  v2._uint64_t countAndFlagsBits = 0xD000000000000066;
  v2._object = (void *)0x80000001D5ACA090;
  v3._object = (void *)0x80000001D5ACA630;
  v3._uint64_t countAndFlagsBits = 0xD000000000000017;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 85;
  uint64_t v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3238);
  uint64_t v8 = sub_1D59A3114(&qword_1EBDE3240, &qword_1EBDE3238);
  unint64_t v9 = sub_1D5A65EA8();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t CatalogClient.queryAllEquipment()()
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE5400);
  v2._uint64_t countAndFlagsBits = 0xD000000000000066;
  v2._object = (void *)0x80000001D5ACA090;
  v3._object = (void *)0x80000001D5ACA650;
  v3._uint64_t countAndFlagsBits = 0xD000000000000013;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 94;
  uint64_t v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE32C8);
  uint64_t v8 = sub_1D59A3114(&qword_1EBDE32D0, &qword_1EBDE32C8);
  unint64_t v9 = sub_1D5A65F4C();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t CatalogClient.queryAllMusicGenres()()
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE5400);
  v2._uint64_t countAndFlagsBits = 0xD000000000000066;
  v2._object = (void *)0x80000001D5ACA090;
  v3._object = (void *)0x80000001D5ACA670;
  v3._uint64_t countAndFlagsBits = 0xD000000000000015;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 91;
  uint64_t v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE31F0);
  uint64_t v8 = sub_1D59A3114(&qword_1EBDE31F8, &qword_1EBDE31F0);
  unint64_t v9 = sub_1D5A65FF0();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t CatalogClient.queryAllSkillLevels()()
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE5400);
  v2._uint64_t countAndFlagsBits = 0xD000000000000066;
  v2._object = (void *)0x80000001D5ACA090;
  v3._object = (void *)0x80000001D5ACA690;
  v3._uint64_t countAndFlagsBits = 0xD000000000000015;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 95;
  uint64_t v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3208);
  uint64_t v8 = sub_1D59A3114(&qword_1EBDE3210, &qword_1EBDE3208);
  unint64_t v9 = sub_1D5A66094();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t CatalogClient.queryAllTrainerReferences()()
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE5400);
  v2._uint64_t countAndFlagsBits = 0xD000000000000066;
  v2._object = (void *)0x80000001D5ACA090;
  v3._object = (void *)0x80000001D5ACA6B0;
  v3._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 76;
  uint64_t v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4880);
  uint64_t v8 = sub_1D59A3114(&qword_1EBDE4888, &qword_1EBDE4880);
  unint64_t v9 = sub_1D5A66138();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t CatalogClient.queryCachedCatalogWorkoutLockups(inclusion:displayStyle:sortMode:limit:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  v21[1] = a3;
  void v21[2] = a4;
  uint64_t v7 = sub_1D5AB4390();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1D5AB4B50();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EBDE5400);
  v12._uint64_t countAndFlagsBits = 0xD000000000000066;
  v12._object = (void *)0x80000001D5ACA090;
  v13._object = (void *)0x80000001D5ACA6D0;
  v13._uint64_t countAndFlagsBits = 0xD000000000000048;
  Logger.trace(file:function:)(v12, v13);
  sub_1D5A661DC(a1, a2 & 1);
  sub_1D5AB4380();
  uint64_t v14 = *(void *)(v4 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v22 = 77;
  uint64_t v16 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, void, void, uint64_t, unint64_t, uint64_t, uint64_t))(v14 + 32);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3178);
  uint64_t v18 = sub_1D597B6AC(&qword_1EBDE3180, &qword_1EBDE3178);
  unint64_t v19 = sub_1D5A65878();
  v16(&v22, v10, v7, v17, MEMORY[0x1E4F9EA90], MEMORY[0x1E4F9EA98], v18, v19, ObjectType, v14);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t CatalogClient.queryCachedCatalogWorkoutDetail(_:completedCountOverride:)@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A63AE8((void *)0x80000001D5ACA720, 78, a1);
}

uint64_t sub_1D5A63AE8@<X0>(void *a1@<X4>, int a2@<W5>, uint64_t a3@<X8>)
{
  int v18 = a2;
  uint64_t v19 = a3;
  uint64_t v5 = sub_1D5AB3FA0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1D5AB4B50();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EBDE5400);
  v10._uint64_t countAndFlagsBits = 0xD000000000000066;
  v10._object = (void *)0x80000001D5ACA090;
  v11._uint64_t countAndFlagsBits = 0xD00000000000003ALL;
  v11._object = a1;
  Logger.trace(file:function:)(v10, v11);
  swift_bridgeObjectRetain();
  sub_1D5AB3F90();
  uint64_t v12 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v20 = v18;
  uint64_t v14 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, void, void, void, void, uint64_t, uint64_t))(v12 + 32);
  uint64_t v15 = sub_1D5AB3580();
  v14(&v20, v8, v5, v15, MEMORY[0x1E4F9E570], MEMORY[0x1E4F9E578], MEMORY[0x1E4F9D718], MEMORY[0x1E4F9D720], ObjectType, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t CatalogClient.requestCatalogLockupPlaceholderBackfill(request:)(uint64_t a1)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE5400);
  v4._uint64_t countAndFlagsBits = 0xD000000000000066;
  v4._object = (void *)0x80000001D5ACA090;
  v5._object = (void *)0x80000001D5ACA760;
  v5._uint64_t countAndFlagsBits = 0xD000000000000031;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v14 = 103;
  uint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, void, void, uint64_t, unint64_t, uint64_t, uint64_t))(v6 + 32);
  uint64_t v9 = sub_1D5AB2BF0();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7258E0);
  uint64_t v11 = sub_1D597B6AC(&qword_1EA7258E8, &qword_1EA7258E0);
  unint64_t v12 = sub_1D59A3228();
  return v8(&v14, a1, v9, v10, MEMORY[0x1E4F9C930], MEMORY[0x1E4F9C938], v11, v12, ObjectType, v6);
}

uint64_t CatalogClient.refreshRemoteCatalogWorkoutMetadata(mediaTypes:)(uint64_t a1)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE5400);
  v4._uint64_t countAndFlagsBits = 0xD000000000000066;
  v4._object = (void *)0x80000001D5ACA090;
  v5._object = (void *)0x80000001D5ACA7A0;
  v5._uint64_t countAndFlagsBits = 0xD000000000000030;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v15 = 80;
  uint64_t v14 = a1;
  uint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t))(v6 + 32);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727BD0);
  uint64_t v10 = sub_1D5AB4430();
  uint64_t v11 = sub_1D597B6AC(&qword_1EA727BD8, &qword_1EA727BD0);
  uint64_t v12 = sub_1D5A65C50(&qword_1EA727BE0, &qword_1EA727BD0, (void (*)(void))sub_1D59CCC5C);
  return v8(&v15, &v14, v9, v10, v11, v12, MEMORY[0x1E4F9EB58], MEMORY[0x1E4F9EB60], ObjectType, v6);
}

uint64_t CatalogClient.queryCatalogSyncAnchor()(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_1D5A64014, 0, 0);
}

uint64_t sub_1D5A64014()
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE5400);
  v3._uint64_t countAndFlagsBits = 0xD000000000000066;
  v3._object = (void *)0x80000001D5ACA090;
  v4._object = (void *)0x80000001D5ACA7E0;
  v4._uint64_t countAndFlagsBits = 0xD000000000000018;
  Logger.trace(file:function:)(v3, v4);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 56) = 106;
  Swift::String v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 + 56)
                                                                                              + **(int **)(v5 + 56));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v7;
  uint64_t v8 = sub_1D5AB3090();
  *(void *)(v0 + 40) = v8;
  *uint64_t v7 = v0;
  v7[1] = sub_1D5A641D4;
  uint64_t v9 = *(void *)(v0 + 16);
  uint64_t v10 = MEMORY[0x1E4F9CFF0];
  uint64_t v11 = MEMORY[0x1E4F9CFF8];
  return v13(v9, v0 + 56, v8, v10, v11, ObjectType, v5);
}

uint64_t sub_1D5A641D4()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D59832A4;
  }
  else {
    uint64_t v2 = sub_1D5A642E8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D5A642E8()
{
  (*(void (**)(void, void, uint64_t))(*(void *)(v0[5] - 8) + 56))(v0[2], 0, 1);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t CatalogClient.requestCatalogSync(mode:)(char a1)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE5400);
  v4._uint64_t countAndFlagsBits = 0xD000000000000066;
  v4._object = (void *)0x80000001D5ACA090;
  v5._object = (void *)0x80000001D5ACA800;
  v5._uint64_t countAndFlagsBits = 0xD000000000000019;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v10 = 83;
  char v9 = a1;
  return (*(uint64_t (**)(__int16 *, char *, void, void, void, uint64_t, uint64_t))(v6 + 16))(&v10, &v9, MEMORY[0x1E4F9DAA8], MEMORY[0x1E4F9DA98], MEMORY[0x1E4F9DAA0], ObjectType, v6);
}

uint64_t CatalogClient.queryCatalogWorkoutReferences(releasedSince:)(uint64_t a1)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE5400);
  v4._uint64_t countAndFlagsBits = 0xD000000000000066;
  v4._object = (void *)0x80000001D5ACA090;
  v5._object = (void *)0x80000001D5ACA820;
  v5._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v14 = 98;
  uint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, void, void, uint64_t, unint64_t, uint64_t, uint64_t))(v6 + 32);
  uint64_t v9 = sub_1D5AB1CE0();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3798);
  uint64_t v11 = sub_1D59A3114(&qword_1EBDE37A0, &qword_1EBDE3798);
  unint64_t v12 = sub_1D5A65CBC();
  return v8(&v14, a1, v9, v10, MEMORY[0x1E4F9BDC8], MEMORY[0x1E4F9BDD0], v11, v12, ObjectType, v6);
}

uint64_t CatalogClient.queryLatestCatalogWorkoutReferences(limit:)(uint64_t a1)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE5400);
  v4._uint64_t countAndFlagsBits = 0xD000000000000066;
  v4._object = (void *)0x80000001D5ACA090;
  v5._object = (void *)0x80000001D5ACA850;
  v5._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v14 = 101;
  uint64_t v13 = a1;
  uint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t *, void, uint64_t, void, void, uint64_t, unint64_t, uint64_t, uint64_t))(v6 + 32);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3798);
  uint64_t v10 = sub_1D59A3114(&qword_1EBDE37A0, &qword_1EBDE3798);
  unint64_t v11 = sub_1D5A65CBC();
  return v8(&v14, &v13, MEMORY[0x1E4FBB550], v9, MEMORY[0x1E4F9F120], MEMORY[0x1E4F9F128], v10, v11, ObjectType, v6);
}

uint64_t CatalogClient.enumerateCatalogWorkoutReferences(handler:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1D5A6478C, 0, 0);
}

uint64_t sub_1D5A6478C()
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE5400);
  v2._uint64_t countAndFlagsBits = 0xD000000000000066;
  v2._object = (void *)0x80000001D5ACA090;
  v3._object = (void *)0x80000001D5ACA880;
  v3._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
  Logger.trace(file:function:)(v2, v3);
  Swift::String v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  *Swift::String v4 = v0;
  v4[1] = sub_1D5A648A4;
  uint64_t v5 = v0[3];
  uint64_t v6 = v0[2];
  return sub_1D5A606B4(0, v6, v5);
}

uint64_t sub_1D5A648A4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1D5A64998()
{
  return CatalogClient.deleteAllCatalogTipJournals()();
}

uint64_t sub_1D5A649BC()
{
  uint64_t v1 = *v0;
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE5400);
  v3._object = (void *)0x80000001D5ACA090;
  v3._uint64_t countAndFlagsBits = 0xD000000000000066;
  v4._uint64_t countAndFlagsBits = 0x61436574656C6564;
  v4._object = (void *)0xEF2928676F6C6174;
  Logger.trace(file:function:)(v3, v4);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v8 = 60;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v5 + 8))(&v8, ObjectType, v5);
}

uint64_t sub_1D5A64AAC()
{
  return CatalogClient.deleteCatalogSyncAnchor()();
}

uint64_t sub_1D5A64AD0(uint64_t a1, uint64_t a2)
{
  return CatalogClient.fetchRemoteCatalogEditorialCollectionDetail(_:)(a1, a2);
}

uint64_t sub_1D5A64AF4(uint64_t a1, uint64_t a2)
{
  return CatalogClient.fetchRemoteCatalogModalityDetail(_:)(a1, a2);
}

uint64_t sub_1D5A64B18(uint64_t a1, uint64_t a2)
{
  return CatalogClient.fetchRemoteCatalogProgramDetail(_:)(a1, a2);
}

uint64_t sub_1D5A64B3C@<X0>(uint64_t a1@<X8>)
{
  return CatalogClient.fetchRemoteCatalogWorkoutDetail(_:completedCountOverride:)(a1);
}

uint64_t sub_1D5A64B64(uint64_t a1)
{
  return CatalogClient.fetchRemoteCatalogWorkouts(_:)(a1);
}

uint64_t sub_1D5A64B88()
{
  return CatalogClient.fetchRemoteNavigationEditorialContent()();
}

uint64_t sub_1D5A64BAC()
{
  return CatalogClient.fetchRemoteTipShelfLockupDescriptors()();
}

uint64_t sub_1D5A64BD0(uint64_t a1, uint64_t a2)
{
  return CatalogClient.fetchRemoteTrainerDetail(_:)(a1, a2);
}

uint64_t sub_1D5A64BF4@<X0>(uint64_t a1@<X8>)
{
  return CatalogClient.fetchRemoteCatalogLockups(displayStyle:placeholders:)(a1);
}

uint64_t sub_1D5A64C18@<X0>(uint64_t a1@<X8>)
{
  return CatalogClient.fetchRemoteGalleryLockups(displayStyle:identifier:)(a1);
}

uint64_t sub_1D5A64C3C()
{
  return CatalogClient.fetchRemoteExploreShelfLockupDescriptors()();
}

uint64_t sub_1D5A64C60()
{
  return CatalogClient.fetchRemoteShelfLockupDescriptors()();
}

uint64_t sub_1D5A64C84()
{
  return CatalogClient.fetchRemoteShowcaseLockupContent()();
}

uint64_t sub_1D5A64CA8()
{
  return CatalogClient.fetchRemoteTopShelfCatalogWorkoutDetails()();
}

uint64_t sub_1D5A64CCC()
{
  return CatalogClient.fetchRemoteTrainerTipGalleryDetail()();
}

uint64_t sub_1D5A64CF0()
{
  return CatalogClient.fetchRemoteExploreTrainerTipShelfLockupDescriptor()();
}

uint64_t sub_1D5A64D14(uint64_t a1)
{
  return CatalogClient.filterCatalog(filter:)(a1);
}

uint64_t sub_1D5A64D38(uint64_t a1)
{
  return CatalogClient.insertCatalogTipJournal(_:)(a1);
}

uint64_t sub_1D5A64D5C(uint64_t a1)
{
  return CatalogClient.insertChangeset(_:)(a1);
}

uint64_t sub_1D5A64D80()
{
  return CatalogClient.queryAllBodyFocuses()();
}

uint64_t sub_1D5A64DA4()
{
  return CatalogClient.queryAllCatalogModalityReferences()();
}

uint64_t sub_1D5A64DC8()
{
  return CatalogClient.queryAllCatalogProgramReferences()();
}

uint64_t sub_1D5A64DEC()
{
  return CatalogClient.queryCatalogWorkoutReferenceCount()();
}

uint64_t sub_1D5A64E10(uint64_t a1)
{
  return CatalogClient.queryCatalogWorkoutReferences(workoutIdentifiers:)(a1);
}

uint64_t sub_1D5A64E34(uint64_t a1)
{
  return CatalogClient.filterCatalogWorkoutReferenceIdentifiers(_:)(a1);
}

uint64_t sub_1D5A64E58()
{
  return CatalogClient.queryAllCatalogThemeCategories()();
}

uint64_t sub_1D5A64E7C()
{
  return CatalogClient.queryAllCatalogThemes()();
}

uint64_t sub_1D5A64EA0()
{
  return CatalogClient.queryAllEquipment()();
}

uint64_t sub_1D5A64EC4()
{
  return CatalogClient.queryAllMusicGenres()();
}

uint64_t sub_1D5A64EE8()
{
  return CatalogClient.queryAllSkillLevels()();
}

uint64_t sub_1D5A64F0C()
{
  return CatalogClient.queryAllTrainerReferences()();
}

uint64_t sub_1D5A64F30@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  return CatalogClient.queryCachedCatalogWorkoutLockups(inclusion:displayStyle:sortMode:limit:)(a1, a2 & 1, a3, a4);
}

uint64_t sub_1D5A64F5C@<X0>(uint64_t a1@<X8>)
{
  return CatalogClient.queryCachedCatalogWorkoutDetail(_:completedCountOverride:)(a1);
}

uint64_t sub_1D5A64F84(uint64_t a1)
{
  return CatalogClient.queryFilterOptions(for:)(a1);
}

uint64_t sub_1D5A64FA8(uint64_t a1)
{
  return CatalogClient.requestCatalogLockupPlaceholderBackfill(request:)(a1);
}

uint64_t sub_1D5A64FCC(uint64_t a1)
{
  return CatalogClient.refreshRemoteCatalogWorkoutMetadata(mediaTypes:)(a1);
}

uint64_t sub_1D5A64FF0(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  _OWORD v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_1D5984480;
  return MEMORY[0x1F4188298](sub_1D5A64014, 0, 0);
}

uint64_t sub_1D5A650A0(char a1)
{
  return CatalogClient.requestCatalogSync(mode:)(a1);
}

uint64_t sub_1D5A650C4(uint64_t a1, uint64_t a2)
{
  v3[2] = a1;
  v3[3] = a2;
  v3[4] = *v2;
  return MEMORY[0x1F4188298](sub_1D5A6478C, 0, 0);
}

uint64_t sub_1D5A650EC(uint64_t a1)
{
  return CatalogClient.queryCatalogWorkoutReferences(releasedSince:)(a1);
}

uint64_t sub_1D5A65110(uint64_t a1)
{
  return CatalogClient.queryLatestCatalogWorkoutReferences(limit:)(a1);
}

void *sub_1D5A65134(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[2] = a1;
  a4[3] = &protocol witness table for XPCClient;
  a4[4] = &protocol witness table for XPCClient;
  a4[5] = a2;
  a4[6] = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v16 = a1;
  char v15 = 8;
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v15, (uint64_t)sub_1D5A662B8, v7, ObjectType, (uint64_t)&protocol witness table for XPCClient);
  swift_release_n();
  uint64_t v16 = a1;
  char v15 = 5;
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  TransportDispatching.register<A>(event:handler:)(&v15, (uint64_t)sub_1D5A662FC, v8, ObjectType, MEMORY[0x1E4F9DAA8], (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E4F9DA98], MEMORY[0x1E4F9DAA0]);
  swift_release();
  uint64_t v16 = a1;
  char v15 = 6;
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v15, (uint64_t)sub_1D5A66304, v9, ObjectType, (uint64_t)&protocol witness table for XPCClient);
  swift_release_n();
  uint64_t v16 = a1;
  char v15 = 7;
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4898);
  uint64_t v12 = sub_1D59A3114(&qword_1EBDE48A0, &qword_1EBDE4898);
  uint64_t v13 = sub_1D5A65C50(qword_1EBDE48A8, &qword_1EBDE4898, (void (*)(void))sub_1D59A2F78);
  TransportDispatching.register<A>(event:handler:)(&v15, (uint64_t)sub_1D5A66348, v10, ObjectType, v11, (uint64_t)&protocol witness table for XPCClient, v12, v13);
  swift_release();
  swift_unknownObjectRelease();
  return a4;
}

void *sub_1D5A653F8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  a4[2] = a1;
  a4[3] = a6;
  a4[4] = a7;
  a4[5] = a2;
  a4[6] = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v20 = a1;
  char v19 = 8;
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v19, (uint64_t)sub_1D5A662B8, v11, ObjectType, a7);
  swift_release_n();
  uint64_t v20 = a1;
  char v19 = 5;
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  TransportDispatching.register<A>(event:handler:)(&v19, (uint64_t)sub_1D5A662FC, v12, ObjectType, MEMORY[0x1E4F9DAA8], a7, MEMORY[0x1E4F9DA98], MEMORY[0x1E4F9DAA0]);
  swift_release();
  uint64_t v20 = a1;
  char v19 = 6;
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v19, (uint64_t)sub_1D5A66304, v13, ObjectType, a7);
  swift_release_n();
  uint64_t v20 = a1;
  char v19 = 7;
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4898);
  uint64_t v16 = sub_1D59A3114(&qword_1EBDE48A0, &qword_1EBDE4898);
  uint64_t v17 = sub_1D5A65C50(qword_1EBDE48A8, &qword_1EBDE4898, (void (*)(void))sub_1D59A2F78);
  TransportDispatching.register<A>(event:handler:)(&v19, (uint64_t)sub_1D5A66348, v14, ObjectType, v15, a7, v16, v17);
  swift_release();
  swift_unknownObjectRelease();
  return a4;
}

void *sub_1D5A656B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = (void *)swift_allocObject();
  return sub_1D5A653F8(a1, a2, a3, v13, a5, a6, a7);
}

unint64_t sub_1D5A65730()
{
  unint64_t result = qword_1EA727B40;
  if (!qword_1EA727B40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA727B30);
    sub_1D5A661E8(&qword_1EA727B48, MEMORY[0x1E4F9C760]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA727B40);
  }
  return result;
}

unint64_t sub_1D5A657D4()
{
  unint64_t result = qword_1EBDE31B8;
  if (!qword_1EBDE31B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBDE31A8);
    sub_1D5A661E8(&qword_1EBDE2FA8, MEMORY[0x1E4F9D9C8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE31B8);
  }
  return result;
}

unint64_t sub_1D5A65878()
{
  unint64_t result = qword_1EBDE3188;
  if (!qword_1EBDE3188)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBDE3178);
    sub_1D5A661E8(&qword_1EBDE2F88, MEMORY[0x1E4F9C558]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE3188);
  }
  return result;
}

unint64_t sub_1D5A6591C()
{
  unint64_t result = qword_1EA727B60;
  if (!qword_1EA727B60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA727B50);
    sub_1D5A661E8(&qword_1EA727B68, MEMORY[0x1E4F9CAE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA727B60);
  }
  return result;
}

unint64_t sub_1D5A659C0()
{
  unint64_t result = qword_1EA727B80;
  if (!qword_1EA727B80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA727B70);
    sub_1D5A661E8(&qword_1EA727B88, MEMORY[0x1E4F9D9E0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA727B80);
  }
  return result;
}

unint64_t sub_1D5A65A64()
{
  unint64_t result = qword_1EA727BA0;
  if (!qword_1EA727BA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA727B90);
    sub_1D5A661E8(&qword_1EA727BA8, MEMORY[0x1E4F9D730]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA727BA0);
  }
  return result;
}

unint64_t sub_1D5A65B08()
{
  unint64_t result = qword_1EBDE3290;
  if (!qword_1EBDE3290)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBDE3280);
    sub_1D5A661E8((unint64_t *)&unk_1EBDE2FB0, MEMORY[0x1E4F9E108]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE3290);
  }
  return result;
}

unint64_t sub_1D5A65BAC()
{
  unint64_t result = qword_1EBDE3790;
  if (!qword_1EBDE3790)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBDE3780);
    sub_1D5A661E8(&qword_1EBDE3768, MEMORY[0x1E4F9DE18]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE3790);
  }
  return result;
}

uint64_t sub_1D5A65C50(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D5A65CBC()
{
  unint64_t result = qword_1EBDE37A8;
  if (!qword_1EBDE37A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBDE3798);
    sub_1D5A661E8(&qword_1EBDE3770, MEMORY[0x1E4F9DEA0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE37A8);
  }
  return result;
}

unint64_t sub_1D5A65D60()
{
  unint64_t result = qword_1EBDE32C0;
  if (!qword_1EBDE32C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBDE32B0);
    sub_1D5A661E8(&qword_1EBDE3008, MEMORY[0x1E4F9F020]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE32C0);
  }
  return result;
}

unint64_t sub_1D5A65E04()
{
  unint64_t result = qword_1EA727BC0;
  if (!qword_1EA727BC0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA727BB0);
    sub_1D5A661E8(&qword_1EA727BC8, MEMORY[0x1E4F9D700]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA727BC0);
  }
  return result;
}

unint64_t sub_1D5A65EA8()
{
  unint64_t result = qword_1EBDE3248;
  if (!qword_1EBDE3248)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBDE3238);
    sub_1D5A661E8(&qword_1EBDE2F80, MEMORY[0x1E4F9C378]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE3248);
  }
  return result;
}

unint64_t sub_1D5A65F4C()
{
  unint64_t result = qword_1EBDE32D8;
  if (!qword_1EBDE32D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBDE32C8);
    sub_1D5A661E8((unint64_t *)&unk_1EBDE3010, MEMORY[0x1E4F9F098]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE32D8);
  }
  return result;
}

unint64_t sub_1D5A65FF0()
{
  unint64_t result = qword_1EBDE3200;
  if (!qword_1EBDE3200)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBDE31F0);
    sub_1D5A661E8(&qword_1EBDE2F68, MEMORY[0x1E4F9C048]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE3200);
  }
  return result;
}

unint64_t sub_1D5A66094()
{
  unint64_t result = qword_1EBDE3218;
  if (!qword_1EBDE3218)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBDE3208);
    sub_1D5A661E8(&qword_1EBDE2F70, MEMORY[0x1E4F9C0B8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE3218);
  }
  return result;
}

unint64_t sub_1D5A66138()
{
  unint64_t result = qword_1EBDE4890;
  if (!qword_1EBDE4890)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBDE4880);
    sub_1D5A661E8(&qword_1EBDE47D0, MEMORY[0x1E4F9CED8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE4890);
  }
  return result;
}

uint64_t sub_1D5A661DC(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1D5A661E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for CatalogClient()
{
  return self;
}

uint64_t method lookup function for CatalogClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CatalogClient);
}

uint64_t dispatch thunk of CatalogClient.__allocating_init(connection:eventHub:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1D5A66280()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D5A662B8()
{
  return sub_1D5A6045C(v0, 0xD000000000000016, (void *)0x80000001D5ACA9A0, (uint64_t)&type metadata for CatalogDeleted, (uint64_t)&protocol witness table for CatalogDeleted);
}

uint64_t sub_1D5A662FC(char *a1)
{
  return sub_1D5A6033C(a1);
}

uint64_t sub_1D5A66304()
{
  return sub_1D5A6045C(v0, 0xD00000000000001ELL, (void *)0x80000001D5ACA960, (uint64_t)&type metadata for CatalogMetadataUpdated, (uint64_t)&protocol witness table for CatalogMetadataUpdated);
}

uint64_t sub_1D5A66348(uint64_t *a1)
{
  return sub_1D5A60570(a1);
}

Swift::Void __swiftcall Logger.trace(file:function:)(Swift::String file, Swift::String function)
{
  object = function._object;
  uint64_t countAndFlagsBits = function._countAndFlagsBits;
  uint64_t v4 = file._object;
  uint64_t v5 = file._countAndFlagsBits;
  Swift::String v34 = file;
  sub_1D59AA0A4();
  uint64_t v6 = sub_1D5AB56A0();
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v8 = v6 + 16 * v7;
    uint64_t v5 = *(void *)(v8 + 16);
    uint64_t v4 = *(void **)(v8 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
  }
  sub_1D5A672F4(46, 0xE100000000000000, v5, (unint64_t)v4);
  uint64_t v9 = sub_1D5AB4F40();
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = MEMORY[0x1D9459230](v9, v11, v13, v15);
  unint64_t v18 = v17;
  swift_bridgeObjectRelease();
  sub_1D5A672F4(40, 0xE100000000000000, countAndFlagsBits, (unint64_t)object);
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1D5AB4F40();
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = MEMORY[0x1D9459230](v19, v21, v23, v25);
  unint64_t v28 = v27;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1D5AB4B30();
  os_log_type_t v30 = sub_1D5AB5430();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    v34._uint64_t countAndFlagsBits = v32;
    *(_DWORD *)uint64_t v31 = 67109634;
    unint64_t v33 = pthread_self();
    pthread_mach_thread_np(v33);
    sub_1D5AB5680();
    *(_WORD *)(v31 + 8) = 2082;
    swift_bridgeObjectRetain();
    sub_1D5951500(v16, v18, &v34._countAndFlagsBits);
    sub_1D5AB5680();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v31 + 18) = 2082;
    swift_bridgeObjectRetain();
    sub_1D5951500(v26, v28, &v34._countAndFlagsBits);
    sub_1D5AB5680();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D5947000, v29, v30, "[%u] %{public}s::%{public}s", (uint8_t *)v31, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v32, -1, -1);
    MEMORY[0x1D945AAC0](v31, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
}

uint64_t static Log.default.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A6725C(&qword_1EBDE5420, (uint64_t)qword_1EBDE5400, a1);
}

uint64_t static Log.triage.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A6725C(&qword_1EBDE4BB8, (uint64_t)qword_1EBDE49B8, a1);
}

uint64_t sub_1D5A66730(uint64_t a1)
{
  return sub_1D5A67164(a1, qword_1EBDE5400, &qword_1EBDE5250, (uint64_t)qword_1EBDE5EF8);
}

uint64_t sub_1D5A6675C(uint64_t a1)
{
  return sub_1D5A67164(a1, qword_1EBDE3878, qword_1EBDE4248, (uint64_t)qword_1EBDE5DA0);
}

uint64_t static Log.asset.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A6725C(&qword_1EBDE3898, (uint64_t)qword_1EBDE3878, a1);
}

uint64_t sub_1D5A667AC(uint64_t a1)
{
  return sub_1D5A67164(a1, qword_1EBDE13C0, qword_1EBDE14C0, (uint64_t)qword_1EBDE5C48);
}

uint64_t static Log.achievement.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A6725C(&qword_1EBDE11C0, (uint64_t)qword_1EBDE13C0, a1);
}

uint64_t sub_1D5A667FC(uint64_t a1)
{
  return sub_1D5A67164(a1, qword_1EA727C10, &qword_1EA724E48, (uint64_t)qword_1EA72F798);
}

uint64_t static Log.archive.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A6725C(qword_1EA724DD8, (uint64_t)qword_1EA727C10, a1);
}

uint64_t sub_1D5A6684C(uint64_t a1)
{
  return sub_1D5A67164(a1, qword_1EBDE4388, qword_1EBDE47B0, (uint64_t)qword_1EBDE5E88);
}

uint64_t static Log.bookmark.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A6725C(&qword_1EBDE43A0, (uint64_t)qword_1EBDE4388, a1);
}

uint64_t sub_1D5A6689C(uint64_t a1)
{
  return sub_1D5A67164(a1, qword_1EBDE1010, &qword_1EBDE14E0, (uint64_t)qword_1EBDE5C90);
}

uint64_t static Log.database.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A6725C(&qword_1EBDE1028, (uint64_t)qword_1EBDE1010, a1);
}

uint64_t sub_1D5A668EC(uint64_t a1)
{
  return sub_1D5A67164(a1, qword_1EBDE4138, &qword_1EBDE4268, (uint64_t)qword_1EBDE5E40);
}

uint64_t static Log.discovery.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A6725C(qword_1EBDE3D90, (uint64_t)qword_1EBDE4138, a1);
}

uint64_t sub_1D5A6693C(uint64_t a1)
{
  return sub_1D5A67164(a1, qword_1EBDE4B90, &qword_1EBDE4C20, (uint64_t)qword_1EBDE5EA0);
}

uint64_t static Log.engagement.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A6725C(&qword_1EBDE4BA8, (uint64_t)qword_1EBDE4B90, a1);
}

uint64_t sub_1D5A6698C(uint64_t a1)
{
  return sub_1D5A67164(a1, qword_1EBDE37B0, &qword_1EBDE37C8, (uint64_t)qword_1EBDE5D88);
}

uint64_t static Log.health.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A6725C(&qword_1EBDE3740, (uint64_t)qword_1EBDE37B0, a1);
}

uint64_t sub_1D5A669DC(uint64_t a1)
{
  return sub_1D5A67164(a1, qword_1EA727C28, qword_1EA724E50, (uint64_t)qword_1EA72F7B0);
}

uint64_t static Log.metal.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A6725C(qword_1EA724DE8, (uint64_t)qword_1EA727C28, a1);
}

uint64_t sub_1D5A66A2C(uint64_t a1)
{
  return sub_1D5A67164(a1, qword_1EBDE3B50, qword_1EBDE4258, (uint64_t)qword_1EBDE5E28);
}

uint64_t static Log.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A6725C(&qword_1EBDE3B70, (uint64_t)qword_1EBDE3B50, a1);
}

uint64_t sub_1D5A66A7C(uint64_t a1)
{
  return sub_1D5A67164(a1, qword_1EA727C40, &qword_1EA724E60, (uint64_t)qword_1EA72F7C8);
}

uint64_t static Log.metricsHealth.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A6725C(&qword_1EA724DF8, (uint64_t)qword_1EA727C40, a1);
}

uint64_t sub_1D5A66ACC(uint64_t a1)
{
  return sub_1D5A67164(a1, qword_1EBDE36C8, &qword_1EBDE36F8, (uint64_t)qword_1EBDE5D58);
}

uint64_t static Log.multiUser.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A6725C(&qword_1EBDE36E0, (uint64_t)qword_1EBDE36C8, a1);
}

uint64_t sub_1D5A66B1C(uint64_t a1)
{
  return sub_1D5A67164(a1, qword_1EBDE3130, &qword_1EBDE3170, (uint64_t)qword_1EBDE5D10);
}

uint64_t static Log.network.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A6725C(&qword_1EBDE3148, (uint64_t)qword_1EBDE3130, a1);
}

uint64_t sub_1D5A66B6C(uint64_t a1)
{
  return sub_1D5A67164(a1, qword_1EA727C58, qword_1EA724E68, (uint64_t)qword_1EA72F7E0);
}

uint64_t static Log.overlay.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A6725C(qword_1EA724E00, (uint64_t)qword_1EA727C58, a1);
}

uint64_t sub_1D5A66BBC(uint64_t a1)
{
  return sub_1D5A67164(a1, qword_1EBDE1660, qword_1EBDE47A0, (uint64_t)qword_1EBDE5E70);
}

uint64_t static Log.personalization.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A6725C(&qword_1EBDE3108, (uint64_t)qword_1EBDE1660, a1);
}

uint64_t sub_1D5A66C0C(uint64_t a1)
{
  return sub_1D5A67164(a1, qword_1EBDE36A0, qword_1EBDE36E8, (uint64_t)qword_1EBDE5CF0);
}

uint64_t static Log.playback.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A6725C(&qword_1EBDE36C0, (uint64_t)qword_1EBDE36A0, a1);
}

uint64_t sub_1D5A66C5C(uint64_t a1)
{
  return sub_1D5A67164(a1, qword_1EBDE38C8, qword_1EBDE42F0, (uint64_t)qword_1EBDE5E58);
}

uint64_t static Log.recommendation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A6725C(&qword_1EBDE3B48, (uint64_t)qword_1EBDE38C8, a1);
}

uint64_t sub_1D5A66CAC(uint64_t a1)
{
  return sub_1D5A67164(a1, qword_1EBDE4120, qword_1EBDE4238, (uint64_t)qword_1EBDE5E10);
}

uint64_t static Log.remoteBrowsing.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A6725C(&qword_1EBDE3D80, (uint64_t)qword_1EBDE4120, a1);
}

uint64_t sub_1D5A66CFC(uint64_t a1)
{
  return sub_1D5A67164(a1, qword_1EBDE0FD0, &qword_1EBDE1200, (uint64_t)qword_1EBDE5C30);
}

uint64_t static Log.scores.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A6725C(&qword_1EBDE0FE8, (uint64_t)qword_1EBDE0FD0, a1);
}

uint64_t sub_1D5A66D4C(uint64_t a1)
{
  return sub_1D5A67164(a1, qword_1EBDE3748, &qword_1EBDE37D0, (uint64_t)qword_1EBDE5D70);
}

uint64_t static Log.search.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A6725C(&qword_1EBDE3760, (uint64_t)qword_1EBDE3748, a1);
}

uint64_t sub_1D5A66D9C(uint64_t a1)
{
  return sub_1D5A67164(a1, qword_1EBDE0FF0, &qword_1EBDE14D8, (uint64_t)qword_1EBDE5C78);
}

uint64_t static Log.server.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A6725C(&qword_1EBDE1008, (uint64_t)qword_1EBDE0FF0, a1);
}

uint64_t sub_1D5A66DEC(uint64_t a1)
{
  return sub_1D5A67164(a1, qword_1EA727C70, &qword_1EA724E78, (uint64_t)qword_1EA72F7F8);
}

uint64_t static Log.session.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A6725C(&qword_1EA724E10, (uint64_t)qword_1EA727C70, a1);
}

uint64_t sub_1D5A66E3C(uint64_t a1)
{
  return sub_1D5A67164(a1, qword_1EA727C88, &qword_1EA724E80, (uint64_t)qword_1EA72F810);
}

uint64_t static Log.siri.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A6725C(&qword_1EA724E18, (uint64_t)qword_1EA727C88, a1);
}

uint64_t sub_1D5A66E8C(uint64_t a1)
{
  return sub_1D5A67164(a1, qword_1EBDE38B0, qword_1EBDE4228, (uint64_t)qword_1EBDE5DF8);
}

uint64_t static Log.subscription.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A6725C(&qword_1EBDE3B40, (uint64_t)qword_1EBDE38B0, a1);
}

uint64_t sub_1D5A66EDC(uint64_t a1)
{
  return sub_1D5A67164(a1, qword_1EBDE0FA8, &qword_1EBDE14D0, (uint64_t)qword_1EBDE5C60);
}

uint64_t static Log.sync.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A6725C(&qword_1EBDE0FC8, (uint64_t)qword_1EBDE0FA8, a1);
}

uint64_t sub_1D5A66F2C(uint64_t a1)
{
  return sub_1D5A67164(a1, qword_1EA727CA0, &qword_1EA724E88, (uint64_t)qword_1EA72F828);
}

uint64_t static Log.timeline.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A6725C(qword_1EA724E20, (uint64_t)qword_1EA727CA0, a1);
}

uint64_t sub_1D5A66F7C(uint64_t a1)
{
  return sub_1D5A67164(a1, qword_1EBDE3110, qword_1EBDE3160, (uint64_t)qword_1EBDE5CD8);
}

uint64_t static Log.tips.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A6725C(&qword_1EBDE3128, (uint64_t)qword_1EBDE3110, a1);
}

uint64_t sub_1D5A66FCC(uint64_t a1)
{
  return sub_1D5A67164(a1, qword_1EA727CB8, qword_1EA724E90, (uint64_t)qword_1EA72F840);
}

uint64_t static Log.transport.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A6725C(&qword_1EA724E30, (uint64_t)qword_1EA727CB8, a1);
}

uint64_t sub_1D5A6701C(uint64_t a1)
{
  return sub_1D5A67164(a1, qword_1EBDE49B8, &qword_1EBDE4D98, (uint64_t)qword_1EBDE5EC8);
}

uint64_t sub_1D5A67048(uint64_t a1)
{
  return sub_1D5A67164(a1, qword_1EBDE1678, &qword_1EBDE3158, (uint64_t)qword_1EBDE5CC0);
}

uint64_t static Log.ui.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A6725C(&qword_1EBDE1690, (uint64_t)qword_1EBDE1678, a1);
}

uint64_t sub_1D5A67098(uint64_t a1)
{
  return sub_1D5A67164(a1, qword_1EBDE1648, &qword_1EBDE3150, (uint64_t)qword_1EBDE5CA8);
}

uint64_t static Log.upNextQueue.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A6725C(&qword_1EBDE30F8, (uint64_t)qword_1EBDE1648, a1);
}

uint64_t sub_1D5A670E8(uint64_t a1)
{
  return sub_1D5A67164(a1, qword_1EBDE4DE0, &qword_1EBDE4E08, (uint64_t)qword_1EBDE5EE0);
}

uint64_t static Log.workoutPlan.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A6725C(&qword_1EBDE4E00, (uint64_t)qword_1EBDE4DE0, a1);
}

uint64_t sub_1D5A67138(uint64_t a1)
{
  return sub_1D5A67164(a1, qword_1EA727CD0, &qword_1EA724EA0, (uint64_t)qword_1EA72F858);
}

uint64_t sub_1D5A67164(uint64_t a1, uint64_t *a2, void *a3, uint64_t a4)
{
  uint64_t v7 = sub_1D5AB4B50();
  __swift_allocate_value_buffer(v7, a2);
  uint64_t v8 = __swift_project_value_buffer(v7, (uint64_t)a2);
  if (*a3 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for LogSystem();
  uint64_t v10 = __swift_project_value_buffer(v9, a4) + *(int *)(v9 + 20);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  return v11(v8, v10, v7);
}

uint64_t static Log.testing.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D5A6725C(qword_1EA724E38, (uint64_t)qword_1EA727CD0, a1);
}

uint64_t sub_1D5A6725C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1D5AB4B50();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v7(a3, v6, v5);
}

unint64_t sub_1D5A672F4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v4 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4) {
    return 0;
  }
  uint64_t v7 = 4 * v4;
  unint64_t v8 = 15;
  while (sub_1D5AB4F20() != a1 || v9 != a2)
  {
    char v10 = sub_1D5AB5AF0();
    swift_bridgeObjectRelease();
    if (v10) {
      return v8;
    }
    unint64_t v8 = sub_1D5AB4E80();
    if (v7 == v8 >> 14) {
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return v8;
}

ValueMetadata *type metadata accessor for Log()
{
  return &type metadata for Log;
}

uint64_t UserNotificationCenterProtocol.addUserNotificationRequest(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[6] = a3;
  v4[7] = v3;
  v4[4] = a1;
  v4[5] = a2;
  return MEMORY[0x1F4188298](sub_1D5A67418, 0, 0);
}

uint64_t sub_1D5A67418()
{
  if (qword_1EBDE3D80 != -1) {
    swift_once();
  }
  uint64_t v9 = v0[6];
  uint64_t v1 = sub_1D5AB4B50();
  v0[8] = __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE4120);
  v2._uint64_t countAndFlagsBits = 0xD00000000000007BLL;
  v2._object = (void *)0x80000001D5ACA9C0;
  v3._object = (void *)0x80000001D5ACAA40;
  v3._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  Logger.trace(file:function:)(v2, v3);
  unint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v9 + 8) + **(int **)(v9 + 8));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[9] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1D5A6758C;
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[5];
  return v8(v6, v5);
}

uint64_t sub_1D5A6758C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 80) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1D5A6768C, 0, 0);
}

uint64_t sub_1D5A6768C()
{
  uint64_t v23 = v0;
  unint64_t v1 = *(void *)(v0 + 80);
  id v2 = *(id *)(v0 + 32);
  char v3 = sub_1D5A682E0(v1, v2);

  swift_bridgeObjectRelease();
  if (v3)
  {
    id v4 = *(id *)(v0 + 32);
    uint64_t v5 = sub_1D5AB4B30();
    os_log_type_t v6 = sub_1D5AB5430();
    BOOL v7 = os_log_type_enabled(v5, v6);
    unint64_t v8 = *(void **)(v0 + 32);
    if (v7)
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v22 = v21;
      *(_DWORD *)uint64_t v9 = 136315138;
      id v10 = objc_msgSend(v8, sel_identifier);
      uint64_t v11 = sub_1D5AB4DF0();
      unint64_t v13 = v12;

      *(void *)(v0 + 24) = sub_1D5951500(v11, v13, &v22);
      sub_1D5AB5680();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D5947000, v5, v6, "User notification %s already delivered, not adding.", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D945AAC0](v21, -1, -1);
      MEMORY[0x1D945AAC0](v9, -1, -1);
    }
    else
    {
    }
    uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
    return v19();
  }
  else
  {
    uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(v0 + 48) + 16)
                                                            + **(int **)(*(void *)(v0 + 48) + 16));
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_1D5A6795C;
    uint64_t v15 = *(void *)(v0 + 48);
    uint64_t v17 = *(void *)(v0 + 32);
    uint64_t v16 = *(void *)(v0 + 40);
    return v20(v17, v16, v15);
  }
}

uint64_t sub_1D5A6795C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D5A67A90, 0, 0);
  }
  else
  {
    char v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1D5A67A90()
{
  uint64_t v15 = v0;
  id v1 = *(id *)(v0 + 32);
  uint64_t v2 = sub_1D5AB4B30();
  os_log_type_t v3 = sub_1D5AB5430();
  if (os_log_type_enabled(v2, v3))
  {
    id v4 = *(void **)(v0 + 32);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v14 = v6;
    id v7 = objc_msgSend(v4, sel_identifier);
    uint64_t v8 = sub_1D5AB4DF0();
    unint64_t v10 = v9;

    *(void *)(v0 + 16) = sub_1D5951500(v8, v10, &v14);
    sub_1D5AB5680();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D5947000, v2, v3, "Failed to add user notification %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v6, -1, -1);
    MEMORY[0x1D945AAC0](v5, -1, -1);
  }
  else
  {
    uint64_t v11 = *(void **)(v0 + 32);
  }
  swift_willThrow();
  unint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

Swift::Void __swiftcall UserNotificationCenterProtocol.removeUserNotificationRequest(with:)(Swift::String with)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  object = with._object;
  uint64_t countAndFlagsBits = with._countAndFlagsBits;
  if (qword_1EBDE3D80 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1D5AB4B50();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBDE4120);
  v8._uint64_t countAndFlagsBits = 0xD00000000000007BLL;
  v8._object = (void *)0x80000001D5ACA9C0;
  v9._object = (void *)0x80000001D5ACAA60;
  v9._uint64_t countAndFlagsBits = 0xD000000000000024;
  Logger.trace(file:function:)(v8, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE47C8);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1D5AB90F0;
  *(void *)(v10 + 32) = countAndFlagsBits;
  *(void *)(v10 + 40) = object;
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 24);
  swift_bridgeObjectRetain();
  v11(v10, v4, v3);
  swift_bridgeObjectRelease();
}

uint64_t sub_1D5A67D90()
{
  uint64_t v2 = *v0;
  v1[2] = v1;
  v1[7] = v1 + 15;
  v1[3] = sub_1D5A67E8C;
  uint64_t v3 = swift_continuation_init();
  v1[10] = MEMORY[0x1E4F143A8];
  v1[11] = 0x40000000;
  v1[12] = sub_1D5A67F7C;
  v1[13] = &block_descriptor_7_1;
  v1[14] = v3;
  objc_msgSend(v2, sel_getDeliveredNotificationsWithCompletionHandler_, v1 + 10);
  return MEMORY[0x1F41881E8](v1 + 2);
}

uint64_t sub_1D5A67E8C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 120);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(*(void *)v0 + 8);
  return v2(v1);
}

uint64_t sub_1D5A67F7C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  sub_1D5A686C8();
  **(void **)(*(void *)(v1 + 64) + 40) = sub_1D5AB5050();
  return MEMORY[0x1F41881F8](v1);
}

uint64_t sub_1D5A67FE4(uint64_t a1)
{
  uint64_t v4 = *v1;
  v2[2] = v2;
  v2[3] = sub_1D5A680E0;
  uint64_t v5 = swift_continuation_init();
  v2[10] = MEMORY[0x1E4F143A8];
  v2[11] = 0x40000000;
  v2[12] = sub_1D5A681E8;
  v2[13] = &block_descriptor_1;
  v2[14] = v5;
  objc_msgSend(v4, sel_addNotificationRequest_withCompletionHandler_, a1, v2 + 10);
  return MEMORY[0x1F41881E8](v2 + 2);
}

uint64_t sub_1D5A680E0()
{
  uint64_t v1 = *v0;
  if (*(void *)(*v0 + 48)) {
    swift_willThrow();
  }
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 8);
  return v2();
}

uint64_t sub_1D5A681E8(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE5130);
    uint64_t v4 = swift_allocError();
    *uint64_t v5 = a2;
    id v6 = a2;
    return MEMORY[0x1F4188208](v2, v4);
  }
  else
  {
    return swift_continuation_throwingResume();
  }
}

void sub_1D5A68280()
{
  uint64_t v1 = *v0;
  id v2 = (id)sub_1D5AB5040();
  objc_msgSend(v1, sel_removeDeliveredNotificationsWithIdentifiers_, v2);
}

uint64_t sub_1D5A682E0(unint64_t a1, void *a2)
{
  unint64_t v2 = a1;
  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1D5AB5980();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      unint64_t v21 = v2;
      unint64_t v22 = v2 & 0xC000000000000001;
      uint64_t v4 = 4;
      while (1)
      {
        uint64_t v5 = v4 - 4;
        if (v22)
        {
          id v6 = (id)MEMORY[0x1D9459C10](v4 - 4, v2);
          uint64_t v7 = v4 - 3;
          if (__OFADD__(v5, 1)) {
            goto LABEL_18;
          }
        }
        else
        {
          id v6 = *(id *)(v2 + 8 * v4);
          uint64_t v7 = v4 - 3;
          if (__OFADD__(v5, 1))
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        Swift::String v8 = v6;
        id v9 = objc_msgSend(v6, sel_request);
        id v10 = objc_msgSend(v9, sel_identifier);

        uint64_t v11 = sub_1D5AB4DF0();
        uint64_t v13 = v12;

        id v14 = objc_msgSend(a2, sel_identifier);
        uint64_t v15 = sub_1D5AB4DF0();
        uint64_t v17 = v16;

        if (v11 == v15 && v13 == v17)
        {
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          char v19 = 1;
          goto LABEL_21;
        }
        char v19 = sub_1D5AB5AF0();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v19 & 1) == 0)
        {
          ++v4;
          unint64_t v2 = v21;
          if (v7 != v3) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
  char v19 = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v19 & 1;
}

uint64_t dispatch thunk of UserNotificationCenterProtocol.deliveredNotifications()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 8) + **(int **)(a2 + 8));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D59FC69C;
  return v7(a1, a2);
}

uint64_t dispatch thunk of UserNotificationCenterProtocol.add(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 16) + **(int **)(a3 + 16));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D5984480;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of UserNotificationCenterProtocol.removeDeliveredNotifications(withIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

unint64_t sub_1D5A686C8()
{
  unint64_t result = qword_1EA727D10;
  if (!qword_1EA727D10)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA727D10);
  }
  return result;
}

void static WorkoutPlansUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for WorkoutPlansUpdated()
{
  return &type metadata for WorkoutPlansUpdated;
}

void static FitnessModeUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for FitnessModeUpdated()
{
  return &type metadata for FitnessModeUpdated;
}

void *SiriClient.__allocating_init(queue:)(void *a1)
{
  id v2 = objc_allocWithZone(MEMORY[0x1E4F29268]);
  id v3 = a1;
  uint64_t v4 = (void *)sub_1D5AB4DE0();
  id v5 = objc_msgSend(v2, sel_initWithMachServiceName_options_, v4, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  uint64_t v6 = sub_1D59968E8(v5, v3);
  uint64_t v7 = *(void *)(v6 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 16));
  if (*(unsigned char *)(v6 + 48) == 1)
  {
    *(unsigned char *)(v6 + 48) = 2;
    objc_msgSend(*(id *)(v6 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));

  type metadata accessor for SiriClient();
  unint64_t result = (void *)swift_allocObject();
  result[2] = v6;
  result[3] = &protocol witness table for XPCClient;
  result[4] = &protocol witness table for XPCClient;
  return result;
}

void *SiriClient.__allocating_init(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  return sub_1D5A68B10(a1, v3, ObjectType, a2, a3);
}

uint64_t type metadata accessor for SiriClient()
{
  return self;
}

void *SiriClient.init(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  return sub_1D595A0B0(a1, v3, ObjectType, a2, a3);
}

uint64_t SiriClient.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t SiriClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t SiriClient.evaluateStartWorkoutRequest(_:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v9 = 257;
  id v5 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, void, void, void, void, uint64_t, uint64_t))(v3 + 32);
  uint64_t v6 = sub_1D5AB3A10();
  uint64_t v7 = sub_1D5AB3B20();
  return v5(&v9, a1, v6, v7, MEMORY[0x1E4F9DFA8], MEMORY[0x1E4F9DFB0], MEMORY[0x1E4F9E1D0], MEMORY[0x1E4F9E1D8], ObjectType, v3);
}

uint64_t sub_1D5A68A50(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v9 = 257;
  id v5 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, void, void, void, void, uint64_t, uint64_t))(v3 + 32);
  uint64_t v6 = sub_1D5AB3A10();
  uint64_t v7 = sub_1D5AB3B20();
  return v5(&v9, a1, v6, v7, MEMORY[0x1E4F9DFA8], MEMORY[0x1E4F9DFB0], MEMORY[0x1E4F9E1D0], MEMORY[0x1E4F9E1D8], ObjectType, v3);
}

void *sub_1D5A68B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for SiriClient();
  unint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a4;
  result[4] = a5;
  return result;
}

uint64_t method lookup function for SiriClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SiriClient);
}

uint64_t dispatch thunk of SiriClient.__allocating_init(connection:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

void *EngagementClient.__allocating_init(queue:)(void *a1)
{
  id v2 = objc_allocWithZone(MEMORY[0x1E4F29268]);
  id v3 = a1;
  uint64_t v4 = (void *)sub_1D5AB4DE0();
  id v5 = objc_msgSend(v2, sel_initWithMachServiceName_options_, v4, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  uint64_t v6 = sub_1D59968E8(v5, v3);
  uint64_t v7 = *(void *)(v6 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 16));
  if (*(unsigned char *)(v6 + 48) == 1)
  {
    *(unsigned char *)(v6 + 48) = 2;
    objc_msgSend(*(id *)(v6 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));
  sub_1D59513F0();
  swift_retain();
  uint64_t v8 = sub_1D5AB54A0();
  type metadata accessor for EventHub();
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = sub_1D59CE7F0(v8, 0, v9);
  type metadata accessor for EngagementClient();
  uint64_t v11 = (void *)swift_allocObject();
  uint64_t v12 = sub_1D5A69C88(v6, v10, v11);

  swift_release_n();
  return v12;
}

uint64_t EngagementClient.__allocating_init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5A68D14(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D5A69E64);
}

uint64_t EngagementClient.init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5A68D14(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D5A69D80);
}

uint64_t sub_1D5A68D14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = swift_getObjectType();
  uint64_t v15 = a6(a1, a4, v6, ObjectType, v14, a2, a3, a5);
  swift_unknownObjectRelease();
  return v15;
}

uint64_t sub_1D5A68DA8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(void *)(result + 48);
    swift_unknownObjectRetain();
    swift_release();
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v1 + 8))(ObjectType, &type metadata for EngagementBannerRulesUpdated, &protocol witness table for EngagementBannerRulesUpdated, ObjectType, v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t EngagementClient.deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t EngagementClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t EngagementClient.dispatchEngagementRequest(json:)(uint64_t a1, uint64_t a2)
{
  if (qword_1EBDE4BA8 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1D5AB4B50();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EBDE4B90);
  v6._uint64_t countAndFlagsBits = 0xD00000000000006CLL;
  v6._object = (void *)0x80000001D5ACAAD0;
  v7._object = (void *)0x80000001D5ACAB40;
  v7._uint64_t countAndFlagsBits = 0xD000000000000020;
  Logger.trace(file:function:)(v6, v7);
  uint64_t v8 = *(void *)(v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v12 = 117;
  v11[0] = a1;
  v11[1] = a2;
  return (*(uint64_t (**)(__int16 *, void *, void, void, void, void, void, void, uint64_t, uint64_t))(v8 + 32))(&v12, v11, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F9F0B8], MEMORY[0x1E4F9F0C0], MEMORY[0x1E4F9F0B8], MEMORY[0x1E4F9F0C0], ObjectType, v8);
}

uint64_t EngagementClient.insertEngagementBadge(_:)(uint64_t a1)
{
  return sub_1D5A69138(a1, (void *)0x80000001D5ACAB70, 119);
}

uint64_t EngagementClient.fetchEngagementRedirectURL(_:)(uint64_t a1)
{
  if (qword_1EBDE4BA8 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE4B90);
  v4._uint64_t countAndFlagsBits = 0xD00000000000006CLL;
  v4._object = (void *)0x80000001D5ACAAD0;
  v5._object = (void *)0x80000001D5ACAB90;
  v5._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 118;
  uint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, void, void, void, void, uint64_t, uint64_t))(v6 + 32);
  uint64_t v9 = sub_1D5AB1BB0();
  return v8(&v11, a1, v9, v9, MEMORY[0x1E4F9BDB0], MEMORY[0x1E4F9BDB8], MEMORY[0x1E4F9BDB0], MEMORY[0x1E4F9BDB8], ObjectType, v6);
}

uint64_t EngagementClient.deleteEngagementBadge(_:)(uint64_t a1)
{
  return sub_1D5A69138(a1, (void *)0x80000001D5ACABB0, 120);
}

uint64_t sub_1D5A69138(uint64_t a1, void *a2, __int16 a3)
{
  if (qword_1EBDE4BA8 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1D5AB4B50();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBDE4B90);
  v8._uint64_t countAndFlagsBits = 0xD00000000000006CLL;
  v8._object = (void *)0x80000001D5ACAAD0;
  v9._uint64_t countAndFlagsBits = 0xD000000000000019;
  v9._object = a2;
  Logger.trace(file:function:)(v8, v9);
  uint64_t v10 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v15 = a3;
  __int16 v12 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, void, void, uint64_t, uint64_t))(v10 + 16);
  uint64_t v13 = sub_1D5AB2D70();
  return v12(&v15, a1, v13, MEMORY[0x1E4F9C9E0], MEMORY[0x1E4F9C9E8], ObjectType, v10);
}

uint64_t EngagementClient.deleteAllEngagementBadges()()
{
  return sub_1D5A697A4(0xD00000000000001BLL, (void *)0x80000001D5ACABD0, 121);
}

uint64_t EngagementClient.queryEngagementBadges()()
{
  if (qword_1EBDE4BA8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE4B90);
  v2._uint64_t countAndFlagsBits = 0xD00000000000006CLL;
  v2._object = (void *)0x80000001D5ACAAD0;
  v3._object = (void *)0x80000001D5ACABF0;
  v3._uint64_t countAndFlagsBits = 0xD000000000000017;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 122;
  uint64_t v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3268);
  uint64_t v8 = sub_1D59A3114(&qword_1EBDE3270, &qword_1EBDE3268);
  uint64_t v9 = sub_1D5A69F4C(&qword_1EBDE3278, &qword_1EBDE3268, (void (*)(void))sub_1D5A69EF4);
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t EngagementClient.queryEngagementBannerRuleInfo()()
{
  if (qword_1EBDE4BA8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE4B90);
  v2._uint64_t countAndFlagsBits = 0xD00000000000006CLL;
  v2._object = (void *)0x80000001D5ACAAD0;
  v3._object = (void *)0x80000001D5ACAC10;
  v3._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v9 = 123;
  uint64_t v6 = *(uint64_t (**)(__int16 *, uint64_t, void, void, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = sub_1D5AB3AD0();
  return v6(&v9, v7, MEMORY[0x1E4F9E120], MEMORY[0x1E4F9E128], ObjectType, v4);
}

uint64_t EngagementClient.insertCompletedMarketingVideo(identifier:)(uint64_t a1, uint64_t a2)
{
  if (qword_1EBDE4BA8 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1D5AB4B50();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EBDE4B90);
  v6._uint64_t countAndFlagsBits = 0xD00000000000006CLL;
  v6._object = (void *)0x80000001D5ACAAD0;
  v7._object = (void *)0x80000001D5ACAC30;
  v7._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
  Logger.trace(file:function:)(v6, v7);
  uint64_t v8 = *(void *)(v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v12 = 125;
  v11[0] = a1;
  v11[1] = a2;
  return (*(uint64_t (**)(__int16 *, void *, void, void, void, uint64_t, uint64_t))(v8 + 16))(&v12, v11, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F9F0B8], MEMORY[0x1E4F9F0C0], ObjectType, v8);
}

uint64_t EngagementClient.queryAllCompletedMarketingVideoIdentifiers()()
{
  if (qword_1EBDE4BA8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE4B90);
  v2._uint64_t countAndFlagsBits = 0xD00000000000006CLL;
  v2._object = (void *)0x80000001D5ACAAD0;
  v3._object = (void *)0x80000001D5ACAC60;
  v3._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 124;
  Swift::String v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4898);
  uint64_t v8 = sub_1D59A3114(&qword_1EBDE48A0, &qword_1EBDE4898);
  uint64_t v9 = sub_1D5A69F4C(qword_1EBDE48A8, &qword_1EBDE4898, (void (*)(void))sub_1D59A2F78);
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t EngagementClient.deleteAllCompletedMarketingVideos()()
{
  return sub_1D5A697A4(0xD000000000000023, (void *)0x80000001D5ACAC90, 126);
}

uint64_t sub_1D5A697A4(uint64_t a1, void *a2, __int16 a3)
{
  if (qword_1EBDE4BA8 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1D5AB4B50();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBDE4B90);
  v8._object = (void *)0x80000001D5ACAAD0;
  v8._uint64_t countAndFlagsBits = 0xD00000000000006CLL;
  v9._uint64_t countAndFlagsBits = a1;
  v9._object = a2;
  Logger.trace(file:function:)(v8, v9);
  uint64_t v10 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v13 = a3;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v10 + 8))(&v13, ObjectType, v10);
}

uint64_t EngagementClient.queryIntroSheet()()
{
  if (qword_1EBDE4BA8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE4B90);
  v2._uint64_t countAndFlagsBits = 0xD00000000000006CLL;
  v2._object = (void *)0x80000001D5ACAAD0;
  v3._object = (void *)0x80000001D5ACACC0;
  v3._uint64_t countAndFlagsBits = 0xD000000000000011;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v9 = 127;
  Swift::String v6 = *(uint64_t (**)(__int16 *, uint64_t, void, void, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = sub_1D5AB1DD0();
  return v6(&v9, v7, MEMORY[0x1E4F9BFB0], MEMORY[0x1E4F9BFB8], ObjectType, v4);
}

uint64_t EngagementClient.queryWhatsNewSheet()()
{
  if (qword_1EBDE4BA8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE4B90);
  v2._uint64_t countAndFlagsBits = 0xD00000000000006CLL;
  v2._object = (void *)0x80000001D5ACAAD0;
  v3._object = (void *)0x80000001D5ACACE0;
  v3._uint64_t countAndFlagsBits = 0xD000000000000014;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v9 = 128;
  Swift::String v6 = *(uint64_t (**)(__int16 *, uint64_t, void, void, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = sub_1D5AB2800();
  return v6(&v9, v7, MEMORY[0x1E4F9C6C8], MEMORY[0x1E4F9C6D0], ObjectType, v4);
}

uint64_t sub_1D5A69AB4(uint64_t a1, uint64_t a2)
{
  return EngagementClient.dispatchEngagementRequest(json:)(a1, a2);
}

uint64_t sub_1D5A69AD8(uint64_t a1)
{
  return EngagementClient.fetchEngagementRedirectURL(_:)(a1);
}

uint64_t sub_1D5A69AFC(uint64_t a1)
{
  return EngagementClient.insertEngagementBadge(_:)(a1);
}

uint64_t sub_1D5A69B20(uint64_t a1)
{
  return EngagementClient.deleteEngagementBadge(_:)(a1);
}

uint64_t sub_1D5A69B44()
{
  return EngagementClient.deleteAllEngagementBadges()();
}

uint64_t sub_1D5A69B68()
{
  return EngagementClient.queryAllCompletedMarketingVideoIdentifiers()();
}

uint64_t sub_1D5A69B8C()
{
  return EngagementClient.queryEngagementBadges()();
}

uint64_t sub_1D5A69BB0()
{
  return EngagementClient.queryEngagementBannerRuleInfo()();
}

uint64_t sub_1D5A69BD4(uint64_t a1, uint64_t a2)
{
  return EngagementClient.insertCompletedMarketingVideo(identifier:)(a1, a2);
}

uint64_t sub_1D5A69BF8()
{
  return EngagementClient.deleteAllCompletedMarketingVideos()();
}

uint64_t sub_1D5A69C1C()
{
  return EngagementClient.queryIntroSheet()();
}

uint64_t sub_1D5A69C40()
{
  return EngagementClient.queryWhatsNewSheet()();
}

uint64_t type metadata accessor for EngagementClient()
{
  return self;
}

void *sub_1D5A69C88(uint64_t a1, uint64_t a2, void *a3)
{
  a3[2] = a1;
  a3[3] = &protocol witness table for XPCClient;
  a3[4] = &protocol witness table for XPCClient;
  a3[5] = a2;
  a3[6] = &protocol witness table for EventHub;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = a1;
  char v8 = 14;
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_retain();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v8, (uint64_t)sub_1D5A6A028, v6, ObjectType, (uint64_t)&protocol witness table for XPCClient);
  swift_release_n();
  swift_release();
  return a3;
}

void *sub_1D5A69D80(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  a3[2] = a1;
  a3[3] = a6;
  a3[4] = a7;
  a3[5] = a2;
  a3[6] = a8;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v15 = a1;
  char v14 = 14;
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v14, (uint64_t)sub_1D5A6A028, v12, ObjectType, a7);
  swift_release_n();
  swift_unknownObjectRelease();
  return a3;
}

void *sub_1D5A69E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  type metadata accessor for EngagementClient();
  uint64_t v15 = (void *)swift_allocObject();
  return sub_1D5A69D80(a1, a2, v15, a4, a5, a6, a7, a8);
}

unint64_t sub_1D5A69EF4()
{
  unint64_t result = qword_1EBDE2F98;
  if (!qword_1EBDE2F98)
  {
    sub_1D5AB2D70();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE2F98);
  }
  return result;
}

uint64_t sub_1D5A69F4C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for EngagementClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EngagementClient);
}

uint64_t dispatch thunk of EngagementClient.__allocating_init(connection:eventHub:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1D5A69FF0()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D5A6A028()
{
  return sub_1D5A68DA8();
}

uint64_t URL.init(session:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v17[0] = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4740);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D5AB1AC0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5AB1AB0();
  sub_1D5AB1A90();
  MEMORY[0x1D9455E70](0x726F777472617473, 0xEC00000074756F6BLL);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7277B8);
  sub_1D5AB1A40();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1D5AC1E30;
  sub_1D5AB4610();
  sub_1D5AB1A10();
  swift_bridgeObjectRelease();
  v17[1] = sub_1D5AB4740();
  sub_1D5AB5AB0();
  sub_1D5AB1A10();
  swift_bridgeObjectRelease();
  sub_1D5AB1A10();
  sub_1D5AB1A10();
  sub_1D5AB1A60();
  sub_1D5AB1AA0();
  sub_1D5AB1B60();
  uint64_t v10 = sub_1D5AB4800();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(a1, v10);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v11 = sub_1D5AB1BB0();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v5, 1, v11))
  {
    sub_1D594F53C((uint64_t)v5, &qword_1EBDE4740);
    uint64_t v13 = 1;
    uint64_t v14 = v17[0];
  }
  else
  {
    uint64_t v15 = v17[0];
    (*(void (**)(void, char *, uint64_t))(v12 + 32))(v17[0], v5, v11);
    uint64_t v13 = 0;
    uint64_t v14 = v15;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v14, v13, 1, v11);
}

uint64_t sub_1D5A6A424(uint64_t a1, uint64_t a2)
{
  uint64_t v36 = a2;
  uint64_t v37 = a1;
  uint64_t v2 = sub_1D5AB1A40();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727D18);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v31 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727D20);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)v31 - v16;
  sub_1D5AB1A70();
  sub_1D596E6CC((uint64_t)v17, (uint64_t)v15, &qword_1EA727D20);
  uint64_t v18 = sub_1D5AB1AC0();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18) == 1)
  {
    sub_1D594F53C((uint64_t)v15, &qword_1EA727D20);
LABEL_12:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v11, 1, 1, v2);
    goto LABEL_13;
  }
  uint64_t v20 = sub_1D5AB1A50();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v15, v18);
  if (!v20) {
    goto LABEL_12;
  }
  uint64_t v21 = *(void *)(v20 + 16);
  if (v21)
  {
    uint64_t v32 = v17;
    unint64_t v33 = v11;
    Swift::String v34 = v9;
    uint64_t v35 = v3;
    uint64_t v24 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
    uint64_t v22 = v3 + 16;
    uint64_t v23 = v24;
    unint64_t v25 = v20 + ((*(unsigned __int8 *)(v22 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 64));
    uint64_t v26 = *(void *)(v22 + 56);
    v31[1] = v20;
    swift_bridgeObjectRetain();
    while (1)
    {
      v23(v5, v25, v2);
      if (sub_1D5AB1A20() == v37 && v27 == v36) {
        break;
      }
      char v28 = sub_1D5AB5AF0();
      swift_bridgeObjectRelease();
      if (v28) {
        goto LABEL_18;
      }
      (*(void (**)(char *, uint64_t))(v22 - 8))(v5, v2);
      v25 += v26;
      if (!--v21)
      {
        swift_bridgeObjectRelease();
        uint64_t v9 = v34;
        uint64_t v3 = v35;
        uint64_t v17 = v32;
        uint64_t v11 = v33;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v3 = v35;
    uint64_t v11 = v33;
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v33, v5, v2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v2);
    swift_bridgeObjectRelease();
    uint64_t v9 = v34;
    uint64_t v17 = v32;
  }
  else
  {
LABEL_11:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v11, 1, 1, v2);
    swift_bridgeObjectRelease();
  }
LABEL_13:
  sub_1D596E6CC((uint64_t)v11, (uint64_t)v9, &qword_1EA727D18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2) == 1)
  {
    sub_1D594F53C((uint64_t)v11, &qword_1EA727D18);
    sub_1D594F53C((uint64_t)v17, &qword_1EA727D20);
    sub_1D594F53C((uint64_t)v9, &qword_1EA727D18);
    return 0;
  }
  else
  {
    uint64_t v29 = sub_1D5AB1A30();
    sub_1D594F53C((uint64_t)v11, &qword_1EA727D18);
    sub_1D594F53C((uint64_t)v17, &qword_1EA727D20);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  }
  return v29;
}

uint64_t URL.workoutIdentifier.getter()
{
  return sub_1D5A6A424(0xD000000000000011, 0x80000001D5AC6CF0);
}

uint64_t URL.sessionIdentifier.getter()
{
  return sub_1D5A6A424(0xD000000000000011, 0x80000001D5AC6D10);
}

unint64_t URL.sessionActivityType.getter()
{
  unint64_t v0 = sub_1D5AB1A40();
  uint64_t v56 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v2 = (char *)v52 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727D18);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v55 = (uint64_t)v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v52 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727D20);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v52 - v12;
  sub_1D5AB1A70();
  sub_1D596E6CC((uint64_t)v13, (uint64_t)v11, &qword_1EA727D20);
  uint64_t v14 = sub_1D5AB1AC0();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v11, 1, v14) == 1)
  {
    sub_1D594F53C((uint64_t)v11, &qword_1EA727D20);
LABEL_12:
    uint64_t v24 = v56;
    (*(void (**)(char *, uint64_t, uint64_t, unint64_t))(v56 + 56))(v7, 1, 1, v0);
    goto LABEL_13;
  }
  uint64_t v16 = sub_1D5AB1A50();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v14);
  if (!v16) {
    goto LABEL_12;
  }
  uint64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    id v53 = v13;
    id v54 = v7;
    uint64_t v18 = *(void (**)(char *, unint64_t, unint64_t))(v56 + 16);
    unint64_t v19 = v16 + ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80));
    uint64_t v20 = (void (**)(char *, unint64_t))(v56 + 8);
    uint64_t v21 = *(void *)(v56 + 72);
    v52[1] = v16;
    swift_bridgeObjectRetain();
    while (1)
    {
      v18(v2, v19, v0);
      if (sub_1D5AB1A20() == 0x7974697669746361 && v22 == 0xEC00000065707954) {
        break;
      }
      char v23 = sub_1D5AB5AF0();
      swift_bridgeObjectRelease();
      if (v23) {
        goto LABEL_37;
      }
      (*v20)(v2, v0);
      v19 += v21;
      if (!--v17)
      {
        swift_bridgeObjectRelease();
        uint64_t v13 = v53;
        uint64_t v7 = v54;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
LABEL_37:
    swift_bridgeObjectRelease();
    uint64_t v24 = v56;
    uint64_t v7 = v54;
    (*(void (**)(char *, char *, unint64_t))(v56 + 32))(v54, v2, v0);
    (*(void (**)(char *, void, uint64_t, unint64_t))(v24 + 56))(v7, 0, 1, v0);
    swift_bridgeObjectRelease();
    uint64_t v13 = v53;
  }
  else
  {
LABEL_11:
    uint64_t v24 = v56;
    (*(void (**)(char *, uint64_t, uint64_t, unint64_t))(v56 + 56))(v7, 1, 1, v0);
    swift_bridgeObjectRelease();
  }
LABEL_13:
  uint64_t v25 = v55;
  sub_1D596E6CC((uint64_t)v7, v55, &qword_1EA727D18);
  if ((*(unsigned int (**)(uint64_t, uint64_t, unint64_t))(v24 + 48))(v25, 1, v0) == 1)
  {
    sub_1D594F53C(v25, &qword_1EA727D18);
LABEL_15:
    unint64_t v26 = 0;
    goto LABEL_59;
  }
  uint64_t v27 = sub_1D5AB1A30();
  unint64_t v26 = v28;
  (*(void (**)(uint64_t, unint64_t))(v24 + 8))(v25, v0);
  if (!v26) {
    goto LABEL_59;
  }
  uint64_t v29 = HIBYTE(v26) & 0xF;
  uint64_t v30 = v27 & 0xFFFFFFFFFFFFLL;
  if ((v26 & 0x2000000000000000) != 0) {
    uint64_t v31 = HIBYTE(v26) & 0xF;
  }
  else {
    uint64_t v31 = v27 & 0xFFFFFFFFFFFFLL;
  }
  if (!v31)
  {
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  if ((v26 & 0x1000000000000000) != 0)
  {
    uint64_t v32 = v13;
    unint64_t v0 = sub_1D5A74370(v27, v26, 10);
    char v35 = v51;
    goto LABEL_55;
  }
  if ((v26 & 0x2000000000000000) == 0)
  {
    uint64_t v32 = v13;
    if ((v27 & 0x1000000000000000) != 0) {
      unint64_t v33 = (unsigned __int8 *)((v26 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      unint64_t v33 = (unsigned __int8 *)sub_1D5AB5870();
    }
    unint64_t v0 = (unint64_t)sub_1D5A74200(v33, v30, 10);
    char v35 = v34 & 1;
    goto LABEL_55;
  }
  v57[0] = v27;
  v57[1] = v26 & 0xFFFFFFFFFFFFFFLL;
  if (v27 == 43)
  {
    if (!v29)
    {
LABEL_86:
      __break(1u);
LABEL_87:
      uint64_t v32 = v13;
      goto LABEL_54;
    }
    if (v29 == 1 || (BYTE1(v27) - 48) > 9u) {
      goto LABEL_52;
    }
    unint64_t v0 = (BYTE1(v27) - 48);
    if (v29 == 2)
    {
LABEL_61:
      uint64_t v32 = v13;
      char v35 = 0;
      goto LABEL_55;
    }
    if ((BYTE2(v27) - 48) > 9u) {
      goto LABEL_52;
    }
    uint64_t v32 = v13;
    unint64_t v0 = 10 * (BYTE1(v27) - 48) + (BYTE2(v27) - 48);
    uint64_t v39 = v29 - 3;
    if (v39)
    {
      char v40 = (unsigned __int8 *)v57 + 3;
      while (1)
      {
        unsigned int v41 = *v40 - 48;
        if (v41 > 9) {
          goto LABEL_53;
        }
        if (!is_mul_ok(v0, 0xAuLL)) {
          goto LABEL_53;
        }
        BOOL v37 = __CFADD__(10 * v0, v41);
        unint64_t v0 = 10 * v0 + v41;
        if (v37) {
          goto LABEL_53;
        }
        char v35 = 0;
        ++v40;
        if (!--v39) {
          goto LABEL_55;
        }
      }
    }
LABEL_74:
    char v35 = 0;
    goto LABEL_55;
  }
  if (v27 != 45)
  {
    if (!v29 || (v27 - 48) > 9u) {
      goto LABEL_52;
    }
    unint64_t v0 = (v27 - 48);
    if (v29 == 1) {
      goto LABEL_61;
    }
    if ((BYTE1(v27) - 48) > 9u) {
      goto LABEL_52;
    }
    uint64_t v32 = v13;
    unint64_t v0 = 10 * (v27 - 48) + (BYTE1(v27) - 48);
    uint64_t v43 = v29 - 2;
    if (v43)
    {
      uint64_t v44 = (unsigned __int8 *)v57 + 2;
      while (1)
      {
        unsigned int v45 = *v44 - 48;
        if (v45 > 9) {
          goto LABEL_53;
        }
        if (!is_mul_ok(v0, 0xAuLL)) {
          goto LABEL_53;
        }
        BOOL v37 = __CFADD__(10 * v0, v45);
        unint64_t v0 = 10 * v0 + v45;
        if (v37) {
          goto LABEL_53;
        }
        char v35 = 0;
        ++v44;
        if (!--v43) {
          goto LABEL_55;
        }
      }
    }
    goto LABEL_74;
  }
  if (!v29)
  {
    __break(1u);
    goto LABEL_86;
  }
  if (v29 == 1) {
    goto LABEL_52;
  }
  unsigned __int8 v36 = BYTE1(v27) - 48;
  if ((BYTE1(v27) - 48) > 9u) {
    goto LABEL_52;
  }
  unint64_t v0 = 0;
  BOOL v37 = v36 == 0;
  unint64_t v38 = -(uint64_t)v36;
  if (!v37) {
    goto LABEL_87;
  }
  if (v29 != 2)
  {
    unsigned __int8 v46 = BYTE2(v27) - 48;
    if ((BYTE2(v27) - 48) <= 9u && is_mul_ok(v38, 0xAuLL))
    {
      uint64_t v32 = v13;
      unint64_t v47 = 10 * v38;
      unint64_t v0 = v47 - v46;
      if (v47 >= v46)
      {
        uint64_t v48 = v29 - 3;
        if (!v48) {
          goto LABEL_74;
        }
        uint64_t v49 = (unsigned __int8 *)v57 + 3;
        while (1)
        {
          unsigned int v50 = *v49 - 48;
          if (v50 > 9) {
            break;
          }
          if (!is_mul_ok(v0, 0xAuLL)) {
            break;
          }
          BOOL v37 = 10 * v0 >= v50;
          unint64_t v0 = 10 * v0 - v50;
          if (!v37) {
            break;
          }
          char v35 = 0;
          ++v49;
          if (!--v48) {
            goto LABEL_55;
          }
        }
      }
LABEL_53:
      unint64_t v0 = 0;
LABEL_54:
      char v35 = 1;
      goto LABEL_55;
    }
LABEL_52:
    uint64_t v32 = v13;
    goto LABEL_53;
  }
  uint64_t v32 = v13;
  char v35 = 0;
  unint64_t v0 = v38;
LABEL_55:
  swift_bridgeObjectRelease();
  if (v35) {
    unint64_t v26 = 0;
  }
  else {
    unint64_t v26 = v0;
  }
  uint64_t v13 = v32;
LABEL_59:
  sub_1D594F53C((uint64_t)v7, &qword_1EA727D18);
  sub_1D594F53C((uint64_t)v13, &qword_1EA727D20);
  return v26;
}

void *AchievementClient.__allocating_init(eventHub:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = objc_allocWithZone(MEMORY[0x1E4F29268]);
  id v7 = a3;
  uint64_t v8 = (void *)sub_1D5AB4DE0();
  id v9 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v8, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  uint64_t v10 = sub_1D59968E8(v9, v7);
  uint64_t v11 = *(void *)(v10 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 16));
  if (*(unsigned char *)(v10 + 48) == 1)
  {
    *(unsigned char *)(v10 + 48) = 2;
    objc_msgSend(*(id *)(v10 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  type metadata accessor for AchievementClient();
  uint64_t v12 = (void *)swift_allocObject();
  uint64_t v13 = swift_retain();
  uint64_t v14 = sub_1D5A6C558(v13, a1, a2, v12);

  swift_release_n();
  return v14;
}

uint64_t AchievementClient.__allocating_init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5A6B264(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D5A6C764);
}

uint64_t type metadata accessor for AchievementClient()
{
  return self;
}

uint64_t AchievementClient.init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5A6B264(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D5A6C664);
}

uint64_t sub_1D5A6B264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = a6(a1, a4, a5, v6, ObjectType, a2, a3);
  swift_unknownObjectRelease();
  return v14;
}

uint64_t sub_1D5A6B2E8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AchievementEnvironmentCacheUpdated();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v6 = *(void *)(result + 48);
    swift_unknownObjectRetain();
    swift_release();
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v8 = sub_1D5AB3F80();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v4, a1, v8);
    (*(void (**)(char *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v6 + 8))(v4, v2, &protocol witness table for AchievementEnvironmentCacheUpdated, ObjectType, v6);
    swift_unknownObjectRelease();
    return sub_1D5A6C9D4((uint64_t)v4);
  }
  return result;
}

uint64_t AchievementClient.deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t AchievementClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t AchievementClient.runHistoricalEvaluation()()
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE5400);
  v2._uint64_t countAndFlagsBits = 0xD00000000000006ELL;
  v2._object = (void *)0x80000001D5ACAD30;
  v3._object = (void *)0x80000001D5ACADA0;
  v3._uint64_t countAndFlagsBits = 0xD000000000000019;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v7 = 276;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v4 + 8))(&v7, ObjectType, v4);
}

uint64_t AchievementClient.queryTemplates()()
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE5400);
  v2._uint64_t countAndFlagsBits = 0xD00000000000006ELL;
  v2._object = (void *)0x80000001D5ACAD30;
  v3._object = (void *)0x80000001D5ACADC0;
  v3._uint64_t countAndFlagsBits = 0xD000000000000010;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v11 = 277;
  uint64_t v6 = *(uint64_t (**)(__int16 *, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE4C28);
  unint64_t v8 = sub_1D5A6C7E4();
  uint64_t v9 = sub_1D5A6C8A4((unint64_t *)&qword_1EBDE3C48, qword_1EBDE4C28, (void (*)(void))sub_1D59A2F78);
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t AchievementClient.populateAchievementProgressUpdates(forTemplateNames:)(uint64_t a1)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE5400);
  v4._uint64_t countAndFlagsBits = 0xD00000000000006ELL;
  v4._object = (void *)0x80000001D5ACAD30;
  v5._object = (void *)0x80000001D5ACADE0;
  v5._uint64_t countAndFlagsBits = 0xD000000000000035;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v14 = 278;
  uint64_t v13 = a1;
  unint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t *, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v6 + 16);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE4C28);
  unint64_t v10 = sub_1D5A6C7E4();
  uint64_t v11 = sub_1D5A6C8A4((unint64_t *)&qword_1EBDE3C48, qword_1EBDE4C28, (void (*)(void))sub_1D59A2F78);
  return v8(&v14, &v13, v9, v10, v11, ObjectType, v6);
}

uint64_t AchievementClient.fetchSeymourAchievement(for:)(uint64_t a1, uint64_t a2)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1D5AB4B50();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EBDE5400);
  v6._uint64_t countAndFlagsBits = 0xD00000000000006ELL;
  v6._object = (void *)0x80000001D5ACAD30;
  v7._object = (void *)0x80000001D5ACAE20;
  v7._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  Logger.trace(file:function:)(v6, v7);
  uint64_t v8 = *(void *)(v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v14 = 279;
  v13[0] = a1;
  v13[1] = a2;
  unint64_t v10 = *(uint64_t (**)(__int16 *, void *, void, uint64_t, void, void, void, void, uint64_t, uint64_t))(v8 + 32);
  uint64_t v11 = sub_1D5AB1DA0();
  return v10(&v14, v13, MEMORY[0x1E4FBB1A0], v11, MEMORY[0x1E4F9F0B8], MEMORY[0x1E4F9F0C0], MEMORY[0x1E4F9BE10], MEMORY[0x1E4F9BE18], ObjectType, v8);
}

uint64_t AchievementClient.fetchSeymourAchievementProgress(for:)(uint64_t a1)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE5400);
  v4._uint64_t countAndFlagsBits = 0xD00000000000006ELL;
  v4._object = (void *)0x80000001D5ACAD30;
  v5._object = (void *)0x80000001D5ACAE40;
  v5._uint64_t countAndFlagsBits = 0xD000000000000025;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v17 = 285;
  uint64_t v16 = a1;
  uint64_t v15 = *(uint64_t (**)(__int16 *, uint64_t *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 32);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE4C28);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE31D8);
  unint64_t v10 = sub_1D5A6C7E4();
  uint64_t v11 = sub_1D5A6C8A4((unint64_t *)&qword_1EBDE3C48, qword_1EBDE4C28, (void (*)(void))sub_1D59A2F78);
  uint64_t v12 = sub_1D59A3114(&qword_1EBDE31E0, &qword_1EBDE31D8);
  uint64_t v13 = sub_1D5A6C8A4(&qword_1EBDE31E8, &qword_1EBDE31D8, (void (*)(void))sub_1D5A6C850);
  return v15(&v17, &v16, v8, v9, v10, v11, v12, v13, ObjectType, v6);
}

uint64_t AchievementClient.queryAchievementEnvironmentCache()()
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE5400);
  v2._uint64_t countAndFlagsBits = 0xD00000000000006ELL;
  v2._object = (void *)0x80000001D5ACAD30;
  v3._object = (void *)0x80000001D5ACAE70;
  v3._uint64_t countAndFlagsBits = 0xD000000000000022;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v9 = 280;
  uint64_t v6 = *(uint64_t (**)(__int16 *, uint64_t, void, void, uint64_t, uint64_t))(v4 + 24);
  uint64_t v7 = sub_1D5AB3F80();
  return v6(&v9, v7, MEMORY[0x1E4F9E4F8], MEMORY[0x1E4F9E500], ObjectType, v4);
}

uint64_t AchievementClient.fetchProgressUpdates(for:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v14 = 281;
  uint64_t v13 = a1;
  uint64_t v12 = *(uint64_t (**)(__int16 *, uint64_t *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 32);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE4C28);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727D28);
  unint64_t v7 = sub_1D5A6C7E4();
  uint64_t v8 = sub_1D5A6C8A4((unint64_t *)&qword_1EBDE3C48, qword_1EBDE4C28, (void (*)(void))sub_1D59A2F78);
  uint64_t v9 = sub_1D59A3114(&qword_1EA727D30, &qword_1EA727D28);
  uint64_t v10 = sub_1D5A6C8A4(&qword_1EA727D38, &qword_1EA727D28, (void (*)(void))sub_1D5A6C910);
  return v12(&v14, &v13, v5, v6, v7, v8, v9, v10, ObjectType, v3);
}

uint64_t AchievementClient.queryEligibleToPresentAwardToast(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v9 = 282;
  v8[0] = a1;
  v8[1] = a2;
  return (*(uint64_t (**)(__int16 *, void *, void, void, void, void, void, void, uint64_t, uint64_t))(v5 + 32))(&v9, v8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB390], MEMORY[0x1E4F9F0B8], MEMORY[0x1E4F9F0C0], MEMORY[0x1E4F9F0E8], MEMORY[0x1E4F9F0F0], ObjectType, v5);
}

uint64_t AchievementClient.fetchCurrentStreakNotification()()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v4 = 283;
  return (*(uint64_t (**)(__int16 *, void, void, void, uint64_t, uint64_t))(v1 + 24))(&v4, MEMORY[0x1E4F9EB50], MEMORY[0x1E4F9EB40], MEMORY[0x1E4F9EB48], ObjectType, v1);
}

uint64_t AchievementClient.journalAchievementNotificationRecord(with:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v8 = 284;
  uint64_t v5 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, void, void, uint64_t, uint64_t))(v3 + 16);
  uint64_t v6 = sub_1D5AB4100();
  return v5(&v8, a1, v6, MEMORY[0x1E4F9E7A8], MEMORY[0x1E4F9E7B0], ObjectType, v3);
}

uint64_t AchievementClient.deleteAchievementNotificationRecord(for:)(uint64_t a1, uint64_t a2)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1D5AB4B50();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EBDE5400);
  v6._uint64_t countAndFlagsBits = 0xD00000000000006ELL;
  v6._object = (void *)0x80000001D5ACAD30;
  v7._object = (void *)0x80000001D5ACAEA0;
  v7._uint64_t countAndFlagsBits = 0xD000000000000029;
  Logger.trace(file:function:)(v6, v7);
  uint64_t v8 = *(void *)(v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v12 = 286;
  v11[0] = a1;
  v11[1] = a2;
  return (*(uint64_t (**)(__int16 *, void *, void, void, void, uint64_t, uint64_t))(v8 + 16))(&v12, v11, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F9F0B8], MEMORY[0x1E4F9F0C0], ObjectType, v8);
}

uint64_t sub_1D5A6C110(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(*(void *)v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v9 = 282;
  v8[0] = a1;
  v8[1] = a2;
  return (*(uint64_t (**)(__int16 *, void *, void, void, void, void, void, void, uint64_t, uint64_t))(v5 + 32))(&v9, v8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB390], MEMORY[0x1E4F9F0B8], MEMORY[0x1E4F9F0C0], MEMORY[0x1E4F9F0E8], MEMORY[0x1E4F9F0F0], ObjectType, v5);
}

uint64_t sub_1D5A6C1C0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v4 = 283;
  return (*(uint64_t (**)(__int16 *, void, void, void, uint64_t, uint64_t))(v1 + 24))(&v4, MEMORY[0x1E4F9EB50], MEMORY[0x1E4F9EB40], MEMORY[0x1E4F9EB48], ObjectType, v1);
}

uint64_t sub_1D5A6C244(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v14 = 281;
  uint64_t v13 = a1;
  __int16 v12 = *(uint64_t (**)(__int16 *, uint64_t *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 32);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE4C28);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727D28);
  unint64_t v7 = sub_1D5A6C7E4();
  uint64_t v8 = sub_1D5A6C8A4((unint64_t *)&qword_1EBDE3C48, qword_1EBDE4C28, (void (*)(void))sub_1D59A2F78);
  uint64_t v9 = sub_1D59A3114(&qword_1EA727D30, &qword_1EA727D28);
  uint64_t v10 = sub_1D5A6C8A4(&qword_1EA727D38, &qword_1EA727D28, (void (*)(void))sub_1D5A6C910);
  return v12(&v14, &v13, v5, v6, v7, v8, v9, v10, ObjectType, v3);
}

uint64_t sub_1D5A6C3B8(uint64_t a1, uint64_t a2)
{
  return AchievementClient.fetchSeymourAchievement(for:)(a1, a2);
}

uint64_t sub_1D5A6C3DC(uint64_t a1)
{
  return AchievementClient.fetchSeymourAchievementProgress(for:)(a1);
}

uint64_t sub_1D5A6C400(uint64_t a1)
{
  return AchievementClient.populateAchievementProgressUpdates(forTemplateNames:)(a1);
}

uint64_t sub_1D5A6C424()
{
  return AchievementClient.queryTemplates()();
}

uint64_t sub_1D5A6C448()
{
  return AchievementClient.queryAchievementEnvironmentCache()();
}

uint64_t sub_1D5A6C46C()
{
  return AchievementClient.runHistoricalEvaluation()();
}

uint64_t sub_1D5A6C490(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v8 = 284;
  uint64_t v5 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, void, void, uint64_t, uint64_t))(v3 + 16);
  uint64_t v6 = sub_1D5AB4100();
  return v5(&v8, a1, v6, MEMORY[0x1E4F9E7A8], MEMORY[0x1E4F9E7B0], ObjectType, v3);
}

uint64_t sub_1D5A6C534(uint64_t a1, uint64_t a2)
{
  return AchievementClient.deleteAchievementNotificationRecord(for:)(a1, a2);
}

void *sub_1D5A6C558(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[2] = a1;
  a4[3] = &protocol witness table for XPCClient;
  a4[4] = &protocol witness table for XPCClient;
  a4[5] = a2;
  a4[6] = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = a1;
  char v10 = 53;
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  uint64_t v8 = sub_1D5AB3F80();
  swift_retain();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v10, (uint64_t)sub_1D5A6C9CC, v7, ObjectType, v8, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E4F9E4F8], MEMORY[0x1E4F9E500]);
  swift_release();
  swift_unknownObjectRelease();
  return a4;
}

void *sub_1D5A6C664(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  a4[2] = a1;
  a4[3] = a6;
  a4[4] = a7;
  a4[5] = a2;
  a4[6] = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v15 = a1;
  char v14 = 53;
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  uint64_t v12 = sub_1D5AB3F80();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v14, (uint64_t)sub_1D5A6C9CC, v11, ObjectType, v12, a7, MEMORY[0x1E4F9E4F8], MEMORY[0x1E4F9E500]);
  swift_release();
  swift_unknownObjectRelease();
  return a4;
}

void *sub_1D5A6C764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  type metadata accessor for AchievementClient();
  uint64_t v13 = (void *)swift_allocObject();
  return sub_1D5A6C664(a1, a2, a3, v13, a5, a6, a7);
}

unint64_t sub_1D5A6C7E4()
{
  unint64_t result = qword_1EBDE3C40;
  if (!qword_1EBDE3C40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDE4C28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE3C40);
  }
  return result;
}

unint64_t sub_1D5A6C850()
{
  unint64_t result = qword_1EBDE2F60;
  if (!qword_1EBDE2F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE2F60);
  }
  return result;
}

uint64_t sub_1D5A6C8A4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D5A6C910()
{
  unint64_t result = qword_1EA727D40;
  if (!qword_1EA727D40)
  {
    sub_1D5AB1DB0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA727D40);
  }
  return result;
}

uint64_t method lookup function for AchievementClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AchievementClient);
}

uint64_t dispatch thunk of AchievementClient.__allocating_init(connection:eventHub:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1D5A6C994()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D5A6C9CC(uint64_t a1)
{
  return sub_1D5A6B2E8(a1);
}

uint64_t sub_1D5A6C9D4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AchievementEnvironmentCacheUpdated();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void static EngagementBannerRulesUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for EngagementBannerRulesUpdated()
{
  return &type metadata for EngagementBannerRulesUpdated;
}

uint64_t CoachingEventEnded.coachingEvent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB25A0();
  __int16 v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t CoachingEventEnded.init(coachingEvent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB25A0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static CoachingEventEnded.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t getEnumTagSinglePayload for CoachingEventEnded(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D5A6CB4C);
}

uint64_t sub_1D5A6CB4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB25A0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for CoachingEventEnded(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D5A6CBCC);
}

uint64_t sub_1D5A6CBCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB25A0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for CoachingEventEnded()
{
  uint64_t result = qword_1EA727D48;
  if (!qword_1EA727D48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D5A6CC88()
{
  uint64_t v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EBDE5EF8);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EBDE5EF8);
  sub_1D5A6E6B8();
  uint64_t v2 = (void *)sub_1D5AB55F0();
  *uint64_t v1 = v2;
  id v3 = v2;
  sub_1D5AB4B60();
  return sub_1D5AB4AB0();
}

uint64_t sub_1D5A6CD44()
{
  uint64_t v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EBDE5DA0);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EBDE5DA0);
  sub_1D5A6E6B8();
  uint64_t v2 = (void *)sub_1D5AB55F0();
  *uint64_t v1 = v2;
  id v3 = v2;
  sub_1D5AB4B60();
  return sub_1D5AB4AB0();
}

uint64_t sub_1D5A6CDFC()
{
  uint64_t v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EBDE5C48);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EBDE5C48);
  sub_1D5A6E6B8();
  uint64_t v2 = (void *)sub_1D5AB55F0();
  *uint64_t v1 = v2;
  id v3 = v2;
  sub_1D5AB4B60();
  return sub_1D5AB4AB0();
}

uint64_t sub_1D5A6CEC0()
{
  uint64_t v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EA72F798);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EA72F798);
  sub_1D5A6E6B8();
  uint64_t v2 = (void *)sub_1D5AB55F0();
  *uint64_t v1 = v2;
  id v3 = v2;
  sub_1D5AB4B60();
  return sub_1D5AB4AB0();
}

uint64_t sub_1D5A6CF7C()
{
  uint64_t v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EBDE5E88);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EBDE5E88);
  sub_1D5A6E6B8();
  uint64_t v2 = (void *)sub_1D5AB55F0();
  *uint64_t v1 = v2;
  id v3 = v2;
  sub_1D5AB4B60();
  return sub_1D5AB4AB0();
}

uint64_t sub_1D5A6D038()
{
  uint64_t v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EBDE5D28);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EBDE5D28);
  sub_1D5A6E6B8();
  uint64_t v2 = (void *)sub_1D5AB55F0();
  *uint64_t v1 = v2;
  id v3 = v2;
  sub_1D5AB4B60();
  return sub_1D5AB4AB0();
}

uint64_t sub_1D5A6D0F4()
{
  uint64_t v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EBDE5C90);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EBDE5C90);
  sub_1D5A6E6B8();
  uint64_t v2 = (void *)sub_1D5AB55F0();
  *uint64_t v1 = v2;
  id v3 = v2;
  sub_1D5AB4B60();
  return sub_1D5AB4AB0();
}

uint64_t sub_1D5A6D1B0()
{
  uint64_t v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EBDE5E40);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EBDE5E40);
  sub_1D5A6E6B8();
  uint64_t v2 = (void *)sub_1D5AB55F0();
  *uint64_t v1 = v2;
  id v3 = v2;
  sub_1D5AB4B60();
  return sub_1D5AB4AB0();
}

uint64_t sub_1D5A6D270()
{
  uint64_t v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EBDE5EA0);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EBDE5EA0);
  sub_1D5A6E6B8();
  uint64_t v2 = (void *)sub_1D5AB55F0();
  *uint64_t v1 = v2;
  id v3 = v2;
  sub_1D5AB4B60();
  return sub_1D5AB4AB0();
}

uint64_t sub_1D5A6D330()
{
  uint64_t v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EBDE5D88);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EBDE5D88);
  sub_1D5A6E6B8();
  uint64_t v2 = (void *)sub_1D5AB55F0();
  *uint64_t v1 = v2;
  id v3 = v2;
  sub_1D5AB4B60();
  return sub_1D5AB4AB0();
}

uint64_t sub_1D5A6D3E8()
{
  uint64_t v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EA72F7B0);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EA72F7B0);
  sub_1D5A6E6B8();
  uint64_t v2 = (void *)sub_1D5AB55F0();
  *uint64_t v1 = v2;
  id v3 = v2;
  sub_1D5AB4B60();
  return sub_1D5AB4AB0();
}

uint64_t sub_1D5A6D4A0()
{
  uint64_t v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EBDE5E28);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EBDE5E28);
  sub_1D5A6E6B8();
  uint64_t v2 = (void *)sub_1D5AB55F0();
  *uint64_t v1 = v2;
  id v3 = v2;
  sub_1D5AB4B60();
  return sub_1D5AB4AB0();
}

uint64_t sub_1D5A6D55C()
{
  uint64_t v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EA72F7C8);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EA72F7C8);
  sub_1D5A6E6B8();
  uint64_t v2 = (void *)sub_1D5AB55F0();
  *uint64_t v1 = v2;
  id v3 = v2;
  sub_1D5AB4B60();
  return sub_1D5AB4AB0();
}

uint64_t sub_1D5A6D624()
{
  uint64_t v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EBDE5D58);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EBDE5D58);
  sub_1D5A6E6B8();
  uint64_t v2 = (void *)sub_1D5AB55F0();
  *uint64_t v1 = v2;
  id v3 = v2;
  sub_1D5AB4B60();
  return sub_1D5AB4AB0();
}

uint64_t sub_1D5A6D6E4()
{
  uint64_t v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EBDE5D10);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EBDE5D10);
  sub_1D5A6E6B8();
  uint64_t v2 = (void *)sub_1D5AB55F0();
  *uint64_t v1 = v2;
  id v3 = v2;
  sub_1D5AB4B60();
  return sub_1D5AB4AB0();
}

uint64_t sub_1D5A6D7A0()
{
  uint64_t v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EA72F7E0);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EA72F7E0);
  sub_1D5A6E6B8();
  uint64_t v2 = (void *)sub_1D5AB55F0();
  *uint64_t v1 = v2;
  id v3 = v2;
  sub_1D5AB4B60();
  return sub_1D5AB4AB0();
}

uint64_t sub_1D5A6D85C()
{
  uint64_t v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EBDE5E70);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EBDE5E70);
  sub_1D5A6E6B8();
  uint64_t v2 = (void *)sub_1D5AB55F0();
  *uint64_t v1 = v2;
  id v3 = v2;
  sub_1D5AB4B60();
  return sub_1D5AB4AB0();
}

uint64_t sub_1D5A6D924()
{
  uint64_t v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EBDE5CF0);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EBDE5CF0);
  sub_1D5A6E6B8();
  uint64_t v2 = (void *)sub_1D5AB55F0();
  *uint64_t v1 = v2;
  id v3 = v2;
  sub_1D5AB4B60();
  return sub_1D5AB4AB0();
}

uint64_t sub_1D5A6D9E0()
{
  uint64_t v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EBDE5E58);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EBDE5E58);
  sub_1D5A6E6B8();
  uint64_t v2 = (void *)sub_1D5AB55F0();
  *uint64_t v1 = v2;
  id v3 = v2;
  sub_1D5AB4B60();
  return sub_1D5AB4AB0();
}

uint64_t sub_1D5A6DAA8()
{
  uint64_t v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EBDE5E10);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EBDE5E10);
  sub_1D5A6E6B8();
  uint64_t v2 = (void *)sub_1D5AB55F0();
  *uint64_t v1 = v2;
  id v3 = v2;
  sub_1D5AB4B60();
  return sub_1D5AB4AB0();
}

uint64_t sub_1D5A6DB70()
{
  uint64_t v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EBDE5C30);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EBDE5C30);
  sub_1D5A6E6B8();
  uint64_t v2 = (void *)sub_1D5AB55F0();
  *uint64_t v1 = v2;
  id v3 = v2;
  sub_1D5AB4B60();
  return sub_1D5AB4AB0();
}

uint64_t sub_1D5A6DC28()
{
  uint64_t v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EBDE5C78);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EBDE5C78);
  sub_1D5A6E6B8();
  uint64_t v2 = (void *)sub_1D5AB55F0();
  *uint64_t v1 = v2;
  id v3 = v2;
  sub_1D5AB4B60();
  return sub_1D5AB4AB0();
}

uint64_t sub_1D5A6DCE0()
{
  uint64_t v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EBDE5D70);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EBDE5D70);
  sub_1D5A6E6B8();
  uint64_t v2 = (void *)sub_1D5AB55F0();
  *uint64_t v1 = v2;
  id v3 = v2;
  sub_1D5AB4B60();
  return sub_1D5AB4AB0();
}

uint64_t sub_1D5A6DD98()
{
  uint64_t v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EA72F7F8);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EA72F7F8);
  sub_1D5A6E6B8();
  uint64_t v2 = (void *)sub_1D5AB55F0();
  *uint64_t v1 = v2;
  id v3 = v2;
  sub_1D5AB4B60();
  return sub_1D5AB4AB0();
}

uint64_t sub_1D5A6DE54()
{
  uint64_t v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EA72F810);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EA72F810);
  sub_1D5A6E6B8();
  uint64_t v2 = (void *)sub_1D5AB55F0();
  *uint64_t v1 = v2;
  id v3 = v2;
  sub_1D5AB4B60();
  return sub_1D5AB4AB0();
}

uint64_t sub_1D5A6DF08()
{
  uint64_t v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EBDE5DF8);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EBDE5DF8);
  sub_1D5A6E6B8();
  uint64_t v2 = (void *)sub_1D5AB55F0();
  *uint64_t v1 = v2;
  id v3 = v2;
  sub_1D5AB4B60();
  return sub_1D5AB4AB0();
}

uint64_t sub_1D5A6DFCC()
{
  uint64_t v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EBDE5C60);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EBDE5C60);
  sub_1D5A6E6B8();
  uint64_t v2 = (void *)sub_1D5AB55F0();
  *uint64_t v1 = v2;
  id v3 = v2;
  sub_1D5AB4B60();
  return sub_1D5AB4AB0();
}

uint64_t sub_1D5A6E080()
{
  uint64_t v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EA72F828);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EA72F828);
  sub_1D5A6E6B8();
  uint64_t v2 = (void *)sub_1D5AB55F0();
  *uint64_t v1 = v2;
  id v3 = v2;
  sub_1D5AB4B60();
  return sub_1D5AB4AB0();
}

uint64_t sub_1D5A6E13C()
{
  uint64_t v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EA72F840);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EA72F840);
  sub_1D5A6E6B8();
  uint64_t v2 = (void *)sub_1D5AB55F0();
  *uint64_t v1 = v2;
  id v3 = v2;
  sub_1D5AB4B60();
  return sub_1D5AB4AB0();
}

uint64_t sub_1D5A6E1FC()
{
  uint64_t v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EBDE5EC8);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EBDE5EC8);
  sub_1D5A6E6B8();
  uint64_t v2 = (void *)sub_1D5AB55F0();
  *uint64_t v1 = v2;
  id v3 = v2;
  sub_1D5AB4B60();
  return sub_1D5AB4AB0();
}

uint64_t sub_1D5A6E2B4()
{
  uint64_t v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EBDE5CD8);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EBDE5CD8);
  sub_1D5A6E6B8();
  uint64_t v2 = (void *)sub_1D5AB55F0();
  *uint64_t v1 = v2;
  id v3 = v2;
  sub_1D5AB4B60();
  return sub_1D5AB4AB0();
}

uint64_t sub_1D5A6E378()
{
  uint64_t v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EBDE5CC0);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EBDE5CC0);
  sub_1D5A6E6B8();
  uint64_t v2 = (void *)sub_1D5AB55F0();
  *uint64_t v1 = v2;
  id v3 = v2;
  sub_1D5AB4B60();
  return sub_1D5AB4AB0();
}

uint64_t sub_1D5A6E428()
{
  uint64_t v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EBDE5CA8);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EBDE5CA8);
  sub_1D5A6E6B8();
  uint64_t v2 = (void *)sub_1D5AB55F0();
  *uint64_t v1 = v2;
  id v3 = v2;
  sub_1D5AB4B60();
  return sub_1D5AB4AB0();
}

uint64_t sub_1D5A6E4EC()
{
  uint64_t v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EBDE5EE0);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EBDE5EE0);
  sub_1D5A6E6B8();
  uint64_t v2 = (void *)sub_1D5AB55F0();
  *uint64_t v1 = v2;
  id v3 = v2;
  sub_1D5AB4B60();
  return sub_1D5AB4AB0();
}

uint64_t sub_1D5A6E5B0()
{
  uint64_t v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EA72F858);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EA72F858);
  sub_1D5A6E6B8();
  uint64_t v2 = (void *)sub_1D5AB55F0();
  *uint64_t v1 = v2;
  id v3 = v2;
  sub_1D5AB4B60();
  return sub_1D5AB4AB0();
}

uint64_t type metadata accessor for LogSystem()
{
  uint64_t result = qword_1EBDE5258;
  if (!qword_1EBDE5258) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1D5A6E6B8()
{
  unint64_t result = qword_1EBDE53F8;
  if (!qword_1EBDE53F8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBDE53F8);
  }
  return result;
}

void **sub_1D5A6E6F8(void **a1, void **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    char v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1D5AB4B50();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    uint64_t v13 = v4;
    v12(v9, v10, v11);
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = (char *)v7 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_1D5AB4AD0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  return v7;
}

uint64_t sub_1D5A6E830(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1D5AB4B50();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_1D5AB4AD0();
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8);
  return v8(v6, v7);
}

void **sub_1D5A6E8F0(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1D5AB4B50();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  id v12 = v6;
  v11(v8, v9, v10);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_1D5AB4AD0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  return a1;
}

void **sub_1D5A6E9DC(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1D5AB4B50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_1D5AB4AD0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  return a1;
}

void *sub_1D5A6EABC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1D5AB4B50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1D5AB4AD0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

void **sub_1D5A6EB90(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(int *)(a3 + 20);
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1D5AB4B50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1D5AB4AD0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_1D5A6EC6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D5A6EC80);
}

uint64_t sub_1D5A6EC80(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1D5AB4B50();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for ActivityTracer();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1D5A6EDAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D5A6EDC0);
}

void *sub_1D5A6EDC0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1D5AB4B50();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for ActivityTracer();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 24);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_1D5A6EEEC()
{
  uint64_t result = sub_1D5AB4B50();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1D5AB4AD0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t CatalogWorkout.reference()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v142 = a1;
  uint64_t v2 = sub_1D5AB1E90();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v164 = v2;
  uint64_t v165 = v3;
  MEMORY[0x1F4188790](v2);
  uint64_t v163 = (char *)&v134 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_1D5AB2CC0();
  uint64_t v140 = *(void *)(v141 - 8);
  MEMORY[0x1F4188790](v141);
  uint64_t v139 = (char *)&v134 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D5AB1B30();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v143 = (char *)&v134 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v162 = (void *)sub_1D5AB4A00();
  uint64_t v138 = *(v162 - 1);
  MEMORY[0x1F4188790](v162);
  uint64_t v161 = (uint64_t)&v134 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = (void *)sub_1D5AB4890();
  uint64_t v137 = *(v160 - 1);
  MEMORY[0x1F4188790](v160);
  uint64_t v159 = (uint64_t)&v134 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = (void *)sub_1D5AB22A0();
  uint64_t v136 = *(v158 - 1);
  MEMORY[0x1F4188790](v158);
  uint64_t v157 = (char *)&v134 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = (void *)sub_1D5AB1E30();
  uint64_t v135 = *(v156 - 1);
  MEMORY[0x1F4188790](v156);
  os_log_t v155 = (char *)&v134 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = (void *)sub_1D5AB4A50();
  uint64_t v134 = *(v154 - 1);
  MEMORY[0x1F4188790](v154);
  uint64_t v153 = (char *)&v134 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = (void *)sub_1D5AB2070();
  uint64_t v13 = *(v152 - 1);
  uint64_t v14 = MEMORY[0x1F4188790](v152);
  uint64_t v151 = (char *)&v134 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v150 = (char *)&v134 - v16;
  uint64_t v144 = v1;
  uint64_t v17 = sub_1D5AB2920();
  int64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    uint64_t v166 = (char *)MEMORY[0x1E4FBC860];
    sub_1D594E784(0, v18, 0);
    uint64_t result = sub_1D594F1A0(v17);
    uint64_t v20 = result;
    uint64_t v22 = v21;
    char v24 = v23 & 1;
    uint64_t v149 = v17 + 56;
    uint64_t v147 = v13 + 16;
    uint64_t v146 = v13 + 32;
    uint64_t v145 = v13 + 8;
    uint64_t v148 = v13;
    while ((v20 & 0x8000000000000000) == 0 && v20 < 1 << *(unsigned char *)(v17 + 32))
    {
      if (((*(void *)(v149 + (((unint64_t)v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
        goto LABEL_68;
      }
      if (*(_DWORD *)(v17 + 36) != v22) {
        goto LABEL_69;
      }
      uint64_t v25 = v150;
      unint64_t v26 = v152;
      (*(void (**)(char *, uint64_t, void *))(v13 + 16))(v150, *(void *)(v17 + 48) + *(void *)(v13 + 72) * v20, v152);
      uint64_t v27 = v151;
      (*(void (**)(char *, char *, void *))(v13 + 32))(v151, v25, v26);
      uint64_t v28 = sub_1D5AB2060();
      uint64_t v30 = v29;
      (*(void (**)(char *, void *))(v13 + 8))(v27, v26);
      uint64_t v31 = v166;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D594E784(0, *((void *)v31 + 2) + 1, 1);
        uint64_t v31 = v166;
      }
      unint64_t v33 = *((void *)v31 + 2);
      unint64_t v32 = *((void *)v31 + 3);
      if (v33 >= v32 >> 1)
      {
        sub_1D594E784(v32 > 1, v33 + 1, 1);
        uint64_t v31 = v166;
      }
      *((void *)v31 + 2) = v33 + 1;
      char v34 = &v31[16 * v33];
      *((void *)v34 + 4) = v28;
      *((void *)v34 + 5) = v30;
      uint64_t result = sub_1D594F244(v20, v22, v24 & 1, v17);
      uint64_t v20 = result;
      uint64_t v22 = v35;
      char v24 = v36 & 1;
      --v18;
      uint64_t v13 = v148;
      if (!v18)
      {
        uint64_t v151 = v31;
        sub_1D594B5F8(result, v35, v36 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v151 = (char *)MEMORY[0x1E4FBC860];
LABEL_14:
    uint64_t v37 = sub_1D5AB2AA0();
    int64_t v38 = *(void *)(v37 + 16);
    if (v38)
    {
      uint64_t v166 = (char *)MEMORY[0x1E4FBC860];
      sub_1D594E784(0, v38, 0);
      uint64_t v152 = *(void **)(v134 + 16);
      uint64_t v39 = *(unsigned __int8 *)(v134 + 80);
      uint64_t v150 = (char *)v37;
      uint64_t v40 = v37 + ((v39 + 32) & ~v39);
      uint64_t v41 = *(void *)(v134 + 72);
      uint64_t v42 = (void (**)(char *, void *))(v134 + 8);
      do
      {
        uint64_t v44 = v153;
        uint64_t v43 = v154;
        ((void (*)(char *, uint64_t, void *))v152)(v153, v40, v154);
        uint64_t v45 = sub_1D5AB4A40();
        uint64_t v47 = v46;
        (*v42)(v44, v43);
        uint64_t v48 = v166;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D594E784(0, *((void *)v48 + 2) + 1, 1);
          uint64_t v48 = v166;
        }
        unint64_t v50 = *((void *)v48 + 2);
        unint64_t v49 = *((void *)v48 + 3);
        if (v50 >= v49 >> 1)
        {
          sub_1D594E784(v49 > 1, v50 + 1, 1);
          uint64_t v48 = v166;
        }
        *((void *)v48 + 2) = v50 + 1;
        char v51 = &v48[16 * v50];
        *((void *)v51 + 4) = v45;
        *((void *)v51 + 5) = v47;
        v40 += v41;
        --v38;
      }
      while (v38);
      uint64_t v153 = v48;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v153 = (char *)MEMORY[0x1E4FBC860];
    }
    uint64_t v52 = sub_1D5AB28F0();
    int64_t v53 = *(void *)(v52 + 16);
    if (v53)
    {
      uint64_t v166 = (char *)MEMORY[0x1E4FBC860];
      sub_1D594E784(0, v53, 0);
      uint64_t v154 = *(void **)(v135 + 16);
      uint64_t v54 = *(unsigned __int8 *)(v135 + 80);
      uint64_t v152 = (void *)v52;
      uint64_t v55 = v52 + ((v54 + 32) & ~v54);
      uint64_t v56 = *(void *)(v135 + 72);
      uint64_t v57 = (void (**)(char *, void *))(v135 + 8);
      do
      {
        unint64_t v59 = v155;
        uint64_t v58 = v156;
        ((void (*)(char *, uint64_t, void *))v154)(v155, v55, v156);
        uint64_t v60 = sub_1D5AB1E20();
        uint64_t v62 = v61;
        (*v57)(v59, v58);
        uint64_t v63 = v166;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D594E784(0, *((void *)v63 + 2) + 1, 1);
          uint64_t v63 = v166;
        }
        unint64_t v65 = *((void *)v63 + 2);
        unint64_t v64 = *((void *)v63 + 3);
        if (v65 >= v64 >> 1)
        {
          sub_1D594E784(v64 > 1, v65 + 1, 1);
          uint64_t v63 = v166;
        }
        *((void *)v63 + 2) = v65 + 1;
        char v66 = &v63[16 * v65];
        *((void *)v66 + 4) = v60;
        *((void *)v66 + 5) = v62;
        v55 += v56;
        --v53;
      }
      while (v53);
      os_log_t v155 = v63;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      os_log_t v155 = (char *)MEMORY[0x1E4FBC860];
    }
    uint64_t v67 = sub_1D5AB2A00();
    int64_t v68 = *(void *)(v67 + 16);
    if (v68)
    {
      uint64_t v166 = (char *)MEMORY[0x1E4FBC860];
      sub_1D594E784(0, v68, 0);
      uint64_t v156 = *(void **)(v136 + 16);
      uint64_t v69 = *(unsigned __int8 *)(v136 + 80);
      uint64_t v154 = (void *)v67;
      uint64_t v70 = v67 + ((v69 + 32) & ~v69);
      uint64_t v71 = *(void *)(v136 + 72);
      uint64_t v72 = (void (**)(char *, void *))(v136 + 8);
      do
      {
        uint64_t v73 = v157;
        uint64_t v74 = v158;
        ((void (*)(char *, uint64_t, void *))v156)(v157, v70, v158);
        uint64_t v75 = sub_1D5AB2290();
        uint64_t v77 = v76;
        (*v72)(v73, v74);
        uint64_t v78 = v166;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D594E784(0, *((void *)v78 + 2) + 1, 1);
          uint64_t v78 = v166;
        }
        unint64_t v80 = *((void *)v78 + 2);
        unint64_t v79 = *((void *)v78 + 3);
        if (v80 >= v79 >> 1)
        {
          sub_1D594E784(v79 > 1, v80 + 1, 1);
          uint64_t v78 = v166;
        }
        *((void *)v78 + 2) = v80 + 1;
        uint64_t v81 = &v78[16 * v80];
        *((void *)v81 + 4) = v75;
        *((void *)v81 + 5) = v77;
        v70 += v71;
        --v68;
      }
      while (v68);
      uint64_t v157 = v78;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v157 = (char *)MEMORY[0x1E4FBC860];
    }
    uint64_t v82 = sub_1D5AB2A90();
    int64_t v83 = *(void *)(v82 + 16);
    uint64_t v84 = (char *)MEMORY[0x1E4FBC860];
    if (v83)
    {
      uint64_t v166 = (char *)MEMORY[0x1E4FBC860];
      sub_1D594E784(0, v83, 0);
      uint64_t v158 = *(void **)(v137 + 16);
      uint64_t v85 = *(unsigned __int8 *)(v137 + 80);
      uint64_t v156 = (void *)v82;
      uint64_t v86 = v82 + ((v85 + 32) & ~v85);
      uint64_t v87 = *(void *)(v137 + 72);
      uint64_t v88 = (void (**)(uint64_t, void *))(v137 + 8);
      do
      {
        uint64_t v89 = v159;
        uint64_t v90 = v160;
        ((void (*)(uint64_t, uint64_t, void *))v158)(v159, v86, v160);
        uint64_t v91 = sub_1D5AB4810();
        uint64_t v93 = v92;
        (*v88)(v89, v90);
        uint64_t v94 = v166;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D594E784(0, *((void *)v94 + 2) + 1, 1);
          uint64_t v94 = v166;
        }
        unint64_t v96 = *((void *)v94 + 2);
        unint64_t v95 = *((void *)v94 + 3);
        if (v96 >= v95 >> 1)
        {
          sub_1D594E784(v95 > 1, v96 + 1, 1);
          uint64_t v94 = v166;
        }
        *((void *)v94 + 2) = v96 + 1;
        uint64_t v97 = &v94[16 * v96];
        *((void *)v97 + 4) = v91;
        *((void *)v97 + 5) = v93;
        v86 += v87;
        --v83;
      }
      while (v83);
      uint64_t v158 = v94;
      swift_bridgeObjectRelease();
      uint64_t v84 = (char *)MEMORY[0x1E4FBC860];
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v158 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v98 = sub_1D5AB28E0();
    int64_t v99 = *(void *)(v98 + 16);
    if (v99)
    {
      uint64_t v166 = v84;
      sub_1D594E784(0, v99, 0);
      uint64_t v100 = *(void **)(v138 + 16);
      uint64_t v101 = *(unsigned __int8 *)(v138 + 80);
      uint64_t v156 = (void *)v98;
      uint64_t v102 = v98 + ((v101 + 32) & ~v101);
      uint64_t v159 = *(void *)(v138 + 72);
      uint64_t v160 = v100;
      uint64_t v103 = (void (**)(char *, void *))(v138 + 8);
      do
      {
        uint64_t v104 = (char *)v161;
        unint64_t v105 = v162;
        ((void (*)(uint64_t, uint64_t, void *))v160)(v161, v102, v162);
        uint64_t v106 = sub_1D5AB49F0();
        uint64_t v108 = v107;
        (*v103)(v104, v105);
        uint64_t v109 = v166;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D594E784(0, *((void *)v109 + 2) + 1, 1);
          uint64_t v109 = v166;
        }
        unint64_t v111 = *((void *)v109 + 2);
        unint64_t v110 = *((void *)v109 + 3);
        if (v111 >= v110 >> 1)
        {
          sub_1D594E784(v110 > 1, v111 + 1, 1);
          uint64_t v109 = v166;
        }
        *((void *)v109 + 2) = v111 + 1;
        id v112 = &v109[16 * v111];
        *((void *)v112 + 4) = v106;
        *((void *)v112 + 5) = v108;
        v102 += v159;
        --v99;
      }
      while (v99);
      swift_bridgeObjectRelease();
      uint64_t v84 = (char *)MEMORY[0x1E4FBC860];
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v113 = sub_1D5AB2910();
    int64_t v114 = *(void *)(v113 + 16);
    if (v114)
    {
      uint64_t v166 = v84;
      sub_1D594E784(0, v114, 0);
      uint64_t v115 = *(void **)(v165 + 16);
      uint64_t v116 = *(unsigned __int8 *)(v165 + 80);
      uint64_t v160 = (void *)v113;
      uint64_t v117 = v113 + ((v116 + 32) & ~v116);
      uint64_t v161 = *(void *)(v165 + 72);
      uint64_t v162 = v115;
      v165 += 16;
      uint64_t v118 = (void (**)(char *, uint64_t))(v165 - 8);
      do
      {
        uint64_t v120 = v163;
        uint64_t v119 = v164;
        ((void (*)(char *, uint64_t, uint64_t))v162)(v163, v117, v164);
        uint64_t v121 = sub_1D5AB1E80();
        uint64_t v123 = v122;
        (*v118)(v120, v119);
        uint64_t v124 = v166;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D594E784(0, *((void *)v124 + 2) + 1, 1);
          uint64_t v124 = v166;
        }
        unint64_t v126 = *((void *)v124 + 2);
        unint64_t v125 = *((void *)v124 + 3);
        if (v126 >= v125 >> 1)
        {
          sub_1D594E784(v125 > 1, v126 + 1, 1);
          uint64_t v124 = v166;
        }
        *((void *)v124 + 2) = v126 + 1;
        uint64_t v127 = &v124[16 * v126];
        *((void *)v127 + 4) = v121;
        *((void *)v127 + 5) = v123;
        v117 += v161;
        --v114;
      }
      while (v114);
    }
    swift_bridgeObjectRelease();
    uint64_t v128 = sub_1D5AB2960();
    uint64_t v164 = v129;
    uint64_t v165 = v128;
    LODWORD(v163) = v130 & 1;
    sub_1D5AB2930();
    sub_1D5AB2A60();
    uint64_t v162 = (void *)sub_1D5AB2A30();
    uint64_t v131 = sub_1D5AB28C0();
    uint64_t v160 = v132;
    uint64_t v161 = v131;
    uint64_t v159 = sub_1D5AB2AB0();
    uint64_t v133 = v139;
    sub_1D5AB2A80();
    sub_1D5AB2C00();
    (*(void (**)(char *, uint64_t))(v140 + 8))(v133, v141);
    sub_1D5AB29F0();
    sub_1D5AB2A10();
    return sub_1D5AB38D0();
  }
  return result;
}

uint64_t MultiUserSession.applyingTimestampOffset(_:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7257E0);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7257E8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D5AB3110();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = sub_1D5AB3100();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 1, 1, v7);
  sub_1D5AB2FA0();
  sub_1D5AB2FB0();
  sub_1D594F53C((uint64_t)v2, &qword_1EA7257E0);
  return sub_1D594F53C((uint64_t)v5, &qword_1EA7257E8);
}

uint64_t sub_1D5A7011C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7257E0);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7257E8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D5AB3110();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = sub_1D5AB3100();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 1, 1, v7);
  sub_1D5AB2FA0();
  sub_1D5AB2FB0();
  sub_1D594F53C((uint64_t)v2, &qword_1EA7257E0);
  return sub_1D594F53C((uint64_t)v5, &qword_1EA7257E8);
}

id sub_1D5A702CC()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4C00);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1D5ABFD00;
  uint64_t v1 = (void *)*MEMORY[0x1E4F1AEC0];
  uint64_t v2 = (void *)*MEMORY[0x1E4F1ADF0];
  *(void *)(v0 + 32) = *MEMORY[0x1E4F1AEC0];
  *(void *)(v0 + 40) = v2;
  uint64_t v3 = (void *)*MEMORY[0x1E4F1ADC8];
  id v9 = (id)*MEMORY[0x1E4F1AEE0];
  uint64_t v4 = *MEMORY[0x1E4F1AEE0];
  uint64_t v10 = v0;
  *(void *)(v0 + 48) = *MEMORY[0x1E4F1ADC8];
  *(void *)(v0 + 56) = v4;
  sub_1D5AB5060();
  qword_1EBDE3550 = v10;
  id v5 = v1;
  id v6 = v2;
  id v7 = v3;
  return v9;
}

uint64_t static ContactService.defaultKeys.getter()
{
  if (qword_1EBDE3558 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

id sub_1D5A703E8()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if (v1)
  {
    id v2 = *(id *)(v0 + 16);
  }
  else
  {
    id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1B980]), sel_init);
    uint64_t v4 = *(void **)(v0 + 16);
    *(void *)(v0 + 16) = v3;
    id v2 = v3;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

uint64_t ContactService.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  ContactService.init()();
  return v0;
}

uint64_t ContactService.init()()
{
  *(void *)(v0 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4C00);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1D5AC1F20;
  id v2 = (void *)*MEMORY[0x1E4F1AEC0];
  id v3 = (void *)*MEMORY[0x1E4F1ADF0];
  *(void *)(v1 + 32) = *MEMORY[0x1E4F1AEC0];
  *(void *)(v1 + 40) = v3;
  uint64_t v7 = v1;
  sub_1D5AB5060();
  *(void *)(v0 + 24) = v7;
  id v4 = v2;
  id v5 = v3;
  return v0;
}

id sub_1D5A70520()
{
  v7[1] = *(id *)MEMORY[0x1E4F143B8];
  id v0 = sub_1D5A703E8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE47C0);
  uint64_t v1 = (void *)sub_1D5AB5040();
  v7[0] = 0;
  id v2 = objc_msgSend(v0, sel_smu_meContactWithKeysToFetch_error_, v1, v7);

  id v3 = v7[0];
  if (!v2)
  {
    id v4 = v3;
    id v5 = (void *)sub_1D5AB1B50();

    swift_willThrow();
    return 0;
  }
  return v2;
}

uint64_t ContactService.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ContactService.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

CNContact_optional __swiftcall ContactService.userContact(keys:)(Swift::OpaquePointer keys)
{
  v9[1] = *(id *)MEMORY[0x1E4F143B8];
  id v1 = sub_1D5A703E8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE47C0);
  id v2 = (void *)sub_1D5AB5040();
  v9[0] = 0;
  id v3 = (objc_class *)objc_msgSend(v1, sel_smu_meContactWithKeysToFetch_error_, v2, v9);

  id v4 = v9[0];
  if (!v3)
  {
    id v6 = v4;
    uint64_t v7 = (void *)sub_1D5AB1B50();

    swift_willThrow();
    id v3 = 0;
  }
  uint64_t v8 = v3;
  result.value.super.Class isa = v8;
  result.is_nil = v5;
  return result;
}

Swift::String_optional __swiftcall ContactService.userFirstName()()
{
  id v0 = sub_1D5A70520();
  if (v0)
  {
    id v1 = v0;
    uint64_t v2 = sub_1D5A712A4(v0);
    id v4 = v3;
  }
  else
  {
    uint64_t v2 = 0;
    id v4 = 0;
  }
  uint64_t v5 = v2;
  id v6 = v4;
  result.value._object = v6;
  result.value._uint64_t countAndFlagsBits = v5;
  return result;
}

Swift::String_optional __swiftcall ContactService.firstName(for:)(Swift::String a1)
{
  object = a1._object;
  uint64_t countAndFlagsBits = (void *)a1._countAndFlagsBits;
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  id v3 = sub_1D5A703E8();
  id v30 = countAndFlagsBits;
  uint64_t v31 = object;
  sub_1D59AA0A4();
  if (sub_1D5AB56D0() & 1) != 0 || (id v30 = countAndFlagsBits, v31 = object, (sub_1D5AB56D0()))
  {
    id v4 = self;
    id v5 = (id)sub_1D5AB4DE0();
    id v6 = objc_msgSend(v4, sel_predicateForContactsMatchingEmailAddress_, v5);
  }
  else
  {
    id v7 = objc_allocWithZone(MEMORY[0x1E4F1BA70]);
    swift_bridgeObjectRetain();
    uint64_t v8 = (void *)sub_1D5AB4DE0();
    swift_bridgeObjectRelease();
    id v5 = objc_msgSend(v7, sel_initWithStringValue_, v8);

    id v6 = objc_msgSend(self, sel_predicateForContactsMatchingPhoneNumber_, v5);
  }
  id v9 = v6;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4C00);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1D5AC1F20;
  uint64_t v11 = (void *)*MEMORY[0x1E4F1AEC0];
  uint64_t v12 = (void *)*MEMORY[0x1E4F1ADF0];
  *(void *)(v10 + 32) = *MEMORY[0x1E4F1AEC0];
  *(void *)(v10 + 40) = v12;
  sub_1D5AB5060();
  id v13 = v11;
  id v14 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE47C0);
  uint64_t v15 = (void *)sub_1D5AB5040();
  swift_bridgeObjectRelease();
  id v30 = 0;
  id v16 = objc_msgSend(v3, sel_unifiedContactsMatchingPredicate_keysToFetch_error_, v9, v15, &v30);

  id v17 = v30;
  if (!v16)
  {
    id v25 = v30;
    unint64_t v26 = (void *)sub_1D5AB1B50();

    swift_willThrow();
    uint64_t v23 = 0;
    uint64_t v20 = 0;
    goto LABEL_15;
  }
  sub_1D5A71358();
  unint64_t v18 = sub_1D5AB5050();
  id v19 = v17;

  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1D5AB5980();
    swift_bridgeObjectRelease();
    if (v20) {
      goto LABEL_8;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v23 = 0;
    goto LABEL_15;
  }
  uint64_t v20 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v20) {
    goto LABEL_14;
  }
LABEL_8:
  if ((v18 & 0xC000000000000001) != 0)
  {
    id v21 = (id)MEMORY[0x1D9459C10](0, v18);
  }
  else
  {
    if (!*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      __break(1u);
    }
    id v21 = *(id *)(v18 + 32);
  }
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = sub_1D5A712A4(v22);
  uint64_t v20 = v24;

LABEL_15:
  uint64_t v27 = v23;
  uint64_t v28 = (void *)v20;
  result.value._object = v28;
  result.value._uint64_t countAndFlagsBits = v27;
  return result;
}

Swift::String_optional __swiftcall ContactService.lastName(for:)(Swift::String a1)
{
  object = a1._object;
  uint64_t countAndFlagsBits = (void *)a1._countAndFlagsBits;
  uint64_t v37 = *MEMORY[0x1E4F143B8];
  id v3 = sub_1D5A703E8();
  id v35 = countAndFlagsBits;
  char v36 = object;
  sub_1D59AA0A4();
  if (sub_1D5AB56D0() & 1) != 0 || (v35 = countAndFlagsBits, char v36 = object, (sub_1D5AB56D0()))
  {
    id v4 = self;
    id v5 = (id)sub_1D5AB4DE0();
    id v6 = objc_msgSend(v4, sel_predicateForContactsMatchingEmailAddress_, v5);
  }
  else
  {
    id v7 = objc_allocWithZone(MEMORY[0x1E4F1BA70]);
    swift_bridgeObjectRetain();
    uint64_t v8 = (void *)sub_1D5AB4DE0();
    swift_bridgeObjectRelease();
    id v5 = objc_msgSend(v7, sel_initWithStringValue_, v8);

    id v6 = objc_msgSend(self, sel_predicateForContactsMatchingPhoneNumber_, v5);
  }
  id v9 = v6;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4C00);
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = (void **)MEMORY[0x1E4F1AEC0];
  *(_OWORD *)(v10 + 16) = xmmword_1D5AC1F30;
  uint64_t v12 = *v11;
  id v13 = (void *)*MEMORY[0x1E4F1ADE0];
  *(void *)(v10 + 32) = *v11;
  *(void *)(v10 + 40) = v13;
  id v14 = (void *)*MEMORY[0x1E4F1ADF0];
  *(void *)(v10 + 48) = *MEMORY[0x1E4F1ADF0];
  sub_1D5AB5060();
  id v15 = v12;
  id v16 = v13;
  id v17 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE47C0);
  unint64_t v18 = (void *)sub_1D5AB5040();
  swift_bridgeObjectRelease();
  id v35 = 0;
  id v19 = objc_msgSend(v3, sel_unifiedContactsMatchingPredicate_keysToFetch_error_, v9, v18, &v35);

  id v20 = v35;
  if (!v19)
  {
    id v29 = v35;
    id v30 = (void *)sub_1D5AB1B50();

    swift_willThrow();
LABEL_15:
    uint64_t v26 = 0;
    uint64_t v28 = 0;
    goto LABEL_16;
  }
  sub_1D5A71358();
  unint64_t v21 = sub_1D5AB5050();
  id v22 = v20;

  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1D5AB5980();
    swift_bridgeObjectRelease();
    if (v31) {
      goto LABEL_8;
    }
    goto LABEL_14;
  }
  if (!*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
LABEL_8:
  if ((v21 & 0xC000000000000001) != 0)
  {
    id v23 = (id)MEMORY[0x1D9459C10](0, v21);
  }
  else
  {
    if (!*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      __break(1u);
    }
    id v23 = *(id *)(v21 + 32);
  }
  uint64_t v24 = v23;
  swift_bridgeObjectRelease();
  id v25 = objc_msgSend(v24, sel_familyName);
  uint64_t v26 = sub_1D5AB4DF0();
  uint64_t v28 = v27;

LABEL_16:
  uint64_t v32 = v26;
  unint64_t v33 = v28;
  result.value._object = v33;
  result.value._uint64_t countAndFlagsBits = v32;
  return result;
}

uint64_t ContactService.thumbnailImageData(for:)(void *a1, uint64_t a2)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  id v4 = sub_1D5A703E8();
  id v28 = a1;
  uint64_t v29 = a2;
  sub_1D59AA0A4();
  if (sub_1D5AB56D0() & 1) != 0 || (id v28 = a1, v29 = a2, (sub_1D5AB56D0()))
  {
    id v5 = self;
    id v6 = (id)sub_1D5AB4DE0();
    id v7 = objc_msgSend(v5, sel_predicateForContactsMatchingEmailAddress_, v6);
  }
  else
  {
    id v8 = objc_allocWithZone(MEMORY[0x1E4F1BA70]);
    swift_bridgeObjectRetain();
    id v9 = (void *)sub_1D5AB4DE0();
    swift_bridgeObjectRelease();
    id v6 = objc_msgSend(v8, sel_initWithStringValue_, v9);

    id v7 = objc_msgSend(self, sel_predicateForContactsMatchingPhoneNumber_, v6);
  }
  id v10 = v7;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4C00);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1D5ABFD10;
  uint64_t v12 = (void *)*MEMORY[0x1E4F1AF98];
  *(void *)(v11 + 32) = *MEMORY[0x1E4F1AF98];
  sub_1D5AB5060();
  id v13 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE47C0);
  id v14 = (void *)sub_1D5AB5040();
  swift_bridgeObjectRelease();
  id v28 = 0;
  id v15 = objc_msgSend(v4, sel_unifiedContactsMatchingPredicate_keysToFetch_error_, v10, v14, &v28);

  id v16 = v28;
  if (!v15)
  {
    id v24 = v28;
    id v25 = (void *)sub_1D5AB1B50();

    swift_willThrow();
    return 0;
  }
  sub_1D5A71358();
  unint64_t v17 = sub_1D5AB5050();
  id v18 = v16;

  if (!(v17 >> 62))
  {
    if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_8;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_1D5AB5980();
  swift_bridgeObjectRelease();
  if (!v26) {
    goto LABEL_16;
  }
LABEL_8:
  if ((v17 & 0xC000000000000001) != 0)
  {
    id v19 = (id)MEMORY[0x1D9459C10](0, v17);
  }
  else
  {
    if (!*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      __break(1u);
    }
    id v19 = *(id *)(v17 + 32);
  }
  id v20 = v19;
  swift_bridgeObjectRelease();
  id v21 = objc_msgSend(v20, sel_thumbnailImageData);
  if (!v21)
  {

    return 0;
  }
  id v22 = v21;
  uint64_t v23 = sub_1D5AB1C20();

  return v23;
}

unint64_t sub_1D5A711BC(Swift::OpaquePointer a1)
{
  return (unint64_t)ContactService.userContact(keys:)(a1);
}

uint64_t sub_1D5A711E0()
{
  id v0 = sub_1D5A70520();
  if (!v0) {
    return 0;
  }
  id v1 = v0;
  uint64_t v2 = sub_1D5A712A4(v0);

  return v2;
}

uint64_t sub_1D5A71238(uint64_t a1, uint64_t a2)
{
  return ContactService.firstName(for:)(*(Swift::String *)&a1).value._countAndFlagsBits;
}

uint64_t sub_1D5A7125C(uint64_t a1, uint64_t a2)
{
  return ContactService.lastName(for:)(*(Swift::String *)&a1).value._countAndFlagsBits;
}

uint64_t sub_1D5A71280(void *a1, uint64_t a2)
{
  return ContactService.thumbnailImageData(for:)(a1, a2);
}

uint64_t sub_1D5A712A4(void *a1)
{
  id v2 = objc_msgSend(a1, sel_nickname);
  uint64_t v3 = sub_1D5AB4DF0();
  unint64_t v5 = v4;

  swift_bridgeObjectRelease();
  uint64_t v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v6 = v3 & 0xFFFFFFFFFFFFLL;
  }
  if (v6) {
    id v7 = &selRef_nickname;
  }
  else {
    id v7 = &selRef_givenName;
  }
  id v8 = [a1 *v7];
  uint64_t v9 = sub_1D5AB4DF0();

  return v9;
}

unint64_t sub_1D5A71358()
{
  unint64_t result = qword_1EA727DC0;
  if (!qword_1EA727DC0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA727DC0);
  }
  return result;
}

uint64_t dispatch thunk of ContactServiceProtocol.userContact(keys:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ContactServiceProtocol.userFirstName()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ContactServiceProtocol.firstName(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of ContactServiceProtocol.lastName(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of ContactServiceProtocol.thumbnailImageData(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t type metadata accessor for ContactService()
{
  return self;
}

uint64_t method lookup function for ContactService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ContactService);
}

uint64_t dispatch thunk of ContactService.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t CatalogModality.reference()()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727DC8);
  MEMORY[0x1F4188790](v0 - 8);
  sub_1D5AB2CB0();
  sub_1D5AB2C30();
  sub_1D5AB2C40();
  sub_1D5AB2C00();
  sub_1D5AB2C60();
  sub_1D5AB2C50();
  sub_1D5AB2C70();
  return sub_1D5AB3AB0();
}

unsigned char *storeEnumTagSinglePayload for BlockingError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D5A7160CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BlockingError()
{
  return &type metadata for BlockingError;
}

unint64_t sub_1D5A71648()
{
  unint64_t result = qword_1EA727DD0;
  if (!qword_1EA727DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA727DD0);
  }
  return result;
}

uint64_t sub_1D5A7169C()
{
  id v0 = objc_msgSend(self, sel_processInfo);
  id v1 = objc_msgSend(v0, sel_environment);

  uint64_t v2 = sub_1D5AB4D70();
  if (*(void *)(v2 + 16) && (sub_1D5952584(0xD000000000000024, 0x80000001D5ACAFD0), (v3 & 1) != 0))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1D5AB1B80();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return sub_1D5AB1B80();
  }
}

uint64_t static URL.mobileCachesDirectory()()
{
  return sub_1D5A719B0();
}

uint64_t static URL.mobileLibrarySeymourDirectory()()
{
  return sub_1D5A719B0();
}

uint64_t static URL.seymourJournalDirectory()()
{
  uint64_t v0 = sub_1D5AB1BB0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  unsigned int v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  unsigned int v6 = (char *)&v9 - v5;
  sub_1D5A7169C();
  sub_1D5AB1B90();
  id v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v4, v0);
  sub_1D5AB1B90();
  return ((uint64_t (*)(char *, uint64_t))v7)(v6, v0);
}

uint64_t static URL.userManagedAssetsDirectory()()
{
  return sub_1D5A719B0();
}

uint64_t static URL.mobileLibrarySeymourAwardAssetDirectory()()
{
  return sub_1D5A719B0();
}

uint64_t sub_1D5A719B0()
{
  uint64_t v0 = sub_1D5AB1BB0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A7169C();
  sub_1D5AB1B90();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t ArchivedSessionsUpdated.init(workoutIdentifiers:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t ArchivedSessionsUpdated.workoutIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

void static ArchivedSessionsUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for ArchivedSessionsUpdated()
{
  return &type metadata for ArchivedSessionsUpdated;
}

void *StreamingKeyDeliveryClient.__allocating_init(queue:)(void *a1)
{
  id v2 = objc_allocWithZone(MEMORY[0x1E4F29268]);
  id v3 = a1;
  unsigned int v4 = (void *)sub_1D5AB4DE0();
  id v5 = objc_msgSend(v2, sel_initWithMachServiceName_options_, v4, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  uint64_t v6 = sub_1D59968E8(v5, v3);
  uint64_t v7 = *(void *)(v6 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 16));
  if (*(unsigned char *)(v6 + 48) == 1)
  {
    *(unsigned char *)(v6 + 48) = 2;
    objc_msgSend(*(id *)(v6 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));

  type metadata accessor for StreamingKeyDeliveryClient();
  unint64_t result = (void *)swift_allocObject();
  result[2] = v6;
  result[3] = &protocol witness table for XPCClient;
  result[4] = &protocol witness table for XPCClient;
  return result;
}

void *StreamingKeyDeliveryClient.__allocating_init(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  return sub_1D5A72848(a1, v3, ObjectType, a2, a3);
}

uint64_t type metadata accessor for StreamingKeyDeliveryClient()
{
  return self;
}

void *StreamingKeyDeliveryClient.init(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  return sub_1D595A0B0(a1, v3, ObjectType, a2, a3);
}

uint64_t StreamingKeyDeliveryClient.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t StreamingKeyDeliveryClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t StreamingKeyDeliveryClient.fetchCertificateContext()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v16 = a1;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725508);
  uint64_t v3 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  id v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v6);
  id v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBDE1488 != -1) {
    swift_once();
  }
  uint64_t v9 = __swift_project_value_buffer(v6, (uint64_t)qword_1EBDE1468);
  sub_1D596DDF8(v9, (uint64_t)v8);
  uint64_t v10 = *(void *)(v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v18 = 138;
  uint64_t v12 = *(void (**)(__int16 *, uint64_t, void, void, uint64_t, uint64_t))(v10 + 24);
  uint64_t v13 = sub_1D5AB3620();
  swift_retain();
  v12(&v18, v13, MEMORY[0x1E4F9D8A8], MEMORY[0x1E4F9D8B0], ObjectType, v10);
  sub_1D5967688("StreamingKeyDeliveryClient::fetchCertificateContext", 51, 2, &dword_1D5947000, 0, (uint64_t)v5, v16);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v17);
  swift_release();
  return sub_1D59F4394((uint64_t)v8);
}

uint64_t StreamingKeyDeliveryClient.fetchContext(spc:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v25 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7254F8);
  uint64_t v26 = *(void *)(v5 - 8);
  uint64_t v27 = v5;
  MEMORY[0x1F4188790](v5);
  id v24 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D5AB3650();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBDE1488 != -1) {
    swift_once();
  }
  uint64_t v14 = __swift_project_value_buffer(v11, (uint64_t)qword_1EBDE1468);
  sub_1D596DDF8(v14, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  uint64_t v23 = v13;
  uint64_t v15 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v28 = 139;
  uint64_t v17 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, void, void, void, void, uint64_t, uint64_t))(v15 + 32);
  uint64_t v18 = sub_1D5AB1DE0();
  swift_retain();
  uint64_t v22 = v15;
  uint64_t v19 = (uint64_t)v24;
  v17(&v28, v10, v7, v18, MEMORY[0x1E4F9D990], MEMORY[0x1E4F9D998], MEMORY[0x1E4F9BFC8], MEMORY[0x1E4F9BFD0], ObjectType, v22);
  uint64_t v20 = (uint64_t)v23;
  sub_1D5967F84("StreamingKeyDeliveryClient::fetchContext", 40, 2, &dword_1D5947000, 0, v19, v25);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v19, v27);
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return sub_1D59F4394(v20);
}

uint64_t StreamingKeyDeliveryClient.renewContext(spc:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v25 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7254F8);
  uint64_t v26 = *(void *)(v5 - 8);
  uint64_t v27 = v5;
  MEMORY[0x1F4188790](v5);
  id v24 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D5AB3650();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBDE1488 != -1) {
    swift_once();
  }
  uint64_t v14 = __swift_project_value_buffer(v11, (uint64_t)qword_1EBDE1468);
  sub_1D596DDF8(v14, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  uint64_t v23 = v13;
  uint64_t v15 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v28 = 140;
  uint64_t v17 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, void, void, void, void, uint64_t, uint64_t))(v15 + 32);
  uint64_t v18 = sub_1D5AB1DE0();
  swift_retain();
  uint64_t v22 = v15;
  uint64_t v19 = (uint64_t)v24;
  v17(&v28, v10, v7, v18, MEMORY[0x1E4F9D990], MEMORY[0x1E4F9D998], MEMORY[0x1E4F9BFC8], MEMORY[0x1E4F9BFD0], ObjectType, v22);
  uint64_t v20 = (uint64_t)v23;
  sub_1D5967F84("StreamingKeyDeliveryClient::renewContext", 40, 2, &dword_1D5947000, 0, v19, v25);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v19, v27);
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return sub_1D59F4394(v20);
}

uint64_t StreamingKeyDeliveryClient.releaseContext(spc:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v23 = *(void *)(v4 - 8);
  uint64_t v24 = v4;
  MEMORY[0x1F4188790](v4);
  id v21 = (void (*)(uint64_t, char *, uint64_t))((char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1D5AB3650();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ActivityTracer();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBDE1488 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v10, (uint64_t)qword_1EBDE1468);
  sub_1D596DDF8(v13, (uint64_t)v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  uint64_t v14 = *(void *)(v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v25 = 141;
  uint64_t v20 = v12;
  uint64_t v16 = *(void (**)(__int16 *, char *, uint64_t, void, void, uint64_t, uint64_t))(v14 + 16);
  swift_retain();
  uint64_t v17 = v21;
  v16(&v25, v9, v6, MEMORY[0x1E4F9D990], MEMORY[0x1E4F9D998], ObjectType, v14);
  uint64_t v18 = (uint64_t)v20;
  sub_1D5962628("StreamingKeyDeliveryClient::releaseContext", 42, 2, &dword_1D5947000, 0, v17, v22);
  (*(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v23 + 8))(v17, v24);
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return sub_1D59F4394(v18);
}

uint64_t sub_1D5A727B8@<X0>(uint64_t a1@<X8>)
{
  return StreamingKeyDeliveryClient.fetchCertificateContext()(a1);
}

uint64_t sub_1D5A727DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return StreamingKeyDeliveryClient.fetchContext(spc:)(a1, a2);
}

uint64_t sub_1D5A72800@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return StreamingKeyDeliveryClient.renewContext(spc:)(a1, a2);
}

uint64_t sub_1D5A72824@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return StreamingKeyDeliveryClient.releaseContext(spc:)(a1, a2);
}

void *sub_1D5A72848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for StreamingKeyDeliveryClient();
  unint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a4;
  result[4] = a5;
  return result;
}

uint64_t method lookup function for StreamingKeyDeliveryClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for StreamingKeyDeliveryClient);
}

uint64_t dispatch thunk of StreamingKeyDeliveryClient.__allocating_init(connection:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t EnergyMetricUpdated.energyMetric.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB22E0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t EnergyMetricUpdated.sessionIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for EnergyMetricUpdated() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for EnergyMetricUpdated()
{
  uint64_t result = qword_1EA727DD8;
  if (!qword_1EA727DD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t EnergyMetricUpdated.init(energyMetric:sessionIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1D5AB22E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t result = type metadata accessor for EnergyMetricUpdated();
  uint64_t v10 = (void *)(a4 + *(int *)(result + 20));
  *uint64_t v10 = a2;
  v10[1] = a3;
  return result;
}

void static EnergyMetricUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t *initializeBufferWithCopyOfBuffer for EnergyMetricUpdated(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1D5AB22E0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for EnergyMetricUpdated(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB22E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EnergyMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB22E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EnergyMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB22E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for EnergyMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB22E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for EnergyMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB22E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EnergyMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D5A72DD4);
}

uint64_t sub_1D5A72DD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB22E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for EnergyMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D5A72EAC);
}

uint64_t sub_1D5A72EAC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1D5AB22E0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1D5A72F6C()
{
  uint64_t result = sub_1D5AB22E0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t AnalyticsEventOccurred.init(event:)@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D5950B78(a1, a2);
}

void static AnalyticsEventOccurred.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeWithCopy for AnalyticsEventOccurred(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for AnalyticsEventOccurred(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t assignWithTake for AnalyticsEventOccurred(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnalyticsEventOccurred(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnalyticsEventOccurred(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnalyticsEventOccurred()
{
  return &type metadata for AnalyticsEventOccurred;
}

uint64_t PersonalizationPlaylist.init(_:with:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v65 = sub_1D5AB2320();
  uint64_t v6 = *(void *)(v65 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v65);
  unint64_t v64 = (char *)v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v63 = (char *)v49 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v62 = (char *)v49 - v11;
  uint64_t v12 = sub_1D5AB3FE0();
  uint64_t v66 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v61 = (char *)v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v70 = (char *)v49 - v15;
  uint64_t v16 = sub_1D5AB1CE0();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5AB4990();
  uint64_t v20 = (void *)sub_1D5AB1C80();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  id v21 = objc_msgSend(a2, sel_stringFromDate_, v20);

  uint64_t v22 = sub_1D5AB4DF0();
  uint64_t v24 = v23;

  uint64_t v25 = sub_1D5AB4980();
  uint64_t v52 = v26;
  uint64_t v53 = v25;
  uint64_t v27 = sub_1D5AB49C0();
  int64_t v28 = *(void *)(v27 + 16);
  if (v28)
  {
    v49[0] = v24;
    v49[1] = v22;
    v49[2] = a3;
    unint64_t v50 = a2;
    uint64_t v51 = a1;
    uint64_t v71 = MEMORY[0x1E4FBC860];
    int64_t v69 = v28;
    sub_1D594E930(0, v28, 0);
    uint64_t result = sub_1D594F1A0(v27);
    uint64_t v31 = result;
    int v33 = v32 & 1;
    uint64_t v59 = v6;
    uint64_t v60 = v27 + 56;
    uint64_t v56 = v6 + 32;
    uint64_t v57 = v6 + 16;
    uint64_t v34 = v65;
    uint64_t v58 = v27;
    uint64_t v54 = (void (**)(char *, char *, uint64_t))(v66 + 32);
    uint64_t v55 = v6 + 8;
    while ((v31 & 0x8000000000000000) == 0 && v31 < 1 << *(unsigned char *)(v27 + 32))
    {
      if (((*(void *)(v60 + (((unint64_t)v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v31) & 1) == 0) {
        goto LABEL_16;
      }
      if (*(_DWORD *)(v27 + 36) != v30) {
        goto LABEL_17;
      }
      int v67 = v33;
      uint64_t v68 = v30;
      id v35 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
      char v36 = v62;
      v35(v62, *(void *)(v27 + 48) + *(void *)(v6 + 72) * v31, v34);
      uint64_t v37 = v63;
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v63, v36, v34);
      int64_t v38 = v64;
      v35(v64, (uint64_t)v37, v34);
      sub_1D5AB22F0();
      sub_1D5AB2310();
      sub_1D5AB2300();
      uint64_t v39 = v61;
      uint64_t v40 = v54;
      sub_1D5AB3FD0();
      uint64_t v41 = *(void (**)(char *, uint64_t))(v6 + 8);
      v41(v38, v34);
      uint64_t v42 = *v40;
      (*v40)(v70, v39, v12);
      v41(v37, v34);
      uint64_t v43 = v71;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D594E930(0, *(void *)(v43 + 16) + 1, 1);
        uint64_t v43 = v71;
      }
      uint64_t v44 = v66;
      unint64_t v46 = *(void *)(v43 + 16);
      unint64_t v45 = *(void *)(v43 + 24);
      uint64_t v27 = v58;
      if (v46 >= v45 >> 1)
      {
        sub_1D594E930(v45 > 1, v46 + 1, 1);
        uint64_t v43 = v71;
      }
      *(void *)(v43 + 16) = v46 + 1;
      v42((char *)(v43+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(void *)(v44 + 72) * v46), v70, v12);
      uint64_t v71 = v43;
      uint64_t result = sub_1D594F244(v31, v68, v67 & 1, v27);
      uint64_t v31 = result;
      int v33 = v47 & 1;
      --v69;
      uint64_t v6 = v59;
      if (!v69)
      {
        sub_1D594B5F8(result, v30, v33);
        swift_bridgeObjectRelease();
        a1 = v51;
        a2 = v50;
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v43 = MEMORY[0x1E4FBC860];
LABEL_14:
    sub_1D594FEB0(v43);
    swift_bridgeObjectRelease();
    sub_1D5AB49B0();
    sub_1D5AB39C0();

    uint64_t v48 = sub_1D5AB49D0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8))(a1, v48);
  }
  return result;
}

uint64_t PersonalizationPlaylistItem.init(_:)(uint64_t a1)
{
  sub_1D5AB22F0();
  sub_1D5AB2310();
  sub_1D5AB2300();
  sub_1D5AB3FD0();
  uint64_t v2 = sub_1D5AB2320();
  long long v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t PersonalizationArchivedSession.init(_:with:)(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1D5AB1CE0();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t result = sub_1D5AB2BA0();
  uint64_t v7 = v6;
  uint64_t v8 = HIBYTE(v6) & 0xF;
  uint64_t v9 = result & 0xFFFFFFFFFFFFLL;
  if ((v7 & 0x2000000000000000) != 0) {
    uint64_t v10 = v8;
  }
  else {
    uint64_t v10 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v10)
  {
    swift_bridgeObjectRelease();
    goto LABEL_58;
  }
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v35 = sub_1D5A74218(result, v7, 10);
    swift_bridgeObjectRelease();
    if ((v35 & 0x100000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_58;
  }
  if ((v7 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0) {
      uint64_t v11 = (unsigned __int8 *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v11 = (unsigned __int8 *)sub_1D5AB5870();
    }
    char v40 = ((unint64_t)sub_1D5A74480(v11, v9, 10) >> 32) & 1;
    char v12 = v40;
LABEL_36:
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
LABEL_37:
      sub_1D5AB2BB0();
      sub_1D5AB2BD0();
      sub_1D5AB41B0();
LABEL_59:

      uint64_t v38 = sub_1D5AB2BE0();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(a1, v38);
    }
LABEL_58:
    uint64_t v36 = sub_1D5AB33A0();
    sub_1D5A74300();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v36 - 8) + 104))(v37, *MEMORY[0x1E4F9D4A0], v36);
    swift_willThrow();
    goto LABEL_59;
  }
  v39[0] = result;
  v39[1] = v7 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v8) {
      goto LABEL_62;
    }
    if (v8 != 1)
    {
      unsigned int v16 = (BYTE1(result) - 48);
      if (v16 <= 9)
      {
        if (v8 == 2) {
          goto LABEL_35;
        }
        if ((BYTE2(result) - 48) <= 9u)
        {
          unsigned int v17 = 10 * v16 + (BYTE2(result) - 48);
          uint64_t v18 = v8 - 3;
          if (v18)
          {
            uint64_t v19 = (unsigned __int8 *)v39 + 3;
            while (1)
            {
              unsigned int v20 = *v19 - 48;
              if (v20 > 9) {
                goto LABEL_33;
              }
              uint64_t v21 = 10 * v17;
              if ((v21 & 0xFFFFFFFF00000000) != 0) {
                goto LABEL_33;
              }
              unsigned int v17 = v21 + v20;
              if (__CFADD__(v21, v20)) {
                goto LABEL_33;
              }
              char v12 = 0;
              ++v19;
              if (!--v18) {
                goto LABEL_36;
              }
            }
          }
          goto LABEL_35;
        }
      }
    }
LABEL_33:
    char v12 = 1;
    goto LABEL_36;
  }
  if (result != 45)
  {
    if (v8)
    {
      unsigned int v22 = (result - 48);
      if (v22 <= 9)
      {
        if (v8 == 1) {
          goto LABEL_35;
        }
        if ((BYTE1(result) - 48) <= 9u)
        {
          unsigned int v23 = 10 * v22 + (BYTE1(result) - 48);
          uint64_t v24 = v8 - 2;
          if (v24)
          {
            uint64_t v25 = (unsigned __int8 *)v39 + 2;
            while (1)
            {
              unsigned int v26 = *v25 - 48;
              if (v26 > 9) {
                goto LABEL_33;
              }
              uint64_t v27 = 10 * v23;
              if ((v27 & 0xFFFFFFFF00000000) != 0) {
                goto LABEL_33;
              }
              unsigned int v23 = v27 + v26;
              if (__CFADD__(v27, v26)) {
                goto LABEL_33;
              }
              char v12 = 0;
              ++v25;
              if (!--v24) {
                goto LABEL_36;
              }
            }
          }
          goto LABEL_35;
        }
      }
    }
    goto LABEL_33;
  }
  if (v8)
  {
    if (v8 == 1) {
      goto LABEL_33;
    }
    unsigned __int8 v13 = BYTE1(result) - 48;
    if ((BYTE1(result) - 48) > 9u) {
      goto LABEL_33;
    }
    BOOL v14 = v13 == 0;
    unsigned int v15 = -v13;
    if (!v14) {
      goto LABEL_33;
    }
    if (v8 == 2)
    {
      char v12 = 0;
      goto LABEL_36;
    }
    unsigned __int8 v28 = BYTE2(result) - 48;
    if ((BYTE2(result) - 48) > 9u) {
      goto LABEL_33;
    }
    uint64_t v29 = 10 * v15;
    if ((v29 & 0xFFFFFFFF00000000) != 0) {
      goto LABEL_33;
    }
    unsigned int v30 = v29 - v28;
    if (v29 < v28) {
      goto LABEL_33;
    }
    uint64_t v31 = v8 - 3;
    if (v31)
    {
      char v32 = (unsigned __int8 *)v39 + 3;
      while (1)
      {
        unsigned int v33 = *v32 - 48;
        if (v33 > 9) {
          goto LABEL_33;
        }
        uint64_t v34 = 10 * v30;
        if ((v34 & 0xFFFFFFFF00000000) != 0) {
          goto LABEL_33;
        }
        unsigned int v30 = v34 - v33;
        if (v34 < v33) {
          goto LABEL_33;
        }
        char v12 = 0;
        ++v32;
        if (!--v31) {
          goto LABEL_36;
        }
      }
    }
LABEL_35:
    char v12 = 0;
    goto LABEL_36;
  }
  __break(1u);
LABEL_62:
  __break(1u);
  return result;
}

unint64_t sub_1D5A73C28(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    uint64_t v21 = 0;
    LOBYTE(v20) = 1;
    return v21 | ((unint64_t)v20 << 32);
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((a1 & 0x1000000000000000) != 0) {
        unint64_t v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        unint64_t v6 = (unsigned __int8 *)sub_1D5AB5870();
      }
      uint64_t v7 = sub_1D5A74480(v6, v4, 10);
      LODWORD(v8) = v7;
      char v27 = BYTE4(v7) & 1;
      char v9 = BYTE4(v7) & 1;
      goto LABEL_38;
    }
    v26[0] = a1;
    v26[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    int v10 = a1;
    if (a1 == 43)
    {
      if (v3)
      {
        if (v3 != 1)
        {
          LODWORD(v8) = (BYTE1(a1) - 48);
          if (v8 <= 9)
          {
            uint64_t v15 = v3 - 2;
            if (v15)
            {
              unsigned int v16 = (unsigned __int8 *)v26 + 2;
              while (1)
              {
                unsigned int v17 = *v16 - 48;
                if (v17 > 9) {
                  goto LABEL_35;
                }
                uint64_t v18 = 10 * v8;
                if ((v18 & 0xFFFFFFFF00000000) != 0) {
                  goto LABEL_35;
                }
                LODWORD(v8) = v18 + v17;
                if (__CFADD__(v18, v17)) {
                  goto LABEL_35;
                }
                char v9 = 0;
                ++v16;
                if (!--v15) {
                  goto LABEL_38;
                }
              }
            }
            goto LABEL_37;
          }
        }
        goto LABEL_35;
      }
    }
    else
    {
      if (a1 != 45)
      {
        if (v3)
        {
          LODWORD(v8) = (a1 - 48);
          if (v8 <= 9)
          {
            uint64_t v19 = v3 - 1;
            if (v19)
            {
              unsigned int v23 = (unsigned __int8 *)v26 + 1;
              while (1)
              {
                unsigned int v24 = *v23 - 48;
                if (v24 > 9) {
                  goto LABEL_35;
                }
                uint64_t v25 = 10 * v8;
                if ((v25 & 0xFFFFFFFF00000000) != 0) {
                  goto LABEL_35;
                }
                LODWORD(v8) = v25 + v24;
                if (__CFADD__(v25, v24)) {
                  goto LABEL_35;
                }
                char v9 = 0;
                ++v23;
                if (!--v19) {
                  goto LABEL_38;
                }
              }
            }
            goto LABEL_37;
          }
        }
        goto LABEL_35;
      }
      if (v3)
      {
        if (v3 != 1 && (BYTE1(a1) - 48) <= 9u)
        {
          int v10 = 0;
          LODWORD(v8) = -(BYTE1(a1) - 48);
          if (BYTE1(a1) == 48)
          {
            uint64_t v11 = v3 - 2;
            if (v11)
            {
              char v12 = (unsigned __int8 *)v26 + 2;
              while (1)
              {
                unsigned int v13 = *v12 - 48;
                if (v13 > 9) {
                  goto LABEL_35;
                }
                uint64_t v14 = 10 * v8;
                if ((v14 & 0xFFFFFFFF00000000) != 0) {
                  goto LABEL_35;
                }
                LODWORD(v8) = v14 - v13;
                if (v14 < v13) {
                  goto LABEL_35;
                }
                char v9 = 0;
                ++v12;
                if (!--v11) {
                  goto LABEL_38;
                }
              }
            }
LABEL_37:
            char v9 = 0;
            goto LABEL_38;
          }
LABEL_53:
          char v9 = 1;
          LODWORD(v8) = v10;
          goto LABEL_38;
        }
LABEL_35:
        LODWORD(v8) = 0;
        char v9 = 1;
LABEL_38:
        swift_bridgeObjectRelease();
        LODWORD(v20) = v9 & 1;
        goto LABEL_39;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_53;
  }
  unint64_t v8 = sub_1D5A74218(a1, a2, 10);
  swift_bridgeObjectRelease();
  uint64_t v20 = HIDWORD(v8) & 1;
LABEL_39:
  uint64_t v21 = v8;
  if (v20) {
    uint64_t v21 = 0;
  }
  return v21 | ((unint64_t)v20 << 32);
}

uint64_t sub_1D5A73E88(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        unint64_t v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        unint64_t v6 = (unsigned __int8 *)sub_1D5AB5870();
      }
      uint64_t v7 = (uint64_t)sub_1D5A74700(v6, v4, 10);
      char v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_50;
      }
      if (v3 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (BYTE1(result) - 48);
      uint64_t v14 = v3 - 2;
      if (v14)
      {
        uint64_t v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            goto LABEL_34;
          }
          uint64_t v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v17 + v16;
          if (__OFADD__(v17, v16)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v15;
          if (!--v14) {
            goto LABEL_37;
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            uint64_t v7 = -(uint64_t)(BYTE1(result) - 48);
            uint64_t v10 = v3 - 2;
            if (v10)
            {
              uint64_t v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                unsigned int v12 = *v11 - 48;
                if (v12 > 9) {
                  goto LABEL_34;
                }
                uint64_t v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
                  goto LABEL_34;
                }
                uint64_t v7 = v13 - v12;
                if (__OFSUB__(v13, v12)) {
                  goto LABEL_34;
                }
                char v9 = 0;
                ++v11;
                if (!--v10) {
                  goto LABEL_37;
                }
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          uint64_t v7 = 0;
          char v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (result - 48);
      uint64_t v18 = v3 - 1;
      if (v18)
      {
        uint64_t v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v20 = *v19 - 48;
          if (v20 > 9) {
            goto LABEL_34;
          }
          uint64_t v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v21 + v20;
          if (__OFADD__(v21, v20)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v19;
          if (!--v18) {
            goto LABEL_37;
          }
        }
      }
    }
LABEL_36:
    char v9 = 0;
    goto LABEL_37;
  }
  uint64_t v7 = sub_1D5A74388(result, a2, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1D5A74700);
  char v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if (v9) {
    return 0;
  }
  else {
    return v7;
  }
}

void *sub_1D5A740EC(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E18);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1D5A74154(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_1D5AB4F00();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x1D94592C0](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

unsigned __int8 *sub_1D5A741D0(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1D5A74480(a1, a2, a3);
}

unsigned __int8 *sub_1D5A741E8(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1D5A74700(a1, a2, a3);
}

unsigned __int8 *sub_1D5A74200(unsigned __int8 *a1, uint64_t a2, int64_t a3)
{
  return sub_1D5A7497C(a1, a2, a3);
}

uint64_t sub_1D5A74218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1D5AB4F30();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_1D5A74BF8();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    unint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v7 = (unsigned __int8 *)sub_1D5AB5870();
  }
LABEL_7:
  uint64_t v11 = sub_1D5A74480(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11 | ((((unint64_t)v11 >> 32) & 1) << 32);
}

unint64_t sub_1D5A74300()
{
  unint64_t result = qword_1EA727DE8;
  if (!qword_1EA727DE8)
  {
    sub_1D5AB33A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA727DE8);
  }
  return result;
}

uint64_t sub_1D5A74358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D5A74388(a1, a2, a3, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1D5A74700);
}

uint64_t sub_1D5A74370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D5A74388(a1, a2, a3, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1D5A7497C);
}

uint64_t sub_1D5A74388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1D5AB4F30();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v9 = &v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_1D5A74BF8();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    unint64_t v9 = (void *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v9 = (void *)sub_1D5AB5870();
  }
LABEL_7:
  uint64_t v13 = a4(v9, v10, a3);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_1D5A74480(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v16 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v17 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = a3 + 55;
        }
        else
        {
          unsigned __int8 v17 = 97;
          unsigned __int8 v18 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v19 = a3 + 48;
        }
        else {
          unsigned __int8 v19 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          unsigned int v20 = result + 1;
          do
          {
            unsigned int v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v21 < 0x61 || v21 >= v17) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v22 = -87;
              }
              else
              {
                char v22 = -55;
              }
            }
            else
            {
              char v22 = -48;
            }
            unint64_t v23 = v8 * (unint64_t)a3;
            if ((v23 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v24 = v21 + v22;
            unsigned int v8 = v23 + v24;
            if (__CFADD__(v23, v24)) {
              goto LABEL_72;
            }
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          unsigned __int8 v13 = 0;
          unsigned int v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned int v12 = 0;
      unsigned __int8 v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v26 = a3 + 55;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v26 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v27 = a3 + 48;
        }
        else {
          unsigned __int8 v27 = 58;
        }
        if (result)
        {
          unsigned int v28 = 0;
          do
          {
            unsigned int v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v29 < 0x61 || v29 >= v25) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v30 = -87;
              }
              else
              {
                char v30 = -55;
              }
            }
            else
            {
              char v30 = -48;
            }
            unint64_t v31 = v28 * (unint64_t)a3;
            if ((v31 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v32 = v29 + v30;
            unsigned int v28 = v31 + v32;
            if (__CFADD__(v31, v32)) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          unsigned __int8 v13 = 0;
          unsigned int v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          unint64_t v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            unint64_t v14 = v8 * (unint64_t)a3;
            if ((v14 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v15 = v10 + v11;
            unsigned int v8 = v14 - v15;
            if (v14 < v15) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned int v12 = 0;
        unsigned __int8 v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_1D5A74700(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (unint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  unsigned __int8 v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

unsigned __int8 *sub_1D5A7497C(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            unint64_t v9 = 0;
            for (unint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              if (!is_mul_ok(v9, a3)) {
                return 0;
              }
              unint64_t v13 = v9 * a3;
              unsigned __int8 v14 = v11 + v12;
              BOOL v15 = v13 >= v14;
              unint64_t v9 = v13 - v14;
              if (!v15) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v25 = a3 + 48;
      unsigned __int8 v26 = a3 + 55;
      unsigned __int8 v27 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v25 = 58;
      }
      else
      {
        unsigned __int8 v27 = 97;
        unsigned __int8 v26 = 65;
      }
      if (result)
      {
        unint64_t v28 = 0;
        do
        {
          unsigned int v29 = *result;
          if (v29 < 0x30 || v29 >= v25)
          {
            if (v29 < 0x41 || v29 >= v26)
            {
              if (v29 < 0x61 || v29 >= v27) {
                return 0;
              }
              char v30 = -87;
            }
            else
            {
              char v30 = -55;
            }
          }
          else
          {
            char v30 = -48;
          }
          if (!is_mul_ok(v28, a3)) {
            return 0;
          }
          unint64_t v31 = v28 * a3;
          unsigned __int8 v32 = v29 + v30;
          BOOL v15 = __CFADD__(v31, v32);
          unint64_t v28 = v31 + v32;
          if (v15) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v28;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v16 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v17 = a3 + 48;
  unsigned __int8 v18 = a3 + 55;
  unsigned __int8 v19 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v17 = 58;
  }
  else
  {
    unsigned __int8 v19 = 97;
    unsigned __int8 v18 = 65;
  }
  if (!result) {
    return 0;
  }
  unint64_t v9 = 0;
  char v20 = result + 1;
  do
  {
    unsigned int v21 = *v20;
    if (v21 < 0x30 || v21 >= v17)
    {
      if (v21 < 0x41 || v21 >= v18)
      {
        if (v21 < 0x61 || v21 >= v19) {
          return 0;
        }
        char v22 = -87;
      }
      else
      {
        char v22 = -55;
      }
    }
    else
    {
      char v22 = -48;
    }
    if (!is_mul_ok(v9, a3)) {
      return 0;
    }
    unint64_t v23 = v9 * a3;
    unsigned __int8 v24 = v21 + v22;
    BOOL v15 = __CFADD__(v23, v24);
    unint64_t v9 = v23 + v24;
    if (v15) {
      return 0;
    }
    ++v20;
    --v16;
  }
  while (v16);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1D5A74BF8()
{
  unint64_t v0 = sub_1D5AB4F40();
  uint64_t v4 = sub_1D5A74C78(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1D5A74C78(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_1D5A74DD0(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = sub_1D5A740EC(v9, 0);
      unint64_t v12 = sub_1D5A74ED0((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_1D5AB5870();
LABEL_4:
        JUMPOUT(0x1D9459240);
      }
    }
    else
    {
      unsigned int v11 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v13 = MEMORY[0x1D9459240](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1D9459240]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_1D5A74DD0(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_1D5A74154(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_1D5A74154(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x1F4183AA8](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x1F4183AA8](a1, a2, a3, a4);
}

unint64_t sub_1D5A74ED0(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    id v9[2] = a6;
    _OWORD v9[3] = a7;
    void v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    unint64_t result = v12;
    if (v17 == v15) {
      unint64_t result = sub_1D5A74154(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      unint64_t result = sub_1D5AB4EF0();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        unint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          unint64_t result = sub_1D5AB5870();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    unint64_t result = sub_1D5A74154(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_1D5AB4EC0();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t PersonalizationHealthKitWorkout.init(_:with:)(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1D5AB1CE0();
  MEMORY[0x1F4188790](v4 - 8);
  sub_1D5AB2F60();
  sub_1D5AB2F40();
  sub_1D5AB2F70();
  sub_1D5AB2F50();
  sub_1D5AB42E0();

  uint64_t v5 = sub_1D5AB2F80();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
}

uint64_t PersonalizationWorkoutPlan.init(_:with:)(uint64_t a1, void *a2)
{
  id v12 = a2;
  uint64_t v3 = sub_1D5AB1EB0();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v4 = sub_1D5AB1D20();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D5AB1CE0();
  MEMORY[0x1F4188790](v8 - 8);
  sub_1D5AB21A0();
  sub_1D5AB2190();
  sub_1D5AB1CF0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1D5AB21E0();
  sub_1D5AB2200();
  sub_1D5AB21F0();
  sub_1D5AB3EC0();

  uint64_t v9 = sub_1D5AB2210();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
}

uint64_t PersonalizationCatalogWorkoutReference.init(_:with:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v151 = a2;
  uint64_t v148 = a3;
  uint64_t v5 = sub_1D5AB1B30();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v132[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1D5AB1D70();
  uint64_t v146 = *(void *)(v9 - 8);
  uint64_t v147 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = &v132[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4380);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = &v132[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_1D5AB1CE0();
  uint64_t v144 = *(void *)(v15 - 8);
  uint64_t v145 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v149 = &v132[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = sub_1D5AB3870();
  uint64_t v19 = v18;
  uint64_t v20 = HIBYTE(v18) & 0xF;
  uint64_t v21 = result & 0xFFFFFFFFFFFFLL;
  if ((v19 & 0x2000000000000000) != 0) {
    uint64_t v22 = v20;
  }
  else {
    uint64_t v22 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v22)
  {
    swift_bridgeObjectRelease();
    goto LABEL_138;
  }
  if ((v19 & 0x1000000000000000) != 0)
  {
    uint64_t v143 = v3;
    uint64_t v128 = sub_1D5A74218(result, v19, 10);
    swift_bridgeObjectRelease();
    uint64_t v142 = v128;
    if ((v128 & 0x100000000) != 0) {
      goto LABEL_138;
    }
    goto LABEL_51;
  }
  if ((v19 & 0x2000000000000000) != 0)
  {
    uint64_t v158 = result;
    uint64_t v159 = v19 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v143 = v3;
    if (result == 43)
    {
      if (!v20) {
        goto LABEL_141;
      }
      if (v20 == 1) {
        goto LABEL_33;
      }
      uint64_t v27 = (BYTE1(result) - 48);
      if (v27 > 9) {
        goto LABEL_33;
      }
      if (v20 != 2)
      {
        if ((BYTE2(result) - 48) > 9u) {
          goto LABEL_33;
        }
        uint64_t v27 = 10 * v27 + (BYTE2(result) - 48);
        uint64_t v30 = v20 - 3;
        if (v30)
        {
          unint64_t v31 = (unsigned __int8 *)&v158 + 3;
          while (1)
          {
            unsigned int v32 = *v31 - 48;
            if (v32 > 9) {
              goto LABEL_33;
            }
            uint64_t v33 = 10 * v27;
            if ((v33 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_33;
            }
            BOOL v28 = __CFADD__(v33, v32);
            uint64_t v27 = v33 + v32;
            if (v28) {
              goto LABEL_33;
            }
            char v25 = 0;
            ++v31;
            if (!--v30) {
              goto LABEL_49;
            }
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v20)
        {
          if (v20 != 1)
          {
            unsigned __int8 v26 = BYTE1(result) - 48;
            if ((BYTE1(result) - 48) <= 9u)
            {
              uint64_t v27 = 0;
              BOOL v28 = v26 == 0;
              uint64_t v29 = -v26;
              if (!v28) {
                goto LABEL_34;
              }
              if (v20 == 2)
              {
                char v25 = 0;
                uint64_t v27 = v29;
LABEL_49:
                uint64_t v142 = v27;
                goto LABEL_50;
              }
              unsigned __int8 v38 = BYTE2(result) - 48;
              if ((BYTE2(result) - 48) <= 9u)
              {
                uint64_t v39 = 10 * v29;
                if ((v39 & 0xFFFFFFFF00000000) == 0)
                {
                  uint64_t v27 = v39 - v38;
                  if (v39 >= v38)
                  {
                    uint64_t v40 = v20 - 3;
                    if (!v40) {
                      goto LABEL_48;
                    }
                    unint64_t v125 = (unsigned __int8 *)&v158 + 3;
                    while (1)
                    {
                      unsigned int v126 = *v125 - 48;
                      if (v126 > 9) {
                        break;
                      }
                      uint64_t v127 = 10 * v27;
                      if ((v127 & 0xFFFFFFFF00000000) != 0) {
                        break;
                      }
                      BOOL v28 = v127 >= v126;
                      uint64_t v27 = v127 - v126;
                      if (!v28) {
                        break;
                      }
                      char v25 = 0;
                      ++v125;
                      if (!--v40) {
                        goto LABEL_49;
                      }
                    }
                  }
                }
              }
            }
          }
LABEL_33:
          uint64_t v27 = 0;
LABEL_34:
          char v25 = 1;
          goto LABEL_49;
        }
        __break(1u);
LABEL_141:
        __break(1u);
        return result;
      }
      if (!v20) {
        goto LABEL_33;
      }
      uint64_t v27 = (result - 48);
      if (v27 > 9) {
        goto LABEL_33;
      }
      if (v20 != 1)
      {
        if ((BYTE1(result) - 48) > 9u) {
          goto LABEL_33;
        }
        uint64_t v27 = 10 * v27 + (BYTE1(result) - 48);
        uint64_t v34 = v20 - 2;
        if (v34)
        {
          uint64_t v35 = (unsigned __int8 *)&v158 + 2;
          while (1)
          {
            unsigned int v36 = *v35 - 48;
            if (v36 > 9) {
              goto LABEL_33;
            }
            uint64_t v37 = 10 * v27;
            if ((v37 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_33;
            }
            BOOL v28 = __CFADD__(v37, v36);
            uint64_t v27 = v37 + v36;
            if (v28) {
              goto LABEL_33;
            }
            char v25 = 0;
            ++v35;
            if (!--v34) {
              goto LABEL_49;
            }
          }
        }
      }
    }
LABEL_48:
    char v25 = 0;
    goto LABEL_49;
  }
  if ((result & 0x1000000000000000) != 0) {
    unint64_t v23 = (unsigned __int8 *)((v19 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else {
    unint64_t v23 = (unsigned __int8 *)sub_1D5AB5870();
  }
  unsigned __int8 v24 = sub_1D5A741D0(v23, v21, 10);
  LOBYTE(v156) = BYTE4(v24) & 1;
  char v25 = BYTE4(v24) & 1;
  uint64_t v142 = (uint64_t)v24;
  uint64_t v143 = v3;
LABEL_50:
  swift_bridgeObjectRelease();
  if (v25)
  {
LABEL_138:
    uint64_t v129 = sub_1D5AB33A0();
    sub_1D5A74300();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v129 - 8) + 104))(v130, *MEMORY[0x1E4F9D4A0], v129);
    swift_willThrow();

    uint64_t v131 = sub_1D5AB3960();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v131 - 8) + 8))(a1, v131);
  }
LABEL_51:
  uint64_t v41 = sub_1D5AB38B0();
  unint64_t v43 = sub_1D5A73C28(v41, v42);
  if ((v43 & 0x100000000) != 0) {
    goto LABEL_138;
  }
  uint64_t v136 = v6;
  uint64_t v137 = v5;
  unint64_t v141 = v43;
  uint64_t v44 = sub_1D5AB3950();
  uint64_t v150 = a1;
  uint64_t v46 = v45;
  char v48 = v47 & 1;
  uint64_t v158 = v44;
  uint64_t v159 = v45;
  unsigned __int8 v160 = v47 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3328);
  sub_1D5AB2330();
  sub_1D59891FC(v44, v46, v48);
  uint64_t v154 = v156;
  uint64_t v155 = v157;
  sub_1D5A76B44();
  sub_1D5AB2340();
  uint64_t v140 = v158;
  uint64_t v139 = v159;
  int v138 = v160;
  uint64_t v49 = sub_1D5AB38E0();
  uint64_t v50 = *(void *)(v49 + 16);
  if (v50)
  {
    swift_bridgeObjectRetain();
    uint64_t v51 = (unint64_t *)(v49 + 40);
    uint64_t v153 = (char *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v54 = *(v51 - 1);
      unint64_t v53 = *v51;
      swift_bridgeObjectRetain();
      unint64_t v55 = sub_1D5A73C28(v54, v53);
      if ((v55 & 0x100000000) == 0)
      {
        int v56 = v55;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v153 = sub_1D5A76A34(0, *((void *)v153 + 2) + 1, 1, v153);
        }
        unint64_t v58 = *((void *)v153 + 2);
        unint64_t v57 = *((void *)v153 + 3);
        if (v58 >= v57 >> 1) {
          uint64_t v153 = sub_1D5A76A34((char *)(v57 > 1), v58 + 1, 1, v153);
        }
        uint64_t v52 = v153;
        *((void *)v153 + 2) = v58 + 1;
        *(_DWORD *)&v52[4 * v58 + 32] = v56;
      }
      v51 += 2;
      --v50;
    }
    while (v50);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v153 = (char *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  uint64_t v135 = sub_1D5AB3890();
  uint64_t v134 = v59;
  int v133 = v60;
  uint64_t v61 = sub_1D5AB3920();
  uint64_t v62 = *(void *)(v61 + 16);
  if (v62)
  {
    swift_bridgeObjectRetain();
    uint64_t v63 = (unint64_t *)(v61 + 40);
    uint64_t v152 = (char *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v66 = *(v63 - 1);
      unint64_t v65 = *v63;
      swift_bridgeObjectRetain();
      unint64_t v67 = sub_1D5A73C28(v66, v65);
      if ((v67 & 0x100000000) == 0)
      {
        int v68 = v67;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v152 = sub_1D5A76A34(0, *((void *)v152 + 2) + 1, 1, v152);
        }
        unint64_t v70 = *((void *)v152 + 2);
        unint64_t v69 = *((void *)v152 + 3);
        if (v70 >= v69 >> 1) {
          uint64_t v152 = sub_1D5A76A34((char *)(v69 > 1), v70 + 1, 1, v152);
        }
        unint64_t v64 = v152;
        *((void *)v152 + 2) = v70 + 1;
        *(_DWORD *)&v64[4 * v70 + 32] = v68;
      }
      v63 += 2;
      --v62;
    }
    while (v62);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v152 = (char *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  sub_1D5AB1D30();
  sub_1D5AB3880();
  sub_1D5AB1D40();
  (*(void (**)(unsigned char *, uint64_t))(v136 + 8))(v8, v137);
  (*(void (**)(unsigned char *, uint64_t))(v146 + 8))(v11, v147);
  uint64_t v72 = v144;
  uint64_t v71 = v145;
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v144 + 48))(v14, 1, v145) == 1)
  {
    sub_1D5AB1CC0();
    sub_1D59A9880((uint64_t)v14);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v72 + 32))(v149, v14, v71);
  }
  sub_1D5AB3940();
  uint64_t v73 = sub_1D5AB38F0();
  uint64_t v74 = *(void *)(v73 + 16);
  if (v74)
  {
    swift_bridgeObjectRetain();
    uint64_t v75 = (unint64_t *)(v73 + 40);
    uint64_t v76 = (char *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v78 = *(v75 - 1);
      unint64_t v77 = *v75;
      swift_bridgeObjectRetain();
      unint64_t v79 = sub_1D5A73C28(v78, v77);
      if ((v79 & 0x100000000) == 0)
      {
        int v80 = v79;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v76 = sub_1D5A76A34(0, *((void *)v76 + 2) + 1, 1, v76);
        }
        unint64_t v82 = *((void *)v76 + 2);
        unint64_t v81 = *((void *)v76 + 3);
        if (v82 >= v81 >> 1) {
          uint64_t v76 = sub_1D5A76A34((char *)(v81 > 1), v82 + 1, 1, v76);
        }
        *((void *)v76 + 2) = v82 + 1;
        *(_DWORD *)&v76[4 * v82 + 32] = v80;
      }
      v75 += 2;
      --v74;
    }
    while (v74);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v76 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v147 = (uint64_t)v76;
  swift_bridgeObjectRelease();
  uint64_t v83 = sub_1D5AB3900();
  uint64_t v84 = *(void *)(v83 + 16);
  if (v84)
  {
    swift_bridgeObjectRetain();
    uint64_t v85 = (unint64_t *)(v83 + 40);
    uint64_t v86 = (char *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v88 = *(v85 - 1);
      unint64_t v87 = *v85;
      swift_bridgeObjectRetain();
      unint64_t v89 = sub_1D5A73C28(v88, v87);
      if ((v89 & 0x100000000) == 0)
      {
        int v90 = v89;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v86 = sub_1D5A76A34(0, *((void *)v86 + 2) + 1, 1, v86);
        }
        unint64_t v92 = *((void *)v86 + 2);
        unint64_t v91 = *((void *)v86 + 3);
        if (v92 >= v91 >> 1) {
          uint64_t v86 = sub_1D5A76A34((char *)(v91 > 1), v92 + 1, 1, v86);
        }
        *((void *)v86 + 2) = v92 + 1;
        *(_DWORD *)&v86[4 * v92 + 32] = v90;
      }
      v85 += 2;
      --v84;
    }
    while (v84);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v93 = sub_1D5AB3910();
  uint64_t v94 = *(void *)(v93 + 16);
  if (v94)
  {
    swift_bridgeObjectRetain();
    unint64_t v95 = (unint64_t *)(v93 + 40);
    unint64_t v96 = (char *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v98 = *(v95 - 1);
      unint64_t v97 = *v95;
      swift_bridgeObjectRetain();
      unint64_t v99 = sub_1D5A73C28(v98, v97);
      if ((v99 & 0x100000000) == 0)
      {
        int v100 = v99;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v96 = sub_1D5A76A34(0, *((void *)v96 + 2) + 1, 1, v96);
        }
        unint64_t v102 = *((void *)v96 + 2);
        unint64_t v101 = *((void *)v96 + 3);
        if (v102 >= v101 >> 1) {
          unint64_t v96 = sub_1D5A76A34((char *)(v101 > 1), v102 + 1, 1, v96);
        }
        *((void *)v96 + 2) = v102 + 1;
        *(_DWORD *)&v96[4 * v102 + 32] = v100;
      }
      v95 += 2;
      --v94;
    }
    while (v94);
    swift_bridgeObjectRelease();
  }
  LODWORD(v146) = v133 & 1;
  swift_bridgeObjectRelease();
  uint64_t v103 = sub_1D5AB38A0();
  uint64_t v104 = *(void *)(v103 + 16);
  if (v104)
  {
    swift_bridgeObjectRetain();
    unint64_t v105 = (unint64_t *)(v103 + 40);
    uint64_t v106 = (char *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v108 = *(v105 - 1);
      unint64_t v107 = *v105;
      swift_bridgeObjectRetain();
      unint64_t v109 = sub_1D5A73C28(v108, v107);
      if ((v109 & 0x100000000) == 0)
      {
        int v110 = v109;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v106 = sub_1D5A76A34(0, *((void *)v106 + 2) + 1, 1, v106);
        }
        unint64_t v112 = *((void *)v106 + 2);
        unint64_t v111 = *((void *)v106 + 3);
        if (v112 >= v111 >> 1) {
          uint64_t v106 = sub_1D5A76A34((char *)(v111 > 1), v112 + 1, 1, v106);
        }
        *((void *)v106 + 2) = v112 + 1;
        *(_DWORD *)&v106[4 * v112 + 32] = v110;
      }
      v105 += 2;
      --v104;
    }
    while (v104);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v113 = sub_1D5AB38C0();
  uint64_t v114 = *(void *)(v113 + 16);
  if (v114)
  {
    swift_bridgeObjectRetain();
    uint64_t v145 = v113;
    uint64_t v115 = (unint64_t *)(v113 + 40);
    uint64_t v116 = (char *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v118 = *(v115 - 1);
      unint64_t v117 = *v115;
      swift_bridgeObjectRetain();
      unint64_t v119 = sub_1D5A73C28(v118, v117);
      if ((v119 & 0x100000000) == 0)
      {
        int v120 = v119;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v116 = sub_1D5A76A34(0, *((void *)v116 + 2) + 1, 1, v116);
        }
        unint64_t v122 = *((void *)v116 + 2);
        unint64_t v121 = *((void *)v116 + 3);
        if (v122 >= v121 >> 1) {
          uint64_t v116 = sub_1D5A76A34((char *)(v121 > 1), v122 + 1, 1, v116);
        }
        *((void *)v116 + 2) = v122 + 1;
        *(_DWORD *)&v116[4 * v122 + 32] = v120;
      }
      v115 += 2;
      --v114;
    }
    while (v114);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v123 = v150;
  sub_1D5AB3930();
  sub_1D5AB44D0();

  uint64_t v124 = sub_1D5AB3960();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v124 - 8) + 8))(v123, v124);
}

void *sub_1D5A761E8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE47C8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      id v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1D5A76E7C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1D5A762F8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE0C40);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (char *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1D5A76B98(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1D5A763F4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4BC8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      id v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1D5A76D6C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1D5A76518(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE1048);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (char *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1D5A76B98(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D5A76614(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1D5A7667C(a1, a2, a3, a4, &qword_1EA725B88, MEMORY[0x1E4F9CE40], MEMORY[0x1E4F9CE40]);
}

uint64_t sub_1D5A76648(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1D5A7667C(a1, a2, a3, a4, &qword_1EA725200, MEMORY[0x1E4F9CB40], MEMORY[0x1E4F9CB40]);
}

uint64_t sub_1D5A7667C(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    unint64_t v18 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_1D5AB5910();
    __break(1u);
    return result;
  }
  void v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1D5A76F70(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_1D5A768FC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1D5A7667C(a1, a2, a3, a4, &qword_1EA725B80, MEMORY[0x1E4F9CE78], MEMORY[0x1E4F9CE78]);
}

uint64_t sub_1D5A76930(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1D5A7667C(a1, a2, a3, a4, &qword_1EA725B98, MEMORY[0x1E4F9EED0], MEMORY[0x1E4F9EED0]);
}

uint64_t sub_1D5A76964(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1D5A7667C(a1, a2, a3, a4, &qword_1EA725BD8, MEMORY[0x1E4F9E868], MEMORY[0x1E4F9E868]);
}

uint64_t sub_1D5A76998(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1D5A7667C(a1, a2, a3, a4, &qword_1EA725210, MEMORY[0x1E4F9C258], MEMORY[0x1E4F9C258]);
}

uint64_t sub_1D5A769CC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1D5A7667C(a1, a2, a3, a4, &qword_1EA7251F0, (uint64_t (*)(void))type metadata accessor for RemoteBrowsingJournalEntry, (uint64_t (*)(void))type metadata accessor for RemoteBrowsingJournalEntry);
}

uint64_t sub_1D5A76A00(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1D5A7667C(a1, a2, a3, a4, &qword_1EA7251E0, MEMORY[0x1E4F9C378], MEMORY[0x1E4F9C378]);
}

char *sub_1D5A76A34(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE33D8);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 29;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 2);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (char *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32]) {
          memmove(v13, a4 + 32, 4 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_1D5A76C80(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_1D5A76B44()
{
  unint64_t result = qword_1EBDE3350;
  if (!qword_1EBDE3350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDE3350);
  }
  return result;
}

char *sub_1D5A76B98(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  unint64_t result = (char *)sub_1D5AB59C0();
  __break(1u);
  return result;
}

char *sub_1D5A76C80(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + 4 * a1 + 32);
    size_t v6 = 4 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  unint64_t result = (char *)sub_1D5AB59C0();
  __break(1u);
  return result;
}

uint64_t sub_1D5A76D6C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4B88);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1D5AB59C0();
  __break(1u);
  return result;
}

uint64_t sub_1D5A76E7C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1D5AB59C0();
  __break(1u);
  return result;
}

uint64_t sub_1D5A76F70(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1D5AB59C0();
  __break(1u);
  return result;
}

uint64_t sub_1D5A770CC(uint64_t a1)
{
  uint64_t v3 = a1 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 56);
  int64_t v21 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v11 = v10 | (v8 << 6);
      goto LABEL_17;
    }
    if (__OFADD__(v8++, 1)) {
      break;
    }
    if (v8 >= v21) {
      goto LABEL_31;
    }
    unint64_t v13 = *(void *)(v3 + 8 * v8);
    if (!v13)
    {
      int64_t v14 = v8 + 1;
      if (v8 + 1 >= v21) {
        goto LABEL_31;
      }
      unint64_t v13 = *(void *)(v3 + 8 * v14);
      if (v13) {
        goto LABEL_15;
      }
      int64_t v14 = v8 + 2;
      if (v8 + 2 >= v21) {
        goto LABEL_31;
      }
      unint64_t v13 = *(void *)(v3 + 8 * v14);
      if (v13) {
        goto LABEL_15;
      }
      int64_t v14 = v8 + 3;
      if (v8 + 3 >= v21) {
        goto LABEL_31;
      }
      unint64_t v13 = *(void *)(v3 + 8 * v14);
      if (v13)
      {
LABEL_15:
        int64_t v8 = v14;
      }
      else
      {
        int64_t v20 = v8 + 4;
        if (v8 + 4 >= v21)
        {
LABEL_31:
          swift_release();
          return v9;
        }
        unint64_t v13 = *(void *)(v3 + 8 * v20);
        for (v8 += 4; !v13; ++v20)
        {
          int64_t v8 = v20 + 1;
          if (__OFADD__(v20, 1)) {
            goto LABEL_34;
          }
          if (v8 >= v21) {
            goto LABEL_31;
          }
          unint64_t v13 = *(void *)(v3 + 8 * v8);
        }
      }
    }
    unint64_t v6 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v8 << 6);
LABEL_17:
    uint64_t v15 = (void *)(*(void *)(a1 + 48) + 16 * v11);
    uint64_t v16 = v15[1];
    v22[0] = *v15;
    v22[1] = v16;
    swift_bridgeObjectRetain();
    sub_1D5A776C0((unint64_t)v22, (uint64_t)&v23);
    if (v1)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      return v9;
    }
    uint64_t result = swift_bridgeObjectRelease();
    if ((v24 & 1) == 0)
    {
      int v17 = v23;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1D5A76A34(0, *(void *)(v9 + 16) + 1, 1, (char *)v9);
        uint64_t v9 = result;
      }
      unint64_t v19 = *(void *)(v9 + 16);
      unint64_t v18 = *(void *)(v9 + 24);
      if (v19 >= v18 >> 1)
      {
        uint64_t result = (uint64_t)sub_1D5A76A34((char *)(v18 > 1), v19 + 1, 1, (char *)v9);
        uint64_t v9 = result;
      }
      *(void *)(v9 + 16) = v19 + 1;
      *(_DWORD *)(v9 + 4 * v19 + 32) = v17;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t PersonalizationUserOnboardingData.init(_:with:)(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1D5AB1CE0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3340);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_1D5AB3750();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  int64_t v14 = &v20[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D5A775F8(a1, (uint64_t)v10);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1D5A77660((uint64_t)v10);
    sub_1D5AB43A0();

    return sub_1D5A77660(a1);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 32))(v14, v10, v11);
    sub_1D5AB3720();
    uint64_t v16 = (void *)sub_1D5AB1C80();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    id v17 = objc_msgSend(a2, sel_stringFromDate_, v16);

    sub_1D5AB4DF0();
    uint64_t v18 = sub_1D5AB3730();
    uint64_t v19 = sub_1D5A770CC(v18);
    swift_bridgeObjectRelease();
    sub_1D595004C(v19);
    swift_bridgeObjectRelease();
    sub_1D5AB43A0();

    sub_1D5A77660(a1);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_1D5A775F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3340);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5A77660(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE3340);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1D5A776C0@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)result;
  unint64_t v4 = *(void *)(result + 8);
  uint64_t v5 = HIBYTE(v4) & 0xF;
  uint64_t v6 = *(void *)result & 0xFFFFFFFFFFFFLL;
  if ((v4 & 0x2000000000000000) != 0) {
    uint64_t v7 = HIBYTE(v4) & 0xF;
  }
  else {
    uint64_t v7 = *(void *)result & 0xFFFFFFFFFFFFLL;
  }
  if (!v7)
  {
    LOBYTE(v5) = 1;
LABEL_41:
    *(_DWORD *)a2 = v7;
    *(unsigned char *)(a2 + 4) = v5;
    return result;
  }
  if ((v4 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    unint64_t v26 = sub_1D5A74218(v3, v4, 10);
    swift_bridgeObjectRelease();
    uint64_t v5 = HIDWORD(v26) & 1;
    uint64_t result = v26;
LABEL_38:
    if (v5) {
      LODWORD(v7) = 0;
    }
    else {
      LODWORD(v7) = result;
    }
    goto LABEL_41;
  }
  if ((v4 & 0x2000000000000000) == 0)
  {
    if ((v3 & 0x1000000000000000) != 0) {
      uint64_t v8 = (unsigned __int8 *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v8 = (unsigned __int8 *)sub_1D5AB5870();
    }
    uint64_t result = (unint64_t)sub_1D5A741D0(v8, v6, 10);
    char v28 = BYTE4(result) & 1;
    LOBYTE(v5) = BYTE4(result) & 1;
    goto LABEL_37;
  }
  v27[0] = *(void *)result;
  v27[1] = v4 & 0xFFFFFFFFFFFFFFLL;
  if (v3 == 43)
  {
    if (v5)
    {
      if (v5 != 1)
      {
        uint64_t result = (BYTE1(v3) - 48);
        if (result <= 9)
        {
          if (v5 == 2) {
            goto LABEL_36;
          }
          if ((BYTE2(v3) - 48) <= 9u)
          {
            uint64_t result = 10 * result + (BYTE2(v3) - 48);
            uint64_t v12 = v5 - 3;
            if (v5 != 3)
            {
              uint64_t v13 = (unsigned __int8 *)v27 + 3;
              while (1)
              {
                unsigned int v14 = *v13 - 48;
                if (v14 > 9) {
                  goto LABEL_33;
                }
                uint64_t v15 = 10 * result;
                if ((v15 & 0xFFFFFFFF00000000) != 0) {
                  goto LABEL_33;
                }
                uint64_t result = v15 + v14;
                if (__CFADD__(v15, v14)) {
                  goto LABEL_33;
                }
                LOBYTE(v5) = 0;
                ++v13;
                if (!--v12) {
                  goto LABEL_37;
                }
              }
            }
            goto LABEL_36;
          }
        }
        goto LABEL_33;
      }
      goto LABEL_63;
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (v5)
      {
        uint64_t result = (v3 - 48);
        if (result <= 9)
        {
          if (v5 == 1) {
            goto LABEL_36;
          }
          if ((BYTE1(v3) - 48) <= 9u)
          {
            uint64_t result = 10 * result + (BYTE1(v3) - 48);
            uint64_t v16 = v5 - 2;
            if (v5 != 2)
            {
              id v17 = (unsigned __int8 *)v27 + 2;
              while (1)
              {
                unsigned int v18 = *v17 - 48;
                if (v18 > 9) {
                  goto LABEL_33;
                }
                uint64_t v19 = 10 * result;
                if ((v19 & 0xFFFFFFFF00000000) != 0) {
                  goto LABEL_33;
                }
                uint64_t result = v19 + v18;
                if (__CFADD__(v19, v18)) {
                  goto LABEL_33;
                }
                LOBYTE(v5) = 0;
                ++v17;
                if (!--v16) {
                  goto LABEL_37;
                }
              }
            }
            goto LABEL_36;
          }
        }
      }
LABEL_33:
      uint64_t result = 0;
LABEL_34:
      LOBYTE(v5) = 1;
      goto LABEL_37;
    }
    if (v5)
    {
      if (v5 != 1)
      {
        unsigned __int8 v9 = BYTE1(v3) - 48;
        if ((BYTE1(v3) - 48) <= 9u)
        {
          uint64_t result = 0;
          BOOL v10 = v9 == 0;
          unint64_t v11 = -v9;
          if (!v10) {
            goto LABEL_34;
          }
          if (v5 == 2)
          {
            LOBYTE(v5) = 0;
            uint64_t result = v11;
LABEL_37:
            LODWORD(v5) = v5 & 1;
            goto LABEL_38;
          }
          unsigned __int8 v20 = BYTE2(v3) - 48;
          if ((BYTE2(v3) - 48) <= 9u)
          {
            uint64_t v21 = 10 * v11;
            if ((v21 & 0xFFFFFFFF00000000) == 0)
            {
              uint64_t result = v21 - v20;
              if (v21 >= v20)
              {
                uint64_t v22 = v5 - 3;
                if (v5 != 3)
                {
                  int v23 = (unsigned __int8 *)v27 + 3;
                  while (1)
                  {
                    unsigned int v24 = *v23 - 48;
                    if (v24 > 9) {
                      goto LABEL_33;
                    }
                    uint64_t v25 = 10 * result;
                    if ((v25 & 0xFFFFFFFF00000000) != 0) {
                      goto LABEL_33;
                    }
                    uint64_t result = v25 - v24;
                    if (v25 < v24) {
                      goto LABEL_33;
                    }
                    LOBYTE(v5) = 0;
                    ++v23;
                    if (!--v22) {
                      goto LABEL_37;
                    }
                  }
                }
LABEL_36:
                LOBYTE(v5) = 0;
                goto LABEL_37;
              }
            }
          }
        }
        goto LABEL_33;
      }
LABEL_63:
      uint64_t result = 0;
      goto LABEL_37;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t DisplayPreferencesUpdated.displayPreferences.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB31E0();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t DisplayPreferencesUpdated.init(displayPreferences:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB31E0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static DisplayPreferencesUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for DisplayPreferencesUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB31E0();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for DisplayPreferencesUpdated(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB31E0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for DisplayPreferencesUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB31E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for DisplayPreferencesUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB31E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for DisplayPreferencesUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB31E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for DisplayPreferencesUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB31E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for DisplayPreferencesUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D5A77D00);
}

uint64_t sub_1D5A77D00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB31E0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for DisplayPreferencesUpdated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D5A77D80);
}

uint64_t sub_1D5A77D80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB31E0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for DisplayPreferencesUpdated()
{
  uint64_t result = qword_1EA727DF0;
  if (!qword_1EA727DF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D5A77E3C()
{
  uint64_t result = sub_1D5AB31E0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t StorefrontCache.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t StorefrontCache.init()()
{
  return v0;
}

uint64_t StorefrontCache.deinit()
{
  return v0;
}

uint64_t StorefrontCache.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

Swift::String_optional __swiftcall StorefrontCache.queryStorefrontIdentifier()()
{
  uint64_t v0 = sub_1D5A783A0();
  result.value._object = v1;
  result.value._uint64_t countAndFlagsBits = v0;
  return result;
}

Swift::Void __swiftcall StorefrontCache.updateStorefrontIdentifier(_:)(Swift::String a1)
{
}

Swift::String_optional __swiftcall StorefrontCache.queryLanguageCode()()
{
  uint64_t v0 = sub_1D5A783A0();
  result.value._object = v1;
  result.value._uint64_t countAndFlagsBits = v0;
  return result;
}

Swift::Void __swiftcall StorefrontCache.updateLanguageCode(_:)(Swift::String a1)
{
}

void sub_1D5A77F90()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  unint64_t v1 = (void *)sub_1D5AB4DE0();
  id v2 = (id)sub_1D5AB4DE0();
  objc_msgSend(v0, sel_setObject_forKey_, v1, v2);
}

uint64_t StorefrontCache.queryContentAvailability()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE0C58);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v6 = (void *)sub_1D5AB4DE0();
  id v7 = objc_msgSend(v5, sel_stringForKey_, v6);

  if (!v7) {
    goto LABEL_4;
  }
  sub_1D5AB4DF0();

  sub_1D5AB3310();
  uint64_t v8 = sub_1D5AB3330();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v4, 1, v8) == 1)
  {
    sub_1D5A78454((uint64_t)v4);
LABEL_4:
    uint64_t v10 = *MEMORY[0x1E4F9D400];
    uint64_t v11 = sub_1D5AB3330();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(a1, v10, v11);
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v4, v8);
}

uint64_t sub_1D5A78230()
{
  return sub_1D5A783A0();
}

void sub_1D5A78260()
{
}

uint64_t sub_1D5A7827C()
{
  return sub_1D5A783A0();
}

void sub_1D5A782AC()
{
}

void sub_1D5A782C8()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  unint64_t v1 = (void *)sub_1D5AB4DE0();
  id v2 = (id)sub_1D5AB4DE0();
  objc_msgSend(v0, sel_setObject_forKey_, v1, v2);
}

uint64_t sub_1D5A78384@<X0>(uint64_t a1@<X8>)
{
  return StorefrontCache.queryContentAvailability()(a1);
}

uint64_t sub_1D5A783A0()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  unint64_t v1 = (void *)sub_1D5AB4DE0();
  id v2 = objc_msgSend(v0, sel_stringForKey_, v1);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_1D5AB4DF0();

  return v3;
}

uint64_t sub_1D5A78454(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBDE0C58);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void _s13SeymourClient15StorefrontCacheC25updateContentAvailabilityyy0A4Core0fG0OF_0()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  sub_1D5AB3320();
  unint64_t v1 = (void *)sub_1D5AB4DE0();
  swift_bridgeObjectRelease();
  id v2 = (id)sub_1D5AB4DE0();
  objc_msgSend(v0, sel_setObject_forKey_, v1, v2);
}

uint64_t dispatch thunk of StorefrontCaching.queryStorefrontIdentifier()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of StorefrontCaching.updateStorefrontIdentifier(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of StorefrontCaching.queryLanguageCode()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of StorefrontCaching.updateLanguageCode(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of StorefrontCaching.queryContentAvailability()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of StorefrontCaching.updateContentAvailability(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t type metadata accessor for StorefrontCache()
{
  return self;
}

uint64_t method lookup function for StorefrontCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for StorefrontCache);
}

uint64_t dispatch thunk of StorefrontCache.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t SessionClientProtocol.createSession(token:catalogWorkout:supportedMetrics:workoutActivityType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return SessionClientProtocol.createSession(token:catalogWorkout:supportedMetrics:workoutActivityType:startTime:)(a1, a2, a3, a4, a5, a6, 0.0);
}

uint64_t SessionClientProtocol.createSession(token:catalogWorkout:supportedMetrics:workoutActivityType:startTime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA727900);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1D5AB2DF0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, double))(a6 + 16))(a1, a2, a3, a4, v16, a5, a6, a7);
  return sub_1D5A78774((uint64_t)v16);
}

uint64_t sub_1D5A78774(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA727900);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t SessionClientProtocol.updateSession(token:activityRings:audioFocusPreference:cadenceMetric:displayPreferences:distanceMetric:energyMetric:gymKitConnection:heartRateMetric:meditation:mindfulMinutesMetric:multiUserSession:multiUserSessionIdentities:paceMetric:playbackIntent:playback:remoteDisplayConnection:scoreMetric:termination:unitPreferences:userMassMetric:workoutDeviceConnection:watchConnectionRejection:workout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  return (*(uint64_t (**)(void))(a26 + 96))();
}

uint64_t dispatch thunk of SessionClientProtocol.queryActiveSession()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SessionClientProtocol.createSession(token:catalogWorkout:supportedMetrics:workoutActivityType:startTime:queueIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 16))();
}

uint64_t dispatch thunk of SessionClientProtocol.detachRemoteDisplay()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of SessionClientProtocol.requestDistributedSessionWithParticipant(havingRole:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of SessionClientProtocol.requestDistributedSessionWithParticipant(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of SessionClientProtocol.activateDistributedSession(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of SessionClientProtocol.cancelDistributedSessionWithParticipant(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of SessionClientProtocol.sendCountdownIntent(_:token:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of SessionClientProtocol.startCountdown(_:token:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of SessionClientProtocol.reportAppRequirementCompleted()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of SessionClientProtocol.reportAppRequirementFailed()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of SessionClientProtocol.applySessionUpdate(token:activityRings:audioFocusPreference:cadenceMetric:displayPreferences:distanceMetric:energyMetric:gymKitConnection:heartRateMetric:meditation:mindfulMinutesMetric:multiUserSession:multiUserSessionIdentities:paceMetric:playbackIntent:playback:remoteDisplayConnection:scoreMetric:termination:unitPreferences:userMassMetric:workoutDeviceConnection:watchConnectionRejection:workout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  return (*(uint64_t (**)(void))(a26 + 96))();
}

uint64_t static RecommendationConstants.daysOfWorkoutsToIncludeInInferenceRequest.getter()
{
  return 3;
}

uint64_t static RecommendationConstants.personalizationInferenceRequestVersion.getter()
{
  return 3;
}

uint64_t static RecommendationConstants.personalizationHeroContentRequestVersion.getter()
{
  return 1;
}

ValueMetadata *type metadata accessor for RecommendationConstants()
{
  return &type metadata for RecommendationConstants;
}

void static AllowedContentRatingsUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

void *ScriptClient.__allocating_init(eventHub:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = objc_allocWithZone(MEMORY[0x1E4F29268]);
  id v7 = a3;
  uint64_t v8 = (void *)sub_1D5AB4DE0();
  id v9 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v8, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  uint64_t v10 = sub_1D59968E8(v9, v7);
  uint64_t v11 = *(void *)(v10 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 16));
  if (*(unsigned char *)(v10 + 48) == 1)
  {
    *(unsigned char *)(v10 + 48) = 2;
    objc_msgSend(*(id *)(v10 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));

  type metadata accessor for ScriptClient();
  Swift::String_optional result = (void *)swift_allocObject();
  result[2] = v10;
  result[3] = &protocol witness table for XPCClient;
  result[4] = &protocol witness table for XPCClient;
  result[5] = a1;
  result[6] = a2;
  return result;
}

void *ScriptClient.__allocating_init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();
  return sub_1D5A78F54(a1, a4, a5, v5, ObjectType, a2, a3);
}

uint64_t type metadata accessor for ScriptClient()
{
  return self;
}

void *ScriptClient.init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();
  return sub_1D5A563AC(a1, a4, a5, v5, ObjectType, a2, a3);
}

uint64_t ScriptClient.deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t ScriptClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t ScriptClient.updateJetPack()()
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE5400);
  v2._object = (void *)0x80000001D5ACB1B0;
  v2._uint64_t countAndFlagsBits = 0xD000000000000064;
  v3._uint64_t countAndFlagsBits = 0x654A657461647075;
  v3._object = (void *)0xEF29286B63615074;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v7 = 258;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v4 + 8))(&v7, ObjectType, v4);
}

uint64_t ScriptClient.queryJetPackInfo()()
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D5AB4B50();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBDE5400);
  v2._uint64_t countAndFlagsBits = 0xD000000000000064;
  v2._object = (void *)0x80000001D5ACB1B0;
  v3._object = (void *)0x80000001D5ACB220;
  v3._uint64_t countAndFlagsBits = 0xD000000000000012;
  Logger.trace(file:function:)(v2, v3);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v7 = 259;
  return (*(uint64_t (**)(__int16 *, void, void, void, uint64_t, uint64_t))(v4 + 24))(&v7, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F9F0B8], MEMORY[0x1E4F9F0C0], ObjectType, v4);
}

uint64_t sub_1D5A78E40()
{
  uint64_t v1 = *v0;
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D5AB4B50();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE5400);
  v3._object = (void *)0x80000001D5ACB1B0;
  v3._uint64_t countAndFlagsBits = 0xD000000000000064;
  v4._uint64_t countAndFlagsBits = 0x654A657461647075;
  v4._object = (void *)0xEF29286B63615074;
  Logger.trace(file:function:)(v3, v4);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v8 = 258;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v5 + 8))(&v8, ObjectType, v5);
}

uint64_t sub_1D5A78F30()
{
  return ScriptClient.queryJetPackInfo()();
}

void *sub_1D5A78F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  type metadata accessor for ScriptClient();
  Swift::String_optional result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a6;
  result[4] = a7;
  result[5] = a2;
  result[6] = a3;
  return result;
}

uint64_t method lookup function for ScriptClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ScriptClient);
}

uint64_t dispatch thunk of ScriptClient.__allocating_init(connection:eventHub:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

unint64_t sub_1D5A78FE0(uint64_t a1)
{
  unint64_t result = a1 - 1;
  if (result >= 3)
  {
    if (qword_1EBDE5420 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_1D5AB4B50();
    __swift_project_value_buffer(v2, (uint64_t)qword_1EBDE5400);
    Swift::String v3 = sub_1D5AB4B30();
    os_log_type_t v4 = sub_1D5AB5420();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_1D5947000, v3, v4, "### HKFitnessMode not handled", v5, 2u);
      MEMORY[0x1D945AAC0](v5, -1, -1);
    }

    return 0;
  }
  return result;
}

uint64_t dispatch thunk of KeyDeliveryClientProtocol.fetchCertificateContext()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of KeyDeliveryClientProtocol.fetchContext(spc:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of KeyDeliveryClientProtocol.renewContext(spc:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of KeyDeliveryClientProtocol.releaseContext(spc:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

void static HealthKitMindfulSessionsUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for HealthKitMindfulSessionsUpdated()
{
  return &type metadata for HealthKitMindfulSessionsUpdated;
}

uint64_t XPCServer.dispatchService.getter()
{
  return swift_retain();
}

id sub_1D5A79150(uint64_t a1, void *a2)
{
  id v4 = objc_msgSend(self, sel_serviceListener);
  id v5 = objc_allocWithZone((Class)type metadata accessor for XPCServer());
  swift_bridgeObjectRetain();
  return sub_1D5A79290(v4, a1, a2);
}

uint64_t type metadata accessor for XPCServer()
{
  return self;
}

id XPCServer.__allocating_init(machServiceName:requiredEntitlements:queue:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6 = objc_allocWithZone(MEMORY[0x1E4F29290]);
  __int16 v7 = (void *)sub_1D5AB4DE0();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v6, sel_initWithMachServiceName_, v7);

  id v9 = objc_allocWithZone((Class)type metadata accessor for XPCServer());
  return sub_1D5A79290(v8, a3, a4);
}

id sub_1D5A79290(void *a1, uint64_t a2, void *a3)
{
  *(void *)&v3[OBJC_IVAR____TtC13SeymourClient9XPCServer_listener] = a1;
  *(void *)&v3[OBJC_IVAR____TtC13SeymourClient9XPCServer_requiredEntitlements] = a2;
  type metadata accessor for UnfairLock();
  uint64_t v6 = swift_allocObject();
  __int16 v7 = v3;
  id v8 = a1;
  id v9 = (_DWORD *)swift_slowAlloc();
  *(void *)(v6 + 16) = v9;
  *id v9 = 0;
  *(void *)&v7[OBJC_IVAR____TtC13SeymourClient9XPCServer_lock] = v6;
  strcpy((char *)v22, "XPCListener: ");
  HIWORD(v22[1]) = -4864;
  id v10 = objc_msgSend(v8, sel_serviceName);
  if (v10)
  {
    uint64_t v11 = v10;
    sub_1D5AB4DF0();
  }
  sub_1D5AB4E90();
  swift_bridgeObjectRelease();
  uint64_t v12 = v22[0];
  uint64_t v13 = v22[1];
  type metadata accessor for TransportDispatchService();
  uint64_t v14 = (void *)swift_allocObject();
  uint64_t v15 = MEMORY[0x1E4FBC868];
  v14[6] = MEMORY[0x1E4FBC868];
  v14[7] = v15;
  void v14[2] = a3;
  void v14[4] = v12;
  v14[5] = v13;
  uint64_t v16 = swift_allocObject();
  id v17 = a3;
  unsigned int v18 = (_DWORD *)swift_slowAlloc();
  *(void *)(v16 + 16) = v18;
  *unsigned int v18 = 0;
  void v14[3] = v16;
  *(void *)&v7[OBJC_IVAR____TtC13SeymourClient9XPCServer_dispatchService] = v14;
  *(void *)&v7[OBJC_IVAR____TtC13SeymourClient9XPCServer_clients] = MEMORY[0x1E4FBC870];

  v21.receiver = v7;
  v21.super_class = (Class)type metadata accessor for XPCServer();
  id v19 = objc_msgSendSuper2(&v21, sel_init);
  objc_msgSend(v8, sel_setDelegate_, v19);

  return v19;
}

id sub_1D5A79494()
{
  return sub_1D5A794E0(0x6574617669746361, (void *)0xEA00000000002928, (const char **)&selRef_resume);
}

id sub_1D5A794B8()
{
  return sub_1D5A794E0(0x6176697463616564, (void *)0xEC00000029286574, (const char **)&selRef_suspend);
}

id sub_1D5A794E0(uint64_t a1, void *a2, const char **a3)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1D5AB4B50();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBDE5400);
  v8._object = (void *)0x80000001D5ACB270;
  v8._uint64_t countAndFlagsBits = 0xD000000000000061;
  v9._uint64_t countAndFlagsBits = a1;
  v9._object = a2;
  Logger.trace(file:function:)(v8, v9);
  id v10 = *(void **)(v3 + OBJC_IVAR____TtC13SeymourClient9XPCServer_listener);
  uint64_t v11 = *a3;
  return [v10 v11];
}

uint64_t sub_1D5A795A8(void *a1)
{
  uint64_t v2 = v1;
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1D5AB4B50();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EBDE5400);
  v5._uint64_t countAndFlagsBits = 0xD000000000000061;
  v5._object = (void *)0x80000001D5ACB270;
  v6._object = (void *)0x80000001D5ACB380;
  v6._uint64_t countAndFlagsBits = 0xD000000000000014;
  Logger.trace(file:function:)(v5, v6);
  sub_1D59E8AE0(0, (unint64_t *)&qword_1EBDE4BC0);
  id v7 = a1;
  Swift::String v8 = (void *)sub_1D5AB54A0();
  type metadata accessor for XPCClient();
  swift_allocObject();
  uint64_t v9 = sub_1D59968E8(v7, v8);
  sub_1D5A79B58(v9);
  id v10 = self;
  id v11 = objc_msgSend(v10, sel_interfaceWithProtocol_, &unk_1F2DFCE60);
  objc_msgSend(v7, sel_setExportedInterface_, v11);

  id v12 = objc_msgSend(v10, sel_interfaceWithProtocol_, &unk_1F2DFCE60);
  objc_msgSend(v7, sel_setRemoteObjectInterface_, v12);

  objc_msgSend(v7, sel_setExportedObject_, v2);
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = v7;
  void v14[3] = v13;
  void v14[4] = v9;
  unint64_t v26 = sub_1D5A8FD0C;
  uint64_t v27 = v14;
  uint64_t v22 = MEMORY[0x1E4F143A8];
  uint64_t v23 = 1107296256;
  unsigned int v24 = sub_1D598EA50;
  uint64_t v25 = &block_descriptor_19;
  uint64_t v15 = _Block_copy(&v22);
  id v16 = v7;
  swift_retain();
  swift_release();
  objc_msgSend(v16, sel_setInvalidationHandler_, v15);
  _Block_release(v15);
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unsigned int v18 = (void *)swift_allocObject();
  void v18[2] = v16;
  v18[3] = v17;
  v18[4] = v9;
  unint64_t v26 = sub_1D5A8FD80;
  uint64_t v27 = v18;
  uint64_t v22 = MEMORY[0x1E4F143A8];
  uint64_t v23 = 1107296256;
  unsigned int v24 = sub_1D598EA50;
  uint64_t v25 = &block_descriptor_37;
  id v19 = _Block_copy(&v22);
  id v20 = v16;
  swift_retain();
  swift_release();
  objc_msgSend(v20, sel_setInterruptionHandler_, v19);
  _Block_release(v19);
  objc_msgSend(v20, sel_resume);
  return swift_release();
}

void sub_1D5A79928(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v7 = a2 + 16;
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1D5AB4B50();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EBDE5400);
  id v9 = a1;
  id v10 = sub_1D5AB4B30();
  os_log_type_t v11 = sub_1D5AB5410();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v21 = a3;
    id v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    v22[0] = v13;
    *(_DWORD *)id v12 = 136446210;
    id v14 = objc_msgSend(v9, sel_serviceName);
    if (v14)
    {
      uint64_t v15 = v14;
      uint64_t v16 = sub_1D5AB4DF0();
      unint64_t v18 = v17;
    }
    else
    {
      unint64_t v18 = 0xEB00000000646569;
      uint64_t v16 = 0x6669636570736E75;
    }
    sub_1D5951500(v16, v18, v22);
    sub_1D5AB5680();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D5947000, v10, v11, a4, v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v13, -1, -1);
    MEMORY[0x1D945AAC0](v12, -1, -1);

    a3 = v21;
  }
  else
  {
  }
  swift_beginAccess();
  uint64_t v19 = MEMORY[0x1D945ABB0](v7);
  if (v19)
  {
    id v20 = (void *)v19;
    sub_1D5A79C78(a3);
  }
}

void sub_1D5A79B58(uint64_t a1)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE5400);
  v4._object = (void *)0x80000001D5ACB270;
  v4._uint64_t countAndFlagsBits = 0xD000000000000061;
  v5._uint64_t countAndFlagsBits = 0x6E65696C43646461;
  v5._object = (void *)0xED0000293A5F2874;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC13SeymourClient9XPCServer_lock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v6 + 16));
  *(unsigned char *)(a1 + 48) = 2;
  swift_beginAccess();
  swift_retain();
  sub_1D5A7EC10(&v7, a1);
  swift_endAccess();
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
}

void sub_1D5A79C78(uint64_t a1)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE5400);
  v4._uint64_t countAndFlagsBits = 0xD000000000000061;
  v4._object = (void *)0x80000001D5ACB270;
  v5._object = (void *)0x80000001D5ACB360;
  v5._uint64_t countAndFlagsBits = 0xD000000000000010;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC13SeymourClient9XPCServer_lock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v6 + 16));
  *(unsigned char *)(a1 + 48) = 1;
  swift_beginAccess();
  sub_1D5A8EC78();
  swift_endAccess();
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
}

id XPCServer.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void XPCServer.init()()
{
}

id XPCServer.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for XPCServer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Bool __swiftcall XPCServer.listener(_:shouldAcceptNewConnection:)(NSXPCListener _, NSXPCConnection shouldAcceptNewConnection)
{
  return sub_1D5A8F6C0(shouldAcceptNewConnection.super.isa);
}

uint64_t XPCServer.sendRequest(_:)()
{
  uint64_t v0 = sub_1D5AB2B90();
  sub_1D5A8FDA8((unint64_t *)&qword_1EA727E10, MEMORY[0x1E4F9C878]);
  uint64_t v1 = swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v0 - 8) + 104))(v2, *MEMORY[0x1E4F9C840], v0);
  *(void *)(swift_allocObject() + 16) = v1;
  return sub_1D5AB4550();
}

{
  return MEMORY[0x1F4188298](sub_1D5A8FDFC, 0, 0);
}

uint64_t XPCServer.sendRequest<A>(_:payload:)()
{
  uint64_t v0 = sub_1D5AB2B90();
  sub_1D5A8FDA8((unint64_t *)&qword_1EA727E10, MEMORY[0x1E4F9C878]);
  uint64_t v1 = swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v0 - 8) + 104))(v2, *MEMORY[0x1E4F9C840], v0);
  *(void *)(swift_allocObject() + 16) = v1;
  return sub_1D5AB4550();
}

{
  return MEMORY[0x1F4188298](sub_1D5A8FDFC, 0, 0);
}

void XPCServer.sendRequest<A>(_:)()
{
  uint64_t v0 = sub_1D5AB2B90();
  sub_1D5A8FDA8((unint64_t *)&qword_1EA727E10, MEMORY[0x1E4F9C878]);
  uint64_t v1 = (void *)swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v0 - 8) + 104))(v2, *MEMORY[0x1E4F9C840], v0);
  sub_1D5AB4560();
}

void XPCServer.sendRequest<A, B>(_:payload:)()
{
  uint64_t v0 = sub_1D5AB2B90();
  sub_1D5A8FDA8((unint64_t *)&qword_1EA727E10, MEMORY[0x1E4F9C878]);
  uint64_t v1 = (void *)swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v0 - 8) + 104))(v2, *MEMORY[0x1E4F9C840], v0);
  sub_1D5AB4560();
}

uint64_t XPCServer.sendRequest<A>(_:)()
{
  return MEMORY[0x1F4188298](sub_1D5A8FDFC, 0, 0);
}

uint64_t XPCServer.sendRequest<A, B>(_:payload:)()
{
  return MEMORY[0x1F4188298](sub_1D5A7A524, 0, 0);
}

uint64_t sub_1D5A7A524()
{
  uint64_t v1 = sub_1D5AB2B90();
  sub_1D5A8FDA8((unint64_t *)&qword_1EA727E10, MEMORY[0x1E4F9C878]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v1 - 8) + 104))(v2, *MEMORY[0x1E4F9C840], v1);
  swift_willThrow();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

Swift::Void __swiftcall XPCServer.broadcastEvent(_:)(SeymourClient::TransportEvent a1)
{
  uint64_t v2 = (unsigned __int8 *)a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4E30);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v61 = v3;
  uint64_t v62 = v4;
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  int v60 = (char *)v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v59 = (char *)v46 - v7;
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v8 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  unint64_t v57 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v56 = *v2;
  uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC13SeymourClient9XPCServer_lock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v10 + 16));
  os_log_type_t v11 = (uint64_t *)(v1 + OBJC_IVAR____TtC13SeymourClient9XPCServer_clients);
  swift_beginAccess();
  uint64_t v12 = *v11;
  uint64_t v13 = *(os_unfair_lock_s **)(v10 + 16);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v13);
  if ((v12 & 0xC000000000000001) != 0)
  {
    sub_1D5AB5720();
    type metadata accessor for XPCClient();
    sub_1D5A8FDA8((unint64_t *)&unk_1EA727E48, (void (*)(uint64_t))type metadata accessor for XPCClient);
    sub_1D5AB5390();
    uint64_t v12 = v67;
    uint64_t v48 = v68;
    uint64_t v14 = v69;
    uint64_t v15 = v70;
    unint64_t v16 = v71;
  }
  else
  {
    uint64_t v15 = 0;
    uint64_t v17 = -1 << *(unsigned char *)(v12 + 32);
    uint64_t v18 = *(void *)(v12 + 56);
    uint64_t v48 = v12 + 56;
    uint64_t v14 = ~v17;
    uint64_t v19 = -v17;
    if (v19 < 64) {
      uint64_t v20 = ~(-1 << v19);
    }
    else {
      uint64_t v20 = -1;
    }
    unint64_t v16 = v20 & v18;
  }
  v46[2] = v12 & 0x7FFFFFFFFFFFFFFFLL;
  int64_t v47 = (unint64_t)(v14 + 64) >> 6;
  uint64_t v54 = v62 + 16;
  uint64_t v53 = v5 + 7;
  uint64_t v52 = v62 + 32;
  uint64_t v51 = v62 + 8;
  uint64_t v50 = (void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v49 = MEMORY[0x1E4FBC848] + 8;
  v46[1] = MEMORY[0x1E4FBC838] + 8;
  uint64_t v55 = v12;
  uint64_t v21 = v59;
  uint64_t v22 = v62;
  if (v12 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v16)
    {
      uint64_t v23 = (v16 - 1) & v16;
      unint64_t v24 = __clz(__rbit64(v16)) | (v15 << 6);
      uint64_t v25 = v15;
      goto LABEL_27;
    }
    int64_t v28 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v28 >= v47) {
      goto LABEL_30;
    }
    unint64_t v29 = *(void *)(v48 + 8 * v28);
    uint64_t v25 = v15 + 1;
    if (!v29)
    {
      uint64_t v25 = v15 + 2;
      if (v15 + 2 >= v47) {
        goto LABEL_30;
      }
      unint64_t v29 = *(void *)(v48 + 8 * v25);
      if (!v29)
      {
        uint64_t v25 = v15 + 3;
        if (v15 + 3 >= v47) {
          goto LABEL_30;
        }
        unint64_t v29 = *(void *)(v48 + 8 * v25);
        if (!v29)
        {
          uint64_t v25 = v15 + 4;
          if (v15 + 4 >= v47) {
            goto LABEL_30;
          }
          unint64_t v29 = *(void *)(v48 + 8 * v25);
          if (!v29)
          {
            uint64_t v30 = v15 + 5;
            while (v47 != v30)
            {
              unint64_t v29 = *(void *)(v48 + 8 * v30++);
              if (v29)
              {
                uint64_t v25 = v30 - 1;
                goto LABEL_26;
              }
            }
LABEL_30:
            sub_1D59AE720();
            return;
          }
        }
      }
    }
LABEL_26:
    uint64_t v23 = (v29 - 1) & v29;
    unint64_t v24 = __clz(__rbit64(v29)) + (v25 << 6);
LABEL_27:
    uint64_t v27 = *(void *)(*(void *)(v12 + 48) + 8 * v24);
    swift_retain();
    if (!v27) {
      goto LABEL_30;
    }
    while (1)
    {
      uint64_t v31 = swift_allocObject();
      uint64_t v64 = v25;
      *(void *)(v31 + 16) = v27;
      *(unsigned char *)(v31 + 24) = 1;
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE5240);
      sub_1D5AB4540();
      uint64_t v32 = swift_allocObject();
      *(unsigned char *)(v32 + 16) = v56;
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = sub_1D599F418;
      *(void *)(v33 + 24) = v32;
      uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
      uint64_t v35 = v60;
      unint64_t v63 = v23;
      uint64_t v36 = v61;
      v34(v60, v21, v61);
      unint64_t v37 = (*(unsigned __int8 *)(v22 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
      unint64_t v38 = (v53 + v37) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v39 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v22 + 32))(v39 + v37, v35, v36);
      uint64_t v40 = (uint64_t (**)(uint64_t *))(v39 + v38);
      unsigned __int8 *v40 = sub_1D599F520;
      v40[1] = (uint64_t (*)(uint64_t *))v33;
      uint64_t v41 = v57;
      sub_1D5AB4540();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v21, v36);
      uint64_t v42 = v58;
      unint64_t v43 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_1D5AB45B0();
      uint64_t v44 = swift_allocObject();
      *(void *)(v44 + 16) = 0;
      *(void *)(v44 + 24) = 0;
      v43(sub_1D59893E0, v44);
      swift_release();
      swift_release();
      uint64_t v45 = v42;
      uint64_t v12 = v55;
      (*v50)(v41, v45);
      swift_release();
      unint64_t v16 = v63;
      uint64_t v15 = v64;
      if ((v12 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      uint64_t v26 = sub_1D5AB5750();
      if (v26)
      {
        uint64_t v65 = v26;
        type metadata accessor for XPCClient();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        uint64_t v27 = v66;
        swift_unknownObjectRelease();
        uint64_t v25 = v15;
        uint64_t v23 = v16;
        if (v27) {
          continue;
        }
      }
      goto LABEL_30;
    }
  }
  __break(1u);
}

void XPCServer.broadcastEvent<A>(_:payload:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v9 = *a1;
  uint64_t v10 = *(void *)(v5 + OBJC_IVAR____TtC13SeymourClient9XPCServer_lock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v10 + 16));
  os_log_type_t v11 = (uint64_t *)(v5 + OBJC_IVAR____TtC13SeymourClient9XPCServer_clients);
  swift_beginAccess();
  uint64_t v12 = *v11;
  uint64_t v13 = *(os_unfair_lock_s **)(v10 + 16);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v13);
  if ((v12 & 0xC000000000000001) != 0)
  {
    sub_1D5AB5720();
    type metadata accessor for XPCClient();
    sub_1D5A8FDA8((unint64_t *)&unk_1EA727E48, (void (*)(uint64_t))type metadata accessor for XPCClient);
    sub_1D5AB5390();
    uint64_t v12 = v31[4];
    uint64_t v29 = v31[5];
    uint64_t v14 = v31[6];
    uint64_t v15 = v31[7];
    unint64_t v16 = v31[8];
  }
  else
  {
    uint64_t v15 = 0;
    uint64_t v17 = -1 << *(unsigned char *)(v12 + 32);
    uint64_t v29 = v12 + 56;
    uint64_t v14 = ~v17;
    uint64_t v18 = -v17;
    if (v18 < 64) {
      uint64_t v19 = ~(-1 << v18);
    }
    else {
      uint64_t v19 = -1;
    }
    unint64_t v16 = v19 & *(void *)(v12 + 56);
  }
  int64_t v28 = (unint64_t)(v14 + 64) >> 6;
  if (v12 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v16)
    {
      uint64_t v20 = (v16 - 1) & v16;
      unint64_t v21 = __clz(__rbit64(v16)) | (v15 << 6);
      uint64_t v22 = v15;
      goto LABEL_27;
    }
    int64_t v24 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v24 >= v28) {
      goto LABEL_30;
    }
    unint64_t v25 = *(void *)(v29 + 8 * v24);
    uint64_t v22 = v15 + 1;
    if (!v25)
    {
      uint64_t v22 = v15 + 2;
      if (v15 + 2 >= v28) {
        goto LABEL_30;
      }
      unint64_t v25 = *(void *)(v29 + 8 * v22);
      if (!v25)
      {
        uint64_t v22 = v15 + 3;
        if (v15 + 3 >= v28) {
          goto LABEL_30;
        }
        unint64_t v25 = *(void *)(v29 + 8 * v22);
        if (!v25)
        {
          uint64_t v22 = v15 + 4;
          if (v15 + 4 >= v28) {
            goto LABEL_30;
          }
          unint64_t v25 = *(void *)(v29 + 8 * v22);
          if (!v25)
          {
            uint64_t v26 = v15 + 5;
            while (v28 != v26)
            {
              unint64_t v25 = *(void *)(v29 + 8 * v26++);
              if (v25)
              {
                uint64_t v22 = v26 - 1;
                goto LABEL_26;
              }
            }
LABEL_30:
            sub_1D59AE720();
            return;
          }
        }
      }
    }
LABEL_26:
    uint64_t v20 = (v25 - 1) & v25;
    unint64_t v21 = __clz(__rbit64(v25)) + (v22 << 6);
LABEL_27:
    uint64_t v27 = *(void *)(*(void *)(v12 + 48) + 8 * v21);
    swift_retain();
    if (!v27) {
      goto LABEL_30;
    }
    while (1)
    {
      LOBYTE(v31[0]) = v9;
      XPCClient.broadcastEvent<A>(_:payload:)((unsigned __int8 *)v31, a2, a3, a4, a5);
      swift_release();
      uint64_t v15 = v22;
      unint64_t v16 = v20;
      if ((v12 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (sub_1D5AB5750())
      {
        type metadata accessor for XPCClient();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        uint64_t v23 = v31[0];
        swift_unknownObjectRelease();
        uint64_t v22 = v15;
        uint64_t v20 = v16;
        if (v23) {
          continue;
        }
      }
      goto LABEL_30;
    }
  }
  __break(1u);
}

uint64_t sub_1D5A7B00C()
{
  uint64_t v0 = sub_1D5AB2B90();
  sub_1D5A8FDA8((unint64_t *)&qword_1EA727E10, MEMORY[0x1E4F9C878]);
  uint64_t v1 = swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v0 - 8) + 104))(v2, *MEMORY[0x1E4F9C840], v0);
  *(void *)(swift_allocObject() + 16) = v1;
  return sub_1D5AB4550();
}

uint64_t sub_1D5A7B118()
{
  return XPCServer.sendRequest<A>(_:payload:)();
}

void sub_1D5A7B130()
{
}

void sub_1D5A7B148()
{
}

uint64_t sub_1D5A7B160()
{
  return MEMORY[0x1F4188298](sub_1D5A8FDFC, 0, 0);
}

uint64_t sub_1D5A7B17C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1D598AF68;
  return MEMORY[0x1F4188298](sub_1D5A8FDFC, 0, 0);
}

uint64_t sub_1D5A7B220()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1D5984480;
  return MEMORY[0x1F4188298](sub_1D5A7A524, 0, 0);
}

uint64_t sub_1D5A7B2D0()
{
  return swift_retain();
}

uint64_t sub_1D5A7B2E4(unsigned char *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  sub_1D5AB5C20();
  swift_bridgeObjectRetain();
  sub_1D5AB25E0();
  sub_1D5AB4E60();
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_1D5AB5C60();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if ((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = sub_1D5AB25E0();
    uint64_t v12 = v11;
    if (v10 == sub_1D5AB25E0() && v12 == v13)
    {
LABEL_17:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      goto LABEL_18;
    }
    char v15 = sub_1D5AB5AF0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v15)
    {
LABEL_7:
      swift_bridgeObjectRelease();
LABEL_18:
      uint64_t result = 0;
      LOBYTE(a2) = *(unsigned char *)(*(void *)(*v3 + 48) + v9);
      goto LABEL_19;
    }
    uint64_t v16 = ~v8;
    while (1)
    {
      unint64_t v9 = (v9 + 1) & v16;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        break;
      }
      uint64_t v17 = sub_1D5AB25E0();
      uint64_t v19 = v18;
      if (v17 == sub_1D5AB25E0() && v19 == v20) {
        goto LABEL_17;
      }
      char v22 = sub_1D5AB5AF0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v22) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v25 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_1D5A84658(a2, v9, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v25;
  swift_bridgeObjectRelease();
  uint64_t result = 1;
LABEL_19:
  *a1 = a2;
  return result;
}

uint64_t sub_1D5A7B500(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1D5AB2150();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1D5A8FDA8(&qword_1EA727F90, MEMORY[0x1E4F9C258]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_1D5AB4D90();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    int64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1D5A8FDA8(&qword_1EA727F98, MEMORY[0x1E4F9C258]);
      char v21 = sub_1D5AB4DD0();
      char v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1D5A84880((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1D5A7B824(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_1D5AB5C20();
  swift_bridgeObjectRetain();
  sub_1D5AB4E60();
  uint64_t v8 = sub_1D5AB5C60();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1D5AB5AF0() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1D5AB5AF0() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1D5A84B3C(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1D5A7B9D4(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1D5AB3600();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1D5A8FDA8((unint64_t *)&unk_1EA728450, MEMORY[0x1E4F9D800]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_1D5AB4D90();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    int64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1D5A8FDA8(&qword_1EA728090, MEMORY[0x1E4F9D800]);
      char v21 = sub_1D5AB4DD0();
      char v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1D5A84CD8((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1D5A7BCF8(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1D5AB2FF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1D5A8FDA8(&qword_1EA727FF0, MEMORY[0x1E4F9CE40]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_1D5AB4D90();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    int64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1D5A8FDA8(&qword_1EA727FF8, MEMORY[0x1E4F9CE40]);
      char v21 = sub_1D5AB4DD0();
      char v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1D5A84F94((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1D5A7C01C(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1D5AB3BF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1D5A8FDA8(&qword_1EA725670, MEMORY[0x1E4F9E380]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_1D5AB4D90();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    int64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1D5A8FDA8((unint64_t *)&unk_1EA728060, MEMORY[0x1E4F9E380]);
      char v21 = sub_1D5AB4DD0();
      char v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1D5A85250((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1D5A7C340(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1D5AB3B00();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1D5A8FDA8(&qword_1EA728040, MEMORY[0x1E4F9E170]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_1D5AB4D90();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    int64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1D5A8FDA8(&qword_1EA728048, MEMORY[0x1E4F9E170]);
      char v21 = sub_1D5AB4DD0();
      char v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1D5A8550C((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1D5A7C664(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1D5AB3AA0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1D5A8FDA8(&qword_1EA7256A0, MEMORY[0x1E4F9E0A0]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_1D5AB4D90();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    int64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1D5A8FDA8((unint64_t *)&unk_1EA728030, MEMORY[0x1E4F9E0A0]);
      char v21 = sub_1D5AB4DD0();
      char v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1D5A857C8((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1D5A7C988(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1D5AB3010();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1D5A8FDA8((unint64_t *)&unk_1EA728070, MEMORY[0x1E4F9CE78]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_1D5AB4D90();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    int64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1D5A8FDA8(&qword_1EA726B00, MEMORY[0x1E4F9CE78]);
      char v21 = sub_1D5AB4DD0();
      char v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1D5A85A84((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1D5A7CCAC(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1D5AB3B90();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1D5A8FDA8(&qword_1EA725650, MEMORY[0x1E4F9E268]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_1D5AB4D90();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    int64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1D5A8FDA8(&qword_1EA728010, MEMORY[0x1E4F9E268]);
      char v21 = sub_1D5AB4DD0();
      char v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1D5A85D40((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1D5A7CFD0(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1D5AB37B0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1D5A8FDA8(&qword_1EA7256D0, MEMORY[0x1E4F9DC50]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_1D5AB4D90();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    int64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1D5A8FDA8((unint64_t *)&unk_1EA727FE0, MEMORY[0x1E4F9DC50]);
      char v21 = sub_1D5AB4DD0();
      char v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1D5A85FFC((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1D5A7D2F4(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1D5AB49D0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1D5A8FDA8(&qword_1EA725208, MEMORY[0x1E4F9EED0]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_1D5AB4D90();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    int64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1D5A8FDA8((unint64_t *)&unk_1EA727F50, MEMORY[0x1E4F9EED0]);
      char v21 = sub_1D5AB4DD0();
      char v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1D5A862B8((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1D5A7D618(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1D5AB40E0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1D5A8FDA8((unint64_t *)&unk_1EA727F60, MEMORY[0x1E4F9E708]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_1D5AB4D90();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    int64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1D5A8FDA8(&qword_1EA726AC0, MEMORY[0x1E4F9E708]);
      char v21 = sub_1D5AB4DD0();
      char v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1D5A86574((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1D5A7D93C(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1D5AB4900();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1D5A8FDA8(&qword_1EA7256C8, MEMORY[0x1E4F9EDF8]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_1D5AB4D90();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    int64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1D5A8FDA8(&qword_1EA727F80, MEMORY[0x1E4F9EDF8]);
      char v21 = sub_1D5AB4DD0();
      char v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1D5A86830((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1D5A7DC60(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1D5AB41C0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1D5A8FDA8(&qword_1EA727FC0, MEMORY[0x1E4F9E868]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_1D5AB4D90();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    int64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1D5A8FDA8(&qword_1EA727FC8, MEMORY[0x1E4F9E868]);
      char v21 = sub_1D5AB4DD0();
      char v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1D5A86AEC((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1D5A7DF84(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1D5AB4100();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1D5A8FDA8(&qword_1EA7256D8, MEMORY[0x1E4F9E7B8]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_1D5AB4D90();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    int64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1D5A8FDA8(&qword_1EA727FB0, MEMORY[0x1E4F9E7B8]);
      char v21 = sub_1D5AB4DD0();
      char v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1D5A86DA8((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1D5A7E2A8(unsigned char *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  sub_1D5AB5C20();
  swift_bridgeObjectRetain();
  sub_1D5AB20A0();
  sub_1D5AB4E60();
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_1D5AB5C60();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if ((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = sub_1D5AB20A0();
    uint64_t v12 = v11;
    if (v10 == sub_1D5AB20A0() && v12 == v13)
    {
LABEL_17:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      goto LABEL_18;
    }
    char v15 = sub_1D5AB5AF0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v15)
    {
LABEL_7:
      swift_bridgeObjectRelease();
LABEL_18:
      uint64_t result = 0;
      LOBYTE(a2) = *(unsigned char *)(*(void *)(*v3 + 48) + v9);
      goto LABEL_19;
    }
    uint64_t v16 = ~v8;
    while (1)
    {
      unint64_t v9 = (v9 + 1) & v16;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        break;
      }
      uint64_t v17 = sub_1D5AB20A0();
      uint64_t v19 = v18;
      if (v17 == sub_1D5AB20A0() && v19 == v20) {
        goto LABEL_17;
      }
      char v22 = sub_1D5AB5AF0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v22) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v25 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_1D5A87064(a2, v9, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v25;
  swift_bridgeObjectRelease();
  uint64_t result = 1;
LABEL_19:
  *a1 = a2;
  return result;
}

uint64_t sub_1D5A7E4C4(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1D5AB22A0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1D5A8FDA8(&qword_1EA727F30, MEMORY[0x1E4F9C378]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_1D5AB4D90();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    int64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1D5A8FDA8(&qword_1EA727F38, MEMORY[0x1E4F9C378]);
      char v21 = sub_1D5AB4DD0();
      char v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1D5A8728C((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1D5A7E7E8(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1D5AB3FE0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1D5A8FDA8(&qword_1EA7251D0, MEMORY[0x1E4F9E5C0]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_1D5AB4D90();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    int64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1D5A8FDA8(&qword_1EA727F20, MEMORY[0x1E4F9E5C0]);
      char v21 = sub_1D5AB4DD0();
      char v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1D5A87548((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1D5A7EB0C(_DWORD *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = MEMORY[0x1D9459FF0](*(void *)(v6 + 40), a2, 4);
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1D5A87804(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(_DWORD *)(v10 + 4 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(_DWORD *)(v10 + 4 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1D5A7EC10(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v8 = sub_1D5AB5740();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      type metadata accessor for XPCClient();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v21;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1D5AB5730();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v16 = sub_1D5A7F21C(v7, result + 1);
    uint64_t v22 = v16;
    if (*(void *)(v16 + 24) <= *(void *)(v16 + 16))
    {
      swift_retain();
      sub_1D5A83EFC();
      uint64_t v17 = v22;
    }
    else
    {
      uint64_t v17 = v16;
      swift_retain();
    }
    sub_1D5A845B4(a2, v17);
    *uint64_t v3 = v17;
    swift_bridgeObjectRelease();
    *a1 = a2;
  }
  else
  {
    sub_1D5AB5C20();
    swift_bridgeObjectRetain();
    sub_1D5AB55C0();
    uint64_t v10 = sub_1D5AB5C60();
    uint64_t v11 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v12 = v10 & ~v11;
    if ((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
    {
      sub_1D59E8AE0(0, (unint64_t *)&qword_1EBDE11C8);
      swift_retain();
      char v13 = sub_1D5AB55B0();
      swift_release();
      if (v13)
      {
LABEL_12:
        swift_release();
        swift_bridgeObjectRelease();
        *a1 = *(void *)(*(void *)(*v2 + 48) + 8 * v12);
        swift_retain();
        return 0;
      }
      uint64_t v14 = ~v11;
      while (1)
      {
        unint64_t v12 = (v12 + 1) & v14;
        if (((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
          break;
        }
        swift_retain();
        char v15 = sub_1D5AB55B0();
        swift_release();
        if (v15) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    uint64_t v19 = swift_retain();
    sub_1D5A8792C(v19, v12, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v23;
    swift_bridgeObjectRelease();
    *a1 = a2;
  }
  return 1;
}

uint64_t sub_1D5A7EEF8(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1D5AB3980();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1D5A8FDA8(&qword_1EA727EF0, MEMORY[0x1E4F9DF10]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_1D5AB4D90();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    int64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1D5A8FDA8(&qword_1EA727EF8, MEMORY[0x1E4F9DF10]);
      char v21 = sub_1D5AB4DD0();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1D5A87AFC((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1D5A7F21C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4280);
    uint64_t v2 = sub_1D5AB57C0();
    uint64_t v14 = v2;
    sub_1D5AB5720();
    if (sub_1D5AB5750())
    {
      type metadata accessor for XPCClient();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_1D5A83EFC();
          uint64_t v2 = v14;
        }
        sub_1D5AB5C20();
        sub_1D5AB55C0();
        uint64_t result = sub_1D5AB5C60();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (sub_1D5AB5750());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v2;
}

uint64_t sub_1D5A7F424()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE1040);
  uint64_t v3 = sub_1D5AB57B0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      char v19 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
      sub_1D5AB5C20();
      sub_1D5AB25E0();
      sub_1D5AB4E60();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1D5AB5C60();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(unsigned char *)(*(void *)(v4 + 48) + v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1D5A7F6FC()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1D5AB2150();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA727FA0);
  uint64_t v5 = sub_1D5AB57B0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    unint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1D5A8FDA8(&qword_1EA727F90, MEMORY[0x1E4F9C258]);
      uint64_t result = sub_1D5AB4D90();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1D5A7FAF8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA728020);
  uint64_t v3 = sub_1D5AB57B0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    char v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      int64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1D5AB5C20();
      sub_1D5AB4E60();
      uint64_t result = sub_1D5AB5C60();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *int64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1D5A7FDD8()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1D5AB3600();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA728098);
  uint64_t v5 = sub_1D5AB57B0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    unint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1D5A8FDA8((unint64_t *)&unk_1EA728450, MEMORY[0x1E4F9D800]);
      uint64_t result = sub_1D5AB4D90();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1D5A801D4()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1D5AB2FF0();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA728000);
  uint64_t v5 = sub_1D5AB57B0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    unint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1D5A8FDA8(&qword_1EA727FF0, MEMORY[0x1E4F9CE40]);
      uint64_t result = sub_1D5AB4D90();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1D5A805D0()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1D5AB3BF0();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726B70);
  uint64_t v5 = sub_1D5AB57B0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    unint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1D5A8FDA8(&qword_1EA725670, MEMORY[0x1E4F9E380]);
      uint64_t result = sub_1D5AB4D90();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1D5A809CC()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1D5AB3B00();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA728050);
  uint64_t v5 = sub_1D5AB57B0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    unint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1D5A8FDA8(&qword_1EA728040, MEMORY[0x1E4F9E170]);
      uint64_t result = sub_1D5AB4D90();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1D5A80DC8()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1D5AB3AA0();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726B68);
  uint64_t v5 = sub_1D5AB57B0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    unint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1D5A8FDA8(&qword_1EA7256A0, MEMORY[0x1E4F9E0A0]);
      uint64_t result = sub_1D5AB4D90();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1D5A811C4()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1D5AB3B90();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA728018);
  uint64_t v5 = sub_1D5AB57B0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    unint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1D5A8FDA8(&qword_1EA725650, MEMORY[0x1E4F9E268]);
      uint64_t result = sub_1D5AB4D90();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1D5A815C0()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1D5AB37B0();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726B78);
  uint64_t v5 = sub_1D5AB57B0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    unint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1D5A8FDA8(&qword_1EA7256D0, MEMORY[0x1E4F9DC50]);
      uint64_t result = sub_1D5AB4D90();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1D5A819BC()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1D5AB4100();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727FB8);
  uint64_t v5 = sub_1D5AB57B0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    unint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1D5A8FDA8(&qword_1EA7256D8, MEMORY[0x1E4F9E7B8]);
      uint64_t result = sub_1D5AB4D90();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1D5A81DB8()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1D5AB3010();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA728080);
  uint64_t v5 = sub_1D5AB57B0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    unint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1D5A8FDA8((unint64_t *)&unk_1EA728070, MEMORY[0x1E4F9CE78]);
      uint64_t result = sub_1D5AB4D90();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1D5A821B4()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1D5AB49D0();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726AD0);
  uint64_t v5 = sub_1D5AB57B0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    unint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1D5A8FDA8(&qword_1EA725208, MEMORY[0x1E4F9EED0]);
      uint64_t result = sub_1D5AB4D90();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1D5A825B0()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1D5AB40E0();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA727F70);
  uint64_t v5 = sub_1D5AB57B0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    unint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1D5A8FDA8((unint64_t *)&unk_1EA727F60, MEMORY[0x1E4F9E708]);
      uint64_t result = sub_1D5AB4D90();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1D5A829AC()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1D5AB4900();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726AB0);
  uint64_t v5 = sub_1D5AB57B0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    unint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1D5A8FDA8(&qword_1EA7256C8, MEMORY[0x1E4F9EDF8]);
      uint64_t result = sub_1D5AB4D90();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1D5A82DA8()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1D5AB41C0();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA727FD0);
  uint64_t v5 = sub_1D5AB57B0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    unint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1D5A8FDA8(&qword_1EA727FC0, MEMORY[0x1E4F9E868]);
      uint64_t result = sub_1D5AB4D90();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1D5A831A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727F88);
  uint64_t v3 = sub_1D5AB57B0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      char v19 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
      sub_1D5AB5C20();
      sub_1D5AB20A0();
      sub_1D5AB4E60();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1D5AB5C60();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(unsigned char *)(*(void *)(v4 + 48) + v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1D5A8347C()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1D5AB22A0();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA727F40);
  uint64_t v5 = sub_1D5AB57B0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    unint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1D5A8FDA8(&qword_1EA727F30, MEMORY[0x1E4F9C378]);
      uint64_t result = sub_1D5AB4D90();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1D5A83878()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1D5AB3FE0();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727F28);
  uint64_t v5 = sub_1D5AB57B0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    unint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1D5A8FDA8(&qword_1EA7251D0, MEMORY[0x1E4F9E5C0]);
      uint64_t result = sub_1D5AB4D90();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1D5A83C74()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA727F10);
  uint64_t result = sub_1D5AB57B0();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    uint64_t v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *uint64_t v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      unsigned int v18 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v14);
      uint64_t result = MEMORY[0x1D9459FF0](*(void *)(v4 + 40), v18, 4);
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_DWORD *)(*(void *)(v4 + 48) + 4 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1D5A83EFC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4280);
  uint64_t v3 = sub_1D5AB57B0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      sub_1D5AB5C20();
      sub_1D5AB55C0();
      uint64_t result = sub_1D5AB5C60();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1D5A841B8()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1D5AB3980();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA727F00);
  uint64_t v5 = sub_1D5AB57B0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    unint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1D5A8FDA8(&qword_1EA727EF0, MEMORY[0x1E4F9DF10]);
      uint64_t result = sub_1D5AB4D90();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

unint64_t sub_1D5A845B4(uint64_t a1, uint64_t a2)
{
  sub_1D5AB5C20();
  sub_1D5AB55C0();
  sub_1D5AB5C60();
  unint64_t result = sub_1D5AB5710();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_1D5A84658(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  char v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_22;
  }
  if (a3)
  {
    sub_1D5A7F424();
  }
  else
  {
    if (v8 > v7)
    {
      unint64_t result = (uint64_t)sub_1D5A87DB8();
LABEL_22:
      uint64_t v24 = *v4;
      *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(unsigned char *)(*(void *)(v24 + 48) + a2) = v6;
      uint64_t v25 = *(void *)(v24 + 16);
      BOOL v26 = __OFADD__(v25, 1);
      uint64_t v27 = v25 + 1;
      if (!v26)
      {
        *(void *)(v24 + 16) = v27;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_1D5A88888();
  }
  uint64_t v9 = *v3;
  sub_1D5AB5C20();
  sub_1D5AB25E0();
  sub_1D5AB4E60();
  swift_bridgeObjectRelease();
  unint64_t result = sub_1D5AB5C60();
  uint64_t v10 = -1 << *(unsigned char *)(v9 + 32);
  a2 = result & ~v10;
  if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
    goto LABEL_22;
  }
  uint64_t v11 = sub_1D5AB25E0();
  uint64_t v13 = v12;
  if (v11 == sub_1D5AB25E0() && v13 == v14)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  char v16 = sub_1D5AB5AF0();
  swift_bridgeObjectRelease();
  unint64_t result = swift_bridgeObjectRelease();
  if ((v16 & 1) == 0)
  {
    uint64_t v17 = ~v10;
    do
    {
      a2 = (a2 + 1) & v17;
      if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
        goto LABEL_22;
      }
      uint64_t v18 = sub_1D5AB25E0();
      uint64_t v20 = v19;
      if (v18 == sub_1D5AB25E0() && v20 == v21) {
        goto LABEL_25;
      }
      char v23 = sub_1D5AB5AF0();
      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
    }
    while ((v23 & 1) == 0);
  }
LABEL_26:
  unint64_t result = sub_1D5AB5B40();
  __break(1u);
  return result;
}

uint64_t sub_1D5A84880(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1D5AB2150();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1D5A7F6FC();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1D5A885D8(MEMORY[0x1E4F9C258], (uint64_t *)&unk_1EA727FA0);
      goto LABEL_12;
    }
    sub_1D5A88B2C();
  }
  uint64_t v12 = *v3;
  sub_1D5A8FDA8(&qword_1EA727F90, MEMORY[0x1E4F9C258]);
  uint64_t v13 = sub_1D5AB4D90();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1D5A8FDA8(&qword_1EA727F98, MEMORY[0x1E4F9C258]);
      char v21 = sub_1D5AB4DD0();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1D5AB5B40();
  __break(1u);
  return result;
}

uint64_t sub_1D5A84B3C(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1D5A7FAF8();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_1D5A87F4C();
      goto LABEL_22;
    }
    sub_1D5A88EDC();
  }
  uint64_t v11 = *v4;
  sub_1D5AB5C20();
  sub_1D5AB4E60();
  uint64_t result = sub_1D5AB5C60();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_1D5AB5AF0(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_1D5AB5B40();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_1D5AB5AF0();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  char v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  uint64_t *v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_1D5A84CD8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1D5AB3600();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1D5A7FDD8();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1D5A885D8(MEMORY[0x1E4F9D800], &qword_1EA728098);
      goto LABEL_12;
    }
    sub_1D5A8918C();
  }
  uint64_t v12 = *v3;
  sub_1D5A8FDA8((unint64_t *)&unk_1EA728450, MEMORY[0x1E4F9D800]);
  uint64_t v13 = sub_1D5AB4D90();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1D5A8FDA8(&qword_1EA728090, MEMORY[0x1E4F9D800]);
      char v21 = sub_1D5AB4DD0();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1D5AB5B40();
  __break(1u);
  return result;
}

uint64_t sub_1D5A84F94(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1D5AB2FF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1D5A801D4();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1D5A885D8(MEMORY[0x1E4F9CE40], (uint64_t *)&unk_1EA728000);
      goto LABEL_12;
    }
    sub_1D5A8953C();
  }
  uint64_t v12 = *v3;
  sub_1D5A8FDA8(&qword_1EA727FF0, MEMORY[0x1E4F9CE40]);
  uint64_t v13 = sub_1D5AB4D90();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1D5A8FDA8(&qword_1EA727FF8, MEMORY[0x1E4F9CE40]);
      char v21 = sub_1D5AB4DD0();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1D5AB5B40();
  __break(1u);
  return result;
}

uint64_t sub_1D5A85250(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1D5AB3BF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1D5A805D0();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1D5A885D8(MEMORY[0x1E4F9E380], &qword_1EA726B70);
      goto LABEL_12;
    }
    sub_1D5A898EC();
  }
  uint64_t v12 = *v3;
  sub_1D5A8FDA8(&qword_1EA725670, MEMORY[0x1E4F9E380]);
  uint64_t v13 = sub_1D5AB4D90();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1D5A8FDA8((unint64_t *)&unk_1EA728060, MEMORY[0x1E4F9E380]);
      char v21 = sub_1D5AB4DD0();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1D5AB5B40();
  __break(1u);
  return result;
}

uint64_t sub_1D5A8550C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1D5AB3B00();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1D5A809CC();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1D5A885D8(MEMORY[0x1E4F9E170], (uint64_t *)&unk_1EA728050);
      goto LABEL_12;
    }
    sub_1D5A89C9C();
  }
  uint64_t v12 = *v3;
  sub_1D5A8FDA8(&qword_1EA728040, MEMORY[0x1E4F9E170]);
  uint64_t v13 = sub_1D5AB4D90();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1D5A8FDA8(&qword_1EA728048, MEMORY[0x1E4F9E170]);
      char v21 = sub_1D5AB4DD0();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1D5AB5B40();
  __break(1u);
  return result;
}

uint64_t sub_1D5A857C8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1D5AB3AA0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1D5A80DC8();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1D5A885D8(MEMORY[0x1E4F9E0A0], &qword_1EA726B68);
      goto LABEL_12;
    }
    sub_1D5A8A04C();
  }
  uint64_t v12 = *v3;
  sub_1D5A8FDA8(&qword_1EA7256A0, MEMORY[0x1E4F9E0A0]);
  uint64_t v13 = sub_1D5AB4D90();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1D5A8FDA8((unint64_t *)&unk_1EA728030, MEMORY[0x1E4F9E0A0]);
      char v21 = sub_1D5AB4DD0();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1D5AB5B40();
  __break(1u);
  return result;
}

uint64_t sub_1D5A85A84(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1D5AB3010();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1D5A81DB8();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1D5A885D8(MEMORY[0x1E4F9CE78], (uint64_t *)&unk_1EA728080);
      goto LABEL_12;
    }
    sub_1D5A8AF0C();
  }
  uint64_t v12 = *v3;
  sub_1D5A8FDA8((unint64_t *)&unk_1EA728070, MEMORY[0x1E4F9CE78]);
  uint64_t v13 = sub_1D5AB4D90();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1D5A8FDA8(&qword_1EA726B00, MEMORY[0x1E4F9CE78]);
      char v21 = sub_1D5AB4DD0();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1D5AB5B40();
  __break(1u);
  return result;
}

uint64_t sub_1D5A85D40(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1D5AB3B90();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1D5A811C4();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1D5A885D8(MEMORY[0x1E4F9E268], &qword_1EA728018);
      goto LABEL_12;
    }
    sub_1D5A8A3FC();
  }
  uint64_t v12 = *v3;
  sub_1D5A8FDA8(&qword_1EA725650, MEMORY[0x1E4F9E268]);
  uint64_t v13 = sub_1D5AB4D90();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1D5A8FDA8(&qword_1EA728010, MEMORY[0x1E4F9E268]);
      char v21 = sub_1D5AB4DD0();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1D5AB5B40();
  __break(1u);
  return result;
}

uint64_t sub_1D5A85FFC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1D5AB37B0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1D5A815C0();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1D5A885D8(MEMORY[0x1E4F9DC50], &qword_1EA726B78);
      goto LABEL_12;
    }
    sub_1D5A8A7AC();
  }
  uint64_t v12 = *v3;
  sub_1D5A8FDA8(&qword_1EA7256D0, MEMORY[0x1E4F9DC50]);
  uint64_t v13 = sub_1D5AB4D90();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1D5A8FDA8((unint64_t *)&unk_1EA727FE0, MEMORY[0x1E4F9DC50]);
      char v21 = sub_1D5AB4DD0();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1D5AB5B40();
  __break(1u);
  return result;
}

uint64_t sub_1D5A862B8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1D5AB49D0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1D5A821B4();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1D5A885D8(MEMORY[0x1E4F9EED0], &qword_1EA726AD0);
      goto LABEL_12;
    }
    sub_1D5A8B2BC();
  }
  uint64_t v12 = *v3;
  sub_1D5A8FDA8(&qword_1EA725208, MEMORY[0x1E4F9EED0]);
  uint64_t v13 = sub_1D5AB4D90();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1D5A8FDA8((unint64_t *)&unk_1EA727F50, MEMORY[0x1E4F9EED0]);
      char v21 = sub_1D5AB4DD0();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1D5AB5B40();
  __break(1u);
  return result;
}

uint64_t sub_1D5A86574(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1D5AB40E0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1D5A825B0();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1D5A885D8(MEMORY[0x1E4F9E708], (uint64_t *)&unk_1EA727F70);
      goto LABEL_12;
    }
    sub_1D5A8B66C();
  }
  uint64_t v12 = *v3;
  sub_1D5A8FDA8((unint64_t *)&unk_1EA727F60, MEMORY[0x1E4F9E708]);
  uint64_t v13 = sub_1D5AB4D90();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1D5A8FDA8(&qword_1EA726AC0, MEMORY[0x1E4F9E708]);
      char v21 = sub_1D5AB4DD0();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1D5AB5B40();
  __break(1u);
  return result;
}

uint64_t sub_1D5A86830(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1D5AB4900();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1D5A829AC();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1D5A885D8(MEMORY[0x1E4F9EDF8], &qword_1EA726AB0);
      goto LABEL_12;
    }
    sub_1D5A8BA1C();
  }
  uint64_t v12 = *v3;
  sub_1D5A8FDA8(&qword_1EA7256C8, MEMORY[0x1E4F9EDF8]);
  uint64_t v13 = sub_1D5AB4D90();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1D5A8FDA8(&qword_1EA727F80, MEMORY[0x1E4F9EDF8]);
      char v21 = sub_1D5AB4DD0();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1D5AB5B40();
  __break(1u);
  return result;
}

uint64_t sub_1D5A86AEC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1D5AB41C0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1D5A82DA8();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1D5A885D8(MEMORY[0x1E4F9E868], (uint64_t *)&unk_1EA727FD0);
      goto LABEL_12;
    }
    sub_1D5A8BDCC();
  }
  uint64_t v12 = *v3;
  sub_1D5A8FDA8(&qword_1EA727FC0, MEMORY[0x1E4F9E868]);
  uint64_t v13 = sub_1D5AB4D90();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1D5A8FDA8(&qword_1EA727FC8, MEMORY[0x1E4F9E868]);
      char v21 = sub_1D5AB4DD0();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1D5AB5B40();
  __break(1u);
  return result;
}

uint64_t sub_1D5A86DA8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1D5AB4100();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1D5A819BC();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1D5A885D8(MEMORY[0x1E4F9E7B8], &qword_1EA727FB8);
      goto LABEL_12;
    }
    sub_1D5A8AB5C();
  }
  uint64_t v12 = *v3;
  sub_1D5A8FDA8(&qword_1EA7256D8, MEMORY[0x1E4F9E7B8]);
  uint64_t v13 = sub_1D5AB4D90();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1D5A8FDA8(&qword_1EA727FB0, MEMORY[0x1E4F9E7B8]);
      char v21 = sub_1D5AB4DD0();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1D5AB5B40();
  __break(1u);
  return result;
}

uint64_t sub_1D5A87064(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  char v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_22;
  }
  if (a3)
  {
    sub_1D5A831A4();
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (uint64_t)sub_1D5A88100();
LABEL_22:
      uint64_t v24 = *v4;
      *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(unsigned char *)(*(void *)(v24 + 48) + a2) = v6;
      uint64_t v25 = *(void *)(v24 + 16);
      BOOL v26 = __OFADD__(v25, 1);
      uint64_t v27 = v25 + 1;
      if (!v26)
      {
        *(void *)(v24 + 16) = v27;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_1D5A8C17C();
  }
  uint64_t v9 = *v3;
  sub_1D5AB5C20();
  sub_1D5AB20A0();
  sub_1D5AB4E60();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1D5AB5C60();
  uint64_t v10 = -1 << *(unsigned char *)(v9 + 32);
  a2 = result & ~v10;
  if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
    goto LABEL_22;
  }
  uint64_t v11 = sub_1D5AB20A0();
  uint64_t v13 = v12;
  if (v11 == sub_1D5AB20A0() && v13 == v14)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  char v16 = sub_1D5AB5AF0();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v16 & 1) == 0)
  {
    uint64_t v17 = ~v10;
    do
    {
      a2 = (a2 + 1) & v17;
      if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
        goto LABEL_22;
      }
      uint64_t v18 = sub_1D5AB20A0();
      uint64_t v20 = v19;
      if (v18 == sub_1D5AB20A0() && v20 == v21) {
        goto LABEL_25;
      }
      char v23 = sub_1D5AB5AF0();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
    while ((v23 & 1) == 0);
  }
LABEL_26:
  uint64_t result = sub_1D5AB5B40();
  __break(1u);
  return result;
}

uint64_t sub_1D5A8728C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1D5AB22A0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1D5A8347C();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1D5A885D8(MEMORY[0x1E4F9C378], (uint64_t *)&unk_1EA727F40);
      goto LABEL_12;
    }
    sub_1D5A8C420();
  }
  uint64_t v12 = *v3;
  sub_1D5A8FDA8(&qword_1EA727F30, MEMORY[0x1E4F9C378]);
  uint64_t v13 = sub_1D5AB4D90();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1D5A8FDA8(&qword_1EA727F38, MEMORY[0x1E4F9C378]);
      char v21 = sub_1D5AB4DD0();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1D5AB5B40();
  __break(1u);
  return result;
}

uint64_t sub_1D5A87548(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1D5AB3FE0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1D5A83878();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1D5A885D8(MEMORY[0x1E4F9E5C0], &qword_1EA727F28);
      goto LABEL_12;
    }
    sub_1D5A8C7D0();
  }
  uint64_t v12 = *v3;
  sub_1D5A8FDA8(&qword_1EA7251D0, MEMORY[0x1E4F9E5C0]);
  uint64_t v13 = sub_1D5AB4D90();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1D5A8FDA8(&qword_1EA727F20, MEMORY[0x1E4F9E5C0]);
      char v21 = sub_1D5AB4DD0();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1D5AB5B40();
  __break(1u);
  return result;
}

uint64_t sub_1D5A87804(uint64_t result, unint64_t a2, char a3)
{
  unsigned int v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1D5A83C74();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1D5A88294();
      goto LABEL_14;
    }
    sub_1D5A8CB80();
  }
  uint64_t v8 = *v3;
  uint64_t result = MEMORY[0x1D9459FF0](*(void *)(*v3 + 40), v5, 4);
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(_DWORD *)(v10 + 4 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_1D5AB5B40();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(_DWORD *)(v10 + 4 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_DWORD *)(*(void *)(v12 + 48) + 4 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_1D5A8792C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1D5A83EFC();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1D5A8842C();
      goto LABEL_14;
    }
    sub_1D5A8CDE8();
  }
  uint64_t v8 = *v3;
  sub_1D5AB5C20();
  sub_1D5AB55C0();
  uint64_t result = sub_1D5AB5C60();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    type metadata accessor for XPCClient();
    sub_1D59E8AE0(0, (unint64_t *)&qword_1EBDE11C8);
    swift_retain();
    char v10 = sub_1D5AB55B0();
    uint64_t result = swift_release();
    if (v10)
    {
LABEL_13:
      uint64_t result = sub_1D5AB5B40();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        swift_retain();
        char v12 = sub_1D5AB55B0();
        uint64_t result = swift_release();
        if (v12) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v13 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v13 + 48) + 8 * a2) = v5;
  uint64_t v14 = *(void *)(v13 + 16);
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    *(void *)(v13 + 16) = v16;
  }
  return result;
}

uint64_t sub_1D5A87AFC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1D5AB3980();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1D5A841B8();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1D5A885D8(MEMORY[0x1E4F9DF10], (uint64_t *)&unk_1EA727F00);
      goto LABEL_12;
    }
    sub_1D5A8D078();
  }
  uint64_t v12 = *v3;
  sub_1D5A8FDA8(&qword_1EA727EF0, MEMORY[0x1E4F9DF10]);
  uint64_t v13 = sub_1D5AB4D90();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1D5A8FDA8(&qword_1EA727EF8, MEMORY[0x1E4F9DF10]);
      char v21 = sub_1D5AB4DD0();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1D5AB5B40();
  __break(1u);
  return result;
}

void *sub_1D5A87DB8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE1040);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D5AB57A0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D5A87F4C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA728020);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D5AB57A0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    void *v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D5A88100()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727F88);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D5AB57A0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D5A88294()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA727F10);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D5AB57A0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_DWORD *)(*(void *)(v4 + 48) + 4 * v15) = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D5A8842C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4280);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D5AB57A0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = (void *)swift_retain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D5A885D8(uint64_t (*a1)(void), uint64_t *a2)
{
  uint64_t v4 = v2;
  uint64_t v5 = a1(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v25 - v7;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v9 = *v2;
  uint64_t v10 = sub_1D5AB57A0();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_30:
    *uint64_t v4 = v11;
    return result;
  }
  uint64_t result = (void *)(v10 + 56);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v11 + 32)) + 63) >> 6;
  BOOL v26 = v4;
  uint64_t v27 = (const void *)(v9 + 56);
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v13) {
    uint64_t result = memmove(result, v27, 8 * v13);
  }
  int64_t v15 = 0;
  *(void *)(v11 + 16) = *(void *)(v9 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v9 + 56);
  int64_t v28 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      unint64_t v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v20 = v19 | (v15 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v22);
    ++v15;
    if (!v23)
    {
      int64_t v15 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_28;
      }
      unint64_t v23 = *((void *)v27 + v15);
      if (!v23)
      {
        int64_t v15 = v22 + 2;
        if (v22 + 2 >= v28) {
          goto LABEL_28;
        }
        unint64_t v23 = *((void *)v27 + v15);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v18 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v15 << 6);
LABEL_12:
    unint64_t v21 = *(void *)(v6 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(void *)(v9 + 48) + v21, v5);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(void *)(v11 + 48) + v21, v8, v5);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v28)
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t v4 = v26;
    goto LABEL_30;
  }
  unint64_t v23 = *((void *)v27 + v24);
  if (v23)
  {
    int64_t v15 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v15 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v15);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1D5A88888()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE1040);
  uint64_t v3 = sub_1D5AB57B0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    char v19 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    sub_1D5AB5C20();
    sub_1D5AB25E0();
    sub_1D5AB4E60();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1D5AB5C60();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(unsigned char *)(*(void *)(v4 + 48) + v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D5A88B2C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D5AB2150();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA727FA0);
  uint64_t v7 = sub_1D5AB57B0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1D5A8FDA8(&qword_1EA727F90, MEMORY[0x1E4F9C258]);
    uint64_t result = sub_1D5AB4D90();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D5A88EDC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA728020);
  uint64_t v3 = sub_1D5AB57B0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_1D5AB5C20();
    swift_bridgeObjectRetain();
    sub_1D5AB4E60();
    uint64_t result = sub_1D5AB5C60();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *uint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D5A8918C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D5AB3600();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA728098);
  uint64_t v7 = sub_1D5AB57B0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1D5A8FDA8((unint64_t *)&unk_1EA728450, MEMORY[0x1E4F9D800]);
    uint64_t result = sub_1D5AB4D90();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D5A8953C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D5AB2FF0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA728000);
  uint64_t v7 = sub_1D5AB57B0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1D5A8FDA8(&qword_1EA727FF0, MEMORY[0x1E4F9CE40]);
    uint64_t result = sub_1D5AB4D90();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D5A898EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D5AB3BF0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726B70);
  uint64_t v7 = sub_1D5AB57B0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1D5A8FDA8(&qword_1EA725670, MEMORY[0x1E4F9E380]);
    uint64_t result = sub_1D5AB4D90();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D5A89C9C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D5AB3B00();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA728050);
  uint64_t v7 = sub_1D5AB57B0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1D5A8FDA8(&qword_1EA728040, MEMORY[0x1E4F9E170]);
    uint64_t result = sub_1D5AB4D90();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D5A8A04C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D5AB3AA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726B68);
  uint64_t v7 = sub_1D5AB57B0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1D5A8FDA8(&qword_1EA7256A0, MEMORY[0x1E4F9E0A0]);
    uint64_t result = sub_1D5AB4D90();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D5A8A3FC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D5AB3B90();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA728018);
  uint64_t v7 = sub_1D5AB57B0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1D5A8FDA8(&qword_1EA725650, MEMORY[0x1E4F9E268]);
    uint64_t result = sub_1D5AB4D90();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D5A8A7AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D5AB37B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726B78);
  uint64_t v7 = sub_1D5AB57B0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1D5A8FDA8(&qword_1EA7256D0, MEMORY[0x1E4F9DC50]);
    uint64_t result = sub_1D5AB4D90();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D5A8AB5C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D5AB4100();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727FB8);
  uint64_t v7 = sub_1D5AB57B0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1D5A8FDA8(&qword_1EA7256D8, MEMORY[0x1E4F9E7B8]);
    uint64_t result = sub_1D5AB4D90();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D5A8AF0C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D5AB3010();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA728080);
  uint64_t v7 = sub_1D5AB57B0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1D5A8FDA8((unint64_t *)&unk_1EA728070, MEMORY[0x1E4F9CE78]);
    uint64_t result = sub_1D5AB4D90();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D5A8B2BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D5AB49D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726AD0);
  uint64_t v7 = sub_1D5AB57B0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1D5A8FDA8(&qword_1EA725208, MEMORY[0x1E4F9EED0]);
    uint64_t result = sub_1D5AB4D90();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D5A8B66C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D5AB40E0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA727F70);
  uint64_t v7 = sub_1D5AB57B0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1D5A8FDA8((unint64_t *)&unk_1EA727F60, MEMORY[0x1E4F9E708]);
    uint64_t result = sub_1D5AB4D90();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D5A8BA1C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D5AB4900();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA726AB0);
  uint64_t v7 = sub_1D5AB57B0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1D5A8FDA8(&qword_1EA7256C8, MEMORY[0x1E4F9EDF8]);
    uint64_t result = sub_1D5AB4D90();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D5A8BDCC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D5AB41C0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA727FD0);
  uint64_t v7 = sub_1D5AB57B0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1D5A8FDA8(&qword_1EA727FC0, MEMORY[0x1E4F9E868]);
    uint64_t result = sub_1D5AB4D90();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D5A8C17C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727F88);
  uint64_t v3 = sub_1D5AB57B0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    char v19 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    sub_1D5AB5C20();
    sub_1D5AB20A0();
    sub_1D5AB4E60();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1D5AB5C60();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(unsigned char *)(*(void *)(v4 + 48) + v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D5A8C420()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D5AB22A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA727F40);
  uint64_t v7 = sub_1D5AB57B0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1D5A8FDA8(&qword_1EA727F30, MEMORY[0x1E4F9C378]);
    uint64_t result = sub_1D5AB4D90();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D5A8C7D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D5AB3FE0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA727F28);
  uint64_t v7 = sub_1D5AB57B0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1D5A8FDA8(&qword_1EA7251D0, MEMORY[0x1E4F9E5C0]);
    uint64_t result = sub_1D5AB4D90();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D5A8CB80()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA727F10);
  uint64_t result = sub_1D5AB57B0();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    unsigned int v18 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v14);
    uint64_t result = MEMORY[0x1D9459FF0](*(void *)(v4 + 40), v18, 4);
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_DWORD *)(*(void *)(v4 + 48) + 4 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D5A8CDE8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4280);
  uint64_t v3 = sub_1D5AB57B0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    sub_1D5AB5C20();
    swift_retain();
    sub_1D5AB55C0();
    uint64_t result = sub_1D5AB5C60();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D5A8D078()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D5AB3980();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA727F00);
  uint64_t v7 = sub_1D5AB57B0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1D5A8FDA8(&qword_1EA727EF0, MEMORY[0x1E4F9DF10]);
    uint64_t result = sub_1D5AB4D90();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D5A8D428@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1D5AB2FF0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1D5A8FDA8(&qword_1EA727FF0, MEMORY[0x1E4F9CE40]);
  swift_bridgeObjectRetain();
  uint64_t v31 = a1;
  uint64_t v10 = sub_1D5AB4D90();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = v9;
  uint64_t v30 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v26 = v2;
    uint64_t v27 = v6;
    uint64_t v28 = a2;
    uint64_t v29 = ~v11;
    int64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v15 = v6 + 16;
    unint64_t v14 = v16;
    uint64_t v17 = *(void *)(v15 + 56);
    while (1)
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v13 + 48) + v17 * v12, v5);
      sub_1D5A8FDA8(&qword_1EA727FF8, MEMORY[0x1E4F9CE40]);
      char v19 = sub_1D5AB4DD0();
      (*(void (**)(char *, uint64_t))(v15 - 8))(v8, v5);
      if (v19) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v29;
      uint64_t v13 = v18;
      if (((*(void *)(v30 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = 1;
        uint64_t v6 = v27;
        a2 = v28;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v21 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v21;
    uint64_t v32 = *v21;
    uint64_t *v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1D5A885D8(MEMORY[0x1E4F9CE40], (uint64_t *)&unk_1EA728000);
      uint64_t v23 = v32;
    }
    uint64_t v6 = v27;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v27 + 32))(v28, *(void *)(v23 + 48) + v17 * v12, v5);
    sub_1D5A8F04C(v12, MEMORY[0x1E4F9CE40], &qword_1EA727FF0, MEMORY[0x1E4F9CE40], MEMORY[0x1E4F9CE48]);
    uint64_t *v21 = v32;
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
}

uint64_t sub_1D5A8D768@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1D5AB3B90();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1D5A8FDA8(&qword_1EA725650, MEMORY[0x1E4F9E268]);
  swift_bridgeObjectRetain();
  uint64_t v31 = a1;
  uint64_t v10 = sub_1D5AB4D90();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = v9;
  uint64_t v30 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v26 = v2;
    uint64_t v27 = v6;
    uint64_t v28 = a2;
    uint64_t v29 = ~v11;
    int64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v15 = v6 + 16;
    unint64_t v14 = v16;
    uint64_t v17 = *(void *)(v15 + 56);
    while (1)
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v13 + 48) + v17 * v12, v5);
      sub_1D5A8FDA8(&qword_1EA728010, MEMORY[0x1E4F9E268]);
      char v19 = sub_1D5AB4DD0();
      (*(void (**)(char *, uint64_t))(v15 - 8))(v8, v5);
      if (v19) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v29;
      uint64_t v13 = v18;
      if (((*(void *)(v30 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = 1;
        uint64_t v6 = v27;
        a2 = v28;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v21 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v21;
    uint64_t v32 = *v21;
    uint64_t *v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1D5A885D8(MEMORY[0x1E4F9E268], &qword_1EA728018);
      uint64_t v23 = v32;
    }
    uint64_t v6 = v27;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v27 + 32))(v28, *(void *)(v23 + 48) + v17 * v12, v5);
    sub_1D5A8F04C(v12, MEMORY[0x1E4F9E268], &qword_1EA725650, MEMORY[0x1E4F9E268], MEMORY[0x1E4F9E270]);
    uint64_t *v21 = v32;
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
}

uint64_t sub_1D5A8DAA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1D5AB37B0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1D5A8FDA8(&qword_1EA7256D0, MEMORY[0x1E4F9DC50]);
  swift_bridgeObjectRetain();
  uint64_t v31 = a1;
  uint64_t v10 = sub_1D5AB4D90();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = v9;
  uint64_t v30 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v26 = v2;
    uint64_t v27 = v6;
    uint64_t v28 = a2;
    uint64_t v29 = ~v11;
    int64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v15 = v6 + 16;
    unint64_t v14 = v16;
    uint64_t v17 = *(void *)(v15 + 56);
    while (1)
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v13 + 48) + v17 * v12, v5);
      sub_1D5A8FDA8((unint64_t *)&unk_1EA727FE0, MEMORY[0x1E4F9DC50]);
      char v19 = sub_1D5AB4DD0();
      (*(void (**)(char *, uint64_t))(v15 - 8))(v8, v5);
      if (v19) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v29;
      uint64_t v13 = v18;
      if (((*(void *)(v30 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = 1;
        uint64_t v6 = v27;
        a2 = v28;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v21 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v21;
    uint64_t v32 = *v21;
    uint64_t *v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1D5A885D8(MEMORY[0x1E4F9DC50], &qword_1EA726B78);
      uint64_t v23 = v32;
    }
    uint64_t v6 = v27;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v27 + 32))(v28, *(void *)(v23 + 48) + v17 * v12, v5);
    sub_1D5A8F04C(v12, MEMORY[0x1E4F9DC50], &qword_1EA7256D0, MEMORY[0x1E4F9DC50], MEMORY[0x1E4F9DC58]);
    uint64_t *v21 = v32;
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
}

uint64_t sub_1D5A8DDE8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1D5AB5C20();
  swift_bridgeObjectRetain();
  sub_1D5AB4E60();
  uint64_t v6 = sub_1D5AB5C60();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  uint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_1D5AB5AF0() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      int64_t v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_1D5AB5AF0() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1D5A87F4C();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_1D5A8F338(v8);
  *uint64_t v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1D5A8DF78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1D5AB4100();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1D5A8FDA8(&qword_1EA7256D8, MEMORY[0x1E4F9E7B8]);
  swift_bridgeObjectRetain();
  uint64_t v31 = a1;
  uint64_t v10 = sub_1D5AB4D90();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = v9;
  uint64_t v30 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v26 = v2;
    uint64_t v27 = v6;
    uint64_t v28 = a2;
    uint64_t v29 = ~v11;
    int64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v15 = v6 + 16;
    uint64_t v14 = v16;
    uint64_t v17 = *(void *)(v15 + 56);
    while (1)
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v13 + 48) + v17 * v12, v5);
      sub_1D5A8FDA8(&qword_1EA727FB0, MEMORY[0x1E4F9E7B8]);
      char v19 = sub_1D5AB4DD0();
      (*(void (**)(char *, uint64_t))(v15 - 8))(v8, v5);
      if (v19) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v29;
      uint64_t v13 = v18;
      if (((*(void *)(v30 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = 1;
        uint64_t v6 = v27;
        a2 = v28;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v21 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v21;
    uint64_t v32 = *v21;
    uint64_t *v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1D5A885D8(MEMORY[0x1E4F9E7B8], &qword_1EA727FB8);
      uint64_t v23 = v32;
    }
    uint64_t v6 = v27;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v27 + 32))(v28, *(void *)(v23 + 48) + v17 * v12, v5);
    sub_1D5A8F04C(v12, MEMORY[0x1E4F9E7B8], &qword_1EA7256D8, MEMORY[0x1E4F9E7B8], MEMORY[0x1E4F9E7C0]);
    uint64_t *v21 = v32;
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
}

uint64_t sub_1D5A8E2B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1D5AB49D0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1D5A8FDA8(&qword_1EA725208, MEMORY[0x1E4F9EED0]);
  swift_bridgeObjectRetain();
  uint64_t v31 = a1;
  uint64_t v10 = sub_1D5AB4D90();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = v9;
  uint64_t v30 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v26 = v2;
    uint64_t v27 = v6;
    uint64_t v28 = a2;
    uint64_t v29 = ~v11;
    int64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v15 = v6 + 16;
    uint64_t v14 = v16;
    uint64_t v17 = *(void *)(v15 + 56);
    while (1)
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v13 + 48) + v17 * v12, v5);
      sub_1D5A8FDA8((unint64_t *)&unk_1EA727F50, MEMORY[0x1E4F9EED0]);
      char v19 = sub_1D5AB4DD0();
      (*(void (**)(char *, uint64_t))(v15 - 8))(v8, v5);
      if (v19) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v29;
      uint64_t v13 = v18;
      if (((*(void *)(v30 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = 1;
        uint64_t v6 = v27;
        a2 = v28;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v21 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v21;
    uint64_t v32 = *v21;
    uint64_t *v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1D5A885D8(MEMORY[0x1E4F9EED0], &qword_1EA726AD0);
      uint64_t v23 = v32;
    }
    uint64_t v6 = v27;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v27 + 32))(v28, *(void *)(v23 + 48) + v17 * v12, v5);
    sub_1D5A8F04C(v12, MEMORY[0x1E4F9EED0], &qword_1EA725208, MEMORY[0x1E4F9EED0], MEMORY[0x1E4F9EED8]);
    uint64_t *v21 = v32;
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
}

uint64_t sub_1D5A8E5F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1D5AB40E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1D5A8FDA8((unint64_t *)&unk_1EA727F60, MEMORY[0x1E4F9E708]);
  swift_bridgeObjectRetain();
  uint64_t v31 = a1;
  uint64_t v10 = sub_1D5AB4D90();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = v9;
  uint64_t v30 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v26 = v2;
    uint64_t v27 = v6;
    uint64_t v28 = a2;
    uint64_t v29 = ~v11;
    int64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v15 = v6 + 16;
    uint64_t v14 = v16;
    uint64_t v17 = *(void *)(v15 + 56);
    while (1)
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v13 + 48) + v17 * v12, v5);
      sub_1D5A8FDA8(&qword_1EA726AC0, MEMORY[0x1E4F9E708]);
      char v19 = sub_1D5AB4DD0();
      (*(void (**)(char *, uint64_t))(v15 - 8))(v8, v5);
      if (v19) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v29;
      uint64_t v13 = v18;
      if (((*(void *)(v30 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = 1;
        uint64_t v6 = v27;
        a2 = v28;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v21 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v21;
    uint64_t v32 = *v21;
    uint64_t *v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1D5A885D8(MEMORY[0x1E4F9E708], (uint64_t *)&unk_1EA727F70);
      uint64_t v23 = v32;
    }
    uint64_t v6 = v27;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v27 + 32))(v28, *(void *)(v23 + 48) + v17 * v12, v5);
    sub_1D5A8F04C(v12, MEMORY[0x1E4F9E708], (unint64_t *)&unk_1EA727F60, MEMORY[0x1E4F9E708], MEMORY[0x1E4F9E710]);
    uint64_t *v21 = v32;
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
}

uint64_t sub_1D5A8E938@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1D5AB4900();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1D5A8FDA8(&qword_1EA7256C8, MEMORY[0x1E4F9EDF8]);
  swift_bridgeObjectRetain();
  uint64_t v31 = a1;
  uint64_t v10 = sub_1D5AB4D90();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = v9;
  uint64_t v30 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v26 = v2;
    uint64_t v27 = v6;
    uint64_t v28 = a2;
    uint64_t v29 = ~v11;
    int64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v15 = v6 + 16;
    uint64_t v14 = v16;
    uint64_t v17 = *(void *)(v15 + 56);
    while (1)
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v13 + 48) + v17 * v12, v5);
      sub_1D5A8FDA8(&qword_1EA727F80, MEMORY[0x1E4F9EDF8]);
      char v19 = sub_1D5AB4DD0();
      (*(void (**)(char *, uint64_t))(v15 - 8))(v8, v5);
      if (v19) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v29;
      uint64_t v13 = v18;
      if (((*(void *)(v30 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = 1;
        uint64_t v6 = v27;
        a2 = v28;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v21 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v21;
    uint64_t v32 = *v21;
    uint64_t *v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1D5A885D8(MEMORY[0x1E4F9EDF8], &qword_1EA726AB0);
      uint64_t v23 = v32;
    }
    uint64_t v6 = v27;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v27 + 32))(v28, *(void *)(v23 + 48) + v17 * v12, v5);
    sub_1D5A8F04C(v12, MEMORY[0x1E4F9EDF8], &qword_1EA7256C8, MEMORY[0x1E4F9EDF8], MEMORY[0x1E4F9EE00]);
    uint64_t *v21 = v32;
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
}

uint64_t sub_1D5A8EC78()
{
  uint64_t v1 = *v0;
  if ((*v0 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    char v2 = sub_1D5AB5760();
    swift_release();
    if (v2)
    {
      uint64_t v3 = sub_1D5A8EE80();
      swift_bridgeObjectRelease();
      return v3;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_1D5AB5C20();
  swift_bridgeObjectRetain();
  sub_1D5AB55C0();
  uint64_t v4 = sub_1D5AB5C60();
  uint64_t v5 = -1 << *(unsigned char *)(v1 + 32);
  unint64_t v6 = v4 & ~v5;
  if (((*(void *)(v1 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    goto LABEL_12;
  }
  sub_1D59E8AE0(0, (unint64_t *)&qword_1EBDE11C8);
  swift_retain();
  char v7 = sub_1D5AB55B0();
  swift_release();
  if ((v7 & 1) == 0)
  {
    uint64_t v8 = ~v5;
    do
    {
      unint64_t v6 = (v6 + 1) & v8;
      if (((*(void *)(v1 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_12;
      }
      swift_retain();
      char v9 = sub_1D5AB55B0();
      swift_release();
    }
    while ((v9 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *v0;
  uint64_t v13 = *v0;
  uint64_t *v0 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1D5A8842C();
    uint64_t v11 = v13;
  }
  uint64_t v3 = *(void *)(*(void *)(v11 + 48) + 8 * v6);
  sub_1D5A8F500(v6);
  uint64_t *v0 = v13;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1D5A8EE80()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D5AB5730();
  uint64_t v3 = swift_unknownObjectRetain();
  uint64_t v4 = sub_1D5A7F21C(v3, v2);
  uint64_t v13 = v4;
  sub_1D5AB5C20();
  swift_retain();
  sub_1D5AB55C0();
  uint64_t v5 = sub_1D5AB5C60();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if ((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    sub_1D59E8AE0(0, (unint64_t *)&qword_1EBDE11C8);
    swift_retain();
    char v8 = sub_1D5AB55B0();
    swift_release();
    if (v8)
    {
LABEL_6:
      swift_release();
      uint64_t v11 = *(void *)(*(void *)(v4 + 48) + 8 * v7);
      sub_1D5A8F500(v7);
      if (sub_1D5AB55B0())
      {
        *uint64_t v1 = v13;
        return v11;
      }
      __break(1u);
    }
    else
    {
      uint64_t v9 = ~v6;
      while (1)
      {
        unint64_t v7 = (v7 + 1) & v9;
        if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
          break;
        }
        swift_retain();
        char v10 = sub_1D5AB55B0();
        swift_release();
        if (v10) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1D5A8F04C(int64_t a1, uint64_t (*a2)(void), unint64_t *a3, void (*a4)(uint64_t), uint64_t a5)
{
  unint64_t v43 = a4;
  uint64_t v44 = a5;
  uint64_t v42 = a3;
  uint64_t v7 = a2(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t result = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v38 - v10;
  uint64_t v12 = *v5;
  uint64_t v13 = *v5 + 56;
  uint64_t v14 = -1 << *(unsigned char *)(*v5 + 32);
  unint64_t v15 = (a1 + 1) & ~v14;
  if (((1 << v15) & *(void *)(v13 + 8 * (v15 >> 6))) != 0)
  {
    uint64_t v38 = v5;
    uint64_t v16 = ~v14;
    swift_retain();
    uint64_t v17 = sub_1D5AB5700();
    uint64_t v18 = v12;
    if ((*(void *)(v13 + 8 * (v15 >> 6)) & (1 << v15)) != 0)
    {
      unint64_t v40 = (v17 + 1) & v16;
      uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      uint64_t v19 = v8 + 16;
      uint64_t v39 = v20;
      uint64_t v45 = *(void *)(v19 + 56);
      uint64_t v41 = v19;
      unint64_t v21 = (void (**)(char *, uint64_t))(v19 - 8);
      do
      {
        uint64_t v22 = v13;
        int64_t v23 = v45 * v15;
        v39(v11, *(void *)(v18 + 48) + v45 * v15, v7);
        uint64_t v24 = v18;
        sub_1D5A8FDA8(v42, v43);
        uint64_t v25 = sub_1D5AB4D90();
        (*v21)(v11, v7);
        unint64_t v26 = v25 & v16;
        if (a1 >= (uint64_t)v40)
        {
          if (v26 >= v40 && a1 >= (uint64_t)v26)
          {
LABEL_16:
            uint64_t v18 = v24;
            uint64_t v29 = *(void *)(v24 + 48);
            int64_t v30 = v45 * a1;
            unint64_t v31 = v29 + v45 * a1;
            unint64_t v32 = v29 + v23 + v45;
            if (v45 * a1 < v23 || v31 >= v32)
            {
              swift_arrayInitWithTakeFrontToBack();
              a1 = v15;
            }
            else
            {
              a1 = v15;
              if (v30 != v23)
              {
                swift_arrayInitWithTakeBackToFront();
                a1 = v15;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v26 >= v40 || a1 >= (uint64_t)v26)
        {
          goto LABEL_16;
        }
        uint64_t v18 = v24;
LABEL_5:
        unint64_t v15 = (v15 + 1) & v16;
        uint64_t v13 = v22;
      }
      while (((*(void *)(v22 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) != 0);
    }
    *(void *)(v13 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v5 = v38;
  }
  else
  {
    *(void *)(v13 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v34 = *v5;
  uint64_t v35 = *(void *)(*v5 + 16);
  BOOL v36 = __OFSUB__(v35, 1);
  uint64_t v37 = v35 - 1;
  if (v36)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v34 + 16) = v37;
    ++*(_DWORD *)(v34 + 36);
  }
  return result;
}

unint64_t sub_1D5A8F338(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1D5AB5700();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_1D5AB5C20();
        swift_bridgeObjectRetain();
        sub_1D5AB4E60();
        uint64_t v10 = sub_1D5AB5C60();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v2);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1D5A8F500(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1D5AB5700();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_1D5AB5C20();
        swift_retain();
        sub_1D5AB55C0();
        uint64_t v10 = sub_1D5AB5C60();
        swift_release();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (void *)(v12 + 8 * v2);
          uint64_t v14 = (void *)(v12 + 8 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_1D5A8F6C0(void *a1)
{
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC13SeymourClient9XPCServer_requiredEntitlements);
  uint64_t v6 = v5 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(v5 + 56);
  int64_t v25 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v10 = 0;
  if (!v9) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    BOOL v16 = (uint64_t *)(*(void *)(v5 + 48) + 16 * i);
    uint64_t v3 = *v16;
    unint64_t v2 = v16[1];
    swift_bridgeObjectRetain();
    uint64_t v17 = (void *)sub_1D5AB4DE0();
    id v18 = objc_msgSend(a1, sel_valueForEntitlement_, v17);

    if (v18)
    {
      sub_1D5AB56E0();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v27, 0, sizeof(v27));
    }
    sub_1D5A09640((uint64_t)v27, (uint64_t)v28);
    if (!v28[3]) {
      break;
    }
    if ((swift_dynamicCast() & 1) == 0 || (v26 & 1) == 0) {
      goto LABEL_28;
    }
    swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    if (v13 >= v25) {
      goto LABEL_33;
    }
    unint64_t v14 = *(void *)(v6 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v25) {
        goto LABEL_33;
      }
      unint64_t v14 = *(void *)(v6 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v25) {
          goto LABEL_33;
        }
        unint64_t v14 = *(void *)(v6 + 8 * v10);
        if (!v14)
        {
          int64_t v15 = v13 + 3;
          if (v15 >= v25)
          {
LABEL_33:
            swift_release();
            sub_1D5A795A8(a1);
            return 1;
          }
          unint64_t v14 = *(void *)(v6 + 8 * v15);
          if (!v14)
          {
            while (1)
            {
              int64_t v10 = v15 + 1;
              if (__OFADD__(v15, 1)) {
                goto LABEL_35;
              }
              if (v10 >= v25) {
                goto LABEL_33;
              }
              unint64_t v14 = *(void *)(v6 + 8 * v10);
              ++v15;
              if (v14) {
                goto LABEL_18;
              }
            }
          }
          int64_t v10 = v15;
        }
      }
    }
LABEL_18:
    unint64_t v9 = (v14 - 1) & v14;
  }
  sub_1D5A096A8((uint64_t)v28);
LABEL_28:
  if (qword_1EBDE5420 == -1) {
    goto LABEL_29;
  }
LABEL_36:
  swift_once();
LABEL_29:
  uint64_t v19 = sub_1D5AB4B50();
  __swift_project_value_buffer(v19, (uint64_t)qword_1EBDE5400);
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1D5AB4B30();
  os_log_type_t v21 = sub_1D5AB5410();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    v28[0] = v23;
    *(_DWORD *)uint64_t v22 = 141558274;
    *(void *)&v27[0] = 1752392040;
    sub_1D5AB5680();
    *(_WORD *)(v22 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)&v27[0] = sub_1D5951500(v3, v2, v28);
    sub_1D5AB5680();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D5947000, v20, v21, "Rejecting connection missing entitlement: %{mask.hash}s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D945AAC0](v23, -1, -1);
    MEMORY[0x1D945AAC0](v22, -1, -1);
    swift_release();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease_n();
  }

  return 0;
}

uint64_t sub_1D5A8FA98()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D5A8FAD0()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 25, 7);
}

uint64_t sub_1D5A8FB08()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D5A8FB18()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D5A8FB50()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDE4E30);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1D5A8FBFC()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t method lookup function for XPCServer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for XPCServer);
}

uint64_t dispatch thunk of static XPCServer.service(requiredEntitlements:queue:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of XPCServer.activate()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of XPCServer.deactivate()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t sub_1D5A8FCD0()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1D5A8FD0C()
{
  sub_1D5A79928(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), "XPC client connection (%{public}s) invalidated");
}

uint64_t objectdestroy_29Tm()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1D5A8FD80()
{
  sub_1D5A79928(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), "XPC client connection (%{public}s) interrupted");
}

uint64_t sub_1D5A8FDA8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t SessionActivated.init(session:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB4800();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

uint64_t SessionActivated.session.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB4800();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

void static SessionActivated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t getEnumTagSinglePayload for SessionActivated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D5A8FEF8);
}

uint64_t sub_1D5A8FEF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4800();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SessionActivated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D5A8FF78);
}

uint64_t sub_1D5A8FF78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4800();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SessionActivated()
{
  uint64_t result = qword_1EBDE4408;
  if (!qword_1EBDE4408) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t Collection<>.sortedByLastCompleted(calendar:)()
{
  return sub_1D5AB4F90();
}

uint64_t sub_1D5A90098(uint64_t a1, void (*a2)(char *, char *, char *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v69 = (char *)a3;
  uint64_t v70 = a2;
  uint64_t v62 = sub_1D5AB1D20();
  uint64_t v60 = *(void *)(v62 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v62);
  uint64_t v59 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v58 = (char *)&v57 - v10;
  uint64_t v11 = sub_1D5AB1CE0();
  uint64_t v67 = *(void **)(v11 - 8);
  uint64_t v68 = (char *)v11;
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v61 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v66 = (char *)&v57 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4380);
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  uint64_t v64 = (uint64_t)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v57 - v19;
  uint64_t v21 = MEMORY[0x1F4188790](v18);
  uint64_t v23 = (char *)&v57 - v22;
  MEMORY[0x1F4188790](v21);
  int64_t v25 = (char *)&v57 - v24;
  char v26 = *(void (**)(char *, uint64_t, uint64_t))(a6 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v28 = (uint64_t)v69;
  uint64_t v63 = a1;
  v26(v69, AssociatedTypeWitness, a6);
  uint64_t v65 = a6;
  v26((char *)v28, AssociatedTypeWitness, a6);
  uint64_t v29 = v67;
  uint64_t v69 = v23;
  sub_1D5A906F0((uint64_t)v23, (uint64_t)v20);
  int64_t v30 = (unsigned int (*)(char *, uint64_t, char *))v29[6];
  unint64_t v31 = v68;
  if (((unsigned int (*)(char *, uint64_t))v30)(v20, 1) == 1)
  {
    uint64_t v32 = v65;
    sub_1D59A9880((uint64_t)v20);
    if (v30(v25, 1, v31) == 1)
    {
      uint64_t v68 = v25;
      uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t))(v32 + 16);
      uint64_t v34 = AssociatedTypeWitness;
      uint64_t v35 = v33(AssociatedTypeWitness, v32);
      uint64_t v37 = v36;
      if (v35 == v33(AssociatedTypeWitness, v32) && v37 == v38)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v39 = v62;
LABEL_11:
        uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
        uint64_t v49 = v58;
        v48(v34, v32);
        uint64_t v50 = v59;
        v48(v34, v32);
        char v43 = MEMORY[0x1D94560F0](v49, v50);
        uint64_t v51 = *(void (**)(char *, uint64_t))(v60 + 8);
        v51(v50, v39);
        v51(v49, v39);
        int64_t v25 = v68;
        uint64_t v44 = (uint64_t)v69;
        goto LABEL_18;
      }
      char v47 = sub_1D5AB5AF0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v39 = v62;
      if (v47) {
        goto LABEL_11;
      }
      uint64_t v52 = v33(AssociatedTypeWitness, v32);
      uint64_t v54 = v53;
      if (v52 == v33(AssociatedTypeWitness, v32) && v54 == v55) {
        char v43 = 0;
      }
      else {
        char v43 = sub_1D5AB5AF0();
      }
      int64_t v25 = v68;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      char v43 = 0;
    }
LABEL_17:
    uint64_t v44 = (uint64_t)v69;
    goto LABEL_18;
  }
  unint64_t v40 = v66;
  uint64_t v41 = v31;
  uint64_t v70 = (void (*)(char *, char *, char *))v29[4];
  v70(v66, v20, v31);
  uint64_t v42 = v64;
  sub_1D5A906F0((uint64_t)v25, v64);
  if (v30((char *)v42, 1, v41) != 1)
  {
    uint64_t v45 = v61;
    v70(v61, (char *)v42, v41);
    char v43 = sub_1D5AB1C90();
    uint64_t v46 = (void (*)(char *, char *))v29[1];
    v46(v45, v41);
    v46(v40, v41);
    goto LABEL_17;
  }
  ((void (*)(char *, char *))v29[1])(v40, v41);
  sub_1D59A9880((uint64_t)v69);
  char v43 = 1;
  uint64_t v44 = v42;
LABEL_18:
  sub_1D59A9880(v44);
  sub_1D59A9880((uint64_t)v25);
  return v43 & 1;
}

uint64_t sub_1D5A90690(uint64_t a1, void (*a2)(char *, char *, char *))
{
  return sub_1D5A90098(a1, a2, v2[5], v2[2], v2[3], v2[4]) & 1;
}

uint64_t dispatch thunk of WorkoutPlanLastCompletedSortable.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of WorkoutPlanLastCompletedSortable.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of WorkoutPlanLastCompletedSortable.lastCompletedEndDate(calendar:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1D5A906F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4380);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5A90758()
{
  uint64_t v1 = sub_1D5AB3EF0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5AB3EE0();
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1D5AB4B50();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EBDE5400);
  v6._uint64_t countAndFlagsBits = 0xD000000000000077;
  v6._object = (void *)0x80000001D5ACB3A0;
  v7._object = (void *)0x80000001D5ACB420;
  v7._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  Logger.trace(file:function:)(v6, v7);
  uint64_t v8 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v14 = 111;
  uint64_t v10 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, void, void, void, void, uint64_t, uint64_t))(v8 + 32);
  uint64_t v11 = sub_1D5AB34D0();
  v10(&v14, v4, v1, v11, MEMORY[0x1E4F9E4D8], MEMORY[0x1E4F9E4E0], MEMORY[0x1E4F9D528], MEMORY[0x1E4F9D530], ObjectType, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

void *ServiceSubscriptionClient.__allocating_init(eventHub:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = objc_allocWithZone(MEMORY[0x1E4F29268]);
  id v7 = a3;
  uint64_t v8 = (void *)sub_1D5AB4DE0();
  id v9 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v8, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  uint64_t v10 = sub_1D59968E8(v9, v7);
  uint64_t v11 = *(void *)(v10 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 16));
  if (*(unsigned char *)(v10 + 48) == 1)
  {
    *(unsigned char *)(v10 + 48) = 2;
    objc_msgSend(*(id *)(v10 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  type metadata accessor for ServiceSubscriptionClient();
  uint64_t v12 = (void *)swift_allocObject();
  uint64_t v13 = swift_retain();
  __int16 v14 = sub_1D5A9147C(v13, a1, a2, v12);

  swift_release_n();
  return v14;
}

uint64_t ServiceSubscriptionClient.__allocating_init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5A90ABC(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D5A91650);
}

uint64_t type metadata accessor for ServiceSubscriptionClient()
{
  return self;
}

uint64_t ServiceSubscriptionClient.init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D5A90ABC(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D5A9156C);
}

uint64_t sub_1D5A90ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = a6(a1, a4, a5, v6, ObjectType, a2, a3);
  swift_unknownObjectRelease();
  return v14;
}

uint64_t sub_1D5A90B40()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1D5A90B98();
    return swift_release();
  }
  return result;
}

uint64_t sub_1D5A90B98()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725250);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v20 - v5;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE4E10);
  uint64_t v7 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  id v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A90758();
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1D5A91734;
  *(void *)(v11 + 24) = v10;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1D5A91774;
  *(void *)(v12 + 24) = v11;
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  unint64_t v13 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(v14 + v13, v4, v0);
  uint64_t v15 = (uint64_t (**)(uint64_t))(v14 + ((v2 + v13 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v15 = sub_1D5A91790;
  v15[1] = (uint64_t (*)(uint64_t))v12;
  sub_1D5AB4540();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  uint64_t v16 = v21;
  uint64_t v17 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_1D5AB45B0();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = 0;
  *(void *)(v18 + 24) = 0;
  v17(sub_1D59893E0, v18);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v16);
}

uint64_t sub_1D5A90EC0@<X0>(BOOL *a1@<X8>)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  uint64_t v3 = result;
  if (result)
  {
    uint64_t v4 = *(void *)(result + 48);
    swift_unknownObjectRetain();
    swift_release();
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v4 + 8))(ObjectType, &type metadata for ServiceSubscriptionUpdated, &protocol witness table for ServiceSubscriptionUpdated, ObjectType, v4);
    uint64_t result = swift_unknownObjectRelease();
  }
  *a1 = v3 == 0;
  return result;
}

uint64_t ServiceSubscriptionClient.deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t ServiceSubscriptionClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t ServiceSubscriptionClient.fetchServiceSubscription(with:)(uint64_t a1)
{
  if (qword_1EBDE5420 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D5AB4B50();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBDE5400);
  v4._uint64_t countAndFlagsBits = 0xD000000000000077;
  v4._object = (void *)0x80000001D5ACB3A0;
  v5._object = (void *)0x80000001D5ACB420;
  v5._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  Logger.trace(file:function:)(v4, v5);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  __int16 v12 = 111;
  uint64_t v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, void, void, void, void, uint64_t, uint64_t))(v6 + 32);
  uint64_t v9 = sub_1D5AB3EF0();
  uint64_t v10 = sub_1D5AB34D0();
  return v8(&v12, a1, v9, v10, MEMORY[0x1E4F9E4D8], MEMORY[0x1E4F9E4E0], MEMORY[0x1E4F9D528], MEMORY[0x1E4F9D530], ObjectType, v6);
}

uint64_t sub_1D5A9111C(uint64_t a1)
{
  return ServiceSubscriptionClient.fetchServiceSubscription(with:)(a1);
}

uint64_t sub_1D5A91140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D5979948(a1, (uint64_t)v7);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  sub_1D5950B78(v7, v5 + 32);
  swift_retain();
  return sub_1D5AB4540();
}

uint64_t sub_1D5A911D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D5AB34D0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  swift_retain();
  return sub_1D5AB4540();
}

uint64_t sub_1D5A91338(void (*a1)(uint64_t *), uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t), uint64_t a4, uint64_t a5)
{
  a3(&v8, a5);
  uint64_t v6 = v8;
  char v9 = 0;
  a1(&v8);
  return sub_1D5A2C4EC(v6, 0);
}

void *sub_1D5A913CC(uint64_t a1, void *(*a2)(uint64_t *__return_ptr))
{
  uint64_t result = a2(&v5);
  if (v5)
  {
    uint64_t v3 = sub_1D5AB23A0();
    sub_1D5A91A88();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v3 - 8) + 104))(v4, *MEMORY[0x1E4F9C400], v3);
    return (void *)swift_willThrow();
  }
  return result;
}

void *sub_1D5A9147C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[2] = a1;
  a4[3] = &protocol witness table for XPCClient;
  a4[4] = &protocol witness table for XPCClient;
  a4[5] = a2;
  a4[6] = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = a1;
  char v9 = 11;
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v9, (uint64_t)sub_1D5A91AE0, v7, ObjectType, (uint64_t)&protocol witness table for XPCClient);
  swift_release_n();
  swift_unknownObjectRelease();
  return a4;
}

void *sub_1D5A9156C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  a4[2] = a1;
  a4[3] = a6;
  a4[4] = a7;
  a4[5] = a2;
  a4[6] = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = a1;
  char v13 = 11;
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v13, (uint64_t)sub_1D5A91AE0, v11, ObjectType, a7);
  swift_release_n();
  swift_unknownObjectRelease();
  return a4;
}

void *sub_1D5A91650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  type metadata accessor for ServiceSubscriptionClient();
  char v13 = (void *)swift_allocObject();
  return sub_1D5A9156C(a1, a2, a3, v13, a5, a6, a7);
}

uint64_t method lookup function for ServiceSubscriptionClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ServiceSubscriptionClient);
}

uint64_t dispatch thunk of ServiceSubscriptionClient.__allocating_init(connection:eventHub:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1D5A916FC()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D5A91734@<X0>(BOOL *a1@<X8>)
{
  return sub_1D5A90EC0(a1);
}

uint64_t sub_1D5A9173C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void *sub_1D5A91774(uint64_t a1)
{
  return sub_1D5A913CC(a1, *(void *(**)(uint64_t *__return_ptr))(v1 + 16));
}

uint64_t sub_1D5A91790(uint64_t a1)
{
  return sub_1D5A911D8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1D5A91798()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA725250);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1D5A91844(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA725250) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v2 + v6;
  uint64_t v8 = (uint64_t *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  return sub_1D5986F80(a1, a2, v7, v9, v10);
}

uint64_t sub_1D5A918F8()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D5A91938()
{
  uint64_t v1 = sub_1D5AB34D0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D5A91A04(void (*a1)(uint64_t *), uint64_t a2)
{
  void (*v6)(uint64_t *__return_ptr, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t vars8;

  uint64_t v5 = *(void *)(sub_1D5AB34D0() - 8);
  uint64_t v6 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_1D5A91338(a1, a2, v6, v7, v8);
}

unint64_t sub_1D5A91A88()
{
  unint64_t result = qword_1EA7280A0;
  if (!qword_1EA7280A0)
  {
    sub_1D5AB23A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA7280A0);
  }
  return result;
}

uint64_t sub_1D5A91AE0()
{
  return sub_1D5A90B40();
}

uint64_t sub_1D5A91AE8()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 32);
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1D5A91B28(void (*a1)(uint64_t *), uint64_t a2)
{
  return sub_1D5A91338(a1, a2, *(void (**)(uint64_t *__return_ptr, uint64_t))(v2 + 16), *(void *)(v2 + 24), v2 + 32);
}

id AchievementProgressEnvironment.__allocating_init(cache:activePlanCompletedNumberOfWorkouts:activePlanTotalNumberOfWorkouts:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return AchievementProgressEnvironment.init(cache:activePlanCompletedNumberOfWorkouts:activePlanTotalNumberOfWorkouts:)(a1, a2, a3);
}

id AchievementProgressEnvironment.init(cache:activePlanCompletedNumberOfWorkouts:activePlanTotalNumberOfWorkouts:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE10D0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v3[OBJC_IVAR____TtC13SeymourClient30AchievementProgressEnvironment_bestEnergyBurnedOfWorkoutModality] = 0;
  v3[OBJC_IVAR____TtC13SeymourClient30AchievementProgressEnvironment_isSessionGuided] = 0;
  v3[OBJC_IVAR____TtC13SeymourClient30AchievementProgressEnvironment_isSessionCompletingProgram] = 0;
  uint64_t v10 = &v3[OBJC_IVAR____TtC13SeymourClient30AchievementProgressEnvironment_modalityIdentifier];
  *uint64_t v10 = 0;
  v10[1] = 0xE000000000000000;
  *(void *)&v3[OBJC_IVAR____TtC13SeymourClient30AchievementProgressEnvironment_sessionDuration] = 0;
  *(void *)&v3[OBJC_IVAR____TtC13SeymourClient30AchievementProgressEnvironment_sessionEnergyBurned] = 0;
  uint64_t v11 = v3;
  uint64_t v12 = sub_1D5AB3F50();
  char v13 = sub_1D5A92174(v12);
  swift_bridgeObjectRelease();
  *(void *)&v11[OBJC_IVAR____TtC13SeymourClient30AchievementProgressEnvironment_numberOfWorkoutsOver5MinutesForModalities] = v13;
  uint64_t v14 = sub_1D5AB3F70();
  uint64_t v15 = sub_1D5A92174(v14);
  swift_bridgeObjectRelease();
  *(void *)&v11[OBJC_IVAR____TtC13SeymourClient30AchievementProgressEnvironment_numberOfGuidedWorkoutsOver5MinutesForModalities] = v15;
  *(void *)&v11[OBJC_IVAR____TtC13SeymourClient30AchievementProgressEnvironment_numberOfWorkoutsOver5Minutes] = sub_1D5AB3F30();
  sub_1D5AB3F10();
  uint64_t v16 = sub_1D5AB3820();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 1, v16) == 1)
  {
    sub_1D5A92398((uint64_t)v9);
    uint64_t v18 = 0;
  }
  else
  {
    uint64_t v18 = sub_1D5AB3810();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v9, v16);
  }
  *(void *)&v11[OBJC_IVAR____TtC13SeymourClient30AchievementProgressEnvironment_currentWeeklyStreak] = v18;
  *(void *)&v11[OBJC_IVAR____TtC13SeymourClient30AchievementProgressEnvironment_longestWeeklyStreak] = sub_1D5AB3F20();
  *(void *)&v11[OBJC_IVAR____TtC13SeymourClient30AchievementProgressEnvironment_currentPlanCompletedNumberOfWorkouts] = a2;
  *(void *)&v11[OBJC_IVAR____TtC13SeymourClient30AchievementProgressEnvironment_currentPlanTotalNumberOfWorkouts] = a3;

  uint64_t v19 = (objc_class *)type metadata accessor for AchievementProgressEnvironment();
  v24.receiver = v11;
  v24.super_class = v19;
  id v20 = objc_msgSendSuper2(&v24, sel_init);
  uint64_t v21 = sub_1D5AB3F80();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(a1, v21);
  return v20;
}

id sub_1D5A91EDC(uint64_t a1)
{
  return sub_1D5A91F54(a1, &OBJC_IVAR____TtC13SeymourClient30AchievementProgressEnvironment_numberOfGuidedWorkoutsOver5MinutesForModalities);
}

id sub_1D5A91F48(uint64_t a1)
{
  return sub_1D5A91F54(a1, &OBJC_IVAR____TtC13SeymourClient30AchievementProgressEnvironment_numberOfWorkoutsOver5MinutesForModalities);
}

id sub_1D5A91F54(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(v2 + *a2);
  uint64_t v4 = sub_1D5AB4DF0();
  if (*(void *)(v3 + 16) && (unint64_t v6 = sub_1D5952584(v4, v5), (v7 & 1) != 0))
  {
    id v8 = *(id *)(*(void *)(v3 + 56) + 8 * v6);
    swift_bridgeObjectRelease();
    return v8;
  }
  else
  {
    swift_bridgeObjectRelease();
    id v10 = objc_allocWithZone(NSNumber);
    return objc_msgSend(v10, sel_initWithInteger_, 0);
  }
}

id AchievementProgressEnvironment.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void AchievementProgressEnvironment.init()()
{
}

id AchievementProgressEnvironment.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AchievementProgressEnvironment();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void *sub_1D5A92174(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE1208);
  unint64_t result = (void *)sub_1D5AB5990();
  uint64_t v3 = result;
  int64_t v4 = 0;
  uint64_t v28 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v6 = a1 + 64;
  uint64_t v5 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v6 - 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v5;
  uint64_t v25 = v6;
  int64_t v26 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v27 = (char *)(result + 8);
  if ((v9 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    uint64_t v16 = (uint64_t *)(*(void *)(v28 + 48) + 16 * i);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    uint64_t v19 = *(void *)(*(void *)(v28 + 56) + 8 * i);
    id v20 = objc_allocWithZone(NSNumber);
    swift_bridgeObjectRetain();
    unint64_t result = objc_msgSend(v20, sel_initWithInteger_, v19);
    *(void *)&v27[(i >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << i;
    uint64_t v21 = (void *)(v3[6] + 16 * i);
    void *v21 = v17;
    v21[1] = v18;
    *(void *)(v3[7] + 8 * i) = result;
    uint64_t v22 = v3[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v24;
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v13 >= v26) {
      return v3;
    }
    unint64_t v14 = *(void *)(v25 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v26) {
        return v3;
      }
      unint64_t v14 = *(void *)(v25 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v26) {
          return v3;
        }
        unint64_t v14 = *(void *)(v25 + 8 * v4);
        if (!v14) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v10 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v26) {
    return v3;
  }
  unint64_t v14 = *(void *)(v25 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v26) {
      return v3;
    }
    unint64_t v14 = *(void *)(v25 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1D5A92398(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE10D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for AchievementProgressEnvironment()
{
  return self;
}

uint64_t method lookup function for AchievementProgressEnvironment(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AchievementProgressEnvironment);
}

uint64_t dispatch thunk of AchievementProgressEnvironment.__allocating_init(cache:activePlanCompletedNumberOfWorkouts:activePlanTotalNumberOfWorkouts:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of MultiUserClientProtocol.willBeginActivity(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of MultiUserClientProtocol.waitForSession(activity:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of MultiUserClientProtocol.joinActivity()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of MultiUserClientProtocol.leaveActivity(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of MultiUserClientProtocol.terminateActivity(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of MultiUserClientProtocol.queryJoinedActivity()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of MultiUserClientProtocol.launchActivityApplication(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of MultiUserClientProtocol.sendMediaPlayerSyncUpdate(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of MultiUserClientProtocol.handleMediaPlayerSyncAnnouncement(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of MultiUserClientProtocol.sendCelebrationType(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of MultiUserClientProtocol.requestMediaPlayerCatchup()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of MultiUserClientProtocol.queryUserIdentity()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

BOOL SessionOrigin.isLocal.getter()
{
  uint64_t v1 = type metadata accessor for SessionOrigin();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A92668(v0, (uint64_t)v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = sub_1D5AB4800();
    (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v3, v5);
  }
  else
  {
    sub_1D5A926CC((uint64_t)v3);
  }
  return EnumCaseMultiPayload != 1;
}

uint64_t type metadata accessor for SessionOrigin()
{
  uint64_t result = qword_1EBDE3028;
  if (!qword_1EBDE3028) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D5A92668(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SessionOrigin();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5A926CC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SessionOrigin();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t SessionOrigin.token.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D5AB4800();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SessionOrigin();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A92668(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() != 1) {
    return *(void *)v8;
  }
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
  uint64_t v9 = sub_1D5AB4610();
  uint64_t v11 = v10;
  type metadata accessor for SessionToken();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v9;
  *(void *)(v12 + 24) = v11;
  *(unsigned char *)(v12 + 32) = 0;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v12;
}

uint64_t SessionOrigin.sessionIdentifier.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D5AB4800();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SessionOrigin();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D5A92668(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    uint64_t v9 = sub_1D5AB4610();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    uint64_t v9 = *(void *)(*(void *)v8 + 16);
    swift_bridgeObjectRetain();
    swift_release();
  }
  return v9;
}

uint64_t SessionOrigin.hash(into:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D5AB4800();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SessionOrigin();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (void *)((char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D5A92668(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1D5AB5C30();
    sub_1D5A93110(&qword_1EA728110, MEMORY[0x1E4F9ED38]);
    sub_1D5AB4DA0();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    uint64_t v10 = *v8;
    sub_1D5AB5C30();
    uint64_t v11 = *(void *)(v10 + 24);
    v12[0] = *(void *)(v10 + 16);
    v12[1] = v11;
    swift_bridgeObjectRetain();
    sub_1D5AB4E90();
    swift_bridgeObjectRelease();
    sub_1D5AB4F10();
    swift_bridgeObjectRelease();
    sub_1D5AB5C30();
    return swift_release();
  }
}

uint64_t SessionOrigin.hashValue.getter()
{
  return sub_1D5AB5C60();
}

uint64_t sub_1D5A92CC0()
{
  return sub_1D5AB5C60();
}

uint64_t sub_1D5A92D04()
{
  return sub_1D5AB5C60();
}

uint64_t _s13SeymourClient13SessionOriginO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB4800();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SessionOrigin();
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  int64_t v13 = (uint64_t *)((char *)&v32 - v12);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA728120);
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (uint64_t)&v17[*(int *)(v15 + 56)];
  sub_1D5A92668(a1, (uint64_t)v17);
  sub_1D5A92668(a2, v18);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1D5A92668((uint64_t)v17, (uint64_t)v13);
    uint64_t v21 = *v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_release();
LABEL_7:
      sub_1D5A93670((uint64_t)v17);
LABEL_8:
      char v19 = 0;
      return v19 & 1;
    }
    uint64_t v23 = *(void *)v18;
    if (*(unsigned char *)(v21 + 32)) {
      uint64_t v24 = 0x6576697463616E69;
    }
    else {
      uint64_t v24 = 0x657669746361;
    }
    if (*(unsigned char *)(v21 + 32)) {
      unint64_t v25 = 0xE800000000000000;
    }
    else {
      unint64_t v25 = 0xE600000000000000;
    }
    if (*(unsigned char *)(*(void *)v18 + 32)) {
      uint64_t v26 = 0x6576697463616E69;
    }
    else {
      uint64_t v26 = 0x657669746361;
    }
    if (*(unsigned char *)(*(void *)v18 + 32)) {
      unint64_t v27 = 0xE800000000000000;
    }
    else {
      unint64_t v27 = 0xE600000000000000;
    }
    if (v24 == v26 && v25 == v27)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v29 = sub_1D5AB5AF0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v29 & 1) == 0)
      {
        swift_release();
        swift_release();
LABEL_34:
        sub_1D5A926CC((uint64_t)v17);
        goto LABEL_8;
      }
    }
    if (*(void *)(v21 + 16) == *(void *)(v23 + 16) && *(void *)(v21 + 24) == *(void *)(v23 + 24))
    {
      swift_release();
      swift_release();
    }
    else
    {
      char v31 = sub_1D5AB5AF0();
      swift_release();
      swift_release();
      if ((v31 & 1) == 0) {
        goto LABEL_34;
      }
    }
    sub_1D5A926CC((uint64_t)v17);
    char v19 = 1;
    return v19 & 1;
  }
  sub_1D5A92668((uint64_t)v17, (uint64_t)v11);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
    goto LABEL_7;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v18, v4);
  char v19 = MEMORY[0x1D9458BA0](v11, v7);
  id v20 = *(void (**)(char *, uint64_t))(v5 + 8);
  v20(v7, v4);
  v20(v11, v4);
  sub_1D5A926CC((uint64_t)v17);
  return v19 & 1;
}

uint64_t sub_1D5A930C8()
{
  return sub_1D5A93110(&qword_1EA728118, (void (*)(uint64_t))type metadata accessor for SessionOrigin);
}

uint64_t sub_1D5A93110(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SessionOrigin(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1D5AB4800();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for SessionOrigin(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_1D5AB4800();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_release();
  }
}

void *initializeWithCopy for SessionOrigin(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1D5AB4800();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for SessionOrigin(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1D5A926CC((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_1D5AB4800();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for SessionOrigin(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1D5AB4800();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for SessionOrigin(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1D5A926CC((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1D5AB4800();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1D5A935D8()
{
  uint64_t result = sub_1D5AB4800();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1D5A93670(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA728120);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static BagKey.addFundsURL.getter()
{
  return 0x73646E7546646441;
}

uint64_t static BagKey.countryCode.getter()
{
  return 0x437972746E756F63;
}

unint64_t static BagKey.mediaHost.getter()
{
  return 0xD000000000000012;
}

unint64_t static BagKey.fitnessPlusEnabled.getter()
{
  return 0xD000000000000012;
}

uint64_t static BagKey.fpsCert.getter()
{
  return 0x747265632D737066;
}

uint64_t static BagKey.jetPackHost.getter()
{
  return 0x752D7070612D736ALL;
}

uint64_t static BagKey.languageTag.getter()
{
  return 0x65676175676E616CLL;
}

unint64_t static BagKey.processRedirectURLEndpoint.getter()
{
  return 0xD00000000000001BLL;
}

unint64_t static BagKey.processRedirectURLQueryParameters.getter()
{
  return 0xD000000000000029;
}

unint64_t static BagKey.syncBackOffIntervalMinutes.getter()
{
  return 0xD000000000000021;
}

unint64_t static BagKey.syncTokenIntervalMinutes.getter()
{
  return 0xD000000000000018;
}

unint64_t static BagKey.workoutLicenseOfflineStart.getter()
{
  return 0xD00000000000001DLL;
}

unint64_t static BagKey.workoutLicenseOfflineStop.getter()
{
  return 0xD00000000000001CLL;
}

unint64_t static BagKey.workoutLicenseOfflineStopNonce.getter()
{
  return 0xD000000000000024;
}

unint64_t static BagKey.workoutLicenseStreamingStart.getter()
{
  return 0xD00000000000001FLL;
}

unint64_t static BagKey.workoutLicenseStreamingRenew.getter()
{
  return 0xD00000000000001FLL;
}

unint64_t static BagKey.workoutLicenseStreamingStop.getter()
{
  return 0xD00000000000001ELL;
}

ValueMetadata *type metadata accessor for BagKey()
{
  return &type metadata for BagKey;
}

uint64_t Error.errorCodeString.getter(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v8((char *)v16 - v9, v1, a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE1100);
  if (swift_dynamicCast())
  {
    sub_1D5950B78(v16, (uint64_t)v18);
    uint64_t v10 = v19;
    uint64_t v11 = v20;
    __swift_project_boxed_opaque_existential_1(v18, v19);
    uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
    uint64_t v14 = v13;
    v8(v7, v2, a1);
    if (!v14)
    {
      *(void *)&v16[0] = sub_1D5AB5B80();
      uint64_t v12 = sub_1D5AB5AB0();
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a1);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
  }
  else
  {
    uint64_t v17 = 0;
    memset(v16, 0, sizeof(v16));
    sub_1D5A93AF0((uint64_t)v16);
    v18[0] = sub_1D5AB5B80();
    return sub_1D5AB5AB0();
  }
  return v12;
}

uint64_t sub_1D5A93AF0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE1398);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Error.errorDomainString.getter(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v8((char *)v16 - v9, v1, a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDE1100);
  if (swift_dynamicCast())
  {
    sub_1D5950B78(v16, (uint64_t)v18);
    uint64_t v10 = v19;
    uint64_t v11 = v20;
    __swift_project_boxed_opaque_existential_1(v18, v19);
    uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
    uint64_t v14 = v13;
    v8(v7, v2, a1);
    if (!v14) {
      uint64_t v12 = sub_1D5AB5B90();
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a1);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
  }
  else
  {
    uint64_t v17 = 0;
    memset(v16, 0, sizeof(v16));
    sub_1D5A93AF0((uint64_t)v16);
    return sub_1D5AB5B90();
  }
  return v12;
}

void static ThreeRingsCompleted.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for ThreeRingsCompleted()
{
  return &type metadata for ThreeRingsCompleted;
}

uint64_t UserBodyMassMetricUpdated.userBodyMassMetric.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB3250();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t UserBodyMassMetricUpdated.init(userBodyMassMetric:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB3250();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static UserBodyMassMetricUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for UserBodyMassMetricUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3250();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for UserBodyMassMetricUpdated(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB3250();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for UserBodyMassMetricUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3250();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for UserBodyMassMetricUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3250();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for UserBodyMassMetricUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3250();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for UserBodyMassMetricUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3250();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for UserBodyMassMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D5A940C0);
}

uint64_t sub_1D5A940C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3250();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for UserBodyMassMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D5A94140);
}

uint64_t sub_1D5A94140(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB3250();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for UserBodyMassMetricUpdated()
{
  uint64_t result = qword_1EA728128;
  if (!qword_1EA728128) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D5A941FC()
{
  uint64_t result = sub_1D5AB3250();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t OpenLinkAction.rawValue.getter(char a1)
{
  unint64_t result = 0x6E6974656B72616DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x726F777472617473;
      break;
    case 2:
      unint64_t result = 0x65735569746C756DLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D5A94330(unsigned __int8 *a1, unsigned char *a2)
{
  unint64_t v2 = 0xE900000000000067;
  uint64_t v3 = 0x6E6974656B72616DLL;
  uint64_t v4 = *a1;
  unint64_t v5 = 0xE900000000000067;
  unint64_t v6 = 0x6E6974656B72616DLL;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0x726F777472617473;
      unint64_t v5 = 0xEC00000074756F6BLL;
      break;
    case 2:
      unint64_t v6 = 0x65735569746C756DLL;
      unint64_t v5 = 0xE900000000000072;
      break;
    case 3:
      unint64_t v5 = 0x80000001D5AC51B0;
      unint64_t v6 = 0xD000000000000014;
      break;
    default:
      break;
  }
  switch(*a2)
  {
    case 1:
      unint64_t v2 = 0xEC00000074756F6BLL;
      if (v6 == 0x726F777472617473) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v3 = 0x65735569746C756DLL;
      unint64_t v2 = 0xE900000000000072;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0x80000001D5AC51B0;
      if (v6 == 0xD000000000000014) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v6 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v5 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1D5AB5AF0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D5A944E4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s13SeymourClient14OpenLinkActionO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_1D5A94514(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE900000000000067;
  uint64_t v3 = 0x6E6974656B72616DLL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEC00000074756F6BLL;
      uint64_t v3 = 0x726F777472617473;
      goto LABEL_3;
    case 2:
      *a1 = 0x65735569746C756DLL;
      a1[1] = 0xE900000000000072;
      break;
    case 3:
      *a1 = 0xD000000000000014;
      a1[1] = 0x80000001D5AC51B0;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1D5A945C0()
{
  return sub_1D5AB5010();
}

uint64_t sub_1D5A94620()
{
  return sub_1D5AB4FF0();
}

uint64_t sub_1D5A94670()
{
  return sub_1D5AB5C60();
}

uint64_t sub_1D5A9475C()
{
  sub_1D5AB4E60();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5A94830()
{
  return sub_1D5AB5C60();
}

uint64_t _s13SeymourClient14OpenLinkActionO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_1D5AB5A40();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

unint64_t sub_1D5A94968()
{
  unint64_t result = qword_1EA728138;
  if (!qword_1EA728138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA728138);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for OpenLinkAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D5A94A88);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OpenLinkAction()
{
  return &type metadata for OpenLinkAction;
}

unint64_t sub_1D5A94AC0()
{
  unint64_t result = qword_1EA728140;
  if (!qword_1EA728140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA728140);
  }
  return result;
}

uint64_t PlaybackIntentUpdated.playbackIntent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D5AB2B30();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t PlaybackIntentUpdated.init(playbackIntent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D5AB2B30();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

void static PlaybackIntentUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for PlaybackIntentUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2B30();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for PlaybackIntentUpdated(uint64_t a1)
{
  uint64_t v2 = sub_1D5AB2B30();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for PlaybackIntentUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2B30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for PlaybackIntentUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2B30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for PlaybackIntentUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2B30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for PlaybackIntentUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2B30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaybackIntentUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D5A94E6C);
}

uint64_t sub_1D5A94E6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2B30();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for PlaybackIntentUpdated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D5A94EEC);
}

uint64_t sub_1D5A94EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D5AB2B30();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for PlaybackIntentUpdated()
{
  uint64_t result = qword_1EA728148;
  if (!qword_1EA728148) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D5A94FA8()
{
  uint64_t result = sub_1D5AB2B30();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t AssetClientProtocol.fetchImageData(remoteURL:priority:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 240))(a1, a2, 1, 1, a3, a4);
}

uint64_t AssetClientProtocol.fetchImageData(remoteURL:priority:pixelWidth:pixelHeight:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = sub_1D5AB4910();
  uint64_t v15 = v14;
  uint64_t v16 = sub_1D5AB4920();
  char v19 = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t))(a7 + 248))(a1, a2, a3, a4, a5, v13, v15, v16, v17, 1, v19, a6, a7);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t dispatch thunk of AssetClientProtocol.deleteAllAssets()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AssetClientProtocol.requestAssetBundleOnCurrentDevice(workoutIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of AssetClientProtocol.requestAssetBundleOnActivePairedDevice(workoutIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of AssetClientProtocol.pauseAssetBundleOnCurrentDevice(workoutIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of AssetClientProtocol.pauseAssetBundleOnActivePairedDevice(workoutIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of AssetClientProtocol.cancelAssetRequest(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of AssetClientProtocol.cancelAssetBundleOnCurrentDevice(workoutIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of AssetClientProtocol.cancelAssetBundleOnActivePairedDevice(workoutIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of AssetClientProtocol.failAssetEntry(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of AssetClientProtocol.loadIncompleteAssetBundles()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of AssetClientProtocol.prefetchAssetBundles()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of AssetClientProtocol.renewKeys()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of AssetClientProtocol.validateAssets()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of AssetClientProtocol.queryCompletedAssetBundlesOnCurrentDevice()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of AssetClientProtocol.queryCompletedAssetBundleCountOnCurrentDevice()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of AssetClientProtocol.queryCompletedAssetBundlesOnActivePairedDevice()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of AssetClientProtocol.queryAssetBundles(workoutIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 136))();
}

uint64_t dispatch thunk of AssetClientProtocol.queryAllAssetEntries()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of AssetClientProtocol.queryAllAssetRequests()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of AssetClientProtocol.queryAllAssetResumableLoads()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}